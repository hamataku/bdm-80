
bdm-80-io.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00025ff0  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000031dc  08026180  08026180  00036180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000023ee  0802935c  0802935c  0003935c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000054  0802b74c  0802b74c  0003b74c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000330  0802b7a0  0802b7a0  0003b7a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00043fbc  0802bad0  0802bad0  0003bad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806fa8c  0806fa8c  00098000  2**0
                  CONTENTS
  8 .ARM          00000008  0806fa8c  0806fa8c  0007fa8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806fa94  0806fa94  00098000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0806fa94  0806fa94  0007fa94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0806faac  0806faac  0007faac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000254  20000000  0806fab0  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .noinit       00000004  20000254  0806fd04  00080254  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 .ccmram       00008000  10000000  0806fd08  00090000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00013d80  20000258  20000258  000a0258  2**2
                  ALLOC
 16 ._user_heap_stack 00006000  20013fd8  20013fd8  000a0258  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00098000  2**0
                  CONTENTS, READONLY
 18 .debug_info   00140633  00000000  00000000  00098030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001cb64  00000000  00000000  001d8663  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002d80  00000000  00000000  001f51c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 000121e8  00000000  00000000  001f7f48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00034040  00000000  00000000  0020a130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0006f425  00000000  00000000  0023e170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000f358a  00000000  00000000  002ad595  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000d2  00000000  00000000  003a0b1f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008ac0  00000000  00000000  003a0bf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_loc    0005f65c  00000000  00000000  003a96b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000258 	.word	0x20000258
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08026168 	.word	0x08026168

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000025c 	.word	0x2000025c
 80001cc:	08026168 	.word	0x08026168

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b96e 	b.w	8000564 <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9d08      	ldr	r5, [sp, #32]
 80002a6:	4604      	mov	r4, r0
 80002a8:	468c      	mov	ip, r1
 80002aa:	2b00      	cmp	r3, #0
 80002ac:	f040 8083 	bne.w	80003b6 <__udivmoddi4+0x116>
 80002b0:	428a      	cmp	r2, r1
 80002b2:	4617      	mov	r7, r2
 80002b4:	d947      	bls.n	8000346 <__udivmoddi4+0xa6>
 80002b6:	fab2 f282 	clz	r2, r2
 80002ba:	b142      	cbz	r2, 80002ce <__udivmoddi4+0x2e>
 80002bc:	f1c2 0020 	rsb	r0, r2, #32
 80002c0:	fa24 f000 	lsr.w	r0, r4, r0
 80002c4:	4091      	lsls	r1, r2
 80002c6:	4097      	lsls	r7, r2
 80002c8:	ea40 0c01 	orr.w	ip, r0, r1
 80002cc:	4094      	lsls	r4, r2
 80002ce:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80002d2:	0c23      	lsrs	r3, r4, #16
 80002d4:	fbbc f6f8 	udiv	r6, ip, r8
 80002d8:	fa1f fe87 	uxth.w	lr, r7
 80002dc:	fb08 c116 	mls	r1, r8, r6, ip
 80002e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002e4:	fb06 f10e 	mul.w	r1, r6, lr
 80002e8:	4299      	cmp	r1, r3
 80002ea:	d909      	bls.n	8000300 <__udivmoddi4+0x60>
 80002ec:	18fb      	adds	r3, r7, r3
 80002ee:	f106 30ff 	add.w	r0, r6, #4294967295
 80002f2:	f080 8119 	bcs.w	8000528 <__udivmoddi4+0x288>
 80002f6:	4299      	cmp	r1, r3
 80002f8:	f240 8116 	bls.w	8000528 <__udivmoddi4+0x288>
 80002fc:	3e02      	subs	r6, #2
 80002fe:	443b      	add	r3, r7
 8000300:	1a5b      	subs	r3, r3, r1
 8000302:	b2a4      	uxth	r4, r4
 8000304:	fbb3 f0f8 	udiv	r0, r3, r8
 8000308:	fb08 3310 	mls	r3, r8, r0, r3
 800030c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000310:	fb00 fe0e 	mul.w	lr, r0, lr
 8000314:	45a6      	cmp	lr, r4
 8000316:	d909      	bls.n	800032c <__udivmoddi4+0x8c>
 8000318:	193c      	adds	r4, r7, r4
 800031a:	f100 33ff 	add.w	r3, r0, #4294967295
 800031e:	f080 8105 	bcs.w	800052c <__udivmoddi4+0x28c>
 8000322:	45a6      	cmp	lr, r4
 8000324:	f240 8102 	bls.w	800052c <__udivmoddi4+0x28c>
 8000328:	3802      	subs	r0, #2
 800032a:	443c      	add	r4, r7
 800032c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000330:	eba4 040e 	sub.w	r4, r4, lr
 8000334:	2600      	movs	r6, #0
 8000336:	b11d      	cbz	r5, 8000340 <__udivmoddi4+0xa0>
 8000338:	40d4      	lsrs	r4, r2
 800033a:	2300      	movs	r3, #0
 800033c:	e9c5 4300 	strd	r4, r3, [r5]
 8000340:	4631      	mov	r1, r6
 8000342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000346:	b902      	cbnz	r2, 800034a <__udivmoddi4+0xaa>
 8000348:	deff      	udf	#255	; 0xff
 800034a:	fab2 f282 	clz	r2, r2
 800034e:	2a00      	cmp	r2, #0
 8000350:	d150      	bne.n	80003f4 <__udivmoddi4+0x154>
 8000352:	1bcb      	subs	r3, r1, r7
 8000354:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000358:	fa1f f887 	uxth.w	r8, r7
 800035c:	2601      	movs	r6, #1
 800035e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000362:	0c21      	lsrs	r1, r4, #16
 8000364:	fb0e 331c 	mls	r3, lr, ip, r3
 8000368:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800036c:	fb08 f30c 	mul.w	r3, r8, ip
 8000370:	428b      	cmp	r3, r1
 8000372:	d907      	bls.n	8000384 <__udivmoddi4+0xe4>
 8000374:	1879      	adds	r1, r7, r1
 8000376:	f10c 30ff 	add.w	r0, ip, #4294967295
 800037a:	d202      	bcs.n	8000382 <__udivmoddi4+0xe2>
 800037c:	428b      	cmp	r3, r1
 800037e:	f200 80e9 	bhi.w	8000554 <__udivmoddi4+0x2b4>
 8000382:	4684      	mov	ip, r0
 8000384:	1ac9      	subs	r1, r1, r3
 8000386:	b2a3      	uxth	r3, r4
 8000388:	fbb1 f0fe 	udiv	r0, r1, lr
 800038c:	fb0e 1110 	mls	r1, lr, r0, r1
 8000390:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000394:	fb08 f800 	mul.w	r8, r8, r0
 8000398:	45a0      	cmp	r8, r4
 800039a:	d907      	bls.n	80003ac <__udivmoddi4+0x10c>
 800039c:	193c      	adds	r4, r7, r4
 800039e:	f100 33ff 	add.w	r3, r0, #4294967295
 80003a2:	d202      	bcs.n	80003aa <__udivmoddi4+0x10a>
 80003a4:	45a0      	cmp	r8, r4
 80003a6:	f200 80d9 	bhi.w	800055c <__udivmoddi4+0x2bc>
 80003aa:	4618      	mov	r0, r3
 80003ac:	eba4 0408 	sub.w	r4, r4, r8
 80003b0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003b4:	e7bf      	b.n	8000336 <__udivmoddi4+0x96>
 80003b6:	428b      	cmp	r3, r1
 80003b8:	d909      	bls.n	80003ce <__udivmoddi4+0x12e>
 80003ba:	2d00      	cmp	r5, #0
 80003bc:	f000 80b1 	beq.w	8000522 <__udivmoddi4+0x282>
 80003c0:	2600      	movs	r6, #0
 80003c2:	e9c5 0100 	strd	r0, r1, [r5]
 80003c6:	4630      	mov	r0, r6
 80003c8:	4631      	mov	r1, r6
 80003ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ce:	fab3 f683 	clz	r6, r3
 80003d2:	2e00      	cmp	r6, #0
 80003d4:	d14a      	bne.n	800046c <__udivmoddi4+0x1cc>
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d302      	bcc.n	80003e0 <__udivmoddi4+0x140>
 80003da:	4282      	cmp	r2, r0
 80003dc:	f200 80b8 	bhi.w	8000550 <__udivmoddi4+0x2b0>
 80003e0:	1a84      	subs	r4, r0, r2
 80003e2:	eb61 0103 	sbc.w	r1, r1, r3
 80003e6:	2001      	movs	r0, #1
 80003e8:	468c      	mov	ip, r1
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	d0a8      	beq.n	8000340 <__udivmoddi4+0xa0>
 80003ee:	e9c5 4c00 	strd	r4, ip, [r5]
 80003f2:	e7a5      	b.n	8000340 <__udivmoddi4+0xa0>
 80003f4:	f1c2 0320 	rsb	r3, r2, #32
 80003f8:	fa20 f603 	lsr.w	r6, r0, r3
 80003fc:	4097      	lsls	r7, r2
 80003fe:	fa01 f002 	lsl.w	r0, r1, r2
 8000402:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000406:	40d9      	lsrs	r1, r3
 8000408:	4330      	orrs	r0, r6
 800040a:	0c03      	lsrs	r3, r0, #16
 800040c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000410:	fa1f f887 	uxth.w	r8, r7
 8000414:	fb0e 1116 	mls	r1, lr, r6, r1
 8000418:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800041c:	fb06 f108 	mul.w	r1, r6, r8
 8000420:	4299      	cmp	r1, r3
 8000422:	fa04 f402 	lsl.w	r4, r4, r2
 8000426:	d909      	bls.n	800043c <__udivmoddi4+0x19c>
 8000428:	18fb      	adds	r3, r7, r3
 800042a:	f106 3cff 	add.w	ip, r6, #4294967295
 800042e:	f080 808d 	bcs.w	800054c <__udivmoddi4+0x2ac>
 8000432:	4299      	cmp	r1, r3
 8000434:	f240 808a 	bls.w	800054c <__udivmoddi4+0x2ac>
 8000438:	3e02      	subs	r6, #2
 800043a:	443b      	add	r3, r7
 800043c:	1a5b      	subs	r3, r3, r1
 800043e:	b281      	uxth	r1, r0
 8000440:	fbb3 f0fe 	udiv	r0, r3, lr
 8000444:	fb0e 3310 	mls	r3, lr, r0, r3
 8000448:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800044c:	fb00 f308 	mul.w	r3, r0, r8
 8000450:	428b      	cmp	r3, r1
 8000452:	d907      	bls.n	8000464 <__udivmoddi4+0x1c4>
 8000454:	1879      	adds	r1, r7, r1
 8000456:	f100 3cff 	add.w	ip, r0, #4294967295
 800045a:	d273      	bcs.n	8000544 <__udivmoddi4+0x2a4>
 800045c:	428b      	cmp	r3, r1
 800045e:	d971      	bls.n	8000544 <__udivmoddi4+0x2a4>
 8000460:	3802      	subs	r0, #2
 8000462:	4439      	add	r1, r7
 8000464:	1acb      	subs	r3, r1, r3
 8000466:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800046a:	e778      	b.n	800035e <__udivmoddi4+0xbe>
 800046c:	f1c6 0c20 	rsb	ip, r6, #32
 8000470:	fa03 f406 	lsl.w	r4, r3, r6
 8000474:	fa22 f30c 	lsr.w	r3, r2, ip
 8000478:	431c      	orrs	r4, r3
 800047a:	fa20 f70c 	lsr.w	r7, r0, ip
 800047e:	fa01 f306 	lsl.w	r3, r1, r6
 8000482:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000486:	fa21 f10c 	lsr.w	r1, r1, ip
 800048a:	431f      	orrs	r7, r3
 800048c:	0c3b      	lsrs	r3, r7, #16
 800048e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000492:	fa1f f884 	uxth.w	r8, r4
 8000496:	fb0e 1119 	mls	r1, lr, r9, r1
 800049a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800049e:	fb09 fa08 	mul.w	sl, r9, r8
 80004a2:	458a      	cmp	sl, r1
 80004a4:	fa02 f206 	lsl.w	r2, r2, r6
 80004a8:	fa00 f306 	lsl.w	r3, r0, r6
 80004ac:	d908      	bls.n	80004c0 <__udivmoddi4+0x220>
 80004ae:	1861      	adds	r1, r4, r1
 80004b0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004b4:	d248      	bcs.n	8000548 <__udivmoddi4+0x2a8>
 80004b6:	458a      	cmp	sl, r1
 80004b8:	d946      	bls.n	8000548 <__udivmoddi4+0x2a8>
 80004ba:	f1a9 0902 	sub.w	r9, r9, #2
 80004be:	4421      	add	r1, r4
 80004c0:	eba1 010a 	sub.w	r1, r1, sl
 80004c4:	b2bf      	uxth	r7, r7
 80004c6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004ca:	fb0e 1110 	mls	r1, lr, r0, r1
 80004ce:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 80004d2:	fb00 f808 	mul.w	r8, r0, r8
 80004d6:	45b8      	cmp	r8, r7
 80004d8:	d907      	bls.n	80004ea <__udivmoddi4+0x24a>
 80004da:	19e7      	adds	r7, r4, r7
 80004dc:	f100 31ff 	add.w	r1, r0, #4294967295
 80004e0:	d22e      	bcs.n	8000540 <__udivmoddi4+0x2a0>
 80004e2:	45b8      	cmp	r8, r7
 80004e4:	d92c      	bls.n	8000540 <__udivmoddi4+0x2a0>
 80004e6:	3802      	subs	r0, #2
 80004e8:	4427      	add	r7, r4
 80004ea:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004ee:	eba7 0708 	sub.w	r7, r7, r8
 80004f2:	fba0 8902 	umull	r8, r9, r0, r2
 80004f6:	454f      	cmp	r7, r9
 80004f8:	46c6      	mov	lr, r8
 80004fa:	4649      	mov	r1, r9
 80004fc:	d31a      	bcc.n	8000534 <__udivmoddi4+0x294>
 80004fe:	d017      	beq.n	8000530 <__udivmoddi4+0x290>
 8000500:	b15d      	cbz	r5, 800051a <__udivmoddi4+0x27a>
 8000502:	ebb3 020e 	subs.w	r2, r3, lr
 8000506:	eb67 0701 	sbc.w	r7, r7, r1
 800050a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800050e:	40f2      	lsrs	r2, r6
 8000510:	ea4c 0202 	orr.w	r2, ip, r2
 8000514:	40f7      	lsrs	r7, r6
 8000516:	e9c5 2700 	strd	r2, r7, [r5]
 800051a:	2600      	movs	r6, #0
 800051c:	4631      	mov	r1, r6
 800051e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000522:	462e      	mov	r6, r5
 8000524:	4628      	mov	r0, r5
 8000526:	e70b      	b.n	8000340 <__udivmoddi4+0xa0>
 8000528:	4606      	mov	r6, r0
 800052a:	e6e9      	b.n	8000300 <__udivmoddi4+0x60>
 800052c:	4618      	mov	r0, r3
 800052e:	e6fd      	b.n	800032c <__udivmoddi4+0x8c>
 8000530:	4543      	cmp	r3, r8
 8000532:	d2e5      	bcs.n	8000500 <__udivmoddi4+0x260>
 8000534:	ebb8 0e02 	subs.w	lr, r8, r2
 8000538:	eb69 0104 	sbc.w	r1, r9, r4
 800053c:	3801      	subs	r0, #1
 800053e:	e7df      	b.n	8000500 <__udivmoddi4+0x260>
 8000540:	4608      	mov	r0, r1
 8000542:	e7d2      	b.n	80004ea <__udivmoddi4+0x24a>
 8000544:	4660      	mov	r0, ip
 8000546:	e78d      	b.n	8000464 <__udivmoddi4+0x1c4>
 8000548:	4681      	mov	r9, r0
 800054a:	e7b9      	b.n	80004c0 <__udivmoddi4+0x220>
 800054c:	4666      	mov	r6, ip
 800054e:	e775      	b.n	800043c <__udivmoddi4+0x19c>
 8000550:	4630      	mov	r0, r6
 8000552:	e74a      	b.n	80003ea <__udivmoddi4+0x14a>
 8000554:	f1ac 0c02 	sub.w	ip, ip, #2
 8000558:	4439      	add	r1, r7
 800055a:	e713      	b.n	8000384 <__udivmoddi4+0xe4>
 800055c:	3802      	subs	r0, #2
 800055e:	443c      	add	r4, r7
 8000560:	e724      	b.n	80003ac <__udivmoddi4+0x10c>
 8000562:	bf00      	nop

08000564 <__aeabi_idiv0>:
 8000564:	4770      	bx	lr
 8000566:	bf00      	nop

08000568 <MX_CRC_Init>:
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000568:	4805      	ldr	r0, [pc, #20]	; (8000580 <MX_CRC_Init+0x18>)
{
 800056a:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 800056c:	4b05      	ldr	r3, [pc, #20]	; (8000584 <MX_CRC_Init+0x1c>)
 800056e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000570:	f008 f972 	bl	8008858 <HAL_CRC_Init>
 8000574:	b900      	cbnz	r0, 8000578 <MX_CRC_Init+0x10>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000576:	bd08      	pop	{r3, pc}
 8000578:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 800057c:	f000 b962 	b.w	8000844 <Error_Handler>
 8000580:	20002f28 	.word	0x20002f28
 8000584:	40023000 	.word	0x40023000

08000588 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{

  if(crcHandle->Instance==CRC)
 8000588:	4b0b      	ldr	r3, [pc, #44]	; (80005b8 <HAL_CRC_MspInit+0x30>)
 800058a:	6802      	ldr	r2, [r0, #0]
 800058c:	429a      	cmp	r2, r3
 800058e:	d000      	beq.n	8000592 <HAL_CRC_MspInit+0xa>
 8000590:	4770      	bx	lr
{
 8000592:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000594:	2200      	movs	r2, #0
 8000596:	9201      	str	r2, [sp, #4]
 8000598:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800059c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80005a0:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80005a4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80005a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005aa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80005ae:	9301      	str	r3, [sp, #4]
 80005b0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 80005b2:	b002      	add	sp, #8
 80005b4:	4770      	bx	lr
 80005b6:	bf00      	nop
 80005b8:	40023000 	.word	0x40023000

080005bc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80005bc:	b500      	push	{lr}
 80005be:	b083      	sub	sp, #12

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80005c0:	2200      	movs	r2, #0
 80005c2:	4b0e      	ldr	r3, [pc, #56]	; (80005fc <MX_DMA_Init+0x40>)
 80005c4:	9201      	str	r2, [sp, #4]
 80005c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80005c8:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
 80005cc:	6319      	str	r1, [r3, #48]	; 0x30
 80005ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005d0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 80005d4:	4611      	mov	r1, r2
  __HAL_RCC_DMA1_CLK_ENABLE();
 80005d6:	9301      	str	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 80005d8:	200f      	movs	r0, #15
  __HAL_RCC_DMA1_CLK_ENABLE();
 80005da:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 80005dc:	f008 f8e4 	bl	80087a8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 80005e0:	200f      	movs	r0, #15
 80005e2:	f008 f919 	bl	8008818 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 80005e6:	2200      	movs	r2, #0
 80005e8:	4611      	mov	r1, r2
 80005ea:	2010      	movs	r0, #16
 80005ec:	f008 f8dc 	bl	80087a8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80005f0:	2010      	movs	r0, #16

}
 80005f2:	b003      	add	sp, #12
 80005f4:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80005f8:	f008 b90e 	b.w	8008818 <HAL_NVIC_EnableIRQ>
 80005fc:	40023800 	.word	0x40023800

08000600 <MX_GPIO_Init>:
        * EXTI
        * Free pins are configured automatically as Analog (this feature is enabled through
        * the Code Generation settings)
*/
void MX_GPIO_Init(void)
{
 8000600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000604:	2400      	movs	r4, #0
{
 8000606:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000608:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800060c:	e9cd 4407 	strd	r4, r4, [sp, #28]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000610:	4b3e      	ldr	r3, [pc, #248]	; (800070c <MX_GPIO_Init+0x10c>)
 8000612:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000614:	9409      	str	r4, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000616:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, T_CS_Pin|P_CS_Pin, GPIO_PIN_RESET);
 8000618:	4f3d      	ldr	r7, [pc, #244]	; (8000710 <MX_GPIO_Init+0x110>)

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, P_RESET_Pin|P_DC_Pin, GPIO_PIN_RESET);
 800061a:	4e3e      	ldr	r6, [pc, #248]	; (8000714 <MX_GPIO_Init+0x114>)
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800061c:	f042 0204 	orr.w	r2, r2, #4
 8000620:	631a      	str	r2, [r3, #48]	; 0x30
 8000622:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000624:	f002 0204 	and.w	r2, r2, #4
 8000628:	9200      	str	r2, [sp, #0]
 800062a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800062c:	9401      	str	r4, [sp, #4]
 800062e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000630:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000634:	631a      	str	r2, [r3, #48]	; 0x30
 8000636:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000638:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800063c:	9201      	str	r2, [sp, #4]
 800063e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000640:	9402      	str	r4, [sp, #8]
 8000642:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000644:	f042 0201 	orr.w	r2, r2, #1
 8000648:	631a      	str	r2, [r3, #48]	; 0x30
 800064a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800064c:	f002 0201 	and.w	r2, r2, #1
 8000650:	9202      	str	r2, [sp, #8]
 8000652:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000654:	9403      	str	r4, [sp, #12]
 8000656:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000658:	f042 0202 	orr.w	r2, r2, #2
 800065c:	631a      	str	r2, [r3, #48]	; 0x30
 800065e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000660:	f002 0202 	and.w	r2, r2, #2
 8000664:	9203      	str	r2, [sp, #12]
 8000666:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000668:	9404      	str	r4, [sp, #16]
 800066a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800066c:	f042 0208 	orr.w	r2, r2, #8
 8000670:	631a      	str	r2, [r3, #48]	; 0x30
 8000672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000674:	f003 0308 	and.w	r3, r3, #8
 8000678:	9304      	str	r3, [sp, #16]
  HAL_GPIO_WritePin(GPIOB, T_CS_Pin|P_CS_Pin, GPIO_PIN_RESET);
 800067a:	4622      	mov	r2, r4
 800067c:	4638      	mov	r0, r7
 800067e:	f244 0101 	movw	r1, #16385	; 0x4001
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000682:	9b04      	ldr	r3, [sp, #16]
  HAL_GPIO_WritePin(GPIOB, T_CS_Pin|P_CS_Pin, GPIO_PIN_RESET);
 8000684:	f008 fbe8 	bl	8008e58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, P_RESET_Pin|P_DC_Pin, GPIO_PIN_RESET);
 8000688:	4622      	mov	r2, r4
 800068a:	4630      	mov	r0, r6
 800068c:	21c0      	movs	r1, #192	; 0xc0
 800068e:	f008 fbe3 	bl	8008e58 <HAL_GPIO_WritePin>
                           PC1 PC4 PC5 PC8
                           PC9 PC10 PC11 PC12 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0
                          |GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8
                          |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000692:	2503      	movs	r5, #3
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000694:	a905      	add	r1, sp, #20
 8000696:	4630      	mov	r0, r6
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0
 8000698:	f64f 7333 	movw	r3, #65331	; 0xff33
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800069c:	e9cd 3505 	strd	r3, r5, [sp, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006a0:	9407      	str	r4, [sp, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80006a2:	f008 fac7 	bl	8008c34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_8
                          |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006a6:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_8
 80006a8:	f24e 7313 	movw	r3, #59155	; 0xe713
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006ac:	481a      	ldr	r0, [pc, #104]	; (8000718 <MX_GPIO_Init+0x118>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_8
 80006ae:	9305      	str	r3, [sp, #20]

  /*Configure GPIO pins : PBPin PBPin */
  GPIO_InitStruct.Pin = T_CS_Pin|P_CS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006b0:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006b4:	e9cd 5406 	strd	r5, r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006b8:	f008 fabc 	bl	8008c34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006bc:	a905      	add	r1, sp, #20
 80006be:	4638      	mov	r0, r7
  GPIO_InitStruct.Pin = T_CS_Pin|P_CS_Pin;
 80006c0:	f244 0301 	movw	r3, #16385	; 0x4001
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006c4:	e9cd 3805 	strd	r3, r8, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006c8:	e9cd 4407 	strd	r4, r4, [sp, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006cc:	f008 fab2 	bl	8008c34 <HAL_GPIO_Init>
                          |GPIO_PIN_12|GPIO_PIN_15|GPIO_PIN_3|GPIO_PIN_4
                          |GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8
                          |GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006d0:	4638      	mov	r0, r7
 80006d2:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10|GPIO_PIN_11
 80006d4:	f649 73fe 	movw	r3, #40958	; 0x9ffe
 80006d8:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006da:	e9cd 5406 	strd	r5, r4, [sp, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006de:	f008 faa9 	bl	8008c34 <HAL_GPIO_Init>
  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = P_RESET_Pin|P_DC_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80006e2:	4630      	mov	r0, r6
 80006e4:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Pin = P_RESET_Pin|P_DC_Pin;
 80006e6:	23c0      	movs	r3, #192	; 0xc0
 80006e8:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006ea:	e9cd 8406 	strd	r8, r4, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006ee:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80006f0:	f008 faa0 	bl	8008c34 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80006f4:	2304      	movs	r3, #4
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80006f6:	4809      	ldr	r0, [pc, #36]	; (800071c <MX_GPIO_Init+0x11c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80006f8:	9305      	str	r3, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80006fa:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006fc:	e9cd 5406 	strd	r5, r4, [sp, #24]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000700:	f008 fa98 	bl	8008c34 <HAL_GPIO_Init>

}
 8000704:	b00a      	add	sp, #40	; 0x28
 8000706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800070a:	bf00      	nop
 800070c:	40023800 	.word	0x40023800
 8000710:	40020400 	.word	0x40020400
 8000714:	40020800 	.word	0x40020800
 8000718:	40020000 	.word	0x40020000
 800071c:	40020c00 	.word	0x40020c00

08000720 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000720:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000722:	2300      	movs	r3, #0
{
 8000724:	b094      	sub	sp, #80	; 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000726:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800072a:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800072e:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8000732:	e9cd 3306 	strd	r3, r3, [sp, #24]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000736:	4921      	ldr	r1, [pc, #132]	; (80007bc <SystemClock_Config+0x9c>)
 8000738:	9301      	str	r3, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800073a:	9303      	str	r3, [sp, #12]
  __HAL_RCC_PWR_CLK_ENABLE();
 800073c:	6c08      	ldr	r0, [r1, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800073e:	4a20      	ldr	r2, [pc, #128]	; (80007c0 <SystemClock_Config+0xa0>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000740:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8000744:	6408      	str	r0, [r1, #64]	; 0x40
 8000746:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8000748:	f001 5180 	and.w	r1, r1, #268435456	; 0x10000000
 800074c:	9101      	str	r1, [sp, #4]
 800074e:	9901      	ldr	r1, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000750:	9302      	str	r3, [sp, #8]
 8000752:	6813      	ldr	r3, [r2, #0]
 8000754:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000758:	6013      	str	r3, [r2, #0]
 800075a:	6813      	ldr	r3, [r2, #0]
 800075c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000760:	9302      	str	r3, [sp, #8]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000762:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000764:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000768:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800076c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLM = 4;
 800076e:	2104      	movs	r1, #4
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000770:	9208      	str	r2, [sp, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000772:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000774:	22a8      	movs	r2, #168	; 0xa8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000776:	2307      	movs	r3, #7
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000778:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800077a:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 168;
 800077c:	e9cd 1210 	strd	r1, r2, [sp, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000780:	9d02      	ldr	r5, [sp, #8]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000782:	940e      	str	r4, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000784:	9412      	str	r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000786:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000788:	f009 f978 	bl	8009a7c <HAL_RCC_OscConfig>
 800078c:	b108      	cbz	r0, 8000792 <SystemClock_Config+0x72>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800078e:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
    /* User can add his own implementation to report the HAL error return state */
    __disable_irq();
    while (1) {
 8000790:	e7fe      	b.n	8000790 <SystemClock_Config+0x70>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000792:	4603      	mov	r3, r0
 8000794:	260f      	movs	r6, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000796:	f44f 55a0 	mov.w	r5, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800079a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800079e:	a803      	add	r0, sp, #12
 80007a0:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80007a2:	e9cd 5206 	strd	r5, r2, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007a6:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007a8:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007aa:	9603      	str	r6, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80007ac:	f009 fb82 	bl	8009eb4 <HAL_RCC_ClockConfig>
 80007b0:	b108      	cbz	r0, 80007b6 <SystemClock_Config+0x96>
 80007b2:	b672      	cpsid	i
    while (1) {
 80007b4:	e7fe      	b.n	80007b4 <SystemClock_Config+0x94>
}
 80007b6:	b014      	add	sp, #80	; 0x50
 80007b8:	bd70      	pop	{r4, r5, r6, pc}
 80007ba:	bf00      	nop
 80007bc:	40023800 	.word	0x40023800
 80007c0:	40007000 	.word	0x40007000

080007c4 <main>:
{
 80007c4:	b508      	push	{r3, lr}
  HAL_Init();
 80007c6:	f007 ff9d 	bl	8008704 <HAL_Init>
  SystemClock_Config();
 80007ca:	f7ff ffa9 	bl	8000720 <SystemClock_Config>
  MX_GPIO_Init();
 80007ce:	f7ff ff17 	bl	8000600 <MX_GPIO_Init>
  MX_DMA_Init();
 80007d2:	f7ff fef3 	bl	80005bc <MX_DMA_Init>
  MX_CRC_Init();
 80007d6:	f7ff fec7 	bl	8000568 <MX_CRC_Init>
  MX_SPI1_Init();
 80007da:	f000 f835 	bl	8000848 <MX_SPI1_Init>
  MX_SPI2_Init();
 80007de:	f000 f855 	bl	800088c <MX_SPI2_Init>
  MX_USART2_UART_Init();
 80007e2:	f000 fa85 	bl	8000cf0 <MX_USART2_UART_Init>
  MX_USB_DEVICE_Init();
 80007e6:	f001 fa11 	bl	8001c0c <MX_USB_DEVICE_Init>
  MX_FATFS_Init();
 80007ea:	f000 faf7 	bl	8000ddc <MX_FATFS_Init>
  MX_TIM2_Init();
 80007ee:	f000 fa29 	bl	8000c44 <MX_TIM2_Init>
  MX_TouchGFX_Init();
 80007f2:	f000 fbb1 	bl	8000f58 <MX_TouchGFX_Init>
    ILI9341_Init();
 80007f6:	f00f f89f 	bl	800f938 <ILI9341_Init>
    XPT2046_Init();
 80007fa:	f00f fa21 	bl	800fc40 <XPT2046_Init>
    HAL_TIM_Base_Start_IT(&htim2);
 80007fe:	4803      	ldr	r0, [pc, #12]	; (800080c <main+0x48>)
 8000800:	f00a f928 	bl	800aa54 <HAL_TIM_Base_Start_IT>
  MX_TouchGFX_Process();
 8000804:	f000 fbaa 	bl	8000f5c <MX_TouchGFX_Process>
    while (1) {
 8000808:	e7fc      	b.n	8000804 <main+0x40>
 800080a:	bf00      	nop
 800080c:	20003088 	.word	0x20003088

08000810 <HAL_TIM_PeriodElapsedCallback>:
    if (htim->Instance == TIM2) {
 8000810:	6803      	ldr	r3, [r0, #0]
 8000812:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000816:	d003      	beq.n	8000820 <HAL_TIM_PeriodElapsedCallback+0x10>
  if (htim->Instance == TIM11) {
 8000818:	4a09      	ldr	r2, [pc, #36]	; (8000840 <HAL_TIM_PeriodElapsedCallback+0x30>)
 800081a:	4293      	cmp	r3, r2
 800081c:	d009      	beq.n	8000832 <HAL_TIM_PeriodElapsedCallback+0x22>
 800081e:	4770      	bx	lr
{
 8000820:	b510      	push	{r4, lr}
 8000822:	4604      	mov	r4, r0
        touchgfxSignalVSync();
 8000824:	f001 f9c4 	bl	8001bb0 <touchgfxSignalVSync>
 8000828:	6823      	ldr	r3, [r4, #0]
  if (htim->Instance == TIM11) {
 800082a:	4a05      	ldr	r2, [pc, #20]	; (8000840 <HAL_TIM_PeriodElapsedCallback+0x30>)
 800082c:	4293      	cmp	r3, r2
 800082e:	d002      	beq.n	8000836 <HAL_TIM_PeriodElapsedCallback+0x26>
}
 8000830:	bd10      	pop	{r4, pc}
    HAL_IncTick();
 8000832:	f007 bf81 	b.w	8008738 <HAL_IncTick>
}
 8000836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_IncTick();
 800083a:	f007 bf7d 	b.w	8008738 <HAL_IncTick>
 800083e:	bf00      	nop
 8000840:	40014800 	.word	0x40014800

08000844 <Error_Handler>:
 8000844:	b672      	cpsid	i
    while (1) {
 8000846:	e7fe      	b.n	8000846 <Error_Handler+0x2>

08000848 <MX_SPI1_Init>:
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8000848:	480e      	ldr	r0, [pc, #56]	; (8000884 <MX_SPI1_Init+0x3c>)
 800084a:	4b0f      	ldr	r3, [pc, #60]	; (8000888 <MX_SPI1_Init+0x40>)
{
 800084c:	b510      	push	{r4, lr}
  hspi1.Instance = SPI1;
 800084e:	6003      	str	r3, [r0, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000850:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000854:	f44f 7400 	mov.w	r4, #512	; 0x200
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000858:	2120      	movs	r1, #32
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 10;
 800085a:	220a      	movs	r2, #10
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800085c:	6043      	str	r3, [r0, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800085e:	2300      	movs	r3, #0
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000860:	e9c0 4106 	strd	r4, r1, [r0, #24]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000864:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000868:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800086c:	e9c0 3308 	strd	r3, r3, [r0, #32]
  hspi1.Init.CRCPolynomial = 10;
 8000870:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000872:	6283      	str	r3, [r0, #40]	; 0x28
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000874:	f009 fcc8 	bl	800a208 <HAL_SPI_Init>
 8000878:	b900      	cbnz	r0, 800087c <MX_SPI1_Init+0x34>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800087a:	bd10      	pop	{r4, pc}
 800087c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8000880:	f7ff bfe0 	b.w	8000844 <Error_Handler>
 8000884:	20002f88 	.word	0x20002f88
 8000888:	40013000 	.word	0x40013000

0800088c <MX_SPI2_Init>:
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 800088c:	480e      	ldr	r0, [pc, #56]	; (80008c8 <MX_SPI2_Init+0x3c>)
 800088e:	4b0f      	ldr	r3, [pc, #60]	; (80008cc <MX_SPI2_Init+0x40>)
{
 8000890:	b510      	push	{r4, lr}
  hspi2.Init.Mode = SPI_MODE_MASTER;
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000892:	f44f 7100 	mov.w	r1, #512	; 0x200
  hspi2.Instance = SPI2;
 8000896:	6003      	str	r3, [r0, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000898:	f44f 7482 	mov.w	r4, #260	; 0x104
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800089c:	2300      	movs	r3, #0
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi2.Init.CRCPolynomial = 10;
 800089e:	220a      	movs	r2, #10
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80008a0:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80008a4:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80008a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80008ac:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80008b0:	6044      	str	r4, [r0, #4]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80008b2:	6181      	str	r1, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 80008b4:	62c2      	str	r2, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80008b6:	f009 fca7 	bl	800a208 <HAL_SPI_Init>
 80008ba:	b900      	cbnz	r0, 80008be <MX_SPI2_Init+0x32>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80008bc:	bd10      	pop	{r4, pc}
 80008be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 80008c2:	f7ff bfbf 	b.w	8000844 <Error_Handler>
 80008c6:	bf00      	nop
 80008c8:	20002f30 	.word	0x20002f30
 80008cc:	40003800 	.word	0x40003800

080008d0 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80008d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(spiHandle->Instance==SPI1)
 80008d4:	6803      	ldr	r3, [r0, #0]
 80008d6:	4a51      	ldr	r2, [pc, #324]	; (8000a1c <HAL_SPI_MspInit+0x14c>)
{
 80008d8:	b08b      	sub	sp, #44	; 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008da:	2400      	movs	r4, #0
  if(spiHandle->Instance==SPI1)
 80008dc:	4293      	cmp	r3, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008de:	e9cd 4405 	strd	r4, r4, [sp, #20]
 80008e2:	e9cd 4407 	strd	r4, r4, [sp, #28]
 80008e6:	9409      	str	r4, [sp, #36]	; 0x24
  if(spiHandle->Instance==SPI1)
 80008e8:	d005      	beq.n	80008f6 <HAL_SPI_MspInit+0x26>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
  else if(spiHandle->Instance==SPI2)
 80008ea:	4a4d      	ldr	r2, [pc, #308]	; (8000a20 <HAL_SPI_MspInit+0x150>)
 80008ec:	4293      	cmp	r3, r2
 80008ee:	d02f      	beq.n	8000950 <HAL_SPI_MspInit+0x80>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 80008f0:	b00b      	add	sp, #44	; 0x2c
 80008f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SPI1_CLK_ENABLE();
 80008f6:	4b4b      	ldr	r3, [pc, #300]	; (8000a24 <HAL_SPI_MspInit+0x154>)
 80008f8:	9400      	str	r4, [sp, #0]
 80008fa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008fc:	484a      	ldr	r0, [pc, #296]	; (8000a28 <HAL_SPI_MspInit+0x158>)
    __HAL_RCC_SPI1_CLK_ENABLE();
 80008fe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000902:	645a      	str	r2, [r3, #68]	; 0x44
 8000904:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000906:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 800090a:	9200      	str	r2, [sp, #0]
 800090c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800090e:	9401      	str	r4, [sp, #4]
 8000910:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000912:	f042 0201 	orr.w	r2, r2, #1
 8000916:	631a      	str	r2, [r3, #48]	; 0x30
 8000918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800091a:	9407      	str	r4, [sp, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800091c:	f003 0301 	and.w	r3, r3, #1
 8000920:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = T_SCK_Pin|T_MISO_Pin|T_MOSI_Pin;
 8000922:	23e0      	movs	r3, #224	; 0xe0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000924:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000926:	2203      	movs	r2, #3
    GPIO_InitStruct.Pin = T_SCK_Pin|T_MISO_Pin|T_MOSI_Pin;
 8000928:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800092a:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800092c:	2305      	movs	r3, #5
 800092e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000932:	9e01      	ldr	r6, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000934:	9506      	str	r5, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000936:	f008 f97d 	bl	8008c34 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 800093a:	4622      	mov	r2, r4
 800093c:	4621      	mov	r1, r4
 800093e:	2023      	movs	r0, #35	; 0x23
 8000940:	f007 ff32 	bl	80087a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8000944:	2023      	movs	r0, #35	; 0x23
 8000946:	f007 ff67 	bl	8008818 <HAL_NVIC_EnableIRQ>
}
 800094a:	b00b      	add	sp, #44	; 0x2c
 800094c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SPI2_CLK_ENABLE();
 8000950:	4b34      	ldr	r3, [pc, #208]	; (8000a24 <HAL_SPI_MspInit+0x154>)
 8000952:	9402      	str	r4, [sp, #8]
 8000954:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8000956:	4e35      	ldr	r6, [pc, #212]	; (8000a2c <HAL_SPI_MspInit+0x15c>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 8000958:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800095c:	641a      	str	r2, [r3, #64]	; 0x40
 800095e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000960:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000964:	9202      	str	r2, [sp, #8]
 8000966:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000968:	9403      	str	r4, [sp, #12]
 800096a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800096c:	f042 0204 	orr.w	r2, r2, #4
 8000970:	631a      	str	r2, [r3, #48]	; 0x30
 8000972:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000974:	f002 0204 	and.w	r2, r2, #4
 8000978:	9203      	str	r2, [sp, #12]
 800097a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800097c:	9404      	str	r4, [sp, #16]
 800097e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000980:	f042 0202 	orr.w	r2, r2, #2
 8000984:	631a      	str	r2, [r3, #48]	; 0x30
 8000986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000988:	9407      	str	r4, [sp, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800098a:	f003 0302 	and.w	r3, r3, #2
 800098e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000990:	2703      	movs	r7, #3
    GPIO_InitStruct.Pin = P_MISO_Pin|P_MOSI_Pin;
 8000992:	230c      	movs	r3, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000994:	f04f 0902 	mov.w	r9, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8000998:	f04f 0805 	mov.w	r8, #5
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800099c:	a905      	add	r1, sp, #20
 800099e:	4605      	mov	r5, r0
 80009a0:	4823      	ldr	r0, [pc, #140]	; (8000a30 <HAL_SPI_MspInit+0x160>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80009a2:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = P_MISO_Pin|P_MOSI_Pin;
 80009a4:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80009a6:	e9cd 7808 	strd	r7, r8, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009aa:	f8cd 9018 	str.w	r9, [sp, #24]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80009ae:	f008 f941 	bl	8008c34 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = P_SCK_Pin;
 80009b2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    HAL_GPIO_Init(P_SCK_GPIO_Port, &GPIO_InitStruct);
 80009b6:	481f      	ldr	r0, [pc, #124]	; (8000a34 <HAL_SPI_MspInit+0x164>)
    GPIO_InitStruct.Pin = P_SCK_Pin;
 80009b8:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(P_SCK_GPIO_Port, &GPIO_InitStruct);
 80009ba:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80009bc:	e9cd 7808 	strd	r7, r8, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009c0:	f8cd 9018 	str.w	r9, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009c4:	9407      	str	r4, [sp, #28]
    HAL_GPIO_Init(P_SCK_GPIO_Port, &GPIO_InitStruct);
 80009c6:	f008 f935 	bl	8008c34 <HAL_GPIO_Init>
    hdma_spi2_tx.Instance = DMA1_Stream4;
 80009ca:	f8df c06c 	ldr.w	ip, [pc, #108]	; 8000a38 <HAL_SPI_MspInit+0x168>
    hdma_spi2_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80009ce:	62b7      	str	r7, [r6, #40]	; 0x28
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80009d0:	2140      	movs	r1, #64	; 0x40
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 80009d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80009d6:	2304      	movs	r3, #4
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 80009d8:	4630      	mov	r0, r6
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80009da:	e9c6 4405 	strd	r4, r4, [r6, #20]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 80009de:	e9c6 4407 	strd	r4, r4, [r6, #28]
    hdma_spi2_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80009e2:	e9c6 440b 	strd	r4, r4, [r6, #44]	; 0x2c
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 80009e6:	6074      	str	r4, [r6, #4]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80009e8:	60f4      	str	r4, [r6, #12]
    hdma_spi2_tx.Instance = DMA1_Stream4;
 80009ea:	f8c6 c000 	str.w	ip, [r6]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80009ee:	60b1      	str	r1, [r6, #8]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 80009f0:	6132      	str	r2, [r6, #16]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80009f2:	6273      	str	r3, [r6, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 80009f4:	f007 ff44 	bl	8008880 <HAL_DMA_Init>
 80009f8:	b960      	cbnz	r0, 8000a14 <HAL_SPI_MspInit+0x144>
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 80009fa:	2200      	movs	r2, #0
 80009fc:	4611      	mov	r1, r2
    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi2_tx);
 80009fe:	64ae      	str	r6, [r5, #72]	; 0x48
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8000a00:	2024      	movs	r0, #36	; 0x24
    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi2_tx);
 8000a02:	63b5      	str	r5, [r6, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8000a04:	f007 fed0 	bl	80087a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8000a08:	2024      	movs	r0, #36	; 0x24
 8000a0a:	f007 ff05 	bl	8008818 <HAL_NVIC_EnableIRQ>
}
 8000a0e:	b00b      	add	sp, #44	; 0x2c
 8000a10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      Error_Handler();
 8000a14:	f7ff ff16 	bl	8000844 <Error_Handler>
 8000a18:	e7ef      	b.n	80009fa <HAL_SPI_MspInit+0x12a>
 8000a1a:	bf00      	nop
 8000a1c:	40013000 	.word	0x40013000
 8000a20:	40003800 	.word	0x40003800
 8000a24:	40023800 	.word	0x40023800
 8000a28:	40020000 	.word	0x40020000
 8000a2c:	20002fe0 	.word	0x20002fe0
 8000a30:	40020800 	.word	0x40020800
 8000a34:	40020400 	.word	0x40020400
 8000a38:	40026070 	.word	0x40026070

08000a3c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000a3c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000a3e:	4b0c      	ldr	r3, [pc, #48]	; (8000a70 <HAL_MspInit+0x34>)
 8000a40:	2100      	movs	r1, #0
 8000a42:	9100      	str	r1, [sp, #0]
 8000a44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000a46:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000a4a:	645a      	str	r2, [r3, #68]	; 0x44
 8000a4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000a4e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000a52:	9200      	str	r2, [sp, #0]
 8000a54:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a56:	9101      	str	r1, [sp, #4]
 8000a58:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000a5a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000a5e:	641a      	str	r2, [r3, #64]	; 0x40
 8000a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000a66:	9301      	str	r3, [sp, #4]
 8000a68:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000a6a:	b002      	add	sp, #8
 8000a6c:	4770      	bx	lr
 8000a6e:	bf00      	nop
 8000a70:	40023800 	.word	0x40023800

08000a74 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000a74:	b570      	push	{r4, r5, r6, lr}
 8000a76:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM11 clock */
  __HAL_RCC_TIM11_CLK_ENABLE();
 8000a78:	2500      	movs	r5, #0
 8000a7a:	4b1f      	ldr	r3, [pc, #124]	; (8000af8 <HAL_InitTick+0x84>)
 8000a7c:	9502      	str	r5, [sp, #8]
 8000a7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM11 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM11 */
  htim11.Instance = TIM11;
 8000a80:	4c1e      	ldr	r4, [pc, #120]	; (8000afc <HAL_InitTick+0x88>)
  __HAL_RCC_TIM11_CLK_ENABLE();
 8000a82:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000a86:	645a      	str	r2, [r3, #68]	; 0x44
 8000a88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a8a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000a8e:	a901      	add	r1, sp, #4
  __HAL_RCC_TIM11_CLK_ENABLE();
 8000a90:	9302      	str	r3, [sp, #8]
{
 8000a92:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000a94:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM11_CLK_ENABLE();
 8000a96:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000a98:	f009 fad0 	bl	800a03c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8000a9c:	f009 fabe 	bl	800a01c <HAL_RCC_GetPCLK2Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000aa0:	4a17      	ldr	r2, [pc, #92]	; (8000b00 <HAL_InitTick+0x8c>)
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim11.Init.Period = (1000000U / 1000U) - 1U;
  htim11.Init.Prescaler = uwPrescalerValue;
  htim11.Init.ClockDivision = 0;
 8000aa2:	6125      	str	r5, [r4, #16]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8000aa4:	0043      	lsls	r3, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000aa6:	fba2 2303 	umull	r2, r3, r2, r3
 8000aaa:	0c9b      	lsrs	r3, r3, #18
 8000aac:	3b01      	subs	r3, #1
  htim11.Instance = TIM11;
 8000aae:	4a15      	ldr	r2, [pc, #84]	; (8000b04 <HAL_InitTick+0x90>)
  htim11.Init.Prescaler = uwPrescalerValue;
 8000ab0:	6063      	str	r3, [r4, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim11);
 8000ab2:	4620      	mov	r0, r4
  htim11.Init.Period = (1000000U / 1000U) - 1U;
 8000ab4:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ab8:	60a5      	str	r5, [r4, #8]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000aba:	61a5      	str	r5, [r4, #24]
  htim11.Instance = TIM11;
 8000abc:	6022      	str	r2, [r4, #0]
  htim11.Init.Period = (1000000U / 1000U) - 1U;
 8000abe:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim11);
 8000ac0:	f00a f9c8 	bl	800ae54 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000ac4:	4605      	mov	r5, r0
 8000ac6:	b110      	cbz	r0, 8000ace <HAL_InitTick+0x5a>
    }
  }

 /* Return function status */
  return status;
}
 8000ac8:	4628      	mov	r0, r5
 8000aca:	b008      	add	sp, #32
 8000acc:	bd70      	pop	{r4, r5, r6, pc}
    status = HAL_TIM_Base_Start_IT(&htim11);
 8000ace:	4620      	mov	r0, r4
 8000ad0:	f009 ffc0 	bl	800aa54 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000ad4:	4605      	mov	r5, r0
 8000ad6:	2800      	cmp	r0, #0
 8000ad8:	d1f6      	bne.n	8000ac8 <HAL_InitTick+0x54>
        HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);
 8000ada:	201a      	movs	r0, #26
 8000adc:	f007 fe9c 	bl	8008818 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000ae0:	2e0f      	cmp	r6, #15
 8000ae2:	d901      	bls.n	8000ae8 <HAL_InitTick+0x74>
        status = HAL_ERROR;
 8000ae4:	2501      	movs	r5, #1
 8000ae6:	e7ef      	b.n	8000ac8 <HAL_InitTick+0x54>
        HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, TickPriority, 0U);
 8000ae8:	462a      	mov	r2, r5
 8000aea:	4631      	mov	r1, r6
 8000aec:	201a      	movs	r0, #26
 8000aee:	f007 fe5b 	bl	80087a8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000af2:	4b05      	ldr	r3, [pc, #20]	; (8000b08 <HAL_InitTick+0x94>)
 8000af4:	601e      	str	r6, [r3, #0]
 8000af6:	e7e7      	b.n	8000ac8 <HAL_InitTick+0x54>
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20003040 	.word	0x20003040
 8000b00:	431bde83 	.word	0x431bde83
 8000b04:	40014800 	.word	0x40014800
 8000b08:	200000c4 	.word	0x200000c4

08000b0c <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
    while (1) {
 8000b0c:	e7fe      	b.n	8000b0c <NMI_Handler>
 8000b0e:	bf00      	nop

08000b10 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000b10:	e7fe      	b.n	8000b10 <HardFault_Handler>
 8000b12:	bf00      	nop

08000b14 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000b14:	e7fe      	b.n	8000b14 <MemManage_Handler>
 8000b16:	bf00      	nop

08000b18 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000b18:	e7fe      	b.n	8000b18 <BusFault_Handler>
 8000b1a:	bf00      	nop

08000b1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000b1c:	e7fe      	b.n	8000b1c <UsageFault_Handler>
 8000b1e:	bf00      	nop

08000b20 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000b20:	4770      	bx	lr
 8000b22:	bf00      	nop

08000b24 <DebugMon_Handler>:
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <PendSV_Handler>:
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop

08000b2c <SysTick_Handler>:
 8000b2c:	4770      	bx	lr
 8000b2e:	bf00      	nop

08000b30 <DMA1_Stream4_IRQHandler>:
void DMA1_Stream4_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8000b30:	4801      	ldr	r0, [pc, #4]	; (8000b38 <DMA1_Stream4_IRQHandler+0x8>)
 8000b32:	f007 bf8f 	b.w	8008a54 <HAL_DMA_IRQHandler>
 8000b36:	bf00      	nop
 8000b38:	20002fe0 	.word	0x20002fe0

08000b3c <DMA1_Stream5_IRQHandler>:
void DMA1_Stream5_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 8000b3c:	4801      	ldr	r0, [pc, #4]	; (8000b44 <DMA1_Stream5_IRQHandler+0x8>)
 8000b3e:	f007 bf89 	b.w	8008a54 <HAL_DMA_IRQHandler>
 8000b42:	bf00      	nop
 8000b44:	200030d0 	.word	0x200030d0

08000b48 <TIM1_TRG_COM_TIM11_IRQHandler>:
void TIM1_TRG_COM_TIM11_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
  HAL_TIM_IRQHandler(&htim11);
 8000b48:	4801      	ldr	r0, [pc, #4]	; (8000b50 <TIM1_TRG_COM_TIM11_IRQHandler+0x8>)
 8000b4a:	f00a b877 	b.w	800ac3c <HAL_TIM_IRQHandler>
 8000b4e:	bf00      	nop
 8000b50:	20003040 	.word	0x20003040

08000b54 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000b54:	4801      	ldr	r0, [pc, #4]	; (8000b5c <TIM2_IRQHandler+0x8>)
 8000b56:	f00a b871 	b.w	800ac3c <HAL_TIM_IRQHandler>
 8000b5a:	bf00      	nop
 8000b5c:	20003088 	.word	0x20003088

08000b60 <SPI1_IRQHandler>:
void SPI1_IRQHandler(void)
{
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8000b60:	4801      	ldr	r0, [pc, #4]	; (8000b68 <SPI1_IRQHandler+0x8>)
 8000b62:	f009 bed3 	b.w	800a90c <HAL_SPI_IRQHandler>
 8000b66:	bf00      	nop
 8000b68:	20002f88 	.word	0x20002f88

08000b6c <SPI2_IRQHandler>:
void SPI2_IRQHandler(void)
{
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8000b6c:	4801      	ldr	r0, [pc, #4]	; (8000b74 <SPI2_IRQHandler+0x8>)
 8000b6e:	f009 becd 	b.w	800a90c <HAL_SPI_IRQHandler>
 8000b72:	bf00      	nop
 8000b74:	20002f30 	.word	0x20002f30

08000b78 <OTG_FS_IRQHandler>:
void OTG_FS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 8000b78:	4801      	ldr	r0, [pc, #4]	; (8000b80 <OTG_FS_IRQHandler+0x8>)
 8000b7a:	f008 ba1d 	b.w	8008fb8 <HAL_PCD_IRQHandler>
 8000b7e:	bf00      	nop
 8000b80:	20013ab8 	.word	0x20013ab8

08000b84 <_getpid>:
}

int _getpid(void)
{
    return 1;
}
 8000b84:	2001      	movs	r0, #1
 8000b86:	4770      	bx	lr

08000b88 <_kill>:

int _kill(int pid, int sig)
{
 8000b88:	b508      	push	{r3, lr}
    (void)pid;  // unused-warningãé¿ãã
    (void)sig;
    errno = EINVAL;
 8000b8a:	f024 f989 	bl	8024ea0 <__errno>
 8000b8e:	2316      	movs	r3, #22
 8000b90:	6003      	str	r3, [r0, #0]
    return -1;
}
 8000b92:	f04f 30ff 	mov.w	r0, #4294967295
 8000b96:	bd08      	pop	{r3, pc}

08000b98 <_exit>:

void _exit(int status)
{
 8000b98:	b508      	push	{r3, lr}
    errno = EINVAL;
 8000b9a:	f024 f981 	bl	8024ea0 <__errno>
 8000b9e:	2316      	movs	r3, #22
 8000ba0:	6003      	str	r3, [r0, #0]
    _kill(status, -1);
    while (1) {
 8000ba2:	e7fe      	b.n	8000ba2 <_exit+0xa>

08000ba4 <_read>:
    } /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char* ptr, int len)
{
 8000ba4:	b570      	push	{r4, r5, r6, lr}
    (void)file;
    int DataIdx;
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8000ba6:	1e16      	subs	r6, r2, #0
 8000ba8:	dd07      	ble.n	8000bba <_read+0x16>
 8000baa:	460c      	mov	r4, r1
 8000bac:	198d      	adds	r5, r1, r6
        *ptr++ = __io_getchar();
 8000bae:	f3af 8000 	nop.w
 8000bb2:	f804 0b01 	strb.w	r0, [r4], #1
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8000bb6:	42a5      	cmp	r5, r4
 8000bb8:	d1f9      	bne.n	8000bae <_read+0xa>
    }

    return len;
}
 8000bba:	4630      	mov	r0, r6
 8000bbc:	bd70      	pop	{r4, r5, r6, pc}
 8000bbe:	bf00      	nop

08000bc0 <_write>:
int _write(int file, char* ptr, int len)
{
    (void)file;
    (void)ptr;
    int DataIdx;
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8000bc0:	1e10      	subs	r0, r2, #0
 8000bc2:	dd0c      	ble.n	8000bde <_write+0x1e>
{
 8000bc4:	b430      	push	{r4, r5}
        while ((USART2->SR & UART_FLAG_TXE) == RESET) {
 8000bc6:	4c06      	ldr	r4, [pc, #24]	; (8000be0 <_write+0x20>)
 8000bc8:	180d      	adds	r5, r1, r0
 8000bca:	6823      	ldr	r3, [r4, #0]
 8000bcc:	061b      	lsls	r3, r3, #24
 8000bce:	d5fc      	bpl.n	8000bca <_write+0xa>
        }
        USART2->DR = *ptr++;
 8000bd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bd4:	6063      	str	r3, [r4, #4]
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8000bd6:	428d      	cmp	r5, r1
 8000bd8:	d1f7      	bne.n	8000bca <_write+0xa>
    }
    return len;
}
 8000bda:	bc30      	pop	{r4, r5}
 8000bdc:	4770      	bx	lr
 8000bde:	4770      	bx	lr
 8000be0:	40004400 	.word	0x40004400

08000be4 <_close>:

int _close(int file)
{
    (void)file;
    return -1;
}
 8000be4:	f04f 30ff 	mov.w	r0, #4294967295
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop

08000bec <_fstat>:


int _fstat(int file, struct stat* st)
{
    (void)file;
    st->st_mode = S_IFCHR;
 8000bec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000bf0:	604b      	str	r3, [r1, #4]
    return 0;
}
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <_isatty>:

int _isatty(int file)
{
    (void)file;
    return 1;
}
 8000bf8:	2001      	movs	r0, #1
 8000bfa:	4770      	bx	lr

08000bfc <_lseek>:
{
    (void)file;
    (void)ptr;
    (void)dir;
    return 0;
}
 8000bfc:	2000      	movs	r0, #0
 8000bfe:	4770      	bx	lr

08000c00 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000c00:	490c      	ldr	r1, [pc, #48]	; (8000c34 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000c02:	4a0d      	ldr	r2, [pc, #52]	; (8000c38 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8000c04:	680b      	ldr	r3, [r1, #0]
{
 8000c06:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000c08:	4c0c      	ldr	r4, [pc, #48]	; (8000c3c <_sbrk+0x3c>)
 8000c0a:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8000c0c:	b12b      	cbz	r3, 8000c1a <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000c0e:	4418      	add	r0, r3
 8000c10:	4290      	cmp	r0, r2
 8000c12:	d807      	bhi.n	8000c24 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8000c14:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8000c16:	4618      	mov	r0, r3
 8000c18:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8000c1a:	4b09      	ldr	r3, [pc, #36]	; (8000c40 <_sbrk+0x40>)
 8000c1c:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8000c1e:	4418      	add	r0, r3
 8000c20:	4290      	cmp	r0, r2
 8000c22:	d9f7      	bls.n	8000c14 <_sbrk+0x14>
    errno = ENOMEM;
 8000c24:	f024 f93c 	bl	8024ea0 <__errno>
 8000c28:	230c      	movs	r3, #12
 8000c2a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000c2c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000c30:	4618      	mov	r0, r3
 8000c32:	bd10      	pop	{r4, pc}
 8000c34:	20000274 	.word	0x20000274
 8000c38:	20020000 	.word	0x20020000
 8000c3c:	00004000 	.word	0x00004000
 8000c40:	20013fd8 	.word	0x20013fd8

08000c44 <MX_TIM2_Init>:

TIM_HandleTypeDef htim2;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8000c44:	b500      	push	{lr}
  TIM_MasterConfigTypeDef sMasterConfig = {0};

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000c46:	481a      	ldr	r0, [pc, #104]	; (8000cb0 <MX_TIM2_Init+0x6c>)
{
 8000c48:	b087      	sub	sp, #28
  htim2.Init.Prescaler = 84-1;
 8000c4a:	2353      	movs	r3, #83	; 0x53
  htim2.Instance = TIM2;
 8000c4c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 84-1;
 8000c50:	e9c0 1300 	strd	r1, r3, [r0]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim2.Init.Period = 5000-1;
 8000c54:	f241 3287 	movw	r2, #4999	; 0x1387
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c58:	2300      	movs	r3, #0
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c5a:	e9c0 3202 	strd	r3, r2, [r0, #8]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c5e:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8000c62:	9302      	str	r3, [sp, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c64:	9300      	str	r3, [sp, #0]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c66:	6103      	str	r3, [r0, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c68:	6183      	str	r3, [r0, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c6a:	9305      	str	r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c6c:	9301      	str	r3, [sp, #4]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000c6e:	f00a f8f1 	bl	800ae54 <HAL_TIM_Base_Init>
 8000c72:	b990      	cbnz	r0, 8000c9a <MX_TIM2_Init+0x56>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c74:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c78:	480d      	ldr	r0, [pc, #52]	; (8000cb0 <MX_TIM2_Init+0x6c>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c7a:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c7c:	a902      	add	r1, sp, #8
 8000c7e:	f009 ff25 	bl	800aacc <HAL_TIM_ConfigClockSource>
 8000c82:	b990      	cbnz	r0, 8000caa <MX_TIM2_Init+0x66>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c84:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c86:	480a      	ldr	r0, [pc, #40]	; (8000cb0 <MX_TIM2_Init+0x6c>)
 8000c88:	4669      	mov	r1, sp
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c8a:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c8e:	f00a f90f 	bl	800aeb0 <HAL_TIMEx_MasterConfigSynchronization>
 8000c92:	b928      	cbnz	r0, 8000ca0 <MX_TIM2_Init+0x5c>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c94:	b007      	add	sp, #28
 8000c96:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8000c9a:	f7ff fdd3 	bl	8000844 <Error_Handler>
 8000c9e:	e7e9      	b.n	8000c74 <MX_TIM2_Init+0x30>
    Error_Handler();
 8000ca0:	f7ff fdd0 	bl	8000844 <Error_Handler>
}
 8000ca4:	b007      	add	sp, #28
 8000ca6:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8000caa:	f7ff fdcb 	bl	8000844 <Error_Handler>
 8000cae:	e7e9      	b.n	8000c84 <MX_TIM2_Init+0x40>
 8000cb0:	20003088 	.word	0x20003088

08000cb4 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{

  if(tim_baseHandle->Instance==TIM2)
 8000cb4:	6803      	ldr	r3, [r0, #0]
 8000cb6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000cba:	d000      	beq.n	8000cbe <HAL_TIM_Base_MspInit+0xa>
 8000cbc:	4770      	bx	lr
{
 8000cbe:	b500      	push	{lr}
 8000cc0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8000cc8:	9201      	str	r2, [sp, #4]
 8000cca:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8000ccc:	f041 0101 	orr.w	r1, r1, #1
 8000cd0:	6419      	str	r1, [r3, #64]	; 0x40
 8000cd2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000cd4:	f003 0301 	and.w	r3, r3, #1
 8000cd8:	9301      	str	r3, [sp, #4]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 3, 0);
 8000cda:	2103      	movs	r1, #3
 8000cdc:	201c      	movs	r0, #28
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000cde:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM2_IRQn, 3, 0);
 8000ce0:	f007 fd62 	bl	80087a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000ce4:	201c      	movs	r0, #28
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8000ce6:	b003      	add	sp, #12
 8000ce8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000cec:	f007 bd94 	b.w	8008818 <HAL_NVIC_EnableIRQ>

08000cf0 <MX_USART2_UART_Init>:
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000cf0:	480a      	ldr	r0, [pc, #40]	; (8000d1c <MX_USART2_UART_Init+0x2c>)
  huart2.Init.BaudRate = 1000000;
 8000cf2:	490b      	ldr	r1, [pc, #44]	; (8000d20 <MX_USART2_UART_Init+0x30>)
{
 8000cf4:	b508      	push	{r3, lr}
  huart2.Instance = USART2;
 8000cf6:	4b0b      	ldr	r3, [pc, #44]	; (8000d24 <MX_USART2_UART_Init+0x34>)
 8000cf8:	6003      	str	r3, [r0, #0]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
  huart2.Init.StopBits = UART_STOPBITS_1;
  huart2.Init.Parity = UART_PARITY_NONE;
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000cfa:	220c      	movs	r2, #12
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000cfc:	2300      	movs	r3, #0
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000cfe:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000d02:	e9c0 3306 	strd	r3, r3, [r0, #24]
  huart2.Init.BaudRate = 1000000;
 8000d06:	6041      	str	r1, [r0, #4]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000d08:	6142      	str	r2, [r0, #20]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000d0a:	6103      	str	r3, [r0, #16]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000d0c:	f00a f9b6 	bl	800b07c <HAL_UART_Init>
 8000d10:	b900      	cbnz	r0, 8000d14 <MX_USART2_UART_Init+0x24>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000d12:	bd08      	pop	{r3, pc}
 8000d14:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8000d18:	f7ff bd94 	b.w	8000844 <Error_Handler>
 8000d1c:	20003130 	.word	0x20003130
 8000d20:	000f4240 	.word	0x000f4240
 8000d24:	40004400 	.word	0x40004400

08000d28 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8000d28:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(uartHandle->Instance==USART2)
 8000d2a:	6802      	ldr	r2, [r0, #0]
 8000d2c:	4b27      	ldr	r3, [pc, #156]	; (8000dcc <HAL_UART_MspInit+0xa4>)
{
 8000d2e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d30:	2400      	movs	r4, #0
  if(uartHandle->Instance==USART2)
 8000d32:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d34:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000d38:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8000d3c:	9407      	str	r4, [sp, #28]
  if(uartHandle->Instance==USART2)
 8000d3e:	d001      	beq.n	8000d44 <HAL_UART_MspInit+0x1c>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8000d40:	b008      	add	sp, #32
 8000d42:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_USART2_CLK_ENABLE();
 8000d44:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 8000d48:	9401      	str	r4, [sp, #4]
 8000d4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    hdma_usart2_rx.Instance = DMA1_Stream5;
 8000d4c:	4e20      	ldr	r6, [pc, #128]	; (8000dd0 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART2_CLK_ENABLE();
 8000d4e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d52:	641a      	str	r2, [r3, #64]	; 0x40
 8000d54:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000d56:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8000d5a:	9201      	str	r2, [sp, #4]
 8000d5c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d5e:	9402      	str	r4, [sp, #8]
 8000d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d62:	f042 0201 	orr.w	r2, r2, #1
 8000d66:	631a      	str	r2, [r3, #48]	; 0x30
 8000d68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d6a:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d6c:	f003 0301 	and.w	r3, r3, #1
 8000d70:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = M_TX_Pin|M_RX_Pin;
 8000d72:	220c      	movs	r2, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d74:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d76:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = M_TX_Pin|M_RX_Pin;
 8000d78:	9203      	str	r2, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d7a:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d7c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8000d7e:	2307      	movs	r3, #7
 8000d80:	4605      	mov	r5, r0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d82:	9802      	ldr	r0, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d84:	4813      	ldr	r0, [pc, #76]	; (8000dd4 <HAL_UART_MspInit+0xac>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d86:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8000d88:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d8a:	f007 ff53 	bl	8008c34 <HAL_GPIO_Init>
    hdma_usart2_rx.Instance = DMA1_Stream5;
 8000d8e:	4b12      	ldr	r3, [pc, #72]	; (8000dd8 <HAL_UART_MspInit+0xb0>)
 8000d90:	6033      	str	r3, [r6, #0]
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 8000d92:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8000d96:	f44f 6180 	mov.w	r1, #1024	; 0x400
    hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 8000d9a:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8000d9e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 8000da2:	6070      	str	r0, [r6, #4]
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 8000da4:	4630      	mov	r0, r6
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000da6:	e9c6 4405 	strd	r4, r4, [r6, #20]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8000daa:	e9c6 2307 	strd	r2, r3, [r6, #28]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000dae:	60b4      	str	r4, [r6, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8000db0:	60f4      	str	r4, [r6, #12]
    hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000db2:	6274      	str	r4, [r6, #36]	; 0x24
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8000db4:	6131      	str	r1, [r6, #16]
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 8000db6:	f007 fd63 	bl	8008880 <HAL_DMA_Init>
 8000dba:	b918      	cbnz	r0, 8000dc4 <HAL_UART_MspInit+0x9c>
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
 8000dbc:	63ae      	str	r6, [r5, #56]	; 0x38
 8000dbe:	63b5      	str	r5, [r6, #56]	; 0x38
}
 8000dc0:	b008      	add	sp, #32
 8000dc2:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 8000dc4:	f7ff fd3e 	bl	8000844 <Error_Handler>
 8000dc8:	e7f8      	b.n	8000dbc <HAL_UART_MspInit+0x94>
 8000dca:	bf00      	nop
 8000dcc:	40004400 	.word	0x40004400
 8000dd0:	200030d0 	.word	0x200030d0
 8000dd4:	40020000 	.word	0x40020000
 8000dd8:	40026088 	.word	0x40026088

08000ddc <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */
#include <stdio.h>
/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8000ddc:	b500      	push	{lr}
    /*## FatFS: Link the USER driver ###########################*/
    retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 8000dde:	4916      	ldr	r1, [pc, #88]	; (8000e38 <MX_FATFS_Init+0x5c>)
 8000de0:	4816      	ldr	r0, [pc, #88]	; (8000e3c <MX_FATFS_Init+0x60>)
{
 8000de2:	f5ad 7d03 	sub.w	sp, sp, #524	; 0x20c
    retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 8000de6:	f00c febd 	bl	800db64 <FATFS_LinkDriver>
 8000dea:	4b15      	ldr	r3, [pc, #84]	; (8000e40 <MX_FATFS_Init+0x64>)

    /* USER CODE BEGIN Init */
    uint8_t buffer[_MAX_SS]; /* a work buffer for the f_mkfs() */
    FRESULT fr;
    fr = f_mount(&USERFatFS, (TCHAR const*)USERPath, 0);
 8000dec:	4912      	ldr	r1, [pc, #72]	; (8000e38 <MX_FATFS_Init+0x5c>)
    retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 8000dee:	4602      	mov	r2, r0
 8000df0:	701a      	strb	r2, [r3, #0]
    fr = f_mount(&USERFatFS, (TCHAR const*)USERPath, 0);
 8000df2:	4814      	ldr	r0, [pc, #80]	; (8000e44 <MX_FATFS_Init+0x68>)
 8000df4:	2200      	movs	r2, #0
 8000df6:	f00b fff5 	bl	800cde4 <f_mount>
    if (fr != FR_OK)
 8000dfa:	b118      	cbz	r0, 8000e04 <MX_FATFS_Init+0x28>
    if (fr != FR_OK)
        return;

    /* additional user code for init */
    /* USER CODE END Init */
}
 8000dfc:	f50d 7d03 	add.w	sp, sp, #524	; 0x20c
 8000e00:	f85d fb04 	ldr.w	pc, [sp], #4
    fr = f_mkfs((TCHAR const*)USERPath, FM_FAT, 0, buffer, sizeof(buffer));
 8000e04:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e08:	4602      	mov	r2, r0
 8000e0a:	9300      	str	r3, [sp, #0]
 8000e0c:	480a      	ldr	r0, [pc, #40]	; (8000e38 <MX_FATFS_Init+0x5c>)
 8000e0e:	ab02      	add	r3, sp, #8
 8000e10:	2101      	movs	r1, #1
 8000e12:	f00c fb2f 	bl	800d474 <f_mkfs>
    if (fr != FR_OK)
 8000e16:	2800      	cmp	r0, #0
 8000e18:	d1f0      	bne.n	8000dfc <MX_FATFS_Init+0x20>
    fr = f_open(&USERFile, "README.TXT", FA_CREATE_ALWAYS | FA_WRITE);
 8000e1a:	490b      	ldr	r1, [pc, #44]	; (8000e48 <MX_FATFS_Init+0x6c>)
 8000e1c:	480b      	ldr	r0, [pc, #44]	; (8000e4c <MX_FATFS_Init+0x70>)
 8000e1e:	220a      	movs	r2, #10
 8000e20:	f00c f81a 	bl	800ce58 <f_open>
    if (fr != FR_OK)
 8000e24:	2800      	cmp	r0, #0
 8000e26:	d1e9      	bne.n	8000dfc <MX_FATFS_Init+0x20>
    f_puts("main.romファイルをペーストすることでBDM-80のROMに書き込みます。", &USERFile);
 8000e28:	4908      	ldr	r1, [pc, #32]	; (8000e4c <MX_FATFS_Init+0x70>)
 8000e2a:	4809      	ldr	r0, [pc, #36]	; (8000e50 <MX_FATFS_Init+0x74>)
 8000e2c:	f00c fe82 	bl	800db34 <f_puts>
    fr = f_close(&USERFile);
 8000e30:	4806      	ldr	r0, [pc, #24]	; (8000e4c <MX_FATFS_Init+0x70>)
 8000e32:	f00c faf3 	bl	800d41c <f_close>
        return;
 8000e36:	e7e1      	b.n	8000dfc <MX_FATFS_Init+0x20>
 8000e38:	20003174 	.word	0x20003174
 8000e3c:	20000004 	.word	0x20000004
 8000e40:	20003178 	.word	0x20003178
 8000e44:	200033ac 	.word	0x200033ac
 8000e48:	080261c0 	.word	0x080261c0
 8000e4c:	2000317c 	.word	0x2000317c
 8000e50:	080261cc 	.word	0x080261cc

08000e54 <get_fattime>:
DWORD get_fattime(void)
{
    /* USER CODE BEGIN get_fattime */
    return 0;
    /* USER CODE END get_fattime */
}
 8000e54:	2000      	movs	r0, #0
 8000e56:	4770      	bx	lr

08000e58 <USER_initialize>:
)
{
    /* USER CODE BEGIN INIT */
    return RES_OK;
    /* USER CODE END INIT */
}
 8000e58:	2000      	movs	r0, #0
 8000e5a:	4770      	bx	lr

08000e5c <USER_status>:
 * @retval DSTATUS: Operation status
 */
DSTATUS USER_status(
    BYTE pdrv /* Physical drive number to identify the drive */
)
{
 8000e5c:	b508      	push	{r3, lr}
    /* USER CODE BEGIN STATUS */
    return USBD_Storage_Interface_fops_FS.IsReady(pdrv);
 8000e5e:	4b02      	ldr	r3, [pc, #8]	; (8000e68 <USER_status+0xc>)
 8000e60:	689b      	ldr	r3, [r3, #8]
 8000e62:	4798      	blx	r3
    /* USER CODE END STATUS */
}
 8000e64:	b2c0      	uxtb	r0, r0
 8000e66:	bd08      	pop	{r3, pc}
 8000e68:	20000070 	.word	0x20000070

08000e6c <USER_read>:
    BYTE pdrv,    /* Physical drive nmuber to identify the drive */
    BYTE* buff,   /* Data buffer to store read data */
    DWORD sector, /* Sector address in LBA */
    UINT count    /* Number of sectors to read */
)
{
 8000e6c:	b510      	push	{r4, lr}
    /* USER CODE BEGIN READ */
    return USBD_Storage_Interface_fops_FS.Read(pdrv, buff, sector, count);
 8000e6e:	4c03      	ldr	r4, [pc, #12]	; (8000e7c <USER_read+0x10>)
 8000e70:	b29b      	uxth	r3, r3
 8000e72:	6924      	ldr	r4, [r4, #16]
 8000e74:	47a0      	blx	r4
    /* USER CODE END READ */
}
 8000e76:	b2c0      	uxtb	r0, r0
 8000e78:	bd10      	pop	{r4, pc}
 8000e7a:	bf00      	nop
 8000e7c:	20000070 	.word	0x20000070

08000e80 <USER_write>:
    BYTE pdrv,        /* Physical drive nmuber to identify the drive */
    const BYTE* buff, /* Data to be written */
    DWORD sector,     /* Sector address in LBA */
    UINT count        /* Number of sectors to write */
)
{
 8000e80:	b510      	push	{r4, lr}
    /* USER CODE BEGIN WRITE */
    /* USER CODE HERE */
    return USBD_Storage_Interface_fops_FS.Write(pdrv, (BYTE*)buff, sector, count);
 8000e82:	4c03      	ldr	r4, [pc, #12]	; (8000e90 <USER_write+0x10>)
 8000e84:	b29b      	uxth	r3, r3
 8000e86:	6964      	ldr	r4, [r4, #20]
 8000e88:	47a0      	blx	r4
    /* USER CODE END WRITE */
}
 8000e8a:	b2c0      	uxtb	r0, r0
 8000e8c:	bd10      	pop	{r4, pc}
 8000e8e:	bf00      	nop
 8000e90:	20000070 	.word	0x20000070

08000e94 <USER_ioctl>:
DRESULT USER_ioctl(
    BYTE pdrv, /* Physical drive nmuber (0..) */
    BYTE cmd,  /* Control code */
    void* buff /* Buffer to send/receive control data */
)
{
 8000e94:	b510      	push	{r4, lr}
 8000e96:	4614      	mov	r4, r2
 8000e98:	b082      	sub	sp, #8
 8000e9a:	2903      	cmp	r1, #3
 8000e9c:	d82e      	bhi.n	8000efc <USER_ioctl+0x68>
 8000e9e:	e8df f001 	tbb	[pc, r1]
 8000ea2:	1302      	.short	0x1302
 8000ea4:	0520      	.short	0x0520
    DRESULT res = RES_ERROR;
    uint32_t block_num;
    uint16_t block_size;
    switch (cmd) {
    case CTRL_SYNC:
        res = RES_OK;
 8000ea6:	4608      	mov	r0, r1
        res = RES_PARERR;
        break;
    }
    return res;
    /* USER CODE END IOCTL */
}
 8000ea8:	b002      	add	sp, #8
 8000eaa:	bd10      	pop	{r4, pc}
        USBD_Storage_Interface_fops_FS.GetCapacity(0, &block_num, &block_size);
 8000eac:	4b14      	ldr	r3, [pc, #80]	; (8000f00 <USER_ioctl+0x6c>)
 8000eae:	f10d 0202 	add.w	r2, sp, #2
 8000eb2:	685b      	ldr	r3, [r3, #4]
 8000eb4:	a901      	add	r1, sp, #4
 8000eb6:	2000      	movs	r0, #0
 8000eb8:	4798      	blx	r3
        *(DWORD*)buff = block_size / 512;
 8000eba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
        res = RES_OK;
 8000ebe:	2000      	movs	r0, #0
        *(DWORD*)buff = block_size / 512;
 8000ec0:	0a5b      	lsrs	r3, r3, #9
 8000ec2:	6023      	str	r3, [r4, #0]
}
 8000ec4:	b002      	add	sp, #8
 8000ec6:	bd10      	pop	{r4, pc}
        USBD_Storage_Interface_fops_FS.GetCapacity(0, &block_num, &block_size);
 8000ec8:	4b0d      	ldr	r3, [pc, #52]	; (8000f00 <USER_ioctl+0x6c>)
 8000eca:	f10d 0202 	add.w	r2, sp, #2
 8000ece:	685b      	ldr	r3, [r3, #4]
 8000ed0:	a901      	add	r1, sp, #4
 8000ed2:	2000      	movs	r0, #0
 8000ed4:	4798      	blx	r3
        *(DWORD*)buff = block_num + 1;
 8000ed6:	9b01      	ldr	r3, [sp, #4]
 8000ed8:	2000      	movs	r0, #0
 8000eda:	3301      	adds	r3, #1
 8000edc:	6023      	str	r3, [r4, #0]
}
 8000ede:	b002      	add	sp, #8
 8000ee0:	bd10      	pop	{r4, pc}
        USBD_Storage_Interface_fops_FS.GetCapacity(0, &block_num, &block_size);
 8000ee2:	4b07      	ldr	r3, [pc, #28]	; (8000f00 <USER_ioctl+0x6c>)
 8000ee4:	f10d 0202 	add.w	r2, sp, #2
 8000ee8:	685b      	ldr	r3, [r3, #4]
 8000eea:	a901      	add	r1, sp, #4
 8000eec:	2000      	movs	r0, #0
 8000eee:	4798      	blx	r3
        *(WORD*)buff = block_size;
 8000ef0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000ef4:	8023      	strh	r3, [r4, #0]
        res = RES_OK;
 8000ef6:	2000      	movs	r0, #0
}
 8000ef8:	b002      	add	sp, #8
 8000efa:	bd10      	pop	{r4, pc}
        res = RES_OK;
 8000efc:	2004      	movs	r0, #4
 8000efe:	e7d3      	b.n	8000ea8 <USER_ioctl+0x14>
 8000f00:	20000070 	.word	0x20000070

08000f04 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000f04:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000f3c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000f08:	480d      	ldr	r0, [pc, #52]	; (8000f40 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000f0a:	490e      	ldr	r1, [pc, #56]	; (8000f44 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000f0c:	4a0e      	ldr	r2, [pc, #56]	; (8000f48 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000f0e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000f10:	e002      	b.n	8000f18 <LoopCopyDataInit>

08000f12 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000f12:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000f14:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000f16:	3304      	adds	r3, #4

08000f18 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000f18:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000f1a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000f1c:	d3f9      	bcc.n	8000f12 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000f1e:	4a0b      	ldr	r2, [pc, #44]	; (8000f4c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000f20:	4c0b      	ldr	r4, [pc, #44]	; (8000f50 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000f22:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000f24:	e001      	b.n	8000f2a <LoopFillZerobss>

08000f26 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000f26:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000f28:	3204      	adds	r2, #4

08000f2a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000f2a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000f2c:	d3fb      	bcc.n	8000f26 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000f2e:	f007 fbc7 	bl	80086c0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000f32:	f023 ffcd 	bl	8024ed0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000f36:	f7ff fc45 	bl	80007c4 <main>
  bx  lr    
 8000f3a:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000f3c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000f40:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000f44:	20000254 	.word	0x20000254
  ldr r2, =_sidata
 8000f48:	0806fab0 	.word	0x0806fab0
  ldr r2, =_sbss
 8000f4c:	20000258 	.word	0x20000258
  ldr r4, =_ebss
 8000f50:	20013fd8 	.word	0x20013fd8

08000f54 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000f54:	e7fe      	b.n	8000f54 <ADC_IRQHandler>
	...

08000f58 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8000f58:	f000 bb0c 	b.w	8001574 <touchgfx_init>

08000f5c <MX_TouchGFX_Process>:
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000f5c:	f000 bb82 	b.w	8001664 <touchgfx_taskEntry>

08000f60 <_ZN20STM32TouchController4initEv>:
{
    /**
     * Initialize touch controller and driver
     *
     */
}
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop

08000f64 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000f64:	4770      	bx	lr
 8000f66:	bf00      	nop

08000f68 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000f68:	b5f0      	push	{r4, r5, r6, r7, lr}
    static int32_t y_prev = 0;
    static int count = 0;
    static bool touch_flag = false;
    uint16_t intx = 0, inty = 0;

    if (count > 6) {
 8000f6a:	4f40      	ldr	r7, [pc, #256]	; (800106c <_ZN20STM32TouchController11sampleTouchERlS0_+0x104>)
 8000f6c:	683b      	ldr	r3, [r7, #0]
{
 8000f6e:	b083      	sub	sp, #12
    uint16_t intx = 0, inty = 0;
 8000f70:	2600      	movs	r6, #0
    if (count > 6) {
 8000f72:	2b06      	cmp	r3, #6
{
 8000f74:	460c      	mov	r4, r1
 8000f76:	4615      	mov	r5, r2
    uint16_t intx = 0, inty = 0;
 8000f78:	f8ad 6004 	strh.w	r6, [sp, #4]
 8000f7c:	f8ad 6006 	strh.w	r6, [sp, #6]
    if (count > 6) {
 8000f80:	dc60      	bgt.n	8001044 <_ZN20STM32TouchController11sampleTouchERlS0_+0xdc>
        XPT2046_Update(&intx, &inty);
        count = 0;
    } else {
        count++;
 8000f82:	3301      	adds	r3, #1
 8000f84:	4631      	mov	r1, r6
 8000f86:	603b      	str	r3, [r7, #0]
 8000f88:	4630      	mov	r0, r6
    }

    if (XPT2046_IsReasonable(intx, inty)) {
 8000f8a:	f00e fec3 	bl	800fd14 <XPT2046_IsReasonable>
 8000f8e:	2800      	cmp	r0, #0
 8000f90:	d055      	beq.n	800103e <_ZN20STM32TouchController11sampleTouchERlS0_+0xd6>
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000f92:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000f96:	f8bd 2006 	ldrh.w	r2, [sp, #6]
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000f9a:	4e35      	ldr	r6, [pc, #212]	; (8001070 <_ZN20STM32TouchController11sampleTouchERlS0_+0x108>)
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000f9c:	4835      	ldr	r0, [pc, #212]	; (8001074 <_ZN20STM32TouchController11sampleTouchERlS0_+0x10c>)
        ConvXPTtoILI(&intx, &inty);
        if (intx != prevx || inty != prevy) {
 8000f9e:	4936      	ldr	r1, [pc, #216]	; (8001078 <_ZN20STM32TouchController11sampleTouchERlS0_+0x110>)
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000fa0:	f5a3 73af 	sub.w	r3, r3, #350	; 0x15e
 8000fa4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8000fa8:	019b      	lsls	r3, r3, #6
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000faa:	f5a2 72af 	sub.w	r2, r2, #350	; 0x15e
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000fae:	fb86 7603 	smull	r7, r6, r6, r3
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fb2:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
 8000fb6:	0112      	lsls	r2, r2, #4
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000fb8:	441e      	add	r6, r3
 8000fba:	17db      	asrs	r3, r3, #31
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fbc:	fb80 7002 	smull	r7, r0, r0, r2
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000fc0:	ebc3 23e6 	rsb	r3, r3, r6, asr #11
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fc4:	4410      	add	r0, r2
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 8000fc6:	b21b      	sxth	r3, r3
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fc8:	17d2      	asrs	r2, r2, #31
    tx = (tx < 0) ? 0 : tx;
 8000fca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fce:	ebc2 22e0 	rsb	r2, r2, r0, asr #11
    tx = (tx >= GUI_WIDTH) ? GUI_WIDTH - 1 : tx;
 8000fd2:	f240 103f 	movw	r0, #319	; 0x13f
 8000fd6:	4283      	cmp	r3, r0
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 8000fd8:	b212      	sxth	r2, r2
    tx = (tx >= GUI_WIDTH) ? GUI_WIDTH - 1 : tx;
 8000fda:	bfa8      	it	ge
 8000fdc:	4603      	movge	r3, r0
    ty = (ty < 0) ? 0 : ty;
 8000fde:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
        if (intx != prevx || inty != prevy) {
 8000fe2:	8808      	ldrh	r0, [r1, #0]
    ty = (ty >= GUI_HEIGHT) ? GUI_HEIGHT - 1 : ty;
 8000fe4:	2aef      	cmp	r2, #239	; 0xef
    *x = tx;
 8000fe6:	b29f      	uxth	r7, r3
    ty = (ty >= GUI_HEIGHT) ? GUI_HEIGHT - 1 : ty;
 8000fe8:	bfa8      	it	ge
 8000fea:	22ef      	movge	r2, #239	; 0xef
        if (intx != prevx || inty != prevy) {
 8000fec:	42b8      	cmp	r0, r7
    *y = ty;
 8000fee:	fa1f fc82 	uxth.w	ip, r2
        if (intx != prevx || inty != prevy) {
 8000ff2:	d020      	beq.n	8001036 <_ZN20STM32TouchController11sampleTouchERlS0_+0xce>
            x = GUI_WIDTH - (int32_t)intx;
            y = GUI_HEIGHT - (int32_t)inty;

            if (touch_flag) {
 8000ff4:	4e21      	ldr	r6, [pc, #132]	; (800107c <_ZN20STM32TouchController11sampleTouchERlS0_+0x114>)
 8000ff6:	7830      	ldrb	r0, [r6, #0]
            x = GUI_WIDTH - (int32_t)intx;
 8000ff8:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
            y = GUI_HEIGHT - (int32_t)inty;
 8000ffc:	f1c2 02f0 	rsb	r2, r2, #240	; 0xf0
            x = GUI_WIDTH - (int32_t)intx;
 8001000:	6023      	str	r3, [r4, #0]
            y = GUI_HEIGHT - (int32_t)inty;
 8001002:	602a      	str	r2, [r5, #0]
            if (touch_flag) {
 8001004:	b348      	cbz	r0, 800105a <_ZN20STM32TouchController11sampleTouchERlS0_+0xf2>
                touch_flag = false;
                if (std::abs(x - x_prev) > 10 || std::abs(y - y_prev) > 10) {
 8001006:	4d1e      	ldr	r5, [pc, #120]	; (8001080 <_ZN20STM32TouchController11sampleTouchERlS0_+0x118>)
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	682c      	ldr	r4, [r5, #0]
 800100c:	1b1b      	subs	r3, r3, r4

  using ::abs;

#ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  inline long
  abs(long __i) { return __builtin_labs(__i); }
 800100e:	2b00      	cmp	r3, #0
 8001010:	bfb8      	it	lt
 8001012:	425b      	neglt	r3, r3
                touch_flag = false;
 8001014:	2400      	movs	r4, #0
                if (std::abs(x - x_prev) > 10 || std::abs(y - y_prev) > 10) {
 8001016:	2b0a      	cmp	r3, #10
                touch_flag = false;
 8001018:	7034      	strb	r4, [r6, #0]
                if (std::abs(x - x_prev) > 10 || std::abs(y - y_prev) > 10) {
 800101a:	dc10      	bgt.n	800103e <_ZN20STM32TouchController11sampleTouchERlS0_+0xd6>
 800101c:	4b19      	ldr	r3, [pc, #100]	; (8001084 <_ZN20STM32TouchController11sampleTouchERlS0_+0x11c>)
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	1ad2      	subs	r2, r2, r3
 8001022:	2a00      	cmp	r2, #0
 8001024:	bfb8      	it	lt
 8001026:	4252      	neglt	r2, r2
 8001028:	2a0a      	cmp	r2, #10
 800102a:	dc08      	bgt.n	800103e <_ZN20STM32TouchController11sampleTouchERlS0_+0xd6>
                x_prev = x;
                y_prev = y;
                return false;
            }
            prevx = intx;
            prevy = inty;
 800102c:	4b16      	ldr	r3, [pc, #88]	; (8001088 <_ZN20STM32TouchController11sampleTouchERlS0_+0x120>)
            prevx = intx;
 800102e:	800f      	strh	r7, [r1, #0]
            prevy = inty;
 8001030:	f8a3 c000 	strh.w	ip, [r3]
            return true;
 8001034:	e004      	b.n	8001040 <_ZN20STM32TouchController11sampleTouchERlS0_+0xd8>
        if (intx != prevx || inty != prevy) {
 8001036:	4814      	ldr	r0, [pc, #80]	; (8001088 <_ZN20STM32TouchController11sampleTouchERlS0_+0x120>)
 8001038:	8800      	ldrh	r0, [r0, #0]
 800103a:	4560      	cmp	r0, ip
 800103c:	d1da      	bne.n	8000ff4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x8c>
        }
    }
    return false;
 800103e:	2000      	movs	r0, #0
}
 8001040:	b003      	add	sp, #12
 8001042:	bdf0      	pop	{r4, r5, r6, r7, pc}
        XPT2046_Update(&intx, &inty);
 8001044:	f10d 0106 	add.w	r1, sp, #6
 8001048:	a801      	add	r0, sp, #4
 800104a:	f00e fdff 	bl	800fc4c <XPT2046_Update>
        count = 0;
 800104e:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 8001052:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8001056:	603e      	str	r6, [r7, #0]
 8001058:	e797      	b.n	8000f8a <_ZN20STM32TouchController11sampleTouchERlS0_+0x22>
                x_prev = x;
 800105a:	4b09      	ldr	r3, [pc, #36]	; (8001080 <_ZN20STM32TouchController11sampleTouchERlS0_+0x118>)
                y_prev = y;
 800105c:	4909      	ldr	r1, [pc, #36]	; (8001084 <_ZN20STM32TouchController11sampleTouchERlS0_+0x11c>)
                x_prev = x;
 800105e:	6824      	ldr	r4, [r4, #0]
 8001060:	601c      	str	r4, [r3, #0]
                touch_flag = true;
 8001062:	2301      	movs	r3, #1
                y_prev = y;
 8001064:	600a      	str	r2, [r1, #0]
                touch_flag = true;
 8001066:	7033      	strb	r3, [r6, #0]
}
 8001068:	b003      	add	sp, #12
 800106a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800106c:	2000027c 	.word	0x2000027c
 8001070:	97f7b075 	.word	0x97f7b075
 8001074:	a151c331 	.word	0xa151c331
 8001078:	20000018 	.word	0x20000018
 800107c:	20000278 	.word	0x20000278
 8001080:	20000280 	.word	0x20000280
 8001084:	20000284 	.word	0x20000284
 8001088:	2000001a 	.word	0x2000001a

0800108c <_ZN20STM32TouchControllerD0Ev>:
 800108c:	b510      	push	{r4, lr}
 800108e:	2104      	movs	r1, #4
 8001090:	4604      	mov	r4, r0
 8001092:	f023 f8b4 	bl	80241fe <_ZdlPvj>
 8001096:	4620      	mov	r0, r4
 8001098:	bd10      	pop	{r4, pc}
 800109a:	bf00      	nop

0800109c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800109c:	4770      	bx	lr
 800109e:	bf00      	nop

080010a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 80010a0:	4770      	bx	lr
 80010a2:	bf00      	nop

080010a4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 80010a4:	4770      	bx	lr
 80010a6:	bf00      	nop

080010a8 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80010a8:	2000      	movs	r0, #0
 80010aa:	4770      	bx	lr

080010ac <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80010ac:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80010ae:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80010b2:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 80010b6:	4770      	bx	lr

080010b8 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80010b8:	2000      	movs	r0, #0
 80010ba:	4770      	bx	lr

080010bc <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80010bc:	4b03      	ldr	r3, [pc, #12]	; (80010cc <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80010be:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80010c0:	3900      	subs	r1, #0
 80010c2:	bf18      	it	ne
 80010c4:	2101      	movne	r1, #1
 80010c6:	7019      	strb	r1, [r3, #0]
    }
 80010c8:	4770      	bx	lr
 80010ca:	bf00      	nop
 80010cc:	20002c8b 	.word	0x20002c8b

080010d0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80010d0:	2000      	movs	r0, #0
 80010d2:	4770      	bx	lr

080010d4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80010d4:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
 80010d6:	4608      	mov	r0, r1
        if (taskDelayFunc)
 80010d8:	b103      	cbz	r3, 80010dc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80010da:	4718      	bx	r3
        }
    }
 80010dc:	4770      	bx	lr
 80010de:	bf00      	nop

080010e0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80010e0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80010e4:	4770      	bx	lr
 80010e6:	bf00      	nop

080010e8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop

080010ec <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop

080010f0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80010f0:	4770      	bx	lr
 80010f2:	bf00      	nop

080010f4 <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80010f4:	f000 bbcc 	b.w	8001890 <_ZN20TouchGFXGeneratedHAL10initializeEv>

080010f8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80010f8:	f000 bb2a 	b.w	8001750 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080010fc <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80010fc:	f000 bb2a 	b.w	8001754 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001100 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001100:	f000 bc5e 	b.w	80019c0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001104 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8001104:	f000 bbba 	b.w	800187c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001108 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001108:	f000 bb20 	b.w	800174c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800110c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800110c:	f000 bb1e 	b.w	800174c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001110 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001110:	f000 bb1c 	b.w	800174c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001114 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001114:	f000 bb1a 	b.w	800174c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001118 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001118:	f000 bb3e 	b.w	8001798 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

0800111c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 800111c:	f000 bb3e 	b.w	800179c <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001120 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001120:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001122:	4b09      	ldr	r3, [pc, #36]	; (8001148 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001124:	881b      	ldrh	r3, [r3, #0]
 8001126:	428b      	cmp	r3, r1
 8001128:	d808      	bhi.n	800113c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
 800112a:	4b08      	ldr	r3, [pc, #32]	; (800114c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800112c:	881b      	ldrh	r3, [r3, #0]
 800112e:	4293      	cmp	r3, r2
 8001130:	d804      	bhi.n	800113c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
 8001132:	4807      	ldr	r0, [pc, #28]	; (8001150 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
 8001134:	4b07      	ldr	r3, [pc, #28]	; (8001154 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
 8001136:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001138:	801a      	strh	r2, [r3, #0]
    }
 800113a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800113c:	4b06      	ldr	r3, [pc, #24]	; (8001158 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800113e:	4a07      	ldr	r2, [pc, #28]	; (800115c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001140:	4807      	ldr	r0, [pc, #28]	; (8001160 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001142:	219e      	movs	r1, #158	; 0x9e
 8001144:	f023 fe7a 	bl	8024e3c <__assert_func>
 8001148:	20002c80 	.word	0x20002c80
 800114c:	20002c82 	.word	0x20002c82
 8001150:	20002c86 	.word	0x20002c86
 8001154:	20002c88 	.word	0x20002c88
 8001158:	0802623c 	.word	0x0802623c
 800115c:	080262a0 	.word	0x080262a0
 8001160:	080262e4 	.word	0x080262e4

08001164 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001164:	b510      	push	{r4, lr}
 8001166:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001168:	f010 fc28 	bl	80119bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800116c:	6823      	ldr	r3, [r4, #0]
 800116e:	4620      	mov	r0, r4
 8001170:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001178:	4718      	bx	r3
 800117a:	bf00      	nop

0800117c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800117c:	f00f be77 	b.w	8010e6e <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001180 <_ZN11TouchGFXHALD0Ev>:
 8001180:	b510      	push	{r4, lr}
 8001182:	217c      	movs	r1, #124	; 0x7c
 8001184:	4604      	mov	r4, r0
 8001186:	f023 f83a 	bl	80241fe <_ZdlPvj>
 800118a:	4620      	mov	r0, r4
 800118c:	bd10      	pop	{r4, pc}
 800118e:	bf00      	nop

08001190 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001190:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8001194:	b11b      	cbz	r3, 800119e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001196:	6840      	ldr	r0, [r0, #4]
 8001198:	6803      	ldr	r3, [r0, #0]
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4718      	bx	r3
    }
 800119e:	4618      	mov	r0, r3
 80011a0:	4770      	bx	lr
 80011a2:	bf00      	nop

080011a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
 80011a4:	f890 2074 	ldrb.w	r2, [r0, #116]	; 0x74
 80011a8:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 80011ac:	429a      	cmp	r2, r3
            if (DISPLAY_ROTATION == rotate0)
 80011ae:	4b0e      	ldr	r3, [pc, #56]	; (80011e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
    virtual void performDisplayOrientationChange()
 80011b0:	b410      	push	{r4}
            if (DISPLAY_ROTATION == rotate0)
 80011b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80011b4:	d00b      	beq.n	80011ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
            if (DISPLAY_ROTATION == rotate0)
 80011b6:	b93a      	cbnz	r2, 80011c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011b8:	4a0c      	ldr	r2, [pc, #48]	; (80011ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80011ba:	490d      	ldr	r1, [pc, #52]	; (80011f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011bc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80011be:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011c0:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80011c2:	2101      	movs	r1, #1
                DISPLAY_WIDTH = tmp;
 80011c4:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80011c6:	7019      	strb	r1, [r3, #0]
    }
 80011c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011cc:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
 80011ce:	2a00      	cmp	r2, #0
 80011d0:	d0fa      	beq.n	80011c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011d2:	4a06      	ldr	r2, [pc, #24]	; (80011ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80011d4:	4906      	ldr	r1, [pc, #24]	; (80011f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011d6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80011d8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80011da:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80011dc:	2100      	movs	r1, #0
    }
 80011de:	f85d 4b04 	ldr.w	r4, [sp], #4
            DISPLAY_WIDTH = tmp;
 80011e2:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80011e4:	7019      	strb	r1, [r3, #0]
    }
 80011e6:	4770      	bx	lr
 80011e8:	20002c84 	.word	0x20002c84
 80011ec:	20002c80 	.word	0x20002c80
 80011f0:	20002c82 	.word	0x20002c82

080011f4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
 80011f4:	6840      	ldr	r0, [r0, #4]
 80011f6:	4a04      	ldr	r2, [pc, #16]	; (8001208 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
 80011f8:	6803      	ldr	r3, [r0, #0]
 80011fa:	699b      	ldr	r3, [r3, #24]
 80011fc:	4293      	cmp	r3, r2
 80011fe:	d101      	bne.n	8001204 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
 8001200:	2000      	movs	r0, #0
 8001202:	4770      	bx	lr
        return dma.getDMAType();
 8001204:	4718      	bx	r3
 8001206:	bf00      	nop
 8001208:	080010a9 	.word	0x080010a9

0800120c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800120c:	b570      	push	{r4, r5, r6, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800120e:	b1c1      	cbz	r1, 8001242 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x36>
        setAnimationStorage(animationStorage);
 8001210:	6805      	ldr	r5, [r0, #0]
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8001212:	63c1      	str	r1, [r0, #60]	; 0x3c
        setAnimationStorage(animationStorage);
 8001214:	f8d5 508c 	ldr.w	r5, [r5, #140]	; 0x8c
 8001218:	490d      	ldr	r1, [pc, #52]	; (8001250 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800121a:	4e0e      	ldr	r6, [pc, #56]	; (8001254 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800121c:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800121e:	3a00      	subs	r2, #0
 8001220:	bf18      	it	ne
 8001222:	2201      	movne	r2, #1
 8001224:	428d      	cmp	r5, r1
 8001226:	7032      	strb	r2, [r6, #0]
        setAnimationStorage(animationStorage);
 8001228:	d106      	bne.n	8001238 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2c>
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800122a:	4a0b      	ldr	r2, [pc, #44]	; (8001258 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800122c:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800122e:	3b00      	subs	r3, #0
 8001230:	bf18      	it	ne
 8001232:	2301      	movne	r3, #1
 8001234:	7013      	strb	r3, [r2, #0]
    }
 8001236:	bd70      	pop	{r4, r5, r6, pc}
        setAnimationStorage(animationStorage);
 8001238:	4619      	mov	r1, r3
 800123a:	462b      	mov	r3, r5
    }
 800123c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001240:	4718      	bx	r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001242:	4b06      	ldr	r3, [pc, #24]	; (800125c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
 8001244:	4a06      	ldr	r2, [pc, #24]	; (8001260 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8001246:	4807      	ldr	r0, [pc, #28]	; (8001264 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8001248:	f240 21d2 	movw	r1, #722	; 0x2d2
 800124c:	f023 fdf6 	bl	8024e3c <__assert_func>
 8001250:	080010bd 	.word	0x080010bd
 8001254:	20002c8a 	.word	0x20002c8a
 8001258:	20002c8b 	.word	0x20002c8b
 800125c:	0802632c 	.word	0x0802632c
 8001260:	08026364 	.word	0x08026364
 8001264:	080262e4 	.word	0x080262e4

08001268 <_ZN8touchgfx10OSWrappers10initializeEv>:
/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    fb_sem = 0;
 8001268:	4902      	ldr	r1, [pc, #8]	; (8001274 <_ZN8touchgfx10OSWrappers10initializeEv+0xc>)
    vsync_sem = 0;
 800126a:	4a03      	ldr	r2, [pc, #12]	; (8001278 <_ZN8touchgfx10OSWrappers10initializeEv+0x10>)
    fb_sem = 0;
 800126c:	2300      	movs	r3, #0
 800126e:	600b      	str	r3, [r1, #0]
    vsync_sem = 0;
 8001270:	6013      	str	r3, [r2, #0]
}
 8001272:	4770      	bx	lr
 8001274:	20000288 	.word	0x20000288
 8001278:	2000028c 	.word	0x2000028c

0800127c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800127c:	4a03      	ldr	r2, [pc, #12]	; (800128c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x10>)
    while(fb_sem);
 800127e:	6813      	ldr	r3, [r2, #0]
 8001280:	2b00      	cmp	r3, #0
 8001282:	d1fc      	bne.n	800127e <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2>
    fb_sem = 1;
 8001284:	2301      	movs	r3, #1
 8001286:	6013      	str	r3, [r2, #0]
}
 8001288:	4770      	bx	lr
 800128a:	bf00      	nop
 800128c:	20000288 	.word	0x20000288

08001290 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    fb_sem = 0;
 8001290:	4b01      	ldr	r3, [pc, #4]	; (8001298 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001292:	2200      	movs	r2, #0
 8001294:	601a      	str	r2, [r3, #0]
}
 8001296:	4770      	bx	lr
 8001298:	20000288 	.word	0x20000288

0800129c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    fb_sem = 1;
 800129c:	4b01      	ldr	r3, [pc, #4]	; (80012a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x8>)
 800129e:	2201      	movs	r2, #1
 80012a0:	601a      	str	r2, [r3, #0]
}
 80012a2:	4770      	bx	lr
 80012a4:	20000288 	.word	0x20000288

080012a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80012a8:	4b01      	ldr	r3, [pc, #4]	; (80012b0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
 80012aa:	2200      	movs	r2, #0
 80012ac:	601a      	str	r2, [r3, #0]
 80012ae:	4770      	bx	lr
 80012b0:	20000288 	.word	0x20000288

080012b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    vsync_sem = 1;
 80012b4:	4b01      	ldr	r3, [pc, #4]	; (80012bc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x8>)
 80012b6:	2201      	movs	r2, #1
 80012b8:	601a      	str	r2, [r3, #0]
}
 80012ba:	4770      	bx	lr
 80012bc:	2000028c 	.word	0x2000028c

080012c0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
    vsync_sem = 0;
 80012c0:	4b01      	ldr	r3, [pc, #4]	; (80012c8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x8>)
 80012c2:	2200      	movs	r2, #0
 80012c4:	601a      	str	r2, [r3, #0]
}
 80012c6:	4770      	bx	lr
 80012c8:	2000028c 	.word	0x2000028c

080012cc <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
    return vsync_sem;
 80012cc:	4b02      	ldr	r3, [pc, #8]	; (80012d8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0xc>)
 80012ce:	6818      	ldr	r0, [r3, #0]
}
 80012d0:	3800      	subs	r0, #0
 80012d2:	bf18      	it	ne
 80012d4:	2001      	movne	r0, #1
 80012d6:	4770      	bx	lr
 80012d8:	2000028c 	.word	0x2000028c

080012dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
    if(vsync_sem)
 80012dc:	4b0d      	ldr	r3, [pc, #52]	; (8001314 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x38>)
 80012de:	681a      	ldr	r2, [r3, #0]
 80012e0:	b19a      	cbz	r2, 800130a <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2e>
        return instance;
 80012e2:	4a0d      	ldr	r2, [pc, #52]	; (8001318 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x3c>)
 80012e4:	490d      	ldr	r1, [pc, #52]	; (800131c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x40>)
{
 80012e6:	b510      	push	{r4, lr}
 80012e8:	6814      	ldr	r4, [r2, #0]
    {
        vsync_sem = 0;
        HAL::getInstance()->backPorchExited();
 80012ea:	6822      	ldr	r2, [r4, #0]
 80012ec:	6f12      	ldr	r2, [r2, #112]	; 0x70
        vsync_sem = 0;
 80012ee:	2000      	movs	r0, #0
 80012f0:	428a      	cmp	r2, r1
 80012f2:	6018      	str	r0, [r3, #0]
        swapFrameBuffers();
 80012f4:	4620      	mov	r0, r4
 80012f6:	d109      	bne.n	800130c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>
 80012f8:	f010 fb60 	bl	80119bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80012fc:	6823      	ldr	r3, [r4, #0]
 80012fe:	4620      	mov	r0, r4
 8001300:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
}
 8001304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001308:	4718      	bx	r3
 800130a:	4770      	bx	lr
 800130c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        HAL::getInstance()->backPorchExited();
 8001310:	4710      	bx	r2
 8001312:	bf00      	nop
 8001314:	2000028c 	.word	0x2000028c
 8001318:	20002c8c 	.word	0x20002c8c
 800131c:	08001165 	.word	0x08001165

08001320 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }
 8001320:	4770      	bx	lr
 8001322:	bf00      	nop

08001324 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8001324:	4770      	bx	lr
 8001326:	bf00      	nop

08001328 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8001328:	4770      	bx	lr
 800132a:	bf00      	nop

0800132c <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 800132c:	2000      	movs	r0, #0
 800132e:	4770      	bx	lr

08001330 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8001330:	4770      	bx	lr
 8001332:	bf00      	nop

08001334 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8001334:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001336:	4a03      	ldr	r2, [pc, #12]	; (8001344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8001338:	4b03      	ldr	r3, [pc, #12]	; (8001348 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 800133a:	4804      	ldr	r0, [pc, #16]	; (800134c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800133c:	2122      	movs	r1, #34	; 0x22
 800133e:	f023 fd7d 	bl	8024e3c <__assert_func>
 8001342:	bf00      	nop
 8001344:	080264b0 	.word	0x080264b0
 8001348:	0802648c 	.word	0x0802648c
 800134c:	080264f0 	.word	0x080264f0

08001350 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8001350:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001352:	4a03      	ldr	r2, [pc, #12]	; (8001360 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8001354:	4b03      	ldr	r3, [pc, #12]	; (8001364 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8001356:	4804      	ldr	r0, [pc, #16]	; (8001368 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8001358:	2127      	movs	r1, #39	; 0x27
 800135a:	f023 fd6f 	bl	8024e3c <__assert_func>
 800135e:	bf00      	nop
 8001360:	0802653c 	.word	0x0802653c
 8001364:	0802648c 	.word	0x0802648c
 8001368:	080264f0 	.word	0x080264f0

0800136c <_ZN8STM32DMAD0Ev>:
 800136c:	b510      	push	{r4, lr}
 800136e:	2144      	movs	r1, #68	; 0x44
 8001370:	4604      	mov	r4, r0
 8001372:	f022 ff44 	bl	80241fe <_ZdlPvj>
 8001376:	4620      	mov	r0, r4
 8001378:	bd10      	pop	{r4, pc}
 800137a:	bf00      	nop

0800137c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800137c:	b538      	push	{r3, r4, r5, lr}
    : DMA_Interface(q), q(&b, 1)
 800137e:	4601      	mov	r1, r0
STM32DMA::STM32DMA()
 8001380:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001382:	2500      	movs	r5, #0
    : DMA_Interface(q), q(&b, 1)
 8001384:	4b06      	ldr	r3, [pc, #24]	; (80013a0 <_ZN8STM32DMAC1Ev+0x24>)
 8001386:	7225      	strb	r5, [r4, #8]
 8001388:	300c      	adds	r0, #12
 800138a:	6060      	str	r0, [r4, #4]
 800138c:	7265      	strb	r5, [r4, #9]
 800138e:	2201      	movs	r2, #1
 8001390:	f841 3b20 	str.w	r3, [r1], #32
 8001394:	f010 fc50 	bl	8011c38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001398:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800139a:	4620      	mov	r0, r4
 800139c:	bd38      	pop	{r3, r4, r5, pc}
 800139e:	bf00      	nop
 80013a0:	08026584 	.word	0x08026584

080013a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80013a4:	2001      	movs	r0, #1
 80013a6:	4770      	bx	lr

080013a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80013a8:	2038      	movs	r0, #56	; 0x38
 80013aa:	4770      	bx	lr

080013ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80013ac:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 80013b0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
 80013b4:	3008      	adds	r0, #8
 80013b6:	4770      	bx	lr

080013b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80013b8:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 80013bc:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
 80013c0:	3008      	adds	r0, #8
 80013c2:	4770      	bx	lr

080013c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80013c4:	2001      	movs	r0, #1
 80013c6:	4770      	bx	lr

080013c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80013c8:	f640 4024 	movw	r0, #3108	; 0xc24
 80013cc:	4770      	bx	lr
 80013ce:	bf00      	nop

080013d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80013d0:	f640 4324 	movw	r3, #3108	; 0xc24
 80013d4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80013d8:	3008      	adds	r0, #8
 80013da:	4770      	bx	lr

080013dc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80013dc:	f640 4324 	movw	r3, #3108	; 0xc24
 80013e0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80013e4:	3008      	adds	r0, #8
 80013e6:	4770      	bx	lr

080013e8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80013e8:	2001      	movs	r0, #1
 80013ea:	4770      	bx	lr

080013ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80013ec:	2010      	movs	r0, #16
 80013ee:	4770      	bx	lr

080013f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80013f0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80013f4:	3008      	adds	r0, #8
 80013f6:	4770      	bx	lr

080013f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80013f8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80013fc:	3008      	adds	r0, #8
 80013fe:	4770      	bx	lr

08001400 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoLogoScreenNoTransition();
 8001400:	4608      	mov	r0, r1
 8001402:	f001 b8db 	b.w	80025bc <_ZN23FrontendApplicationBase26gotoLogoScreenNoTransitionEv>
 8001406:	bf00      	nop

08001408 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001408:	b510      	push	{r4, lr}
 800140a:	4b03      	ldr	r3, [pc, #12]	; (8001418 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 800140c:	6003      	str	r3, [r0, #0]
 800140e:	4604      	mov	r4, r0
 8001410:	f00e fcb7 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001414:	4620      	mov	r0, r4
 8001416:	bd10      	pop	{r4, pc}
 8001418:	0802663c 	.word	0x0802663c

0800141c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 800141c:	b510      	push	{r4, lr}
 800141e:	4b05      	ldr	r3, [pc, #20]	; (8001434 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
 8001420:	6003      	str	r3, [r0, #0]
 8001422:	4604      	mov	r4, r0
 8001424:	f00e fcad 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001428:	4620      	mov	r0, r4
 800142a:	2140      	movs	r1, #64	; 0x40
 800142c:	f022 fee7 	bl	80241fe <_ZdlPvj>
 8001430:	4620      	mov	r0, r4
 8001432:	bd10      	pop	{r4, pc}
 8001434:	0802663c 	.word	0x0802663c

08001438 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001438:	b510      	push	{r4, lr}
 800143a:	4b03      	ldr	r3, [pc, #12]	; (8001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800143c:	6003      	str	r3, [r0, #0]
 800143e:	4604      	mov	r4, r0
 8001440:	f00e fc9f 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001444:	4620      	mov	r0, r4
 8001446:	bd10      	pop	{r4, pc}
 8001448:	08026608 	.word	0x08026608

0800144c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800144c:	b510      	push	{r4, lr}
 800144e:	4b06      	ldr	r3, [pc, #24]	; (8001468 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11SettingViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
 8001450:	6003      	str	r3, [r0, #0]
 8001452:	4604      	mov	r4, r0
 8001454:	f00e fc95 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001458:	4620      	mov	r0, r4
 800145a:	f640 412c 	movw	r1, #3116	; 0xc2c
 800145e:	f022 fece 	bl	80241fe <_ZdlPvj>
 8001462:	4620      	mov	r0, r4
 8001464:	bd10      	pop	{r4, pc}
 8001466:	bf00      	nop
 8001468:	08026608 	.word	0x08026608

0800146c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800146c:	b510      	push	{r4, lr}
 800146e:	4b03      	ldr	r3, [pc, #12]	; (800147c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001470:	6003      	str	r3, [r0, #0]
 8001472:	4604      	mov	r4, r0
 8001474:	f00e fc85 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001478:	4620      	mov	r0, r4
 800147a:	bd10      	pop	{r4, pc}
 800147c:	080265d4 	.word	0x080265d4

08001480 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001480:	b510      	push	{r4, lr}
 8001482:	4b05      	ldr	r3, [pc, #20]	; (8001498 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17TransferPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
 8001484:	6003      	str	r3, [r0, #0]
 8001486:	4604      	mov	r4, r0
 8001488:	f00e fc7b 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800148c:	4620      	mov	r0, r4
 800148e:	2118      	movs	r1, #24
 8001490:	f022 feb5 	bl	80241fe <_ZdlPvj>
 8001494:	4620      	mov	r0, r4
 8001496:	bd10      	pop	{r4, pc}
 8001498:	080265d4 	.word	0x080265d4

0800149c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800149c:	4a0c      	ldr	r2, [pc, #48]	; (80014d0 <_ZN12FrontendHeapD1Ev+0x34>)
 800149e:	4b0d      	ldr	r3, [pc, #52]	; (80014d4 <_ZN12FrontendHeapD1Ev+0x38>)
 80014a0:	b510      	push	{r4, lr}
 80014a2:	4604      	mov	r4, r0
 80014a4:	6002      	str	r2, [r0, #0]
 80014a6:	f8c0 3c58 	str.w	r3, [r0, #3160]	; 0xc58
 80014aa:	f600 4058 	addw	r0, r0, #3160	; 0xc58
 80014ae:	f00e fc68 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014b2:	4620      	mov	r0, r4
 80014b4:	4b08      	ldr	r3, [pc, #32]	; (80014d8 <_ZN12FrontendHeapD1Ev+0x3c>)
 80014b6:	f840 3f2c 	str.w	r3, [r0, #44]!
 80014ba:	f00e fc62 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014be:	4620      	mov	r0, r4
 80014c0:	4b06      	ldr	r3, [pc, #24]	; (80014dc <_ZN12FrontendHeapD1Ev+0x40>)
 80014c2:	f840 3f14 	str.w	r3, [r0, #20]!
 80014c6:	f00e fc5c 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014ca:	4620      	mov	r0, r4
 80014cc:	bd10      	pop	{r4, pc}
 80014ce:	bf00      	nop
 80014d0:	08026670 	.word	0x08026670
 80014d4:	0802663c 	.word	0x0802663c
 80014d8:	08026608 	.word	0x08026608
 80014dc:	080265d4 	.word	0x080265d4

080014e0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80014e0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
 80014e2:	4c0c      	ldr	r4, [pc, #48]	; (8001514 <__tcf_0+0x34>)
 80014e4:	4a0c      	ldr	r2, [pc, #48]	; (8001518 <__tcf_0+0x38>)
 80014e6:	4b0d      	ldr	r3, [pc, #52]	; (800151c <__tcf_0+0x3c>)
 80014e8:	6022      	str	r2, [r4, #0]
 80014ea:	f604 4058 	addw	r0, r4, #3160	; 0xc58
 80014ee:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58
 80014f2:	f00e fc46 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014f6:	4620      	mov	r0, r4
 80014f8:	4b09      	ldr	r3, [pc, #36]	; (8001520 <__tcf_0+0x40>)
 80014fa:	f840 3f2c 	str.w	r3, [r0, #44]!
 80014fe:	f00e fc40 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001502:	4620      	mov	r0, r4
 8001504:	4b07      	ldr	r3, [pc, #28]	; (8001524 <__tcf_0+0x44>)
 8001506:	f840 3f14 	str.w	r3, [r0, #20]!
        static FrontendHeap instance;
 800150a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800150e:	f00e bc38 	b.w	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001512:	bf00      	nop
 8001514:	20000294 	.word	0x20000294
 8001518:	08026670 	.word	0x08026670
 800151c:	0802663c 	.word	0x0802663c
 8001520:	08026608 	.word	0x08026608
 8001524:	080265d4 	.word	0x080265d4

08001528 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001528:	4a0e      	ldr	r2, [pc, #56]	; (8001564 <_ZN12FrontendHeapD0Ev+0x3c>)
 800152a:	4b0f      	ldr	r3, [pc, #60]	; (8001568 <_ZN12FrontendHeapD0Ev+0x40>)
 800152c:	b510      	push	{r4, lr}
 800152e:	4604      	mov	r4, r0
 8001530:	6002      	str	r2, [r0, #0]
 8001532:	f8c0 3c58 	str.w	r3, [r0, #3160]	; 0xc58
 8001536:	f600 4058 	addw	r0, r0, #3160	; 0xc58
 800153a:	f00e fc22 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800153e:	4620      	mov	r0, r4
 8001540:	4b0a      	ldr	r3, [pc, #40]	; (800156c <_ZN12FrontendHeapD0Ev+0x44>)
 8001542:	f840 3f2c 	str.w	r3, [r0, #44]!
 8001546:	f00e fc1c 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800154a:	4620      	mov	r0, r4
 800154c:	4b08      	ldr	r3, [pc, #32]	; (8001570 <_ZN12FrontendHeapD0Ev+0x48>)
 800154e:	f840 3f14 	str.w	r3, [r0, #20]!
 8001552:	f00e fc16 	bl	800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001556:	4620      	mov	r0, r4
 8001558:	f640 51f4 	movw	r1, #3572	; 0xdf4
 800155c:	f022 fe4f 	bl	80241fe <_ZdlPvj>
 8001560:	4620      	mov	r0, r4
 8001562:	bd10      	pop	{r4, pc}
 8001564:	08026670 	.word	0x08026670
 8001568:	0802663c 	.word	0x0802663c
 800156c:	08026608 	.word	0x08026608
 8001570:	080265d4 	.word	0x080265d4

08001574 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 8001574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001578:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800157a:	f000 fe1b 	bl	80021b4 <_ZN14BitmapDatabase11getInstanceEv>
 800157e:	4605      	mov	r5, r0
 8001580:	f000 fe1c 	bl	80021bc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001584:	2400      	movs	r4, #0
 8001586:	4601      	mov	r1, r0
 8001588:	4623      	mov	r3, r4
 800158a:	4628      	mov	r0, r5
 800158c:	4622      	mov	r2, r4
 800158e:	9400      	str	r4, [sp, #0]
 8001590:	f017 f848 	bl	8018624 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001594:	4b28      	ldr	r3, [pc, #160]	; (8001638 <touchgfx_init+0xc4>)
 8001596:	4a29      	ldr	r2, [pc, #164]	; (800163c <touchgfx_init+0xc8>)
        static FrontendHeap instance;
 8001598:	4d29      	ldr	r5, [pc, #164]	; (8001640 <touchgfx_init+0xcc>)
 800159a:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800159c:	4620      	mov	r0, r4
 800159e:	f005 f9b5 	bl	800690c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80015a2:	4828      	ldr	r0, [pc, #160]	; (8001644 <touchgfx_init+0xd0>)
 80015a4:	f016 ffa6 	bl	80184f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80015a8:	782b      	ldrb	r3, [r5, #0]
 80015aa:	f3bf 8f5b 	dmb	ish
 80015ae:	07db      	lsls	r3, r3, #31
 80015b0:	d505      	bpl.n	80015be <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80015b2:	4825      	ldr	r0, [pc, #148]	; (8001648 <touchgfx_init+0xd4>)
}
 80015b4:	b002      	add	sp, #8
 80015b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80015ba:	f7ff bd9b 	b.w	80010f4 <_ZN11TouchGFXHAL10initializeEv>
 80015be:	4628      	mov	r0, r5
 80015c0:	f022 fe1f 	bl	8024202 <__cxa_guard_acquire>
 80015c4:	2800      	cmp	r0, #0
 80015c6:	d0f4      	beq.n	80015b2 <touchgfx_init+0x3e>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80015c8:	4c20      	ldr	r4, [pc, #128]	; (800164c <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80015ca:	4b21      	ldr	r3, [pc, #132]	; (8001650 <touchgfx_init+0xdc>)
 80015cc:	6023      	str	r3, [r4, #0]
 80015ce:	f604 469c 	addw	r6, r4, #3228	; 0xc9c
 80015d2:	f104 0014 	add.w	r0, r4, #20
 80015d6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 80015da:	f604 4758 	addw	r7, r4, #3160	; 0xc58
 80015de:	e9c4 0801 	strd	r0, r8, [r4, #4]
 80015e2:	e9c4 7603 	strd	r7, r6, [r4, #12]
 80015e6:	f00e fbcd 	bl	800fd84 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015ea:	4b1a      	ldr	r3, [pc, #104]	; (8001654 <touchgfx_init+0xe0>)
 80015ec:	6163      	str	r3, [r4, #20]
 80015ee:	4640      	mov	r0, r8
 80015f0:	f00e fbc8 	bl	800fd84 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015f4:	4b18      	ldr	r3, [pc, #96]	; (8001658 <touchgfx_init+0xe4>)
 80015f6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80015f8:	4638      	mov	r0, r7
 80015fa:	f00e fbc3 	bl	800fd84 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015fe:	4b17      	ldr	r3, [pc, #92]	; (800165c <touchgfx_init+0xe8>)
 8001600:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58
 8001604:	f604 4098 	addw	r0, r4, #3224	; 0xc98
 8001608:	f006 ff84 	bl	8008514 <_ZN5ModelC1Ev>
 800160c:	4622      	mov	r2, r4
 800160e:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8001612:	4630      	mov	r0, r6
 8001614:	f006 fd42 	bl	800809c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001618:	4630      	mov	r0, r6
 800161a:	f000 ffcf 	bl	80025bc <_ZN23FrontendApplicationBase26gotoLogoScreenNoTransitionEv>
        static FrontendHeap instance;
 800161e:	4628      	mov	r0, r5
 8001620:	f022 fdfb 	bl	802421a <__cxa_guard_release>
 8001624:	480e      	ldr	r0, [pc, #56]	; (8001660 <touchgfx_init+0xec>)
 8001626:	f023 fc27 	bl	8024e78 <atexit>
 800162a:	4807      	ldr	r0, [pc, #28]	; (8001648 <touchgfx_init+0xd4>)
}
 800162c:	b002      	add	sp, #8
 800162e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001632:	f7ff bd5f 	b.w	80010f4 <_ZN11TouchGFXHAL10initializeEv>
 8001636:	bf00      	nop
 8001638:	20002ce8 	.word	0x20002ce8
 800163c:	2000114c 	.word	0x2000114c
 8001640:	20000290 	.word	0x20000290
 8001644:	2000001c 	.word	0x2000001c
 8001648:	200010d0 	.word	0x200010d0
 800164c:	20000294 	.word	0x20000294
 8001650:	08026670 	.word	0x08026670
 8001654:	080265d4 	.word	0x080265d4
 8001658:	08026608 	.word	0x08026608
 800165c:	0802663c 	.word	0x0802663c
 8001660:	080014e1 	.word	0x080014e1

08001664 <touchgfx_taskEntry>:
void touchgfx_components_init()
{
}

void touchgfx_taskEntry()
{
 8001664:	b508      	push	{r3, lr}
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 8001666:	f7ff fe31 	bl	80012cc <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800166a:	b900      	cbnz	r0, 800166e <touchgfx_taskEntry+0xa>
     {
         hal.backPorchExited();
     }
}
 800166c:	bd08      	pop	{r3, pc}
        swapFrameBuffers();
 800166e:	4804      	ldr	r0, [pc, #16]	; (8001680 <touchgfx_taskEntry+0x1c>)
 8001670:	f010 f9a4 	bl	80119bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 8001674:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        tick();
 8001678:	4801      	ldr	r0, [pc, #4]	; (8001680 <touchgfx_taskEntry+0x1c>)
 800167a:	f00f bc6f 	b.w	8010f5c <_ZN8touchgfx3HAL4tickEv>
 800167e:	bf00      	nop
 8001680:	200010d0 	.word	0x200010d0

08001684 <_GLOBAL__sub_I_touchgfx_init>:
 8001684:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001686:	4e24      	ldr	r6, [pc, #144]	; (8001718 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 8001688:	4c24      	ldr	r4, [pc, #144]	; (800171c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800168a:	4b25      	ldr	r3, [pc, #148]	; (8001720 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 800168c:	4d25      	ldr	r5, [pc, #148]	; (8001724 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 800168e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001690:	4630      	mov	r0, r6
 8001692:	f7ff fe73 	bl	800137c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001696:	4628      	mov	r0, r5
 8001698:	f01a f8ce 	bl	801b838 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 800169c:	4b22      	ldr	r3, [pc, #136]	; (8001728 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        instance = this;
 800169e:	4923      	ldr	r1, [pc, #140]	; (800172c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80016a0:	605e      	str	r6, [r3, #4]
 80016a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80016a6:	649a      	str	r2, [r3, #72]	; 0x48
 80016a8:	4a21      	ldr	r2, [pc, #132]	; (8001730 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80016aa:	665a      	str	r2, [r3, #100]	; 0x64
 80016ac:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80016b0:	675a      	str	r2, [r3, #116]	; 0x74
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80016b2:	4820      	ldr	r0, [pc, #128]	; (8001734 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80016b4:	4e20      	ldr	r6, [pc, #128]	; (8001738 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
        instance = this;
 80016b6:	600b      	str	r3, [r1, #0]
          lastRenderMethod(HARDWARE)
 80016b8:	2201      	movs	r2, #1
 80016ba:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80016be:	f44f 71a0 	mov.w	r1, #320	; 0x140
          lastRenderMethod(HARDWARE)
 80016c2:	2200      	movs	r2, #0
 80016c4:	609d      	str	r5, [r3, #8]
 80016c6:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80016c8:	8001      	strh	r1, [r0, #0]
          lastRenderMethod(HARDWARE)
 80016ca:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80016ce:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80016d2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80016d6:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80016da:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80016de:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
 80016e2:	e9c3 2215 	strd	r2, r2, [r3, #84]	; 0x54
 80016e6:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 80016ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80016ec:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80016f0:	62da      	str	r2, [r3, #44]	; 0x2c
 80016f2:	861a      	strh	r2, [r3, #48]	; 0x30
 80016f4:	669a      	str	r2, [r3, #104]	; 0x68
 80016f6:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 80016fa:	671a      	str	r2, [r3, #112]	; 0x70
        DISPLAY_ROTATION = rotate0;
 80016fc:	4d0f      	ldr	r5, [pc, #60]	; (800173c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80016fe:	8031      	strh	r1, [r6, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001700:	480f      	ldr	r0, [pc, #60]	; (8001740 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001702:	4910      	ldr	r1, [pc, #64]	; (8001744 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001704:	4c10      	ldr	r4, [pc, #64]	; (8001748 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001706:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800170a:	601c      	str	r4, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800170c:	23f0      	movs	r3, #240	; 0xf0
        DISPLAY_ROTATION = rotate0;
 800170e:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001710:	8003      	strh	r3, [r0, #0]
 8001712:	800b      	strh	r3, [r1, #0]
}
 8001714:	bd70      	pop	{r4, r5, r6, pc}
 8001716:	bf00      	nop
 8001718:	2000108c 	.word	0x2000108c
 800171c:	20001088 	.word	0x20001088
 8001720:	0802622c 	.word	0x0802622c
 8001724:	20001150 	.word	0x20001150
 8001728:	200010d0 	.word	0x200010d0
 800172c:	20002c8c 	.word	0x20002c8c
 8001730:	01000001 	.word	0x01000001
 8001734:	20002c80 	.word	0x20002c80
 8001738:	20002c86 	.word	0x20002c86
 800173c:	20002c84 	.word	0x20002c84
 8001740:	20002c82 	.word	0x20002c82
 8001744:	20002c88 	.word	0x20002c88
 8001748:	080263bc 	.word	0x080263bc

0800174c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
}
 800174c:	4770      	bx	lr
 800174e:	bf00      	nop

08001750 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
}
 8001750:	2000      	movs	r0, #0
 8001752:	4770      	bx	lr

08001754 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001754:	4770      	bx	lr
 8001756:	bf00      	nop

08001758 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
 * queued for allocation again.
 *
 * @see FrameBufferAllocator
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
 8001758:	4770      	bx	lr
 800175a:	bf00      	nop

0800175c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
     */
    virtual bool hasBlockReadyForTransfer()
    {
        for (uint32_t i = 0; i < blocks; i++)
        {
            if (state[i] == DRAWN)
 800175c:	7903      	ldrb	r3, [r0, #4]
 800175e:	2b02      	cmp	r3, #2
 8001760:	d009      	beq.n	8001776 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x1a>
 8001762:	7943      	ldrb	r3, [r0, #5]
 8001764:	2b02      	cmp	r3, #2
 8001766:	d006      	beq.n	8001776 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x1a>
 8001768:	7980      	ldrb	r0, [r0, #6]
 800176a:	f1a0 0002 	sub.w	r0, r0, #2
 800176e:	fab0 f080 	clz	r0, r0
 8001772:	0940      	lsrs	r0, r0, #5
 8001774:	4770      	bx	lr
            {
                return true;
 8001776:	2001      	movs	r0, #1
            }
        }
        return false;
    }
 8001778:	4770      	bx	lr
 800177a:	bf00      	nop

0800177c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:
        return blockRect[nextSendingBlock];
    }

    virtual bool hasEmptyBlock()
    {
        int nextDrawingBlock = drawingBlock + 1;
 800177c:	f241 63a4 	movw	r3, #5796	; 0x16a4
 8001780:	58c3      	ldr	r3, [r0, r3]
        if (nextDrawingBlock == blocks)
 8001782:	2b02      	cmp	r3, #2
        int nextDrawingBlock = drawingBlock + 1;
 8001784:	f103 0301 	add.w	r3, r3, #1
        {
            nextDrawingBlock = 0;
 8001788:	bf08      	it	eq
 800178a:	2300      	moveq	r3, #0
        }
        return (state[nextDrawingBlock] == EMPTY);
 800178c:	4418      	add	r0, r3
 800178e:	7900      	ldrb	r0, [r0, #4]
    }
 8001790:	fab0 f080 	clz	r0, r0
 8001794:	0940      	lsrs	r0, r0, #5
 8001796:	4770      	bx	lr

08001798 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001798:	f00f bba6 	b.w	8010ee8 <_ZN8touchgfx3HAL10beginFrameEv>

0800179c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
 800179c:	b510      	push	{r4, lr}
 800179e:	4604      	mov	r4, r0
    while(touchgfxDisplayDriverTransmitActive()){}
 80017a0:	f00d ffd0 	bl	800f744 <touchgfxDisplayDriverTransmitActive>
 80017a4:	2800      	cmp	r0, #0
 80017a6:	d1fb      	bne.n	80017a0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x4>
    HAL::endFrame();
 80017a8:	4620      	mov	r0, r4
 80017aa:	f00f fba9 	bl	8010f00 <_ZN8touchgfx3HAL8endFrameEv>
}
 80017ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    touchgfx::OSWrappers::signalRenderingDone();
 80017b2:	f7ff bd85 	b.w	80012c0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
 80017b6:	bf00      	nop

080017b8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80017b8:	4602      	mov	r2, r0
        sendingBlock++;
 80017ba:	f500 50b5 	add.w	r0, r0, #5792	; 0x16a0
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80017be:	b570      	push	{r4, r5, r6, lr}
        sendingBlock++;
 80017c0:	6804      	ldr	r4, [r0, #0]
        if (sendingBlock == blocks)
 80017c2:	2c02      	cmp	r4, #2
 80017c4:	bf14      	ite	ne
 80017c6:	1c63      	addne	r3, r4, #1
            sendingBlock = 0;
 80017c8:	2300      	moveq	r3, #0
        assert(state[sendingBlock] == DRAWN);
 80017ca:	18d6      	adds	r6, r2, r3
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80017cc:	460d      	mov	r5, r1
        assert(state[sendingBlock] == DRAWN);
 80017ce:	7931      	ldrb	r1, [r6, #4]
            sendingBlock = 0;
 80017d0:	6003      	str	r3, [r0, #0]
        assert(state[sendingBlock] == DRAWN);
 80017d2:	2902      	cmp	r1, #2
 80017d4:	d10f      	bne.n	80017f6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3e>
        rect = blockRect[sendingBlock];
 80017d6:	f203 24d1 	addw	r4, r3, #721	; 0x2d1
 80017da:	eb02 04c4 	add.w	r4, r2, r4, lsl #3
 80017de:	cc03      	ldmia	r4!, {r0, r1}
        return (const uint8_t*)&memory[sendingBlock][0];
 80017e0:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 80017e4:	eb02 13c3 	add.w	r3, r2, r3, lsl #7
        state[sendingBlock] = SENDING;
 80017e8:	2203      	movs	r2, #3
        rect = blockRect[sendingBlock];
 80017ea:	6028      	str	r0, [r5, #0]
 80017ec:	6069      	str	r1, [r5, #4]
    }
 80017ee:	f103 0008 	add.w	r0, r3, #8
        state[sendingBlock] = SENDING;
 80017f2:	7132      	strb	r2, [r6, #4]
    }
 80017f4:	bd70      	pop	{r4, r5, r6, pc}
        assert(state[sendingBlock] == DRAWN);
 80017f6:	4b03      	ldr	r3, [pc, #12]	; (8001804 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x4c>)
 80017f8:	4a03      	ldr	r2, [pc, #12]	; (8001808 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x50>)
 80017fa:	4804      	ldr	r0, [pc, #16]	; (800180c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x54>)
 80017fc:	21dd      	movs	r1, #221	; 0xdd
 80017fe:	f023 fb1d 	bl	8024e3c <__assert_func>
 8001802:	bf00      	nop
 8001804:	0802667c 	.word	0x0802667c
 8001808:	0802669c 	.word	0x0802669c
 800180c:	0802679c 	.word	0x0802679c

08001810 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8001810:	b508      	push	{r3, lr}
    {
        assert(state[sendingBlock] == SENDING);
 8001812:	f500 53b5 	add.w	r3, r0, #5792	; 0x16a0
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	4418      	add	r0, r3
 800181a:	7903      	ldrb	r3, [r0, #4]
 800181c:	2b03      	cmp	r3, #3
 800181e:	d102      	bne.n	8001826 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x16>
        state[sendingBlock] = EMPTY;
 8001820:	2300      	movs	r3, #0
 8001822:	7103      	strb	r3, [r0, #4]
    }
 8001824:	bd08      	pop	{r3, pc}
        assert(state[sendingBlock] == SENDING);
 8001826:	4b03      	ldr	r3, [pc, #12]	; (8001834 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x24>)
 8001828:	4a03      	ldr	r2, [pc, #12]	; (8001838 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x28>)
 800182a:	4804      	ldr	r0, [pc, #16]	; (800183c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2c>)
 800182c:	21ff      	movs	r1, #255	; 0xff
 800182e:	f023 fb05 	bl	8024e3c <__assert_func>
 8001832:	bf00      	nop
 8001834:	080267f4 	.word	0x080267f4
 8001838:	08026814 	.word	0x08026814
 800183c:	0802679c 	.word	0x0802679c

08001840 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:
    virtual const Rect& peekBlockForTransfer()
 8001840:	b508      	push	{r3, lr}
        int nextSendingBlock = sendingBlock + 1;
 8001842:	f500 53b5 	add.w	r3, r0, #5792	; 0x16a0
 8001846:	681b      	ldr	r3, [r3, #0]
        if (nextSendingBlock == blocks)
 8001848:	2b02      	cmp	r3, #2
        int nextSendingBlock = sendingBlock + 1;
 800184a:	f103 0301 	add.w	r3, r3, #1
            nextSendingBlock = 0;
 800184e:	bf08      	it	eq
 8001850:	2300      	moveq	r3, #0
        assert(state[nextSendingBlock] == DRAWN);
 8001852:	18c2      	adds	r2, r0, r3
 8001854:	7912      	ldrb	r2, [r2, #4]
 8001856:	2a02      	cmp	r2, #2
 8001858:	d104      	bne.n	8001864 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x24>
        return blockRect[nextSendingBlock];
 800185a:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
    }
 800185e:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 8001862:	bd08      	pop	{r3, pc}
        assert(state[nextSendingBlock] == DRAWN);
 8001864:	4b02      	ldr	r3, [pc, #8]	; (8001870 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x30>)
 8001866:	4a03      	ldr	r2, [pc, #12]	; (8001874 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x34>)
 8001868:	4803      	ldr	r0, [pc, #12]	; (8001878 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x38>)
 800186a:	21ea      	movs	r1, #234	; 0xea
 800186c:	f023 fae6 	bl	8024e3c <__assert_func>
 8001870:	080268e4 	.word	0x080268e4
 8001874:	08026908 	.word	0x08026908
 8001878:	0802679c 	.word	0x0802679c

0800187c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    }
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800187c:	f00f bc67 	b.w	801114e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001880 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 8001880:	b510      	push	{r4, lr}
 8001882:	f241 61a8 	movw	r1, #5800	; 0x16a8
 8001886:	4604      	mov	r4, r0
 8001888:	f022 fcb9 	bl	80241fe <_ZdlPvj>
 800188c:	4620      	mov	r0, r4
 800188e:	bd10      	pop	{r4, pc}

08001890 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001890:	b570      	push	{r4, r5, r6, lr}
 8001892:	4604      	mov	r4, r0
    HAL::initialize();
 8001894:	f00f fb41 	bl	8010f1a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001898:	6823      	ldr	r3, [r4, #0]
 800189a:	4d0f      	ldr	r5, [pc, #60]	; (80018d8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x48>)
 800189c:	6e5e      	ldr	r6, [r3, #100]	; 0x64
 800189e:	f013 fcb9 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 80018a2:	4601      	mov	r1, r0
 80018a4:	4620      	mov	r0, r4
 80018a6:	47b0      	blx	r6
    enableLCDControllerInterrupt();
 80018a8:	6823      	ldr	r3, [r4, #0]
 80018aa:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 80018ae:	42aa      	cmp	r2, r5
 80018b0:	d108      	bne.n	80018c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x34>
    enableInterrupts();
 80018b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80018b4:	42ab      	cmp	r3, r5
 80018b6:	d10b      	bne.n	80018d0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>
        frameBufferAllocator = allocator;
 80018b8:	4b08      	ldr	r3, [pc, #32]	; (80018dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x4c>)
 80018ba:	61a3      	str	r3, [r4, #24]
            refreshStrategy = s;
 80018bc:	2302      	movs	r3, #2
 80018be:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
}
 80018c2:	bd70      	pop	{r4, r5, r6, pc}
    enableLCDControllerInterrupt();
 80018c4:	4620      	mov	r0, r4
 80018c6:	4790      	blx	r2
 80018c8:	6823      	ldr	r3, [r4, #0]
    enableInterrupts();
 80018ca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80018cc:	42ab      	cmp	r3, r5
 80018ce:	d0f3      	beq.n	80018b8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x28>
 80018d0:	4620      	mov	r0, r4
 80018d2:	4798      	blx	r3
 80018d4:	e7f0      	b.n	80018b8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x28>
 80018d6:	bf00      	nop
 80018d8:	0800174d 	.word	0x0800174d
 80018dc:	200011c8 	.word	0x200011c8

080018e0 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
__weak void FrameBufferAllocatorWaitOnTransfer()
{
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 80018e0:	4770      	bx	lr
 80018e2:	bf00      	nop

080018e4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
        drawingBlock++;
 80018e4:	f241 6ca4 	movw	ip, #5796	; 0x16a4
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80018e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018ec:	4605      	mov	r5, r0
        drawingBlock++;
 80018ee:	f850 000c 	ldr.w	r0, [r0, ip]
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80018f2:	f8bd a028 	ldrh.w	sl, [sp, #40]	; 0x28
 80018f6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
        if (drawingBlock == blocks)
 80018f8:	2802      	cmp	r0, #2
 80018fa:	bf14      	ite	ne
 80018fc:	1c44      	addne	r4, r0, #1
            drawingBlock = 0;
 80018fe:	2400      	moveq	r4, #0
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8001900:	461f      	mov	r7, r3
        while (state[drawingBlock] != EMPTY)
 8001902:	192b      	adds	r3, r5, r4
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8001904:	4690      	mov	r8, r2
        while (state[drawingBlock] != EMPTY)
 8001906:	791a      	ldrb	r2, [r3, #4]
            drawingBlock = 0;
 8001908:	f845 400c 	str.w	r4, [r5, ip]
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800190c:	4689      	mov	r9, r1
        while (state[drawingBlock] != EMPTY)
 800190e:	b15a      	cbz	r2, 8001928 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x44>
 8001910:	f505 5bb5 	add.w	fp, r5, #5792	; 0x16a0
 8001914:	f10b 0b04 	add.w	fp, fp, #4
            FrameBufferAllocatorWaitOnTransfer();
 8001918:	f7ff ffe2 	bl	80018e0 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800191c:	f8db 4000 	ldr.w	r4, [fp]
 8001920:	192b      	adds	r3, r5, r4
 8001922:	791a      	ldrb	r2, [r3, #4]
 8001924:	2a00      	cmp	r2, #0
 8001926:	d1f7      	bne.n	8001918 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x34>
        assert(state[drawingBlock] == EMPTY);
 8001928:	791a      	ldrb	r2, [r3, #4]
 800192a:	bb0a      	cbnz	r2, 8001970 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x8c>
        *block = (uint8_t*)&memory[drawingBlock][0];
 800192c:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
 8001930:	eb05 12c2 	add.w	r2, r5, r2, lsl #7
 8001934:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
        blockRect[drawingBlock].x = x;
 8001938:	f241 6088 	movw	r0, #5768	; 0x1688
        *block = (uint8_t*)&memory[drawingBlock][0];
 800193c:	3208      	adds	r2, #8
        state[drawingBlock] = ALLOCATED;
 800193e:	2101      	movs	r1, #1
 8001940:	7119      	strb	r1, [r3, #4]
        blockRect[drawingBlock].y = y;
 8001942:	f241 658a 	movw	r5, #5770	; 0x168a
        *block = (uint8_t*)&memory[drawingBlock][0];
 8001946:	6032      	str	r2, [r6, #0]
        blockRect[drawingBlock].width = width;
 8001948:	f241 618c 	movw	r1, #5772	; 0x168c
        blockRect[drawingBlock].x = x;
 800194c:	f824 9000 	strh.w	r9, [r4, r0]
        blockRect[drawingBlock].height = MIN(height, lines);
 8001950:	f241 638e 	movw	r3, #5774	; 0x168e
        const int32_t stride = width * bytes_pr_pixel;
 8001954:	007a      	lsls	r2, r7, #1
        const int32_t lines = block_size / stride;
 8001956:	f44f 60f0 	mov.w	r0, #1920	; 0x780
 800195a:	fbb0 f0f2 	udiv	r0, r0, r2
        blockRect[drawingBlock].height = MIN(height, lines);
 800195e:	4550      	cmp	r0, sl
 8001960:	bfa8      	it	ge
 8001962:	4650      	movge	r0, sl
        blockRect[drawingBlock].y = y;
 8001964:	f824 8005 	strh.w	r8, [r4, r5]
        blockRect[drawingBlock].width = width;
 8001968:	5267      	strh	r7, [r4, r1]
        blockRect[drawingBlock].height = MIN(height, lines);
 800196a:	52e0      	strh	r0, [r4, r3]
    }
 800196c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        assert(state[drawingBlock] == EMPTY);
 8001970:	4b02      	ldr	r3, [pc, #8]	; (800197c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x98>)
 8001972:	4a03      	ldr	r2, [pc, #12]	; (8001980 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x9c>)
 8001974:	4803      	ldr	r0, [pc, #12]	; (8001984 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0xa0>)
 8001976:	21aa      	movs	r1, #170	; 0xaa
 8001978:	f023 fa60 	bl	8024e3c <__assert_func>
 800197c:	080269e8 	.word	0x080269e8
 8001980:	08026a08 	.word	0x08026a08
 8001984:	0802679c 	.word	0x0802679c

08001988 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 8001988:	4770      	bx	lr
 800198a:	bf00      	nop

0800198c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:
    virtual void markBlockReadyForTransfer()
 800198c:	b508      	push	{r3, lr}
        assert(state[drawingBlock] == ALLOCATED);
 800198e:	f241 63a4 	movw	r3, #5796	; 0x16a4
 8001992:	58c3      	ldr	r3, [r0, r3]
 8001994:	4418      	add	r0, r3
 8001996:	7903      	ldrb	r3, [r0, #4]
 8001998:	2b01      	cmp	r3, #1
 800199a:	d104      	bne.n	80019a6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x1a>
        state[drawingBlock] = DRAWN;
 800199c:	2302      	movs	r3, #2
 800199e:	7103      	strb	r3, [r0, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 80019a0:	f7ff fff2 	bl	8001988 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 80019a4:	bd08      	pop	{r3, pc}
        assert(state[drawingBlock] == ALLOCATED);
 80019a6:	4b03      	ldr	r3, [pc, #12]	; (80019b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x28>)
 80019a8:	4a03      	ldr	r2, [pc, #12]	; (80019b8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2c>)
 80019aa:	4804      	ldr	r0, [pc, #16]	; (80019bc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x30>)
 80019ac:	21b9      	movs	r1, #185	; 0xb9
 80019ae:	f023 fa45 	bl	8024e3c <__assert_func>
 80019b2:	bf00      	nop
 80019b4:	08026b3c 	.word	0x08026b3c
 80019b8:	08026b60 	.word	0x08026b60
 80019bc:	0802679c 	.word	0x0802679c

080019c0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 80019c0:	b510      	push	{r4, lr}
 80019c2:	4604      	mov	r4, r0
 80019c4:	b084      	sub	sp, #16
    HAL::flushFrameBuffer(rect);
 80019c6:	f00f fa58 	bl	8010e7a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    frameBufferAllocator->markBlockReadyForTransfer();
 80019ca:	69a3      	ldr	r3, [r4, #24]
 80019cc:	492e      	ldr	r1, [pc, #184]	; (8001a88 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xc8>)
 80019ce:	681a      	ldr	r2, [r3, #0]
 80019d0:	6852      	ldr	r2, [r2, #4]
 80019d2:	428a      	cmp	r2, r1
 80019d4:	d144      	bne.n	8001a60 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xa0>
 80019d6:	f241 62a4 	movw	r2, #5796	; 0x16a4
 80019da:	5898      	ldr	r0, [r3, r2]
 80019dc:	4403      	add	r3, r0
 80019de:	791a      	ldrb	r2, [r3, #4]
 80019e0:	2a01      	cmp	r2, #1
 80019e2:	d145      	bne.n	8001a70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xb0>
        state[drawingBlock] = DRAWN;
 80019e4:	2202      	movs	r2, #2
 80019e6:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 80019e8:	f7ff ffce 	bl	8001988 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    if (!touchgfxDisplayDriverTransmitActive())
 80019ec:	f00d feaa 	bl	800f744 <touchgfxDisplayDriverTransmitActive>
 80019f0:	2800      	cmp	r0, #0
 80019f2:	d133      	bne.n	8001a5c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x9c>
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 80019f4:	69a2      	ldr	r2, [r4, #24]
 80019f6:	4925      	ldr	r1, [pc, #148]	; (8001a8c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xcc>)
 80019f8:	6813      	ldr	r3, [r2, #0]
 80019fa:	9002      	str	r0, [sp, #8]
 80019fc:	68db      	ldr	r3, [r3, #12]
 80019fe:	9003      	str	r0, [sp, #12]
 8001a00:	428b      	cmp	r3, r1
 8001a02:	d130      	bne.n	8001a66 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xa6>
        sendingBlock++;
 8001a04:	f502 51b5 	add.w	r1, r2, #5792	; 0x16a0
 8001a08:	680c      	ldr	r4, [r1, #0]
        if (sendingBlock == blocks)
 8001a0a:	2c02      	cmp	r4, #2
        sendingBlock++;
 8001a0c:	f104 0301 	add.w	r3, r4, #1
 8001a10:	bf08      	it	eq
 8001a12:	4603      	moveq	r3, r0
        assert(state[sendingBlock] == DRAWN);
 8001a14:	eb02 0403 	add.w	r4, r2, r3
        sendingBlock++;
 8001a18:	bf14      	ite	ne
 8001a1a:	600b      	strne	r3, [r1, #0]
            sendingBlock = 0;
 8001a1c:	6008      	streq	r0, [r1, #0]
        assert(state[sendingBlock] == DRAWN);
 8001a1e:	7921      	ldrb	r1, [r4, #4]
 8001a20:	2902      	cmp	r1, #2
 8001a22:	d12b      	bne.n	8001a7c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xbc>
        rect = blockRect[sendingBlock];
 8001a24:	f203 21d1 	addw	r1, r3, #721	; 0x2d1
 8001a28:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8001a2c:	c903      	ldmia	r1, {r0, r1}
        return (const uint8_t*)&memory[sendingBlock][0];
 8001a2e:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 8001a32:	eb02 13c3 	add.w	r3, r2, r3, lsl #7
        rect = blockRect[sendingBlock];
 8001a36:	f10d 0c10 	add.w	ip, sp, #16
        state[sendingBlock] = SENDING;
 8001a3a:	2203      	movs	r2, #3
        rect = blockRect[sendingBlock];
 8001a3c:	e90c 0003 	stmdb	ip, {r0, r1}
        return (const uint8_t*)&memory[sendingBlock][0];
 8001a40:	3308      	adds	r3, #8
        state[sendingBlock] = SENDING;
 8001a42:	7122      	strb	r2, [r4, #4]
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8001a44:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8001a48:	9200      	str	r2, [sp, #0]
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8001a50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001a54:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8001a58:	f00d fe7a 	bl	800f750 <touchgfxDisplayDriverTransmitBlock>
}
 8001a5c:	b004      	add	sp, #16
 8001a5e:	bd10      	pop	{r4, pc}
    frameBufferAllocator->markBlockReadyForTransfer();
 8001a60:	4618      	mov	r0, r3
 8001a62:	4790      	blx	r2
 8001a64:	e7c2      	b.n	80019ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8001a66:	4610      	mov	r0, r2
 8001a68:	a902      	add	r1, sp, #8
 8001a6a:	4798      	blx	r3
 8001a6c:	4603      	mov	r3, r0
 8001a6e:	e7e9      	b.n	8001a44 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x84>
        assert(state[drawingBlock] == ALLOCATED);
 8001a70:	4b07      	ldr	r3, [pc, #28]	; (8001a90 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xd0>)
 8001a72:	4a08      	ldr	r2, [pc, #32]	; (8001a94 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xd4>)
 8001a74:	4808      	ldr	r0, [pc, #32]	; (8001a98 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xd8>)
 8001a76:	21b9      	movs	r1, #185	; 0xb9
 8001a78:	f023 f9e0 	bl	8024e3c <__assert_func>
        assert(state[sendingBlock] == DRAWN);
 8001a7c:	4b07      	ldr	r3, [pc, #28]	; (8001a9c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xdc>)
 8001a7e:	4a08      	ldr	r2, [pc, #32]	; (8001aa0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xe0>)
 8001a80:	4805      	ldr	r0, [pc, #20]	; (8001a98 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0xd8>)
 8001a82:	21dd      	movs	r1, #221	; 0xdd
 8001a84:	f023 f9da 	bl	8024e3c <__assert_func>
 8001a88:	0800198d 	.word	0x0800198d
 8001a8c:	080017b9 	.word	0x080017b9
 8001a90:	08026b3c 	.word	0x08026b3c
 8001a94:	08026b60 	.word	0x08026b60
 8001a98:	0802679c 	.word	0x0802679c
 8001a9c:	0802667c 	.word	0x0802667c
 8001aa0:	0802669c 	.word	0x0802669c

08001aa4 <_ZN8touchgfx16startNewTransferEv>:
}

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8001aa4:	4b38      	ldr	r3, [pc, #224]	; (8001b88 <_ZN8touchgfx16startNewTransferEv+0xe4>)
 8001aa6:	4939      	ldr	r1, [pc, #228]	; (8001b8c <_ZN8touchgfx16startNewTransferEv+0xe8>)
 8001aa8:	681b      	ldr	r3, [r3, #0]
{
 8001aaa:	b530      	push	{r4, r5, lr}
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8001aac:	699c      	ldr	r4, [r3, #24]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8001aae:	6822      	ldr	r2, [r4, #0]
 8001ab0:	6993      	ldr	r3, [r2, #24]
 8001ab2:	428b      	cmp	r3, r1
{
 8001ab4:	b085      	sub	sp, #20
 8001ab6:	d152      	bne.n	8001b5e <_ZN8touchgfx16startNewTransferEv+0xba>
        assert(state[sendingBlock] == SENDING);
 8001ab8:	f504 53b5 	add.w	r3, r4, #5792	; 0x16a0
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	4423      	add	r3, r4
 8001ac0:	7919      	ldrb	r1, [r3, #4]
 8001ac2:	2903      	cmp	r1, #3
 8001ac4:	d154      	bne.n	8001b70 <_ZN8touchgfx16startNewTransferEv+0xcc>
        state[sendingBlock] = EMPTY;
 8001ac6:	2100      	movs	r1, #0
 8001ac8:	7119      	strb	r1, [r3, #4]
    if (fba->hasBlockReadyForTransfer())
 8001aca:	6893      	ldr	r3, [r2, #8]
 8001acc:	4930      	ldr	r1, [pc, #192]	; (8001b90 <_ZN8touchgfx16startNewTransferEv+0xec>)
 8001ace:	428b      	cmp	r3, r1
 8001ad0:	d10a      	bne.n	8001ae8 <_ZN8touchgfx16startNewTransferEv+0x44>
            if (state[i] == DRAWN)
 8001ad2:	7923      	ldrb	r3, [r4, #4]
 8001ad4:	2b02      	cmp	r3, #2
 8001ad6:	d00c      	beq.n	8001af2 <_ZN8touchgfx16startNewTransferEv+0x4e>
 8001ad8:	7963      	ldrb	r3, [r4, #5]
 8001ada:	2b02      	cmp	r3, #2
 8001adc:	d009      	beq.n	8001af2 <_ZN8touchgfx16startNewTransferEv+0x4e>
 8001ade:	79a3      	ldrb	r3, [r4, #6]
 8001ae0:	2b02      	cmp	r3, #2
 8001ae2:	d006      	beq.n	8001af2 <_ZN8touchgfx16startNewTransferEv+0x4e>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
    }
}
 8001ae4:	b005      	add	sp, #20
 8001ae6:	bd30      	pop	{r4, r5, pc}
    if (fba->hasBlockReadyForTransfer())
 8001ae8:	4620      	mov	r0, r4
 8001aea:	4798      	blx	r3
 8001aec:	2800      	cmp	r0, #0
 8001aee:	d0f9      	beq.n	8001ae4 <_ZN8touchgfx16startNewTransferEv+0x40>
 8001af0:	6822      	ldr	r2, [r4, #0]
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8001af2:	68d3      	ldr	r3, [r2, #12]
 8001af4:	4927      	ldr	r1, [pc, #156]	; (8001b94 <_ZN8touchgfx16startNewTransferEv+0xf0>)
 8001af6:	2200      	movs	r2, #0
 8001af8:	428b      	cmp	r3, r1
 8001afa:	e9cd 2202 	strd	r2, r2, [sp, #8]
 8001afe:	d132      	bne.n	8001b66 <_ZN8touchgfx16startNewTransferEv+0xc2>
        sendingBlock++;
 8001b00:	f504 51b5 	add.w	r1, r4, #5792	; 0x16a0
 8001b04:	6808      	ldr	r0, [r1, #0]
        if (sendingBlock == blocks)
 8001b06:	2802      	cmp	r0, #2
        sendingBlock++;
 8001b08:	f100 0301 	add.w	r3, r0, #1
 8001b0c:	bf08      	it	eq
 8001b0e:	4613      	moveq	r3, r2
        assert(state[sendingBlock] == DRAWN);
 8001b10:	eb04 0503 	add.w	r5, r4, r3
            sendingBlock = 0;
 8001b14:	bf08      	it	eq
 8001b16:	600a      	streq	r2, [r1, #0]
        assert(state[sendingBlock] == DRAWN);
 8001b18:	792a      	ldrb	r2, [r5, #4]
        sendingBlock++;
 8001b1a:	bf18      	it	ne
 8001b1c:	600b      	strne	r3, [r1, #0]
        assert(state[sendingBlock] == DRAWN);
 8001b1e:	2a02      	cmp	r2, #2
 8001b20:	d12c      	bne.n	8001b7c <_ZN8touchgfx16startNewTransferEv+0xd8>
        rect = blockRect[sendingBlock];
 8001b22:	f203 22d1 	addw	r2, r3, #721	; 0x2d1
 8001b26:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8001b2a:	e892 0003 	ldmia.w	r2, {r0, r1}
        return (const uint8_t*)&memory[sendingBlock][0];
 8001b2e:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 8001b32:	eb04 14c3 	add.w	r4, r4, r3, lsl #7
        rect = blockRect[sendingBlock];
 8001b36:	aa04      	add	r2, sp, #16
        state[sendingBlock] = SENDING;
 8001b38:	2303      	movs	r3, #3
        rect = blockRect[sendingBlock];
 8001b3a:	e902 0003 	stmdb	r2, {r0, r1}
        return (const uint8_t*)&memory[sendingBlock][0];
 8001b3e:	3408      	adds	r4, #8
        state[sendingBlock] = SENDING;
 8001b40:	712b      	strb	r3, [r5, #4]
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8001b42:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8001b46:	9300      	str	r3, [sp, #0]
 8001b48:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8001b4c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001b50:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8001b54:	4620      	mov	r0, r4
 8001b56:	f00d fdfb 	bl	800f750 <touchgfxDisplayDriverTransmitBlock>
}
 8001b5a:	b005      	add	sp, #20
 8001b5c:	bd30      	pop	{r4, r5, pc}
    fba->freeBlockAfterTransfer();
 8001b5e:	4620      	mov	r0, r4
 8001b60:	4798      	blx	r3
 8001b62:	6822      	ldr	r2, [r4, #0]
 8001b64:	e7b1      	b.n	8001aca <_ZN8touchgfx16startNewTransferEv+0x26>
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8001b66:	4620      	mov	r0, r4
 8001b68:	a902      	add	r1, sp, #8
 8001b6a:	4798      	blx	r3
 8001b6c:	4604      	mov	r4, r0
 8001b6e:	e7e8      	b.n	8001b42 <_ZN8touchgfx16startNewTransferEv+0x9e>
        assert(state[sendingBlock] == SENDING);
 8001b70:	4b09      	ldr	r3, [pc, #36]	; (8001b98 <_ZN8touchgfx16startNewTransferEv+0xf4>)
 8001b72:	4a0a      	ldr	r2, [pc, #40]	; (8001b9c <_ZN8touchgfx16startNewTransferEv+0xf8>)
 8001b74:	480a      	ldr	r0, [pc, #40]	; (8001ba0 <_ZN8touchgfx16startNewTransferEv+0xfc>)
 8001b76:	21ff      	movs	r1, #255	; 0xff
 8001b78:	f023 f960 	bl	8024e3c <__assert_func>
        assert(state[sendingBlock] == DRAWN);
 8001b7c:	4b09      	ldr	r3, [pc, #36]	; (8001ba4 <_ZN8touchgfx16startNewTransferEv+0x100>)
 8001b7e:	4a0a      	ldr	r2, [pc, #40]	; (8001ba8 <_ZN8touchgfx16startNewTransferEv+0x104>)
 8001b80:	4807      	ldr	r0, [pc, #28]	; (8001ba0 <_ZN8touchgfx16startNewTransferEv+0xfc>)
 8001b82:	21dd      	movs	r1, #221	; 0xdd
 8001b84:	f023 f95a 	bl	8024e3c <__assert_func>
 8001b88:	20002c8c 	.word	0x20002c8c
 8001b8c:	08001811 	.word	0x08001811
 8001b90:	0800175d 	.word	0x0800175d
 8001b94:	080017b9 	.word	0x080017b9
 8001b98:	080267f4 	.word	0x080267f4
 8001b9c:	08026814 	.word	0x08026814
 8001ba0:	0802679c 	.word	0x0802679c
 8001ba4:	0802667c 	.word	0x0802667c
 8001ba8:	0802669c 	.word	0x0802669c

08001bac <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 8001bac:	f7ff bf7a 	b.w	8001aa4 <_ZN8touchgfx16startNewTransferEv>

08001bb0 <touchgfxSignalVSync>:
        return instance;
 8001bb0:	4b04      	ldr	r3, [pc, #16]	; (8001bc4 <touchgfxSignalVSync+0x14>)
 8001bb2:	681a      	ldr	r2, [r3, #0]
        vSyncCnt++;
 8001bb4:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001bb8:	3301      	adds	r3, #1
 8001bba:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
{
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8001bbe:	f7ff bb79 	b.w	80012b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
 8001bc2:	bf00      	nop
 8001bc4:	20002c8c 	.word	0x20002c8c

08001bc8 <_GLOBAL__sub_I__ZN8touchgfx5paint6rgb56511blendL8CLUTE>:
    {
 8001bc8:	4a0d      	ldr	r2, [pc, #52]	; (8001c00 <_GLOBAL__sub_I__ZN8touchgfx5paint6rgb56511blendL8CLUTE+0x38>)
 8001bca:	490e      	ldr	r1, [pc, #56]	; (8001c04 <_GLOBAL__sub_I__ZN8touchgfx5paint6rgb56511blendL8CLUTE+0x3c>)
 8001bcc:	4b0e      	ldr	r3, [pc, #56]	; (8001c08 <_GLOBAL__sub_I__ZN8touchgfx5paint6rgb56511blendL8CLUTE+0x40>)
}
 8001bce:	b430      	push	{r4, r5}
 8001bd0:	f502 50b5 	add.w	r0, r2, #5792	; 0x16a0
 8001bd4:	6011      	str	r1, [r2, #0]
 8001bd6:	2100      	movs	r1, #0
 8001bd8:	8019      	strh	r1, [r3, #0]
 8001bda:	8059      	strh	r1, [r3, #2]
 8001bdc:	8099      	strh	r1, [r3, #4]
 8001bde:	80d9      	strh	r1, [r3, #6]
 8001be0:	3308      	adds	r3, #8
 8001be2:	4283      	cmp	r3, r0
 8001be4:	f04f 0400 	mov.w	r4, #0
 8001be8:	d1f6      	bne.n	8001bd8 <_GLOBAL__sub_I__ZN8touchgfx5paint6rgb56511blendL8CLUTE+0x10>
        drawingBlock = -1;
 8001bea:	f241 65a4 	movw	r5, #5796	; 0x16a4
        sendingBlock = -1;
 8001bee:	f04f 30ff 	mov.w	r0, #4294967295
            state[i] = EMPTY;
 8001bf2:	7114      	strb	r4, [r2, #4]
        drawingBlock = -1;
 8001bf4:	5150      	str	r0, [r2, r5]
            state[i] = EMPTY;
 8001bf6:	7151      	strb	r1, [r2, #5]
 8001bf8:	bc30      	pop	{r4, r5}
        sendingBlock = -1;
 8001bfa:	6018      	str	r0, [r3, #0]
            state[i] = EMPTY;
 8001bfc:	7191      	strb	r1, [r2, #6]
 8001bfe:	4770      	bx	lr
 8001c00:	200011c8 	.word	0x200011c8
 8001c04:	08026c3c 	.word	0x08026c3c
 8001c08:	20002850 	.word	0x20002850

08001c0c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8001c0c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 8001c0e:	4918      	ldr	r1, [pc, #96]	; (8001c70 <MX_USB_DEVICE_Init+0x64>)
 8001c10:	4818      	ldr	r0, [pc, #96]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c12:	2200      	movs	r2, #0
 8001c14:	f00b ffc8 	bl	800dba8 <USBD_Init>
 8001c18:	b970      	cbnz	r0, 8001c38 <MX_USB_DEVICE_Init+0x2c>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_MSC) != USBD_OK)
 8001c1a:	4917      	ldr	r1, [pc, #92]	; (8001c78 <MX_USB_DEVICE_Init+0x6c>)
 8001c1c:	4815      	ldr	r0, [pc, #84]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c1e:	f00b ffd7 	bl	800dbd0 <USBD_RegisterClass>
 8001c22:	b988      	cbnz	r0, 8001c48 <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
  }
  if (USBD_MSC_RegisterStorage(&hUsbDeviceFS, &USBD_Storage_Interface_fops_FS) != USBD_OK)
 8001c24:	4915      	ldr	r1, [pc, #84]	; (8001c7c <MX_USB_DEVICE_Init+0x70>)
 8001c26:	4813      	ldr	r0, [pc, #76]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c28:	f00c fe0e 	bl	800e848 <USBD_MSC_RegisterStorage>
 8001c2c:	b9a0      	cbnz	r0, 8001c58 <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 8001c2e:	4811      	ldr	r0, [pc, #68]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c30:	f00b ffea 	bl	800dc08 <USBD_Start>
 8001c34:	b9b8      	cbnz	r0, 8001c66 <MX_USB_DEVICE_Init+0x5a>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8001c36:	bd08      	pop	{r3, pc}
    Error_Handler();
 8001c38:	f7fe fe04 	bl	8000844 <Error_Handler>
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_MSC) != USBD_OK)
 8001c3c:	490e      	ldr	r1, [pc, #56]	; (8001c78 <MX_USB_DEVICE_Init+0x6c>)
 8001c3e:	480d      	ldr	r0, [pc, #52]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c40:	f00b ffc6 	bl	800dbd0 <USBD_RegisterClass>
 8001c44:	2800      	cmp	r0, #0
 8001c46:	d0ed      	beq.n	8001c24 <MX_USB_DEVICE_Init+0x18>
    Error_Handler();
 8001c48:	f7fe fdfc 	bl	8000844 <Error_Handler>
  if (USBD_MSC_RegisterStorage(&hUsbDeviceFS, &USBD_Storage_Interface_fops_FS) != USBD_OK)
 8001c4c:	490b      	ldr	r1, [pc, #44]	; (8001c7c <MX_USB_DEVICE_Init+0x70>)
 8001c4e:	4809      	ldr	r0, [pc, #36]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c50:	f00c fdfa 	bl	800e848 <USBD_MSC_RegisterStorage>
 8001c54:	2800      	cmp	r0, #0
 8001c56:	d0ea      	beq.n	8001c2e <MX_USB_DEVICE_Init+0x22>
    Error_Handler();
 8001c58:	f7fe fdf4 	bl	8000844 <Error_Handler>
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 8001c5c:	4805      	ldr	r0, [pc, #20]	; (8001c74 <MX_USB_DEVICE_Init+0x68>)
 8001c5e:	f00b ffd3 	bl	800dc08 <USBD_Start>
 8001c62:	2800      	cmp	r0, #0
 8001c64:	d0e7      	beq.n	8001c36 <MX_USB_DEVICE_Init+0x2a>
}
 8001c66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001c6a:	f7fe bdeb 	b.w	8000844 <Error_Handler>
 8001c6e:	bf00      	nop
 8001c70:	20000020 	.word	0x20000020
 8001c74:	200035dc 	.word	0x200035dc
 8001c78:	200000cc 	.word	0x200000cc
 8001c7c:	20000070 	.word	0x20000070

08001c80 <USBD_FS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 8001c80:	2312      	movs	r3, #18
  return USBD_FS_DeviceDesc;
}
 8001c82:	4801      	ldr	r0, [pc, #4]	; (8001c88 <USBD_FS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_FS_DeviceDesc);
 8001c84:	800b      	strh	r3, [r1, #0]
}
 8001c86:	4770      	bx	lr
 8001c88:	2000003c 	.word	0x2000003c

08001c8c <USBD_FS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8001c8c:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 8001c8e:	4801      	ldr	r0, [pc, #4]	; (8001c94 <USBD_FS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 8001c90:	800b      	strh	r3, [r1, #0]
}
 8001c92:	4770      	bx	lr
 8001c94:	20000050 	.word	0x20000050

08001c98 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8001c98:	2300      	movs	r3, #0
 8001c9a:	b4f0      	push	{r4, r5, r6, r7}
 8001c9c:	0052      	lsls	r2, r2, #1
 8001c9e:	1c4f      	adds	r7, r1, #1
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 8001ca0:	461e      	mov	r6, r3
    if (((value >> 28)) < 0xA)
 8001ca2:	f1b0 4f20 	cmp.w	r0, #2684354560	; 0xa0000000
 8001ca6:	ea4f 7410 	mov.w	r4, r0, lsr #28
      pbuf[2 * idx] = (value >> 28) + '0';
 8001caa:	f104 0530 	add.w	r5, r4, #48	; 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001cae:	bf2a      	itet	cs
 8001cb0:	3437      	addcs	r4, #55	; 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001cb2:	54cd      	strbcc	r5, [r1, r3]
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001cb4:	54cc      	strbcs	r4, [r1, r3]
    pbuf[2 * idx + 1] = 0;
 8001cb6:	54fe      	strb	r6, [r7, r3]
 8001cb8:	3302      	adds	r3, #2
  for (idx = 0; idx < len; idx++)
 8001cba:	429a      	cmp	r2, r3
    value = value << 4;
 8001cbc:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8001cc0:	d1ef      	bne.n	8001ca2 <IntToUnicode+0xa>
  }
}
 8001cc2:	bcf0      	pop	{r4, r5, r6, r7}
 8001cc4:	4770      	bx	lr
 8001cc6:	bf00      	nop

08001cc8 <USBD_FS_SerialStrDescriptor>:
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001cc8:	4a0b      	ldr	r2, [pc, #44]	; (8001cf8 <USBD_FS_SerialStrDescriptor+0x30>)
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 8001cca:	4b0c      	ldr	r3, [pc, #48]	; (8001cfc <USBD_FS_SerialStrDescriptor+0x34>)
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001ccc:	6810      	ldr	r0, [r2, #0]
  deviceserial0 += deviceserial2;
 8001cce:	681b      	ldr	r3, [r3, #0]
  *length = USB_SIZ_STRING_SERIAL;
 8001cd0:	221a      	movs	r2, #26
  if (deviceserial0 != 0)
 8001cd2:	18c0      	adds	r0, r0, r3
  *length = USB_SIZ_STRING_SERIAL;
 8001cd4:	800a      	strh	r2, [r1, #0]
  if (deviceserial0 != 0)
 8001cd6:	d101      	bne.n	8001cdc <USBD_FS_SerialStrDescriptor+0x14>
}
 8001cd8:	4809      	ldr	r0, [pc, #36]	; (8001d00 <USBD_FS_SerialStrDescriptor+0x38>)
 8001cda:	4770      	bx	lr
{
 8001cdc:	b510      	push	{r4, lr}
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001cde:	4b09      	ldr	r3, [pc, #36]	; (8001d04 <USBD_FS_SerialStrDescriptor+0x3c>)
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001ce0:	4909      	ldr	r1, [pc, #36]	; (8001d08 <USBD_FS_SerialStrDescriptor+0x40>)
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001ce2:	681c      	ldr	r4, [r3, #0]
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001ce4:	2208      	movs	r2, #8
 8001ce6:	f7ff ffd7 	bl	8001c98 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001cea:	4620      	mov	r0, r4
 8001cec:	4907      	ldr	r1, [pc, #28]	; (8001d0c <USBD_FS_SerialStrDescriptor+0x44>)
 8001cee:	2204      	movs	r2, #4
 8001cf0:	f7ff ffd2 	bl	8001c98 <IntToUnicode>
}
 8001cf4:	4802      	ldr	r0, [pc, #8]	; (8001d00 <USBD_FS_SerialStrDescriptor+0x38>)
 8001cf6:	bd10      	pop	{r4, pc}
 8001cf8:	1fff7a10 	.word	0x1fff7a10
 8001cfc:	1fff7a18 	.word	0x1fff7a18
 8001d00:	20000054 	.word	0x20000054
 8001d04:	1fff7a14 	.word	0x1fff7a14
 8001d08:	20000056 	.word	0x20000056
 8001d0c:	20000066 	.word	0x20000066

08001d10 <USBD_FS_ManufacturerStrDescriptor>:
{
 8001d10:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001d12:	4c04      	ldr	r4, [pc, #16]	; (8001d24 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 8001d14:	4804      	ldr	r0, [pc, #16]	; (8001d28 <USBD_FS_ManufacturerStrDescriptor+0x18>)
{
 8001d16:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001d18:	4621      	mov	r1, r4
 8001d1a:	f00c fbc7 	bl	800e4ac <USBD_GetString>
}
 8001d1e:	4620      	mov	r0, r4
 8001d20:	bd10      	pop	{r4, pc}
 8001d22:	bf00      	nop
 8001d24:	200038b8 	.word	0x200038b8
 8001d28:	08026c60 	.word	0x08026c60

08001d2c <USBD_FS_ProductStrDescriptor>:
{
 8001d2c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8001d2e:	4c04      	ldr	r4, [pc, #16]	; (8001d40 <USBD_FS_ProductStrDescriptor+0x14>)
 8001d30:	4804      	ldr	r0, [pc, #16]	; (8001d44 <USBD_FS_ProductStrDescriptor+0x18>)
{
 8001d32:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8001d34:	4621      	mov	r1, r4
 8001d36:	f00c fbb9 	bl	800e4ac <USBD_GetString>
}
 8001d3a:	4620      	mov	r0, r4
 8001d3c:	bd10      	pop	{r4, pc}
 8001d3e:	bf00      	nop
 8001d40:	200038b8 	.word	0x200038b8
 8001d44:	08026c74 	.word	0x08026c74

08001d48 <USBD_FS_ConfigStrDescriptor>:
{
 8001d48:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8001d4a:	4c04      	ldr	r4, [pc, #16]	; (8001d5c <USBD_FS_ConfigStrDescriptor+0x14>)
 8001d4c:	4804      	ldr	r0, [pc, #16]	; (8001d60 <USBD_FS_ConfigStrDescriptor+0x18>)
{
 8001d4e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8001d50:	4621      	mov	r1, r4
 8001d52:	f00c fbab 	bl	800e4ac <USBD_GetString>
}
 8001d56:	4620      	mov	r0, r4
 8001d58:	bd10      	pop	{r4, pc}
 8001d5a:	bf00      	nop
 8001d5c:	200038b8 	.word	0x200038b8
 8001d60:	08026c88 	.word	0x08026c88

08001d64 <USBD_FS_InterfaceStrDescriptor>:
{
 8001d64:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8001d66:	4c04      	ldr	r4, [pc, #16]	; (8001d78 <USBD_FS_InterfaceStrDescriptor+0x14>)
 8001d68:	4804      	ldr	r0, [pc, #16]	; (8001d7c <USBD_FS_InterfaceStrDescriptor+0x18>)
{
 8001d6a:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8001d6c:	4621      	mov	r1, r4
 8001d6e:	f00c fb9d 	bl	800e4ac <USBD_GetString>
}
 8001d72:	4620      	mov	r0, r4
 8001d74:	bd10      	pop	{r4, pc}
 8001d76:	bf00      	nop
 8001d78:	200038b8 	.word	0x200038b8
 8001d7c:	08026c94 	.word	0x08026c94

08001d80 <STORAGE_Init_FS>:
    /* USER CODE BEGIN 2 */
    UNUSED(lun);

    return (USBD_OK);
    /* USER CODE END 2 */
}
 8001d80:	2000      	movs	r0, #0
 8001d82:	4770      	bx	lr

08001d84 <STORAGE_GetCapacity_FS>:
int8_t STORAGE_GetCapacity_FS(uint8_t lun, uint32_t* block_num, uint16_t* block_size)
{
    /* USER CODE BEGIN 3 */
    UNUSED(lun);

    *block_num = STORAGE_BLK_NBR_USER;
 8001d84:	20c0      	movs	r0, #192	; 0xc0
    *block_size = STORAGE_BLK_SIZ_USER;
 8001d86:	f44f 7300 	mov.w	r3, #512	; 0x200
    *block_num = STORAGE_BLK_NBR_USER;
 8001d8a:	6008      	str	r0, [r1, #0]
    return (USBD_OK);
    /* USER CODE END 3 */
}
 8001d8c:	2000      	movs	r0, #0
    *block_size = STORAGE_BLK_SIZ_USER;
 8001d8e:	8013      	strh	r3, [r2, #0]
}
 8001d90:	4770      	bx	lr
 8001d92:	bf00      	nop

08001d94 <STORAGE_GetMaxLun_FS>:
int8_t STORAGE_GetMaxLun_FS(void)
{
    /* USER CODE BEGIN 8 */
    return (STORAGE_LUN_NBR_USER - 1);
    /* USER CODE END 8 */
}
 8001d94:	2000      	movs	r0, #0
 8001d96:	4770      	bx	lr

08001d98 <STORAGE_Write_FS>:
{
 8001d98:	b570      	push	{r4, r5, r6, lr}
    if (blk_addr + blk_len < STORAGE_BLK_NBR_USER - 64) {
 8001d9a:	189d      	adds	r5, r3, r2
 8001d9c:	2d7f      	cmp	r5, #127	; 0x7f
{
 8001d9e:	4610      	mov	r0, r2
    if (blk_addr + blk_len < STORAGE_BLK_NBR_USER - 64) {
 8001da0:	d91d      	bls.n	8001dde <STORAGE_Write_FS+0x46>
    } else if (blk_addr >= STORAGE_BLK_NBR_USER - 64) {
 8001da2:	2a7f      	cmp	r2, #127	; 0x7f
 8001da4:	d811      	bhi.n	8001dca <STORAGE_Write_FS+0x32>
        memcpy(&buffer[blk_addr * STORAGE_BLK_SIZ_USER], buf, (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER);
 8001da6:	4b12      	ldr	r3, [pc, #72]	; (8001df0 <STORAGE_Write_FS+0x58>)
 8001da8:	f1c2 0680 	rsb	r6, r2, #128	; 0x80
 8001dac:	0276      	lsls	r6, r6, #9
 8001dae:	460c      	mov	r4, r1
 8001db0:	4632      	mov	r2, r6
 8001db2:	eb03 2040 	add.w	r0, r3, r0, lsl #9
        memcpy(&buffer2[0], buf + (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER, (blk_len - (STORAGE_BLK_NBR_USER - 64 - blk_addr)) * STORAGE_BLK_SIZ_USER);
 8001db6:	3d80      	subs	r5, #128	; 0x80
        memcpy(&buffer[blk_addr * STORAGE_BLK_SIZ_USER], buf, (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER);
 8001db8:	f023 f8be 	bl	8024f38 <memcpy>
        memcpy(&buffer2[0], buf + (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER, (blk_len - (STORAGE_BLK_NBR_USER - 64 - blk_addr)) * STORAGE_BLK_SIZ_USER);
 8001dbc:	19a1      	adds	r1, r4, r6
 8001dbe:	026a      	lsls	r2, r5, #9
 8001dc0:	480c      	ldr	r0, [pc, #48]	; (8001df4 <STORAGE_Write_FS+0x5c>)
 8001dc2:	f023 f8b9 	bl	8024f38 <memcpy>
}
 8001dc6:	2000      	movs	r0, #0
 8001dc8:	bd70      	pop	{r4, r5, r6, pc}
        memcpy(&buffer2[(blk_addr - (STORAGE_BLK_NBR_USER - 64)) * STORAGE_BLK_SIZ_USER], buf, blk_len * STORAGE_BLK_SIZ_USER);
 8001dca:	4c0a      	ldr	r4, [pc, #40]	; (8001df4 <STORAGE_Write_FS+0x5c>)
 8001dcc:	f1a2 0080 	sub.w	r0, r2, #128	; 0x80
 8001dd0:	eb04 2040 	add.w	r0, r4, r0, lsl #9
 8001dd4:	025a      	lsls	r2, r3, #9
 8001dd6:	f023 f8af 	bl	8024f38 <memcpy>
}
 8001dda:	2000      	movs	r0, #0
 8001ddc:	bd70      	pop	{r4, r5, r6, pc}
        memcpy(&buffer[blk_addr * STORAGE_BLK_SIZ_USER], buf, blk_len * STORAGE_BLK_SIZ_USER);
 8001dde:	4c04      	ldr	r4, [pc, #16]	; (8001df0 <STORAGE_Write_FS+0x58>)
 8001de0:	025a      	lsls	r2, r3, #9
 8001de2:	eb04 2040 	add.w	r0, r4, r0, lsl #9
 8001de6:	f023 f8a7 	bl	8024f38 <memcpy>
}
 8001dea:	2000      	movs	r0, #0
 8001dec:	bd70      	pop	{r4, r5, r6, pc}
 8001dee:	bf00      	nop
 8001df0:	20003ab8 	.word	0x20003ab8
 8001df4:	10000000 	.word	0x10000000

08001df8 <STORAGE_Read_FS>:
{
 8001df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (blk_addr + blk_len < STORAGE_BLK_NBR_USER - 64) {
 8001dfa:	189e      	adds	r6, r3, r2
 8001dfc:	2e7f      	cmp	r6, #127	; 0x7f
{
 8001dfe:	4614      	mov	r4, r2
 8001e00:	460d      	mov	r5, r1
    if (blk_addr + blk_len < STORAGE_BLK_NBR_USER - 64) {
 8001e02:	d91e      	bls.n	8001e42 <STORAGE_Read_FS+0x4a>
    } else if (blk_addr >= STORAGE_BLK_NBR_USER - 64) {
 8001e04:	2a7f      	cmp	r2, #127	; 0x7f
 8001e06:	d811      	bhi.n	8001e2c <STORAGE_Read_FS+0x34>
        memcpy(buf, &buffer[blk_addr * STORAGE_BLK_SIZ_USER], (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER);
 8001e08:	f1c2 0780 	rsb	r7, r2, #128	; 0x80
 8001e0c:	4911      	ldr	r1, [pc, #68]	; (8001e54 <STORAGE_Read_FS+0x5c>)
 8001e0e:	027f      	lsls	r7, r7, #9
 8001e10:	463a      	mov	r2, r7
 8001e12:	eb01 2144 	add.w	r1, r1, r4, lsl #9
 8001e16:	4628      	mov	r0, r5
        memcpy(buf + (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER, &buffer2[0], (blk_len - (STORAGE_BLK_NBR_USER - 64 - blk_addr)) * STORAGE_BLK_SIZ_USER);
 8001e18:	3e80      	subs	r6, #128	; 0x80
        memcpy(buf, &buffer[blk_addr * STORAGE_BLK_SIZ_USER], (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER);
 8001e1a:	f023 f88d 	bl	8024f38 <memcpy>
        memcpy(buf + (STORAGE_BLK_NBR_USER - 64 - blk_addr) * STORAGE_BLK_SIZ_USER, &buffer2[0], (blk_len - (STORAGE_BLK_NBR_USER - 64 - blk_addr)) * STORAGE_BLK_SIZ_USER);
 8001e1e:	490e      	ldr	r1, [pc, #56]	; (8001e58 <STORAGE_Read_FS+0x60>)
 8001e20:	19e8      	adds	r0, r5, r7
 8001e22:	0272      	lsls	r2, r6, #9
 8001e24:	f023 f888 	bl	8024f38 <memcpy>
}
 8001e28:	2000      	movs	r0, #0
 8001e2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        memcpy(buf, &buffer2[(blk_addr - (STORAGE_BLK_NBR_USER - 64)) * STORAGE_BLK_SIZ_USER], blk_len * STORAGE_BLK_SIZ_USER);
 8001e2c:	490a      	ldr	r1, [pc, #40]	; (8001e58 <STORAGE_Read_FS+0x60>)
 8001e2e:	f1a2 0480 	sub.w	r4, r2, #128	; 0x80
 8001e32:	4628      	mov	r0, r5
 8001e34:	025a      	lsls	r2, r3, #9
 8001e36:	eb01 2144 	add.w	r1, r1, r4, lsl #9
 8001e3a:	f023 f87d 	bl	8024f38 <memcpy>
}
 8001e3e:	2000      	movs	r0, #0
 8001e40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        memcpy(buf, &buffer[blk_addr * STORAGE_BLK_SIZ_USER], blk_len * STORAGE_BLK_SIZ_USER);
 8001e42:	4904      	ldr	r1, [pc, #16]	; (8001e54 <STORAGE_Read_FS+0x5c>)
 8001e44:	025a      	lsls	r2, r3, #9
 8001e46:	4628      	mov	r0, r5
 8001e48:	eb01 2144 	add.w	r1, r1, r4, lsl #9
 8001e4c:	f023 f874 	bl	8024f38 <memcpy>
}
 8001e50:	2000      	movs	r0, #0
 8001e52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e54:	20003ab8 	.word	0x20003ab8
 8001e58:	10000000 	.word	0x10000000

08001e5c <STORAGE_IsWriteProtected_FS>:
 8001e5c:	2000      	movs	r0, #0
 8001e5e:	4770      	bx	lr

08001e60 <STORAGE_IsReady_FS>:
 8001e60:	2000      	movs	r0, #0
 8001e62:	4770      	bx	lr

08001e64 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8001e64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(pcdHandle->Instance==USB_OTG_FS)
 8001e68:	6803      	ldr	r3, [r0, #0]
{
 8001e6a:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e6c:	2400      	movs	r4, #0
  if(pcdHandle->Instance==USB_OTG_FS)
 8001e6e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e72:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001e76:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8001e7a:	9407      	str	r4, [sp, #28]
  if(pcdHandle->Instance==USB_OTG_FS)
 8001e7c:	d002      	beq.n	8001e84 <HAL_PCD_MspInit+0x20>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
 8001e7e:	b008      	add	sp, #32
 8001e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e84:	4d1f      	ldr	r5, [pc, #124]	; (8001f04 <HAL_PCD_MspInit+0xa0>)
 8001e86:	9401      	str	r4, [sp, #4]
 8001e88:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e8a:	481f      	ldr	r0, [pc, #124]	; (8001f08 <HAL_PCD_MspInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e8c:	f043 0301 	orr.w	r3, r3, #1
 8001e90:	632b      	str	r3, [r5, #48]	; 0x30
 8001e92:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e94:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e96:	f003 0301 	and.w	r3, r3, #1
 8001e9a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e9c:	f04f 0802 	mov.w	r8, #2
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001ea0:	f44f 6300 	mov.w	r3, #2048	; 0x800
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ea4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8001ea6:	260a      	movs	r6, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ea8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eaa:	e9cd 3803 	strd	r3, r8, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eae:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8001eb0:	e9cd 7606 	strd	r7, r6, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001eb4:	f006 febe 	bl	8008c34 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001eb8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001eba:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ebe:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec0:	4811      	ldr	r0, [pc, #68]	; (8001f08 <HAL_PCD_MspInit+0xa4>)
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001ec2:	9203      	str	r2, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ec4:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8001ec6:	e9cd 7606 	strd	r7, r6, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eca:	f8cd 8010 	str.w	r8, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ece:	f006 feb1 	bl	8008c34 <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8001ed2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001ed4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001ed8:	636b      	str	r3, [r5, #52]	; 0x34
 8001eda:	9402      	str	r4, [sp, #8]
 8001edc:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001ede:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001ee2:	646b      	str	r3, [r5, #68]	; 0x44
 8001ee4:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001ee6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001eea:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8001eec:	4622      	mov	r2, r4
 8001eee:	4621      	mov	r1, r4
 8001ef0:	2043      	movs	r0, #67	; 0x43
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8001ef2:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8001ef4:	f006 fc58 	bl	80087a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 8001ef8:	2043      	movs	r0, #67	; 0x43
 8001efa:	f006 fc8d 	bl	8008818 <HAL_NVIC_EnableIRQ>
}
 8001efe:	b008      	add	sp, #32
 8001f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f04:	40023800 	.word	0x40023800
 8001f08:	40020000 	.word	0x40020000

08001f0c <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8001f0c:	f200 41c4 	addw	r1, r0, #1220	; 0x4c4
 8001f10:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001f14:	f00b be8c 	b.w	800dc30 <USBD_LL_SetupStage>

08001f18 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001f18:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8001f1c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8001f20:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001f24:	f8d3 228c 	ldr.w	r2, [r3, #652]	; 0x28c
 8001f28:	f00b beb2 	b.w	800dc90 <USBD_LL_DataOutStage>

08001f2c <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8001f2c:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8001f30:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8001f34:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001f38:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8001f3a:	f00b bee3 	b.w	800dd04 <USBD_LL_DataInStage>
 8001f3e:	bf00      	nop

08001f40 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8001f40:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001f44:	f00b bf82 	b.w	800de4c <USBD_LL_SOF>

08001f48 <HAL_PCD_ResetCallback>:
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001f48:	68c1      	ldr	r1, [r0, #12]
{
 8001f4a:	b510      	push	{r4, lr}
 8001f4c:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001f4e:	b111      	cbz	r1, 8001f56 <HAL_PCD_ResetCallback+0xe>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8001f50:	2902      	cmp	r1, #2
 8001f52:	d10a      	bne.n	8001f6a <HAL_PCD_ResetCallback+0x22>
  {
    speed = USBD_SPEED_FULL;
 8001f54:	2101      	movs	r1, #1
  else
  {
    Error_Handler();
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8001f56:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
 8001f5a:	f00b ff5b 	bl	800de14 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001f5e:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
}
 8001f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001f66:	f00b bf27 	b.w	800ddb8 <USBD_LL_Reset>
    Error_Handler();
 8001f6a:	f7fe fc6b 	bl	8000844 <Error_Handler>
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 8001f6e:	2101      	movs	r1, #1
 8001f70:	e7f1      	b.n	8001f56 <HAL_PCD_ResetCallback+0xe>
 8001f72:	bf00      	nop

08001f74 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001f74:	b510      	push	{r4, lr}
 8001f76:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8001f78:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001f7c:	f00b ff4e 	bl	800de1c <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8001f80:	6822      	ldr	r2, [r4, #0]
 8001f82:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 8001f86:	f043 0301 	orr.w	r3, r3, #1
 8001f8a:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8001f8e:	6a23      	ldr	r3, [r4, #32]
 8001f90:	b123      	cbz	r3, 8001f9c <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8001f92:	4a03      	ldr	r2, [pc, #12]	; (8001fa0 <HAL_PCD_SuspendCallback+0x2c>)
 8001f94:	6913      	ldr	r3, [r2, #16]
 8001f96:	f043 0306 	orr.w	r3, r3, #6
 8001f9a:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8001f9c:	bd10      	pop	{r4, pc}
 8001f9e:	bf00      	nop
 8001fa0:	e000ed00 	.word	0xe000ed00

08001fa4 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8001fa4:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001fa8:	f00b bf44 	b.w	800de34 <USBD_LL_Resume>

08001fac <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001fac:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001fb0:	f00b bf72 	b.w	800de98 <USBD_LL_IsoOUTIncomplete>

08001fb4 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001fb4:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001fb8:	f00b bf58 	b.w	800de6c <USBD_LL_IsoINIncomplete>

08001fbc <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001fbc:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001fc0:	f00b bf80 	b.w	800dec4 <USBD_LL_DevConnected>

08001fc4 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001fc4:	f8d0 0508 	ldr.w	r0, [r0, #1288]	; 0x508
 8001fc8:	f00b bf7e 	b.w	800dec8 <USBD_LL_DevDisconnected>

08001fcc <USBD_LL_Init>:
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
 8001fcc:	7802      	ldrb	r2, [r0, #0]
 8001fce:	b10a      	cbz	r2, 8001fd4 <USBD_LL_Init+0x8>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
  }
  return USBD_OK;
}
 8001fd0:	2000      	movs	r0, #0
 8001fd2:	4770      	bx	lr
{
 8001fd4:	b538      	push	{r3, r4, r5, lr}
  hpcd_USB_OTG_FS.pData = pdev;
 8001fd6:	4b15      	ldr	r3, [pc, #84]	; (800202c <USBD_LL_Init+0x60>)
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8001fd8:	2102      	movs	r1, #2
  hpcd_USB_OTG_FS.pData = pdev;
 8001fda:	f8c3 0508 	str.w	r0, [r3, #1288]	; 0x508
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8001fde:	f04f 45a0 	mov.w	r5, #1342177280	; 0x50000000
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8001fe2:	2404      	movs	r4, #4
  pdev->pData = &hpcd_USB_OTG_FS;
 8001fe4:	f8c0 32c8 	str.w	r3, [r0, #712]	; 0x2c8
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8001fe8:	4618      	mov	r0, r3
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8001fea:	e9c3 2207 	strd	r2, r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8001fee:	e9c3 220b 	strd	r2, r2, [r3, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8001ff2:	e9c3 5400 	strd	r5, r4, [r3]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8001ff6:	611a      	str	r2, [r3, #16]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8001ff8:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8001ffa:	60d9      	str	r1, [r3, #12]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8001ffc:	6199      	str	r1, [r3, #24]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8001ffe:	f006 ff2f 	bl	8008e60 <HAL_PCD_Init>
 8002002:	b978      	cbnz	r0, 8002024 <USBD_LL_Init+0x58>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 8002004:	2180      	movs	r1, #128	; 0x80
 8002006:	4809      	ldr	r0, [pc, #36]	; (800202c <USBD_LL_Init+0x60>)
 8002008:	f007 fd32 	bl	8009a70 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 800200c:	2240      	movs	r2, #64	; 0x40
 800200e:	2100      	movs	r1, #0
 8002010:	4806      	ldr	r0, [pc, #24]	; (800202c <USBD_LL_Init+0x60>)
 8002012:	f007 fd09 	bl	8009a28 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 8002016:	2280      	movs	r2, #128	; 0x80
 8002018:	2101      	movs	r1, #1
 800201a:	4804      	ldr	r0, [pc, #16]	; (800202c <USBD_LL_Init+0x60>)
 800201c:	f007 fd04 	bl	8009a28 <HAL_PCDEx_SetTxFiFo>
}
 8002020:	2000      	movs	r0, #0
 8002022:	bd38      	pop	{r3, r4, r5, pc}
    Error_Handler( );
 8002024:	f7fe fc0e 	bl	8000844 <Error_Handler>
 8002028:	e7ec      	b.n	8002004 <USBD_LL_Init+0x38>
 800202a:	bf00      	nop
 800202c:	20013ab8 	.word	0x20013ab8

08002030 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 8002030:	b508      	push	{r3, lr}
  HAL_StatusTypeDef hal_status = HAL_OK;
  USBD_StatusTypeDef usb_status = USBD_OK;

  hal_status = HAL_PCD_Start(pdev->pData);
 8002032:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 8002036:	f006 ff9f 	bl	8008f78 <HAL_PCD_Start>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800203a:	2803      	cmp	r0, #3
 800203c:	bf96      	itet	ls
 800203e:	4b02      	ldrls	r3, [pc, #8]	; (8002048 <USBD_LL_Start+0x18>)
  hal_status = HAL_PCD_Start(pdev->pData);
 8002040:	2003      	movhi	r0, #3
 8002042:	5c18      	ldrbls	r0, [r3, r0]
}
 8002044:	bd08      	pop	{r3, pc}
 8002046:	bf00      	nop
 8002048:	08026cc8 	.word	0x08026cc8

0800204c <USBD_LL_OpenEP>:
{
 800204c:	b510      	push	{r4, lr}
 800204e:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8002050:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
{
 8002054:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8002056:	4623      	mov	r3, r4
 8002058:	f007 fb8e 	bl	8009778 <HAL_PCD_EP_Open>
  switch (hal_status)
 800205c:	2803      	cmp	r0, #3
 800205e:	bf96      	itet	ls
 8002060:	4b01      	ldrls	r3, [pc, #4]	; (8002068 <USBD_LL_OpenEP+0x1c>)
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8002062:	2003      	movhi	r0, #3
 8002064:	5c18      	ldrbls	r0, [r3, r0]
}
 8002066:	bd10      	pop	{r4, pc}
 8002068:	08026cc8 	.word	0x08026cc8

0800206c <USBD_LL_CloseEP>:
{
 800206c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800206e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 8002072:	f007 fbb7 	bl	80097e4 <HAL_PCD_EP_Close>
  switch (hal_status)
 8002076:	2803      	cmp	r0, #3
 8002078:	bf96      	itet	ls
 800207a:	4b02      	ldrls	r3, [pc, #8]	; (8002084 <USBD_LL_CloseEP+0x18>)
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800207c:	2003      	movhi	r0, #3
 800207e:	5c18      	ldrbls	r0, [r3, r0]
}
 8002080:	bd08      	pop	{r3, pc}
 8002082:	bf00      	nop
 8002084:	08026cc8 	.word	0x08026cc8

08002088 <USBD_LL_FlushEP>:
{
 8002088:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 800208a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 800208e:	f007 fcad 	bl	80099ec <HAL_PCD_EP_Flush>
  switch (hal_status)
 8002092:	2803      	cmp	r0, #3
 8002094:	bf96      	itet	ls
 8002096:	4b02      	ldrls	r3, [pc, #8]	; (80020a0 <USBD_LL_FlushEP+0x18>)
  hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 8002098:	2003      	movhi	r0, #3
 800209a:	5c18      	ldrbls	r0, [r3, r0]
}
 800209c:	bd08      	pop	{r3, pc}
 800209e:	bf00      	nop
 80020a0:	08026cc8 	.word	0x08026cc8

080020a4 <USBD_LL_StallEP>:
{
 80020a4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80020a6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 80020aa:	f007 fc21 	bl	80098f0 <HAL_PCD_EP_SetStall>
  switch (hal_status)
 80020ae:	2803      	cmp	r0, #3
 80020b0:	bf96      	itet	ls
 80020b2:	4b02      	ldrls	r3, [pc, #8]	; (80020bc <USBD_LL_StallEP+0x18>)
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80020b4:	2003      	movhi	r0, #3
 80020b6:	5c18      	ldrbls	r0, [r3, r0]
}
 80020b8:	bd08      	pop	{r3, pc}
 80020ba:	bf00      	nop
 80020bc:	08026cc8 	.word	0x08026cc8

080020c0 <USBD_LL_ClearStallEP>:
{
 80020c0:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 80020c2:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 80020c6:	f007 fc57 	bl	8009978 <HAL_PCD_EP_ClrStall>
  switch (hal_status)
 80020ca:	2803      	cmp	r0, #3
 80020cc:	bf96      	itet	ls
 80020ce:	4b02      	ldrls	r3, [pc, #8]	; (80020d8 <USBD_LL_ClearStallEP+0x18>)
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 80020d0:	2003      	movhi	r0, #3
 80020d2:	5c18      	ldrbls	r0, [r3, r0]
}
 80020d4:	bd08      	pop	{r3, pc}
 80020d6:	bf00      	nop
 80020d8:	08026cc8 	.word	0x08026cc8

080020dc <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
 80020dc:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 80020de:	f8d0 32c8 	ldr.w	r3, [r0, #712]	; 0x2c8
  if((ep_addr & 0x80) == 0x80)
 80020e2:	d406      	bmi.n	80020f2 <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 80020e4:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 80020e8:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 80020ec:	f891 027e 	ldrb.w	r0, [r1, #638]	; 0x27e
}
 80020f0:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 80020f2:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 80020f6:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 80020fa:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 80020fe:	f891 003e 	ldrb.w	r0, [r1, #62]	; 0x3e
 8002102:	4770      	bx	lr

08002104 <USBD_LL_SetUSBAddress>:
{
 8002104:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8002106:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 800210a:	f007 fb21 	bl	8009750 <HAL_PCD_SetAddress>
  switch (hal_status)
 800210e:	2803      	cmp	r0, #3
 8002110:	bf96      	itet	ls
 8002112:	4b02      	ldrls	r3, [pc, #8]	; (800211c <USBD_LL_SetUSBAddress+0x18>)
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8002114:	2003      	movhi	r0, #3
 8002116:	5c18      	ldrbls	r0, [r3, r0]
}
 8002118:	bd08      	pop	{r3, pc}
 800211a:	bf00      	nop
 800211c:	08026cc8 	.word	0x08026cc8

08002120 <USBD_LL_Transmit>:
{
 8002120:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8002122:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 8002126:	f007 fbbf 	bl	80098a8 <HAL_PCD_EP_Transmit>
  switch (hal_status)
 800212a:	2803      	cmp	r0, #3
 800212c:	bf96      	itet	ls
 800212e:	4b02      	ldrls	r3, [pc, #8]	; (8002138 <USBD_LL_Transmit+0x18>)
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8002130:	2003      	movhi	r0, #3
 8002132:	5c18      	ldrbls	r0, [r3, r0]
}
 8002134:	bd08      	pop	{r3, pc}
 8002136:	bf00      	nop
 8002138:	08026cc8 	.word	0x08026cc8

0800213c <USBD_LL_PrepareReceive>:
{
 800213c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800213e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 8002142:	f007 fb7f 	bl	8009844 <HAL_PCD_EP_Receive>
  switch (hal_status)
 8002146:	2803      	cmp	r0, #3
 8002148:	bf96      	itet	ls
 800214a:	4b02      	ldrls	r3, [pc, #8]	; (8002154 <USBD_LL_PrepareReceive+0x18>)
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800214c:	2003      	movhi	r0, #3
 800214e:	5c18      	ldrbls	r0, [r3, r0]
}
 8002150:	bd08      	pop	{r3, pc}
 8002152:	bf00      	nop
 8002154:	08026cc8 	.word	0x08026cc8

08002158 <USBD_LL_GetRxDataSize>:
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 8002158:	f8d0 02c8 	ldr.w	r0, [r0, #712]	; 0x2c8
 800215c:	f007 bb9a 	b.w	8009894 <HAL_PCD_EP_GetRxCount>

08002160 <USBD_static_malloc>:
}
 8002160:	4800      	ldr	r0, [pc, #0]	; (8002164 <USBD_static_malloc+0x4>)
 8002162:	4770      	bx	lr
 8002164:	20002870 	.word	0x20002870

08002168 <USBD_static_free>:
}
 8002168:	4770      	bx	lr
 800216a:	bf00      	nop

0800216c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;  // tazugane_11_1bpp
    static const touchgfx::FontId MEDIUM = 3; // tazugane_15_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800216c:	4770      	bx	lr
 800216e:	bf00      	nop

08002170 <_ZN23ApplicationFontProviderD0Ev>:
 8002170:	b510      	push	{r4, lr}
 8002172:	2104      	movs	r1, #4
 8002174:	4604      	mov	r4, r0
 8002176:	f022 f842 	bl	80241fe <_ZdlPvj>
 800217a:	4620      	mov	r0, r4
 800217c:	bd10      	pop	{r4, pc}
 800217e:	bf00      	nop

08002180 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002180:	b508      	push	{r3, lr}
 8002182:	2903      	cmp	r1, #3
 8002184:	d813      	bhi.n	80021ae <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002186:	e8df f001 	tbb	[pc, r1]
 800218a:	0a06      	.short	0x0a06
 800218c:	020e      	.short	0x020e
    case Typography::SMALL:
        // tazugane_11_1bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    case Typography::MEDIUM:
        // tazugane_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800218e:	f005 ff59 	bl	8008044 <_ZN17TypedTextDatabase8getFontsEv>
 8002192:	68c0      	ldr	r0, [r0, #12]
    default:
        return 0;
    }
}
 8002194:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002196:	f005 ff55 	bl	8008044 <_ZN17TypedTextDatabase8getFontsEv>
 800219a:	6800      	ldr	r0, [r0, #0]
}
 800219c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800219e:	f005 ff51 	bl	8008044 <_ZN17TypedTextDatabase8getFontsEv>
 80021a2:	6840      	ldr	r0, [r0, #4]
}
 80021a4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021a6:	f005 ff4d 	bl	8008044 <_ZN17TypedTextDatabase8getFontsEv>
 80021aa:	6880      	ldr	r0, [r0, #8]
}
 80021ac:	bd08      	pop	{r3, pc}
{
 80021ae:	2000      	movs	r0, #0
}
 80021b0:	bd08      	pop	{r3, pc}
 80021b2:	bf00      	nop

080021b4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021b4:	4800      	ldr	r0, [pc, #0]	; (80021b8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021b6:	4770      	bx	lr
 80021b8:	08026ce0 	.word	0x08026ce0

080021bc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021bc:	2010      	movs	r0, #16
 80021be:	4770      	bx	lr

080021c0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
 80021c0:	b169      	cbz	r1, 80021de <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021c2:	b510      	push	{r4, lr}
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021c4:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021c6:	b082      	sub	sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 80021c8:	2300      	movs	r3, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021ca:	6894      	ldr	r4, [r2, #8]
        const uint8_t* dummyPixelDataPointer = 0;
 80021cc:	9301      	str	r3, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021ce:	f88d 3003 	strb.w	r3, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021d2:	aa01      	add	r2, sp, #4
 80021d4:	f10d 0303 	add.w	r3, sp, #3
 80021d8:	47a0      	blx	r4
        return glyph;
    }
 80021da:	b002      	add	sp, #8
 80021dc:	bd10      	pop	{r4, pc}
            return 0;
 80021de:	4608      	mov	r0, r1
    }
 80021e0:	4770      	bx	lr
 80021e2:	bf00      	nop

080021e4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80021e4:	8940      	ldrh	r0, [r0, #10]
 80021e6:	4770      	bx	lr

080021e8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80021e8:	8980      	ldrh	r0, [r0, #12]
 80021ea:	4770      	bx	lr

080021ec <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80021ec:	8880      	ldrh	r0, [r0, #4]
 80021ee:	4770      	bx	lr

080021f0 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80021f0:	7983      	ldrb	r3, [r0, #6]
 80021f2:	8880      	ldrh	r0, [r0, #4]
 80021f4:	4418      	add	r0, r3
    }
 80021f6:	b280      	uxth	r0, r0
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop

080021fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80021fc:	79c0      	ldrb	r0, [r0, #7]
    }
 80021fe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002202:	4770      	bx	lr

08002204 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002204:	79c0      	ldrb	r0, [r0, #7]
    }
 8002206:	09c0      	lsrs	r0, r0, #7
 8002208:	4770      	bx	lr
 800220a:	bf00      	nop

0800220c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800220c:	4770      	bx	lr
 800220e:	bf00      	nop

08002210 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002210:	b510      	push	{r4, lr}
    }
 8002212:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002214:	4604      	mov	r4, r0
    }
 8002216:	f021 fff2 	bl	80241fe <_ZdlPvj>
 800221a:	4620      	mov	r0, r4
 800221c:	bd10      	pop	{r4, pc}
 800221e:	bf00      	nop

08002220 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002220:	4770      	bx	lr
 8002222:	bf00      	nop

08002224 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8002224:	460a      	mov	r2, r1
 8002226:	4603      	mov	r3, r0
    {
        redraw = rect;
 8002228:	6849      	ldr	r1, [r1, #4]
 800222a:	6810      	ldr	r0, [r2, #0]
 800222c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8002230:	c303      	stmia	r3!, {r0, r1}
    }
 8002232:	4770      	bx	lr

08002234 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8002234:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002238:	b112      	cbz	r2, 8002240 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
 800223a:	6803      	ldr	r3, [r0, #0]
 800223c:	695b      	ldr	r3, [r3, #20]
 800223e:	4718      	bx	r3
        }
    }
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop

08002244 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002244:	2000      	movs	r0, #0
 8002246:	4770      	bx	lr

08002248 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002248:	8081      	strh	r1, [r0, #4]
    }
 800224a:	4770      	bx	lr

0800224c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800224c:	80c1      	strh	r1, [r0, #6]
    }
 800224e:	4770      	bx	lr

08002250 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002250:	8101      	strh	r1, [r0, #8]
    }
 8002252:	4770      	bx	lr

08002254 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002254:	8141      	strh	r1, [r0, #10]
    }
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop

0800225c <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800225c:	4770      	bx	lr
 800225e:	bf00      	nop

08002260 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002260:	4770      	bx	lr
 8002262:	bf00      	nop

08002264 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop

08002268 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002268:	4770      	bx	lr
 800226a:	bf00      	nop

0800226c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800226c:	b430      	push	{r4, r5}
    {
        moveRelative(x - rect.x, y - rect.y);
 800226e:	88c5      	ldrh	r5, [r0, #6]
 8002270:	8884      	ldrh	r4, [r0, #4]
 8002272:	6803      	ldr	r3, [r0, #0]
 8002274:	1b52      	subs	r2, r2, r5
 8002276:	1b09      	subs	r1, r1, r4
 8002278:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 800227a:	bc30      	pop	{r4, r5}
        moveRelative(x - rect.x, y - rect.y);
 800227c:	b212      	sxth	r2, r2
 800227e:	b209      	sxth	r1, r1
 8002280:	4718      	bx	r3
 8002282:	bf00      	nop

08002284 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002284:	6813      	ldr	r3, [r2, #0]
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8002286:	b410      	push	{r4}
        cachedAbsX = UNCACHED_INDICATOR;
 8002288:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800228c:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8002290:	8184      	strh	r4, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
 8002292:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
    }
 8002296:	f85d 4b04 	ldr.w	r4, [sp], #4
        *nextPreviousElement = this;
 800229a:	6010      	str	r0, [r2, #0]
    }
 800229c:	4770      	bx	lr
 800229e:	bf00      	nop

080022a0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022a0:	4770      	bx	lr
 80022a2:	bf00      	nop

080022a4 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022a4:	4770      	bx	lr
 80022a6:	bf00      	nop

080022a8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022a8:	6041      	str	r1, [r0, #4]
    }
 80022aa:	4770      	bx	lr

080022ac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022ac:	4770      	bx	lr
 80022ae:	bf00      	nop

080022b0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022b0:	4905      	ldr	r1, [pc, #20]	; (80022c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
 80022b2:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022b6:	2200      	movs	r2, #0
// Logo

void FrontendApplicationBase::gotoLogoScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoLogoScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022b8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022bc:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 80022c0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoLogoScreenNoTransition();
    }
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	080027d5 	.word	0x080027d5

080022cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022cc:	2301      	movs	r3, #1
 80022ce:	7203      	strb	r3, [r0, #8]
    }
 80022d0:	4770      	bx	lr
 80022d2:	bf00      	nop

080022d4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80022d4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80022d8:	b11a      	cbz	r2, 80022e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80022da:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80022de:	b102      	cbz	r2, 80022e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80022e0:	6018      	str	r0, [r3, #0]
        }
    }
 80022e2:	4770      	bx	lr

080022e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80022e4:	4770      	bx	lr
 80022e6:	bf00      	nop

080022e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED1Ev>:
class WipeTransition : public Transition
 80022e8:	4770      	bx	lr
 80022ea:	bf00      	nop

080022ec <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop

080022f0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80022f0:	4770      	bx	lr
 80022f2:	bf00      	nop

080022f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
        screenContainer->remove(solid);
 80022f4:	f100 0110 	add.w	r1, r0, #16
 80022f8:	6840      	ldr	r0, [r0, #4]
 80022fa:	6803      	ldr	r3, [r0, #0]
 80022fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80022fe:	4718      	bx	r3

08002300 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE4initEv>:

    virtual void init()
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002300:	f100 0110 	add.w	r1, r0, #16
 8002304:	6840      	ldr	r0, [r0, #4]
 8002306:	6803      	ldr	r3, [r0, #0]
 8002308:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800230a:	4718      	bx	r3

0800230c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800230c:	4770      	bx	lr
 800230e:	bf00      	nop

08002310 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002310:	4770      	bx	lr
 8002312:	bf00      	nop

08002314 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect12getSolidRectEv>:
            return Rect(0U, 0U, rect.width, rect.height);
 8002314:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002318:	8082      	strh	r2, [r0, #4]
 800231a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800231e:	80c1      	strh	r1, [r0, #6]
 8002320:	2200      	movs	r2, #0
 8002322:	8002      	strh	r2, [r0, #0]
 8002324:	8042      	strh	r2, [r0, #2]
        }
 8002326:	4770      	bx	lr

08002328 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
 8002328:	68c3      	ldr	r3, [r0, #12]
 800232a:	07da      	lsls	r2, r3, #31
 800232c:	d404      	bmi.n	8002338 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x10>
 800232e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8002332:	eb01 0063 	add.w	r0, r1, r3, asr #1
 8002336:	4710      	bx	r2
    virtual void execute()
 8002338:	b410      	push	{r4}
        (pobject->*pmemfun)();
 800233a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800233e:	105c      	asrs	r4, r3, #1
 8002340:	5908      	ldr	r0, [r1, r4]
    }
 8002342:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002346:	5882      	ldr	r2, [r0, r2]
 8002348:	eb01 0063 	add.w	r0, r1, r3, asr #1
 800234c:	4710      	bx	r2
 800234e:	bf00      	nop

08002350 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002350:	6843      	ldr	r3, [r0, #4]
 8002352:	b13b      	cbz	r3, 8002364 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002354:	6883      	ldr	r3, [r0, #8]
 8002356:	b10b      	cbz	r3, 800235c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
 8002358:	2001      	movs	r0, #1
    }
 800235a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
 800235c:	68c0      	ldr	r0, [r0, #12]
 800235e:	f000 0001 	and.w	r0, r0, #1
 8002362:	4770      	bx	lr
 8002364:	4618      	mov	r0, r3
 8002366:	4770      	bx	lr

08002368 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002368:	b510      	push	{r4, lr}
 800236a:	210c      	movs	r1, #12
 800236c:	4604      	mov	r4, r0
 800236e:	f021 ff46 	bl	80241fe <_ZdlPvj>
 8002372:	4620      	mov	r0, r4
 8002374:	bd10      	pop	{r4, pc}
 8002376:	bf00      	nop

08002378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002378:	b510      	push	{r4, lr}
 800237a:	2110      	movs	r1, #16
 800237c:	4604      	mov	r4, r0
 800237e:	f021 ff3e 	bl	80241fe <_ZdlPvj>
 8002382:	4620      	mov	r0, r4
 8002384:	bd10      	pop	{r4, pc}
 8002386:	bf00      	nop

08002388 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002388:	b510      	push	{r4, lr}
 800238a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800238e:	4604      	mov	r4, r0
 8002390:	f021 ff35 	bl	80241fe <_ZdlPvj>
 8002394:	4620      	mov	r0, r4
 8002396:	bd10      	pop	{r4, pc}

08002398 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED0Ev>:
class WipeTransition : public Transition
 8002398:	b510      	push	{r4, lr}
 800239a:	2138      	movs	r1, #56	; 0x38
 800239c:	4604      	mov	r4, r0
 800239e:	f021 ff2e 	bl	80241fe <_ZdlPvj>
 80023a2:	4620      	mov	r0, r4
 80023a4:	bd10      	pop	{r4, pc}
 80023a6:	bf00      	nop

080023a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80023a8:	b510      	push	{r4, lr}
 80023aa:	2128      	movs	r1, #40	; 0x28
 80023ac:	4604      	mov	r4, r0
 80023ae:	f021 ff26 	bl	80241fe <_ZdlPvj>
 80023b2:	4620      	mov	r0, r4
 80023b4:	bd10      	pop	{r4, pc}
 80023b6:	bf00      	nop

080023b8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80023b8:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80023ba:	f012 ff2b 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80023be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80023c2:	f013 bb07 	b.w	80159d4 <_ZN8touchgfx11Application10invalidateEv>
 80023c6:	bf00      	nop

080023c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80023c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023cc:	4604      	mov	r4, r0
        animationCounter++;
 80023ce:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80023d0:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80023d2:	3001      	adds	r0, #1
 80023d4:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80023d6:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80023d8:	b086      	sub	sp, #24
        animationCounter++;
 80023da:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 80023dc:	d906      	bls.n	80023ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x24>
            done = true;
 80023de:	2201      	movs	r2, #1
            animationCounter = 0;
 80023e0:	2300      	movs	r3, #0
            done = true;
 80023e2:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
 80023e4:	72a3      	strb	r3, [r4, #10]
    }
 80023e6:	b006      	add	sp, #24
 80023e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80023f0:	2100      	movs	r1, #0
 80023f2:	f014 fbe1 	bl	8016bb8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80023f6:	f010 0101 	ands.w	r1, r0, #1
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023fa:	4603      	mov	r3, r0
            if (calculatedValue % 2)
 80023fc:	b282      	uxth	r2, r0
 80023fe:	d04f      	beq.n	80024a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd8>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002400:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002404:	2b00      	cmp	r3, #0
 8002406:	bfd8      	it	le
 8002408:	4601      	movle	r1, r0
 800240a:	440a      	add	r2, r1
 800240c:	b213      	sxth	r3, r2
 800240e:	81e3      	strh	r3, [r4, #14]
 8002410:	b292      	uxth	r2, r2
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002412:	4e26      	ldr	r6, [pc, #152]	; (80024ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xe4>)
                screenContainer->invalidateRect(r);
 8002414:	6860      	ldr	r0, [r4, #4]
                const uint16_t prevSolidPos = solid.getY();
 8002416:	f9b4 7016 	ldrsh.w	r7, [r4, #22]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 800241a:	8831      	ldrh	r1, [r6, #0]
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 800241c:	4d24      	ldr	r5, [pc, #144]	; (80024b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xe8>)
                screenContainer->invalidateRect(r);
 800241e:	f8d0 e000 	ldr.w	lr, [r0]
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 8002422:	f9b5 c000 	ldrsh.w	ip, [r5]
 8002426:	f8ad 7012 	strh.w	r7, [sp, #18]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 800242a:	1a89      	subs	r1, r1, r2
                const uint16_t delta = calculatedValue - prevSolidPos;
 800242c:	1bd2      	subs	r2, r2, r7
 800242e:	2700      	movs	r7, #0
                screenContainer->invalidateRect(r);
 8002430:	f8de 8010 	ldr.w	r8, [lr, #16]
        rect.height = height;
 8002434:	8361      	strh	r1, [r4, #26]
        rect.y = y;
 8002436:	82e3      	strh	r3, [r4, #22]
 8002438:	f8ad 2016 	strh.w	r2, [sp, #22]
 800243c:	f8ad c014 	strh.w	ip, [sp, #20]
 8002440:	f8ad 7010 	strh.w	r7, [sp, #16]
 8002444:	a904      	add	r1, sp, #16
 8002446:	47c0      	blx	r8
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002448:	7aa3      	ldrb	r3, [r4, #10]
 800244a:	2b01      	cmp	r3, #1
 800244c:	d1cb      	bne.n	80023e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x1e>
 800244e:	4b19      	ldr	r3, [pc, #100]	; (80024b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xec>)
 8002450:	781b      	ldrb	r3, [r3, #0]
 8002452:	2b00      	cmp	r3, #0
 8002454:	d0c7      	beq.n	80023e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x1e>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002456:	f854 0f14 	ldr.w	r0, [r4, #20]!
        return instance;
 800245a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80024b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xf0>
 800245e:	6861      	ldr	r1, [r4, #4]
 8002460:	f8d8 2000 	ldr.w	r2, [r8]
 8002464:	ab02      	add	r3, sp, #8
 8002466:	c303      	stmia	r3!, {r0, r1}
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002468:	6813      	ldr	r3, [r2, #0]
 800246a:	4610      	mov	r0, r2
 800246c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800246e:	4798      	blx	r3
 8002470:	f8d8 3000 	ldr.w	r3, [r8]
            source.width = HAL::DISPLAY_WIDTH;
 8002474:	8829      	ldrh	r1, [r5, #0]
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002476:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
            source.height = HAL::DISPLAY_HEIGHT;
 800247a:	8834      	ldrh	r4, [r6, #0]
            source.width = HAL::DISPLAY_WIDTH;
 800247c:	f8ad 1014 	strh.w	r1, [sp, #20]
            source.height = HAL::DISPLAY_HEIGHT;
 8002480:	f8ad 4016 	strh.w	r4, [sp, #22]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002484:	4601      	mov	r1, r0
        : x(0), y(0), width(0), height(0)
 8002486:	9704      	str	r7, [sp, #16]
 8002488:	b962      	cbnz	r2, 80024a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xdc>
        return instance->lcdRef;
 800248a:	6898      	ldr	r0, [r3, #8]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800248c:	6804      	ldr	r4, [r0, #0]
 800248e:	23ff      	movs	r3, #255	; 0xff
 8002490:	2200      	movs	r2, #0
 8002492:	e9cd 3200 	strd	r3, r2, [sp]
 8002496:	ab02      	add	r3, sp, #8
 8002498:	68e4      	ldr	r4, [r4, #12]
 800249a:	aa04      	add	r2, sp, #16
 800249c:	47a0      	blx	r4
 800249e:	e7a2      	b.n	80023e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x1e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024a0:	81e0      	strh	r0, [r4, #14]
 80024a2:	e7b6      	b.n	8002412 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x4a>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80024a4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80024a6:	2800      	cmp	r0, #0
 80024a8:	d1f0      	bne.n	800248c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc4>
 80024aa:	e7ee      	b.n	800248a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc2>
 80024ac:	20002c82 	.word	0x20002c82
 80024b0:	20002c80 	.word	0x20002c80
 80024b4:	20002c8a 	.word	0x20002c8a
 80024b8:	20002c8c 	.word	0x20002c8c

080024bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80024bc:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
 80024c0:	b1d3      	cbz	r3, 80024f8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
 80024c2:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
 80024c4:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80024c6:	68d1      	ldr	r1, [r2, #12]
 80024c8:	4604      	mov	r4, r0
 80024ca:	4819      	ldr	r0, [pc, #100]	; (8002530 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
 80024cc:	4281      	cmp	r1, r0
 80024ce:	d11c      	bne.n	800250a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
        return (pobject != 0) && (pmemfun != 0);
 80024d0:	6859      	ldr	r1, [r3, #4]
 80024d2:	b181      	cbz	r1, 80024f6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
 80024d4:	689d      	ldr	r5, [r3, #8]
 80024d6:	b305      	cbz	r5, 800251a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x5e>
        {
            pendingScreenTransitionCallback->execute();
 80024d8:	6892      	ldr	r2, [r2, #8]
 80024da:	4916      	ldr	r1, [pc, #88]	; (8002534 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x78>)
 80024dc:	428a      	cmp	r2, r1
 80024de:	d123      	bne.n	8002528 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>
        (pobject->*pmemfun)();
 80024e0:	68d8      	ldr	r0, [r3, #12]
 80024e2:	07c2      	lsls	r2, r0, #31
 80024e4:	d409      	bmi.n	80024fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
 80024e6:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 80024ea:	eb02 0060 	add.w	r0, r2, r0, asr #1
 80024ee:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80024f0:	2300      	movs	r3, #0
 80024f2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80024f6:	bd70      	pop	{r4, r5, r6, pc}
 80024f8:	4770      	bx	lr
 80024fa:	e9d3 1501 	ldrd	r1, r5, [r3, #4]
 80024fe:	1043      	asrs	r3, r0, #1
 8002500:	eb01 0060 	add.w	r0, r1, r0, asr #1
 8002504:	58cb      	ldr	r3, [r1, r3]
 8002506:	595b      	ldr	r3, [r3, r5]
 8002508:	e7f1      	b.n	80024ee <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800250a:	4618      	mov	r0, r3
 800250c:	4788      	blx	r1
 800250e:	2800      	cmp	r0, #0
 8002510:	d0f1      	beq.n	80024f6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
 8002512:	f8d4 313c 	ldr.w	r3, [r4, #316]	; 0x13c
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	e7de      	b.n	80024d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
 800251a:	68d8      	ldr	r0, [r3, #12]
 800251c:	07c6      	lsls	r6, r0, #31
 800251e:	d5ea      	bpl.n	80024f6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
 8002520:	6892      	ldr	r2, [r2, #8]
 8002522:	4e04      	ldr	r6, [pc, #16]	; (8002534 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x78>)
 8002524:	42b2      	cmp	r2, r6
 8002526:	d0ea      	beq.n	80024fe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x42>
 8002528:	4618      	mov	r0, r3
 800252a:	4790      	blx	r2
 800252c:	e7e0      	b.n	80024f0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
 800252e:	bf00      	nop
 8002530:	08002351 	.word	0x08002351
 8002534:	08002329 	.word	0x08002329

08002538 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800253a:	4604      	mov	r4, r0
 800253c:	460d      	mov	r5, r1
 800253e:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002540:	f012 fec4 	bl	80152cc <_ZN8touchgfx11ApplicationC1Ev>
      model(m)
 8002544:	4b18      	ldr	r3, [pc, #96]	; (80025a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 8002546:	6023      	str	r3, [r4, #0]
        return instance;
 8002548:	4f18      	ldr	r7, [pc, #96]	; (80025ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x74>)
 800254a:	4919      	ldr	r1, [pc, #100]	; (80025b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x78>)
 800254c:	6838      	ldr	r0, [r7, #0]
 800254e:	2300      	movs	r3, #0
        : pobject(0), pmemfun(0)
 8002550:	e9c4 3352 	strd	r3, r3, [r4, #328]	; 0x148
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002554:	6802      	ldr	r2, [r0, #0]
      model(m)
 8002556:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800255a:	6892      	ldr	r2, [r2, #8]
        instance = this;
 800255c:	4e15      	ldr	r6, [pc, #84]	; (80025b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
      model(m)
 800255e:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8002562:	428a      	cmp	r2, r1
 8002564:	4d14      	ldr	r5, [pc, #80]	; (80025b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>)
 8002566:	6034      	str	r4, [r6, #0]
          pendingScreenTransitionCallback(0)
 8002568:	e9c4 334e 	strd	r3, r3, [r4, #312]	; 0x138
 800256c:	f8c4 5140 	str.w	r5, [r4, #320]	; 0x140
 8002570:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002574:	d115      	bne.n	80025a2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6a>
        requestedOrientation = orientation;
 8002576:	f44f 7380 	mov.w	r3, #256	; 0x100
 800257a:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
    touchgfx::Texts::setLanguage(GB);
 800257e:	2000      	movs	r0, #0
 8002580:	f004 f9c4 	bl	800690c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002584:	683b      	ldr	r3, [r7, #0]
 8002586:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800258a:	b12a      	cbz	r2, 8002598 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
 800258c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800258e:	b118      	cbz	r0, 8002598 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002590:	f01a ff39 	bl	801d406 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002594:	4620      	mov	r0, r4
 8002596:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return instance->lcdRef;
 8002598:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800259a:	f01a ff34 	bl	801d406 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800259e:	4620      	mov	r0, r4
 80025a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025a2:	4619      	mov	r1, r3
 80025a4:	4790      	blx	r2
 80025a6:	e7ea      	b.n	800257e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80025a8:	08027590 	.word	0x08027590
 80025ac:	20002c8c 	.word	0x20002c8c
 80025b0:	080010ad 	.word	0x080010ad
 80025b4:	20002cd8 	.word	0x20002cd8
 80025b8:	08027578 	.word	0x08027578

080025bc <_ZN23FrontendApplicationBase26gotoLogoScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025bc:	4905      	ldr	r1, [pc, #20]	; (80025d4 <_ZN23FrontendApplicationBase26gotoLogoScreenNoTransitionEv+0x18>)
 80025be:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80025c2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
 80025c4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80025c8:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 80025cc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80025d0:	4770      	bx	lr
 80025d2:	bf00      	nop
 80025d4:	080027d5 	.word	0x080027d5

080025d8 <_ZN23FrontendApplicationBase33gotoMainScreenWipeTransitionNorthEv>:
 80025d8:	4905      	ldr	r1, [pc, #20]	; (80025f0 <_ZN23FrontendApplicationBase33gotoMainScreenWipeTransitionNorthEv+0x18>)
 80025da:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80025de:	2200      	movs	r2, #0
// Main

void FrontendApplicationBase::gotoMainScreenWipeTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenWipeTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80025e0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80025e4:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 80025e8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80025ec:	4770      	bx	lr
 80025ee:	bf00      	nop
 80025f0:	080029d1 	.word	0x080029d1

080025f4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 80025f4:	4905      	ldr	r1, [pc, #20]	; (800260c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x18>)
 80025f6:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80025fa:	2200      	movs	r2, #0
}

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80025fc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002600:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 8002604:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002608:	4770      	bx	lr
 800260a:	bf00      	nop
 800260c:	08002b85 	.word	0x08002b85

08002610 <_ZN23FrontendApplicationBase29gotoSettingScreenNoTransitionEv>:
 8002610:	4905      	ldr	r1, [pc, #20]	; (8002628 <_ZN23FrontendApplicationBase29gotoSettingScreenNoTransitionEv+0x18>)
 8002612:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002616:	2200      	movs	r2, #0
// Setting

void FrontendApplicationBase::gotoSettingScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoSettingScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002618:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800261c:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 8002620:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002624:	4770      	bx	lr
 8002626:	bf00      	nop
 8002628:	08002d3d 	.word	0x08002d3d

0800262c <_ZN23FrontendApplicationBase30gotoTransferScreenNoTransitionEv>:
 800262c:	4905      	ldr	r1, [pc, #20]	; (8002644 <_ZN23FrontendApplicationBase30gotoTransferScreenNoTransitionEv+0x18>)
 800262e:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002632:	2200      	movs	r2, #0
// Transfer

void FrontendApplicationBase::gotoTransferScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTransferScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002634:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002638:	e9c0 1252 	strd	r1, r2, [r0, #328]	; 0x148
 800263c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002640:	4770      	bx	lr
 8002642:	bf00      	nop
 8002644:	08002ef1 	.word	0x08002ef1

08002648 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002648:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800264c:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800264e:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002650:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002654:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002656:	6802      	ldr	r2, [r0, #0]
 8002658:	6a12      	ldr	r2, [r2, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800265a:	4688      	mov	r8, r1
 800265c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800265e:	4790      	blx	r2
 8002660:	f5b0 7f96 	cmp.w	r0, #300	; 0x12c
 8002664:	f0c0 8094 	bcc.w	8002790 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002668:	6860      	ldr	r0, [r4, #4]
 800266a:	6803      	ldr	r3, [r0, #0]
 800266c:	6a1b      	ldr	r3, [r3, #32]
 800266e:	4798      	blx	r3
 8002670:	280f      	cmp	r0, #15
 8002672:	f240 8099 	bls.w	80027a8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002676:	68e0      	ldr	r0, [r4, #12]
 8002678:	6803      	ldr	r3, [r0, #0]
 800267a:	6a1b      	ldr	r3, [r3, #32]
 800267c:	4798      	blx	r3
 800267e:	280b      	cmp	r0, #11
 8002680:	f240 808c 	bls.w	800279c <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>
    Application::getInstance()->clearAllTimerWidgets();
 8002684:	f012 fdc6 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002688:	f012 fe06 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800268c:	f8d9 0000 	ldr.w	r0, [r9]
 8002690:	b140      	cbz	r0, 80026a4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->tearDown();
 8002692:	6803      	ldr	r3, [r0, #0]
 8002694:	68db      	ldr	r3, [r3, #12]
 8002696:	4798      	blx	r3
    if (*currentTrans)
 8002698:	f8d9 0000 	ldr.w	r0, [r9]
 800269c:	b110      	cbz	r0, 80026a4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->~Transition();
 800269e:	6803      	ldr	r3, [r0, #0]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	4798      	blx	r3
    if (*currentScreen)
 80026a4:	6838      	ldr	r0, [r7, #0]
 80026a6:	2800      	cmp	r0, #0
 80026a8:	d05f      	beq.n	800276a <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
        (*currentScreen)->tearDownScreen();
 80026aa:	6803      	ldr	r3, [r0, #0]
 80026ac:	695b      	ldr	r3, [r3, #20]
 80026ae:	4798      	blx	r3
    if (*currentPresenter)
 80026b0:	f8d8 0000 	ldr.w	r0, [r8]
 80026b4:	2800      	cmp	r0, #0
 80026b6:	d054      	beq.n	8002762 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11a>
        (*currentPresenter)->deactivate();
 80026b8:	6803      	ldr	r3, [r0, #0]
 80026ba:	685b      	ldr	r3, [r3, #4]
 80026bc:	4798      	blx	r3
    if (*currentScreen)
 80026be:	6838      	ldr	r0, [r7, #0]
 80026c0:	b110      	cbz	r0, 80026c8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 80026c2:	6803      	ldr	r3, [r0, #0]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	4798      	blx	r3
    if (*currentPresenter)
 80026c8:	f8d8 0000 	ldr.w	r0, [r8]
 80026cc:	b110      	cbz	r0, 80026d4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	689b      	ldr	r3, [r3, #8]
 80026d2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026d4:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80026d6:	6803      	ldr	r3, [r0, #0]
 80026d8:	2100      	movs	r1, #0
 80026da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026dc:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026de:	68a3      	ldr	r3, [r4, #8]
 80026e0:	4934      	ldr	r1, [pc, #208]	; (80027b4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 80026e2:	681a      	ldr	r2, [r3, #0]
        : screenContainer(0), done(false)
 80026e4:	f04f 0b00 	mov.w	fp, #0
 80026e8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80026ea:	f880 b008 	strb.w	fp, [r0, #8]
 80026ee:	e9c0 1b00 	strd	r1, fp, [r0]
 80026f2:	4605      	mov	r5, r0
 80026f4:	4659      	mov	r1, fp
 80026f6:	4618      	mov	r0, r3
 80026f8:	4790      	blx	r2
 80026fa:	4606      	mov	r6, r0
 80026fc:	f005 fd0e 	bl	800811c <_ZN8LogoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002700:	6860      	ldr	r0, [r4, #4]
 8002702:	6803      	ldr	r3, [r0, #0]
 8002704:	4659      	mov	r1, fp
 8002706:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002708:	4798      	blx	r3
 800270a:	4631      	mov	r1, r6
 800270c:	4604      	mov	r4, r0
 800270e:	f005 fce9 	bl	80080e4 <_ZN13LogoPresenterC1ER8LogoView>
    *currentTrans = newTransition;
 8002712:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002716:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800271a:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800271c:	b354      	cbz	r4, 8002774 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
 800271e:	1d22      	adds	r2, r4, #4
    newScreen->setupScreen();
 8002720:	6833      	ldr	r3, [r6, #0]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002722:	f8ca 2000 	str.w	r2, [sl]
 8002726:	68db      	ldr	r3, [r3, #12]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002728:	f8c4 a008 	str.w	sl, [r4, #8]
 800272c:	4630      	mov	r0, r6
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800272e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002730:	4798      	blx	r3
    newPresenter->activate();
 8002732:	6823      	ldr	r3, [r4, #0]
 8002734:	4620      	mov	r0, r4
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800273a:	4629      	mov	r1, r5
 800273c:	4630      	mov	r0, r6
 800273e:	f014 fa35 	bl	8016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002742:	682b      	ldr	r3, [r5, #0]
 8002744:	491c      	ldr	r1, [pc, #112]	; (80027b8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8002746:	691a      	ldr	r2, [r3, #16]
 8002748:	428a      	cmp	r2, r1
 800274a:	d115      	bne.n	8002778 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>
    newTransition->invalidate();
 800274c:	695b      	ldr	r3, [r3, #20]
 800274e:	4a1b      	ldr	r2, [pc, #108]	; (80027bc <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002750:	4293      	cmp	r3, r2
 8002752:	d118      	bne.n	8002786 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13e>
        Application::getInstance()->invalidate();
 8002754:	f012 fd5e 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002758:	f013 f93c 	bl	80159d4 <_ZN8touchgfx11Application10invalidateEv>
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 800275c:	4620      	mov	r0, r4
 800275e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
 8002762:	6838      	ldr	r0, [r7, #0]
 8002764:	2800      	cmp	r0, #0
 8002766:	d1ac      	bne.n	80026c2 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 8002768:	e7b4      	b.n	80026d4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    if (*currentPresenter)
 800276a:	f8d8 0000 	ldr.w	r0, [r8]
 800276e:	2800      	cmp	r0, #0
 8002770:	d1a2      	bne.n	80026b8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
 8002772:	e7af      	b.n	80026d4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    model->bind(newPresenter);
 8002774:	4622      	mov	r2, r4
 8002776:	e7d3      	b.n	8002720 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xd8>
    newTransition->init();
 8002778:	4628      	mov	r0, r5
 800277a:	4790      	blx	r2
 800277c:	682b      	ldr	r3, [r5, #0]
    newTransition->invalidate();
 800277e:	4a0f      	ldr	r2, [pc, #60]	; (80027bc <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002780:	695b      	ldr	r3, [r3, #20]
 8002782:	4293      	cmp	r3, r2
 8002784:	d0e6      	beq.n	8002754 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 8002786:	4628      	mov	r0, r5
 8002788:	4798      	blx	r3
}
 800278a:	4620      	mov	r0, r4
 800278c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002790:	4b0b      	ldr	r3, [pc, #44]	; (80027c0 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x178>)
 8002792:	4a0c      	ldr	r2, [pc, #48]	; (80027c4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002794:	480c      	ldr	r0, [pc, #48]	; (80027c8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002796:	21a3      	movs	r1, #163	; 0xa3
 8002798:	f022 fb50 	bl	8024e3c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800279c:	4b0b      	ldr	r3, [pc, #44]	; (80027cc <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 800279e:	4a09      	ldr	r2, [pc, #36]	; (80027c4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 80027a0:	4809      	ldr	r0, [pc, #36]	; (80027c8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 80027a2:	21a5      	movs	r1, #165	; 0xa5
 80027a4:	f022 fb4a 	bl	8024e3c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80027a8:	4b09      	ldr	r3, [pc, #36]	; (80027d0 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x188>)
 80027aa:	4a06      	ldr	r2, [pc, #24]	; (80027c4 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 80027ac:	4806      	ldr	r0, [pc, #24]	; (80027c8 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 80027ae:	21a4      	movs	r1, #164	; 0xa4
 80027b0:	f022 fb44 	bl	8024e3c <__assert_func>
 80027b4:	080275dc 	.word	0x080275dc
 80027b8:	080022a5 	.word	0x080022a5
 80027bc:	080023b9 	.word	0x080023b9
 80027c0:	08026e30 	.word	0x08026e30
 80027c4:	08026ec0 	.word	0x08026ec0
 80027c8:	08026fc0 	.word	0x08026fc0
 80027cc:	080270ac 	.word	0x080270ac
 80027d0:	08027008 	.word	0x08027008

080027d4 <_ZN23FrontendApplicationBase30gotoLogoScreenNoTransitionImplEv>:
{
 80027d4:	b500      	push	{lr}
 80027d6:	b083      	sub	sp, #12
    touchgfx::makeTransition<LogoView, LogoPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80027d8:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80027dc:	9300      	str	r3, [sp, #0]
 80027de:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80027e2:	4b04      	ldr	r3, [pc, #16]	; (80027f4 <_ZN23FrontendApplicationBase30gotoLogoScreenNoTransitionImplEv+0x20>)
 80027e4:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80027e8:	4803      	ldr	r0, [pc, #12]	; (80027f8 <_ZN23FrontendApplicationBase30gotoLogoScreenNoTransitionImplEv+0x24>)
 80027ea:	f7ff ff2d 	bl	8002648 <_ZN8touchgfx14makeTransitionI8LogoView13LogoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80027ee:	b003      	add	sp, #12
 80027f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80027f4:	20002ccc 	.word	0x20002ccc
 80027f8:	20002cc8 	.word	0x20002cc8

080027fc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80027fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002800:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002802:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002804:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002806:	6802      	ldr	r2, [r0, #0]
 8002808:	6a12      	ldr	r2, [r2, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800280a:	4688      	mov	r8, r1
 800280c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800280e:	4790      	blx	r2
 8002810:	f5b0 6f07 	cmp.w	r0, #2160	; 0x870
 8002814:	f0c0 80b4 	bcc.w	8002980 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002818:	6868      	ldr	r0, [r5, #4]
 800281a:	6803      	ldr	r3, [r0, #0]
 800281c:	6a1b      	ldr	r3, [r3, #32]
 800281e:	4798      	blx	r3
 8002820:	280f      	cmp	r0, #15
 8002822:	f240 80b9 	bls.w	8002998 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x19c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002826:	68e8      	ldr	r0, [r5, #12]
 8002828:	6803      	ldr	r3, [r0, #0]
 800282a:	6a1b      	ldr	r3, [r3, #32]
 800282c:	4798      	blx	r3
 800282e:	2837      	cmp	r0, #55	; 0x37
 8002830:	f240 80ac 	bls.w	800298c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x190>
    Application::getInstance()->clearAllTimerWidgets();
 8002834:	f012 fcee 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002838:	f012 fd2e 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800283c:	f8d9 0000 	ldr.w	r0, [r9]
 8002840:	b140      	cbz	r0, 8002854 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
        (*currentTrans)->tearDown();
 8002842:	6803      	ldr	r3, [r0, #0]
 8002844:	68db      	ldr	r3, [r3, #12]
 8002846:	4798      	blx	r3
    if (*currentTrans)
 8002848:	f8d9 0000 	ldr.w	r0, [r9]
 800284c:	b110      	cbz	r0, 8002854 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
        (*currentTrans)->~Transition();
 800284e:	6803      	ldr	r3, [r0, #0]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	4798      	blx	r3
    if (*currentScreen)
 8002854:	6838      	ldr	r0, [r7, #0]
 8002856:	2800      	cmp	r0, #0
 8002858:	d07f      	beq.n	800295a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15e>
        (*currentScreen)->tearDownScreen();
 800285a:	6803      	ldr	r3, [r0, #0]
 800285c:	695b      	ldr	r3, [r3, #20]
 800285e:	4798      	blx	r3
    if (*currentPresenter)
 8002860:	f8d8 0000 	ldr.w	r0, [r8]
 8002864:	2800      	cmp	r0, #0
 8002866:	d074      	beq.n	8002952 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x156>
        (*currentPresenter)->deactivate();
 8002868:	6803      	ldr	r3, [r0, #0]
 800286a:	685b      	ldr	r3, [r3, #4]
 800286c:	4798      	blx	r3
    if (*currentScreen)
 800286e:	6838      	ldr	r0, [r7, #0]
 8002870:	b110      	cbz	r0, 8002878 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->~Screen();
 8002872:	6803      	ldr	r3, [r0, #0]
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4798      	blx	r3
    if (*currentPresenter)
 8002878:	f8d8 0000 	ldr.w	r0, [r8]
 800287c:	b110      	cbz	r0, 8002884 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->~Presenter();
 800287e:	6803      	ldr	r3, [r0, #0]
 8002880:	689b      	ldr	r3, [r3, #8]
 8002882:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002884:	68e8      	ldr	r0, [r5, #12]
 8002886:	6803      	ldr	r3, [r0, #0]
 8002888:	2100      	movs	r1, #0
 800288a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800288c:	4798      	blx	r3
          solid()
 800288e:	4b45      	ldr	r3, [pc, #276]	; (80029a4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a8>)
 8002890:	6003      	str	r3, [r0, #0]
 8002892:	4604      	mov	r4, r0
        : screenContainer(0), done(false)
 8002894:	f04f 0a00 	mov.w	sl, #0
 8002898:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800289c:	f100 0b10 	add.w	fp, r0, #16
 80028a0:	8103      	strh	r3, [r0, #8]
 80028a2:	4651      	mov	r1, sl
 80028a4:	2228      	movs	r2, #40	; 0x28
 80028a6:	4658      	mov	r0, fp
 80028a8:	f8c4 a004 	str.w	sl, [r4, #4]
 80028ac:	f884 a00a 	strb.w	sl, [r4, #10]
 80028b0:	f8a4 a00e 	strh.w	sl, [r4, #14]
 80028b4:	f022 fb4e 	bl	8024f54 <memset>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80028b8:	68a8      	ldr	r0, [r5, #8]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80028ba:	4a3b      	ldr	r2, [pc, #236]	; (80029a8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
            targetValue = HAL::DISPLAY_HEIGHT;
 80028bc:	4b3b      	ldr	r3, [pc, #236]	; (80029ac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>)
        rect.width = width;
 80028be:	8816      	ldrh	r6, [r2, #0]
 80028c0:	6802      	ldr	r2, [r0, #0]
 80028c2:	f9b3 3000 	ldrsh.w	r3, [r3]
    class FullSolidRect : public Widget
 80028c6:	493a      	ldr	r1, [pc, #232]	; (80029b0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>)
 80028c8:	6121      	str	r1, [r4, #16]
          visible(true)
 80028ca:	f44f 7c80 	mov.w	ip, #256	; 0x100
 80028ce:	f8a4 c034 	strh.w	ip, [r4, #52]	; 0x34
 80028d2:	4651      	mov	r1, sl
        rect.width = width;
 80028d4:	8326      	strh	r6, [r4, #24]
            targetValue = HAL::DISPLAY_HEIGHT;
 80028d6:	81a3      	strh	r3, [r4, #12]
        rect.height = height;
 80028d8:	8363      	strh	r3, [r4, #26]
 80028da:	f8a4 a014 	strh.w	sl, [r4, #20]
 80028de:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80028e0:	f8a4 a016 	strh.w	sl, [r4, #22]
 80028e4:	4798      	blx	r3
 80028e6:	4606      	mov	r6, r0
 80028e8:	f005 fd40 	bl	800836c <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80028ec:	6868      	ldr	r0, [r5, #4]
 80028ee:	6803      	ldr	r3, [r0, #0]
 80028f0:	4651      	mov	r1, sl
 80028f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028f4:	4798      	blx	r3
 80028f6:	4631      	mov	r1, r6
 80028f8:	4605      	mov	r5, r0
 80028fa:	f005 fc33 	bl	8008164 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 80028fe:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002902:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8002906:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002908:	2d00      	cmp	r5, #0
 800290a:	d02b      	beq.n	8002964 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>
 800290c:	1d2a      	adds	r2, r5, #4
 800290e:	990a      	ldr	r1, [sp, #40]	; 0x28
    newScreen->setupScreen();
 8002910:	6833      	ldr	r3, [r6, #0]
 8002912:	600a      	str	r2, [r1, #0]
 8002914:	68db      	ldr	r3, [r3, #12]
 8002916:	60a9      	str	r1, [r5, #8]
 8002918:	4630      	mov	r0, r6
 800291a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800291c:	4798      	blx	r3
    newPresenter->activate();
 800291e:	682b      	ldr	r3, [r5, #0]
 8002920:	4628      	mov	r0, r5
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002926:	4621      	mov	r1, r4
 8002928:	4630      	mov	r0, r6
 800292a:	f014 f93f 	bl	8016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800292e:	6823      	ldr	r3, [r4, #0]
 8002930:	4a20      	ldr	r2, [pc, #128]	; (80029b4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>)
 8002932:	691b      	ldr	r3, [r3, #16]
 8002934:	4293      	cmp	r3, r2
 8002936:	d117      	bne.n	8002968 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>
        screenContainer->add(solid);
 8002938:	6860      	ldr	r0, [r4, #4]
 800293a:	6803      	ldr	r3, [r0, #0]
 800293c:	4659      	mov	r1, fp
 800293e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002940:	4798      	blx	r3
    newTransition->invalidate();
 8002942:	6823      	ldr	r3, [r4, #0]
 8002944:	4a1c      	ldr	r2, [pc, #112]	; (80029b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 8002946:	695b      	ldr	r3, [r3, #20]
 8002948:	4293      	cmp	r3, r2
 800294a:	d114      	bne.n	8002976 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17a>
}
 800294c:	4628      	mov	r0, r5
 800294e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
 8002952:	6838      	ldr	r0, [r7, #0]
 8002954:	2800      	cmp	r0, #0
 8002956:	d18c      	bne.n	8002872 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x76>
 8002958:	e794      	b.n	8002884 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
    if (*currentPresenter)
 800295a:	f8d8 0000 	ldr.w	r0, [r8]
 800295e:	2800      	cmp	r0, #0
 8002960:	d182      	bne.n	8002868 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6c>
 8002962:	e78f      	b.n	8002884 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
    model->bind(newPresenter);
 8002964:	462a      	mov	r2, r5
 8002966:	e7d2      	b.n	800290e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
    newTransition->init();
 8002968:	4620      	mov	r0, r4
 800296a:	4798      	blx	r3
    newTransition->invalidate();
 800296c:	6823      	ldr	r3, [r4, #0]
 800296e:	4a12      	ldr	r2, [pc, #72]	; (80029b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 8002970:	695b      	ldr	r3, [r3, #20]
 8002972:	4293      	cmp	r3, r2
 8002974:	d0ea      	beq.n	800294c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>
 8002976:	4620      	mov	r0, r4
 8002978:	4798      	blx	r3
}
 800297a:	4628      	mov	r0, r5
 800297c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002980:	4b0e      	ldr	r3, [pc, #56]	; (80029bc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c0>)
 8002982:	4a0f      	ldr	r2, [pc, #60]	; (80029c0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
 8002984:	480f      	ldr	r0, [pc, #60]	; (80029c4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8002986:	21a3      	movs	r1, #163	; 0xa3
 8002988:	f022 fa58 	bl	8024e3c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800298c:	4b0e      	ldr	r3, [pc, #56]	; (80029c8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1cc>)
 800298e:	4a0c      	ldr	r2, [pc, #48]	; (80029c0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
 8002990:	480c      	ldr	r0, [pc, #48]	; (80029c4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8002992:	21a5      	movs	r1, #165	; 0xa5
 8002994:	f022 fa52 	bl	8024e3c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002998:	4b0c      	ldr	r3, [pc, #48]	; (80029cc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1d0>)
 800299a:	4a09      	ldr	r2, [pc, #36]	; (80029c0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
 800299c:	4809      	ldr	r0, [pc, #36]	; (80029c4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 800299e:	21a4      	movs	r1, #164	; 0xa4
 80029a0:	f022 fa4c 	bl	8024e3c <__assert_func>
 80029a4:	08027668 	.word	0x08027668
 80029a8:	20002c80 	.word	0x20002c80
 80029ac:	20002c82 	.word	0x20002c82
 80029b0:	08027600 	.word	0x08027600
 80029b4:	08002301 	.word	0x08002301
 80029b8:	0800230d 	.word	0x0800230d
 80029bc:	08026e30 	.word	0x08026e30
 80029c0:	08027150 	.word	0x08027150
 80029c4:	08026fc0 	.word	0x08026fc0
 80029c8:	080270ac 	.word	0x080270ac
 80029cc:	08027008 	.word	0x08027008

080029d0 <_ZN23FrontendApplicationBase37gotoMainScreenWipeTransitionNorthImplEv>:
{
 80029d0:	b500      	push	{lr}
 80029d2:	b083      	sub	sp, #12
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80029d4:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80029d8:	9300      	str	r3, [sp, #0]
 80029da:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80029de:	4b04      	ldr	r3, [pc, #16]	; (80029f0 <_ZN23FrontendApplicationBase37gotoMainScreenWipeTransitionNorthImplEv+0x20>)
 80029e0:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80029e4:	4803      	ldr	r0, [pc, #12]	; (80029f4 <_ZN23FrontendApplicationBase37gotoMainScreenWipeTransitionNorthImplEv+0x24>)
 80029e6:	f7ff ff09 	bl	80027fc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_14WipeTransitionILNS_9DirectionE0EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80029ea:	b003      	add	sp, #12
 80029ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80029f0:	20002ccc 	.word	0x20002ccc
 80029f4:	20002cc8 	.word	0x20002cc8

080029f8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80029f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80029fe:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002a00:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002a04:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a06:	6802      	ldr	r2, [r0, #0]
 8002a08:	6a12      	ldr	r2, [r2, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002a0a:	4688      	mov	r8, r1
 8002a0c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a0e:	4790      	blx	r2
 8002a10:	f5b0 6f07 	cmp.w	r0, #2160	; 0x870
 8002a14:	f0c0 8094 	bcc.w	8002b40 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002a18:	6860      	ldr	r0, [r4, #4]
 8002a1a:	6803      	ldr	r3, [r0, #0]
 8002a1c:	6a1b      	ldr	r3, [r3, #32]
 8002a1e:	4798      	blx	r3
 8002a20:	280f      	cmp	r0, #15
 8002a22:	f240 8099 	bls.w	8002b58 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002a26:	68e0      	ldr	r0, [r4, #12]
 8002a28:	6803      	ldr	r3, [r0, #0]
 8002a2a:	6a1b      	ldr	r3, [r3, #32]
 8002a2c:	4798      	blx	r3
 8002a2e:	280b      	cmp	r0, #11
 8002a30:	f240 808c 	bls.w	8002b4c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>
    Application::getInstance()->clearAllTimerWidgets();
 8002a34:	f012 fbee 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002a38:	f012 fc2e 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002a3c:	f8d9 0000 	ldr.w	r0, [r9]
 8002a40:	b140      	cbz	r0, 8002a54 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->tearDown();
 8002a42:	6803      	ldr	r3, [r0, #0]
 8002a44:	68db      	ldr	r3, [r3, #12]
 8002a46:	4798      	blx	r3
    if (*currentTrans)
 8002a48:	f8d9 0000 	ldr.w	r0, [r9]
 8002a4c:	b110      	cbz	r0, 8002a54 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->~Transition();
 8002a4e:	6803      	ldr	r3, [r0, #0]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	4798      	blx	r3
    if (*currentScreen)
 8002a54:	6838      	ldr	r0, [r7, #0]
 8002a56:	2800      	cmp	r0, #0
 8002a58:	d05f      	beq.n	8002b1a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
        (*currentScreen)->tearDownScreen();
 8002a5a:	6803      	ldr	r3, [r0, #0]
 8002a5c:	695b      	ldr	r3, [r3, #20]
 8002a5e:	4798      	blx	r3
    if (*currentPresenter)
 8002a60:	f8d8 0000 	ldr.w	r0, [r8]
 8002a64:	2800      	cmp	r0, #0
 8002a66:	d054      	beq.n	8002b12 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11a>
        (*currentPresenter)->deactivate();
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	685b      	ldr	r3, [r3, #4]
 8002a6c:	4798      	blx	r3
    if (*currentScreen)
 8002a6e:	6838      	ldr	r0, [r7, #0]
 8002a70:	b110      	cbz	r0, 8002a78 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 8002a72:	6803      	ldr	r3, [r0, #0]
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	4798      	blx	r3
    if (*currentPresenter)
 8002a78:	f8d8 0000 	ldr.w	r0, [r8]
 8002a7c:	b110      	cbz	r0, 8002a84 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 8002a7e:	6803      	ldr	r3, [r0, #0]
 8002a80:	689b      	ldr	r3, [r3, #8]
 8002a82:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a84:	68e0      	ldr	r0, [r4, #12]
 8002a86:	6803      	ldr	r3, [r0, #0]
 8002a88:	2100      	movs	r1, #0
 8002a8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a8c:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a8e:	68a3      	ldr	r3, [r4, #8]
 8002a90:	4934      	ldr	r1, [pc, #208]	; (8002b64 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8002a92:	681a      	ldr	r2, [r3, #0]
 8002a94:	f04f 0b00 	mov.w	fp, #0
 8002a98:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002a9a:	f880 b008 	strb.w	fp, [r0, #8]
 8002a9e:	e9c0 1b00 	strd	r1, fp, [r0]
 8002aa2:	4605      	mov	r5, r0
 8002aa4:	4659      	mov	r1, fp
 8002aa6:	4618      	mov	r0, r3
 8002aa8:	4790      	blx	r2
 8002aaa:	4606      	mov	r6, r0
 8002aac:	f005 fc5e 	bl	800836c <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ab0:	6860      	ldr	r0, [r4, #4]
 8002ab2:	6803      	ldr	r3, [r0, #0]
 8002ab4:	4659      	mov	r1, fp
 8002ab6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ab8:	4798      	blx	r3
 8002aba:	4631      	mov	r1, r6
 8002abc:	4604      	mov	r4, r0
 8002abe:	f005 fb51 	bl	8008164 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 8002ac2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002ac6:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002aca:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002acc:	b354      	cbz	r4, 8002b24 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
 8002ace:	1d22      	adds	r2, r4, #4
    newScreen->setupScreen();
 8002ad0:	6833      	ldr	r3, [r6, #0]
 8002ad2:	f8ca 2000 	str.w	r2, [sl]
 8002ad6:	68db      	ldr	r3, [r3, #12]
 8002ad8:	f8c4 a008 	str.w	sl, [r4, #8]
 8002adc:	4630      	mov	r0, r6
 8002ade:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002ae0:	4798      	blx	r3
    newPresenter->activate();
 8002ae2:	6823      	ldr	r3, [r4, #0]
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002aea:	4629      	mov	r1, r5
 8002aec:	4630      	mov	r0, r6
 8002aee:	f014 f85d 	bl	8016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002af2:	682b      	ldr	r3, [r5, #0]
 8002af4:	491c      	ldr	r1, [pc, #112]	; (8002b68 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8002af6:	691a      	ldr	r2, [r3, #16]
 8002af8:	428a      	cmp	r2, r1
 8002afa:	d115      	bne.n	8002b28 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>
    newTransition->invalidate();
 8002afc:	695b      	ldr	r3, [r3, #20]
 8002afe:	4a1b      	ldr	r2, [pc, #108]	; (8002b6c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002b00:	4293      	cmp	r3, r2
 8002b02:	d118      	bne.n	8002b36 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13e>
        Application::getInstance()->invalidate();
 8002b04:	f012 fb86 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002b08:	f012 ff64 	bl	80159d4 <_ZN8touchgfx11Application10invalidateEv>
}
 8002b0c:	4620      	mov	r0, r4
 8002b0e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
 8002b12:	6838      	ldr	r0, [r7, #0]
 8002b14:	2800      	cmp	r0, #0
 8002b16:	d1ac      	bne.n	8002a72 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 8002b18:	e7b4      	b.n	8002a84 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    if (*currentPresenter)
 8002b1a:	f8d8 0000 	ldr.w	r0, [r8]
 8002b1e:	2800      	cmp	r0, #0
 8002b20:	d1a2      	bne.n	8002a68 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
 8002b22:	e7af      	b.n	8002a84 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    model->bind(newPresenter);
 8002b24:	4622      	mov	r2, r4
 8002b26:	e7d3      	b.n	8002ad0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xd8>
    newTransition->init();
 8002b28:	4628      	mov	r0, r5
 8002b2a:	4790      	blx	r2
 8002b2c:	682b      	ldr	r3, [r5, #0]
    newTransition->invalidate();
 8002b2e:	4a0f      	ldr	r2, [pc, #60]	; (8002b6c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002b30:	695b      	ldr	r3, [r3, #20]
 8002b32:	4293      	cmp	r3, r2
 8002b34:	d0e6      	beq.n	8002b04 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 8002b36:	4628      	mov	r0, r5
 8002b38:	4798      	blx	r3
}
 8002b3a:	4620      	mov	r0, r4
 8002b3c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b40:	4b0b      	ldr	r3, [pc, #44]	; (8002b70 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x178>)
 8002b42:	4a0c      	ldr	r2, [pc, #48]	; (8002b74 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002b44:	480c      	ldr	r0, [pc, #48]	; (8002b78 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002b46:	21a3      	movs	r1, #163	; 0xa3
 8002b48:	f022 f978 	bl	8024e3c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b4c:	4b0b      	ldr	r3, [pc, #44]	; (8002b7c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 8002b4e:	4a09      	ldr	r2, [pc, #36]	; (8002b74 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002b50:	4809      	ldr	r0, [pc, #36]	; (8002b78 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002b52:	21a5      	movs	r1, #165	; 0xa5
 8002b54:	f022 f972 	bl	8024e3c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002b58:	4b09      	ldr	r3, [pc, #36]	; (8002b80 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x188>)
 8002b5a:	4a06      	ldr	r2, [pc, #24]	; (8002b74 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002b5c:	4806      	ldr	r0, [pc, #24]	; (8002b78 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002b5e:	21a4      	movs	r1, #164	; 0xa4
 8002b60:	f022 f96c 	bl	8024e3c <__assert_func>
 8002b64:	080275dc 	.word	0x080275dc
 8002b68:	080022a5 	.word	0x080022a5
 8002b6c:	080023b9 	.word	0x080023b9
 8002b70:	08026e30 	.word	0x08026e30
 8002b74:	08027264 	.word	0x08027264
 8002b78:	08026fc0 	.word	0x08026fc0
 8002b7c:	080270ac 	.word	0x080270ac
 8002b80:	08027008 	.word	0x08027008

08002b84 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 8002b84:	b500      	push	{lr}
 8002b86:	b083      	sub	sp, #12
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b88:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002b8c:	9300      	str	r3, [sp, #0]
 8002b8e:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002b92:	4b04      	ldr	r3, [pc, #16]	; (8002ba4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>)
 8002b94:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002b98:	4803      	ldr	r0, [pc, #12]	; (8002ba8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>)
 8002b9a:	f7ff ff2d 	bl	80029f8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002b9e:	b003      	add	sp, #12
 8002ba0:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ba4:	20002ccc 	.word	0x20002ccc
 8002ba8:	20002cc8 	.word	0x20002cc8

08002bac <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bb0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bb2:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bb4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002bb8:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bba:	6802      	ldr	r2, [r0, #0]
 8002bbc:	6a12      	ldr	r2, [r2, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bbe:	4699      	mov	r9, r3
 8002bc0:	4688      	mov	r8, r1
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bc2:	4790      	blx	r2
 8002bc4:	f640 4323 	movw	r3, #3107	; 0xc23
 8002bc8:	4298      	cmp	r0, r3
 8002bca:	f240 8094 	bls.w	8002cf6 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bce:	6860      	ldr	r0, [r4, #4]
 8002bd0:	6803      	ldr	r3, [r0, #0]
 8002bd2:	6a1b      	ldr	r3, [r3, #32]
 8002bd4:	4798      	blx	r3
 8002bd6:	280f      	cmp	r0, #15
 8002bd8:	f240 8099 	bls.w	8002d0e <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x162>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bdc:	68e0      	ldr	r0, [r4, #12]
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	6a1b      	ldr	r3, [r3, #32]
 8002be2:	4798      	blx	r3
 8002be4:	280b      	cmp	r0, #11
 8002be6:	f240 808c 	bls.w	8002d02 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x156>
    Application::getInstance()->clearAllTimerWidgets();
 8002bea:	f012 fb13 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002bee:	f012 fb53 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002bf2:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf6:	b140      	cbz	r0, 8002c0a <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5e>
        (*currentTrans)->tearDown();
 8002bf8:	6803      	ldr	r3, [r0, #0]
 8002bfa:	68db      	ldr	r3, [r3, #12]
 8002bfc:	4798      	blx	r3
    if (*currentTrans)
 8002bfe:	f8d9 0000 	ldr.w	r0, [r9]
 8002c02:	b110      	cbz	r0, 8002c0a <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5e>
        (*currentTrans)->~Transition();
 8002c04:	6803      	ldr	r3, [r0, #0]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	4798      	blx	r3
    if (*currentScreen)
 8002c0a:	6838      	ldr	r0, [r7, #0]
 8002c0c:	2800      	cmp	r0, #0
 8002c0e:	d05f      	beq.n	8002cd0 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
        (*currentScreen)->tearDownScreen();
 8002c10:	6803      	ldr	r3, [r0, #0]
 8002c12:	695b      	ldr	r3, [r3, #20]
 8002c14:	4798      	blx	r3
    if (*currentPresenter)
 8002c16:	f8d8 0000 	ldr.w	r0, [r8]
 8002c1a:	2800      	cmp	r0, #0
 8002c1c:	d054      	beq.n	8002cc8 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11c>
        (*currentPresenter)->deactivate();
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	685b      	ldr	r3, [r3, #4]
 8002c22:	4798      	blx	r3
    if (*currentScreen)
 8002c24:	6838      	ldr	r0, [r7, #0]
 8002c26:	b110      	cbz	r0, 8002c2e <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x82>
        (*currentScreen)->~Screen();
 8002c28:	6803      	ldr	r3, [r0, #0]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4798      	blx	r3
    if (*currentPresenter)
 8002c2e:	f8d8 0000 	ldr.w	r0, [r8]
 8002c32:	b110      	cbz	r0, 8002c3a <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
        (*currentPresenter)->~Presenter();
 8002c34:	6803      	ldr	r3, [r0, #0]
 8002c36:	689b      	ldr	r3, [r3, #8]
 8002c38:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c3a:	68e0      	ldr	r0, [r4, #12]
 8002c3c:	6803      	ldr	r3, [r0, #0]
 8002c3e:	2100      	movs	r1, #0
 8002c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c42:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c44:	68a3      	ldr	r3, [r4, #8]
 8002c46:	4935      	ldr	r1, [pc, #212]	; (8002d1c <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8002c48:	681a      	ldr	r2, [r3, #0]
        : screenContainer(0), done(false)
 8002c4a:	f04f 0b00 	mov.w	fp, #0
 8002c4e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002c50:	f880 b008 	strb.w	fp, [r0, #8]
 8002c54:	e9c0 1b00 	strd	r1, fp, [r0]
 8002c58:	4605      	mov	r5, r0
 8002c5a:	4659      	mov	r1, fp
 8002c5c:	4618      	mov	r0, r3
 8002c5e:	4790      	blx	r2
 8002c60:	4606      	mov	r6, r0
 8002c62:	f005 fce3 	bl	800862c <_ZN11SettingViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c66:	6860      	ldr	r0, [r4, #4]
 8002c68:	6803      	ldr	r3, [r0, #0]
 8002c6a:	4659      	mov	r1, fp
 8002c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c6e:	4798      	blx	r3
 8002c70:	4631      	mov	r1, r6
 8002c72:	4604      	mov	r4, r0
 8002c74:	f005 fc6e 	bl	8008554 <_ZN16SettingPresenterC1ER11SettingView>
    *currentTrans = newTransition;
 8002c78:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002c7c:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002c80:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002c82:	b354      	cbz	r4, 8002cda <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
 8002c84:	1d22      	adds	r2, r4, #4
    newScreen->setupScreen();
 8002c86:	6833      	ldr	r3, [r6, #0]
 8002c88:	f8ca 2000 	str.w	r2, [sl]
 8002c8c:	68db      	ldr	r3, [r3, #12]
 8002c8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8002c92:	4630      	mov	r0, r6
 8002c94:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002c96:	4798      	blx	r3
    newPresenter->activate();
 8002c98:	6823      	ldr	r3, [r4, #0]
 8002c9a:	4620      	mov	r0, r4
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ca0:	4629      	mov	r1, r5
 8002ca2:	4630      	mov	r0, r6
 8002ca4:	f013 ff82 	bl	8016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002ca8:	682b      	ldr	r3, [r5, #0]
 8002caa:	491d      	ldr	r1, [pc, #116]	; (8002d20 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002cac:	691a      	ldr	r2, [r3, #16]
 8002cae:	428a      	cmp	r2, r1
 8002cb0:	d115      	bne.n	8002cde <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x132>
    newTransition->invalidate();
 8002cb2:	695b      	ldr	r3, [r3, #20]
 8002cb4:	4a1b      	ldr	r2, [pc, #108]	; (8002d24 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x178>)
 8002cb6:	4293      	cmp	r3, r2
 8002cb8:	d118      	bne.n	8002cec <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>
        Application::getInstance()->invalidate();
 8002cba:	f012 faab 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002cbe:	f012 fe89 	bl	80159d4 <_ZN8touchgfx11Application10invalidateEv>
}
 8002cc2:	4620      	mov	r0, r4
 8002cc4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
 8002cc8:	6838      	ldr	r0, [r7, #0]
 8002cca:	2800      	cmp	r0, #0
 8002ccc:	d1ac      	bne.n	8002c28 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8002cce:	e7b4      	b.n	8002c3a <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
    if (*currentPresenter)
 8002cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8002cd4:	2800      	cmp	r0, #0
 8002cd6:	d1a2      	bne.n	8002c1e <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
 8002cd8:	e7af      	b.n	8002c3a <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
    model->bind(newPresenter);
 8002cda:	4622      	mov	r2, r4
 8002cdc:	e7d3      	b.n	8002c86 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xda>
    newTransition->init();
 8002cde:	4628      	mov	r0, r5
 8002ce0:	4790      	blx	r2
 8002ce2:	682b      	ldr	r3, [r5, #0]
    newTransition->invalidate();
 8002ce4:	4a0f      	ldr	r2, [pc, #60]	; (8002d24 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x178>)
 8002ce6:	695b      	ldr	r3, [r3, #20]
 8002ce8:	4293      	cmp	r3, r2
 8002cea:	d0e6      	beq.n	8002cba <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10e>
 8002cec:	4628      	mov	r0, r5
 8002cee:	4798      	blx	r3
}
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002cf6:	4b0c      	ldr	r3, [pc, #48]	; (8002d28 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002cf8:	4a0c      	ldr	r2, [pc, #48]	; (8002d2c <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002cfa:	480d      	ldr	r0, [pc, #52]	; (8002d30 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 8002cfc:	21a3      	movs	r1, #163	; 0xa3
 8002cfe:	f022 f89d 	bl	8024e3c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002d02:	4b0c      	ldr	r3, [pc, #48]	; (8002d34 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x188>)
 8002d04:	4a09      	ldr	r2, [pc, #36]	; (8002d2c <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002d06:	480a      	ldr	r0, [pc, #40]	; (8002d30 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 8002d08:	21a5      	movs	r1, #165	; 0xa5
 8002d0a:	f022 f897 	bl	8024e3c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d0e:	4b0a      	ldr	r3, [pc, #40]	; (8002d38 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x18c>)
 8002d10:	4a06      	ldr	r2, [pc, #24]	; (8002d2c <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002d12:	4807      	ldr	r0, [pc, #28]	; (8002d30 <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 8002d14:	21a4      	movs	r1, #164	; 0xa4
 8002d16:	f022 f891 	bl	8024e3c <__assert_func>
 8002d1a:	bf00      	nop
 8002d1c:	080275dc 	.word	0x080275dc
 8002d20:	080022a5 	.word	0x080022a5
 8002d24:	080023b9 	.word	0x080023b9
 8002d28:	08026e30 	.word	0x08026e30
 8002d2c:	08027364 	.word	0x08027364
 8002d30:	08026fc0 	.word	0x08026fc0
 8002d34:	080270ac 	.word	0x080270ac
 8002d38:	08027008 	.word	0x08027008

08002d3c <_ZN23FrontendApplicationBase33gotoSettingScreenNoTransitionImplEv>:
{
 8002d3c:	b500      	push	{lr}
 8002d3e:	b083      	sub	sp, #12
    touchgfx::makeTransition<SettingView, SettingPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002d40:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002d44:	9300      	str	r3, [sp, #0]
 8002d46:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002d4a:	4b04      	ldr	r3, [pc, #16]	; (8002d5c <_ZN23FrontendApplicationBase33gotoSettingScreenNoTransitionImplEv+0x20>)
 8002d4c:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002d50:	4803      	ldr	r0, [pc, #12]	; (8002d60 <_ZN23FrontendApplicationBase33gotoSettingScreenNoTransitionImplEv+0x24>)
 8002d52:	f7ff ff2b 	bl	8002bac <_ZN8touchgfx14makeTransitionI11SettingView16SettingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002d56:	b003      	add	sp, #12
 8002d58:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d5c:	20002ccc 	.word	0x20002ccc
 8002d60:	20002cc8 	.word	0x20002cc8

08002d64 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002d64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d6a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002d6c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002d70:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d72:	6802      	ldr	r2, [r0, #0]
 8002d74:	6a12      	ldr	r2, [r2, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002d76:	4688      	mov	r8, r1
 8002d78:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d7a:	4790      	blx	r2
 8002d7c:	f5b0 6f2b 	cmp.w	r0, #2736	; 0xab0
 8002d80:	f0c0 8094 	bcc.w	8002eac <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d84:	6860      	ldr	r0, [r4, #4]
 8002d86:	6803      	ldr	r3, [r0, #0]
 8002d88:	6a1b      	ldr	r3, [r3, #32]
 8002d8a:	4798      	blx	r3
 8002d8c:	280f      	cmp	r0, #15
 8002d8e:	f240 8099 	bls.w	8002ec4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002d92:	68e0      	ldr	r0, [r4, #12]
 8002d94:	6803      	ldr	r3, [r0, #0]
 8002d96:	6a1b      	ldr	r3, [r3, #32]
 8002d98:	4798      	blx	r3
 8002d9a:	280b      	cmp	r0, #11
 8002d9c:	f240 808c 	bls.w	8002eb8 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>
    Application::getInstance()->clearAllTimerWidgets();
 8002da0:	f012 fa38 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002da4:	f012 fa78 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002da8:	f8d9 0000 	ldr.w	r0, [r9]
 8002dac:	b140      	cbz	r0, 8002dc0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->tearDown();
 8002dae:	6803      	ldr	r3, [r0, #0]
 8002db0:	68db      	ldr	r3, [r3, #12]
 8002db2:	4798      	blx	r3
    if (*currentTrans)
 8002db4:	f8d9 0000 	ldr.w	r0, [r9]
 8002db8:	b110      	cbz	r0, 8002dc0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
        (*currentTrans)->~Transition();
 8002dba:	6803      	ldr	r3, [r0, #0]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	4798      	blx	r3
    if (*currentScreen)
 8002dc0:	6838      	ldr	r0, [r7, #0]
 8002dc2:	2800      	cmp	r0, #0
 8002dc4:	d05f      	beq.n	8002e86 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
        (*currentScreen)->tearDownScreen();
 8002dc6:	6803      	ldr	r3, [r0, #0]
 8002dc8:	695b      	ldr	r3, [r3, #20]
 8002dca:	4798      	blx	r3
    if (*currentPresenter)
 8002dcc:	f8d8 0000 	ldr.w	r0, [r8]
 8002dd0:	2800      	cmp	r0, #0
 8002dd2:	d054      	beq.n	8002e7e <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11a>
        (*currentPresenter)->deactivate();
 8002dd4:	6803      	ldr	r3, [r0, #0]
 8002dd6:	685b      	ldr	r3, [r3, #4]
 8002dd8:	4798      	blx	r3
    if (*currentScreen)
 8002dda:	6838      	ldr	r0, [r7, #0]
 8002ddc:	b110      	cbz	r0, 8002de4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 8002dde:	6803      	ldr	r3, [r0, #0]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	4798      	blx	r3
    if (*currentPresenter)
 8002de4:	f8d8 0000 	ldr.w	r0, [r8]
 8002de8:	b110      	cbz	r0, 8002df0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 8002dea:	6803      	ldr	r3, [r0, #0]
 8002dec:	689b      	ldr	r3, [r3, #8]
 8002dee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002df0:	68e0      	ldr	r0, [r4, #12]
 8002df2:	6803      	ldr	r3, [r0, #0]
 8002df4:	2100      	movs	r1, #0
 8002df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002df8:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002dfa:	68a3      	ldr	r3, [r4, #8]
 8002dfc:	4934      	ldr	r1, [pc, #208]	; (8002ed0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8002dfe:	681a      	ldr	r2, [r3, #0]
        : screenContainer(0), done(false)
 8002e00:	f04f 0b00 	mov.w	fp, #0
 8002e04:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002e06:	f880 b008 	strb.w	fp, [r0, #8]
 8002e0a:	e9c0 1b00 	strd	r1, fp, [r0]
 8002e0e:	4605      	mov	r5, r0
 8002e10:	4659      	mov	r1, fp
 8002e12:	4618      	mov	r0, r3
 8002e14:	4790      	blx	r2
 8002e16:	4606      	mov	r6, r0
 8002e18:	f005 fc48 	bl	80086ac <_ZN12TransferViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002e1c:	6860      	ldr	r0, [r4, #4]
 8002e1e:	6803      	ldr	r3, [r0, #0]
 8002e20:	4659      	mov	r1, fp
 8002e22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e24:	4798      	blx	r3
 8002e26:	4631      	mov	r1, r6
 8002e28:	4604      	mov	r4, r0
 8002e2a:	f005 fc23 	bl	8008674 <_ZN17TransferPresenterC1ER12TransferView>
    *currentTrans = newTransition;
 8002e2e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002e32:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002e36:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002e38:	b354      	cbz	r4, 8002e90 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
 8002e3a:	1d22      	adds	r2, r4, #4
    newScreen->setupScreen();
 8002e3c:	6833      	ldr	r3, [r6, #0]
 8002e3e:	f8ca 2000 	str.w	r2, [sl]
 8002e42:	68db      	ldr	r3, [r3, #12]
 8002e44:	f8c4 a008 	str.w	sl, [r4, #8]
 8002e48:	4630      	mov	r0, r6
 8002e4a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002e4c:	4798      	blx	r3
    newPresenter->activate();
 8002e4e:	6823      	ldr	r3, [r4, #0]
 8002e50:	4620      	mov	r0, r4
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002e56:	4629      	mov	r1, r5
 8002e58:	4630      	mov	r0, r6
 8002e5a:	f013 fea7 	bl	8016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002e5e:	682b      	ldr	r3, [r5, #0]
 8002e60:	491c      	ldr	r1, [pc, #112]	; (8002ed4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8002e62:	691a      	ldr	r2, [r3, #16]
 8002e64:	428a      	cmp	r2, r1
 8002e66:	d115      	bne.n	8002e94 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>
    newTransition->invalidate();
 8002e68:	695b      	ldr	r3, [r3, #20]
 8002e6a:	4a1b      	ldr	r2, [pc, #108]	; (8002ed8 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002e6c:	4293      	cmp	r3, r2
 8002e6e:	d118      	bne.n	8002ea2 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13e>
        Application::getInstance()->invalidate();
 8002e70:	f012 f9d0 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8002e74:	f012 fdae 	bl	80159d4 <_ZN8touchgfx11Application10invalidateEv>
}
 8002e78:	4620      	mov	r0, r4
 8002e7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
 8002e7e:	6838      	ldr	r0, [r7, #0]
 8002e80:	2800      	cmp	r0, #0
 8002e82:	d1ac      	bne.n	8002dde <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 8002e84:	e7b4      	b.n	8002df0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    if (*currentPresenter)
 8002e86:	f8d8 0000 	ldr.w	r0, [r8]
 8002e8a:	2800      	cmp	r0, #0
 8002e8c:	d1a2      	bne.n	8002dd4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
 8002e8e:	e7af      	b.n	8002df0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
    model->bind(newPresenter);
 8002e90:	4622      	mov	r2, r4
 8002e92:	e7d3      	b.n	8002e3c <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xd8>
    newTransition->init();
 8002e94:	4628      	mov	r0, r5
 8002e96:	4790      	blx	r2
 8002e98:	682b      	ldr	r3, [r5, #0]
    newTransition->invalidate();
 8002e9a:	4a0f      	ldr	r2, [pc, #60]	; (8002ed8 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8002e9c:	695b      	ldr	r3, [r3, #20]
 8002e9e:	4293      	cmp	r3, r2
 8002ea0:	d0e6      	beq.n	8002e70 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 8002ea2:	4628      	mov	r0, r5
 8002ea4:	4798      	blx	r3
}
 8002ea6:	4620      	mov	r0, r4
 8002ea8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002eac:	4b0b      	ldr	r3, [pc, #44]	; (8002edc <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x178>)
 8002eae:	4a0c      	ldr	r2, [pc, #48]	; (8002ee0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002eb0:	480c      	ldr	r0, [pc, #48]	; (8002ee4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002eb2:	21a3      	movs	r1, #163	; 0xa3
 8002eb4:	f021 ffc2 	bl	8024e3c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002eb8:	4b0b      	ldr	r3, [pc, #44]	; (8002ee8 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x184>)
 8002eba:	4a09      	ldr	r2, [pc, #36]	; (8002ee0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002ebc:	4809      	ldr	r0, [pc, #36]	; (8002ee4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002ebe:	21a5      	movs	r1, #165	; 0xa5
 8002ec0:	f021 ffbc 	bl	8024e3c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ec4:	4b09      	ldr	r3, [pc, #36]	; (8002eec <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x188>)
 8002ec6:	4a06      	ldr	r2, [pc, #24]	; (8002ee0 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x17c>)
 8002ec8:	4806      	ldr	r0, [pc, #24]	; (8002ee4 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>)
 8002eca:	21a4      	movs	r1, #164	; 0xa4
 8002ecc:	f021 ffb6 	bl	8024e3c <__assert_func>
 8002ed0:	080275dc 	.word	0x080275dc
 8002ed4:	080022a5 	.word	0x080022a5
 8002ed8:	080023b9 	.word	0x080023b9
 8002edc:	08026e30 	.word	0x08026e30
 8002ee0:	08027468 	.word	0x08027468
 8002ee4:	08026fc0 	.word	0x08026fc0
 8002ee8:	080270ac 	.word	0x080270ac
 8002eec:	08027008 	.word	0x08027008

08002ef0 <_ZN23FrontendApplicationBase34gotoTransferScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoTransferScreenNoTransitionImpl()
{
 8002ef0:	b500      	push	{lr}
 8002ef2:	b083      	sub	sp, #12
    touchgfx::makeTransition<TransferView, TransferPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ef4:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002ef8:	9300      	str	r3, [sp, #0]
 8002efa:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002efe:	4b04      	ldr	r3, [pc, #16]	; (8002f10 <_ZN23FrontendApplicationBase34gotoTransferScreenNoTransitionImplEv+0x20>)
 8002f00:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002f04:	4803      	ldr	r0, [pc, #12]	; (8002f14 <_ZN23FrontendApplicationBase34gotoTransferScreenNoTransitionImplEv+0x24>)
 8002f06:	f7ff ff2d 	bl	8002d64 <_ZN8touchgfx14makeTransitionI12TransferView17TransferPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002f0a:	b003      	add	sp, #12
 8002f0c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f10:	20002ccc 	.word	0x20002ccc
 8002f14:	20002cc8 	.word	0x20002cc8

08002f18 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002f18:	6a00      	ldr	r0, [r0, #32]
 8002f1a:	4770      	bx	lr

08002f1c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002f1c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002f1e:	4770      	bx	lr

08002f20 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002f20:	4770      	bx	lr
 8002f22:	bf00      	nop

08002f24 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002f24:	888b      	ldrh	r3, [r1, #4]
 8002f26:	6980      	ldr	r0, [r0, #24]
 8002f28:	680a      	ldr	r2, [r1, #0]
 8002f2a:	0adb      	lsrs	r3, r3, #11
 8002f2c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002f30:	4410      	add	r0, r2
 8002f32:	4770      	bx	lr

08002f34 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
 8002f34:	b1da      	cbz	r2, 8002f6e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
 8002f36:	b470      	push	{r4, r5, r6}
    if (!glyph || glyph->kerningTableSize == 0)
 8002f38:	7b14      	ldrb	r4, [r2, #12]
 8002f3a:	b1ac      	cbz	r4, 8002f68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x34>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002f3c:	7b55      	ldrb	r5, [r2, #13]
 8002f3e:	7ad6      	ldrb	r6, [r2, #11]
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002f40:	69c3      	ldr	r3, [r0, #28]
 8002f42:	0228      	lsls	r0, r5, #8
 8002f44:	1e62      	subs	r2, r4, #1
 8002f46:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8002f4a:	b292      	uxth	r2, r2
 8002f4c:	4330      	orrs	r0, r6
 8002f4e:	3201      	adds	r2, #1
 8002f50:	eb03 0380 	add.w	r3, r3, r0, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002f54:	eb03 0282 	add.w	r2, r3, r2, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002f58:	8818      	ldrh	r0, [r3, #0]
 8002f5a:	4288      	cmp	r0, r1
 8002f5c:	d009      	beq.n	8002f72 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002f5e:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
 8002f62:	d801      	bhi.n	8002f68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x34>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002f64:	4293      	cmp	r3, r2
 8002f66:	d1f7      	bne.n	8002f58 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x24>
        return 0;
 8002f68:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
 8002f6a:	bc70      	pop	{r4, r5, r6}
 8002f6c:	4770      	bx	lr
        return 0;
 8002f6e:	4610      	mov	r0, r2
}
 8002f70:	4770      	bx	lr
            return kerndata->distance;
 8002f72:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
 8002f76:	bc70      	pop	{r4, r5, r6}
 8002f78:	4770      	bx	lr
 8002f7a:	bf00      	nop

08002f7c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002f7c:	b510      	push	{r4, lr}
 8002f7e:	2128      	movs	r1, #40	; 0x28
 8002f80:	4604      	mov	r4, r0
 8002f82:	f021 f93c 	bl	80241fe <_ZdlPvj>
 8002f86:	4620      	mov	r0, r4
 8002f88:	bd10      	pop	{r4, pc}
 8002f8a:	bf00      	nop

08002f8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f90:	b088      	sub	sp, #32
 8002f92:	4680      	mov	r8, r0
 8002f94:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002f98:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8002f9c:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8002fa0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
      arabicTable(formsTable)
 8002fa4:	9500      	str	r5, [sp, #0]
 8002fa6:	9401      	str	r4, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002fa8:	f8bd 5054 	ldrh.w	r5, [sp, #84]	; 0x54
 8002fac:	f8bd 4058 	ldrh.w	r4, [sp, #88]	; 0x58
 8002fb0:	f89d c040 	ldrb.w	ip, [sp, #64]	; 0x40
      arabicTable(formsTable)
 8002fb4:	f8cd c008 	str.w	ip, [sp, #8]
 8002fb8:	e9cd 7603 	strd	r7, r6, [sp, #12]
 8002fbc:	e9cd 5405 	strd	r5, r4, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002fc0:	e9dd 7613 	ldrd	r7, r6, [sp, #76]	; 0x4c
 8002fc4:	e9dd 5417 	ldrd	r5, r4, [sp, #92]	; 0x5c
      arabicTable(formsTable)
 8002fc8:	f013 f9a4 	bl	8016314 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002fcc:	4b05      	ldr	r3, [pc, #20]	; (8002fe4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x58>)
 8002fce:	f8c8 3000 	str.w	r3, [r8]
}
 8002fd2:	4640      	mov	r0, r8
      arabicTable(formsTable)
 8002fd4:	e9c8 7606 	strd	r7, r6, [r8, #24]
 8002fd8:	e9c8 5408 	strd	r5, r4, [r8, #32]
}
 8002fdc:	b008      	add	sp, #32
 8002fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002fe2:	bf00      	nop
 8002fe4:	0802768c 	.word	0x0802768c

08002fe8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002fe8:	4770      	bx	lr
 8002fea:	bf00      	nop

08002fec <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002fec:	4770      	bx	lr
 8002fee:	bf00      	nop

08002ff0 <_ZN12LogoViewBaseD1Ev>:

class LogoViewBase : public touchgfx::View<LogoPresenter>
{
public:
    LogoViewBase();
    virtual ~LogoViewBase() {}
 8002ff0:	4770      	bx	lr
 8002ff2:	bf00      	nop

08002ff4 <_ZN12LogoViewBase11setupScreenEv>:
}

void LogoViewBase::setupScreen()
{

}
 8002ff4:	4770      	bx	lr
 8002ff6:	bf00      	nop

08002ff8 <_ZN12LogoViewBase15afterTransitionEv>:
void LogoViewBase::afterTransition()
{
    //wait
    //When screen transition ends delay
    //Delay for 3000 ms (180 Ticks)
    waitCounter = WAIT_DURATION;
 8002ff8:	23b4      	movs	r3, #180	; 0xb4
 8002ffa:	f8a0 3128 	strh.w	r3, [r0, #296]	; 0x128
}
 8002ffe:	4770      	bx	lr

08003000 <_ZN12LogoViewBaseD0Ev>:
 8003000:	b510      	push	{r4, lr}
 8003002:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8003006:	4604      	mov	r4, r0
 8003008:	f021 f8f9 	bl	80241fe <_ZdlPvj>
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}

08003010 <_ZN12LogoViewBase15handleTickEventEv>:
{
 8003010:	b508      	push	{r3, lr}
    if(waitCounter > 0)
 8003012:	f8b0 3128 	ldrh.w	r3, [r0, #296]	; 0x128
 8003016:	b123      	cbz	r3, 8003022 <_ZN12LogoViewBase15handleTickEventEv+0x12>
        waitCounter--;
 8003018:	3b01      	subs	r3, #1
 800301a:	b29b      	uxth	r3, r3
 800301c:	f8a0 3128 	strh.w	r3, [r0, #296]	; 0x128
        if(waitCounter == 0)
 8003020:	b103      	cbz	r3, 8003024 <_ZN12LogoViewBase15handleTickEventEv+0x14>
}
 8003022:	bd08      	pop	{r3, pc}
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003024:	f012 f8f6 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8003028:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            application().gotoMainScreenWipeTransitionNorth();
 800302c:	f7ff bad4 	b.w	80025d8 <_ZN23FrontendApplicationBase33gotoMainScreenWipeTransitionNorthEv>

08003030 <_ZN12LogoViewBaseC1Ev>:
LogoViewBase::LogoViewBase() :
 8003030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003034:	4604      	mov	r4, r0
 8003036:	b086      	sub	sp, #24
        : presenter(0)
 8003038:	f013 fc0c 	bl	8016854 <_ZN8touchgfx6ScreenC1Ev>
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800303c:	485f      	ldr	r0, [pc, #380]	; (80031bc <_ZN12LogoViewBaseC1Ev+0x18c>)
    waitCounter(0)
 800303e:	4b60      	ldr	r3, [pc, #384]	; (80031c0 <_ZN12LogoViewBaseC1Ev+0x190>)
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003040:	4960      	ldr	r1, [pc, #384]	; (80031c4 <_ZN12LogoViewBaseC1Ev+0x194>)
 8003042:	6023      	str	r3, [r4, #0]
 8003044:	2500      	movs	r5, #0
          visible(true)
 8003046:	f44f 7380 	mov.w	r3, #256	; 0x100
 800304a:	6420      	str	r0, [r4, #64]	; 0x40
 800304c:	66e0      	str	r0, [r4, #108]	; 0x6c
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800304e:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
        : Widget(), alpha(255), color(0)
 8003052:	20ff      	movs	r0, #255	; 0xff
        color = newColor;
 8003054:	f8df e17c 	ldr.w	lr, [pc, #380]	; 80031d4 <_ZN12LogoViewBaseC1Ev+0x1a4>
        rect.x = x;
 8003058:	f8df c17c 	ldr.w	ip, [pc, #380]	; 80031d8 <_ZN12LogoViewBaseC1Ev+0x1a8>
        : typedTextId(id)
 800305c:	4f5a      	ldr	r7, [pc, #360]	; (80031c8 <_ZN12LogoViewBaseC1Ev+0x198>)
        rect.width = width;
 800305e:	4a5b      	ldr	r2, [pc, #364]	; (80031cc <_ZN12LogoViewBaseC1Ev+0x19c>)
     *
     * @param  newColor The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype newColor)
    {
        color = newColor;
 8003060:	f8df a178 	ldr.w	sl, [pc, #376]	; 80031dc <_ZN12LogoViewBaseC1Ev+0x1ac>
 8003064:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003066:	f104 0998 	add.w	r9, r4, #152	; 0x98
 800306a:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          visible(true)
 800306e:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8003072:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8003076:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 800307a:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800307e:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 8003082:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 8003086:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 800308a:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 800308e:	f8a4 5044 	strh.w	r5, [r4, #68]	; 0x44
 8003092:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
 8003096:	f8a4 5070 	strh.w	r5, [r4, #112]	; 0x70
 800309a:	f8a4 5072 	strh.w	r5, [r4, #114]	; 0x72
 800309e:	f8c4 50b8 	str.w	r5, [r4, #184]	; 0xb8
 80030a2:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80030a6:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
 80030aa:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
        : Widget(), alpha(255), color(0)
 80030ae:	f884 0066 	strb.w	r0, [r4, #102]	; 0x66
 80030b2:	f884 0092 	strb.w	r0, [r4, #146]	; 0x92
 80030b6:	f64f 78ff 	movw	r8, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030ba:	f8c4 1098 	str.w	r1, [r4, #152]	; 0x98
 80030be:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
 80030c2:	f8a4 3104 	strh.w	r3, [r4, #260]	; 0x104
        color = newColor;
 80030c6:	66a6      	str	r6, [r4, #104]	; 0x68
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030c8:	f04f 33ff 	mov.w	r3, #4294967295
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
        boundingArea = calculateBoundingArea();
 80030cc:	466e      	mov	r6, sp
 80030ce:	f8c4 e094 	str.w	lr, [r4, #148]	; 0x94
        rect.x = x;
 80030d2:	f8c4 c09c 	str.w	ip, [r4, #156]	; 0x9c
        : x(0), y(0), width(0), height(0)
 80030d6:	e9c4 5539 	strd	r5, r5, [r4, #228]	; 0xe4
 80030da:	e9c4 553b 	strd	r5, r5, [r4, #236]	; 0xec
          visible(true)
 80030de:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 80030e2:	e9c4 553f 	strd	r5, r5, [r4, #252]	; 0xfc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030e6:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030ea:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80030ee:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030f2:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
        : color(col)
 80030f6:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 80030fa:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030fe:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
              text(0)
 8003102:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8003106:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
 800310a:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
        boundingArea = calculateBoundingArea();
 800310e:	4649      	mov	r1, r9
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003110:	f8c4 00cc 	str.w	r0, [r4, #204]	; 0xcc
 8003114:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8003118:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 800311c:	f8a4 310c 	strh.w	r3, [r4, #268]	; 0x10c
 8003120:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        rect.width = width;
 8003124:	64a2      	str	r2, [r4, #72]	; 0x48
 8003126:	6762      	str	r2, [r4, #116]	; 0x74
        boundingArea = calculateBoundingArea();
 8003128:	4630      	mov	r0, r6
 800312a:	f8c4 70c0 	str.w	r7, [r4, #192]	; 0xc0
 800312e:	f8c4 7108 	str.w	r7, [r4, #264]	; 0x108
        color = newColor;
 8003132:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003136:	f00f fd95 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800313a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800313e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003142:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003146:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SKY));
 8003148:	4648      	mov	r0, r9
 800314a:	a904      	add	r1, sp, #16
    waitCounter(0)
 800314c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8003150:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003154:	9704      	str	r7, [sp, #16]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SKY));
 8003156:	f010 f807 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.x = x;
 800315a:	4b1d      	ldr	r3, [pc, #116]	; (80031d0 <_ZN12LogoViewBaseC1Ev+0x1a0>)
        linespace = space;
 800315c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
 8003160:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
        boundingArea = calculateBoundingArea();
 8003164:	4641      	mov	r1, r8
 8003166:	4630      	mov	r0, r6
        color = newColor;
 8003168:	f8c4 a110 	str.w	sl, [r4, #272]	; 0x110
        boundingArea = calculateBoundingArea();
 800316c:	f00f fd7a 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003170:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003174:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003178:	e883 0007 	stmia.w	r3, {r0, r1, r2}
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800317c:	1d25      	adds	r5, r4, #4
 800317e:	2342      	movs	r3, #66	; 0x42
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZM3U));
 8003180:	a904      	add	r1, sp, #16
 8003182:	4640      	mov	r0, r8
 8003184:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003188:	9704      	str	r7, [sp, #16]
 800318a:	f00f ffed 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800318e:	4628      	mov	r0, r5
 8003190:	f104 0140 	add.w	r1, r4, #64	; 0x40
 8003194:	f00d f91a 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003198:	4628      	mov	r0, r5
 800319a:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 800319e:	f00d f915 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031a2:	4649      	mov	r1, r9
 80031a4:	4628      	mov	r0, r5
 80031a6:	f00d f911 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031aa:	4628      	mov	r0, r5
 80031ac:	4641      	mov	r1, r8
 80031ae:	f00d f90d 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80031b2:	4620      	mov	r0, r4
 80031b4:	b006      	add	sp, #24
 80031b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80031ba:	bf00      	nop
 80031bc:	080287f8 	.word	0x080287f8
 80031c0:	080276e4 	.word	0x080276e4
 80031c4:	08028768 	.word	0x08028768
 80031c8:	08026e28 	.word	0x08026e28
 80031cc:	00f00140 	.word	0x00f00140
 80031d0:	00a20069 	.word	0x00a20069
 80031d4:	fff7f7f7 	.word	0xfff7f7f7
 80031d8:	004f004e 	.word	0x004f004e
 80031dc:	ff7a7a7a 	.word	0xff7a7a7a

080031e0 <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
 80031e0:	4770      	bx	lr
 80031e2:	bf00      	nop

080031e4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
     * @return true if button is pressed, false otherwise.
     */
    virtual bool getPressedState() const
    {
        return pressed;
    }
 80031e4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80031e8:	4770      	bx	lr
 80031ea:	bf00      	nop

080031ec <_ZN12MainViewBaseD1Ev>:

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
 80031ec:	4770      	bx	lr
 80031ee:	bf00      	nop

080031f0 <_ZN12MainViewBase11b0_callbackEv>:
     * Virtual Action Handlers
     */
    virtual void b0_callback()
    {
        // Override and implement this function in Main
    }
 80031f0:	4770      	bx	lr
 80031f2:	bf00      	nop

080031f4 <_ZN12MainViewBase11b1_callbackEv>:

    virtual void b1_callback()
    {
        // Override and implement this function in Main
    }
 80031f4:	4770      	bx	lr
 80031f6:	bf00      	nop

080031f8 <_ZN12MainViewBase11b2_callbackEv>:

    virtual void b2_callback()
    {
        // Override and implement this function in Main
    }
 80031f8:	4770      	bx	lr
 80031fa:	bf00      	nop

080031fc <_ZN12MainViewBase11b3_callbackEv>:

    virtual void b3_callback()
    {
        // Override and implement this function in Main
    }
 80031fc:	4770      	bx	lr
 80031fe:	bf00      	nop

08003200 <_ZN12MainViewBase11b4_callbackEv>:

    virtual void b4_callback()
    {
        // Override and implement this function in Main
    }
 8003200:	4770      	bx	lr
 8003202:	bf00      	nop

08003204 <_ZN12MainViewBase11b5_callbackEv>:

    virtual void b5_callback()
    {
        // Override and implement this function in Main
    }
 8003204:	4770      	bx	lr
 8003206:	bf00      	nop

08003208 <_ZN12MainViewBase11b6_callbackEv>:

    virtual void b6_callback()
    {
        // Override and implement this function in Main
    }
 8003208:	4770      	bx	lr
 800320a:	bf00      	nop

0800320c <_ZN12MainViewBase11b8_callbackEv>:

    virtual void b8_callback()
    {
        // Override and implement this function in Main
    }
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop

08003210 <_ZN12MainViewBase11b9_callbackEv>:

    virtual void b9_callback()
    {
        // Override and implement this function in Main
    }
 8003210:	4770      	bx	lr
 8003212:	bf00      	nop

08003214 <_ZN12MainViewBase11ba_callbackEv>:

    virtual void ba_callback()
    {
        // Override and implement this function in Main
    }
 8003214:	4770      	bx	lr
 8003216:	bf00      	nop

08003218 <_ZN12MainViewBase11bb_callbackEv>:

    virtual void bb_callback()
    {
        // Override and implement this function in Main
    }
 8003218:	4770      	bx	lr
 800321a:	bf00      	nop

0800321c <_ZN12MainViewBase11bc_callbackEv>:

    virtual void bc_callback()
    {
        // Override and implement this function in Main
    }
 800321c:	4770      	bx	lr
 800321e:	bf00      	nop

08003220 <_ZN12MainViewBase11bd_callbackEv>:

    virtual void bd_callback()
    {
        // Override and implement this function in Main
    }
 8003220:	4770      	bx	lr
 8003222:	bf00      	nop

08003224 <_ZN12MainViewBase11be_callbackEv>:

    virtual void be_callback()
    {
        // Override and implement this function in Main
    }
 8003224:	4770      	bx	lr
 8003226:	bf00      	nop

08003228 <_ZN12MainViewBase11bf_callbackEv>:

    virtual void bf_callback()
    {
        // Override and implement this function in Main
    }
 8003228:	4770      	bx	lr
 800322a:	bf00      	nop

0800322c <_ZN12MainViewBase11b7_callbackEv>:

    virtual void b7_callback()
    {
        // Override and implement this function in Main
    }
 800322c:	4770      	bx	lr
 800322e:	bf00      	nop

08003230 <_ZN12MainViewBase12ret_callbackEv>:

    virtual void ret_callback()
    {
        // Override and implement this function in Main
    }
 8003230:	4770      	bx	lr
 8003232:	bf00      	nop

08003234 <_ZN12MainViewBase12run_callbackEv>:

    virtual void run_callback()
    {
        // Override and implement this function in Main
    }
 8003234:	4770      	bx	lr
 8003236:	bf00      	nop

08003238 <_ZN12MainViewBase14store_callbackEv>:

    virtual void store_callback()
    {
        // Override and implement this function in Main
    }
 8003238:	4770      	bx	lr
 800323a:	bf00      	nop

0800323c <_ZN12MainViewBase13load_callbackEv>:

    virtual void load_callback()
    {
        // Override and implement this function in Main
    }
 800323c:	4770      	bx	lr
 800323e:	bf00      	nop

08003240 <_ZN12MainViewBase14reset_callbackEv>:

    virtual void reset_callback()
    {
        // Override and implement this function in Main
    }
 8003240:	4770      	bx	lr
 8003242:	bf00      	nop

08003244 <_ZN12MainViewBase13adrs_callbackEv>:

    virtual void adrs_callback()
    {
        // Override and implement this function in Main
    }
 8003244:	4770      	bx	lr
 8003246:	bf00      	nop

08003248 <_ZN12MainViewBase18read_incr_callbackEv>:

    virtual void read_incr_callback()
    {
        // Override and implement this function in Main
    }
 8003248:	4770      	bx	lr
 800324a:	bf00      	nop

0800324c <_ZN12MainViewBase18read_decr_callbackEv>:

    virtual void read_decr_callback()
    {
        // Override and implement this function in Main
    }
 800324c:	4770      	bx	lr
 800324e:	bf00      	nop

08003250 <_ZN12MainViewBase19write_incr_callbackEv>:

    virtual void write_incr_callback()
    {
        // Override and implement this function in Main
    }
 8003250:	4770      	bx	lr
 8003252:	bf00      	nop

08003254 <_ZN12MainViewBase6updateEv>:

    virtual void update()
    {
        // Override and implement this function in Main
    }
 8003254:	4770      	bx	lr
 8003256:	bf00      	nop

08003258 <_ZN12MainViewBase26file_upload_check_callbackEv>:

    virtual void file_upload_check_callback()
    {
        // Override and implement this function in Main
    }
 8003258:	4770      	bx	lr
 800325a:	bf00      	nop

0800325c <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 800325c:	4770      	bx	lr
 800325e:	bf00      	nop

08003260 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003260:	4770      	bx	lr
 8003262:	bf00      	nop

08003264 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 8003264:	4770      	bx	lr
 8003266:	bf00      	nop

08003268 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003268:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800326a:	68c3      	ldr	r3, [r0, #12]
 800326c:	07da      	lsls	r2, r3, #31
 800326e:	d405      	bmi.n	800327c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>
 8003270:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 8003274:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 8003278:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800327a:	4710      	bx	r2
 800327c:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 8003280:	105d      	asrs	r5, r3, #1
 8003282:	5960      	ldr	r0, [r4, r5]
 8003284:	5882      	ldr	r2, [r0, r2]
 8003286:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 800328a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800328c:	4710      	bx	r2
 800328e:	bf00      	nop

08003290 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003290:	6843      	ldr	r3, [r0, #4]
 8003292:	b13b      	cbz	r3, 80032a4 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003294:	6883      	ldr	r3, [r0, #8]
 8003296:	b10b      	cbz	r3, 800329c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 8003298:	2001      	movs	r0, #1
    }
 800329a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
 800329c:	68c0      	ldr	r0, [r0, #12]
 800329e:	f000 0001 	and.w	r0, r0, #1
 80032a2:	4770      	bx	lr
 80032a4:	4618      	mov	r0, r3
 80032a6:	4770      	bx	lr

080032a8 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEED0Ev>:
 80032a8:	b510      	push	{r4, lr}
 80032aa:	214c      	movs	r1, #76	; 0x4c
 80032ac:	4604      	mov	r4, r0
 80032ae:	f020 ffa6 	bl	80241fe <_ZdlPvj>
 80032b2:	4620      	mov	r0, r4
 80032b4:	bd10      	pop	{r4, pc}
 80032b6:	bf00      	nop

080032b8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80032b8:	b510      	push	{r4, lr}
 80032ba:	2110      	movs	r1, #16
 80032bc:	4604      	mov	r4, r0
 80032be:	f020 ff9e 	bl	80241fe <_ZdlPvj>
 80032c2:	4620      	mov	r0, r4
 80032c4:	bd10      	pop	{r4, pc}
 80032c6:	bf00      	nop

080032c8 <_ZN12MainViewBaseD0Ev>:
    virtual ~MainViewBase() {}
 80032c8:	b510      	push	{r4, lr}
 80032ca:	f44f 6107 	mov.w	r1, #2160	; 0x870
 80032ce:	4604      	mov	r4, r0
 80032d0:	f020 ff95 	bl	80241fe <_ZdlPvj>
 80032d4:	4620      	mov	r0, r4
 80032d6:	bd10      	pop	{r4, pc}

080032d8 <_ZNK8touchgfx6Button17invalidateContentEv>:
        return (pressed ? down : up);
    }

    virtual void invalidateContent() const
    {
        if (alpha > 0)
 80032d8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80032dc:	b12a      	cbz	r2, 80032ea <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
        if (visible)
 80032de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032e2:	b112      	cbz	r2, 80032ea <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
            invalidate();
 80032e4:	6803      	ldr	r3, [r0, #0]
 80032e6:	695b      	ldr	r3, [r3, #20]
 80032e8:	4718      	bx	r3
        {
            Widget::invalidateContent();
        }
    }
 80032ea:	4770      	bx	lr

080032ec <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80032ec:	b570      	push	{r4, r5, r6, lr}
 80032ee:	4604      	mov	r4, r0
 80032f0:	460d      	mov	r5, r1
    {
        T::handleClickEvent(event);
 80032f2:	f00e fcb1 	bl	8011c58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 80032f6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80032f8:	b158      	cbz	r0, 8003312 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE+0x26>
 80032fa:	6803      	ldr	r3, [r0, #0]
 80032fc:	68db      	ldr	r3, [r3, #12]
 80032fe:	4798      	blx	r3
 8003300:	b138      	cbz	r0, 8003312 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE+0x26>
        {
            clickAction->execute(*this, event);
 8003302:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	462a      	mov	r2, r5
 8003308:	4621      	mov	r1, r4
 800330a:	689b      	ldr	r3, [r3, #8]
        }
    }
 800330c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 8003310:	4718      	bx	r3
    }
 8003312:	bd70      	pop	{r4, r5, r6, pc}

08003314 <_ZN12MainViewBase14handleKeyEventEh>:
}

//Handles when a key is pressed
void MainViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
 8003314:	b101      	cbz	r1, 8003318 <_ZN12MainViewBase14handleKeyEventEh+0x4>
 8003316:	4770      	bx	lr
{
 8003318:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800331a:	f011 ff7b 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
        //transfer
        //When hardware button 0 clicked change screen to Transfer
        //Go to Transfer with no screen transition
        application().gotoTransferScreenNoTransition();
    }
}
 800331e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoTransferScreenNoTransition();
 8003322:	f7ff b983 	b.w	800262c <_ZN23FrontendApplicationBase30gotoTransferScreenNoTransitionEv>
 8003326:	bf00      	nop

08003328 <_ZN12MainViewBase15handleTickEventEv>:
    frameCountupdateInterval++;
 8003328:	f8d0 3858 	ldr.w	r3, [r0, #2136]	; 0x858
 800332c:	3301      	adds	r3, #1
    if(frameCountupdateInterval == TICK_UPDATE_INTERVAL)
 800332e:	2b03      	cmp	r3, #3
{
 8003330:	b510      	push	{r4, lr}
 8003332:	4604      	mov	r4, r0
    frameCountupdateInterval++;
 8003334:	f8c0 3858 	str.w	r3, [r0, #2136]	; 0x858
    if(frameCountupdateInterval == TICK_UPDATE_INTERVAL)
 8003338:	d011      	beq.n	800335e <_ZN12MainViewBase15handleTickEventEv+0x36>
    frameCountfile_uploadInterval++;
 800333a:	f8d4 385c 	ldr.w	r3, [r4, #2140]	; 0x85c
 800333e:	3301      	adds	r3, #1
    if(frameCountfile_uploadInterval == TICK_FILE_UPLOAD_INTERVAL)
 8003340:	2b3c      	cmp	r3, #60	; 0x3c
    frameCountfile_uploadInterval++;
 8003342:	f8c4 385c 	str.w	r3, [r4, #2140]	; 0x85c
    if(frameCountfile_uploadInterval == TICK_FILE_UPLOAD_INTERVAL)
 8003346:	d000      	beq.n	800334a <_ZN12MainViewBase15handleTickEventEv+0x22>
}
 8003348:	bd10      	pop	{r4, pc}
        file_upload_check_callback();
 800334a:	6823      	ldr	r3, [r4, #0]
 800334c:	4a0b      	ldr	r2, [pc, #44]	; (800337c <_ZN12MainViewBase15handleTickEventEv+0x54>)
 800334e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003352:	4293      	cmp	r3, r2
 8003354:	d10d      	bne.n	8003372 <_ZN12MainViewBase15handleTickEventEv+0x4a>
        frameCountfile_uploadInterval = 0;
 8003356:	2300      	movs	r3, #0
 8003358:	f8c4 385c 	str.w	r3, [r4, #2140]	; 0x85c
}
 800335c:	bd10      	pop	{r4, pc}
        update();
 800335e:	6803      	ldr	r3, [r0, #0]
 8003360:	4a07      	ldr	r2, [pc, #28]	; (8003380 <_ZN12MainViewBase15handleTickEventEv+0x58>)
 8003362:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003366:	4293      	cmp	r3, r2
 8003368:	d106      	bne.n	8003378 <_ZN12MainViewBase15handleTickEventEv+0x50>
        frameCountupdateInterval = 0;
 800336a:	2300      	movs	r3, #0
 800336c:	f8c4 3858 	str.w	r3, [r4, #2136]	; 0x858
 8003370:	e7e3      	b.n	800333a <_ZN12MainViewBase15handleTickEventEv+0x12>
        file_upload_check_callback();
 8003372:	4620      	mov	r0, r4
 8003374:	4798      	blx	r3
 8003376:	e7ee      	b.n	8003356 <_ZN12MainViewBase15handleTickEventEv+0x2e>
        update();
 8003378:	4798      	blx	r3
 800337a:	e7f6      	b.n	800336a <_ZN12MainViewBase15handleTickEventEv+0x42>
 800337c:	08003259 	.word	0x08003259
 8003380:	08003255 	.word	0x08003255

08003384 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bf)
 8003384:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8003388:	4291      	cmp	r1, r2
{
 800338a:	4603      	mov	r3, r0
    if (&src == &bf)
 800338c:	f000 8086 	beq.w	800349c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x118>
        //bf
        //When bf clicked call virtual function
        //Call bf_callback
        bf_callback();
    }
    else if (&src == &be)
 8003390:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8003394:	4291      	cmp	r1, r2
 8003396:	d07b      	beq.n	8003490 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x10c>
        //be
        //When be clicked call virtual function
        //Call be_callback
        be_callback();
    }
    else if (&src == &bd)
 8003398:	f500 7294 	add.w	r2, r0, #296	; 0x128
 800339c:	4291      	cmp	r1, r2
 800339e:	f000 8089 	beq.w	80034b4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x130>
        //bd
        //When bd clicked call virtual function
        //Call bd_callback
        bd_callback();
    }
    else if (&src == &bc)
 80033a2:	f500 72b8 	add.w	r2, r0, #368	; 0x170
 80033a6:	4291      	cmp	r1, r2
 80033a8:	f000 808a 	beq.w	80034c0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x13c>
        //bc
        //When bc clicked call virtual function
        //Call bc_callback
        bc_callback();
    }
    else if (&src == &bb)
 80033ac:	f500 72dc 	add.w	r2, r0, #440	; 0x1b8
 80033b0:	4291      	cmp	r1, r2
 80033b2:	d079      	beq.n	80034a8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x124>
        //bb
        //When bb clicked call virtual function
        //Call bb_callback
        bb_callback();
    }
    else if (&src == &ba)
 80033b4:	f500 7200 	add.w	r2, r0, #512	; 0x200
 80033b8:	4291      	cmp	r1, r2
 80033ba:	f000 8087 	beq.w	80034cc <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x148>
        //ba
        //When ba clicked call virtual function
        //Call ba_callback
        ba_callback();
    }
    else if (&src == &b9)
 80033be:	f500 7212 	add.w	r2, r0, #584	; 0x248
 80033c2:	4291      	cmp	r1, r2
 80033c4:	f000 808f 	beq.w	80034e6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x162>
        //b9
        //When b9 clicked call virtual function
        //Call b9_callback
        b9_callback();
    }
    else if (&src == &b8)
 80033c8:	f500 7224 	add.w	r2, r0, #656	; 0x290
 80033cc:	4291      	cmp	r1, r2
 80033ce:	f000 8090 	beq.w	80034f2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16e>
        //b8
        //When b8 clicked call virtual function
        //Call b8_callback
        b8_callback();
    }
    else if (&src == &b7)
 80033d2:	f500 7236 	add.w	r2, r0, #728	; 0x2d8
 80033d6:	4291      	cmp	r1, r2
 80033d8:	d07e      	beq.n	80034d8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x154>
        //b7
        //When b7 clicked call virtual function
        //Call b7_callback
        b7_callback();
    }
    else if (&src == &b6)
 80033da:	f500 7248 	add.w	r2, r0, #800	; 0x320
 80033de:	4291      	cmp	r1, r2
 80033e0:	f000 808d 	beq.w	80034fe <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x17a>
        //b6
        //When b6 clicked call virtual function
        //Call b6_callback
        b6_callback();
    }
    else if (&src == &b5)
 80033e4:	f500 725a 	add.w	r2, r0, #872	; 0x368
 80033e8:	4291      	cmp	r1, r2
 80033ea:	f000 808e 	beq.w	800350a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x186>
        //b5
        //When b5 clicked call virtual function
        //Call b5_callback
        b5_callback();
    }
    else if (&src == &b4)
 80033ee:	f500 726c 	add.w	r2, r0, #944	; 0x3b0
 80033f2:	4291      	cmp	r1, r2
 80033f4:	f000 808f 	beq.w	8003516 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x192>
        //b4
        //When b4 clicked call virtual function
        //Call b4_callback
        b4_callback();
    }
    else if (&src == &b3)
 80033f8:	f500 727e 	add.w	r2, r0, #1016	; 0x3f8
 80033fc:	4291      	cmp	r1, r2
 80033fe:	f000 8090 	beq.w	8003522 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x19e>
        //b3
        //When b3 clicked call virtual function
        //Call b3_callback
        b3_callback();
    }
    else if (&src == &b2)
 8003402:	f500 6288 	add.w	r2, r0, #1088	; 0x440
 8003406:	4291      	cmp	r1, r2
 8003408:	f000 8091 	beq.w	800352e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1aa>
        //b2
        //When b2 clicked call virtual function
        //Call b2_callback
        b2_callback();
    }
    else if (&src == &b1)
 800340c:	f500 6291 	add.w	r2, r0, #1160	; 0x488
 8003410:	4291      	cmp	r1, r2
 8003412:	f000 8092 	beq.w	800353a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1b6>
        //b1
        //When b1 clicked call virtual function
        //Call b1_callback
        b1_callback();
    }
    else if (&src == &b0)
 8003416:	f500 629a 	add.w	r2, r0, #1232	; 0x4d0
 800341a:	4291      	cmp	r1, r2
 800341c:	f000 8093 	beq.w	8003546 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c2>
        //b0
        //When b0 clicked call virtual function
        //Call b0_callback
        b0_callback();
    }
    else if (&src == &ret)
 8003420:	f200 521c 	addw	r2, r0, #1308	; 0x51c
 8003424:	4291      	cmp	r1, r2
 8003426:	f000 8094 	beq.w	8003552 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1ce>
        //ret
        //When ret clicked call virtual function
        //Call ret_callback
        ret_callback();
    }
    else if (&src == &run)
 800342a:	f200 5264 	addw	r2, r0, #1380	; 0x564
 800342e:	4291      	cmp	r1, r2
 8003430:	f000 8092 	beq.w	8003558 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1d4>
        //run
        //When run clicked call virtual function
        //Call run_callback
        run_callback();
    }
    else if (&src == &store)
 8003434:	f200 52ac 	addw	r2, r0, #1452	; 0x5ac
 8003438:	4291      	cmp	r1, r2
 800343a:	f000 8090 	beq.w	800355e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        //store
        //When store clicked call virtual function
        //Call store_callback
        store_callback();
    }
    else if (&src == &load)
 800343e:	f200 52f4 	addw	r2, r0, #1524	; 0x5f4
 8003442:	4291      	cmp	r1, r2
 8003444:	f000 808e 	beq.w	8003564 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e0>
        //load
        //When load clicked call virtual function
        //Call load_callback
        load_callback();
    }
    else if (&src == &reset)
 8003448:	f200 623c 	addw	r2, r0, #1596	; 0x63c
 800344c:	4291      	cmp	r1, r2
 800344e:	f000 808c 	beq.w	800356a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e6>
        //reset
        //When reset clicked call virtual function
        //Call reset_callback
        reset_callback();
    }
    else if (&src == &adrs)
 8003452:	f200 6284 	addw	r2, r0, #1668	; 0x684
 8003456:	4291      	cmp	r1, r2
 8003458:	f000 808a 	beq.w	8003570 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1ec>
        //adrs
        //When adrs clicked call virtual function
        //Call adrs_callback
        adrs_callback();
    }
    else if (&src == &read_incr)
 800345c:	f200 62cc 	addw	r2, r0, #1740	; 0x6cc
 8003460:	4291      	cmp	r1, r2
 8003462:	f000 8089 	beq.w	8003578 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1f4>
        //read_incr
        //When read_incr clicked call virtual function
        //Call read_incr_callback
        read_incr_callback();
    }
    else if (&src == &read_decr)
 8003466:	f200 7214 	addw	r2, r0, #1812	; 0x714
 800346a:	4291      	cmp	r1, r2
 800346c:	f000 808c 	beq.w	8003588 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x204>
        //read_decr
        //When read_decr clicked call virtual function
        //Call read_decr_callback
        read_decr_callback();
    }
    else if (&src == &write_incr)
 8003470:	f200 725c 	addw	r2, r0, #1884	; 0x75c
 8003474:	4291      	cmp	r1, r2
 8003476:	f000 8083 	beq.w	8003580 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1fc>
        //write_incr
        //When write_incr clicked call virtual function
        //Call write_incr_callback
        write_incr_callback();
    }
    else if (&src == &setting)
 800347a:	f200 73a4 	addw	r3, r0, #1956	; 0x7a4
 800347e:	4299      	cmp	r1, r3
 8003480:	d10b      	bne.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
{
 8003482:	b510      	push	{r4, lr}
 8003484:	f011 fec6 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
        //setting
        //When setting clicked change screen to Setting
        //Go to Setting with no screen transition
        application().gotoSettingScreenNoTransition();
    }
}
 8003488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoSettingScreenNoTransition();
 800348c:	f7ff b8c0 	b.w	8002610 <_ZN23FrontendApplicationBase29gotoSettingScreenNoTransitionEv>
        be_callback();
 8003490:	6803      	ldr	r3, [r0, #0]
 8003492:	4a3f      	ldr	r2, [pc, #252]	; (8003590 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20c>)
 8003494:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003496:	4293      	cmp	r3, r2
 8003498:	d105      	bne.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
 800349a:	4770      	bx	lr
        bf_callback();
 800349c:	6803      	ldr	r3, [r0, #0]
 800349e:	4a3d      	ldr	r2, [pc, #244]	; (8003594 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x210>)
 80034a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80034a2:	4293      	cmp	r3, r2
 80034a4:	d0f9      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
        write_incr_callback();
 80034a6:	4718      	bx	r3
        bb_callback();
 80034a8:	6803      	ldr	r3, [r0, #0]
 80034aa:	4a3b      	ldr	r2, [pc, #236]	; (8003598 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x214>)
 80034ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80034ae:	4293      	cmp	r3, r2
 80034b0:	d0f3      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 80034b2:	e7f8      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        bd_callback();
 80034b4:	6803      	ldr	r3, [r0, #0]
 80034b6:	4a39      	ldr	r2, [pc, #228]	; (800359c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x218>)
 80034b8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80034ba:	4293      	cmp	r3, r2
 80034bc:	d1f3      	bne.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
 80034be:	4770      	bx	lr
        bc_callback();
 80034c0:	6803      	ldr	r3, [r0, #0]
 80034c2:	4a37      	ldr	r2, [pc, #220]	; (80035a0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x21c>)
 80034c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80034c6:	4293      	cmp	r3, r2
 80034c8:	d0e7      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 80034ca:	e7ec      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        ba_callback();
 80034cc:	6803      	ldr	r3, [r0, #0]
 80034ce:	4a35      	ldr	r2, [pc, #212]	; (80035a4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x220>)
 80034d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80034d2:	4293      	cmp	r3, r2
 80034d4:	d0e1      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 80034d6:	e7e6      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        b7_callback();
 80034d8:	6802      	ldr	r2, [r0, #0]
 80034da:	4933      	ldr	r1, [pc, #204]	; (80035a8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x224>)
 80034dc:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80034de:	428a      	cmp	r2, r1
 80034e0:	d0db      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
        b0_callback();
 80034e2:	4618      	mov	r0, r3
 80034e4:	4710      	bx	r2
        b9_callback();
 80034e6:	6803      	ldr	r3, [r0, #0]
 80034e8:	4a30      	ldr	r2, [pc, #192]	; (80035ac <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x228>)
 80034ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034ec:	4293      	cmp	r3, r2
 80034ee:	d0d4      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 80034f0:	e7d9      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        b8_callback();
 80034f2:	6803      	ldr	r3, [r0, #0]
 80034f4:	4a2e      	ldr	r2, [pc, #184]	; (80035b0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22c>)
 80034f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80034f8:	4293      	cmp	r3, r2
 80034fa:	d0ce      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 80034fc:	e7d3      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        b6_callback();
 80034fe:	6802      	ldr	r2, [r0, #0]
 8003500:	492c      	ldr	r1, [pc, #176]	; (80035b4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x230>)
 8003502:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8003504:	428a      	cmp	r2, r1
 8003506:	d0c8      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003508:	e7eb      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b5_callback();
 800350a:	6802      	ldr	r2, [r0, #0]
 800350c:	492a      	ldr	r1, [pc, #168]	; (80035b8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>)
 800350e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8003510:	428a      	cmp	r2, r1
 8003512:	d0c2      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003514:	e7e5      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b4_callback();
 8003516:	6802      	ldr	r2, [r0, #0]
 8003518:	4928      	ldr	r1, [pc, #160]	; (80035bc <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
 800351a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800351c:	428a      	cmp	r2, r1
 800351e:	d0bc      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003520:	e7df      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b3_callback();
 8003522:	6802      	ldr	r2, [r0, #0]
 8003524:	4926      	ldr	r1, [pc, #152]	; (80035c0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8003526:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003528:	428a      	cmp	r2, r1
 800352a:	d0b6      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 800352c:	e7d9      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b2_callback();
 800352e:	6802      	ldr	r2, [r0, #0]
 8003530:	4924      	ldr	r1, [pc, #144]	; (80035c4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x240>)
 8003532:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8003534:	428a      	cmp	r2, r1
 8003536:	d0b0      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003538:	e7d3      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b1_callback();
 800353a:	6802      	ldr	r2, [r0, #0]
 800353c:	4922      	ldr	r1, [pc, #136]	; (80035c8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x244>)
 800353e:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8003540:	428a      	cmp	r2, r1
 8003542:	d0aa      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003544:	e7cd      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        b0_callback();
 8003546:	6802      	ldr	r2, [r0, #0]
 8003548:	4920      	ldr	r1, [pc, #128]	; (80035cc <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x248>)
 800354a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800354c:	428a      	cmp	r2, r1
 800354e:	d0a4      	beq.n	800349a <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x116>
 8003550:	e7c7      	b.n	80034e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x15e>
        ret_callback();
 8003552:	6802      	ldr	r2, [r0, #0]
 8003554:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
 8003556:	4718      	bx	r3
        run_callback();
 8003558:	6802      	ldr	r2, [r0, #0]
 800355a:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800355c:	4718      	bx	r3
        store_callback();
 800355e:	6802      	ldr	r2, [r0, #0]
 8003560:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8003562:	4718      	bx	r3
        load_callback();
 8003564:	6802      	ldr	r2, [r0, #0]
 8003566:	6f93      	ldr	r3, [r2, #120]	; 0x78
 8003568:	4718      	bx	r3
        reset_callback();
 800356a:	6802      	ldr	r2, [r0, #0]
 800356c:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
 800356e:	4718      	bx	r3
        adrs_callback();
 8003570:	6802      	ldr	r2, [r0, #0]
 8003572:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8003576:	4718      	bx	r3
        read_incr_callback();
 8003578:	6802      	ldr	r2, [r0, #0]
 800357a:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800357e:	4718      	bx	r3
        write_incr_callback();
 8003580:	6802      	ldr	r2, [r0, #0]
 8003582:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8003586:	e78e      	b.n	80034a6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x122>
        read_decr_callback();
 8003588:	6802      	ldr	r2, [r0, #0]
 800358a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800358e:	4718      	bx	r3
 8003590:	08003225 	.word	0x08003225
 8003594:	08003229 	.word	0x08003229
 8003598:	08003219 	.word	0x08003219
 800359c:	08003221 	.word	0x08003221
 80035a0:	0800321d 	.word	0x0800321d
 80035a4:	08003215 	.word	0x08003215
 80035a8:	0800322d 	.word	0x0800322d
 80035ac:	08003211 	.word	0x08003211
 80035b0:	0800320d 	.word	0x0800320d
 80035b4:	08003209 	.word	0x08003209
 80035b8:	08003205 	.word	0x08003205
 80035bc:	08003201 	.word	0x08003201
 80035c0:	080031fd 	.word	0x080031fd
 80035c4:	080031f9 	.word	0x080031f9
 80035c8:	080031f5 	.word	0x080031f5
 80035cc:	080031f1 	.word	0x080031f1

080035d0 <_ZN8touchgfx14AbstractButton13executeActionEv>:
        if (action && action->isValid())
 80035d0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80035d2:	b32b      	cbz	r3, 8003620 <_ZN8touchgfx14AbstractButton13executeActionEv+0x50>
 80035d4:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
 80035d6:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
 80035d8:	68d1      	ldr	r1, [r2, #12]
 80035da:	4604      	mov	r4, r0
 80035dc:	481a      	ldr	r0, [pc, #104]	; (8003648 <_ZN8touchgfx14AbstractButton13executeActionEv+0x78>)
 80035de:	4281      	cmp	r1, r0
 80035e0:	d11f      	bne.n	8003622 <_ZN8touchgfx14AbstractButton13executeActionEv+0x52>
        return (pobject != 0) && (pmemfun != 0);
 80035e2:	6859      	ldr	r1, [r3, #4]
 80035e4:	b181      	cbz	r1, 8003608 <_ZN8touchgfx14AbstractButton13executeActionEv+0x38>
 80035e6:	689d      	ldr	r5, [r3, #8]
 80035e8:	b315      	cbz	r5, 8003630 <_ZN8touchgfx14AbstractButton13executeActionEv+0x60>
            action->execute(*this);
 80035ea:	6892      	ldr	r2, [r2, #8]
 80035ec:	4917      	ldr	r1, [pc, #92]	; (800364c <_ZN8touchgfx14AbstractButton13executeActionEv+0x7c>)
 80035ee:	428a      	cmp	r2, r1
 80035f0:	d125      	bne.n	800363e <_ZN8touchgfx14AbstractButton13executeActionEv+0x6e>
        (pobject->*pmemfun)(t1);
 80035f2:	68d8      	ldr	r0, [r3, #12]
 80035f4:	07c2      	lsls	r2, r0, #31
 80035f6:	d408      	bmi.n	800360a <_ZN8touchgfx14AbstractButton13executeActionEv+0x3a>
 80035f8:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 80035fc:	4621      	mov	r1, r4
 80035fe:	eb02 0060 	add.w	r0, r2, r0, asr #1
    }
 8003602:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003606:	4718      	bx	r3
 8003608:	bd70      	pop	{r4, r5, r6, pc}
 800360a:	e9d3 1501 	ldrd	r1, r5, [r3, #4]
 800360e:	1043      	asrs	r3, r0, #1
 8003610:	eb01 0060 	add.w	r0, r1, r0, asr #1
 8003614:	58cb      	ldr	r3, [r1, r3]
 8003616:	4621      	mov	r1, r4
 8003618:	595b      	ldr	r3, [r3, r5]
 800361a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800361e:	4718      	bx	r3
 8003620:	4770      	bx	lr
        if (action && action->isValid())
 8003622:	4618      	mov	r0, r3
 8003624:	4788      	blx	r1
 8003626:	2800      	cmp	r0, #0
 8003628:	d0ee      	beq.n	8003608 <_ZN8touchgfx14AbstractButton13executeActionEv+0x38>
 800362a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800362c:	681a      	ldr	r2, [r3, #0]
 800362e:	e7dc      	b.n	80035ea <_ZN8touchgfx14AbstractButton13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
 8003630:	68d8      	ldr	r0, [r3, #12]
 8003632:	07c6      	lsls	r6, r0, #31
 8003634:	d5e8      	bpl.n	8003608 <_ZN8touchgfx14AbstractButton13executeActionEv+0x38>
            action->execute(*this);
 8003636:	6892      	ldr	r2, [r2, #8]
 8003638:	4e04      	ldr	r6, [pc, #16]	; (800364c <_ZN8touchgfx14AbstractButton13executeActionEv+0x7c>)
 800363a:	42b2      	cmp	r2, r6
 800363c:	d0e7      	beq.n	800360e <_ZN8touchgfx14AbstractButton13executeActionEv+0x3e>
 800363e:	4621      	mov	r1, r4
 8003640:	4618      	mov	r0, r3
    }
 8003642:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
 8003646:	4710      	bx	r2
 8003648:	08003291 	.word	0x08003291
 800364c:	08003269 	.word	0x08003269

08003650 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8003650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003654:	ed2d 8b02 	vpush	{d8}
 8003658:	4604      	mov	r4, r0
 800365a:	b0a3      	sub	sp, #140	; 0x8c
 800365c:	2500      	movs	r5, #0
          visible(true)
 800365e:	f44f 7680 	mov.w	r6, #256	; 0x100
        : Widget(), alpha(255), color(0)
 8003662:	27ff      	movs	r7, #255	; 0xff
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8003664:	f100 0998 	add.w	r9, r0, #152	; 0x98
 8003668:	f013 f8f4 	bl	8016854 <_ZN8touchgfx6ScreenC1Ev>
 800366c:	4acb      	ldr	r2, [pc, #812]	; (800399c <_ZN12MainViewBaseC1Ev+0x34c>)
 800366e:	4bcc      	ldr	r3, [pc, #816]	; (80039a0 <_ZN12MainViewBaseC1Ev+0x350>)
 8003670:	6022      	str	r2, [r4, #0]
 8003672:	6423      	str	r3, [r4, #64]	; 0x40
 8003674:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003676:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
 800367a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800367e:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 8003682:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003686:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
        : x(0), y(0), width(0), height(0)
 800368a:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
 800368e:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8003692:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8003696:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 800369a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800369e:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 80036a2:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80036a6:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 80036aa:	4648      	mov	r0, r9
 80036ac:	63e5      	str	r5, [r4, #60]	; 0x3c
        : color(col)
 80036ae:	66a5      	str	r5, [r4, #104]	; 0x68
 80036b0:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 80036b4:	9301      	str	r3, [sp, #4]
 80036b6:	f010 f871 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036ba:	f504 7294 	add.w	r2, r4, #296	; 0x128
 80036be:	9801      	ldr	r0, [sp, #4]
 80036c0:	9202      	str	r2, [sp, #8]
 80036c2:	f010 f86b 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036c6:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80036ca:	9802      	ldr	r0, [sp, #8]
 80036cc:	9303      	str	r3, [sp, #12]
 80036ce:	f010 f865 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036d2:	f504 72dc 	add.w	r2, r4, #440	; 0x1b8
 80036d6:	9803      	ldr	r0, [sp, #12]
 80036d8:	9204      	str	r2, [sp, #16]
 80036da:	f010 f85f 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036de:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80036e2:	9804      	ldr	r0, [sp, #16]
 80036e4:	9305      	str	r3, [sp, #20]
 80036e6:	f010 f859 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036ea:	f504 7212 	add.w	r2, r4, #584	; 0x248
 80036ee:	9805      	ldr	r0, [sp, #20]
 80036f0:	9206      	str	r2, [sp, #24]
 80036f2:	f010 f853 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80036f6:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80036fa:	9806      	ldr	r0, [sp, #24]
 80036fc:	9307      	str	r3, [sp, #28]
 80036fe:	f010 f84d 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003702:	f504 7236 	add.w	r2, r4, #728	; 0x2d8
 8003706:	9807      	ldr	r0, [sp, #28]
 8003708:	9208      	str	r2, [sp, #32]
 800370a:	f010 f847 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800370e:	f504 7348 	add.w	r3, r4, #800	; 0x320
 8003712:	9808      	ldr	r0, [sp, #32]
 8003714:	9309      	str	r3, [sp, #36]	; 0x24
 8003716:	f010 f841 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800371a:	f504 725a 	add.w	r2, r4, #872	; 0x368
 800371e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003720:	920a      	str	r2, [sp, #40]	; 0x28
 8003722:	f010 f83b 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003726:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
 800372a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800372c:	930b      	str	r3, [sp, #44]	; 0x2c
 800372e:	f010 f835 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003732:	f504 727e 	add.w	r2, r4, #1016	; 0x3f8
 8003736:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003738:	920c      	str	r2, [sp, #48]	; 0x30
 800373a:	f010 f82f 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800373e:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003742:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003744:	930d      	str	r3, [sp, #52]	; 0x34
 8003746:	f010 f829 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800374a:	f504 6291 	add.w	r2, r4, #1160	; 0x488
 800374e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003750:	920e      	str	r2, [sp, #56]	; 0x38
 8003752:	f010 f823 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : T(), clickAction(0)
 8003756:	f504 639a 	add.w	r3, r4, #1232	; 0x4d0
 800375a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800375c:	930f      	str	r3, [sp, #60]	; 0x3c
 800375e:	f010 f81d 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003762:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003764:	f010 f81a 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003768:	f204 531c 	addw	r3, r4, #1308	; 0x51c
        touchable = touch;
 800376c:	f04f 0801 	mov.w	r8, #1
 8003770:	4618      	mov	r0, r3
 8003772:	ee08 3a10 	vmov	s16, r3
 8003776:	4b8b      	ldr	r3, [pc, #556]	; (80039a4 <_ZN12MainViewBaseC1Ev+0x354>)
 8003778:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
 800377c:	f884 84f4 	strb.w	r8, [r4, #1268]	; 0x4f4
 8003780:	f204 5364 	addw	r3, r4, #1380	; 0x564
 8003784:	f8c4 5518 	str.w	r5, [r4, #1304]	; 0x518
 8003788:	9310      	str	r3, [sp, #64]	; 0x40
 800378a:	f010 f807 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800378e:	f204 52ac 	addw	r2, r4, #1452	; 0x5ac
 8003792:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003794:	9211      	str	r2, [sp, #68]	; 0x44
 8003796:	f010 f801 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800379a:	f204 53f4 	addw	r3, r4, #1524	; 0x5f4
 800379e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80037a0:	9312      	str	r3, [sp, #72]	; 0x48
 80037a2:	f00f fffb 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037a6:	f204 623c 	addw	r2, r4, #1596	; 0x63c
 80037aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80037ac:	9213      	str	r2, [sp, #76]	; 0x4c
 80037ae:	f00f fff5 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037b2:	f204 6384 	addw	r3, r4, #1668	; 0x684
 80037b6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80037b8:	9314      	str	r3, [sp, #80]	; 0x50
 80037ba:	f00f ffef 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037be:	f204 62cc 	addw	r2, r4, #1740	; 0x6cc
 80037c2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80037c4:	9215      	str	r2, [sp, #84]	; 0x54
 80037c6:	f00f ffe9 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037ca:	f204 7314 	addw	r3, r4, #1812	; 0x714
 80037ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 80037d0:	9316      	str	r3, [sp, #88]	; 0x58
 80037d2:	f00f ffe3 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037d6:	f204 725c 	addw	r2, r4, #1884	; 0x75c
 80037da:	9816      	ldr	r0, [sp, #88]	; 0x58
 80037dc:	9217      	str	r2, [sp, #92]	; 0x5c
 80037de:	f00f ffdd 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037e2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80037e4:	f00f ffda 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037e8:	f240 1301 	movw	r3, #257	; 0x101
        : AbstractButton(), up(), down(), alpha(255)
 80037ec:	f8df e1e4 	ldr.w	lr, [pc, #484]	; 80039d4 <_ZN12MainViewBaseC1Ev+0x384>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80037f0:	f8df c1e4 	ldr.w	ip, [pc, #484]	; 80039d8 <_ZN12MainViewBaseC1Ev+0x388>
        : pobject(pObject), pmemfun(pmemfun_1)
 80037f4:	4a6c      	ldr	r2, [pc, #432]	; (80039a8 <_ZN12MainViewBaseC1Ev+0x358>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037f6:	486d      	ldr	r0, [pc, #436]	; (80039ac <_ZN12MainViewBaseC1Ev+0x35c>)
 80037f8:	496d      	ldr	r1, [pc, #436]	; (80039b0 <_ZN12MainViewBaseC1Ev+0x360>)
 80037fa:	f884 780a 	strb.w	r7, [r4, #2058]	; 0x80a
    __background.setPosition(0, 0, 320, 240);
 80037fe:	f104 0a40 	add.w	sl, r4, #64	; 0x40
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003802:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8003806:	f8c4 e7a4 	str.w	lr, [r4, #1956]	; 0x7a4
 800380a:	f8c4 c7d8 	str.w	ip, [r4, #2008]	; 0x7d8
 800380e:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003812:	f04f 3cff 	mov.w	ip, #4294967295
 8003816:	f8a4 37c8 	strh.w	r3, [r4, #1992]	; 0x7c8
 800381a:	f8a4 37fc 	strh.w	r3, [r4, #2044]	; 0x7fc
 800381e:	4b65      	ldr	r3, [pc, #404]	; (80039b4 <_ZN12MainViewBaseC1Ev+0x364>)
        : Widget(), action(), pressed(false)
 8003820:	f8c4 57cc 	str.w	r5, [r4, #1996]	; 0x7cc
 8003824:	f884 57d0 	strb.w	r5, [r4, #2000]	; 0x7d0
        : x(0), y(0), width(0), height(0)
 8003828:	f8c4 57a8 	str.w	r5, [r4, #1960]	; 0x7a8
 800382c:	f8c4 57ac 	str.w	r5, [r4, #1964]	; 0x7ac
 8003830:	f8c4 57b0 	str.w	r5, [r4, #1968]	; 0x7b0
 8003834:	f8c4 57b4 	str.w	r5, [r4, #1972]	; 0x7b4
          visible(true)
 8003838:	f8c4 57b8 	str.w	r5, [r4, #1976]	; 0x7b8
 800383c:	f8c4 57bc 	str.w	r5, [r4, #1980]	; 0x7bc
 8003840:	f8c4 57c0 	str.w	r5, [r4, #1984]	; 0x7c0
 8003844:	f8c4 57c4 	str.w	r5, [r4, #1988]	; 0x7c4
 8003848:	f8c4 5800 	str.w	r5, [r4, #2048]	; 0x800
 800384c:	f884 5804 	strb.w	r5, [r4, #2052]	; 0x804
 8003850:	f8c4 57dc 	str.w	r5, [r4, #2012]	; 0x7dc
 8003854:	f8c4 57e0 	str.w	r5, [r4, #2016]	; 0x7e0
 8003858:	f8c4 57e4 	str.w	r5, [r4, #2020]	; 0x7e4
 800385c:	f8c4 57e8 	str.w	r5, [r4, #2024]	; 0x7e8
 8003860:	f8c4 57ec 	str.w	r5, [r4, #2028]	; 0x7ec
 8003864:	f8c4 57f0 	str.w	r5, [r4, #2032]	; 0x7f0
 8003868:	f8c4 57f4 	str.w	r5, [r4, #2036]	; 0x7f4
 800386c:	f8c4 57f8 	str.w	r5, [r4, #2040]	; 0x7f8
 8003870:	f8c4 5814 	str.w	r5, [r4, #2068]	; 0x814
 8003874:	f8a4 77d2 	strh.w	r7, [r4, #2002]	; 0x7d2
 8003878:	f8a4 77d4 	strh.w	r7, [r4, #2004]	; 0x7d4
 800387c:	f884 77d6 	strb.w	r7, [r4, #2006]	; 0x7d6
 8003880:	f8a4 7806 	strh.w	r7, [r4, #2054]	; 0x806
 8003884:	f8a4 7808 	strh.w	r7, [r4, #2056]	; 0x808
 8003888:	f8a4 780c 	strh.w	r7, [r4, #2060]	; 0x80c
 800388c:	f8c4 5818 	str.w	r5, [r4, #2072]	; 0x818
 8003890:	f8c4 e844 	str.w	lr, [r4, #2116]	; 0x844
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003894:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
 8003898:	f8c4 2868 	str.w	r2, [r4, #2152]	; 0x868
 800389c:	f8c4 3838 	str.w	r3, [r4, #2104]	; 0x838
 80038a0:	f8a4 6834 	strh.w	r6, [r4, #2100]	; 0x834
 80038a4:	f8c4 0810 	str.w	r0, [r4, #2064]	; 0x810
 80038a8:	f8c4 1860 	str.w	r1, [r4, #2144]	; 0x860
        setWidth(width);
 80038ac:	4650      	mov	r0, sl
 80038ae:	f44f 71a0 	mov.w	r1, #320	; 0x140
        : x(0), y(0), width(0), height(0)
 80038b2:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 80038b6:	f8c4 5820 	str.w	r5, [r4, #2080]	; 0x820
          visible(true)
 80038ba:	f8c4 5824 	str.w	r5, [r4, #2084]	; 0x824
 80038be:	f8c4 5828 	str.w	r5, [r4, #2088]	; 0x828
 80038c2:	f8c4 582c 	str.w	r5, [r4, #2092]	; 0x82c
 80038c6:	f8c4 5830 	str.w	r5, [r4, #2096]	; 0x830
 80038ca:	f8a4 783c 	strh.w	r7, [r4, #2108]	; 0x83c
        : color(col)
 80038ce:	f8c4 5840 	str.w	r5, [r4, #2112]	; 0x840
 80038d2:	f8a4 5848 	strh.w	r5, [r4, #2120]	; 0x848
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038d6:	f8a4 584c 	strh.w	r5, [r4, #2124]	; 0x84c
 80038da:	f8a4 584e 	strh.w	r5, [r4, #2126]	; 0x84e
              text(0)
 80038de:	f8c4 5854 	str.w	r5, [r4, #2132]	; 0x854
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 80038e2:	f8c4 5858 	str.w	r5, [r4, #2136]	; 0x858
 80038e6:	f8c4 585c 	str.w	r5, [r4, #2140]	; 0x85c
 80038ea:	f8c4 4864 	str.w	r4, [r4, #2148]	; 0x864
 80038ee:	f8c4 586c 	str.w	r5, [r4, #2156]	; 0x86c
        rect.x = x;
 80038f2:	6465      	str	r5, [r4, #68]	; 0x44
        setWidth(width);
 80038f4:	f7fe fcac 	bl	8002250 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80038f8:	4650      	mov	r0, sl
 80038fa:	21f0      	movs	r1, #240	; 0xf0
 80038fc:	f7fe fcaa 	bl	8002254 <_ZN8touchgfx8Drawable9setHeightEs>
        return typedTextId < numberOfTypedTexts;
 8003900:	4e2d      	ldr	r6, [pc, #180]	; (80039b8 <_ZN12MainViewBaseC1Ev+0x368>)
        rect.width = width;
 8003902:	492e      	ldr	r1, [pc, #184]	; (80039bc <_ZN12MainViewBaseC1Ev+0x36c>)
        color = newColor;
 8003904:	4a2e      	ldr	r2, [pc, #184]	; (80039c0 <_ZN12MainViewBaseC1Ev+0x370>)
        rect.x = x;
 8003906:	4b2f      	ldr	r3, [pc, #188]	; (80039c4 <_ZN12MainViewBaseC1Ev+0x374>)
        rect.width = width;
 8003908:	6761      	str	r1, [r4, #116]	; 0x74
 800390a:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800390e:	66a0      	str	r0, [r4, #104]	; 0x68
 8003910:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
        rect.x = x;
 8003914:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
    bf.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003918:	aa20      	add	r2, sp, #128	; 0x80
 800391a:	2305      	movs	r3, #5
 800391c:	a91f      	add	r1, sp, #124	; 0x7c
 800391e:	6725      	str	r5, [r4, #112]	; 0x70
 8003920:	4648      	mov	r0, r9
 8003922:	f8ad 807c 	strh.w	r8, [sp, #124]	; 0x7c
 8003926:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 800392a:	f00f fc78 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
 800392e:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003930:	2144      	movs	r1, #68	; 0x44
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8003932:	f204 72a4 	addw	r2, r4, #1956	; 0x7a4
 8003936:	ee08 2a90 	vmov	s17, r2
 800393a:	428b      	cmp	r3, r1
    box1.setPosition(0, 0, 320, 240);
 800393c:	f104 026c 	add.w	r2, r4, #108	; 0x6c
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8003940:	f504 6801 	add.w	r8, r4, #2064	; 0x810
    box1.setPosition(0, 0, 320, 240);
 8003944:	9218      	str	r2, [sp, #96]	; 0x60
 8003946:	f8a4 10d0 	strh.w	r1, [r4, #208]	; 0xd0
 800394a:	d947      	bls.n	80039dc <_ZN12MainViewBaseC1Ev+0x38c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800394c:	4b1e      	ldr	r3, [pc, #120]	; (80039c8 <_ZN12MainViewBaseC1Ev+0x378>)
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	2b00      	cmp	r3, #0
 8003952:	f001 8037 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003956:	4a1d      	ldr	r2, [pc, #116]	; (80039cc <_ZN12MainViewBaseC1Ev+0x37c>)
 8003958:	f893 0088 	ldrb.w	r0, [r3, #136]	; 0x88
 800395c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800395e:	4b1c      	ldr	r3, [pc, #112]	; (80039d0 <_ZN12MainViewBaseC1Ev+0x380>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003960:	f852 7020 	ldr.w	r7, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003964:	6818      	ldr	r0, [r3, #0]
 8003966:	f003 f80f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800396a:	683b      	ldr	r3, [r7, #0]
 800396c:	4601      	mov	r1, r0
 800396e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003970:	9119      	str	r1, [sp, #100]	; 0x64
 8003972:	4638      	mov	r0, r7
 8003974:	4798      	blx	r3
 8003976:	683b      	ldr	r3, [r7, #0]
 8003978:	9919      	ldr	r1, [sp, #100]	; 0x64
 800397a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800397c:	4605      	mov	r5, r0
 800397e:	4638      	mov	r0, r7
 8003980:	4798      	blx	r3
 8003982:	683b      	ldr	r3, [r7, #0]
 8003984:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003986:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003988:	fb15 f500 	smulbb	r5, r5, r0
 800398c:	4638      	mov	r0, r7
 800398e:	4798      	blx	r3
 8003990:	b2ed      	uxtb	r5, r5
 8003992:	4428      	add	r0, r5
 8003994:	f884 00dd 	strb.w	r0, [r4, #221]	; 0xdd
 8003998:	e022      	b.n	80039e0 <_ZN12MainViewBaseC1Ev+0x390>
 800399a:	bf00      	nop
 800399c:	0802786c 	.word	0x0802786c
 80039a0:	080287f8 	.word	0x080287f8
 80039a4:	080277e0 	.word	0x080277e0
 80039a8:	08003385 	.word	0x08003385
 80039ac:	08028768 	.word	0x08028768
 80039b0:	08027854 	.word	0x08027854
 80039b4:	08026e28 	.word	0x08026e28
 80039b8:	20002ce0 	.word	0x20002ce0
 80039bc:	00f00140 	.word	0x00f00140
 80039c0:	fff7f7f7 	.word	0xfff7f7f7
 80039c4:	003000e0 	.word	0x003000e0
 80039c8:	20002cdc 	.word	0x20002cdc
 80039cc:	20002ce4 	.word	0x20002ce4
 80039d0:	20002ce8 	.word	0x20002ce8
 80039d4:	08028860 	.word	0x08028860
 80039d8:	080286f4 	.word	0x080286f4
        }
        else
        {
            textHeightIncludingSpacing = 0;
 80039dc:	f884 50dd 	strb.w	r5, [r4, #221]	; 0xdd
 80039e0:	4ac2      	ldr	r2, [pc, #776]	; (8003cec <_ZN12MainViewBaseC1Ev+0x69c>)
 80039e2:	f8c4 20e4 	str.w	r2, [r4, #228]	; 0xe4
        color = col;
 80039e6:	f04f 33ff 	mov.w	r3, #4294967295
 80039ea:	2001      	movs	r0, #1
    bf.setAction(buttonCallback);
 80039ec:	f504 6506 	add.w	r5, r4, #2144	; 0x860
        colorPressed = col;
 80039f0:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    be.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80039f4:	a91f      	add	r1, sp, #124	; 0x7c
 80039f6:	2305      	movs	r3, #5
 80039f8:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
        action = &callback;
 80039fc:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8003a00:	9801      	ldr	r0, [sp, #4]
 8003a02:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003a06:	aa20      	add	r2, sp, #128	; 0x80
 8003a08:	f00f fc09 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003a0c:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003a0e:	2145      	movs	r1, #69	; 0x45
 8003a10:	428b      	cmp	r3, r1
 8003a12:	f8a4 1118 	strh.w	r1, [r4, #280]	; 0x118
 8003a16:	f200 8741 	bhi.w	800489c <_ZN12MainViewBaseC1Ev+0x124c>
            textHeightIncludingSpacing = 0;
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f884 3125 	strb.w	r3, [r4, #293]	; 0x125
 8003a20:	4ab3      	ldr	r2, [pc, #716]	; (8003cf0 <_ZN12MainViewBaseC1Ev+0x6a0>)
 8003a22:	f8c4 212c 	str.w	r2, [r4, #300]	; 0x12c
        color = col;
 8003a26:	f04f 33ff 	mov.w	r3, #4294967295
 8003a2a:	2001      	movs	r0, #1
        colorPressed = col;
 8003a2c:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
    bd.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003a30:	a91f      	add	r1, sp, #124	; 0x7c
 8003a32:	2305      	movs	r3, #5
 8003a34:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003a38:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8003a3c:	9802      	ldr	r0, [sp, #8]
 8003a3e:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003a42:	aa20      	add	r2, sp, #128	; 0x80
 8003a44:	f00f fbeb 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003a48:	8833      	ldrh	r3, [r6, #0]
 8003a4a:	2146      	movs	r1, #70	; 0x46
 8003a4c:	428b      	cmp	r3, r1
 8003a4e:	f8a4 1160 	strh.w	r1, [r4, #352]	; 0x160
 8003a52:	f240 874e 	bls.w	80048f2 <_ZN12MainViewBaseC1Ev+0x12a2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a56:	4ba7      	ldr	r3, [pc, #668]	; (8003cf4 <_ZN12MainViewBaseC1Ev+0x6a4>)
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	f000 87b2 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003a60:	4aa5      	ldr	r2, [pc, #660]	; (8003cf8 <_ZN12MainViewBaseC1Ev+0x6a8>)
 8003a62:	f893 008c 	ldrb.w	r0, [r3, #140]	; 0x8c
 8003a66:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003a68:	4ba4      	ldr	r3, [pc, #656]	; (8003cfc <_ZN12MainViewBaseC1Ev+0x6ac>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003a6a:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003a6e:	6818      	ldr	r0, [r3, #0]
 8003a70:	f002 ff8a 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003a74:	f8db 3000 	ldr.w	r3, [fp]
 8003a78:	4601      	mov	r1, r0
 8003a7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a7c:	9119      	str	r1, [sp, #100]	; 0x64
 8003a7e:	4658      	mov	r0, fp
 8003a80:	4798      	blx	r3
 8003a82:	f8db 3000 	ldr.w	r3, [fp]
 8003a86:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003a88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a8a:	4607      	mov	r7, r0
 8003a8c:	4658      	mov	r0, fp
 8003a8e:	4798      	blx	r3
 8003a90:	f8db 3000 	ldr.w	r3, [fp]
 8003a94:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a98:	fb17 f700 	smulbb	r7, r7, r0
 8003a9c:	4658      	mov	r0, fp
 8003a9e:	4798      	blx	r3
 8003aa0:	b2ff      	uxtb	r7, r7
 8003aa2:	4438      	add	r0, r7
 8003aa4:	f884 016d 	strb.w	r0, [r4, #365]	; 0x16d
 8003aa8:	4a95      	ldr	r2, [pc, #596]	; (8003d00 <_ZN12MainViewBaseC1Ev+0x6b0>)
 8003aaa:	f8c4 2174 	str.w	r2, [r4, #372]	; 0x174
        color = col;
 8003aae:	f04f 33ff 	mov.w	r3, #4294967295
 8003ab2:	2001      	movs	r0, #1
        colorPressed = col;
 8003ab4:	e9c4 3359 	strd	r3, r3, [r4, #356]	; 0x164
    bc.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003ab8:	a91f      	add	r1, sp, #124	; 0x7c
 8003aba:	2305      	movs	r3, #5
 8003abc:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003ac0:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8003ac4:	9803      	ldr	r0, [sp, #12]
 8003ac6:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003aca:	aa20      	add	r2, sp, #128	; 0x80
 8003acc:	f00f fba7 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003ad0:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003ad2:	2147      	movs	r1, #71	; 0x47
 8003ad4:	428b      	cmp	r3, r1
 8003ad6:	f8a4 11a8 	strh.w	r1, [r4, #424]	; 0x1a8
 8003ada:	f240 870f 	bls.w	80048fc <_ZN12MainViewBaseC1Ev+0x12ac>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ade:	4b85      	ldr	r3, [pc, #532]	; (8003cf4 <_ZN12MainViewBaseC1Ev+0x6a4>)
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	f000 876e 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003ae8:	4a83      	ldr	r2, [pc, #524]	; (8003cf8 <_ZN12MainViewBaseC1Ev+0x6a8>)
 8003aea:	f893 008e 	ldrb.w	r0, [r3, #142]	; 0x8e
 8003aee:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003af0:	4b82      	ldr	r3, [pc, #520]	; (8003cfc <_ZN12MainViewBaseC1Ev+0x6ac>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003af2:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003af6:	6818      	ldr	r0, [r3, #0]
 8003af8:	f002 ff46 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003afc:	f8db 3000 	ldr.w	r3, [fp]
 8003b00:	4601      	mov	r1, r0
 8003b02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b04:	9119      	str	r1, [sp, #100]	; 0x64
 8003b06:	4658      	mov	r0, fp
 8003b08:	4798      	blx	r3
 8003b0a:	f8db 3000 	ldr.w	r3, [fp]
 8003b0e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003b10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b12:	4607      	mov	r7, r0
 8003b14:	4658      	mov	r0, fp
 8003b16:	4798      	blx	r3
 8003b18:	f8db 3000 	ldr.w	r3, [fp]
 8003b1c:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003b1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b20:	fb17 f700 	smulbb	r7, r7, r0
 8003b24:	4658      	mov	r0, fp
 8003b26:	4798      	blx	r3
 8003b28:	b2ff      	uxtb	r7, r7
 8003b2a:	4438      	add	r0, r7
 8003b2c:	f884 01b5 	strb.w	r0, [r4, #437]	; 0x1b5
 8003b30:	4a74      	ldr	r2, [pc, #464]	; (8003d04 <_ZN12MainViewBaseC1Ev+0x6b4>)
 8003b32:	f8c4 21bc 	str.w	r2, [r4, #444]	; 0x1bc
        color = col;
 8003b36:	f04f 33ff 	mov.w	r3, #4294967295
 8003b3a:	2001      	movs	r0, #1
        colorPressed = col;
 8003b3c:	e9c4 336b 	strd	r3, r3, [r4, #428]	; 0x1ac
    bb.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003b40:	a91f      	add	r1, sp, #124	; 0x7c
 8003b42:	2305      	movs	r3, #5
 8003b44:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003b48:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
 8003b4c:	9804      	ldr	r0, [sp, #16]
 8003b4e:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003b52:	aa20      	add	r2, sp, #128	; 0x80
 8003b54:	f00f fb63 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003b58:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003b5a:	2148      	movs	r1, #72	; 0x48
 8003b5c:	428b      	cmp	r3, r1
 8003b5e:	f8a4 11f0 	strh.w	r1, [r4, #496]	; 0x1f0
 8003b62:	f240 86d0 	bls.w	8004906 <_ZN12MainViewBaseC1Ev+0x12b6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b66:	4b63      	ldr	r3, [pc, #396]	; (8003cf4 <_ZN12MainViewBaseC1Ev+0x6a4>)
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	f000 872a 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003b70:	4a61      	ldr	r2, [pc, #388]	; (8003cf8 <_ZN12MainViewBaseC1Ev+0x6a8>)
 8003b72:	f893 0090 	ldrb.w	r0, [r3, #144]	; 0x90
 8003b76:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003b78:	4b60      	ldr	r3, [pc, #384]	; (8003cfc <_ZN12MainViewBaseC1Ev+0x6ac>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003b7a:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003b7e:	6818      	ldr	r0, [r3, #0]
 8003b80:	f002 ff02 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003b84:	f8db 3000 	ldr.w	r3, [fp]
 8003b88:	4601      	mov	r1, r0
 8003b8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b8c:	9119      	str	r1, [sp, #100]	; 0x64
 8003b8e:	4658      	mov	r0, fp
 8003b90:	4798      	blx	r3
 8003b92:	f8db 3000 	ldr.w	r3, [fp]
 8003b96:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003b98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b9a:	4607      	mov	r7, r0
 8003b9c:	4658      	mov	r0, fp
 8003b9e:	4798      	blx	r3
 8003ba0:	f8db 3000 	ldr.w	r3, [fp]
 8003ba4:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ba8:	fb17 f700 	smulbb	r7, r7, r0
 8003bac:	4658      	mov	r0, fp
 8003bae:	4798      	blx	r3
 8003bb0:	b2ff      	uxtb	r7, r7
 8003bb2:	4438      	add	r0, r7
 8003bb4:	f884 01fd 	strb.w	r0, [r4, #509]	; 0x1fd
 8003bb8:	4a53      	ldr	r2, [pc, #332]	; (8003d08 <_ZN12MainViewBaseC1Ev+0x6b8>)
 8003bba:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204
        color = col;
 8003bbe:	f04f 33ff 	mov.w	r3, #4294967295
 8003bc2:	2001      	movs	r0, #1
        colorPressed = col;
 8003bc4:	e9c4 337d 	strd	r3, r3, [r4, #500]	; 0x1f4
    ba.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003bc8:	a91f      	add	r1, sp, #124	; 0x7c
 8003bca:	2305      	movs	r3, #5
 8003bcc:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003bd0:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
 8003bd4:	9805      	ldr	r0, [sp, #20]
 8003bd6:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003bda:	aa20      	add	r2, sp, #128	; 0x80
 8003bdc:	f00f fb1f 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003be0:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003be2:	2149      	movs	r1, #73	; 0x49
 8003be4:	428b      	cmp	r3, r1
 8003be6:	f8a4 1238 	strh.w	r1, [r4, #568]	; 0x238
 8003bea:	f240 8691 	bls.w	8004910 <_ZN12MainViewBaseC1Ev+0x12c0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bee:	4b41      	ldr	r3, [pc, #260]	; (8003cf4 <_ZN12MainViewBaseC1Ev+0x6a4>)
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	f000 86e6 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003bf8:	4a3f      	ldr	r2, [pc, #252]	; (8003cf8 <_ZN12MainViewBaseC1Ev+0x6a8>)
 8003bfa:	f893 0092 	ldrb.w	r0, [r3, #146]	; 0x92
 8003bfe:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003c00:	4b3e      	ldr	r3, [pc, #248]	; (8003cfc <_ZN12MainViewBaseC1Ev+0x6ac>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003c02:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003c06:	6818      	ldr	r0, [r3, #0]
 8003c08:	f002 febe 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003c0c:	f8db 3000 	ldr.w	r3, [fp]
 8003c10:	4601      	mov	r1, r0
 8003c12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c14:	9119      	str	r1, [sp, #100]	; 0x64
 8003c16:	4658      	mov	r0, fp
 8003c18:	4798      	blx	r3
 8003c1a:	f8db 3000 	ldr.w	r3, [fp]
 8003c1e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c22:	4607      	mov	r7, r0
 8003c24:	4658      	mov	r0, fp
 8003c26:	4798      	blx	r3
 8003c28:	f8db 3000 	ldr.w	r3, [fp]
 8003c2c:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003c2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c30:	fb17 f700 	smulbb	r7, r7, r0
 8003c34:	4658      	mov	r0, fp
 8003c36:	4798      	blx	r3
 8003c38:	b2ff      	uxtb	r7, r7
 8003c3a:	4438      	add	r0, r7
 8003c3c:	f884 0245 	strb.w	r0, [r4, #581]	; 0x245
 8003c40:	4a32      	ldr	r2, [pc, #200]	; (8003d0c <_ZN12MainViewBaseC1Ev+0x6bc>)
 8003c42:	f8c4 224c 	str.w	r2, [r4, #588]	; 0x24c
        color = col;
 8003c46:	f04f 33ff 	mov.w	r3, #4294967295
 8003c4a:	2001      	movs	r0, #1
        colorPressed = col;
 8003c4c:	e9c4 338f 	strd	r3, r3, [r4, #572]	; 0x23c
    b9.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003c50:	a91f      	add	r1, sp, #124	; 0x7c
 8003c52:	2305      	movs	r3, #5
 8003c54:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003c58:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 8003c5c:	9806      	ldr	r0, [sp, #24]
 8003c5e:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003c62:	aa20      	add	r2, sp, #128	; 0x80
 8003c64:	f00f fadb 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003c68:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003c6a:	214b      	movs	r1, #75	; 0x4b
 8003c6c:	428b      	cmp	r3, r1
 8003c6e:	f8a4 1280 	strh.w	r1, [r4, #640]	; 0x280
 8003c72:	f240 8652 	bls.w	800491a <_ZN12MainViewBaseC1Ev+0x12ca>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c76:	4b1f      	ldr	r3, [pc, #124]	; (8003cf4 <_ZN12MainViewBaseC1Ev+0x6a4>)
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	f000 86a2 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003c80:	4a1d      	ldr	r2, [pc, #116]	; (8003cf8 <_ZN12MainViewBaseC1Ev+0x6a8>)
 8003c82:	f893 0096 	ldrb.w	r0, [r3, #150]	; 0x96
 8003c86:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003c88:	4b1c      	ldr	r3, [pc, #112]	; (8003cfc <_ZN12MainViewBaseC1Ev+0x6ac>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003c8a:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003c8e:	6818      	ldr	r0, [r3, #0]
 8003c90:	f002 fe7a 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003c94:	f8db 3000 	ldr.w	r3, [fp]
 8003c98:	4601      	mov	r1, r0
 8003c9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c9c:	9119      	str	r1, [sp, #100]	; 0x64
 8003c9e:	4658      	mov	r0, fp
 8003ca0:	4798      	blx	r3
 8003ca2:	f8db 3000 	ldr.w	r3, [fp]
 8003ca6:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003ca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003caa:	4607      	mov	r7, r0
 8003cac:	4658      	mov	r0, fp
 8003cae:	4798      	blx	r3
 8003cb0:	f8db 3000 	ldr.w	r3, [fp]
 8003cb4:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003cb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cb8:	fb17 f700 	smulbb	r7, r7, r0
 8003cbc:	4658      	mov	r0, fp
 8003cbe:	4798      	blx	r3
 8003cc0:	b2ff      	uxtb	r7, r7
 8003cc2:	4438      	add	r0, r7
 8003cc4:	f884 028d 	strb.w	r0, [r4, #653]	; 0x28d
 8003cc8:	4a11      	ldr	r2, [pc, #68]	; (8003d10 <_ZN12MainViewBaseC1Ev+0x6c0>)
 8003cca:	f8c4 2294 	str.w	r2, [r4, #660]	; 0x294
        color = col;
 8003cce:	f04f 33ff 	mov.w	r3, #4294967295
 8003cd2:	2001      	movs	r0, #1
        colorPressed = col;
 8003cd4:	e9c4 33a1 	strd	r3, r3, [r4, #644]	; 0x284
    b8.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003cd8:	a91f      	add	r1, sp, #124	; 0x7c
 8003cda:	2305      	movs	r3, #5
 8003cdc:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003ce0:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
 8003ce4:	9807      	ldr	r0, [sp, #28]
 8003ce6:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003cea:	e013      	b.n	8003d14 <_ZN12MainViewBaseC1Ev+0x6c4>
 8003cec:	003000b0 	.word	0x003000b0
 8003cf0:	00300080 	.word	0x00300080
 8003cf4:	20002cdc 	.word	0x20002cdc
 8003cf8:	20002ce4 	.word	0x20002ce4
 8003cfc:	20002ce8 	.word	0x20002ce8
 8003d00:	00300050 	.word	0x00300050
 8003d04:	006000e0 	.word	0x006000e0
 8003d08:	006000b0 	.word	0x006000b0
 8003d0c:	00600080 	.word	0x00600080
 8003d10:	00600050 	.word	0x00600050
 8003d14:	aa20      	add	r2, sp, #128	; 0x80
 8003d16:	f00f fa82 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003d1a:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003d1c:	214c      	movs	r1, #76	; 0x4c
 8003d1e:	428b      	cmp	r3, r1
 8003d20:	f8a4 12c8 	strh.w	r1, [r4, #712]	; 0x2c8
 8003d24:	f240 85fe 	bls.w	8004924 <_ZN12MainViewBaseC1Ev+0x12d4>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d28:	4bbe      	ldr	r3, [pc, #760]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	f000 8649 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003d32:	4abd      	ldr	r2, [pc, #756]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003d34:	f893 0098 	ldrb.w	r0, [r3, #152]	; 0x98
 8003d38:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003d3a:	4bbc      	ldr	r3, [pc, #752]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003d3c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003d40:	6818      	ldr	r0, [r3, #0]
 8003d42:	f002 fe21 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003d46:	f8db 3000 	ldr.w	r3, [fp]
 8003d4a:	4601      	mov	r1, r0
 8003d4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003d4e:	9119      	str	r1, [sp, #100]	; 0x64
 8003d50:	4658      	mov	r0, fp
 8003d52:	4798      	blx	r3
 8003d54:	f8db 3000 	ldr.w	r3, [fp]
 8003d58:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003d5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d5c:	4607      	mov	r7, r0
 8003d5e:	4658      	mov	r0, fp
 8003d60:	4798      	blx	r3
 8003d62:	f8db 3000 	ldr.w	r3, [fp]
 8003d66:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003d68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d6a:	fb17 f700 	smulbb	r7, r7, r0
 8003d6e:	4658      	mov	r0, fp
 8003d70:	4798      	blx	r3
 8003d72:	b2ff      	uxtb	r7, r7
 8003d74:	4438      	add	r0, r7
 8003d76:	f884 02d5 	strb.w	r0, [r4, #725]	; 0x2d5
 8003d7a:	4aad      	ldr	r2, [pc, #692]	; (8004030 <_ZN12MainViewBaseC1Ev+0x9e0>)
 8003d7c:	f8c4 22dc 	str.w	r2, [r4, #732]	; 0x2dc
        color = col;
 8003d80:	f04f 33ff 	mov.w	r3, #4294967295
 8003d84:	2001      	movs	r0, #1
        colorPressed = col;
 8003d86:	e9c4 33b3 	strd	r3, r3, [r4, #716]	; 0x2cc
    b7.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003d8a:	a91f      	add	r1, sp, #124	; 0x7c
 8003d8c:	2305      	movs	r3, #5
 8003d8e:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003d92:	f8c4 52b8 	str.w	r5, [r4, #696]	; 0x2b8
 8003d96:	9808      	ldr	r0, [sp, #32]
 8003d98:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003d9c:	aa20      	add	r2, sp, #128	; 0x80
 8003d9e:	f00f fa3e 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003da2:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003da4:	214d      	movs	r1, #77	; 0x4d
 8003da6:	428b      	cmp	r3, r1
 8003da8:	f8a4 1310 	strh.w	r1, [r4, #784]	; 0x310
 8003dac:	f240 85bf 	bls.w	800492e <_ZN12MainViewBaseC1Ev+0x12de>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003db0:	4b9c      	ldr	r3, [pc, #624]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003db2:	681b      	ldr	r3, [r3, #0]
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	f000 8605 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003dba:	4a9b      	ldr	r2, [pc, #620]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003dbc:	f893 009a 	ldrb.w	r0, [r3, #154]	; 0x9a
 8003dc0:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003dc2:	4b9a      	ldr	r3, [pc, #616]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003dc4:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003dc8:	6818      	ldr	r0, [r3, #0]
 8003dca:	f002 fddd 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003dce:	f8db 3000 	ldr.w	r3, [fp]
 8003dd2:	4601      	mov	r1, r0
 8003dd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003dd6:	9119      	str	r1, [sp, #100]	; 0x64
 8003dd8:	4658      	mov	r0, fp
 8003dda:	4798      	blx	r3
 8003ddc:	f8db 3000 	ldr.w	r3, [fp]
 8003de0:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003de2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003de4:	4607      	mov	r7, r0
 8003de6:	4658      	mov	r0, fp
 8003de8:	4798      	blx	r3
 8003dea:	f8db 3000 	ldr.w	r3, [fp]
 8003dee:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003df0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003df2:	fb17 f700 	smulbb	r7, r7, r0
 8003df6:	4658      	mov	r0, fp
 8003df8:	4798      	blx	r3
 8003dfa:	b2ff      	uxtb	r7, r7
 8003dfc:	4438      	add	r0, r7
 8003dfe:	f884 031d 	strb.w	r0, [r4, #797]	; 0x31d
 8003e02:	4a8c      	ldr	r2, [pc, #560]	; (8004034 <_ZN12MainViewBaseC1Ev+0x9e4>)
 8003e04:	f8c4 2324 	str.w	r2, [r4, #804]	; 0x324
        color = col;
 8003e08:	f04f 33ff 	mov.w	r3, #4294967295
 8003e0c:	2001      	movs	r0, #1
        colorPressed = col;
 8003e0e:	e9c4 33c5 	strd	r3, r3, [r4, #788]	; 0x314
    b6.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003e12:	a91f      	add	r1, sp, #124	; 0x7c
 8003e14:	2305      	movs	r3, #5
 8003e16:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003e1a:	f8c4 5300 	str.w	r5, [r4, #768]	; 0x300
 8003e1e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e20:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003e24:	aa20      	add	r2, sp, #128	; 0x80
 8003e26:	f00f f9fa 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003e2a:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003e2c:	214e      	movs	r1, #78	; 0x4e
 8003e2e:	428b      	cmp	r3, r1
 8003e30:	f8a4 1358 	strh.w	r1, [r4, #856]	; 0x358
 8003e34:	f240 8580 	bls.w	8004938 <_ZN12MainViewBaseC1Ev+0x12e8>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e38:	4b7a      	ldr	r3, [pc, #488]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	f000 85c1 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003e42:	4a79      	ldr	r2, [pc, #484]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003e44:	f893 009c 	ldrb.w	r0, [r3, #156]	; 0x9c
 8003e48:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003e4a:	4b78      	ldr	r3, [pc, #480]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003e4c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003e50:	6818      	ldr	r0, [r3, #0]
 8003e52:	f002 fd99 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003e56:	f8db 3000 	ldr.w	r3, [fp]
 8003e5a:	4601      	mov	r1, r0
 8003e5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e5e:	9119      	str	r1, [sp, #100]	; 0x64
 8003e60:	4658      	mov	r0, fp
 8003e62:	4798      	blx	r3
 8003e64:	f8db 3000 	ldr.w	r3, [fp]
 8003e68:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003e6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e6c:	4607      	mov	r7, r0
 8003e6e:	4658      	mov	r0, fp
 8003e70:	4798      	blx	r3
 8003e72:	f8db 3000 	ldr.w	r3, [fp]
 8003e76:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003e78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e7a:	fb17 f700 	smulbb	r7, r7, r0
 8003e7e:	4658      	mov	r0, fp
 8003e80:	4798      	blx	r3
 8003e82:	b2ff      	uxtb	r7, r7
 8003e84:	4438      	add	r0, r7
 8003e86:	f884 0365 	strb.w	r0, [r4, #869]	; 0x365
 8003e8a:	4a6b      	ldr	r2, [pc, #428]	; (8004038 <_ZN12MainViewBaseC1Ev+0x9e8>)
 8003e8c:	f8c4 236c 	str.w	r2, [r4, #876]	; 0x36c
        color = col;
 8003e90:	f04f 33ff 	mov.w	r3, #4294967295
 8003e94:	2001      	movs	r0, #1
        colorPressed = col;
 8003e96:	e9c4 33d7 	strd	r3, r3, [r4, #860]	; 0x35c
    b5.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003e9a:	a91f      	add	r1, sp, #124	; 0x7c
 8003e9c:	2305      	movs	r3, #5
 8003e9e:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003ea2:	f8c4 5348 	str.w	r5, [r4, #840]	; 0x348
 8003ea6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ea8:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003eac:	aa20      	add	r2, sp, #128	; 0x80
 8003eae:	f00f f9b6 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003eb2:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003eb4:	214f      	movs	r1, #79	; 0x4f
 8003eb6:	428b      	cmp	r3, r1
 8003eb8:	f8a4 13a0 	strh.w	r1, [r4, #928]	; 0x3a0
 8003ebc:	f240 8541 	bls.w	8004942 <_ZN12MainViewBaseC1Ev+0x12f2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ec0:	4b58      	ldr	r3, [pc, #352]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	f000 857d 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003eca:	4a57      	ldr	r2, [pc, #348]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003ecc:	f893 009e 	ldrb.w	r0, [r3, #158]	; 0x9e
 8003ed0:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003ed2:	4b56      	ldr	r3, [pc, #344]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003ed4:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003ed8:	6818      	ldr	r0, [r3, #0]
 8003eda:	f002 fd55 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003ede:	f8db 3000 	ldr.w	r3, [fp]
 8003ee2:	4601      	mov	r1, r0
 8003ee4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ee6:	9119      	str	r1, [sp, #100]	; 0x64
 8003ee8:	4658      	mov	r0, fp
 8003eea:	4798      	blx	r3
 8003eec:	f8db 3000 	ldr.w	r3, [fp]
 8003ef0:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003ef2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ef4:	4607      	mov	r7, r0
 8003ef6:	4658      	mov	r0, fp
 8003ef8:	4798      	blx	r3
 8003efa:	f8db 3000 	ldr.w	r3, [fp]
 8003efe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f02:	fb17 f700 	smulbb	r7, r7, r0
 8003f06:	4658      	mov	r0, fp
 8003f08:	4798      	blx	r3
 8003f0a:	b2ff      	uxtb	r7, r7
 8003f0c:	4438      	add	r0, r7
 8003f0e:	f884 03ad 	strb.w	r0, [r4, #941]	; 0x3ad
 8003f12:	4a4a      	ldr	r2, [pc, #296]	; (800403c <_ZN12MainViewBaseC1Ev+0x9ec>)
 8003f14:	f8c4 23b4 	str.w	r2, [r4, #948]	; 0x3b4
        color = col;
 8003f18:	f04f 33ff 	mov.w	r3, #4294967295
 8003f1c:	2001      	movs	r0, #1
        colorPressed = col;
 8003f1e:	e9c4 33e9 	strd	r3, r3, [r4, #932]	; 0x3a4
    b4.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8003f22:	a91f      	add	r1, sp, #124	; 0x7c
 8003f24:	2305      	movs	r3, #5
 8003f26:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8003f2a:	f8c4 5390 	str.w	r5, [r4, #912]	; 0x390
 8003f2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f30:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003f34:	aa20      	add	r2, sp, #128	; 0x80
 8003f36:	f00f f972 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003f3a:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003f3c:	2150      	movs	r1, #80	; 0x50
 8003f3e:	428b      	cmp	r3, r1
 8003f40:	f8a4 13e8 	strh.w	r1, [r4, #1000]	; 0x3e8
 8003f44:	f240 8502 	bls.w	800494c <_ZN12MainViewBaseC1Ev+0x12fc>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f48:	4b36      	ldr	r3, [pc, #216]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	f000 8539 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003f52:	4a35      	ldr	r2, [pc, #212]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003f54:	f893 00a0 	ldrb.w	r0, [r3, #160]	; 0xa0
 8003f58:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003f5a:	4b34      	ldr	r3, [pc, #208]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003f5c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003f60:	6818      	ldr	r0, [r3, #0]
 8003f62:	f002 fd11 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003f66:	f8db 3000 	ldr.w	r3, [fp]
 8003f6a:	4601      	mov	r1, r0
 8003f6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f6e:	9119      	str	r1, [sp, #100]	; 0x64
 8003f70:	4658      	mov	r0, fp
 8003f72:	4798      	blx	r3
 8003f74:	f8db 3000 	ldr.w	r3, [fp]
 8003f78:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f7c:	4607      	mov	r7, r0
 8003f7e:	4658      	mov	r0, fp
 8003f80:	4798      	blx	r3
 8003f82:	f8db 3000 	ldr.w	r3, [fp]
 8003f86:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f8a:	fb17 f700 	smulbb	r7, r7, r0
 8003f8e:	4658      	mov	r0, fp
 8003f90:	4798      	blx	r3
 8003f92:	b2ff      	uxtb	r7, r7
 8003f94:	4438      	add	r0, r7
 8003f96:	f884 03f5 	strb.w	r0, [r4, #1013]	; 0x3f5
 8003f9a:	4a29      	ldr	r2, [pc, #164]	; (8004040 <_ZN12MainViewBaseC1Ev+0x9f0>)
 8003f9c:	f8c4 23fc 	str.w	r2, [r4, #1020]	; 0x3fc
        color = col;
 8003fa0:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8003fa4:	e9c4 33fb 	strd	r3, r3, [r4, #1004]	; 0x3ec
    b3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8003fa8:	a91f      	add	r1, sp, #124	; 0x7c
 8003faa:	2301      	movs	r3, #1
 8003fac:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003fae:	f8c4 53d8 	str.w	r5, [r4, #984]	; 0x3d8
 8003fb2:	aa20      	add	r2, sp, #128	; 0x80
 8003fb4:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 8003fb8:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003fbc:	f00f f92f 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8003fc0:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8003fc2:	2151      	movs	r1, #81	; 0x51
 8003fc4:	428b      	cmp	r3, r1
 8003fc6:	f8a4 1430 	strh.w	r1, [r4, #1072]	; 0x430
 8003fca:	f240 84c4 	bls.w	8004956 <_ZN12MainViewBaseC1Ev+0x1306>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fce:	4b15      	ldr	r3, [pc, #84]	; (8004024 <_ZN12MainViewBaseC1Ev+0x9d4>)
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	f000 84f6 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003fd8:	4a13      	ldr	r2, [pc, #76]	; (8004028 <_ZN12MainViewBaseC1Ev+0x9d8>)
 8003fda:	f893 00a2 	ldrb.w	r0, [r3, #162]	; 0xa2
 8003fde:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8003fe0:	4b12      	ldr	r3, [pc, #72]	; (800402c <_ZN12MainViewBaseC1Ev+0x9dc>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8003fe2:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8003fe6:	6818      	ldr	r0, [r3, #0]
 8003fe8:	f002 fcce 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003fec:	f8db 3000 	ldr.w	r3, [fp]
 8003ff0:	4601      	mov	r1, r0
 8003ff2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ff4:	9119      	str	r1, [sp, #100]	; 0x64
 8003ff6:	4658      	mov	r0, fp
 8003ff8:	4798      	blx	r3
 8003ffa:	f8db 3000 	ldr.w	r3, [fp]
 8003ffe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004000:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004002:	4607      	mov	r7, r0
 8004004:	4658      	mov	r0, fp
 8004006:	4798      	blx	r3
 8004008:	f8db 3000 	ldr.w	r3, [fp]
 800400c:	9919      	ldr	r1, [sp, #100]	; 0x64
 800400e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004010:	fb17 f700 	smulbb	r7, r7, r0
 8004014:	4658      	mov	r0, fp
 8004016:	4798      	blx	r3
 8004018:	b2ff      	uxtb	r7, r7
 800401a:	4438      	add	r0, r7
 800401c:	f884 043d 	strb.w	r0, [r4, #1085]	; 0x43d
 8004020:	e010      	b.n	8004044 <_ZN12MainViewBaseC1Ev+0x9f4>
 8004022:	bf00      	nop
 8004024:	20002cdc 	.word	0x20002cdc
 8004028:	20002ce4 	.word	0x20002ce4
 800402c:	20002ce8 	.word	0x20002ce8
 8004030:	009000e0 	.word	0x009000e0
 8004034:	009000b0 	.word	0x009000b0
 8004038:	00900080 	.word	0x00900080
 800403c:	00900050 	.word	0x00900050
 8004040:	00c000e0 	.word	0x00c000e0
        color = col;
 8004044:	f04f 33ff 	mov.w	r3, #4294967295
 8004048:	4ac2      	ldr	r2, [pc, #776]	; (8004354 <_ZN12MainViewBaseC1Ev+0xd04>)
 800404a:	f8c4 3434 	str.w	r3, [r4, #1076]	; 0x434
 800404e:	2001      	movs	r0, #1
        colorPressed = col;
 8004050:	f8c4 3438 	str.w	r3, [r4, #1080]	; 0x438
 8004054:	f8c4 2444 	str.w	r2, [r4, #1092]	; 0x444
 8004058:	2305      	movs	r3, #5
    b2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 800405a:	a91f      	add	r1, sp, #124	; 0x7c
 800405c:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8004060:	f8c4 5420 	str.w	r5, [r4, #1056]	; 0x420
 8004064:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004066:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 800406a:	aa20      	add	r2, sp, #128	; 0x80
 800406c:	f00f f8d7 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8004070:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004072:	2152      	movs	r1, #82	; 0x52
 8004074:	428b      	cmp	r3, r1
 8004076:	f8a4 1478 	strh.w	r1, [r4, #1144]	; 0x478
 800407a:	f240 8471 	bls.w	8004960 <_ZN12MainViewBaseC1Ev+0x1310>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800407e:	4bb6      	ldr	r3, [pc, #728]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	2b00      	cmp	r3, #0
 8004084:	f000 849e 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004088:	4ab4      	ldr	r2, [pc, #720]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 800408a:	f893 00a4 	ldrb.w	r0, [r3, #164]	; 0xa4
 800408e:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8004090:	4bb3      	ldr	r3, [pc, #716]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8004092:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004096:	6818      	ldr	r0, [r3, #0]
 8004098:	f002 fc76 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800409c:	f8db 3000 	ldr.w	r3, [fp]
 80040a0:	4601      	mov	r1, r0
 80040a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80040a4:	9119      	str	r1, [sp, #100]	; 0x64
 80040a6:	4658      	mov	r0, fp
 80040a8:	4798      	blx	r3
 80040aa:	f8db 3000 	ldr.w	r3, [fp]
 80040ae:	9919      	ldr	r1, [sp, #100]	; 0x64
 80040b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040b2:	4607      	mov	r7, r0
 80040b4:	4658      	mov	r0, fp
 80040b6:	4798      	blx	r3
 80040b8:	f8db 3000 	ldr.w	r3, [fp]
 80040bc:	9919      	ldr	r1, [sp, #100]	; 0x64
 80040be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040c0:	fb17 f700 	smulbb	r7, r7, r0
 80040c4:	4658      	mov	r0, fp
 80040c6:	4798      	blx	r3
 80040c8:	b2ff      	uxtb	r7, r7
 80040ca:	4438      	add	r0, r7
 80040cc:	f884 0485 	strb.w	r0, [r4, #1157]	; 0x485
        color = col;
 80040d0:	f04f 33ff 	mov.w	r3, #4294967295
 80040d4:	4aa3      	ldr	r2, [pc, #652]	; (8004364 <_ZN12MainViewBaseC1Ev+0xd14>)
 80040d6:	f8c4 347c 	str.w	r3, [r4, #1148]	; 0x47c
        colorPressed = col;
 80040da:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
 80040de:	f8c4 248c 	str.w	r2, [r4, #1164]	; 0x48c
 80040e2:	2301      	movs	r3, #1
    b1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 80040e4:	a91f      	add	r1, sp, #124	; 0x7c
 80040e6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80040e8:	f8c4 5468 	str.w	r5, [r4, #1128]	; 0x468
 80040ec:	aa20      	add	r2, sp, #128	; 0x80
 80040ee:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 80040f2:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80040f6:	f00f f892 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80040fa:	8833      	ldrh	r3, [r6, #0]
class TypedText
 80040fc:	2153      	movs	r1, #83	; 0x53
 80040fe:	428b      	cmp	r3, r1
 8004100:	f8a4 14c0 	strh.w	r1, [r4, #1216]	; 0x4c0
 8004104:	f240 8431 	bls.w	800496a <_ZN12MainViewBaseC1Ev+0x131a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004108:	4b93      	ldr	r3, [pc, #588]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	2b00      	cmp	r3, #0
 800410e:	f000 8459 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004112:	4a92      	ldr	r2, [pc, #584]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 8004114:	f893 00a6 	ldrb.w	r0, [r3, #166]	; 0xa6
 8004118:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800411a:	4b91      	ldr	r3, [pc, #580]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800411c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004120:	6818      	ldr	r0, [r3, #0]
 8004122:	f002 fc31 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8004126:	f8db 3000 	ldr.w	r3, [fp]
 800412a:	4601      	mov	r1, r0
 800412c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800412e:	9119      	str	r1, [sp, #100]	; 0x64
 8004130:	4658      	mov	r0, fp
 8004132:	4798      	blx	r3
 8004134:	f8db 3000 	ldr.w	r3, [fp]
 8004138:	9919      	ldr	r1, [sp, #100]	; 0x64
 800413a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800413c:	4607      	mov	r7, r0
 800413e:	4658      	mov	r0, fp
 8004140:	4798      	blx	r3
 8004142:	f8db 3000 	ldr.w	r3, [fp]
 8004146:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004148:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800414a:	fb17 f700 	smulbb	r7, r7, r0
 800414e:	4658      	mov	r0, fp
 8004150:	4798      	blx	r3
 8004152:	b2ff      	uxtb	r7, r7
 8004154:	4438      	add	r0, r7
 8004156:	f884 04cd 	strb.w	r0, [r4, #1229]	; 0x4cd
        color = col;
 800415a:	f04f 33ff 	mov.w	r3, #4294967295
 800415e:	4a82      	ldr	r2, [pc, #520]	; (8004368 <_ZN12MainViewBaseC1Ev+0xd18>)
 8004160:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        colorPressed = col;
 8004164:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
 8004168:	f8c4 24d4 	str.w	r2, [r4, #1236]	; 0x4d4
 800416c:	2301      	movs	r3, #1
    b0.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 800416e:	a91f      	add	r1, sp, #124	; 0x7c
 8004170:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004172:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
 8004176:	aa20      	add	r2, sp, #128	; 0x80
 8004178:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 800417c:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004180:	f00f f84d 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8004184:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004186:	214a      	movs	r1, #74	; 0x4a
 8004188:	428b      	cmp	r3, r1
 800418a:	f8a4 1508 	strh.w	r1, [r4, #1288]	; 0x508
 800418e:	f240 83f1 	bls.w	8004974 <_ZN12MainViewBaseC1Ev+0x1324>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004192:	4b71      	ldr	r3, [pc, #452]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	2b00      	cmp	r3, #0
 8004198:	f000 8414 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 800419c:	4a6f      	ldr	r2, [pc, #444]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 800419e:	f893 0094 	ldrb.w	r0, [r3, #148]	; 0x94
 80041a2:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80041a4:	4b6e      	ldr	r3, [pc, #440]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80041a6:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80041aa:	6818      	ldr	r0, [r3, #0]
 80041ac:	f002 fbec 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80041b0:	f8db 3000 	ldr.w	r3, [fp]
 80041b4:	4601      	mov	r1, r0
 80041b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041b8:	9119      	str	r1, [sp, #100]	; 0x64
 80041ba:	4658      	mov	r0, fp
 80041bc:	4798      	blx	r3
 80041be:	f8db 3000 	ldr.w	r3, [fp]
 80041c2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80041c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041c6:	4607      	mov	r7, r0
 80041c8:	4658      	mov	r0, fp
 80041ca:	4798      	blx	r3
 80041cc:	f8db 3000 	ldr.w	r3, [fp]
 80041d0:	9919      	ldr	r1, [sp, #100]	; 0x64
 80041d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041d4:	fb17 f700 	smulbb	r7, r7, r0
 80041d8:	4658      	mov	r0, fp
 80041da:	4798      	blx	r3
 80041dc:	b2ff      	uxtb	r7, r7
 80041de:	4438      	add	r0, r7
 80041e0:	f884 0515 	strb.w	r0, [r4, #1301]	; 0x515
        color = col;
 80041e4:	f04f 33ff 	mov.w	r3, #4294967295
 80041e8:	2250      	movs	r2, #80	; 0x50
 80041ea:	200a      	movs	r0, #10
 80041ec:	f8c4 350c 	str.w	r3, [r4, #1292]	; 0x50c
        colorPressed = col;
 80041f0:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 80041f4:	f8c4 2520 	str.w	r2, [r4, #1312]	; 0x520
 80041f8:	230b      	movs	r3, #11
    ret.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80041fa:	a91f      	add	r1, sp, #124	; 0x7c
 80041fc:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8004200:	f8c4 54f8 	str.w	r5, [r4, #1272]	; 0x4f8
 8004204:	ee18 0a10 	vmov	r0, s16
 8004208:	aa20      	add	r2, sp, #128	; 0x80
 800420a:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 800420e:	f00f f806 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8004212:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004214:	2143      	movs	r1, #67	; 0x43
 8004216:	428b      	cmp	r3, r1
 8004218:	f8a4 1554 	strh.w	r1, [r4, #1364]	; 0x554
 800421c:	f240 83ae 	bls.w	800497c <_ZN12MainViewBaseC1Ev+0x132c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004220:	4b4d      	ldr	r3, [pc, #308]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	2b00      	cmp	r3, #0
 8004226:	f000 83cd 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 800422a:	4a4c      	ldr	r2, [pc, #304]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 800422c:	f893 0086 	ldrb.w	r0, [r3, #134]	; 0x86
 8004230:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8004232:	4b4b      	ldr	r3, [pc, #300]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8004234:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004238:	6818      	ldr	r0, [r3, #0]
 800423a:	f002 fba5 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800423e:	f8db 3000 	ldr.w	r3, [fp]
 8004242:	4601      	mov	r1, r0
 8004244:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004246:	9119      	str	r1, [sp, #100]	; 0x64
 8004248:	4658      	mov	r0, fp
 800424a:	4798      	blx	r3
 800424c:	f8db 3000 	ldr.w	r3, [fp]
 8004250:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004252:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004254:	4607      	mov	r7, r0
 8004256:	4658      	mov	r0, fp
 8004258:	4798      	blx	r3
 800425a:	f8db 3000 	ldr.w	r3, [fp]
 800425e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004262:	fb17 f700 	smulbb	r7, r7, r0
 8004266:	4658      	mov	r0, fp
 8004268:	4798      	blx	r3
 800426a:	b2ff      	uxtb	r7, r7
 800426c:	4438      	add	r0, r7
 800426e:	f884 0561 	strb.w	r0, [r4, #1377]	; 0x561
        color = col;
 8004272:	f04f 33ff 	mov.w	r3, #4294967295
 8004276:	2280      	movs	r2, #128	; 0x80
 8004278:	200a      	movs	r0, #10
 800427a:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
        colorPressed = col;
 800427e:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
 8004282:	f8c4 2568 	str.w	r2, [r4, #1384]	; 0x568
 8004286:	230b      	movs	r3, #11
    run.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8004288:	a91f      	add	r1, sp, #124	; 0x7c
 800428a:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 800428e:	f8c4 5544 	str.w	r5, [r4, #1348]	; 0x544
 8004292:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004294:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004298:	446a      	add	r2, sp
 800429a:	f00e ffc0 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800429e:	8833      	ldrh	r3, [r6, #0]
class TypedText
 80042a0:	2141      	movs	r1, #65	; 0x41
 80042a2:	428b      	cmp	r3, r1
 80042a4:	f8a4 159c 	strh.w	r1, [r4, #1436]	; 0x59c
 80042a8:	f240 836c 	bls.w	8004984 <_ZN12MainViewBaseC1Ev+0x1334>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80042ac:	4b2a      	ldr	r3, [pc, #168]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	f000 8387 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 80042b6:	4a29      	ldr	r2, [pc, #164]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 80042b8:	f893 0082 	ldrb.w	r0, [r3, #130]	; 0x82
 80042bc:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80042be:	4b28      	ldr	r3, [pc, #160]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80042c0:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80042c4:	6818      	ldr	r0, [r3, #0]
 80042c6:	f002 fb5f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80042ca:	f8db 3000 	ldr.w	r3, [fp]
 80042ce:	4601      	mov	r1, r0
 80042d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80042d2:	9119      	str	r1, [sp, #100]	; 0x64
 80042d4:	4658      	mov	r0, fp
 80042d6:	4798      	blx	r3
 80042d8:	f8db 3000 	ldr.w	r3, [fp]
 80042dc:	9919      	ldr	r1, [sp, #100]	; 0x64
 80042de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042e0:	4607      	mov	r7, r0
 80042e2:	4658      	mov	r0, fp
 80042e4:	4798      	blx	r3
 80042e6:	f8db 3000 	ldr.w	r3, [fp]
 80042ea:	9919      	ldr	r1, [sp, #100]	; 0x64
 80042ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042ee:	fb17 f700 	smulbb	r7, r7, r0
 80042f2:	4658      	mov	r0, fp
 80042f4:	4798      	blx	r3
 80042f6:	b2ff      	uxtb	r7, r7
 80042f8:	4438      	add	r0, r7
 80042fa:	f884 05a9 	strb.w	r0, [r4, #1449]	; 0x5a9
        color = col;
 80042fe:	f04f 33ff 	mov.w	r3, #4294967295
 8004302:	22b0      	movs	r2, #176	; 0xb0
 8004304:	200a      	movs	r0, #10
 8004306:	f8c4 35a0 	str.w	r3, [r4, #1440]	; 0x5a0
        colorPressed = col;
 800430a:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
 800430e:	f8c4 25b0 	str.w	r2, [r4, #1456]	; 0x5b0
 8004312:	230b      	movs	r3, #11
    store.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8004314:	a91f      	add	r1, sp, #124	; 0x7c
 8004316:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 800431a:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 800431e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004320:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004324:	aa20      	add	r2, sp, #128	; 0x80
 8004326:	f00e ff7a 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800432a:	8833      	ldrh	r3, [r6, #0]
class TypedText
 800432c:	2140      	movs	r1, #64	; 0x40
 800432e:	428b      	cmp	r3, r1
 8004330:	f8a4 15e4 	strh.w	r1, [r4, #1508]	; 0x5e4
 8004334:	f240 832a 	bls.w	800498c <_ZN12MainViewBaseC1Ev+0x133c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004338:	4b07      	ldr	r3, [pc, #28]	; (8004358 <_ZN12MainViewBaseC1Ev+0xd08>)
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	2b00      	cmp	r3, #0
 800433e:	f000 8341 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004342:	4a06      	ldr	r2, [pc, #24]	; (800435c <_ZN12MainViewBaseC1Ev+0xd0c>)
 8004344:	f893 0080 	ldrb.w	r0, [r3, #128]	; 0x80
 8004348:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800434a:	4b05      	ldr	r3, [pc, #20]	; (8004360 <_ZN12MainViewBaseC1Ev+0xd10>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800434c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004350:	6818      	ldr	r0, [r3, #0]
 8004352:	e00b      	b.n	800436c <_ZN12MainViewBaseC1Ev+0xd1c>
 8004354:	00c000b0 	.word	0x00c000b0
 8004358:	20002cdc 	.word	0x20002cdc
 800435c:	20002ce4 	.word	0x20002ce4
 8004360:	20002ce8 	.word	0x20002ce8
 8004364:	00c00080 	.word	0x00c00080
 8004368:	00c00050 	.word	0x00c00050
 800436c:	f002 fb0c 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8004370:	f8db 3000 	ldr.w	r3, [fp]
 8004374:	4601      	mov	r1, r0
 8004376:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004378:	9119      	str	r1, [sp, #100]	; 0x64
 800437a:	4658      	mov	r0, fp
 800437c:	4798      	blx	r3
 800437e:	f8db 3000 	ldr.w	r3, [fp]
 8004382:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004384:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004386:	4607      	mov	r7, r0
 8004388:	4658      	mov	r0, fp
 800438a:	4798      	blx	r3
 800438c:	f8db 3000 	ldr.w	r3, [fp]
 8004390:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004392:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004394:	fb17 f700 	smulbb	r7, r7, r0
 8004398:	4658      	mov	r0, fp
 800439a:	4798      	blx	r3
 800439c:	b2ff      	uxtb	r7, r7
 800439e:	4438      	add	r0, r7
 80043a0:	f884 05f1 	strb.w	r0, [r4, #1521]	; 0x5f1
        color = col;
 80043a4:	f04f 33ff 	mov.w	r3, #4294967295
 80043a8:	22e0      	movs	r2, #224	; 0xe0
 80043aa:	200a      	movs	r0, #10
 80043ac:	f8c4 35e8 	str.w	r3, [r4, #1512]	; 0x5e8
        colorPressed = col;
 80043b0:	f8c4 35ec 	str.w	r3, [r4, #1516]	; 0x5ec
 80043b4:	f8c4 25f8 	str.w	r2, [r4, #1528]	; 0x5f8
 80043b8:	230b      	movs	r3, #11
    load.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80043ba:	a91f      	add	r1, sp, #124	; 0x7c
 80043bc:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 80043c0:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 80043c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80043c6:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80043ca:	aa20      	add	r2, sp, #128	; 0x80
 80043cc:	f00e ff27 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80043d0:	8833      	ldrh	r3, [r6, #0]
class TypedText
 80043d2:	213f      	movs	r1, #63	; 0x3f
 80043d4:	428b      	cmp	r3, r1
 80043d6:	f8a4 162c 	strh.w	r1, [r4, #1580]	; 0x62c
 80043da:	f240 82db 	bls.w	8004994 <_ZN12MainViewBaseC1Ev+0x1344>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043de:	4bbf      	ldr	r3, [pc, #764]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	f000 82ee 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 80043e8:	4abd      	ldr	r2, [pc, #756]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 80043ea:	f893 007e 	ldrb.w	r0, [r3, #126]	; 0x7e
 80043ee:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80043f0:	4bbc      	ldr	r3, [pc, #752]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80043f2:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80043f6:	6818      	ldr	r0, [r3, #0]
 80043f8:	f002 fac6 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80043fc:	f8db 3000 	ldr.w	r3, [fp]
 8004400:	4601      	mov	r1, r0
 8004402:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004404:	9119      	str	r1, [sp, #100]	; 0x64
 8004406:	4658      	mov	r0, fp
 8004408:	4798      	blx	r3
 800440a:	f8db 3000 	ldr.w	r3, [fp]
 800440e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004410:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004412:	4607      	mov	r7, r0
 8004414:	4658      	mov	r0, fp
 8004416:	4798      	blx	r3
 8004418:	f8db 3000 	ldr.w	r3, [fp]
 800441c:	9919      	ldr	r1, [sp, #100]	; 0x64
 800441e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004420:	fb17 f700 	smulbb	r7, r7, r0
 8004424:	4658      	mov	r0, fp
 8004426:	4798      	blx	r3
 8004428:	b2ff      	uxtb	r7, r7
 800442a:	4438      	add	r0, r7
 800442c:	f884 0639 	strb.w	r0, [r4, #1593]	; 0x639
        color = col;
 8004430:	f04f 33ff 	mov.w	r3, #4294967295
 8004434:	f44f 7288 	mov.w	r2, #272	; 0x110
 8004438:	200a      	movs	r0, #10
 800443a:	f8c4 3630 	str.w	r3, [r4, #1584]	; 0x630
        colorPressed = col;
 800443e:	f8c4 3634 	str.w	r3, [r4, #1588]	; 0x634
 8004442:	f8c4 2640 	str.w	r2, [r4, #1600]	; 0x640
 8004446:	230b      	movs	r3, #11
    reset.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8004448:	a91f      	add	r1, sp, #124	; 0x7c
 800444a:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 800444e:	f8c4 561c 	str.w	r5, [r4, #1564]	; 0x61c
 8004452:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004454:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004458:	aa20      	add	r2, sp, #128	; 0x80
 800445a:	f00e fee0 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800445e:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004460:	213e      	movs	r1, #62	; 0x3e
 8004462:	428b      	cmp	r3, r1
 8004464:	f8a4 1674 	strh.w	r1, [r4, #1652]	; 0x674
 8004468:	f240 8298 	bls.w	800499c <_ZN12MainViewBaseC1Ev+0x134c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800446c:	4b9b      	ldr	r3, [pc, #620]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	2b00      	cmp	r3, #0
 8004472:	f000 82a7 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004476:	4a9a      	ldr	r2, [pc, #616]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 8004478:	f893 007c 	ldrb.w	r0, [r3, #124]	; 0x7c
 800447c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800447e:	4b99      	ldr	r3, [pc, #612]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8004480:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004484:	6818      	ldr	r0, [r3, #0]
 8004486:	f002 fa7f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800448a:	f8db 3000 	ldr.w	r3, [fp]
 800448e:	4601      	mov	r1, r0
 8004490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004492:	9119      	str	r1, [sp, #100]	; 0x64
 8004494:	4658      	mov	r0, fp
 8004496:	4798      	blx	r3
 8004498:	f8db 3000 	ldr.w	r3, [fp]
 800449c:	9919      	ldr	r1, [sp, #100]	; 0x64
 800449e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044a0:	4607      	mov	r7, r0
 80044a2:	4658      	mov	r0, fp
 80044a4:	4798      	blx	r3
 80044a6:	f8db 3000 	ldr.w	r3, [fp]
 80044aa:	9919      	ldr	r1, [sp, #100]	; 0x64
 80044ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044ae:	fb17 f700 	smulbb	r7, r7, r0
 80044b2:	4658      	mov	r0, fp
 80044b4:	4798      	blx	r3
 80044b6:	b2ff      	uxtb	r7, r7
 80044b8:	4438      	add	r0, r7
 80044ba:	f884 0681 	strb.w	r0, [r4, #1665]	; 0x681
        color = col;
 80044be:	f04f 33ff 	mov.w	r3, #4294967295
 80044c2:	4a89      	ldr	r2, [pc, #548]	; (80046e8 <_ZN12MainViewBaseC1Ev+0x1098>)
 80044c4:	f8c4 3678 	str.w	r3, [r4, #1656]	; 0x678
 80044c8:	200a      	movs	r0, #10
        colorPressed = col;
 80044ca:	f8c4 367c 	str.w	r3, [r4, #1660]	; 0x67c
 80044ce:	f8c4 2688 	str.w	r2, [r4, #1672]	; 0x688
 80044d2:	230b      	movs	r3, #11
    adrs.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80044d4:	a91f      	add	r1, sp, #124	; 0x7c
 80044d6:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 80044da:	f8c4 5664 	str.w	r5, [r4, #1636]	; 0x664
 80044de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044e0:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80044e4:	aa20      	add	r2, sp, #128	; 0x80
 80044e6:	f00e fe9a 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80044ea:	8833      	ldrh	r3, [r6, #0]
class TypedText
 80044ec:	213d      	movs	r1, #61	; 0x3d
 80044ee:	428b      	cmp	r3, r1
 80044f0:	f8a4 16bc 	strh.w	r1, [r4, #1724]	; 0x6bc
 80044f4:	f240 8256 	bls.w	80049a4 <_ZN12MainViewBaseC1Ev+0x1354>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044f8:	4b78      	ldr	r3, [pc, #480]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	f000 8261 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004502:	4a77      	ldr	r2, [pc, #476]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 8004504:	f893 007a 	ldrb.w	r0, [r3, #122]	; 0x7a
 8004508:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800450a:	4b76      	ldr	r3, [pc, #472]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800450c:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004510:	6818      	ldr	r0, [r3, #0]
 8004512:	f002 fa39 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8004516:	f8db 3000 	ldr.w	r3, [fp]
 800451a:	4601      	mov	r1, r0
 800451c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800451e:	9119      	str	r1, [sp, #100]	; 0x64
 8004520:	4658      	mov	r0, fp
 8004522:	4798      	blx	r3
 8004524:	f8db 3000 	ldr.w	r3, [fp]
 8004528:	9919      	ldr	r1, [sp, #100]	; 0x64
 800452a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800452c:	4607      	mov	r7, r0
 800452e:	4658      	mov	r0, fp
 8004530:	4798      	blx	r3
 8004532:	f8db 3000 	ldr.w	r3, [fp]
 8004536:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800453a:	fb17 f700 	smulbb	r7, r7, r0
 800453e:	4658      	mov	r0, fp
 8004540:	4798      	blx	r3
 8004542:	b2ff      	uxtb	r7, r7
 8004544:	4438      	add	r0, r7
 8004546:	f884 06c9 	strb.w	r0, [r4, #1737]	; 0x6c9
        color = col;
 800454a:	f04f 33ff 	mov.w	r3, #4294967295
 800454e:	4a67      	ldr	r2, [pc, #412]	; (80046ec <_ZN12MainViewBaseC1Ev+0x109c>)
 8004550:	f8c4 36c0 	str.w	r3, [r4, #1728]	; 0x6c0
 8004554:	200a      	movs	r0, #10
        colorPressed = col;
 8004556:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
 800455a:	f8c4 26d0 	str.w	r2, [r4, #1744]	; 0x6d0
 800455e:	230b      	movs	r3, #11
    read_incr.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8004560:	a91f      	add	r1, sp, #124	; 0x7c
 8004562:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 8004566:	f8c4 56ac 	str.w	r5, [r4, #1708]	; 0x6ac
 800456a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800456c:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004570:	aa20      	add	r2, sp, #128	; 0x80
 8004572:	f00e fe54 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8004576:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004578:	213c      	movs	r1, #60	; 0x3c
 800457a:	428b      	cmp	r3, r1
 800457c:	f8a4 1704 	strh.w	r1, [r4, #1796]	; 0x704
 8004580:	f240 8214 	bls.w	80049ac <_ZN12MainViewBaseC1Ev+0x135c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004584:	4b55      	ldr	r3, [pc, #340]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	2b00      	cmp	r3, #0
 800458a:	f000 821b 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 800458e:	4a54      	ldr	r2, [pc, #336]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 8004590:	f893 0078 	ldrb.w	r0, [r3, #120]	; 0x78
 8004594:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8004596:	4b53      	ldr	r3, [pc, #332]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8004598:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800459c:	6818      	ldr	r0, [r3, #0]
 800459e:	f002 f9f3 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80045a2:	f8db 3000 	ldr.w	r3, [fp]
 80045a6:	4601      	mov	r1, r0
 80045a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80045aa:	9119      	str	r1, [sp, #100]	; 0x64
 80045ac:	4658      	mov	r0, fp
 80045ae:	4798      	blx	r3
 80045b0:	f8db 3000 	ldr.w	r3, [fp]
 80045b4:	9919      	ldr	r1, [sp, #100]	; 0x64
 80045b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045b8:	4607      	mov	r7, r0
 80045ba:	4658      	mov	r0, fp
 80045bc:	4798      	blx	r3
 80045be:	f8db 3000 	ldr.w	r3, [fp]
 80045c2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80045c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045c6:	fb17 f700 	smulbb	r7, r7, r0
 80045ca:	4658      	mov	r0, fp
 80045cc:	4798      	blx	r3
 80045ce:	b2ff      	uxtb	r7, r7
 80045d0:	4438      	add	r0, r7
 80045d2:	f884 0711 	strb.w	r0, [r4, #1809]	; 0x711
        color = col;
 80045d6:	f04f 33ff 	mov.w	r3, #4294967295
 80045da:	4a45      	ldr	r2, [pc, #276]	; (80046f0 <_ZN12MainViewBaseC1Ev+0x10a0>)
 80045dc:	f8c4 3708 	str.w	r3, [r4, #1800]	; 0x708
 80045e0:	200a      	movs	r0, #10
        colorPressed = col;
 80045e2:	f8c4 370c 	str.w	r3, [r4, #1804]	; 0x70c
 80045e6:	f8c4 2718 	str.w	r2, [r4, #1816]	; 0x718
 80045ea:	230b      	movs	r3, #11
    read_decr.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80045ec:	a91f      	add	r1, sp, #124	; 0x7c
 80045ee:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 80045f2:	f8c4 56f4 	str.w	r5, [r4, #1780]	; 0x6f4
 80045f6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80045f8:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80045fc:	aa20      	add	r2, sp, #128	; 0x80
 80045fe:	f00e fe0e 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8004602:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004604:	213b      	movs	r1, #59	; 0x3b
 8004606:	428b      	cmp	r3, r1
 8004608:	f8a4 174c 	strh.w	r1, [r4, #1868]	; 0x74c
 800460c:	f240 81d2 	bls.w	80049b4 <_ZN12MainViewBaseC1Ev+0x1364>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004610:	4b32      	ldr	r3, [pc, #200]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	2b00      	cmp	r3, #0
 8004616:	f000 81d5 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 800461a:	4a31      	ldr	r2, [pc, #196]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 800461c:	f893 0076 	ldrb.w	r0, [r3, #118]	; 0x76
 8004620:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8004622:	4b30      	ldr	r3, [pc, #192]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8004624:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8004628:	6818      	ldr	r0, [r3, #0]
 800462a:	f002 f9ad 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800462e:	f8db 3000 	ldr.w	r3, [fp]
 8004632:	4601      	mov	r1, r0
 8004634:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004636:	9119      	str	r1, [sp, #100]	; 0x64
 8004638:	4658      	mov	r0, fp
 800463a:	4798      	blx	r3
 800463c:	f8db 3000 	ldr.w	r3, [fp]
 8004640:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004642:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004644:	4607      	mov	r7, r0
 8004646:	4658      	mov	r0, fp
 8004648:	4798      	blx	r3
 800464a:	f8db 3000 	ldr.w	r3, [fp]
 800464e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004652:	fb17 f700 	smulbb	r7, r7, r0
 8004656:	4658      	mov	r0, fp
 8004658:	4798      	blx	r3
 800465a:	b2ff      	uxtb	r7, r7
 800465c:	4438      	add	r0, r7
 800465e:	f884 0759 	strb.w	r0, [r4, #1881]	; 0x759
        color = col;
 8004662:	f04f 33ff 	mov.w	r3, #4294967295
 8004666:	4a23      	ldr	r2, [pc, #140]	; (80046f4 <_ZN12MainViewBaseC1Ev+0x10a4>)
 8004668:	f8c4 3750 	str.w	r3, [r4, #1872]	; 0x750
 800466c:	200a      	movs	r0, #10
        colorPressed = col;
 800466e:	f8c4 3754 	str.w	r3, [r4, #1876]	; 0x754
 8004672:	f8c4 2760 	str.w	r2, [r4, #1888]	; 0x760
 8004676:	230b      	movs	r3, #11
    write_incr.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8004678:	a91f      	add	r1, sp, #124	; 0x7c
 800467a:	f8ad 007c 	strh.w	r0, [sp, #124]	; 0x7c
 800467e:	f8c4 573c 	str.w	r5, [r4, #1852]	; 0x73c
 8004682:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004684:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004688:	aa20      	add	r2, sp, #128	; 0x80
 800468a:	f00e fdc8 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800468e:	8833      	ldrh	r3, [r6, #0]
class TypedText
 8004690:	213a      	movs	r1, #58	; 0x3a
 8004692:	428b      	cmp	r3, r1
 8004694:	f8a4 1794 	strh.w	r1, [r4, #1940]	; 0x794
 8004698:	f240 8190 	bls.w	80049bc <_ZN12MainViewBaseC1Ev+0x136c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800469c:	4b0f      	ldr	r3, [pc, #60]	; (80046dc <_ZN12MainViewBaseC1Ev+0x108c>)
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	f000 818f 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 80046a6:	4a0e      	ldr	r2, [pc, #56]	; (80046e0 <_ZN12MainViewBaseC1Ev+0x1090>)
 80046a8:	f893 0074 	ldrb.w	r0, [r3, #116]	; 0x74
 80046ac:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80046ae:	4b0d      	ldr	r3, [pc, #52]	; (80046e4 <_ZN12MainViewBaseC1Ev+0x1094>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80046b0:	f852 7020 	ldr.w	r7, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80046b4:	6818      	ldr	r0, [r3, #0]
 80046b6:	f002 f967 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80046ba:	683b      	ldr	r3, [r7, #0]
 80046bc:	4601      	mov	r1, r0
 80046be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80046c0:	9119      	str	r1, [sp, #100]	; 0x64
 80046c2:	4638      	mov	r0, r7
 80046c4:	4798      	blx	r3
 80046c6:	683b      	ldr	r3, [r7, #0]
 80046c8:	9919      	ldr	r1, [sp, #100]	; 0x64
 80046ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046cc:	4606      	mov	r6, r0
 80046ce:	4638      	mov	r0, r7
 80046d0:	4798      	blx	r3
 80046d2:	683b      	ldr	r3, [r7, #0]
 80046d4:	9919      	ldr	r1, [sp, #100]	; 0x64
 80046d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046d8:	e00e      	b.n	80046f8 <_ZN12MainViewBaseC1Ev+0x10a8>
 80046da:	bf00      	nop
 80046dc:	20002cdc 	.word	0x20002cdc
 80046e0:	20002ce4 	.word	0x20002ce4
 80046e4:	20002ce8 	.word	0x20002ce8
 80046e8:	00300110 	.word	0x00300110
 80046ec:	00600110 	.word	0x00600110
 80046f0:	00900110 	.word	0x00900110
 80046f4:	00c00110 	.word	0x00c00110
 80046f8:	fb16 f600 	smulbb	r6, r6, r0
 80046fc:	4638      	mov	r0, r7
 80046fe:	4798      	blx	r3
 8004700:	b2f6      	uxtb	r6, r6
 8004702:	4430      	add	r0, r6
 8004704:	f884 07a1 	strb.w	r0, [r4, #1953]	; 0x7a1
        color = col;
 8004708:	f04f 33ff 	mov.w	r3, #4294967295
 800470c:	4ab0      	ldr	r2, [pc, #704]	; (80049d0 <_ZN12MainViewBaseC1Ev+0x1380>)
 800470e:	f8c4 5784 	str.w	r5, [r4, #1924]	; 0x784
    setting.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8004712:	ee18 0a90 	vmov	r0, s17
 8004716:	f8c4 3798 	str.w	r3, [r4, #1944]	; 0x798
        colorPressed = col;
 800471a:	f8c4 379c 	str.w	r3, [r4, #1948]	; 0x79c
 800471e:	f8c4 27a8 	str.w	r2, [r4, #1960]	; 0x7a8
 8004722:	2304      	movs	r3, #4
 8004724:	aa20      	add	r2, sp, #128	; 0x80
 8004726:	a91f      	add	r1, sp, #124	; 0x7c
 8004728:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 800472c:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
    toggleButton1.setXY(14, 152);
 8004730:	f504 66fb 	add.w	r6, r4, #2008	; 0x7d8
    setting.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8004734:	f00e fd73 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004738:	230d      	movs	r3, #13
 800473a:	4aa6      	ldr	r2, [pc, #664]	; (80049d4 <_ZN12MainViewBaseC1Ev+0x1384>)
 800473c:	f8c4 57cc 	str.w	r5, [r4, #1996]	; 0x7cc
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004740:	a91f      	add	r1, sp, #124	; 0x7c
 8004742:	4630      	mov	r0, r6
 8004744:	f8c4 27dc 	str.w	r2, [r4, #2012]	; 0x7dc
        originalPressed = bitmapPressed;
 8004748:	f8a4 380c 	strh.w	r3, [r4, #2060]	; 0x80c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800474c:	aa20      	add	r2, sp, #128	; 0x80
 800474e:	250e      	movs	r5, #14
 8004750:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8004754:	f8ad 507c 	strh.w	r5, [sp, #124]	; 0x7c
 8004758:	f00e fd61 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800475c:	4b9e      	ldr	r3, [pc, #632]	; (80049d8 <_ZN12MainViewBaseC1Ev+0x1388>)
 800475e:	f8c4 3814 	str.w	r3, [r4, #2068]	; 0x814
        boundingArea = calculateBoundingArea();
 8004762:	ad1a      	add	r5, sp, #104	; 0x68
        color = newColor;
 8004764:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        linespace = space;
 8004768:	2300      	movs	r3, #0
        color = newColor;
 800476a:	f8c4 2840 	str.w	r2, [r4, #2112]	; 0x840
        linespace = space;
 800476e:	f8a4 3844 	strh.w	r3, [r4, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 8004772:	4628      	mov	r0, r5
 8004774:	4641      	mov	r1, r8
 8004776:	f00e fa75 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800477a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800477e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8004782:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    step.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4LNC));
 8004786:	aa20      	add	r2, sp, #128	; 0x80
        : typedTextId(id)
 8004788:	2339      	movs	r3, #57	; 0x39
        container.add(d);
 800478a:	1d25      	adds	r5, r4, #4
 800478c:	4611      	mov	r1, r2
 800478e:	4640      	mov	r0, r8
 8004790:	4a92      	ldr	r2, [pc, #584]	; (80049dc <_ZN12MainViewBaseC1Ev+0x138c>)
 8004792:	9220      	str	r2, [sp, #128]	; 0x80
 8004794:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8004798:	f00e fce6 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800479c:	4651      	mov	r1, sl
 800479e:	4628      	mov	r0, r5
 80047a0:	f00b fe14 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047a4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80047a6:	4628      	mov	r0, r5
 80047a8:	f00b fe10 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047ac:	4649      	mov	r1, r9
 80047ae:	4628      	mov	r0, r5
 80047b0:	f00b fe0c 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047b4:	9901      	ldr	r1, [sp, #4]
 80047b6:	4628      	mov	r0, r5
 80047b8:	f00b fe08 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047bc:	9902      	ldr	r1, [sp, #8]
 80047be:	4628      	mov	r0, r5
 80047c0:	f00b fe04 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047c4:	9903      	ldr	r1, [sp, #12]
 80047c6:	4628      	mov	r0, r5
 80047c8:	f00b fe00 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047cc:	9904      	ldr	r1, [sp, #16]
 80047ce:	4628      	mov	r0, r5
 80047d0:	f00b fdfc 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047d4:	9905      	ldr	r1, [sp, #20]
 80047d6:	4628      	mov	r0, r5
 80047d8:	f00b fdf8 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047dc:	9906      	ldr	r1, [sp, #24]
 80047de:	4628      	mov	r0, r5
 80047e0:	f00b fdf4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047e4:	9907      	ldr	r1, [sp, #28]
 80047e6:	4628      	mov	r0, r5
 80047e8:	f00b fdf0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047ec:	9908      	ldr	r1, [sp, #32]
 80047ee:	4628      	mov	r0, r5
 80047f0:	f00b fdec 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80047f6:	4628      	mov	r0, r5
 80047f8:	f00b fde8 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047fc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80047fe:	4628      	mov	r0, r5
 8004800:	f00b fde4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004804:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004806:	4628      	mov	r0, r5
 8004808:	f00b fde0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800480c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800480e:	4628      	mov	r0, r5
 8004810:	f00b fddc 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004814:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004816:	4628      	mov	r0, r5
 8004818:	f00b fdd8 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800481c:	990e      	ldr	r1, [sp, #56]	; 0x38
 800481e:	4628      	mov	r0, r5
 8004820:	f00b fdd4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004824:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004826:	4628      	mov	r0, r5
 8004828:	f00b fdd0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800482c:	ee18 1a10 	vmov	r1, s16
 8004830:	4628      	mov	r0, r5
 8004832:	f00b fdcb 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004836:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004838:	4628      	mov	r0, r5
 800483a:	f00b fdc7 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800483e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004840:	4628      	mov	r0, r5
 8004842:	f00b fdc3 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004846:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004848:	4628      	mov	r0, r5
 800484a:	f00b fdbf 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800484e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004850:	4628      	mov	r0, r5
 8004852:	f00b fdbb 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004856:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004858:	4628      	mov	r0, r5
 800485a:	f00b fdb7 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800485e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004860:	4628      	mov	r0, r5
 8004862:	f00b fdb3 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004866:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004868:	4628      	mov	r0, r5
 800486a:	f00b fdaf 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800486e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8004870:	4628      	mov	r0, r5
 8004872:	f00b fdab 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004876:	ee18 1a90 	vmov	r1, s17
 800487a:	4628      	mov	r0, r5
 800487c:	f00b fda6 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004880:	4631      	mov	r1, r6
 8004882:	4628      	mov	r0, r5
 8004884:	f00b fda2 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004888:	4628      	mov	r0, r5
 800488a:	4641      	mov	r1, r8
 800488c:	f00b fd9e 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004890:	4620      	mov	r0, r4
 8004892:	b023      	add	sp, #140	; 0x8c
 8004894:	ecbd 8b02 	vpop	{d8}
 8004898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800489c:	4b50      	ldr	r3, [pc, #320]	; (80049e0 <_ZN12MainViewBaseC1Ev+0x1390>)
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	f000 808f 	beq.w	80049c4 <_ZN12MainViewBaseC1Ev+0x1374>
        return fonts[typedTexts[typedTextId].fontIdx];
 80048a6:	4a4f      	ldr	r2, [pc, #316]	; (80049e4 <_ZN12MainViewBaseC1Ev+0x1394>)
 80048a8:	f893 008a 	ldrb.w	r0, [r3, #138]	; 0x8a
 80048ac:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80048ae:	4b4e      	ldr	r3, [pc, #312]	; (80049e8 <_ZN12MainViewBaseC1Ev+0x1398>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80048b0:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80048b4:	6818      	ldr	r0, [r3, #0]
 80048b6:	f002 f867 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80048ba:	f8db 3000 	ldr.w	r3, [fp]
 80048be:	4601      	mov	r1, r0
 80048c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80048c2:	9119      	str	r1, [sp, #100]	; 0x64
 80048c4:	4658      	mov	r0, fp
 80048c6:	4798      	blx	r3
 80048c8:	f8db 3000 	ldr.w	r3, [fp]
 80048cc:	9919      	ldr	r1, [sp, #100]	; 0x64
 80048ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048d0:	4607      	mov	r7, r0
 80048d2:	4658      	mov	r0, fp
 80048d4:	4798      	blx	r3
 80048d6:	f8db 3000 	ldr.w	r3, [fp]
 80048da:	9919      	ldr	r1, [sp, #100]	; 0x64
 80048dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048de:	fb17 f700 	smulbb	r7, r7, r0
 80048e2:	4658      	mov	r0, fp
 80048e4:	4798      	blx	r3
 80048e6:	b2ff      	uxtb	r7, r7
 80048e8:	4438      	add	r0, r7
 80048ea:	f884 0125 	strb.w	r0, [r4, #293]	; 0x125
 80048ee:	f7ff b897 	b.w	8003a20 <_ZN12MainViewBaseC1Ev+0x3d0>
            textHeightIncludingSpacing = 0;
 80048f2:	2300      	movs	r3, #0
 80048f4:	f884 316d 	strb.w	r3, [r4, #365]	; 0x16d
 80048f8:	f7ff b8d6 	b.w	8003aa8 <_ZN12MainViewBaseC1Ev+0x458>
 80048fc:	2300      	movs	r3, #0
 80048fe:	f884 31b5 	strb.w	r3, [r4, #437]	; 0x1b5
 8004902:	f7ff b915 	b.w	8003b30 <_ZN12MainViewBaseC1Ev+0x4e0>
 8004906:	2300      	movs	r3, #0
 8004908:	f884 31fd 	strb.w	r3, [r4, #509]	; 0x1fd
 800490c:	f7ff b954 	b.w	8003bb8 <_ZN12MainViewBaseC1Ev+0x568>
 8004910:	2300      	movs	r3, #0
 8004912:	f884 3245 	strb.w	r3, [r4, #581]	; 0x245
 8004916:	f7ff b993 	b.w	8003c40 <_ZN12MainViewBaseC1Ev+0x5f0>
 800491a:	2300      	movs	r3, #0
 800491c:	f884 328d 	strb.w	r3, [r4, #653]	; 0x28d
 8004920:	f7ff b9d2 	b.w	8003cc8 <_ZN12MainViewBaseC1Ev+0x678>
 8004924:	2300      	movs	r3, #0
 8004926:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
 800492a:	f7ff ba26 	b.w	8003d7a <_ZN12MainViewBaseC1Ev+0x72a>
 800492e:	2300      	movs	r3, #0
 8004930:	f884 331d 	strb.w	r3, [r4, #797]	; 0x31d
 8004934:	f7ff ba65 	b.w	8003e02 <_ZN12MainViewBaseC1Ev+0x7b2>
 8004938:	2300      	movs	r3, #0
 800493a:	f884 3365 	strb.w	r3, [r4, #869]	; 0x365
 800493e:	f7ff baa4 	b.w	8003e8a <_ZN12MainViewBaseC1Ev+0x83a>
 8004942:	2300      	movs	r3, #0
 8004944:	f884 33ad 	strb.w	r3, [r4, #941]	; 0x3ad
 8004948:	f7ff bae3 	b.w	8003f12 <_ZN12MainViewBaseC1Ev+0x8c2>
 800494c:	2300      	movs	r3, #0
 800494e:	f884 33f5 	strb.w	r3, [r4, #1013]	; 0x3f5
 8004952:	f7ff bb22 	b.w	8003f9a <_ZN12MainViewBaseC1Ev+0x94a>
 8004956:	2300      	movs	r3, #0
 8004958:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
 800495c:	f7ff bb72 	b.w	8004044 <_ZN12MainViewBaseC1Ev+0x9f4>
 8004960:	2300      	movs	r3, #0
 8004962:	f884 3485 	strb.w	r3, [r4, #1157]	; 0x485
 8004966:	f7ff bbb3 	b.w	80040d0 <_ZN12MainViewBaseC1Ev+0xa80>
 800496a:	2300      	movs	r3, #0
 800496c:	f884 34cd 	strb.w	r3, [r4, #1229]	; 0x4cd
 8004970:	f7ff bbf3 	b.w	800415a <_ZN12MainViewBaseC1Ev+0xb0a>
 8004974:	2300      	movs	r3, #0
 8004976:	f884 3515 	strb.w	r3, [r4, #1301]	; 0x515
 800497a:	e433      	b.n	80041e4 <_ZN12MainViewBaseC1Ev+0xb94>
 800497c:	2300      	movs	r3, #0
 800497e:	f884 3561 	strb.w	r3, [r4, #1377]	; 0x561
 8004982:	e476      	b.n	8004272 <_ZN12MainViewBaseC1Ev+0xc22>
 8004984:	2300      	movs	r3, #0
 8004986:	f884 35a9 	strb.w	r3, [r4, #1449]	; 0x5a9
 800498a:	e4b8      	b.n	80042fe <_ZN12MainViewBaseC1Ev+0xcae>
 800498c:	2300      	movs	r3, #0
 800498e:	f884 35f1 	strb.w	r3, [r4, #1521]	; 0x5f1
 8004992:	e507      	b.n	80043a4 <_ZN12MainViewBaseC1Ev+0xd54>
 8004994:	2300      	movs	r3, #0
 8004996:	f884 3639 	strb.w	r3, [r4, #1593]	; 0x639
 800499a:	e549      	b.n	8004430 <_ZN12MainViewBaseC1Ev+0xde0>
 800499c:	2300      	movs	r3, #0
 800499e:	f884 3681 	strb.w	r3, [r4, #1665]	; 0x681
 80049a2:	e58c      	b.n	80044be <_ZN12MainViewBaseC1Ev+0xe6e>
 80049a4:	2300      	movs	r3, #0
 80049a6:	f884 36c9 	strb.w	r3, [r4, #1737]	; 0x6c9
 80049aa:	e5ce      	b.n	800454a <_ZN12MainViewBaseC1Ev+0xefa>
 80049ac:	2300      	movs	r3, #0
 80049ae:	f884 3711 	strb.w	r3, [r4, #1809]	; 0x711
 80049b2:	e610      	b.n	80045d6 <_ZN12MainViewBaseC1Ev+0xf86>
 80049b4:	2300      	movs	r3, #0
 80049b6:	f884 3759 	strb.w	r3, [r4, #1881]	; 0x759
 80049ba:	e652      	b.n	8004662 <_ZN12MainViewBaseC1Ev+0x1012>
 80049bc:	2300      	movs	r3, #0
 80049be:	f884 37a1 	strb.w	r3, [r4, #1953]	; 0x7a1
 80049c2:	e6a1      	b.n	8004708 <_ZN12MainViewBaseC1Ev+0x10b8>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049c4:	4b09      	ldr	r3, [pc, #36]	; (80049ec <_ZN12MainViewBaseC1Ev+0x139c>)
 80049c6:	4a0a      	ldr	r2, [pc, #40]	; (80049f0 <_ZN12MainViewBaseC1Ev+0x13a0>)
 80049c8:	480a      	ldr	r0, [pc, #40]	; (80049f4 <_ZN12MainViewBaseC1Ev+0x13a4>)
 80049ca:	216c      	movs	r1, #108	; 0x6c
 80049cc:	f020 fa36 	bl	8024e3c <__assert_func>
 80049d0:	00c9000d 	.word	0x00c9000d
 80049d4:	0098000e 	.word	0x0098000e
 80049d8:	007a001e 	.word	0x007a001e
 80049dc:	08026e28 	.word	0x08026e28
 80049e0:	20002cdc 	.word	0x20002cdc
 80049e4:	20002ce4 	.word	0x20002ce4
 80049e8:	20002ce8 	.word	0x20002ce8
 80049ec:	08027710 	.word	0x08027710
 80049f0:	08027754 	.word	0x08027754
 80049f4:	08027790 	.word	0x08027790

080049f8 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 80049f8:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 80049fa:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80049fc:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80049fe:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8004a00:	466d      	mov	r5, sp
 8004a02:	4601      	mov	r1, r0
 8004a04:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8004a08:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	4798      	blx	r3
 8004a0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004a12:	343c      	adds	r4, #60	; 0x3c
 8004a14:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8004a18:	b005      	add	sp, #20
 8004a1a:	bd30      	pop	{r4, r5, pc}

08004a1c <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 8004a1c:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8004a1e:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8004a20:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8004a22:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8004a24:	466d      	mov	r5, sp
 8004a26:	4601      	mov	r1, r0
 8004a28:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8004a2c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8004a2e:	4628      	mov	r0, r5
 8004a30:	4798      	blx	r3
 8004a32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004a36:	343c      	adds	r4, #60	; 0x3c
 8004a38:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8004a3c:	b005      	add	sp, #20
 8004a3e:	bd30      	pop	{r4, r5, pc}

08004a40 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8004a40:	2200      	movs	r2, #0
 8004a42:	8002      	strh	r2, [r0, #0]
 8004a44:	8042      	strh	r2, [r0, #2]
 8004a46:	8082      	strh	r2, [r0, #4]
 8004a48:	80c2      	strh	r2, [r0, #6]
    }
 8004a4a:	4770      	bx	lr

08004a4c <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 8004a4c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8004a50:	4770      	bx	lr
 8004a52:	bf00      	nop

08004a54 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
 8004a54:	2000      	movs	r0, #0
 8004a56:	4770      	bx	lr

08004a58 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004a58:	2200      	movs	r2, #0
 8004a5a:	f04f 31ff 	mov.w	r1, #4294967295
 8004a5e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8004a62:	6082      	str	r2, [r0, #8]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
 8004a64:	4770      	bx	lr
 8004a66:	bf00      	nop

08004a68 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8004a68:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8004a6a:	4770      	bx	lr

08004a6c <_ZN15SettingViewBaseD1Ev>:

class SettingViewBase : public touchgfx::View<SettingPresenter>
{
public:
    SettingViewBase();
    virtual ~SettingViewBase() {}
 8004a6c:	4770      	bx	lr
 8004a6e:	bf00      	nop

08004a70 <_ZN15SettingViewBase15slider_callbackEi>:
     * Virtual Action Handlers
     */
    virtual void slider_callback(int value)
    {
        // Override and implement this function in Setting
    }
 8004a70:	4770      	bx	lr
 8004a72:	bf00      	nop

08004a74 <_ZN15SettingViewBase23slider_release_callbackEi>:

    virtual void slider_release_callback(int value)
    {
        // Override and implement this function in Setting
    }
 8004a74:	4770      	bx	lr
 8004a76:	bf00      	nop

08004a78 <_ZN15SettingViewBase13demo_callbackEv>:

    virtual void demo_callback()
    {
        // Override and implement this function in Setting
    }
 8004a78:	4770      	bx	lr
 8004a7a:	bf00      	nop

08004a7c <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8004a7c:	4770      	bx	lr
 8004a7e:	bf00      	nop

08004a80 <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004a80:	4770      	bx	lr
 8004a82:	bf00      	nop

08004a84 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8004a84:	4770      	bx	lr
 8004a86:	bf00      	nop

08004a88 <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8004a88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
 8004a8a:	68c3      	ldr	r3, [r0, #12]
 8004a8c:	07dc      	lsls	r4, r3, #31
 8004a8e:	d406      	bmi.n	8004a9e <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivE7executeES4_i+0x16>
 8004a90:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
 8004a94:	eb05 0063 	add.w	r0, r5, r3, asr #1
 8004a98:	4623      	mov	r3, r4
    }
 8004a9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
 8004a9c:	4718      	bx	r3
 8004a9e:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
 8004aa2:	105c      	asrs	r4, r3, #1
 8004aa4:	592c      	ldr	r4, [r5, r4]
 8004aa6:	5824      	ldr	r4, [r4, r0]
 8004aa8:	eb05 0063 	add.w	r0, r5, r3, asr #1
 8004aac:	4623      	mov	r3, r4
    }
 8004aae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
 8004ab0:	4718      	bx	r3
 8004ab2:	bf00      	nop

08004ab4 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004ab4:	6843      	ldr	r3, [r0, #4]
 8004ab6:	b13b      	cbz	r3, 8004ac8 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 8004ab8:	6883      	ldr	r3, [r0, #8]
 8004aba:	b10b      	cbz	r3, 8004ac0 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivE7isValidEv+0xc>
 8004abc:	2001      	movs	r0, #1
    }
 8004abe:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
 8004ac0:	68c0      	ldr	r0, [r0, #12]
 8004ac2:	f000 0001 	and.w	r0, r0, #1
 8004ac6:	4770      	bx	lr
 8004ac8:	4618      	mov	r0, r3
 8004aca:	4770      	bx	lr

08004acc <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004acc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004ace:	68c3      	ldr	r3, [r0, #12]
 8004ad0:	07da      	lsls	r2, r3, #31
 8004ad2:	d405      	bmi.n	8004ae0 <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>
 8004ad4:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 8004ad8:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 8004adc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004ade:	4710      	bx	r2
 8004ae0:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 8004ae4:	105d      	asrs	r5, r3, #1
 8004ae6:	5960      	ldr	r0, [r4, r5]
 8004ae8:	5882      	ldr	r2, [r0, r2]
 8004aea:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 8004aee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004af0:	4710      	bx	r2
 8004af2:	bf00      	nop

08004af4 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004af4:	6843      	ldr	r3, [r0, #4]
 8004af6:	b13b      	cbz	r3, 8004b08 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004af8:	6883      	ldr	r3, [r0, #8]
 8004afa:	b10b      	cbz	r3, 8004b00 <_ZNK8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 8004afc:	2001      	movs	r0, #1
    }
 8004afe:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
 8004b00:	68c0      	ldr	r0, [r0, #12]
 8004b02:	f000 0001 	and.w	r0, r0, #1
 8004b06:	4770      	bx	lr
 8004b08:	4618      	mov	r0, r3
 8004b0a:	4770      	bx	lr

08004b0c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8004b0c:	b510      	push	{r4, lr}
 8004b0e:	214c      	movs	r1, #76	; 0x4c
 8004b10:	4604      	mov	r4, r0
 8004b12:	f01f fb74 	bl	80241fe <_ZdlPvj>
 8004b16:	4620      	mov	r0, r4
 8004b18:	bd10      	pop	{r4, pc}
 8004b1a:	bf00      	nop

08004b1c <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004b1c:	b510      	push	{r4, lr}
 8004b1e:	2110      	movs	r1, #16
 8004b20:	4604      	mov	r4, r0
 8004b22:	f01f fb6c 	bl	80241fe <_ZdlPvj>
 8004b26:	4620      	mov	r0, r4
 8004b28:	bd10      	pop	{r4, pc}
 8004b2a:	bf00      	nop

08004b2c <_ZN8touchgfx8CallbackI15SettingViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8004b2c:	b510      	push	{r4, lr}
 8004b2e:	2110      	movs	r1, #16
 8004b30:	4604      	mov	r4, r0
 8004b32:	f01f fb64 	bl	80241fe <_ZdlPvj>
 8004b36:	4620      	mov	r0, r4
 8004b38:	bd10      	pop	{r4, pc}
 8004b3a:	bf00      	nop

08004b3c <_ZN15SettingViewBaseD0Ev>:
    virtual ~SettingViewBase() {}
 8004b3c:	b510      	push	{r4, lr}
 8004b3e:	f640 4124 	movw	r1, #3108	; 0xc24
 8004b42:	4604      	mov	r4, r0
 8004b44:	f01f fb5b 	bl	80241fe <_ZdlPvj>
 8004b48:	4620      	mov	r0, r4
 8004b4a:	bd10      	pop	{r4, pc}

08004b4c <_ZN15SettingViewBase15handleTickEventEv>:
}

//Handles tick based events
void SettingViewBase::handleTickEvent()
{
    if(waitCounter > 0)
 8004b4c:	f8b0 3bf0 	ldrh.w	r3, [r0, #3056]	; 0xbf0
 8004b50:	b123      	cbz	r3, 8004b5c <_ZN15SettingViewBase15handleTickEventEv+0x10>
    {
        waitCounter--;
 8004b52:	3b01      	subs	r3, #1
 8004b54:	b29b      	uxth	r3, r3
 8004b56:	f8a0 3bf0 	strh.w	r3, [r0, #3056]	; 0xbf0
        if(waitCounter == 0)
 8004b5a:	b103      	cbz	r3, 8004b5e <_ZN15SettingViewBase15handleTickEventEv+0x12>
            container1.setVisible(true);
            container1.invalidate();
        }
    }

}
 8004b5c:	4770      	bx	lr
        visible = vis;
 8004b5e:	2301      	movs	r3, #1
 8004b60:	f880 3995 	strb.w	r3, [r0, #2453]	; 0x995
            container1.invalidate();
 8004b64:	f500 6017 	add.w	r0, r0, #2416	; 0x970
 8004b68:	f011 bb27 	b.w	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>

08004b6c <_ZN15SettingViewBase11setupScreenEv>:
{
 8004b6c:	b510      	push	{r4, lr}
 8004b6e:	b084      	sub	sp, #16
    textureMapper1.setupAnimation(touchgfx::AnimationTextureMapper::SCALE, 1.100f, 9, 0, touchgfx::EasingEquations::linearEaseIn);
 8004b70:	4b0a      	ldr	r3, [pc, #40]	; (8004b9c <_ZN15SettingViewBase11setupScreenEv+0x30>)
 8004b72:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 8004ba0 <_ZN15SettingViewBase11setupScreenEv+0x34>
 8004b76:	9300      	str	r3, [sp, #0]
{
 8004b78:	4604      	mov	r4, r0
    textureMapper1.setupAnimation(touchgfx::AnimationTextureMapper::SCALE, 1.100f, 9, 0, touchgfx::EasingEquations::linearEaseIn);
 8004b7a:	2300      	movs	r3, #0
 8004b7c:	f600 0084 	addw	r0, r0, #2180	; 0x884
 8004b80:	2209      	movs	r2, #9
 8004b82:	2103      	movs	r1, #3
 8004b84:	9003      	str	r0, [sp, #12]
 8004b86:	f00d f915 	bl	8011db4 <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>
    textureMapper1.startAnimation();
 8004b8a:	9803      	ldr	r0, [sp, #12]
 8004b8c:	f00d f927 	bl	8011dde <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>
    waitCounter = WAIT_DURATION;
 8004b90:	2309      	movs	r3, #9
 8004b92:	f8a4 3bf0 	strh.w	r3, [r4, #3056]	; 0xbf0
}
 8004b96:	b004      	add	sp, #16
 8004b98:	bd10      	pop	{r4, pc}
 8004b9a:	bf00      	nop
 8004b9c:	08016c79 	.word	0x08016c79
 8004ba0:	3f8ccccd 	.word	0x3f8ccccd

08004ba4 <_ZN15SettingViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:
        demo_callback();
    }
}

void SettingViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8004ba4:	b410      	push	{r4}
    if (&src == &slider1)
 8004ba6:	f600 2418 	addw	r4, r0, #2584	; 0xa18
 8004baa:	428c      	cmp	r4, r1
 8004bac:	d002      	beq.n	8004bb4 <_ZN15SettingViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x10>
        //slider
        //When slider1 value changed call virtual function
        //Call slider_callback
        slider_callback(value);
    }
}
 8004bae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004bb2:	4770      	bx	lr
        slider_callback(value);
 8004bb4:	6803      	ldr	r3, [r0, #0]
 8004bb6:	4904      	ldr	r1, [pc, #16]	; (8004bc8 <_ZN15SettingViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x24>)
 8004bb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bba:	428b      	cmp	r3, r1
 8004bbc:	d0f7      	beq.n	8004bae <_ZN15SettingViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xa>
}
 8004bbe:	f85d 4b04 	ldr.w	r4, [sp], #4
        slider_callback(value);
 8004bc2:	4611      	mov	r1, r2
 8004bc4:	4718      	bx	r3
 8004bc6:	bf00      	nop
 8004bc8:	08004a71 	.word	0x08004a71

08004bcc <_ZN15SettingViewBase35sliderValueConfirmedCallbackHandlerERKN8touchgfx6SliderEi>:

void SettingViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8004bcc:	b410      	push	{r4}
    if (&src == &slider1)
 8004bce:	f600 2418 	addw	r4, r0, #2584	; 0xa18
 8004bd2:	428c      	cmp	r4, r1
 8004bd4:	d002      	beq.n	8004bdc <_ZN15SettingViewBase35sliderValueConfirmedCallbackHandlerERKN8touchgfx6SliderEi+0x10>
        //slider_release
        //When slider1 value confirmed call virtual function
        //Call slider_release_callback
        slider_release_callback(value);
    }
}
 8004bd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004bda:	4770      	bx	lr
        slider_release_callback(value);
 8004bdc:	6803      	ldr	r3, [r0, #0]
 8004bde:	4904      	ldr	r1, [pc, #16]	; (8004bf0 <_ZN15SettingViewBase35sliderValueConfirmedCallbackHandlerERKN8touchgfx6SliderEi+0x24>)
 8004be0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004be2:	428b      	cmp	r3, r1
 8004be4:	d0f7      	beq.n	8004bd6 <_ZN15SettingViewBase35sliderValueConfirmedCallbackHandlerERKN8touchgfx6SliderEi+0xa>
}
 8004be6:	f85d 4b04 	ldr.w	r4, [sp], #4
        slider_release_callback(value);
 8004bea:	4611      	mov	r1, r2
 8004bec:	4718      	bx	r3
 8004bee:	bf00      	nop
 8004bf0:	08004a75 	.word	0x08004a75

08004bf4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8004bf4:	4b1b      	ldr	r3, [pc, #108]	; (8004c64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004bf6:	6802      	ldr	r2, [r0, #0]
 8004bf8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8004bfa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004bfc:	6b55      	ldr	r5, [r2, #52]	; 0x34
 8004bfe:	b323      	cbz	r3, 8004c4a <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
 8004c00:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
 8004c02:	4919      	ldr	r1, [pc, #100]	; (8004c68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
 8004c04:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c06:	8809      	ldrh	r1, [r1, #0]
 8004c08:	4291      	cmp	r1, r2
 8004c0a:	4604      	mov	r4, r0
 8004c0c:	d923      	bls.n	8004c56 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004c0e:	4817      	ldr	r0, [pc, #92]	; (8004c6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
 8004c10:	f813 1012 	ldrb.w	r1, [r3, r2, lsl #1]
 8004c14:	6803      	ldr	r3, [r0, #0]
 8004c16:	4a16      	ldr	r2, [pc, #88]	; (8004c70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
 8004c18:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004c20:	4293      	cmp	r3, r2
 8004c22:	d107      	bne.n	8004c34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return fontHeight;
 8004c24:	8880      	ldrh	r0, [r0, #4]
 8004c26:	4b13      	ldr	r3, [pc, #76]	; (8004c74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
 8004c28:	1a31      	subs	r1, r6, r0
 8004c2a:	429d      	cmp	r5, r3
 8004c2c:	b209      	sxth	r1, r1
 8004c2e:	d107      	bne.n	8004c40 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
 8004c30:	80e1      	strh	r1, [r4, #6]
    }
 8004c32:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004c34:	4798      	blx	r3
 8004c36:	4b0f      	ldr	r3, [pc, #60]	; (8004c74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
 8004c38:	1a31      	subs	r1, r6, r0
 8004c3a:	429d      	cmp	r5, r3
 8004c3c:	b209      	sxth	r1, r1
 8004c3e:	d0f7      	beq.n	8004c30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
 8004c40:	4620      	mov	r0, r4
 8004c42:	462b      	mov	r3, r5
    }
 8004c44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004c48:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c4a:	4b0b      	ldr	r3, [pc, #44]	; (8004c78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
 8004c4c:	4a0b      	ldr	r2, [pc, #44]	; (8004c7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
 8004c4e:	480c      	ldr	r0, [pc, #48]	; (8004c80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
 8004c50:	216c      	movs	r1, #108	; 0x6c
 8004c52:	f020 f8f3 	bl	8024e3c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c56:	4b0b      	ldr	r3, [pc, #44]	; (8004c84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
 8004c58:	4a08      	ldr	r2, [pc, #32]	; (8004c7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
 8004c5a:	4809      	ldr	r0, [pc, #36]	; (8004c80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
 8004c5c:	216d      	movs	r1, #109	; 0x6d
 8004c5e:	f020 f8ed 	bl	8024e3c <__assert_func>
 8004c62:	bf00      	nop
 8004c64:	20002cdc 	.word	0x20002cdc
 8004c68:	20002ce0 	.word	0x20002ce0
 8004c6c:	20002ce4 	.word	0x20002ce4
 8004c70:	080021ed 	.word	0x080021ed
 8004c74:	0800224d 	.word	0x0800224d
 8004c78:	08027710 	.word	0x08027710
 8004c7c:	08027754 	.word	0x08027754
 8004c80:	08027790 	.word	0x08027790
 8004c84:	08027904 	.word	0x08027904

08004c88 <_ZN15SettingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &back)
 8004c88:	f600 129c 	addw	r2, r0, #2460	; 0x99c
 8004c8c:	4291      	cmp	r1, r2
 8004c8e:	d00a      	beq.n	8004ca6 <_ZN15SettingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
    else if (&src == &button_demo)
 8004c90:	f600 32a8 	addw	r2, r0, #2984	; 0xba8
 8004c94:	4291      	cmp	r1, r2
 8004c96:	d000      	beq.n	8004c9a <_ZN15SettingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x12>
 8004c98:	4770      	bx	lr
        demo_callback();
 8004c9a:	6803      	ldr	r3, [r0, #0]
 8004c9c:	4a05      	ldr	r2, [pc, #20]	; (8004cb4 <_ZN15SettingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>)
 8004c9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004ca0:	4293      	cmp	r3, r2
 8004ca2:	d0f9      	beq.n	8004c98 <_ZN15SettingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x10>
 8004ca4:	4718      	bx	r3
{
 8004ca6:	b510      	push	{r4, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004ca8:	f010 fab4 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
}
 8004cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoMainScreenNoTransition();
 8004cb0:	f7fd bca0 	b.w	80025f4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
 8004cb4:	08004a79 	.word	0x08004a79

08004cb8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
 8004cb8:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8004cba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cbe:	4f25      	ldr	r7, [pc, #148]	; (8004d54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setX(x);
 8004cc0:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8004cc2:	42be      	cmp	r6, r7
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8004cc4:	4605      	mov	r5, r0
 8004cc6:	4690      	mov	r8, r2
 8004cc8:	d125      	bne.n	8004d16 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
 8004cca:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
 8004ccc:	80a9      	strh	r1, [r5, #4]
 8004cce:	4922      	ldr	r1, [pc, #136]	; (8004d58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
 8004cd0:	428c      	cmp	r4, r1
 8004cd2:	d126      	bne.n	8004d22 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cd4:	4921      	ldr	r1, [pc, #132]	; (8004d5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004cd6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8004cd8:	680b      	ldr	r3, [r1, #0]
 8004cda:	fa1f f888 	uxth.w	r8, r8
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	d032      	beq.n	8004d48 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
 8004ce2:	491f      	ldr	r1, [pc, #124]	; (8004d60 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
 8004ce4:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004ce6:	8809      	ldrh	r1, [r1, #0]
 8004ce8:	4291      	cmp	r1, r2
 8004cea:	d927      	bls.n	8004d3c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004cec:	481d      	ldr	r0, [pc, #116]	; (8004d64 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
 8004cee:	f813 1012 	ldrb.w	r1, [r3, r2, lsl #1]
 8004cf2:	6803      	ldr	r3, [r0, #0]
 8004cf4:	4a1c      	ldr	r2, [pc, #112]	; (8004d68 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
 8004cf6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004cfe:	4293      	cmp	r3, r2
 8004d00:	d11a      	bne.n	8004d38 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
 8004d02:	8880      	ldrh	r0, [r0, #4]
 8004d04:	4b19      	ldr	r3, [pc, #100]	; (8004d6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
 8004d06:	eba8 0200 	sub.w	r2, r8, r0
 8004d0a:	429e      	cmp	r6, r3
 8004d0c:	b211      	sxth	r1, r2
 8004d0e:	d10e      	bne.n	8004d2e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
 8004d10:	80e9      	strh	r1, [r5, #6]
    }
 8004d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
 8004d16:	47b0      	blx	r6
 8004d18:	682b      	ldr	r3, [r5, #0]
        setBaselineY(baselineY);
 8004d1a:	490f      	ldr	r1, [pc, #60]	; (8004d58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
 8004d1c:	6e5c      	ldr	r4, [r3, #100]	; 0x64
 8004d1e:	428c      	cmp	r4, r1
 8004d20:	d0d8      	beq.n	8004cd4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
 8004d22:	4641      	mov	r1, r8
 8004d24:	4628      	mov	r0, r5
 8004d26:	4623      	mov	r3, r4
    }
 8004d28:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
 8004d2c:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004d2e:	4628      	mov	r0, r5
 8004d30:	4633      	mov	r3, r6
    }
 8004d32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8004d36:	4718      	bx	r3
 8004d38:	4798      	blx	r3
 8004d3a:	e7e3      	b.n	8004d04 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d3c:	4b0c      	ldr	r3, [pc, #48]	; (8004d70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
 8004d3e:	4a0d      	ldr	r2, [pc, #52]	; (8004d74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
 8004d40:	480d      	ldr	r0, [pc, #52]	; (8004d78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
 8004d42:	216d      	movs	r1, #109	; 0x6d
 8004d44:	f020 f87a 	bl	8024e3c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d48:	4b0c      	ldr	r3, [pc, #48]	; (8004d7c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
 8004d4a:	4a0a      	ldr	r2, [pc, #40]	; (8004d74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
 8004d4c:	480a      	ldr	r0, [pc, #40]	; (8004d78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
 8004d4e:	216c      	movs	r1, #108	; 0x6c
 8004d50:	f020 f874 	bl	8024e3c <__assert_func>
 8004d54:	08002249 	.word	0x08002249
 8004d58:	08004bf5 	.word	0x08004bf5
 8004d5c:	20002cdc 	.word	0x20002cdc
 8004d60:	20002ce0 	.word	0x20002ce0
 8004d64:	20002ce4 	.word	0x20002ce4
 8004d68:	080021ed 	.word	0x080021ed
 8004d6c:	0800224d 	.word	0x0800224d
 8004d70:	08027904 	.word	0x08027904
 8004d74:	08027754 	.word	0x08027754
 8004d78:	08027790 	.word	0x08027790
 8004d7c:	08027710 	.word	0x08027710

08004d80 <_ZN15SettingViewBaseC1Ev>:
SettingViewBase::SettingViewBase() :
 8004d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d84:	ed2d 8b10 	vpush	{d8-d15}
 8004d88:	b0a1      	sub	sp, #132	; 0x84
 8004d8a:	4604      	mov	r4, r0
    sliderValueConfirmedCallback(this, &SettingViewBase::sliderValueConfirmedCallbackHandler)
 8004d8c:	f100 0698 	add.w	r6, r0, #152	; 0x98
 8004d90:	9613      	str	r6, [sp, #76]	; 0x4c
 8004d92:	f011 fd5f 	bl	8016854 <_ZN8touchgfx6ScreenC1Ev>
 8004d96:	4bea      	ldr	r3, [pc, #936]	; (8005140 <_ZN15SettingViewBaseC1Ev+0x3c0>)
        : Widget(), alpha(255), color(0)
 8004d98:	4aea      	ldr	r2, [pc, #936]	; (8005144 <_ZN15SettingViewBaseC1Ev+0x3c4>)
 8004d9a:	6023      	str	r3, [r4, #0]
 8004d9c:	2500      	movs	r5, #0
          visible(true)
 8004d9e:	f44f 7780 	mov.w	r7, #256	; 0x100
 8004da2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8004da6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8004daa:	6422      	str	r2, [r4, #64]	; 0x40
 8004dac:	66e2      	str	r2, [r4, #108]	; 0x6c
 8004dae:	ee08 6a90 	vmov	s17, r6
 8004db2:	4630      	mov	r0, r6
 8004db4:	f8a4 7064 	strh.w	r7, [r4, #100]	; 0x64
 8004db8:	461e      	mov	r6, r3
 8004dba:	f8a4 7090 	strh.w	r7, [r4, #144]	; 0x90
 8004dbe:	f884 9066 	strb.w	r9, [r4, #102]	; 0x66
 8004dc2:	f884 9092 	strb.w	r9, [r4, #146]	; 0x92
        : x(0), y(0), width(0), height(0)
 8004dc6:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
 8004dca:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8004dce:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8004dd2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8004dd6:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8004dda:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 8004dde:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8004de2:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 8004de6:	63e5      	str	r5, [r4, #60]	; 0x3c
        : color(col)
 8004de8:	66a5      	str	r5, [r4, #104]	; 0x68
 8004dea:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8004dee:	ee09 3a90 	vmov	s19, r3
 8004df2:	f00e fcd3 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004df6:	f504 7394 	add.w	r3, r4, #296	; 0x128
 8004dfa:	4630      	mov	r0, r6
 8004dfc:	9302      	str	r3, [sp, #8]
 8004dfe:	f00e fccd 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e02:	f504 72b8 	add.w	r2, r4, #368	; 0x170
 8004e06:	4616      	mov	r6, r2
 8004e08:	9802      	ldr	r0, [sp, #8]
 8004e0a:	ee0a 2a10 	vmov	s20, r2
 8004e0e:	f00e fcc5 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e12:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8004e16:	4630      	mov	r0, r6
 8004e18:	9303      	str	r3, [sp, #12]
 8004e1a:	f00e fcbf 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e1e:	f504 7200 	add.w	r2, r4, #512	; 0x200
 8004e22:	4616      	mov	r6, r2
 8004e24:	9803      	ldr	r0, [sp, #12]
 8004e26:	ee0a 2a90 	vmov	s21, r2
 8004e2a:	f00e fcb7 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e2e:	f504 7312 	add.w	r3, r4, #584	; 0x248
 8004e32:	4630      	mov	r0, r6
 8004e34:	9304      	str	r3, [sp, #16]
 8004e36:	f00e fcb1 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e3a:	f504 7224 	add.w	r2, r4, #656	; 0x290
 8004e3e:	4616      	mov	r6, r2
 8004e40:	9804      	ldr	r0, [sp, #16]
 8004e42:	ee0b 2a10 	vmov	s22, r2
 8004e46:	f00e fca9 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e4a:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
 8004e4e:	4630      	mov	r0, r6
 8004e50:	9305      	str	r3, [sp, #20]
 8004e52:	f00e fca3 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e56:	f504 7248 	add.w	r2, r4, #800	; 0x320
 8004e5a:	4616      	mov	r6, r2
 8004e5c:	9805      	ldr	r0, [sp, #20]
 8004e5e:	ee0b 2a90 	vmov	s23, r2
 8004e62:	f00e fc9b 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e66:	f504 735a 	add.w	r3, r4, #872	; 0x368
 8004e6a:	4630      	mov	r0, r6
 8004e6c:	9306      	str	r3, [sp, #24]
 8004e6e:	f00e fc95 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e72:	f504 726c 	add.w	r2, r4, #944	; 0x3b0
 8004e76:	4616      	mov	r6, r2
 8004e78:	9806      	ldr	r0, [sp, #24]
 8004e7a:	ee0c 2a10 	vmov	s24, r2
 8004e7e:	f00e fc8d 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e82:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8004e86:	4630      	mov	r0, r6
 8004e88:	9307      	str	r3, [sp, #28]
 8004e8a:	f00e fc87 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e8e:	f504 6288 	add.w	r2, r4, #1088	; 0x440
 8004e92:	4616      	mov	r6, r2
 8004e94:	9807      	ldr	r0, [sp, #28]
 8004e96:	ee0c 2a90 	vmov	s25, r2
 8004e9a:	f00e fc7f 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004e9e:	f504 6391 	add.w	r3, r4, #1160	; 0x488
 8004ea2:	4630      	mov	r0, r6
 8004ea4:	9308      	str	r3, [sp, #32]
 8004ea6:	f00e fc79 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004eaa:	f504 629a 	add.w	r2, r4, #1232	; 0x4d0
 8004eae:	4616      	mov	r6, r2
 8004eb0:	9808      	ldr	r0, [sp, #32]
 8004eb2:	ee0d 2a10 	vmov	s26, r2
 8004eb6:	f00e fc71 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004eba:	4630      	mov	r0, r6
 8004ebc:	f00e fc6e 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ec0:	f204 531c 	addw	r3, r4, #1308	; 0x51c
 8004ec4:	461a      	mov	r2, r3
 8004ec6:	ee0d 3a90 	vmov	s27, r3
 8004eca:	4b9f      	ldr	r3, [pc, #636]	; (8005148 <_ZN15SettingViewBaseC1Ev+0x3c8>)
 8004ecc:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        touchable = touch;
 8004ed0:	f04f 0301 	mov.w	r3, #1
 8004ed4:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 8004ed8:	f204 5364 	addw	r3, r4, #1380	; 0x564
 8004edc:	461e      	mov	r6, r3
 8004ede:	4610      	mov	r0, r2
 8004ee0:	f8c4 5518 	str.w	r5, [r4, #1304]	; 0x518
 8004ee4:	ee0e 3a10 	vmov	s28, r3
 8004ee8:	f00e fc58 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004eec:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8004ef0:	4630      	mov	r0, r6
 8004ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8004ef4:	f00e fc52 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ef8:	f204 52f4 	addw	r2, r4, #1524	; 0x5f4
 8004efc:	4616      	mov	r6, r2
 8004efe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004f00:	ee0e 2a90 	vmov	s29, r2
 8004f04:	f00e fc4a 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f08:	f204 633c 	addw	r3, r4, #1596	; 0x63c
 8004f0c:	4630      	mov	r0, r6
 8004f0e:	930a      	str	r3, [sp, #40]	; 0x28
 8004f10:	f00e fc44 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f14:	f204 6284 	addw	r2, r4, #1668	; 0x684
 8004f18:	4616      	mov	r6, r2
 8004f1a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004f1c:	ee0f 2a10 	vmov	s30, r2
 8004f20:	f00e fc3c 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f24:	f204 63cc 	addw	r3, r4, #1740	; 0x6cc
 8004f28:	4630      	mov	r0, r6
 8004f2a:	930b      	str	r3, [sp, #44]	; 0x2c
 8004f2c:	f00e fc36 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f30:	f204 7214 	addw	r2, r4, #1812	; 0x714
 8004f34:	4616      	mov	r6, r2
 8004f36:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004f38:	ee0f 2a90 	vmov	s31, r2
 8004f3c:	f00e fc2e 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f40:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8004f44:	4630      	mov	r0, r6
 8004f46:	930c      	str	r3, [sp, #48]	; 0x30
 8004f48:	f00e fc28 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f4c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004f4e:	f00e fc25 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
class ToggleButton : public Button
 8004f52:	4b7e      	ldr	r3, [pc, #504]	; (800514c <_ZN15SettingViewBaseC1Ev+0x3cc>)
 8004f54:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
 8004f58:	4b7d      	ldr	r3, [pc, #500]	; (8005150 <_ZN15SettingViewBaseC1Ev+0x3d0>)
 8004f5a:	f8c4 37a4 	str.w	r3, [r4, #1956]	; 0x7a4
 8004f5e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8004f62:	f240 1b01 	movw	fp, #257	; 0x101
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004f66:	4b7b      	ldr	r3, [pc, #492]	; (8005154 <_ZN15SettingViewBaseC1Ev+0x3d4>)
 8004f68:	4a76      	ldr	r2, [pc, #472]	; (8005144 <_ZN15SettingViewBaseC1Ev+0x3c4>)
 8004f6a:	f884 980a 	strb.w	r9, [r4, #2058]	; 0x80a
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004f6e:	f04f 38ff 	mov.w	r8, #4294967295
 8004f72:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8004f76:	f8a4 b7c8 	strh.w	fp, [r4, #1992]	; 0x7c8
 8004f7a:	f8a4 b7fc 	strh.w	fp, [r4, #2044]	; 0x7fc
 8004f7e:	f8a4 67d2 	strh.w	r6, [r4, #2002]	; 0x7d2
 8004f82:	f8a4 67d4 	strh.w	r6, [r4, #2004]	; 0x7d4
 8004f86:	f884 67d6 	strb.w	r6, [r4, #2006]	; 0x7d6
 8004f8a:	f8a4 6806 	strh.w	r6, [r4, #2054]	; 0x806
 8004f8e:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
 8004f92:	f8a4 680c 	strh.w	r6, [r4, #2060]	; 0x80c
        : Widget(), action(), pressed(false)
 8004f96:	f8c4 57cc 	str.w	r5, [r4, #1996]	; 0x7cc
 8004f9a:	f604 0a84 	addw	sl, r4, #2180	; 0x884
 8004f9e:	f884 57d0 	strb.w	r5, [r4, #2000]	; 0x7d0
        : x(0), y(0), width(0), height(0)
 8004fa2:	f8c4 57a8 	str.w	r5, [r4, #1960]	; 0x7a8
 8004fa6:	f8c4 57ac 	str.w	r5, [r4, #1964]	; 0x7ac
 8004faa:	f8c4 57b0 	str.w	r5, [r4, #1968]	; 0x7b0
 8004fae:	f8c4 57b4 	str.w	r5, [r4, #1972]	; 0x7b4
          visible(true)
 8004fb2:	f8c4 57b8 	str.w	r5, [r4, #1976]	; 0x7b8
 8004fb6:	f8c4 57bc 	str.w	r5, [r4, #1980]	; 0x7bc
 8004fba:	f8c4 57c0 	str.w	r5, [r4, #1984]	; 0x7c0
 8004fbe:	f8c4 57c4 	str.w	r5, [r4, #1988]	; 0x7c4
 8004fc2:	f8c4 5800 	str.w	r5, [r4, #2048]	; 0x800
 8004fc6:	f884 5804 	strb.w	r5, [r4, #2052]	; 0x804
 8004fca:	f8c4 57dc 	str.w	r5, [r4, #2012]	; 0x7dc
 8004fce:	f8c4 57e0 	str.w	r5, [r4, #2016]	; 0x7e0
 8004fd2:	f8c4 57e4 	str.w	r5, [r4, #2020]	; 0x7e4
 8004fd6:	f8c4 57e8 	str.w	r5, [r4, #2024]	; 0x7e8
 8004fda:	f8c4 57ec 	str.w	r5, [r4, #2028]	; 0x7ec
 8004fde:	f8c4 57f0 	str.w	r5, [r4, #2032]	; 0x7f0
 8004fe2:	f8c4 57f4 	str.w	r5, [r4, #2036]	; 0x7f4
 8004fe6:	f8c4 57f8 	str.w	r5, [r4, #2040]	; 0x7f8
 8004fea:	f8c4 5814 	str.w	r5, [r4, #2068]	; 0x814
 8004fee:	f8c4 5818 	str.w	r5, [r4, #2072]	; 0x818
 8004ff2:	f8c4 3810 	str.w	r3, [r4, #2064]	; 0x810
        : typedTextId(id)
 8004ff6:	4b58      	ldr	r3, [pc, #352]	; (8005158 <_ZN15SettingViewBaseC1Ev+0x3d8>)
 8004ff8:	f8c4 2858 	str.w	r2, [r4, #2136]	; 0x858
 8004ffc:	f8a4 7834 	strh.w	r7, [r4, #2100]	; 0x834
 8005000:	f8a4 683c 	strh.w	r6, [r4, #2108]	; 0x83c
 8005004:	f8a4 787c 	strh.w	r7, [r4, #2172]	; 0x87c
 8005008:	f8c4 3838 	str.w	r3, [r4, #2104]	; 0x838
 800500c:	f8c4 1844 	str.w	r1, [r4, #2116]	; 0x844
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005010:	f8c4 8850 	str.w	r8, [r4, #2128]	; 0x850
 8005014:	f884 887e 	strb.w	r8, [r4, #2174]	; 0x87e
 8005018:	4650      	mov	r0, sl
        : x(0), y(0), width(0), height(0)
 800501a:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 800501e:	f8c4 5820 	str.w	r5, [r4, #2080]	; 0x820
 8005022:	f8c4 5824 	str.w	r5, [r4, #2084]	; 0x824
 8005026:	f8c4 5828 	str.w	r5, [r4, #2088]	; 0x828
 800502a:	f8c4 582c 	str.w	r5, [r4, #2092]	; 0x82c
 800502e:	f8c4 5830 	str.w	r5, [r4, #2096]	; 0x830
        : color(col)
 8005032:	f8c4 5840 	str.w	r5, [r4, #2112]	; 0x840
 8005036:	f8a4 5848 	strh.w	r5, [r4, #2120]	; 0x848
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800503a:	f8a4 584c 	strh.w	r5, [r4, #2124]	; 0x84c
 800503e:	f8a4 584e 	strh.w	r5, [r4, #2126]	; 0x84e
              text(0)
 8005042:	f8c4 5854 	str.w	r5, [r4, #2132]	; 0x854
        : x(0), y(0), width(0), height(0)
 8005046:	f8c4 585c 	str.w	r5, [r4, #2140]	; 0x85c
 800504a:	f8c4 5860 	str.w	r5, [r4, #2144]	; 0x860
 800504e:	f8c4 5864 	str.w	r5, [r4, #2148]	; 0x864
 8005052:	f8c4 5868 	str.w	r5, [r4, #2152]	; 0x868
 8005056:	f8c4 586c 	str.w	r5, [r4, #2156]	; 0x86c
 800505a:	f8c4 5870 	str.w	r5, [r4, #2160]	; 0x870
 800505e:	f8c4 5874 	str.w	r5, [r4, #2164]	; 0x874
 8005062:	f8c4 5878 	str.w	r5, [r4, #2168]	; 0x878
        : color(col)
 8005066:	f8c4 5880 	str.w	r5, [r4, #2176]	; 0x880
 800506a:	f00d f813 	bl	8012094 <_ZN8touchgfx22AnimationTextureMapperC1Ev>
 800506e:	f604 2118 	addw	r1, r4, #2584	; 0xa18
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 8005072:	4b3a      	ldr	r3, [pc, #232]	; (800515c <_ZN15SettingViewBaseC1Ev+0x3dc>)
 8005074:	4a36      	ldr	r2, [pc, #216]	; (8005150 <_ZN15SettingViewBaseC1Ev+0x3d0>)
 8005076:	9112      	str	r1, [sp, #72]	; 0x48
 8005078:	4608      	mov	r0, r1
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800507a:	4936      	ldr	r1, [pc, #216]	; (8005154 <_ZN15SettingViewBaseC1Ev+0x3d4>)
 800507c:	f8a4 7994 	strh.w	r7, [r4, #2452]	; 0x994
        touchable = touch;
 8005080:	f8a4 b9c0 	strh.w	fp, [r4, #2496]	; 0x9c0
 8005084:	f8c4 299c 	str.w	r2, [r4, #2460]	; 0x99c
 8005088:	f8a4 89ca 	strh.w	r8, [r4, #2506]	; 0x9ca
 800508c:	f8a4 69cc 	strh.w	r6, [r4, #2508]	; 0x9cc
 8005090:	f884 99ce 	strb.w	r9, [r4, #2510]	; 0x9ce
        : x(0), y(0), width(0), height(0)
 8005094:	f8c4 5974 	str.w	r5, [r4, #2420]	; 0x974
 8005098:	f8c4 5978 	str.w	r5, [r4, #2424]	; 0x978
 800509c:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
 80050a0:	f8c4 5980 	str.w	r5, [r4, #2432]	; 0x980
          visible(true)
 80050a4:	f8c4 5984 	str.w	r5, [r4, #2436]	; 0x984
 80050a8:	f8c4 5988 	str.w	r5, [r4, #2440]	; 0x988
 80050ac:	f8c4 598c 	str.w	r5, [r4, #2444]	; 0x98c
 80050b0:	f8c4 5990 	str.w	r5, [r4, #2448]	; 0x990
 80050b4:	f8c4 5998 	str.w	r5, [r4, #2456]	; 0x998
 80050b8:	f8c4 59c4 	str.w	r5, [r4, #2500]	; 0x9c4
 80050bc:	f884 59c8 	strb.w	r5, [r4, #2504]	; 0x9c8
 80050c0:	f8c4 59a0 	str.w	r5, [r4, #2464]	; 0x9a0
 80050c4:	f8c4 59a4 	str.w	r5, [r4, #2468]	; 0x9a4
 80050c8:	f8c4 59a8 	str.w	r5, [r4, #2472]	; 0x9a8
 80050cc:	f8c4 59ac 	str.w	r5, [r4, #2476]	; 0x9ac
 80050d0:	f8c4 59b0 	str.w	r5, [r4, #2480]	; 0x9b0
 80050d4:	f8c4 59b4 	str.w	r5, [r4, #2484]	; 0x9b4
 80050d8:	f8c4 59b8 	str.w	r5, [r4, #2488]	; 0x9b8
 80050dc:	f8c4 59bc 	str.w	r5, [r4, #2492]	; 0x9bc
 80050e0:	f8c4 59d4 	str.w	r5, [r4, #2516]	; 0x9d4
 80050e4:	f8c4 59d8 	str.w	r5, [r4, #2520]	; 0x9d8
 80050e8:	f8c4 59dc 	str.w	r5, [r4, #2524]	; 0x9dc
 80050ec:	f8c4 59e0 	str.w	r5, [r4, #2528]	; 0x9e0
 80050f0:	f8c4 59e4 	str.w	r5, [r4, #2532]	; 0x9e4
 80050f4:	f8c4 59e8 	str.w	r5, [r4, #2536]	; 0x9e8
 80050f8:	f8c4 3970 	str.w	r3, [r4, #2416]	; 0x970
 80050fc:	4b16      	ldr	r3, [pc, #88]	; (8005158 <_ZN15SettingViewBaseC1Ev+0x3d8>)
 80050fe:	f8c4 19d0 	str.w	r1, [r4, #2512]	; 0x9d0
 8005102:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
    __background.setPosition(0, 0, 320, 240);
 8005106:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800510a:	f8a4 79f4 	strh.w	r7, [r4, #2548]	; 0x9f4
 800510e:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
 8005112:	f8a4 69fc 	strh.w	r6, [r4, #2556]	; 0x9fc
 8005116:	f8c4 1a04 	str.w	r1, [r4, #2564]	; 0xa04
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800511a:	f8c4 8a10 	str.w	r8, [r4, #2576]	; 0xa10
 800511e:	f8c4 59ec 	str.w	r5, [r4, #2540]	; 0x9ec
 8005122:	f8c4 59f0 	str.w	r5, [r4, #2544]	; 0x9f0
        : color(col)
 8005126:	f8c4 5a00 	str.w	r5, [r4, #2560]	; 0xa00
 800512a:	f8a4 5a08 	strh.w	r5, [r4, #2568]	; 0xa08
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800512e:	f8c4 5a0c 	str.w	r5, [r4, #2572]	; 0xa0c
              text(0)
 8005132:	f8c4 5a14 	str.w	r5, [r4, #2580]	; 0xa14
 8005136:	920d      	str	r2, [sp, #52]	; 0x34
    sliderValueConfirmedCallback(this, &SettingViewBase::sliderValueConfirmedCallbackHandler)
 8005138:	f00b fe18 	bl	8010d6c <_ZN8touchgfx6SliderC1Ev>
 800513c:	e010      	b.n	8005160 <_ZN15SettingViewBaseC1Ev+0x3e0>
 800513e:	bf00      	nop
 8005140:	08027a48 	.word	0x08027a48
 8005144:	080287f8 	.word	0x080287f8
 8005148:	080277e0 	.word	0x080277e0
 800514c:	080286f4 	.word	0x080286f4
 8005150:	08028860 	.word	0x08028860
 8005154:	08028768 	.word	0x08028768
 8005158:	08026e28 	.word	0x08026e28
 800515c:	0802832c 	.word	0x0802832c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005160:	497e      	ldr	r1, [pc, #504]	; (800535c <_ZN15SettingViewBaseC1Ev+0x5dc>)
 8005162:	f8c4 1b14 	str.w	r1, [r4, #2836]	; 0xb14
 8005166:	497e      	ldr	r1, [pc, #504]	; (8005360 <_ZN15SettingViewBaseC1Ev+0x5e0>)
 8005168:	f8c4 1b3c 	str.w	r1, [r4, #2876]	; 0xb3c
 800516c:	460b      	mov	r3, r1
 800516e:	f8c4 3b84 	str.w	r3, [r4, #2948]	; 0xb84
 8005172:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : TextAreaWithWildcardBase(), wc1(0)
 8005176:	4b7b      	ldr	r3, [pc, #492]	; (8005364 <_ZN15SettingViewBaseC1Ev+0x5e4>)
        setWidth(width);
 8005178:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
          visible(true)
 800517c:	f8a4 7b38 	strh.w	r7, [r4, #2872]	; 0xb38
 8005180:	f8a4 6b40 	strh.w	r6, [r4, #2880]	; 0xb40
 8005184:	f8c4 1b48 	str.w	r1, [r4, #2888]	; 0xb48
 8005188:	f8c4 8b54 	str.w	r8, [r4, #2900]	; 0xb54
 800518c:	f8a4 7b80 	strh.w	r7, [r4, #2944]	; 0xb80
 8005190:	f8a4 6b88 	strh.w	r6, [r4, #2952]	; 0xb88
 8005194:	f8c4 1b90 	str.w	r1, [r4, #2960]	; 0xb90
        : x(0), y(0), width(0), height(0)
 8005198:	f8c4 5b18 	str.w	r5, [r4, #2840]	; 0xb18
 800519c:	f8c4 5b1c 	str.w	r5, [r4, #2844]	; 0xb1c
 80051a0:	f8c4 5b20 	str.w	r5, [r4, #2848]	; 0xb20
 80051a4:	f8c4 5b24 	str.w	r5, [r4, #2852]	; 0xb24
 80051a8:	f8c4 5b28 	str.w	r5, [r4, #2856]	; 0xb28
 80051ac:	f8c4 5b2c 	str.w	r5, [r4, #2860]	; 0xb2c
 80051b0:	f8c4 5b30 	str.w	r5, [r4, #2864]	; 0xb30
 80051b4:	f8c4 5b34 	str.w	r5, [r4, #2868]	; 0xb34
        : color(col)
 80051b8:	f8c4 5b44 	str.w	r5, [r4, #2884]	; 0xb44
 80051bc:	f8a4 5b4c 	strh.w	r5, [r4, #2892]	; 0xb4c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80051c0:	f8c4 5b50 	str.w	r5, [r4, #2896]	; 0xb50
              text(0)
 80051c4:	f8c4 5b58 	str.w	r5, [r4, #2904]	; 0xb58
        : x(0), y(0), width(0), height(0)
 80051c8:	f8c4 5b60 	str.w	r5, [r4, #2912]	; 0xb60
 80051cc:	f8c4 5b64 	str.w	r5, [r4, #2916]	; 0xb64
 80051d0:	f8c4 5b68 	str.w	r5, [r4, #2920]	; 0xb68
 80051d4:	f8c4 5b6c 	str.w	r5, [r4, #2924]	; 0xb6c
 80051d8:	f8c4 5b70 	str.w	r5, [r4, #2928]	; 0xb70
 80051dc:	f8c4 5b74 	str.w	r5, [r4, #2932]	; 0xb74
 80051e0:	f8c4 5b78 	str.w	r5, [r4, #2936]	; 0xb78
 80051e4:	f8c4 5b7c 	str.w	r5, [r4, #2940]	; 0xb7c
        : color(col)
 80051e8:	f8c4 5b8c 	str.w	r5, [r4, #2956]	; 0xb8c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80051ec:	f8a4 5b94 	strh.w	r5, [r4, #2964]	; 0xb94
 80051f0:	f8c4 3b5c 	str.w	r3, [r4, #2908]	; 0xb5c
 80051f4:	4b5c      	ldr	r3, [pc, #368]	; (8005368 <_ZN15SettingViewBaseC1Ev+0x5e8>)
        : pobject(pObject), pmemfun(pmemfun_1)
 80051f6:	f8df e198 	ldr.w	lr, [pc, #408]	; 8005390 <_ZN15SettingViewBaseC1Ev+0x610>
 80051fa:	f8df c198 	ldr.w	ip, [pc, #408]	; 8005394 <_ZN15SettingViewBaseC1Ev+0x614>
        : pobject(pObject), pmemfun(pmemfun_2)
 80051fe:	4a5b      	ldr	r2, [pc, #364]	; (800536c <_ZN15SettingViewBaseC1Ev+0x5ec>)
 8005200:	4f5b      	ldr	r7, [pc, #364]	; (8005370 <_ZN15SettingViewBaseC1Ev+0x5f0>)
 8005202:	f8c4 3ba8 	str.w	r3, [r4, #2984]	; 0xba8
 8005206:	4b5b      	ldr	r3, [pc, #364]	; (8005374 <_ZN15SettingViewBaseC1Ev+0x5f4>)
        : pobject(pObject), pmemfun(pmemfun_1)
 8005208:	f8c4 ebf4 	str.w	lr, [r4, #3060]	; 0xbf4
 800520c:	f8c4 cbfc 	str.w	ip, [r4, #3068]	; 0xbfc
        : pobject(pObject), pmemfun(pmemfun_2)
 8005210:	f8c4 2c0c 	str.w	r2, [r4, #3084]	; 0xc0c
 8005214:	f8c4 3c1c 	str.w	r3, [r4, #3100]	; 0xc1c
        setWidth(width);
 8005218:	ee18 0a10 	vmov	r0, s16
 800521c:	f44f 71a0 	mov.w	r1, #320	; 0x140
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005220:	f8c4 8b9c 	str.w	r8, [r4, #2972]	; 0xb9c
        touchable = touch;
 8005224:	f8a4 bbcc 	strh.w	fp, [r4, #3020]	; 0xbcc
 8005228:	f8a4 6bd6 	strh.w	r6, [r4, #3030]	; 0xbd6
 800522c:	f8a4 6bd8 	strh.w	r6, [r4, #3032]	; 0xbd8
 8005230:	f884 9bda 	strb.w	r9, [r4, #3034]	; 0xbda
 8005234:	f8c4 7c04 	str.w	r7, [r4, #3076]	; 0xc04
 8005238:	f8c4 5b98 	str.w	r5, [r4, #2968]	; 0xb98
              text(0)
 800523c:	f8c4 5ba0 	str.w	r5, [r4, #2976]	; 0xba0
 8005240:	f8c4 5ba4 	str.w	r5, [r4, #2980]	; 0xba4
 8005244:	f8c4 5bd0 	str.w	r5, [r4, #3024]	; 0xbd0
 8005248:	f884 5bd4 	strb.w	r5, [r4, #3028]	; 0xbd4
        : x(0), y(0), width(0), height(0)
 800524c:	f8c4 5bac 	str.w	r5, [r4, #2988]	; 0xbac
 8005250:	f8c4 5bb0 	str.w	r5, [r4, #2992]	; 0xbb0
 8005254:	f8c4 5bb4 	str.w	r5, [r4, #2996]	; 0xbb4
 8005258:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
          visible(true)
 800525c:	f8c4 5bbc 	str.w	r5, [r4, #3004]	; 0xbbc
 8005260:	f8c4 5bc0 	str.w	r5, [r4, #3008]	; 0xbc0
 8005264:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8005268:	f8c4 5bc8 	str.w	r5, [r4, #3016]	; 0xbc8
 800526c:	f8a4 5bf0 	strh.w	r5, [r4, #3056]	; 0xbf0
        : pobject(pObject), pmemfun(pmemfun_1)
 8005270:	f8c4 4bf8 	str.w	r4, [r4, #3064]	; 0xbf8
 8005274:	f8c4 5c00 	str.w	r5, [r4, #3072]	; 0xc00
        : pobject(pObject), pmemfun(pmemfun_2)
 8005278:	f8c4 4c08 	str.w	r4, [r4, #3080]	; 0xc08
 800527c:	f8c4 5c10 	str.w	r5, [r4, #3088]	; 0xc10
 8005280:	f8c4 4c18 	str.w	r4, [r4, #3096]	; 0xc18
 8005284:	f8c4 5c20 	str.w	r5, [r4, #3104]	; 0xc20
 8005288:	f8c4 7c14 	str.w	r7, [r4, #3092]	; 0xc14
        rect.x = x;
 800528c:	6465      	str	r5, [r4, #68]	; 0x44
        setWidth(width);
 800528e:	f7fc ffdf 	bl	8002250 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8005292:	ee18 0a10 	vmov	r0, s16
 8005296:	21f0      	movs	r1, #240	; 0xf0
 8005298:	f7fc ffdc 	bl	8002254 <_ZN8touchgfx8Drawable9setHeightEs>
        rect.width = width;
 800529c:	4936      	ldr	r1, [pc, #216]	; (8005378 <_ZN15SettingViewBaseC1Ev+0x5f8>)
        color = newColor;
 800529e:	4a37      	ldr	r2, [pc, #220]	; (800537c <_ZN15SettingViewBaseC1Ev+0x5fc>)
        rect.x = x;
 80052a0:	4b37      	ldr	r3, [pc, #220]	; (8005380 <_ZN15SettingViewBaseC1Ev+0x600>)
        rect.width = width;
 80052a2:	6761      	str	r1, [r4, #116]	; 0x74
 80052a4:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80052a8:	66a0      	str	r0, [r4, #104]	; 0x68
 80052aa:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
        rect.x = x;
 80052ae:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
    bf.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80052b2:	aa1e      	add	r2, sp, #120	; 0x78
 80052b4:	2305      	movs	r3, #5
 80052b6:	a91d      	add	r1, sp, #116	; 0x74
 80052b8:	ee18 0a90 	vmov	r0, s17
 80052bc:	6725      	str	r5, [r4, #112]	; 0x70
 80052be:	f04f 0601 	mov.w	r6, #1
 80052c2:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80052c6:	f8ad 6074 	strh.w	r6, [sp, #116]	; 0x74
 80052ca:	f00d ffa8 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    sliderValueConfirmedCallback(this, &SettingViewBase::sliderValueConfirmedCallbackHandler)
 80052ce:	f204 72a4 	addw	r2, r4, #1956	; 0x7a4
        return typedTextId < numberOfTypedTexts;
 80052d2:	4f2c      	ldr	r7, [pc, #176]	; (8005384 <_ZN15SettingViewBaseC1Ev+0x604>)
 80052d4:	920e      	str	r2, [sp, #56]	; 0x38
 80052d6:	f504 6201 	add.w	r2, r4, #2064	; 0x810
 80052da:	920f      	str	r2, [sp, #60]	; 0x3c
 80052dc:	f604 129c 	addw	r2, r4, #2460	; 0x99c
        if (typedText.hasValidId())
 80052e0:	883b      	ldrh	r3, [r7, #0]
 80052e2:	9210      	str	r2, [sp, #64]	; 0x40
 80052e4:	f504 621d 	add.w	r2, r4, #2512	; 0x9d0
class TypedText
 80052e8:	2138      	movs	r1, #56	; 0x38
 80052ea:	9211      	str	r2, [sp, #68]	; 0x44
 80052ec:	f604 32a8 	addw	r2, r4, #2984	; 0xba8
 80052f0:	9214      	str	r2, [sp, #80]	; 0x50
 80052f2:	428b      	cmp	r3, r1
    box1.setPosition(0, 0, 320, 240);
 80052f4:	f104 026c 	add.w	r2, r4, #108	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80052f8:	f8df b09c 	ldr.w	fp, [pc, #156]	; 8005398 <_ZN15SettingViewBaseC1Ev+0x618>
 80052fc:	9215      	str	r2, [sp, #84]	; 0x54
    sliderValueConfirmedCallback(this, &SettingViewBase::sliderValueConfirmedCallbackHandler)
 80052fe:	f504 6917 	add.w	r9, r4, #2416	; 0x970
 8005302:	f604 3814 	addw	r8, r4, #2836	; 0xb14
class TypedText
 8005306:	f8a4 10d0 	strh.w	r1, [r4, #208]	; 0xd0
 800530a:	d947      	bls.n	800539c <_ZN15SettingViewBaseC1Ev+0x61c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800530c:	f8db 3000 	ldr.w	r3, [fp]
 8005310:	2b00      	cmp	r3, #0
 8005312:	f001 815a 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005316:	4a1c      	ldr	r2, [pc, #112]	; (8005388 <_ZN15SettingViewBaseC1Ev+0x608>)
 8005318:	f893 0070 	ldrb.w	r0, [r3, #112]	; 0x70
 800531c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800531e:	4b1b      	ldr	r3, [pc, #108]	; (800538c <_ZN15SettingViewBaseC1Ev+0x60c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005320:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005324:	6818      	ldr	r0, [r3, #0]
 8005326:	f001 fb2f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800532a:	6833      	ldr	r3, [r6, #0]
 800532c:	4601      	mov	r1, r0
 800532e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005330:	9116      	str	r1, [sp, #88]	; 0x58
 8005332:	4630      	mov	r0, r6
 8005334:	4798      	blx	r3
 8005336:	6833      	ldr	r3, [r6, #0]
 8005338:	9916      	ldr	r1, [sp, #88]	; 0x58
 800533a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800533c:	4605      	mov	r5, r0
 800533e:	4630      	mov	r0, r6
 8005340:	4798      	blx	r3
 8005342:	6833      	ldr	r3, [r6, #0]
 8005344:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005346:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005348:	fb15 f500 	smulbb	r5, r5, r0
 800534c:	4630      	mov	r0, r6
 800534e:	4798      	blx	r3
 8005350:	b2ed      	uxtb	r5, r5
 8005352:	4428      	add	r0, r5
 8005354:	f884 00dd 	strb.w	r0, [r4, #221]	; 0xdd
 8005358:	e022      	b.n	80053a0 <_ZN15SettingViewBaseC1Ev+0x620>
 800535a:	bf00      	nop
 800535c:	08028768 	.word	0x08028768
 8005360:	08026e28 	.word	0x08026e28
 8005364:	08027988 	.word	0x08027988
 8005368:	08028860 	.word	0x08028860
 800536c:	08004ba5 	.word	0x08004ba5
 8005370:	08027a30 	.word	0x08027a30
 8005374:	08004bcd 	.word	0x08004bcd
 8005378:	00f00140 	.word	0x00f00140
 800537c:	fff7f7f7 	.word	0xfff7f7f7
 8005380:	003000e0 	.word	0x003000e0
 8005384:	20002ce0 	.word	0x20002ce0
 8005388:	20002ce4 	.word	0x20002ce4
 800538c:	20002ce8 	.word	0x20002ce8
 8005390:	08027a18 	.word	0x08027a18
 8005394:	08004c89 	.word	0x08004c89
 8005398:	20002cdc 	.word	0x20002cdc
            textHeightIncludingSpacing = 0;
 800539c:	f884 50dd 	strb.w	r5, [r4, #221]	; 0xdd
 80053a0:	4abe      	ldr	r2, [pc, #760]	; (800569c <_ZN15SettingViewBaseC1Ev+0x91c>)
 80053a2:	f8c4 20e4 	str.w	r2, [r4, #228]	; 0xe4
        color = col;
 80053a6:	f04f 33ff 	mov.w	r3, #4294967295
 80053aa:	2001      	movs	r0, #1
        colorPressed = col;
 80053ac:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    be.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80053b0:	a91d      	add	r1, sp, #116	; 0x74
 80053b2:	2305      	movs	r3, #5
 80053b4:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 80053b8:	aa1e      	add	r2, sp, #120	; 0x78
 80053ba:	ee19 0a90 	vmov	r0, s19
 80053be:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80053c2:	f00d ff2c 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80053c6:	883b      	ldrh	r3, [r7, #0]
class TypedText
 80053c8:	2137      	movs	r1, #55	; 0x37
 80053ca:	428b      	cmp	r3, r1
 80053cc:	f8a4 1118 	strh.w	r1, [r4, #280]	; 0x118
 80053d0:	f201 8065 	bhi.w	800649e <_ZN15SettingViewBaseC1Ev+0x171e>
            textHeightIncludingSpacing = 0;
 80053d4:	2300      	movs	r3, #0
 80053d6:	f884 3125 	strb.w	r3, [r4, #293]	; 0x125
 80053da:	4ab1      	ldr	r2, [pc, #708]	; (80056a0 <_ZN15SettingViewBaseC1Ev+0x920>)
 80053dc:	f8c4 212c 	str.w	r2, [r4, #300]	; 0x12c
        color = col;
 80053e0:	f04f 33ff 	mov.w	r3, #4294967295
 80053e4:	2001      	movs	r0, #1
        colorPressed = col;
 80053e6:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
    bd.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80053ea:	a91d      	add	r1, sp, #116	; 0x74
 80053ec:	2305      	movs	r3, #5
 80053ee:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 80053f2:	aa1e      	add	r2, sp, #120	; 0x78
 80053f4:	9802      	ldr	r0, [sp, #8]
 80053f6:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80053fa:	f00d ff10 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80053fe:	883b      	ldrh	r3, [r7, #0]
 8005400:	2136      	movs	r1, #54	; 0x36
 8005402:	428b      	cmp	r3, r1
 8005404:	f8a4 1160 	strh.w	r1, [r4, #352]	; 0x160
 8005408:	f241 8071 	bls.w	80064ee <_ZN15SettingViewBaseC1Ev+0x176e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800540c:	f8db 3000 	ldr.w	r3, [fp]
 8005410:	2b00      	cmp	r3, #0
 8005412:	f001 80da 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005416:	4aa3      	ldr	r2, [pc, #652]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005418:	f893 006c 	ldrb.w	r0, [r3, #108]	; 0x6c
 800541c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800541e:	4ba2      	ldr	r3, [pc, #648]	; (80056a8 <_ZN15SettingViewBaseC1Ev+0x928>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005420:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005424:	6818      	ldr	r0, [r3, #0]
 8005426:	f001 faaf 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800542a:	6833      	ldr	r3, [r6, #0]
 800542c:	4601      	mov	r1, r0
 800542e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005430:	9116      	str	r1, [sp, #88]	; 0x58
 8005432:	4630      	mov	r0, r6
 8005434:	4798      	blx	r3
 8005436:	6833      	ldr	r3, [r6, #0]
 8005438:	9916      	ldr	r1, [sp, #88]	; 0x58
 800543a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800543c:	4605      	mov	r5, r0
 800543e:	4630      	mov	r0, r6
 8005440:	4798      	blx	r3
 8005442:	6833      	ldr	r3, [r6, #0]
 8005444:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005448:	fb15 f500 	smulbb	r5, r5, r0
 800544c:	4630      	mov	r0, r6
 800544e:	4798      	blx	r3
 8005450:	b2ed      	uxtb	r5, r5
 8005452:	4428      	add	r0, r5
 8005454:	f884 016d 	strb.w	r0, [r4, #365]	; 0x16d
 8005458:	4a94      	ldr	r2, [pc, #592]	; (80056ac <_ZN15SettingViewBaseC1Ev+0x92c>)
 800545a:	f8c4 2174 	str.w	r2, [r4, #372]	; 0x174
        color = col;
 800545e:	f04f 33ff 	mov.w	r3, #4294967295
 8005462:	2001      	movs	r0, #1
        colorPressed = col;
 8005464:	e9c4 3359 	strd	r3, r3, [r4, #356]	; 0x164
    bc.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005468:	a91d      	add	r1, sp, #116	; 0x74
 800546a:	2305      	movs	r3, #5
 800546c:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005470:	aa1e      	add	r2, sp, #120	; 0x78
 8005472:	ee1a 0a10 	vmov	r0, s20
 8005476:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 800547a:	f00d fed0 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800547e:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005480:	2135      	movs	r1, #53	; 0x35
 8005482:	428b      	cmp	r3, r1
 8005484:	f8a4 11a8 	strh.w	r1, [r4, #424]	; 0x1a8
 8005488:	f241 8036 	bls.w	80064f8 <_ZN15SettingViewBaseC1Ev+0x1778>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800548c:	f8db 3000 	ldr.w	r3, [fp]
 8005490:	2b00      	cmp	r3, #0
 8005492:	f001 809a 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005496:	4a83      	ldr	r2, [pc, #524]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005498:	f893 006a 	ldrb.w	r0, [r3, #106]	; 0x6a
 800549c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800549e:	4b82      	ldr	r3, [pc, #520]	; (80056a8 <_ZN15SettingViewBaseC1Ev+0x928>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80054a0:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80054a4:	6818      	ldr	r0, [r3, #0]
 80054a6:	f001 fa6f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80054aa:	6833      	ldr	r3, [r6, #0]
 80054ac:	4601      	mov	r1, r0
 80054ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054b0:	9116      	str	r1, [sp, #88]	; 0x58
 80054b2:	4630      	mov	r0, r6
 80054b4:	4798      	blx	r3
 80054b6:	6833      	ldr	r3, [r6, #0]
 80054b8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80054ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054bc:	4605      	mov	r5, r0
 80054be:	4630      	mov	r0, r6
 80054c0:	4798      	blx	r3
 80054c2:	6833      	ldr	r3, [r6, #0]
 80054c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80054c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054c8:	fb15 f500 	smulbb	r5, r5, r0
 80054cc:	4630      	mov	r0, r6
 80054ce:	4798      	blx	r3
 80054d0:	b2ed      	uxtb	r5, r5
 80054d2:	4428      	add	r0, r5
 80054d4:	f884 01b5 	strb.w	r0, [r4, #437]	; 0x1b5
 80054d8:	4a75      	ldr	r2, [pc, #468]	; (80056b0 <_ZN15SettingViewBaseC1Ev+0x930>)
 80054da:	f8c4 21bc 	str.w	r2, [r4, #444]	; 0x1bc
        color = col;
 80054de:	f04f 33ff 	mov.w	r3, #4294967295
 80054e2:	2001      	movs	r0, #1
        colorPressed = col;
 80054e4:	e9c4 336b 	strd	r3, r3, [r4, #428]	; 0x1ac
    bb.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80054e8:	a91d      	add	r1, sp, #116	; 0x74
 80054ea:	2305      	movs	r3, #5
 80054ec:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 80054f0:	aa1e      	add	r2, sp, #120	; 0x78
 80054f2:	9803      	ldr	r0, [sp, #12]
 80054f4:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80054f8:	f00d fe91 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80054fc:	883b      	ldrh	r3, [r7, #0]
class TypedText
 80054fe:	2134      	movs	r1, #52	; 0x34
 8005500:	428b      	cmp	r3, r1
 8005502:	f8a4 11f0 	strh.w	r1, [r4, #496]	; 0x1f0
 8005506:	f240 87fc 	bls.w	8006502 <_ZN15SettingViewBaseC1Ev+0x1782>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800550a:	f8db 3000 	ldr.w	r3, [fp]
 800550e:	2b00      	cmp	r3, #0
 8005510:	f001 805b 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005514:	4a63      	ldr	r2, [pc, #396]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005516:	f893 0068 	ldrb.w	r0, [r3, #104]	; 0x68
 800551a:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800551c:	4b62      	ldr	r3, [pc, #392]	; (80056a8 <_ZN15SettingViewBaseC1Ev+0x928>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800551e:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005522:	6818      	ldr	r0, [r3, #0]
 8005524:	f001 fa30 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005528:	6833      	ldr	r3, [r6, #0]
 800552a:	4601      	mov	r1, r0
 800552c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800552e:	9116      	str	r1, [sp, #88]	; 0x58
 8005530:	4630      	mov	r0, r6
 8005532:	4798      	blx	r3
 8005534:	6833      	ldr	r3, [r6, #0]
 8005536:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005538:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800553a:	4605      	mov	r5, r0
 800553c:	4630      	mov	r0, r6
 800553e:	4798      	blx	r3
 8005540:	6833      	ldr	r3, [r6, #0]
 8005542:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005544:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005546:	fb15 f500 	smulbb	r5, r5, r0
 800554a:	4630      	mov	r0, r6
 800554c:	4798      	blx	r3
 800554e:	b2ed      	uxtb	r5, r5
 8005550:	4428      	add	r0, r5
 8005552:	f884 01fd 	strb.w	r0, [r4, #509]	; 0x1fd
 8005556:	4a57      	ldr	r2, [pc, #348]	; (80056b4 <_ZN15SettingViewBaseC1Ev+0x934>)
 8005558:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204
        color = col;
 800555c:	f04f 33ff 	mov.w	r3, #4294967295
 8005560:	2001      	movs	r0, #1
        colorPressed = col;
 8005562:	e9c4 337d 	strd	r3, r3, [r4, #500]	; 0x1f4
    ba.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005566:	a91d      	add	r1, sp, #116	; 0x74
 8005568:	2305      	movs	r3, #5
 800556a:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 800556e:	aa1e      	add	r2, sp, #120	; 0x78
 8005570:	ee1a 0a90 	vmov	r0, s21
 8005574:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005578:	f00d fe51 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800557c:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800557e:	2133      	movs	r1, #51	; 0x33
 8005580:	428b      	cmp	r3, r1
 8005582:	f8a4 1238 	strh.w	r1, [r4, #568]	; 0x238
 8005586:	f240 87c1 	bls.w	800650c <_ZN15SettingViewBaseC1Ev+0x178c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800558a:	f8db 3000 	ldr.w	r3, [fp]
 800558e:	2b00      	cmp	r3, #0
 8005590:	f001 801b 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005594:	4a43      	ldr	r2, [pc, #268]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005596:	f893 0066 	ldrb.w	r0, [r3, #102]	; 0x66
 800559a:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800559c:	4b42      	ldr	r3, [pc, #264]	; (80056a8 <_ZN15SettingViewBaseC1Ev+0x928>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800559e:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80055a2:	6818      	ldr	r0, [r3, #0]
 80055a4:	f001 f9f0 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80055a8:	6833      	ldr	r3, [r6, #0]
 80055aa:	4601      	mov	r1, r0
 80055ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055ae:	9116      	str	r1, [sp, #88]	; 0x58
 80055b0:	4630      	mov	r0, r6
 80055b2:	4798      	blx	r3
 80055b4:	6833      	ldr	r3, [r6, #0]
 80055b6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80055b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80055ba:	4605      	mov	r5, r0
 80055bc:	4630      	mov	r0, r6
 80055be:	4798      	blx	r3
 80055c0:	6833      	ldr	r3, [r6, #0]
 80055c2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80055c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055c6:	fb15 f500 	smulbb	r5, r5, r0
 80055ca:	4630      	mov	r0, r6
 80055cc:	4798      	blx	r3
 80055ce:	b2ed      	uxtb	r5, r5
 80055d0:	4428      	add	r0, r5
 80055d2:	f884 0245 	strb.w	r0, [r4, #581]	; 0x245
 80055d6:	4a38      	ldr	r2, [pc, #224]	; (80056b8 <_ZN15SettingViewBaseC1Ev+0x938>)
 80055d8:	f8c4 224c 	str.w	r2, [r4, #588]	; 0x24c
        color = col;
 80055dc:	f04f 33ff 	mov.w	r3, #4294967295
 80055e0:	2001      	movs	r0, #1
        colorPressed = col;
 80055e2:	e9c4 338f 	strd	r3, r3, [r4, #572]	; 0x23c
    b9.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80055e6:	a91d      	add	r1, sp, #116	; 0x74
 80055e8:	2305      	movs	r3, #5
 80055ea:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 80055ee:	aa1e      	add	r2, sp, #120	; 0x78
 80055f0:	9804      	ldr	r0, [sp, #16]
 80055f2:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80055f6:	f00d fe12 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80055fa:	883b      	ldrh	r3, [r7, #0]
class TypedText
 80055fc:	2132      	movs	r1, #50	; 0x32
 80055fe:	428b      	cmp	r3, r1
 8005600:	f8a4 1280 	strh.w	r1, [r4, #640]	; 0x280
 8005604:	f240 8787 	bls.w	8006516 <_ZN15SettingViewBaseC1Ev+0x1796>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005608:	f8db 3000 	ldr.w	r3, [fp]
 800560c:	2b00      	cmp	r3, #0
 800560e:	f000 87dc 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005612:	4a24      	ldr	r2, [pc, #144]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005614:	f893 0064 	ldrb.w	r0, [r3, #100]	; 0x64
 8005618:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800561a:	4b23      	ldr	r3, [pc, #140]	; (80056a8 <_ZN15SettingViewBaseC1Ev+0x928>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800561c:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005620:	6818      	ldr	r0, [r3, #0]
 8005622:	f001 f9b1 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005626:	6833      	ldr	r3, [r6, #0]
 8005628:	4601      	mov	r1, r0
 800562a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800562c:	9116      	str	r1, [sp, #88]	; 0x58
 800562e:	4630      	mov	r0, r6
 8005630:	4798      	blx	r3
 8005632:	6833      	ldr	r3, [r6, #0]
 8005634:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005636:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005638:	4605      	mov	r5, r0
 800563a:	4630      	mov	r0, r6
 800563c:	4798      	blx	r3
 800563e:	6833      	ldr	r3, [r6, #0]
 8005640:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005644:	fb15 f500 	smulbb	r5, r5, r0
 8005648:	4630      	mov	r0, r6
 800564a:	4798      	blx	r3
 800564c:	b2ed      	uxtb	r5, r5
 800564e:	4428      	add	r0, r5
 8005650:	f884 028d 	strb.w	r0, [r4, #653]	; 0x28d
 8005654:	4a19      	ldr	r2, [pc, #100]	; (80056bc <_ZN15SettingViewBaseC1Ev+0x93c>)
 8005656:	f8c4 2294 	str.w	r2, [r4, #660]	; 0x294
        color = col;
 800565a:	f04f 33ff 	mov.w	r3, #4294967295
 800565e:	2001      	movs	r0, #1
        colorPressed = col;
 8005660:	e9c4 33a1 	strd	r3, r3, [r4, #644]	; 0x284
    b8.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005664:	a91d      	add	r1, sp, #116	; 0x74
 8005666:	2305      	movs	r3, #5
 8005668:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 800566c:	aa1e      	add	r2, sp, #120	; 0x78
 800566e:	ee1b 0a10 	vmov	r0, s22
 8005672:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005676:	f00d fdd2 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800567a:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800567c:	2131      	movs	r1, #49	; 0x31
 800567e:	428b      	cmp	r3, r1
 8005680:	f8a4 12c8 	strh.w	r1, [r4, #712]	; 0x2c8
 8005684:	f240 874c 	bls.w	8006520 <_ZN15SettingViewBaseC1Ev+0x17a0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005688:	f8db 3000 	ldr.w	r3, [fp]
 800568c:	2b00      	cmp	r3, #0
 800568e:	f000 879c 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005692:	4a04      	ldr	r2, [pc, #16]	; (80056a4 <_ZN15SettingViewBaseC1Ev+0x924>)
 8005694:	f893 0062 	ldrb.w	r0, [r3, #98]	; 0x62
 8005698:	6812      	ldr	r2, [r2, #0]
 800569a:	e011      	b.n	80056c0 <_ZN15SettingViewBaseC1Ev+0x940>
 800569c:	003000b0 	.word	0x003000b0
 80056a0:	00300080 	.word	0x00300080
 80056a4:	20002ce4 	.word	0x20002ce4
 80056a8:	20002ce8 	.word	0x20002ce8
 80056ac:	00300050 	.word	0x00300050
 80056b0:	006000e0 	.word	0x006000e0
 80056b4:	006000b0 	.word	0x006000b0
 80056b8:	00600080 	.word	0x00600080
 80056bc:	00600050 	.word	0x00600050
        return texts->getText(typedTextId);
 80056c0:	4bba      	ldr	r3, [pc, #744]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80056c2:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80056c6:	6818      	ldr	r0, [r3, #0]
 80056c8:	f001 f95e 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80056cc:	6833      	ldr	r3, [r6, #0]
 80056ce:	4601      	mov	r1, r0
 80056d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056d2:	9116      	str	r1, [sp, #88]	; 0x58
 80056d4:	4630      	mov	r0, r6
 80056d6:	4798      	blx	r3
 80056d8:	6833      	ldr	r3, [r6, #0]
 80056da:	9916      	ldr	r1, [sp, #88]	; 0x58
 80056dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056de:	4605      	mov	r5, r0
 80056e0:	4630      	mov	r0, r6
 80056e2:	4798      	blx	r3
 80056e4:	6833      	ldr	r3, [r6, #0]
 80056e6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80056e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ea:	fb15 f500 	smulbb	r5, r5, r0
 80056ee:	4630      	mov	r0, r6
 80056f0:	4798      	blx	r3
 80056f2:	b2ed      	uxtb	r5, r5
 80056f4:	4428      	add	r0, r5
 80056f6:	f884 02d5 	strb.w	r0, [r4, #725]	; 0x2d5
 80056fa:	4aad      	ldr	r2, [pc, #692]	; (80059b0 <_ZN15SettingViewBaseC1Ev+0xc30>)
 80056fc:	f8c4 22dc 	str.w	r2, [r4, #732]	; 0x2dc
        color = col;
 8005700:	f04f 33ff 	mov.w	r3, #4294967295
 8005704:	2001      	movs	r0, #1
        colorPressed = col;
 8005706:	e9c4 33b3 	strd	r3, r3, [r4, #716]	; 0x2cc
    b7.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 800570a:	a91d      	add	r1, sp, #116	; 0x74
 800570c:	2305      	movs	r3, #5
 800570e:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005712:	aa1e      	add	r2, sp, #120	; 0x78
 8005714:	9805      	ldr	r0, [sp, #20]
 8005716:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 800571a:	f00d fd80 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800571e:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005720:	2130      	movs	r1, #48	; 0x30
 8005722:	428b      	cmp	r3, r1
 8005724:	f8a4 1310 	strh.w	r1, [r4, #784]	; 0x310
 8005728:	f240 86ff 	bls.w	800652a <_ZN15SettingViewBaseC1Ev+0x17aa>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800572c:	f8db 3000 	ldr.w	r3, [fp]
 8005730:	2b00      	cmp	r3, #0
 8005732:	f000 874a 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005736:	4a9f      	ldr	r2, [pc, #636]	; (80059b4 <_ZN15SettingViewBaseC1Ev+0xc34>)
 8005738:	f893 0060 	ldrb.w	r0, [r3, #96]	; 0x60
 800573c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800573e:	4b9b      	ldr	r3, [pc, #620]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005740:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005744:	6818      	ldr	r0, [r3, #0]
 8005746:	f001 f91f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800574a:	6833      	ldr	r3, [r6, #0]
 800574c:	4601      	mov	r1, r0
 800574e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005750:	9116      	str	r1, [sp, #88]	; 0x58
 8005752:	4630      	mov	r0, r6
 8005754:	4798      	blx	r3
 8005756:	6833      	ldr	r3, [r6, #0]
 8005758:	9916      	ldr	r1, [sp, #88]	; 0x58
 800575a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800575c:	4605      	mov	r5, r0
 800575e:	4630      	mov	r0, r6
 8005760:	4798      	blx	r3
 8005762:	6833      	ldr	r3, [r6, #0]
 8005764:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005768:	fb15 f500 	smulbb	r5, r5, r0
 800576c:	4630      	mov	r0, r6
 800576e:	4798      	blx	r3
 8005770:	b2ed      	uxtb	r5, r5
 8005772:	4428      	add	r0, r5
 8005774:	f884 031d 	strb.w	r0, [r4, #797]	; 0x31d
 8005778:	4a8f      	ldr	r2, [pc, #572]	; (80059b8 <_ZN15SettingViewBaseC1Ev+0xc38>)
 800577a:	f8c4 2324 	str.w	r2, [r4, #804]	; 0x324
        color = col;
 800577e:	f04f 33ff 	mov.w	r3, #4294967295
 8005782:	2001      	movs	r0, #1
        colorPressed = col;
 8005784:	e9c4 33c5 	strd	r3, r3, [r4, #788]	; 0x314
    b6.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005788:	a91d      	add	r1, sp, #116	; 0x74
 800578a:	2305      	movs	r3, #5
 800578c:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005790:	aa1e      	add	r2, sp, #120	; 0x78
 8005792:	ee1b 0a90 	vmov	r0, s23
 8005796:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 800579a:	f00d fd40 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800579e:	883b      	ldrh	r3, [r7, #0]
class TypedText
 80057a0:	212f      	movs	r1, #47	; 0x2f
 80057a2:	428b      	cmp	r3, r1
 80057a4:	f8a4 1358 	strh.w	r1, [r4, #856]	; 0x358
 80057a8:	f240 86c4 	bls.w	8006534 <_ZN15SettingViewBaseC1Ev+0x17b4>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057ac:	f8db 3000 	ldr.w	r3, [fp]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	f000 870a 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80057b6:	4a7f      	ldr	r2, [pc, #508]	; (80059b4 <_ZN15SettingViewBaseC1Ev+0xc34>)
 80057b8:	f893 005e 	ldrb.w	r0, [r3, #94]	; 0x5e
 80057bc:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80057be:	4b7b      	ldr	r3, [pc, #492]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80057c0:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80057c4:	6818      	ldr	r0, [r3, #0]
 80057c6:	f001 f8df 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80057ca:	6833      	ldr	r3, [r6, #0]
 80057cc:	4601      	mov	r1, r0
 80057ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057d0:	9116      	str	r1, [sp, #88]	; 0x58
 80057d2:	4630      	mov	r0, r6
 80057d4:	4798      	blx	r3
 80057d6:	6833      	ldr	r3, [r6, #0]
 80057d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80057da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057dc:	4605      	mov	r5, r0
 80057de:	4630      	mov	r0, r6
 80057e0:	4798      	blx	r3
 80057e2:	6833      	ldr	r3, [r6, #0]
 80057e4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80057e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057e8:	fb15 f500 	smulbb	r5, r5, r0
 80057ec:	4630      	mov	r0, r6
 80057ee:	4798      	blx	r3
 80057f0:	b2ed      	uxtb	r5, r5
 80057f2:	4428      	add	r0, r5
 80057f4:	f884 0365 	strb.w	r0, [r4, #869]	; 0x365
 80057f8:	4a70      	ldr	r2, [pc, #448]	; (80059bc <_ZN15SettingViewBaseC1Ev+0xc3c>)
 80057fa:	f8c4 236c 	str.w	r2, [r4, #876]	; 0x36c
        color = col;
 80057fe:	f04f 33ff 	mov.w	r3, #4294967295
 8005802:	2001      	movs	r0, #1
        colorPressed = col;
 8005804:	e9c4 33d7 	strd	r3, r3, [r4, #860]	; 0x35c
    b5.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005808:	a91d      	add	r1, sp, #116	; 0x74
 800580a:	2305      	movs	r3, #5
 800580c:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005810:	aa1e      	add	r2, sp, #120	; 0x78
 8005812:	9806      	ldr	r0, [sp, #24]
 8005814:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005818:	f00d fd01 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800581c:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800581e:	212e      	movs	r1, #46	; 0x2e
 8005820:	428b      	cmp	r3, r1
 8005822:	f8a4 13a0 	strh.w	r1, [r4, #928]	; 0x3a0
 8005826:	f240 868a 	bls.w	800653e <_ZN15SettingViewBaseC1Ev+0x17be>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800582a:	f8db 3000 	ldr.w	r3, [fp]
 800582e:	2b00      	cmp	r3, #0
 8005830:	f000 86cb 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005834:	4a5f      	ldr	r2, [pc, #380]	; (80059b4 <_ZN15SettingViewBaseC1Ev+0xc34>)
 8005836:	f893 005c 	ldrb.w	r0, [r3, #92]	; 0x5c
 800583a:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800583c:	4b5b      	ldr	r3, [pc, #364]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800583e:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005842:	6818      	ldr	r0, [r3, #0]
 8005844:	f001 f8a0 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005848:	6833      	ldr	r3, [r6, #0]
 800584a:	4601      	mov	r1, r0
 800584c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800584e:	9116      	str	r1, [sp, #88]	; 0x58
 8005850:	4630      	mov	r0, r6
 8005852:	4798      	blx	r3
 8005854:	6833      	ldr	r3, [r6, #0]
 8005856:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005858:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800585a:	4605      	mov	r5, r0
 800585c:	4630      	mov	r0, r6
 800585e:	4798      	blx	r3
 8005860:	6833      	ldr	r3, [r6, #0]
 8005862:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005864:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005866:	fb15 f500 	smulbb	r5, r5, r0
 800586a:	4630      	mov	r0, r6
 800586c:	4798      	blx	r3
 800586e:	b2ed      	uxtb	r5, r5
 8005870:	4428      	add	r0, r5
 8005872:	f884 03ad 	strb.w	r0, [r4, #941]	; 0x3ad
 8005876:	4a52      	ldr	r2, [pc, #328]	; (80059c0 <_ZN15SettingViewBaseC1Ev+0xc40>)
 8005878:	f8c4 23b4 	str.w	r2, [r4, #948]	; 0x3b4
        color = col;
 800587c:	f04f 33ff 	mov.w	r3, #4294967295
 8005880:	2001      	movs	r0, #1
        colorPressed = col;
 8005882:	e9c4 33e9 	strd	r3, r3, [r4, #932]	; 0x3a4
    b4.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005886:	a91d      	add	r1, sp, #116	; 0x74
 8005888:	2305      	movs	r3, #5
 800588a:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 800588e:	aa1e      	add	r2, sp, #120	; 0x78
 8005890:	ee1c 0a10 	vmov	r0, s24
 8005894:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005898:	f00d fcc1 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800589c:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800589e:	212d      	movs	r1, #45	; 0x2d
 80058a0:	428b      	cmp	r3, r1
 80058a2:	f8a4 13e8 	strh.w	r1, [r4, #1000]	; 0x3e8
 80058a6:	f240 864f 	bls.w	8006548 <_ZN15SettingViewBaseC1Ev+0x17c8>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80058aa:	f8db 3000 	ldr.w	r3, [fp]
 80058ae:	2b00      	cmp	r3, #0
 80058b0:	f000 868b 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80058b4:	4a3f      	ldr	r2, [pc, #252]	; (80059b4 <_ZN15SettingViewBaseC1Ev+0xc34>)
 80058b6:	f893 005a 	ldrb.w	r0, [r3, #90]	; 0x5a
 80058ba:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80058bc:	4b3b      	ldr	r3, [pc, #236]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80058be:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80058c2:	6818      	ldr	r0, [r3, #0]
 80058c4:	f001 f860 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80058c8:	6833      	ldr	r3, [r6, #0]
 80058ca:	4601      	mov	r1, r0
 80058cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80058ce:	9116      	str	r1, [sp, #88]	; 0x58
 80058d0:	4630      	mov	r0, r6
 80058d2:	4798      	blx	r3
 80058d4:	6833      	ldr	r3, [r6, #0]
 80058d6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80058d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058da:	4605      	mov	r5, r0
 80058dc:	4630      	mov	r0, r6
 80058de:	4798      	blx	r3
 80058e0:	6833      	ldr	r3, [r6, #0]
 80058e2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80058e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058e6:	fb15 f500 	smulbb	r5, r5, r0
 80058ea:	4630      	mov	r0, r6
 80058ec:	4798      	blx	r3
 80058ee:	b2ed      	uxtb	r5, r5
 80058f0:	4428      	add	r0, r5
 80058f2:	f884 03f5 	strb.w	r0, [r4, #1013]	; 0x3f5
 80058f6:	4a33      	ldr	r2, [pc, #204]	; (80059c4 <_ZN15SettingViewBaseC1Ev+0xc44>)
 80058f8:	f8c4 23fc 	str.w	r2, [r4, #1020]	; 0x3fc
        color = col;
 80058fc:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8005900:	e9c4 33fb 	strd	r3, r3, [r4, #1004]	; 0x3ec
    b3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8005904:	a91d      	add	r1, sp, #116	; 0x74
 8005906:	2301      	movs	r3, #1
 8005908:	9807      	ldr	r0, [sp, #28]
 800590a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800590e:	aa1e      	add	r2, sp, #120	; 0x78
 8005910:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005914:	f00d fc83 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005918:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800591a:	212c      	movs	r1, #44	; 0x2c
 800591c:	428b      	cmp	r3, r1
 800591e:	f8a4 1430 	strh.w	r1, [r4, #1072]	; 0x430
 8005922:	f240 8616 	bls.w	8006552 <_ZN15SettingViewBaseC1Ev+0x17d2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005926:	f8db 3000 	ldr.w	r3, [fp]
 800592a:	2b00      	cmp	r3, #0
 800592c:	f000 864d 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005930:	4a20      	ldr	r2, [pc, #128]	; (80059b4 <_ZN15SettingViewBaseC1Ev+0xc34>)
 8005932:	f893 0058 	ldrb.w	r0, [r3, #88]	; 0x58
 8005936:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005938:	4b1c      	ldr	r3, [pc, #112]	; (80059ac <_ZN15SettingViewBaseC1Ev+0xc2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800593a:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800593e:	6818      	ldr	r0, [r3, #0]
 8005940:	f001 f822 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005944:	6833      	ldr	r3, [r6, #0]
 8005946:	4601      	mov	r1, r0
 8005948:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800594a:	9116      	str	r1, [sp, #88]	; 0x58
 800594c:	4630      	mov	r0, r6
 800594e:	4798      	blx	r3
 8005950:	6833      	ldr	r3, [r6, #0]
 8005952:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005954:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005956:	4605      	mov	r5, r0
 8005958:	4630      	mov	r0, r6
 800595a:	4798      	blx	r3
 800595c:	6833      	ldr	r3, [r6, #0]
 800595e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005960:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005962:	fb15 f500 	smulbb	r5, r5, r0
 8005966:	4630      	mov	r0, r6
 8005968:	4798      	blx	r3
 800596a:	b2ed      	uxtb	r5, r5
 800596c:	4428      	add	r0, r5
 800596e:	f884 043d 	strb.w	r0, [r4, #1085]	; 0x43d
        color = col;
 8005972:	f04f 33ff 	mov.w	r3, #4294967295
 8005976:	4a14      	ldr	r2, [pc, #80]	; (80059c8 <_ZN15SettingViewBaseC1Ev+0xc48>)
 8005978:	f8c4 3434 	str.w	r3, [r4, #1076]	; 0x434
 800597c:	2001      	movs	r0, #1
        colorPressed = col;
 800597e:	f8c4 3438 	str.w	r3, [r4, #1080]	; 0x438
 8005982:	f8c4 2444 	str.w	r2, [r4, #1092]	; 0x444
 8005986:	2305      	movs	r3, #5
    b2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8005988:	a91d      	add	r1, sp, #116	; 0x74
 800598a:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 800598e:	aa1e      	add	r2, sp, #120	; 0x78
 8005990:	ee1c 0a90 	vmov	r0, s25
 8005994:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005998:	f00d fc41 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800599c:	883b      	ldrh	r3, [r7, #0]
class TypedText
 800599e:	212b      	movs	r1, #43	; 0x2b
 80059a0:	428b      	cmp	r3, r1
 80059a2:	f8a4 1478 	strh.w	r1, [r4, #1144]	; 0x478
 80059a6:	f240 85d9 	bls.w	800655c <_ZN15SettingViewBaseC1Ev+0x17dc>
 80059aa:	e00f      	b.n	80059cc <_ZN15SettingViewBaseC1Ev+0xc4c>
 80059ac:	20002ce8 	.word	0x20002ce8
 80059b0:	009000e0 	.word	0x009000e0
 80059b4:	20002ce4 	.word	0x20002ce4
 80059b8:	009000b0 	.word	0x009000b0
 80059bc:	00900080 	.word	0x00900080
 80059c0:	00900050 	.word	0x00900050
 80059c4:	00c000e0 	.word	0x00c000e0
 80059c8:	00c000b0 	.word	0x00c000b0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80059cc:	f8db 3000 	ldr.w	r3, [fp]
 80059d0:	2b00      	cmp	r3, #0
 80059d2:	f000 85fa 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80059d6:	4ab4      	ldr	r2, [pc, #720]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 80059d8:	f893 0056 	ldrb.w	r0, [r3, #86]	; 0x56
 80059dc:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80059de:	4bb3      	ldr	r3, [pc, #716]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80059e0:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80059e4:	6818      	ldr	r0, [r3, #0]
 80059e6:	f000 ffcf 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80059ea:	6833      	ldr	r3, [r6, #0]
 80059ec:	4601      	mov	r1, r0
 80059ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059f0:	9116      	str	r1, [sp, #88]	; 0x58
 80059f2:	4630      	mov	r0, r6
 80059f4:	4798      	blx	r3
 80059f6:	6833      	ldr	r3, [r6, #0]
 80059f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80059fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059fc:	4605      	mov	r5, r0
 80059fe:	4630      	mov	r0, r6
 8005a00:	4798      	blx	r3
 8005a02:	6833      	ldr	r3, [r6, #0]
 8005a04:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005a06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a08:	fb15 f500 	smulbb	r5, r5, r0
 8005a0c:	4630      	mov	r0, r6
 8005a0e:	4798      	blx	r3
 8005a10:	b2ed      	uxtb	r5, r5
 8005a12:	4428      	add	r0, r5
 8005a14:	f884 0485 	strb.w	r0, [r4, #1157]	; 0x485
        color = col;
 8005a18:	f04f 33ff 	mov.w	r3, #4294967295
 8005a1c:	4aa4      	ldr	r2, [pc, #656]	; (8005cb0 <_ZN15SettingViewBaseC1Ev+0xf30>)
 8005a1e:	f8c4 347c 	str.w	r3, [r4, #1148]	; 0x47c
        colorPressed = col;
 8005a22:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
 8005a26:	f8c4 248c 	str.w	r2, [r4, #1164]	; 0x48c
 8005a2a:	2301      	movs	r3, #1
    b1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8005a2c:	a91d      	add	r1, sp, #116	; 0x74
 8005a2e:	9808      	ldr	r0, [sp, #32]
 8005a30:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8005a34:	aa1e      	add	r2, sp, #120	; 0x78
 8005a36:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005a3a:	f00d fbf0 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005a3e:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005a40:	212a      	movs	r1, #42	; 0x2a
 8005a42:	428b      	cmp	r3, r1
 8005a44:	f8a4 14c0 	strh.w	r1, [r4, #1216]	; 0x4c0
 8005a48:	f240 858d 	bls.w	8006566 <_ZN15SettingViewBaseC1Ev+0x17e6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a4c:	f8db 3000 	ldr.w	r3, [fp]
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	f000 85ba 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005a56:	4a94      	ldr	r2, [pc, #592]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 8005a58:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005a5c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005a5e:	4b93      	ldr	r3, [pc, #588]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005a60:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005a64:	6818      	ldr	r0, [r3, #0]
 8005a66:	f000 ff8f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005a6a:	6833      	ldr	r3, [r6, #0]
 8005a6c:	4601      	mov	r1, r0
 8005a6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005a70:	9116      	str	r1, [sp, #88]	; 0x58
 8005a72:	4630      	mov	r0, r6
 8005a74:	4798      	blx	r3
 8005a76:	6833      	ldr	r3, [r6, #0]
 8005a78:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005a7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a7c:	4605      	mov	r5, r0
 8005a7e:	4630      	mov	r0, r6
 8005a80:	4798      	blx	r3
 8005a82:	6833      	ldr	r3, [r6, #0]
 8005a84:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005a86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a88:	fb15 f500 	smulbb	r5, r5, r0
 8005a8c:	4630      	mov	r0, r6
 8005a8e:	4798      	blx	r3
 8005a90:	b2ed      	uxtb	r5, r5
 8005a92:	4428      	add	r0, r5
 8005a94:	f884 04cd 	strb.w	r0, [r4, #1229]	; 0x4cd
        color = col;
 8005a98:	f04f 33ff 	mov.w	r3, #4294967295
 8005a9c:	4a85      	ldr	r2, [pc, #532]	; (8005cb4 <_ZN15SettingViewBaseC1Ev+0xf34>)
 8005a9e:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        colorPressed = col;
 8005aa2:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
 8005aa6:	f8c4 24d4 	str.w	r2, [r4, #1236]	; 0x4d4
 8005aaa:	2301      	movs	r3, #1
    b0.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8005aac:	a91d      	add	r1, sp, #116	; 0x74
 8005aae:	ee1d 0a10 	vmov	r0, s26
 8005ab2:	aa1e      	add	r2, sp, #120	; 0x78
 8005ab4:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8005ab8:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005abc:	f00d fbaf 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005ac0:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005ac2:	2129      	movs	r1, #41	; 0x29
 8005ac4:	428b      	cmp	r3, r1
 8005ac6:	f8a4 1508 	strh.w	r1, [r4, #1288]	; 0x508
 8005aca:	f240 8551 	bls.w	8006570 <_ZN15SettingViewBaseC1Ev+0x17f0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005ace:	f8db 3000 	ldr.w	r3, [fp]
 8005ad2:	2b00      	cmp	r3, #0
 8005ad4:	f000 8579 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005ad8:	4a73      	ldr	r2, [pc, #460]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 8005ada:	f893 0052 	ldrb.w	r0, [r3, #82]	; 0x52
 8005ade:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005ae0:	4b72      	ldr	r3, [pc, #456]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005ae2:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005ae6:	6818      	ldr	r0, [r3, #0]
 8005ae8:	f000 ff4e 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005aec:	6833      	ldr	r3, [r6, #0]
 8005aee:	4601      	mov	r1, r0
 8005af0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005af2:	9116      	str	r1, [sp, #88]	; 0x58
 8005af4:	4630      	mov	r0, r6
 8005af6:	4798      	blx	r3
 8005af8:	6833      	ldr	r3, [r6, #0]
 8005afa:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005afe:	4605      	mov	r5, r0
 8005b00:	4630      	mov	r0, r6
 8005b02:	4798      	blx	r3
 8005b04:	6833      	ldr	r3, [r6, #0]
 8005b06:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005b08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b0a:	fb15 f500 	smulbb	r5, r5, r0
 8005b0e:	4630      	mov	r0, r6
 8005b10:	4798      	blx	r3
 8005b12:	b2ed      	uxtb	r5, r5
 8005b14:	4428      	add	r0, r5
 8005b16:	f884 0515 	strb.w	r0, [r4, #1301]	; 0x515
        color = col;
 8005b1a:	f04f 33ff 	mov.w	r3, #4294967295
 8005b1e:	2250      	movs	r2, #80	; 0x50
 8005b20:	200a      	movs	r0, #10
 8005b22:	f8c4 350c 	str.w	r3, [r4, #1292]	; 0x50c
        colorPressed = col;
 8005b26:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 8005b2a:	f8c4 2520 	str.w	r2, [r4, #1312]	; 0x520
 8005b2e:	230b      	movs	r3, #11
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005b30:	a91d      	add	r1, sp, #116	; 0x74
 8005b32:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005b36:	aa1e      	add	r2, sp, #120	; 0x78
 8005b38:	ee1d 0a90 	vmov	r0, s27
 8005b3c:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005b40:	f00d fb6d 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005b44:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005b46:	2128      	movs	r1, #40	; 0x28
 8005b48:	428b      	cmp	r3, r1
 8005b4a:	f8a4 1554 	strh.w	r1, [r4, #1364]	; 0x554
 8005b4e:	f240 8514 	bls.w	800657a <_ZN15SettingViewBaseC1Ev+0x17fa>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b52:	f8db 3000 	ldr.w	r3, [fp]
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	f000 8537 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005b5c:	4a52      	ldr	r2, [pc, #328]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 8005b5e:	f893 0050 	ldrb.w	r0, [r3, #80]	; 0x50
 8005b62:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005b64:	4b51      	ldr	r3, [pc, #324]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005b66:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005b6a:	6818      	ldr	r0, [r3, #0]
 8005b6c:	f000 ff0c 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005b70:	6833      	ldr	r3, [r6, #0]
 8005b72:	4601      	mov	r1, r0
 8005b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b76:	9116      	str	r1, [sp, #88]	; 0x58
 8005b78:	4630      	mov	r0, r6
 8005b7a:	4798      	blx	r3
 8005b7c:	6833      	ldr	r3, [r6, #0]
 8005b7e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005b80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005b82:	4605      	mov	r5, r0
 8005b84:	4630      	mov	r0, r6
 8005b86:	4798      	blx	r3
 8005b88:	6833      	ldr	r3, [r6, #0]
 8005b8a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005b8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b8e:	fb15 f500 	smulbb	r5, r5, r0
 8005b92:	4630      	mov	r0, r6
 8005b94:	4798      	blx	r3
 8005b96:	b2ed      	uxtb	r5, r5
 8005b98:	4428      	add	r0, r5
 8005b9a:	f884 0561 	strb.w	r0, [r4, #1377]	; 0x561
        color = col;
 8005b9e:	f04f 33ff 	mov.w	r3, #4294967295
 8005ba2:	2280      	movs	r2, #128	; 0x80
 8005ba4:	200a      	movs	r0, #10
 8005ba6:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
        colorPressed = col;
 8005baa:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
 8005bae:	f8c4 2568 	str.w	r2, [r4, #1384]	; 0x568
 8005bb2:	230b      	movs	r3, #11
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005bb4:	a91d      	add	r1, sp, #116	; 0x74
 8005bb6:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005bba:	aa1e      	add	r2, sp, #120	; 0x78
 8005bbc:	ee1e 0a10 	vmov	r0, s28
 8005bc0:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005bc4:	f00d fb2b 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005bc8:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005bca:	2127      	movs	r1, #39	; 0x27
 8005bcc:	428b      	cmp	r3, r1
 8005bce:	f8a4 159c 	strh.w	r1, [r4, #1436]	; 0x59c
 8005bd2:	f240 84d7 	bls.w	8006584 <_ZN15SettingViewBaseC1Ev+0x1804>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005bd6:	f8db 3000 	ldr.w	r3, [fp]
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	f000 84f5 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005be0:	4a31      	ldr	r2, [pc, #196]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 8005be2:	f893 004e 	ldrb.w	r0, [r3, #78]	; 0x4e
 8005be6:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005be8:	4b30      	ldr	r3, [pc, #192]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005bea:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005bee:	6818      	ldr	r0, [r3, #0]
 8005bf0:	f000 feca 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005bf4:	6833      	ldr	r3, [r6, #0]
 8005bf6:	4601      	mov	r1, r0
 8005bf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bfa:	9116      	str	r1, [sp, #88]	; 0x58
 8005bfc:	4630      	mov	r0, r6
 8005bfe:	4798      	blx	r3
 8005c00:	6833      	ldr	r3, [r6, #0]
 8005c02:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005c04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c06:	4605      	mov	r5, r0
 8005c08:	4630      	mov	r0, r6
 8005c0a:	4798      	blx	r3
 8005c0c:	6833      	ldr	r3, [r6, #0]
 8005c0e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005c10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c12:	fb15 f500 	smulbb	r5, r5, r0
 8005c16:	4630      	mov	r0, r6
 8005c18:	4798      	blx	r3
 8005c1a:	b2ed      	uxtb	r5, r5
 8005c1c:	4428      	add	r0, r5
 8005c1e:	f884 05a9 	strb.w	r0, [r4, #1449]	; 0x5a9
        color = col;
 8005c22:	f04f 33ff 	mov.w	r3, #4294967295
 8005c26:	22b0      	movs	r2, #176	; 0xb0
 8005c28:	200a      	movs	r0, #10
 8005c2a:	f8c4 35a0 	str.w	r3, [r4, #1440]	; 0x5a0
        colorPressed = col;
 8005c2e:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
 8005c32:	f8c4 25b0 	str.w	r2, [r4, #1456]	; 0x5b0
 8005c36:	230b      	movs	r3, #11
    buttonWithLabel1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005c38:	a91d      	add	r1, sp, #116	; 0x74
 8005c3a:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005c3e:	aa1e      	add	r2, sp, #120	; 0x78
 8005c40:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005c42:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005c46:	f00d faea 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005c4a:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005c4c:	2126      	movs	r1, #38	; 0x26
 8005c4e:	428b      	cmp	r3, r1
 8005c50:	f8a4 15e4 	strh.w	r1, [r4, #1508]	; 0x5e4
 8005c54:	f240 849b 	bls.w	800658e <_ZN15SettingViewBaseC1Ev+0x180e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005c58:	f8db 3000 	ldr.w	r3, [fp]
 8005c5c:	2b00      	cmp	r3, #0
 8005c5e:	f000 84b4 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005c62:	4a11      	ldr	r2, [pc, #68]	; (8005ca8 <_ZN15SettingViewBaseC1Ev+0xf28>)
 8005c64:	f893 004c 	ldrb.w	r0, [r3, #76]	; 0x4c
 8005c68:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005c6a:	4b10      	ldr	r3, [pc, #64]	; (8005cac <_ZN15SettingViewBaseC1Ev+0xf2c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005c6c:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005c70:	6818      	ldr	r0, [r3, #0]
 8005c72:	f000 fe89 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005c76:	6833      	ldr	r3, [r6, #0]
 8005c78:	4601      	mov	r1, r0
 8005c7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c7c:	9116      	str	r1, [sp, #88]	; 0x58
 8005c7e:	4630      	mov	r0, r6
 8005c80:	4798      	blx	r3
 8005c82:	6833      	ldr	r3, [r6, #0]
 8005c84:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005c86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c88:	4605      	mov	r5, r0
 8005c8a:	4630      	mov	r0, r6
 8005c8c:	4798      	blx	r3
 8005c8e:	6833      	ldr	r3, [r6, #0]
 8005c90:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005c92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c94:	fb15 f500 	smulbb	r5, r5, r0
 8005c98:	4630      	mov	r0, r6
 8005c9a:	4798      	blx	r3
 8005c9c:	b2ed      	uxtb	r5, r5
 8005c9e:	4428      	add	r0, r5
 8005ca0:	f884 05f1 	strb.w	r0, [r4, #1521]	; 0x5f1
 8005ca4:	e008      	b.n	8005cb8 <_ZN15SettingViewBaseC1Ev+0xf38>
 8005ca6:	bf00      	nop
 8005ca8:	20002ce4 	.word	0x20002ce4
 8005cac:	20002ce8 	.word	0x20002ce8
 8005cb0:	00c00080 	.word	0x00c00080
 8005cb4:	00c00050 	.word	0x00c00050
        color = col;
 8005cb8:	f04f 33ff 	mov.w	r3, #4294967295
 8005cbc:	22e0      	movs	r2, #224	; 0xe0
 8005cbe:	200a      	movs	r0, #10
 8005cc0:	f8c4 35e8 	str.w	r3, [r4, #1512]	; 0x5e8
        colorPressed = col;
 8005cc4:	f8c4 35ec 	str.w	r3, [r4, #1516]	; 0x5ec
 8005cc8:	f8c4 25f8 	str.w	r2, [r4, #1528]	; 0x5f8
 8005ccc:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005cce:	a91d      	add	r1, sp, #116	; 0x74
 8005cd0:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005cd4:	aa1e      	add	r2, sp, #120	; 0x78
 8005cd6:	ee1e 0a90 	vmov	r0, s29
 8005cda:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005cde:	f00d fa9e 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005ce2:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005ce4:	2125      	movs	r1, #37	; 0x25
 8005ce6:	428b      	cmp	r3, r1
 8005ce8:	f8a4 162c 	strh.w	r1, [r4, #1580]	; 0x62c
 8005cec:	f240 8454 	bls.w	8006598 <_ZN15SettingViewBaseC1Ev+0x1818>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cf0:	f8db 3000 	ldr.w	r3, [fp]
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	f000 8468 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005cfa:	4abc      	ldr	r2, [pc, #752]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005cfc:	f893 004a 	ldrb.w	r0, [r3, #74]	; 0x4a
 8005d00:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005d02:	4bbb      	ldr	r3, [pc, #748]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005d04:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005d08:	6818      	ldr	r0, [r3, #0]
 8005d0a:	f000 fe3d 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005d0e:	6833      	ldr	r3, [r6, #0]
 8005d10:	4601      	mov	r1, r0
 8005d12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005d14:	9116      	str	r1, [sp, #88]	; 0x58
 8005d16:	4630      	mov	r0, r6
 8005d18:	4798      	blx	r3
 8005d1a:	6833      	ldr	r3, [r6, #0]
 8005d1c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005d1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d20:	4605      	mov	r5, r0
 8005d22:	4630      	mov	r0, r6
 8005d24:	4798      	blx	r3
 8005d26:	6833      	ldr	r3, [r6, #0]
 8005d28:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005d2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d2c:	fb15 f500 	smulbb	r5, r5, r0
 8005d30:	4630      	mov	r0, r6
 8005d32:	4798      	blx	r3
 8005d34:	b2ed      	uxtb	r5, r5
 8005d36:	4428      	add	r0, r5
 8005d38:	f884 0639 	strb.w	r0, [r4, #1593]	; 0x639
        color = col;
 8005d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d40:	f44f 7288 	mov.w	r2, #272	; 0x110
 8005d44:	200a      	movs	r0, #10
 8005d46:	f8c4 3630 	str.w	r3, [r4, #1584]	; 0x630
        colorPressed = col;
 8005d4a:	f8c4 3634 	str.w	r3, [r4, #1588]	; 0x634
 8005d4e:	f8c4 2640 	str.w	r2, [r4, #1600]	; 0x640
 8005d52:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005d54:	a91d      	add	r1, sp, #116	; 0x74
 8005d56:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005d5a:	aa1e      	add	r2, sp, #120	; 0x78
 8005d5c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005d5e:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005d62:	f00d fa5c 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005d66:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005d68:	2124      	movs	r1, #36	; 0x24
 8005d6a:	428b      	cmp	r3, r1
 8005d6c:	f8a4 1674 	strh.w	r1, [r4, #1652]	; 0x674
 8005d70:	f240 8417 	bls.w	80065a2 <_ZN15SettingViewBaseC1Ev+0x1822>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d74:	f8db 3000 	ldr.w	r3, [fp]
 8005d78:	2b00      	cmp	r3, #0
 8005d7a:	f000 8426 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005d7e:	4a9b      	ldr	r2, [pc, #620]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005d80:	f893 0048 	ldrb.w	r0, [r3, #72]	; 0x48
 8005d84:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005d86:	4b9a      	ldr	r3, [pc, #616]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005d88:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005d8c:	6818      	ldr	r0, [r3, #0]
 8005d8e:	f000 fdfb 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005d92:	6833      	ldr	r3, [r6, #0]
 8005d94:	4601      	mov	r1, r0
 8005d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005d98:	9116      	str	r1, [sp, #88]	; 0x58
 8005d9a:	4630      	mov	r0, r6
 8005d9c:	4798      	blx	r3
 8005d9e:	6833      	ldr	r3, [r6, #0]
 8005da0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005da2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005da4:	4605      	mov	r5, r0
 8005da6:	4630      	mov	r0, r6
 8005da8:	4798      	blx	r3
 8005daa:	6833      	ldr	r3, [r6, #0]
 8005dac:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005db0:	fb15 f500 	smulbb	r5, r5, r0
 8005db4:	4630      	mov	r0, r6
 8005db6:	4798      	blx	r3
 8005db8:	b2ed      	uxtb	r5, r5
 8005dba:	4428      	add	r0, r5
 8005dbc:	f884 0681 	strb.w	r0, [r4, #1665]	; 0x681
        color = col;
 8005dc0:	f04f 33ff 	mov.w	r3, #4294967295
 8005dc4:	4a8b      	ldr	r2, [pc, #556]	; (8005ff4 <_ZN15SettingViewBaseC1Ev+0x1274>)
 8005dc6:	f8c4 3678 	str.w	r3, [r4, #1656]	; 0x678
 8005dca:	200a      	movs	r0, #10
        colorPressed = col;
 8005dcc:	f8c4 367c 	str.w	r3, [r4, #1660]	; 0x67c
 8005dd0:	f8c4 2688 	str.w	r2, [r4, #1672]	; 0x688
 8005dd4:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005dd6:	a91d      	add	r1, sp, #116	; 0x74
 8005dd8:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005ddc:	aa1e      	add	r2, sp, #120	; 0x78
 8005dde:	ee1f 0a10 	vmov	r0, s30
 8005de2:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005de6:	f00d fa1a 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005dea:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005dec:	2123      	movs	r1, #35	; 0x23
 8005dee:	428b      	cmp	r3, r1
 8005df0:	f8a4 16bc 	strh.w	r1, [r4, #1724]	; 0x6bc
 8005df4:	f240 83d9 	bls.w	80065aa <_ZN15SettingViewBaseC1Ev+0x182a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005df8:	f8db 3000 	ldr.w	r3, [fp]
 8005dfc:	2b00      	cmp	r3, #0
 8005dfe:	f000 83e4 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005e02:	4a7a      	ldr	r2, [pc, #488]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005e04:	f893 0046 	ldrb.w	r0, [r3, #70]	; 0x46
 8005e08:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005e0a:	4b79      	ldr	r3, [pc, #484]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005e0c:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005e10:	6818      	ldr	r0, [r3, #0]
 8005e12:	f000 fdb9 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005e16:	6833      	ldr	r3, [r6, #0]
 8005e18:	4601      	mov	r1, r0
 8005e1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e1c:	9116      	str	r1, [sp, #88]	; 0x58
 8005e1e:	4630      	mov	r0, r6
 8005e20:	4798      	blx	r3
 8005e22:	6833      	ldr	r3, [r6, #0]
 8005e24:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005e26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e28:	4605      	mov	r5, r0
 8005e2a:	4630      	mov	r0, r6
 8005e2c:	4798      	blx	r3
 8005e2e:	6833      	ldr	r3, [r6, #0]
 8005e30:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005e32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e34:	fb15 f500 	smulbb	r5, r5, r0
 8005e38:	4630      	mov	r0, r6
 8005e3a:	4798      	blx	r3
 8005e3c:	b2ed      	uxtb	r5, r5
 8005e3e:	4428      	add	r0, r5
 8005e40:	f884 06c9 	strb.w	r0, [r4, #1737]	; 0x6c9
        color = col;
 8005e44:	f04f 33ff 	mov.w	r3, #4294967295
 8005e48:	4a6b      	ldr	r2, [pc, #428]	; (8005ff8 <_ZN15SettingViewBaseC1Ev+0x1278>)
 8005e4a:	f8c4 36c0 	str.w	r3, [r4, #1728]	; 0x6c0
 8005e4e:	200a      	movs	r0, #10
        colorPressed = col;
 8005e50:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
 8005e54:	f8c4 26d0 	str.w	r2, [r4, #1744]	; 0x6d0
 8005e58:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005e5a:	a91d      	add	r1, sp, #116	; 0x74
 8005e5c:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005e60:	aa1e      	add	r2, sp, #120	; 0x78
 8005e62:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005e64:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005e68:	f00d f9d9 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005e6c:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005e6e:	2122      	movs	r1, #34	; 0x22
 8005e70:	428b      	cmp	r3, r1
 8005e72:	f8a4 1704 	strh.w	r1, [r4, #1796]	; 0x704
 8005e76:	f240 839c 	bls.w	80065b2 <_ZN15SettingViewBaseC1Ev+0x1832>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e7a:	f8db 3000 	ldr.w	r3, [fp]
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	f000 83a3 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005e84:	4a59      	ldr	r2, [pc, #356]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005e86:	f893 0044 	ldrb.w	r0, [r3, #68]	; 0x44
 8005e8a:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005e8c:	4b58      	ldr	r3, [pc, #352]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005e8e:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005e92:	6818      	ldr	r0, [r3, #0]
 8005e94:	f000 fd78 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005e98:	6833      	ldr	r3, [r6, #0]
 8005e9a:	4601      	mov	r1, r0
 8005e9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e9e:	9116      	str	r1, [sp, #88]	; 0x58
 8005ea0:	4630      	mov	r0, r6
 8005ea2:	4798      	blx	r3
 8005ea4:	6833      	ldr	r3, [r6, #0]
 8005ea6:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005ea8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005eaa:	4605      	mov	r5, r0
 8005eac:	4630      	mov	r0, r6
 8005eae:	4798      	blx	r3
 8005eb0:	6833      	ldr	r3, [r6, #0]
 8005eb2:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005eb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eb6:	fb15 f500 	smulbb	r5, r5, r0
 8005eba:	4630      	mov	r0, r6
 8005ebc:	4798      	blx	r3
 8005ebe:	b2ed      	uxtb	r5, r5
 8005ec0:	4428      	add	r0, r5
 8005ec2:	f884 0711 	strb.w	r0, [r4, #1809]	; 0x711
        color = col;
 8005ec6:	f04f 33ff 	mov.w	r3, #4294967295
 8005eca:	4a4c      	ldr	r2, [pc, #304]	; (8005ffc <_ZN15SettingViewBaseC1Ev+0x127c>)
 8005ecc:	f8c4 3708 	str.w	r3, [r4, #1800]	; 0x708
 8005ed0:	200a      	movs	r0, #10
        colorPressed = col;
 8005ed2:	f8c4 370c 	str.w	r3, [r4, #1804]	; 0x70c
 8005ed6:	f8c4 2718 	str.w	r2, [r4, #1816]	; 0x718
 8005eda:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005edc:	a91d      	add	r1, sp, #116	; 0x74
 8005ede:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005ee2:	aa1e      	add	r2, sp, #120	; 0x78
 8005ee4:	ee1f 0a90 	vmov	r0, s31
 8005ee8:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005eec:	f00d f997 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005ef0:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005ef2:	2121      	movs	r1, #33	; 0x21
 8005ef4:	428b      	cmp	r3, r1
 8005ef6:	f8a4 174c 	strh.w	r1, [r4, #1868]	; 0x74c
 8005efa:	f240 835e 	bls.w	80065ba <_ZN15SettingViewBaseC1Ev+0x183a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005efe:	f8db 3000 	ldr.w	r3, [fp]
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	f000 8361 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005f08:	4a38      	ldr	r2, [pc, #224]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005f0a:	f893 0042 	ldrb.w	r0, [r3, #66]	; 0x42
 8005f0e:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005f10:	4b37      	ldr	r3, [pc, #220]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005f12:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005f16:	6818      	ldr	r0, [r3, #0]
 8005f18:	f000 fd36 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005f1c:	6833      	ldr	r3, [r6, #0]
 8005f1e:	4601      	mov	r1, r0
 8005f20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f22:	9116      	str	r1, [sp, #88]	; 0x58
 8005f24:	4630      	mov	r0, r6
 8005f26:	4798      	blx	r3
 8005f28:	6833      	ldr	r3, [r6, #0]
 8005f2a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005f2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f2e:	4605      	mov	r5, r0
 8005f30:	4630      	mov	r0, r6
 8005f32:	4798      	blx	r3
 8005f34:	6833      	ldr	r3, [r6, #0]
 8005f36:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005f38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f3a:	fb15 f500 	smulbb	r5, r5, r0
 8005f3e:	4630      	mov	r0, r6
 8005f40:	4798      	blx	r3
 8005f42:	b2ed      	uxtb	r5, r5
 8005f44:	4428      	add	r0, r5
 8005f46:	f884 0759 	strb.w	r0, [r4, #1881]	; 0x759
        color = col;
 8005f4a:	f04f 33ff 	mov.w	r3, #4294967295
 8005f4e:	4a2c      	ldr	r2, [pc, #176]	; (8006000 <_ZN15SettingViewBaseC1Ev+0x1280>)
 8005f50:	f8c4 3750 	str.w	r3, [r4, #1872]	; 0x750
 8005f54:	200a      	movs	r0, #10
        colorPressed = col;
 8005f56:	f8c4 3754 	str.w	r3, [r4, #1876]	; 0x754
 8005f5a:	f8c4 2760 	str.w	r2, [r4, #1888]	; 0x760
 8005f5e:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8005f60:	a91d      	add	r1, sp, #116	; 0x74
 8005f62:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
 8005f66:	aa1e      	add	r2, sp, #120	; 0x78
 8005f68:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005f6a:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8005f6e:	f00d f956 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8005f72:	883b      	ldrh	r3, [r7, #0]
class TypedText
 8005f74:	2120      	movs	r1, #32
 8005f76:	428b      	cmp	r3, r1
 8005f78:	f8a4 1794 	strh.w	r1, [r4, #1940]	; 0x794
 8005f7c:	f240 8321 	bls.w	80065c2 <_ZN15SettingViewBaseC1Ev+0x1842>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f80:	f8db 3000 	ldr.w	r3, [fp]
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	f000 8320 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8005f8a:	4a18      	ldr	r2, [pc, #96]	; (8005fec <_ZN15SettingViewBaseC1Ev+0x126c>)
 8005f8c:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 8005f90:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8005f92:	4b17      	ldr	r3, [pc, #92]	; (8005ff0 <_ZN15SettingViewBaseC1Ev+0x1270>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8005f94:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8005f98:	6818      	ldr	r0, [r3, #0]
 8005f9a:	f000 fcf5 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8005f9e:	6833      	ldr	r3, [r6, #0]
 8005fa0:	4601      	mov	r1, r0
 8005fa2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005fa4:	9116      	str	r1, [sp, #88]	; 0x58
 8005fa6:	4630      	mov	r0, r6
 8005fa8:	4798      	blx	r3
 8005faa:	6833      	ldr	r3, [r6, #0]
 8005fac:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005fae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fb0:	4605      	mov	r5, r0
 8005fb2:	4630      	mov	r0, r6
 8005fb4:	4798      	blx	r3
 8005fb6:	6833      	ldr	r3, [r6, #0]
 8005fb8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005fba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fbc:	fb15 f500 	smulbb	r5, r5, r0
 8005fc0:	4630      	mov	r0, r6
 8005fc2:	4798      	blx	r3
 8005fc4:	b2ed      	uxtb	r5, r5
 8005fc6:	4428      	add	r0, r5
 8005fc8:	f884 07a1 	strb.w	r0, [r4, #1953]	; 0x7a1
        color = col;
 8005fcc:	f04f 32ff 	mov.w	r2, #4294967295
 8005fd0:	4b0c      	ldr	r3, [pc, #48]	; (8006004 <_ZN15SettingViewBaseC1Ev+0x1284>)
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8005fd2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005fd4:	f8c4 2798 	str.w	r2, [r4, #1944]	; 0x798
    toggleButton1_1.setXY(14, 152);
 8005fd8:	f504 65fb 	add.w	r5, r4, #2008	; 0x7d8
        colorPressed = col;
 8005fdc:	f8c4 279c 	str.w	r2, [r4, #1948]	; 0x79c
 8005fe0:	f8c4 37a8 	str.w	r3, [r4, #1960]	; 0x7a8
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8005fe4:	aa1e      	add	r2, sp, #120	; 0x78
 8005fe6:	2304      	movs	r3, #4
 8005fe8:	e00e      	b.n	8006008 <_ZN15SettingViewBaseC1Ev+0x1288>
 8005fea:	bf00      	nop
 8005fec:	20002ce4 	.word	0x20002ce4
 8005ff0:	20002ce8 	.word	0x20002ce8
 8005ff4:	00300110 	.word	0x00300110
 8005ff8:	00600110 	.word	0x00600110
 8005ffc:	00900110 	.word	0x00900110
 8006000:	00c00110 	.word	0x00c00110
 8006004:	00c9000d 	.word	0x00c9000d
 8006008:	a91d      	add	r1, sp, #116	; 0x74
 800600a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800600e:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
    toggleButton1_1.setXY(14, 152);
 8006012:	9516      	str	r5, [sp, #88]	; 0x58
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8006014:	f00d f903 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006018:	4bdf      	ldr	r3, [pc, #892]	; (8006398 <_ZN15SettingViewBaseC1Ev+0x1618>)
 800601a:	f8c4 37dc 	str.w	r3, [r4, #2012]	; 0x7dc
 800601e:	230d      	movs	r3, #13
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8006020:	4628      	mov	r0, r5
 8006022:	aa1e      	add	r2, sp, #120	; 0x78
        originalPressed = bitmapPressed;
 8006024:	f8a4 380c 	strh.w	r3, [r4, #2060]	; 0x80c
 8006028:	250e      	movs	r5, #14
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800602a:	a91d      	add	r1, sp, #116	; 0x74
 800602c:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8006030:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
 8006034:	f00d f8f3 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        boundingArea = calculateBoundingArea();
 8006038:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800603a:	4bd8      	ldr	r3, [pc, #864]	; (800639c <_ZN15SettingViewBaseC1Ev+0x161c>)
 800603c:	f8c4 3814 	str.w	r3, [r4, #2068]	; 0x814
        linespace = space;
 8006040:	2600      	movs	r6, #0
        color = newColor;
 8006042:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8006046:	4629      	mov	r1, r5
        color = newColor;
 8006048:	f8c4 3840 	str.w	r3, [r4, #2112]	; 0x840
        linespace = space;
 800604c:	f8a4 6844 	strh.w	r6, [r4, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 8006050:	a818      	add	r0, sp, #96	; 0x60
 8006052:	f00c fe07 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006056:	ab18      	add	r3, sp, #96	; 0x60
 8006058:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800605c:	462b      	mov	r3, r5
 800605e:	333c      	adds	r3, #60	; 0x3c
 8006060:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006064:	4bce      	ldr	r3, [pc, #824]	; (80063a0 <_ZN15SettingViewBaseC1Ev+0x1620>)
 8006066:	931e      	str	r3, [sp, #120]	; 0x78
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD52));
 8006068:	4628      	mov	r0, r5
 800606a:	a91e      	add	r1, sp, #120	; 0x78
 800606c:	f04f 051f 	mov.w	r5, #31
 8006070:	f8ad 507c 	strh.w	r5, [sp, #124]	; 0x7c
 8006074:	f00d f878 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006078:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800607c:	f8c4 1880 	str.w	r1, [r4, #2176]	; 0x880
        rect.width = width;
 8006080:	49c8      	ldr	r1, [pc, #800]	; (80063a4 <_ZN15SettingViewBaseC1Ev+0x1624>)
        rect.x = x;
 8006082:	f8c4 685c 	str.w	r6, [r4, #2140]	; 0x85c
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006086:	236e      	movs	r3, #110	; 0x6e
    textureMapper1.setBitmap(touchgfx::Bitmap(BITMAP_POPUP_ID));
 8006088:	a81e      	add	r0, sp, #120	; 0x78
        rect.width = width;
 800608a:	460d      	mov	r5, r1
        rect.x = x;
 800608c:	f8c4 6888 	str.w	r6, [r4, #2184]	; 0x888
        rect.width = width;
 8006090:	f8c4 1860 	str.w	r1, [r4, #2144]	; 0x860
 8006094:	f884 387e 	strb.w	r3, [r4, #2174]	; 0x87e
 8006098:	4601      	mov	r1, r0
 800609a:	230c      	movs	r3, #12
 800609c:	4650      	mov	r0, sl
 800609e:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 80060a2:	f00c f9ff 	bl	80124a4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
     *
     * @see getBitmapPositionX, getBitmapPositionY
     */
    virtual void setBitmapPosition(float x, float y)
    {
        xBitmapPosition = x;
 80060a6:	4bc0      	ldr	r3, [pc, #768]	; (80063a8 <_ZN15SettingViewBaseC1Ev+0x1628>)
 80060a8:	f8c4 588c 	str.w	r5, [r4, #2188]	; 0x88c
        cameraDistance = MAX(d, MINIMAL_CAMERA_DISTANCE);
 80060ac:	eddf 8abf 	vldr	s17, [pc, #764]	; 80063ac <_ZN15SettingViewBaseC1Ev+0x162c>
        xBitmapPosition = x;
 80060b0:	f8ca 302c 	str.w	r3, [sl, #44]	; 0x2c
        yBitmapPosition = y;
 80060b4:	f8ca 3030 	str.w	r3, [sl, #48]	; 0x30
        applyTransformation();
 80060b8:	4650      	mov	r0, sl
 80060ba:	f00c f89d 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        xOrigo = x;
 80060be:	ed9f 8abc 	vldr	s16, [pc, #752]	; 80063b0 <_ZN15SettingViewBaseC1Ev+0x1630>
    textureMapper1.setScale(0.0f);
 80060c2:	ed9f 0abc 	vldr	s0, [pc, #752]	; 80063b4 <_ZN15SettingViewBaseC1Ev+0x1634>
        yOrigo = y;
 80060c6:	ed9f 9abc 	vldr	s18, [pc, #752]	; 80063b8 <_ZN15SettingViewBaseC1Ev+0x1638>
 80060ca:	4650      	mov	r0, sl
 80060cc:	f00c f9fb 	bl	80124c6 <_ZN8touchgfx13TextureMapper8setScaleEf>
        applyTransformation();
 80060d0:	4650      	mov	r0, sl
        cameraDistance = MAX(d, MINIMAL_CAMERA_DISTANCE);
 80060d2:	edca 8a16 	vstr	s17, [sl, #88]	; 0x58
        applyTransformation();
 80060d6:	f00c f88f 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        xOrigo = x;
 80060da:	ed8a 8a11 	vstr	s16, [sl, #68]	; 0x44
        applyTransformation();
 80060de:	4650      	mov	r0, sl
        zOrigo = z;
 80060e0:	edca 8a13 	vstr	s17, [sl, #76]	; 0x4c
        yOrigo = y;
 80060e4:	ed8a 9a12 	vstr	s18, [sl, #72]	; 0x48
        applyTransformation();
 80060e8:	f00c f886 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        xCamera = x;
 80060ec:	ed8a 8a14 	vstr	s16, [sl, #80]	; 0x50
        applyTransformation();
 80060f0:	4650      	mov	r0, sl
        yCamera = y;
 80060f2:	ed8a 9a15 	vstr	s18, [sl, #84]	; 0x54
        applyTransformation();
 80060f6:	f00c f87f 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
    textureMapper1.setAngles(0.0f, 0.0f, 0.0f);
 80060fa:	ed9f 1aae 	vldr	s2, [pc, #696]	; 80063b4 <_ZN15SettingViewBaseC1Ev+0x1634>
 80060fe:	4650      	mov	r0, sl
 8006100:	eef0 0a41 	vmov.f32	s1, s2
 8006104:	eeb0 0a41 	vmov.f32	s0, s2
 8006108:	f00c f9d5 	bl	80124b6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
 800610c:	ed9d 8a10 	vldr	s16, [sp, #64]	; 0x40
        rect.x = x;
 8006110:	4baa      	ldr	r3, [pc, #680]	; (80063bc <_ZN15SettingViewBaseC1Ev+0x163c>)
        rect.width = width;
 8006112:	f8c4 5978 	str.w	r5, [r4, #2424]	; 0x978
    back.setAction(buttonCallback);
 8006116:	f604 3cf4 	addw	ip, r4, #3060	; 0xbf4
 800611a:	4665      	mov	r5, ip
    back.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
 800611c:	aa1e      	add	r2, sp, #120	; 0x78
 800611e:	ee18 0a10 	vmov	r0, s16
        currentRenderingAlgorithm = algorithm;
 8006122:	f884 68ad 	strb.w	r6, [r4, #2221]	; 0x8ad
        rect.x = x;
 8006126:	f8c4 6974 	str.w	r6, [r4, #2420]	; 0x974
        visible = vis;
 800612a:	f884 6995 	strb.w	r6, [r4, #2453]	; 0x995
        rect.x = x;
 800612e:	f8c4 39a0 	str.w	r3, [r4, #2464]	; 0x9a0
 8006132:	a91d      	add	r1, sp, #116	; 0x74
 8006134:	2303      	movs	r3, #3
    back.setAction(buttonCallback);
 8006136:	f8cd c05c 	str.w	ip, [sp, #92]	; 0x5c
 800613a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800613e:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
    back.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
 8006142:	f00d f86c 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    container1.add(back);
 8006146:	ee18 1a10 	vmov	r1, s16
        action = &callback;
 800614a:	f8c4 59c4 	str.w	r5, [r4, #2500]	; 0x9c4
 800614e:	4648      	mov	r0, r9
 8006150:	f00a f93c 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006154:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8006156:	4b9a      	ldr	r3, [pc, #616]	; (80063c0 <_ZN15SettingViewBaseC1Ev+0x1640>)
        linespace = space;
 8006158:	f8a4 6a04 	strh.w	r6, [r4, #2564]	; 0xa04
        color = newColor;
 800615c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8006160:	f8c4 1a00 	str.w	r1, [r4, #2560]	; 0xa00
        boundingArea = calculateBoundingArea();
 8006164:	a818      	add	r0, sp, #96	; 0x60
 8006166:	4629      	mov	r1, r5
 8006168:	f8c4 39d4 	str.w	r3, [r4, #2516]	; 0x9d4
 800616c:	f00c fd7a 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006170:	ab18      	add	r3, sp, #96	; 0x60
 8006172:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8006176:	462b      	mov	r3, r5
 8006178:	333c      	adds	r3, #60	; 0x3c
 800617a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800617e:	4a88      	ldr	r2, [pc, #544]	; (80063a0 <_ZN15SettingViewBaseC1Ev+0x1620>)
 8006180:	921e      	str	r2, [sp, #120]	; 0x78
 8006182:	231e      	movs	r3, #30
    freq.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AWO7));
 8006184:	4628      	mov	r0, r5
 8006186:	a91e      	add	r1, sp, #120	; 0x78
 8006188:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 800618c:	f00c ffec 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container1.add(freq);
 8006190:	4629      	mov	r1, r5
 8006192:	4648      	mov	r0, r9
 8006194:	f00a f91a 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_VOLUME_BAR_ID), touchgfx::Bitmap(BITMAP_VOLUME_BAR_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID));
 8006198:	ed9d 8a12 	vldr	s16, [sp, #72]	; 0x48
 800619c:	4b89      	ldr	r3, [pc, #548]	; (80063c4 <_ZN15SettingViewBaseC1Ev+0x1644>)
 800619e:	f8c4 3a1c 	str.w	r3, [r4, #2588]	; 0xa1c
 80061a2:	a91d      	add	r1, sp, #116	; 0x74
 80061a4:	f04f 0c0f 	mov.w	ip, #15
 80061a8:	f04f 0e07 	mov.w	lr, #7
 80061ac:	460a      	mov	r2, r1
 80061ae:	ee18 0a10 	vmov	r0, s16
 80061b2:	ab1e      	add	r3, sp, #120	; 0x78
 80061b4:	a91c      	add	r1, sp, #112	; 0x70
 80061b6:	f8ad c070 	strh.w	ip, [sp, #112]	; 0x70
 80061ba:	f8ad c074 	strh.w	ip, [sp, #116]	; 0x74
 80061be:	f8ad e078 	strh.w	lr, [sp, #120]	; 0x78
 80061c2:	f00a fe2f 	bl	8010e24 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    slider1.setupHorizontalSlider(24, 19, 0, 0, 205);
 80061c6:	22cd      	movs	r2, #205	; 0xcd
 80061c8:	4633      	mov	r3, r6
 80061ca:	ee18 0a10 	vmov	r0, s16
 80061ce:	9600      	str	r6, [sp, #0]
 80061d0:	9201      	str	r2, [sp, #4]
 80061d2:	2118      	movs	r1, #24
 80061d4:	2213      	movs	r2, #19
 80061d6:	f00a fc9a 	bl	8010b0e <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    slider1.setValueRange(0, 99);
 80061da:	4631      	mov	r1, r6
 80061dc:	2263      	movs	r2, #99	; 0x63
 80061de:	ee18 0a10 	vmov	r0, s16
 80061e2:	f00a fc10 	bl	8010a06 <_ZN8touchgfx6Slider13setValueRangeEii>
    slider1.setValue(0);
 80061e6:	4631      	mov	r1, r6
 80061e8:	ee18 0a10 	vmov	r0, s16
 80061ec:	f00a fb8d 	bl	801090a <_ZN8touchgfx6Slider8setValueEi>
    slider1.setNewValueCallback(sliderValueChangedCallback);
 80061f0:	f604 4204 	addw	r2, r4, #3076	; 0xc04
    slider1.setStopValueCallback(sliderValueConfirmedCallback);
 80061f4:	f604 4314 	addw	r3, r4, #3092	; 0xc14
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 80061f8:	f8c4 2b10 	str.w	r2, [r4, #2832]	; 0xb10
    container1.add(slider1);
 80061fc:	ee18 1a10 	vmov	r1, s16
        stopValueCallback = &callback;
 8006200:	f8c4 3b0c 	str.w	r3, [r4, #2828]	; 0xb0c
 8006204:	4648      	mov	r0, r9
 8006206:	f00a f8e1 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800620a:	4b6f      	ldr	r3, [pc, #444]	; (80063c8 <_ZN15SettingViewBaseC1Ev+0x1648>)
        linespace = space;
 800620c:	f8a4 6b48 	strh.w	r6, [r4, #2888]	; 0xb48
        color = newColor;
 8006210:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8006214:	f8c4 1b44 	str.w	r1, [r4, #2884]	; 0xb44
        boundingArea = calculateBoundingArea();
 8006218:	a818      	add	r0, sp, #96	; 0x60
 800621a:	4641      	mov	r1, r8
 800621c:	f8c4 3b18 	str.w	r3, [r4, #2840]	; 0xb18
 8006220:	f00c fd20 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006224:	ab18      	add	r3, sp, #96	; 0x60
 8006226:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800622a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800622e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006232:	4a5b      	ldr	r2, [pc, #364]	; (80063a0 <_ZN15SettingViewBaseC1Ev+0x1620>)
 8006234:	921e      	str	r2, [sp, #120]	; 0x78
 8006236:	231c      	movs	r3, #28
    demo.setTypedText(touchgfx::TypedText(T___SINGLEUSE_14YJ));
 8006238:	4640      	mov	r0, r8
 800623a:	a91e      	add	r1, sp, #120	; 0x78
 800623c:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 8006240:	f00c ff92 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container1.add(demo);
 8006244:	4641      	mov	r1, r8
 8006246:	4648      	mov	r0, r9
 8006248:	f00a f8c0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800624c:	4b5f      	ldr	r3, [pc, #380]	; (80063cc <_ZN15SettingViewBaseC1Ev+0x164c>)
 800624e:	f8c4 3b60 	str.w	r3, [r4, #2912]	; 0xb60
    hz.setPosition(80, 177, 160, 31);
 8006252:	f604 385c 	addw	r8, r4, #2908	; 0xb5c
        rect.width = width;
 8006256:	23a0      	movs	r3, #160	; 0xa0
        boundingArea = calculateBoundingArea();
 8006258:	a818      	add	r0, sp, #96	; 0x60
 800625a:	4641      	mov	r1, r8
 800625c:	f8a4 3b64 	strh.w	r3, [r4, #2916]	; 0xb64
 8006260:	f7fe fbfa 	bl	8004a58 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
 8006264:	ab18      	add	r3, sp, #96	; 0x60
 8006266:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
        rect.height = height;
 800626a:	f04f 051f 	mov.w	r5, #31
 800626e:	f604 3398 	addw	r3, r4, #2968	; 0xb98
 8006272:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006276:	f8a4 5b66 	strh.w	r5, [r4, #2918]	; 0xb66
        boundingArea = calculateBoundingArea();
 800627a:	4641      	mov	r1, r8
 800627c:	a818      	add	r0, sp, #96	; 0x60
        boundingArea = calculateBoundingArea();
 800627e:	9310      	str	r3, [sp, #64]	; 0x40
        boundingArea = calculateBoundingArea();
 8006280:	f7fe fbea 	bl	8004a58 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
 8006284:	ab18      	add	r3, sp, #96	; 0x60
 8006286:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800628a:	9b10      	ldr	r3, [sp, #64]	; 0x40
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800628c:	f8db c000 	ldr.w	ip, [fp]
 8006290:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8006294:	f04f 33ff 	mov.w	r3, #4294967295
 8006298:	f8c4 3b9c 	str.w	r3, [r4, #2972]	; 0xb9c
        color = newColor;
 800629c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 80062a0:	f8a4 6b90 	strh.w	r6, [r4, #2960]	; 0xb90
        boundingArea = calculateBoundingArea();
 80062a4:	f8c4 6b98 	str.w	r6, [r4, #2968]	; 0xb98
 80062a8:	f8c4 6ba0 	str.w	r6, [r4, #2976]	; 0xba0
    box2.setPosition(0, 0, 320, 240);
 80062ac:	f604 0558 	addw	r5, r4, #2136	; 0x858
        color = newColor;
 80062b0:	f8c4 3b8c 	str.w	r3, [r4, #2956]	; 0xb8c
    Unicode::snprintf(hzBuffer, HZ_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GC5Q).getText());
 80062b4:	f604 36dc 	addw	r6, r4, #3036	; 0xbdc
 80062b8:	f1bc 0f00 	cmp.w	ip, #0
 80062bc:	f000 818b 	beq.w	80065d6 <_ZN15SettingViewBaseC1Ev+0x1856>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062c0:	883b      	ldrh	r3, [r7, #0]
 80062c2:	2b1b      	cmp	r3, #27
 80062c4:	f240 818d 	bls.w	80065e2 <_ZN15SettingViewBaseC1Ev+0x1862>
        return texts->getText(typedTextId);
 80062c8:	4b41      	ldr	r3, [pc, #260]	; (80063d0 <_ZN15SettingViewBaseC1Ev+0x1650>)
 80062ca:	211b      	movs	r1, #27
 80062cc:	6818      	ldr	r0, [r3, #0]
 80062ce:	f000 fb5b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 80062d2:	4a40      	ldr	r2, [pc, #256]	; (80063d4 <_ZN15SettingViewBaseC1Ev+0x1654>)
 80062d4:	4603      	mov	r3, r0
 80062d6:	210a      	movs	r1, #10
 80062d8:	4630      	mov	r0, r6
 80062da:	f012 f8fd 	bl	80184d8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80062de:	4a30      	ldr	r2, [pc, #192]	; (80063a0 <_ZN15SettingViewBaseC1Ev+0x1620>)
        wc1 = value;
 80062e0:	f8c4 6ba4 	str.w	r6, [r4, #2980]	; 0xba4
 80062e4:	231d      	movs	r3, #29
    hz.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1S7H));
 80062e6:	a91e      	add	r1, sp, #120	; 0x78
 80062e8:	4640      	mov	r0, r8
 80062ea:	921e      	str	r2, [sp, #120]	; 0x78
 80062ec:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 80062f0:	f00c ff3a 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container1.add(hz);
 80062f4:	4641      	mov	r1, r8
 80062f6:	4648      	mov	r0, r9
 80062f8:	f00a f868 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button_demo.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_FOLDER_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_FOLDER_48_ID));
 80062fc:	9f14      	ldr	r7, [sp, #80]	; 0x50
        rect.x = x;
 80062fe:	4b36      	ldr	r3, [pc, #216]	; (80063d8 <_ZN15SettingViewBaseC1Ev+0x1658>)
 8006300:	f8c4 3bac 	str.w	r3, [r4, #2988]	; 0xbac
 8006304:	aa1e      	add	r2, sp, #120	; 0x78
 8006306:	2302      	movs	r3, #2
 8006308:	a91d      	add	r1, sp, #116	; 0x74
 800630a:	4638      	mov	r0, r7
 800630c:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8006310:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 8006314:	f00c ff83 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006318:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800631a:	f8c4 3bd0 	str.w	r3, [r4, #3024]	; 0xbd0
 800631e:	1d26      	adds	r6, r4, #4
    container1.add(button_demo);
 8006320:	4639      	mov	r1, r7
 8006322:	4648      	mov	r0, r9
 8006324:	f00a f852 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006328:	990d      	ldr	r1, [sp, #52]	; 0x34
 800632a:	4630      	mov	r0, r6
 800632c:	f00a f84e 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006330:	9915      	ldr	r1, [sp, #84]	; 0x54
 8006332:	4630      	mov	r0, r6
 8006334:	f00a f84a 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006338:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800633a:	4630      	mov	r0, r6
 800633c:	f00a f846 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006340:	ee19 1a90 	vmov	r1, s19
 8006344:	4630      	mov	r0, r6
 8006346:	f00a f841 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800634a:	9902      	ldr	r1, [sp, #8]
 800634c:	4630      	mov	r0, r6
 800634e:	f00a f83d 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006352:	ee1a 1a10 	vmov	r1, s20
 8006356:	4630      	mov	r0, r6
 8006358:	f00a f838 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800635c:	9903      	ldr	r1, [sp, #12]
 800635e:	4630      	mov	r0, r6
 8006360:	f00a f834 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006364:	ee1a 1a90 	vmov	r1, s21
 8006368:	4630      	mov	r0, r6
 800636a:	f00a f82f 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800636e:	9904      	ldr	r1, [sp, #16]
 8006370:	4630      	mov	r0, r6
 8006372:	f00a f82b 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006376:	ee1b 1a10 	vmov	r1, s22
 800637a:	4630      	mov	r0, r6
 800637c:	f00a f826 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006380:	9905      	ldr	r1, [sp, #20]
 8006382:	4630      	mov	r0, r6
 8006384:	f00a f822 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006388:	ee1b 1a90 	vmov	r1, s23
 800638c:	4630      	mov	r0, r6
 800638e:	f00a f81d 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006392:	9906      	ldr	r1, [sp, #24]
 8006394:	e022      	b.n	80063dc <_ZN15SettingViewBaseC1Ev+0x165c>
 8006396:	bf00      	nop
 8006398:	0098000e 	.word	0x0098000e
 800639c:	007a001e 	.word	0x007a001e
 80063a0:	08026e28 	.word	0x08026e28
 80063a4:	00f00140 	.word	0x00f00140
 80063a8:	42100000 	.word	0x42100000
 80063ac:	447a0000 	.word	0x447a0000
 80063b0:	43200000 	.word	0x43200000
 80063b4:	00000000 	.word	0x00000000
 80063b8:	42f00000 	.word	0x42f00000
 80063bc:	0022001d 	.word	0x0022001d
 80063c0:	007a0079 	.word	0x007a0079
 80063c4:	00900024 	.word	0x00900024
 80063c8:	00340089 	.word	0x00340089
 80063cc:	00b10050 	.word	0x00b10050
 80063d0:	20002ce8 	.word	0x20002ce8
 80063d4:	0802797c 	.word	0x0802797c
 80063d8:	00530089 	.word	0x00530089
 80063dc:	4630      	mov	r0, r6
 80063de:	f009 fff5 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063e2:	ee1c 1a10 	vmov	r1, s24
 80063e6:	4630      	mov	r0, r6
 80063e8:	f009 fff0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063ec:	9907      	ldr	r1, [sp, #28]
 80063ee:	4630      	mov	r0, r6
 80063f0:	f009 ffec 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063f4:	ee1c 1a90 	vmov	r1, s25
 80063f8:	4630      	mov	r0, r6
 80063fa:	f009 ffe7 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063fe:	9908      	ldr	r1, [sp, #32]
 8006400:	4630      	mov	r0, r6
 8006402:	f009 ffe3 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006406:	ee1d 1a10 	vmov	r1, s26
 800640a:	4630      	mov	r0, r6
 800640c:	f009 ffde 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006410:	ee1d 1a90 	vmov	r1, s27
 8006414:	4630      	mov	r0, r6
 8006416:	f009 ffd9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800641a:	ee1e 1a10 	vmov	r1, s28
 800641e:	4630      	mov	r0, r6
 8006420:	f009 ffd4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006424:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006426:	4630      	mov	r0, r6
 8006428:	f009 ffd0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800642c:	ee1e 1a90 	vmov	r1, s29
 8006430:	4630      	mov	r0, r6
 8006432:	f009 ffcb 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006436:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006438:	4630      	mov	r0, r6
 800643a:	f009 ffc7 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800643e:	ee1f 1a10 	vmov	r1, s30
 8006442:	4630      	mov	r0, r6
 8006444:	f009 ffc2 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006448:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800644a:	4630      	mov	r0, r6
 800644c:	f009 ffbe 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006450:	ee1f 1a90 	vmov	r1, s31
 8006454:	4630      	mov	r0, r6
 8006456:	f009 ffb9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800645a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800645c:	4630      	mov	r0, r6
 800645e:	f009 ffb5 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006462:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006464:	4630      	mov	r0, r6
 8006466:	f009 ffb1 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800646a:	9916      	ldr	r1, [sp, #88]	; 0x58
 800646c:	4630      	mov	r0, r6
 800646e:	f009 ffad 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006472:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006474:	4630      	mov	r0, r6
 8006476:	f009 ffa9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800647a:	4629      	mov	r1, r5
 800647c:	4630      	mov	r0, r6
 800647e:	f009 ffa5 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006482:	4651      	mov	r1, sl
 8006484:	4630      	mov	r0, r6
 8006486:	f009 ffa1 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800648a:	4630      	mov	r0, r6
 800648c:	4649      	mov	r1, r9
 800648e:	f009 ff9d 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006492:	4620      	mov	r0, r4
 8006494:	b021      	add	sp, #132	; 0x84
 8006496:	ecbd 8b10 	vpop	{d8-d15}
 800649a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800649e:	f8db 3000 	ldr.w	r3, [fp]
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	f000 8091 	beq.w	80065ca <_ZN15SettingViewBaseC1Ev+0x184a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80064a8:	4a51      	ldr	r2, [pc, #324]	; (80065f0 <_ZN15SettingViewBaseC1Ev+0x1870>)
 80064aa:	f893 006e 	ldrb.w	r0, [r3, #110]	; 0x6e
 80064ae:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80064b0:	4b50      	ldr	r3, [pc, #320]	; (80065f4 <_ZN15SettingViewBaseC1Ev+0x1874>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80064b2:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80064b6:	6818      	ldr	r0, [r3, #0]
 80064b8:	f000 fa66 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80064bc:	6833      	ldr	r3, [r6, #0]
 80064be:	4601      	mov	r1, r0
 80064c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80064c2:	9116      	str	r1, [sp, #88]	; 0x58
 80064c4:	4630      	mov	r0, r6
 80064c6:	4798      	blx	r3
 80064c8:	6833      	ldr	r3, [r6, #0]
 80064ca:	9916      	ldr	r1, [sp, #88]	; 0x58
 80064cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064ce:	4605      	mov	r5, r0
 80064d0:	4630      	mov	r0, r6
 80064d2:	4798      	blx	r3
 80064d4:	6833      	ldr	r3, [r6, #0]
 80064d6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80064d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064da:	fb15 f500 	smulbb	r5, r5, r0
 80064de:	4630      	mov	r0, r6
 80064e0:	4798      	blx	r3
 80064e2:	b2ed      	uxtb	r5, r5
 80064e4:	4428      	add	r0, r5
 80064e6:	f884 0125 	strb.w	r0, [r4, #293]	; 0x125
 80064ea:	f7fe bf76 	b.w	80053da <_ZN15SettingViewBaseC1Ev+0x65a>
            textHeightIncludingSpacing = 0;
 80064ee:	2300      	movs	r3, #0
 80064f0:	f884 316d 	strb.w	r3, [r4, #365]	; 0x16d
 80064f4:	f7fe bfb0 	b.w	8005458 <_ZN15SettingViewBaseC1Ev+0x6d8>
 80064f8:	2300      	movs	r3, #0
 80064fa:	f884 31b5 	strb.w	r3, [r4, #437]	; 0x1b5
 80064fe:	f7fe bfeb 	b.w	80054d8 <_ZN15SettingViewBaseC1Ev+0x758>
 8006502:	2300      	movs	r3, #0
 8006504:	f884 31fd 	strb.w	r3, [r4, #509]	; 0x1fd
 8006508:	f7ff b825 	b.w	8005556 <_ZN15SettingViewBaseC1Ev+0x7d6>
 800650c:	2300      	movs	r3, #0
 800650e:	f884 3245 	strb.w	r3, [r4, #581]	; 0x245
 8006512:	f7ff b860 	b.w	80055d6 <_ZN15SettingViewBaseC1Ev+0x856>
 8006516:	2300      	movs	r3, #0
 8006518:	f884 328d 	strb.w	r3, [r4, #653]	; 0x28d
 800651c:	f7ff b89a 	b.w	8005654 <_ZN15SettingViewBaseC1Ev+0x8d4>
 8006520:	2300      	movs	r3, #0
 8006522:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
 8006526:	f7ff b8e8 	b.w	80056fa <_ZN15SettingViewBaseC1Ev+0x97a>
 800652a:	2300      	movs	r3, #0
 800652c:	f884 331d 	strb.w	r3, [r4, #797]	; 0x31d
 8006530:	f7ff b922 	b.w	8005778 <_ZN15SettingViewBaseC1Ev+0x9f8>
 8006534:	2300      	movs	r3, #0
 8006536:	f884 3365 	strb.w	r3, [r4, #869]	; 0x365
 800653a:	f7ff b95d 	b.w	80057f8 <_ZN15SettingViewBaseC1Ev+0xa78>
 800653e:	2300      	movs	r3, #0
 8006540:	f884 33ad 	strb.w	r3, [r4, #941]	; 0x3ad
 8006544:	f7ff b997 	b.w	8005876 <_ZN15SettingViewBaseC1Ev+0xaf6>
 8006548:	2300      	movs	r3, #0
 800654a:	f884 33f5 	strb.w	r3, [r4, #1013]	; 0x3f5
 800654e:	f7ff b9d2 	b.w	80058f6 <_ZN15SettingViewBaseC1Ev+0xb76>
 8006552:	2300      	movs	r3, #0
 8006554:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
 8006558:	f7ff ba0b 	b.w	8005972 <_ZN15SettingViewBaseC1Ev+0xbf2>
 800655c:	2300      	movs	r3, #0
 800655e:	f884 3485 	strb.w	r3, [r4, #1157]	; 0x485
 8006562:	f7ff ba59 	b.w	8005a18 <_ZN15SettingViewBaseC1Ev+0xc98>
 8006566:	2300      	movs	r3, #0
 8006568:	f884 34cd 	strb.w	r3, [r4, #1229]	; 0x4cd
 800656c:	f7ff ba94 	b.w	8005a98 <_ZN15SettingViewBaseC1Ev+0xd18>
 8006570:	2300      	movs	r3, #0
 8006572:	f884 3515 	strb.w	r3, [r4, #1301]	; 0x515
 8006576:	f7ff bad0 	b.w	8005b1a <_ZN15SettingViewBaseC1Ev+0xd9a>
 800657a:	2300      	movs	r3, #0
 800657c:	f884 3561 	strb.w	r3, [r4, #1377]	; 0x561
 8006580:	f7ff bb0d 	b.w	8005b9e <_ZN15SettingViewBaseC1Ev+0xe1e>
 8006584:	2300      	movs	r3, #0
 8006586:	f884 35a9 	strb.w	r3, [r4, #1449]	; 0x5a9
 800658a:	f7ff bb4a 	b.w	8005c22 <_ZN15SettingViewBaseC1Ev+0xea2>
 800658e:	2300      	movs	r3, #0
 8006590:	f884 35f1 	strb.w	r3, [r4, #1521]	; 0x5f1
 8006594:	f7ff bb90 	b.w	8005cb8 <_ZN15SettingViewBaseC1Ev+0xf38>
 8006598:	2300      	movs	r3, #0
 800659a:	f884 3639 	strb.w	r3, [r4, #1593]	; 0x639
 800659e:	f7ff bbcd 	b.w	8005d3c <_ZN15SettingViewBaseC1Ev+0xfbc>
 80065a2:	2300      	movs	r3, #0
 80065a4:	f884 3681 	strb.w	r3, [r4, #1665]	; 0x681
 80065a8:	e40a      	b.n	8005dc0 <_ZN15SettingViewBaseC1Ev+0x1040>
 80065aa:	2300      	movs	r3, #0
 80065ac:	f884 36c9 	strb.w	r3, [r4, #1737]	; 0x6c9
 80065b0:	e448      	b.n	8005e44 <_ZN15SettingViewBaseC1Ev+0x10c4>
 80065b2:	2300      	movs	r3, #0
 80065b4:	f884 3711 	strb.w	r3, [r4, #1809]	; 0x711
 80065b8:	e485      	b.n	8005ec6 <_ZN15SettingViewBaseC1Ev+0x1146>
 80065ba:	2300      	movs	r3, #0
 80065bc:	f884 3759 	strb.w	r3, [r4, #1881]	; 0x759
 80065c0:	e4c3      	b.n	8005f4a <_ZN15SettingViewBaseC1Ev+0x11ca>
 80065c2:	2300      	movs	r3, #0
 80065c4:	f884 37a1 	strb.w	r3, [r4, #1953]	; 0x7a1
 80065c8:	e500      	b.n	8005fcc <_ZN15SettingViewBaseC1Ev+0x124c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80065ca:	4b0b      	ldr	r3, [pc, #44]	; (80065f8 <_ZN15SettingViewBaseC1Ev+0x1878>)
 80065cc:	4a0b      	ldr	r2, [pc, #44]	; (80065fc <_ZN15SettingViewBaseC1Ev+0x187c>)
 80065ce:	480c      	ldr	r0, [pc, #48]	; (8006600 <_ZN15SettingViewBaseC1Ev+0x1880>)
 80065d0:	216c      	movs	r1, #108	; 0x6c
 80065d2:	f01e fc33 	bl	8024e3c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80065d6:	4b08      	ldr	r3, [pc, #32]	; (80065f8 <_ZN15SettingViewBaseC1Ev+0x1878>)
 80065d8:	4a0a      	ldr	r2, [pc, #40]	; (8006604 <_ZN15SettingViewBaseC1Ev+0x1884>)
 80065da:	4809      	ldr	r0, [pc, #36]	; (8006600 <_ZN15SettingViewBaseC1Ev+0x1880>)
 80065dc:	2160      	movs	r1, #96	; 0x60
 80065de:	f01e fc2d 	bl	8024e3c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80065e2:	4b09      	ldr	r3, [pc, #36]	; (8006608 <_ZN15SettingViewBaseC1Ev+0x1888>)
 80065e4:	4a07      	ldr	r2, [pc, #28]	; (8006604 <_ZN15SettingViewBaseC1Ev+0x1884>)
 80065e6:	4806      	ldr	r0, [pc, #24]	; (8006600 <_ZN15SettingViewBaseC1Ev+0x1880>)
 80065e8:	2161      	movs	r1, #97	; 0x61
 80065ea:	f01e fc27 	bl	8024e3c <__assert_func>
 80065ee:	bf00      	nop
 80065f0:	20002ce4 	.word	0x20002ce4
 80065f4:	20002ce8 	.word	0x20002ce8
 80065f8:	08027710 	.word	0x08027710
 80065fc:	08027754 	.word	0x08027754
 8006600:	08027790 	.word	0x08027790
 8006604:	08027944 	.word	0x08027944
 8006608:	08027904 	.word	0x08027904

0800660c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_tazugane_11_1bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_tazugane_11_1bpp();

touchgfx::GeneratedFont& getFont_tazugane_11_1bpp()
{
    static touchgfx::GeneratedFont tazugane_11_1bpp(glyphs_tazugane_11_1bpp, 16, 11, 0, 1, 0, 0, 0, unicodes_tazugane_11_1bpp, kerning_tazugane_11_1bpp, 63, 0, 0, 0);
 800660c:	4770      	bx	lr
 800660e:	bf00      	nop

08006610 <_Z24getFont_tazugane_11_1bppv>:
{
 8006610:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont tazugane_11_1bpp(glyphs_tazugane_11_1bpp, 16, 11, 0, 1, 0, 0, 0, unicodes_tazugane_11_1bpp, kerning_tazugane_11_1bpp, 63, 0, 0, 0);
 8006612:	4d17      	ldr	r5, [pc, #92]	; (8006670 <_Z24getFont_tazugane_11_1bppv+0x60>)
 8006614:	782b      	ldrb	r3, [r5, #0]
 8006616:	f3bf 8f5b 	dmb	ish
 800661a:	f013 0401 	ands.w	r4, r3, #1
{
 800661e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont tazugane_11_1bpp(glyphs_tazugane_11_1bpp, 16, 11, 0, 1, 0, 0, 0, unicodes_tazugane_11_1bpp, kerning_tazugane_11_1bpp, 63, 0, 0, 0);
 8006620:	d002      	beq.n	8006628 <_Z24getFont_tazugane_11_1bppv+0x18>
    return tazugane_11_1bpp;
}
 8006622:	4814      	ldr	r0, [pc, #80]	; (8006674 <_Z24getFont_tazugane_11_1bppv+0x64>)
 8006624:	b00d      	add	sp, #52	; 0x34
 8006626:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont tazugane_11_1bpp(glyphs_tazugane_11_1bpp, 16, 11, 0, 1, 0, 0, 0, unicodes_tazugane_11_1bpp, kerning_tazugane_11_1bpp, 63, 0, 0, 0);
 8006628:	4628      	mov	r0, r5
 800662a:	f01d fdea 	bl	8024202 <__cxa_guard_acquire>
 800662e:	2800      	cmp	r0, #0
 8006630:	d0f7      	beq.n	8006622 <_Z24getFont_tazugane_11_1bppv+0x12>
 8006632:	4911      	ldr	r1, [pc, #68]	; (8006678 <_Z24getFont_tazugane_11_1bppv+0x68>)
 8006634:	4a11      	ldr	r2, [pc, #68]	; (800667c <_Z24getFont_tazugane_11_1bppv+0x6c>)
 8006636:	9205      	str	r2, [sp, #20]
 8006638:	203f      	movs	r0, #63	; 0x3f
 800663a:	2301      	movs	r3, #1
 800663c:	e9cd 1006 	strd	r1, r0, [sp, #24]
 8006640:	2210      	movs	r2, #16
 8006642:	490f      	ldr	r1, [pc, #60]	; (8006680 <_Z24getFont_tazugane_11_1bppv+0x70>)
 8006644:	9301      	str	r3, [sp, #4]
 8006646:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800664a:	230b      	movs	r3, #11
 800664c:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8006650:	940a      	str	r4, [sp, #40]	; 0x28
 8006652:	9402      	str	r4, [sp, #8]
 8006654:	9400      	str	r4, [sp, #0]
 8006656:	4807      	ldr	r0, [pc, #28]	; (8006674 <_Z24getFont_tazugane_11_1bppv+0x64>)
 8006658:	f7fc fc98 	bl	8002f8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800665c:	4628      	mov	r0, r5
 800665e:	f01d fddc 	bl	802421a <__cxa_guard_release>
 8006662:	4808      	ldr	r0, [pc, #32]	; (8006684 <_Z24getFont_tazugane_11_1bppv+0x74>)
 8006664:	f01e fc08 	bl	8024e78 <atexit>
}
 8006668:	4802      	ldr	r0, [pc, #8]	; (8006674 <_Z24getFont_tazugane_11_1bppv+0x64>)
 800666a:	b00d      	add	sp, #52	; 0x34
 800666c:	bd30      	pop	{r4, r5, pc}
 800666e:	bf00      	nop
 8006670:	20002ae8 	.word	0x20002ae8
 8006674:	20002aec 	.word	0x20002aec
 8006678:	0802b74c 	.word	0x0802b74c
 800667c:	0802b790 	.word	0x0802b790
 8006680:	0802b32c 	.word	0x0802b32c
 8006684:	0800660d 	.word	0x0800660d

08006688 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_tazugane_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_tazugane_15_4bpp();

touchgfx::GeneratedFont& getFont_tazugane_15_4bpp()
{
    static touchgfx::GeneratedFont tazugane_15_4bpp(glyphs_tazugane_15_4bpp, 35, 15, 4, 4, 1, 0, 0, unicodes_tazugane_15_4bpp, kerning_tazugane_15_4bpp, 63, 0, 0, 0);
 8006688:	4770      	bx	lr
 800668a:	bf00      	nop

0800668c <_Z24getFont_tazugane_15_4bppv>:
{
 800668c:	b570      	push	{r4, r5, r6, lr}
    static touchgfx::GeneratedFont tazugane_15_4bpp(glyphs_tazugane_15_4bpp, 35, 15, 4, 4, 1, 0, 0, unicodes_tazugane_15_4bpp, kerning_tazugane_15_4bpp, 63, 0, 0, 0);
 800668e:	4d17      	ldr	r5, [pc, #92]	; (80066ec <_Z24getFont_tazugane_15_4bppv+0x60>)
 8006690:	782b      	ldrb	r3, [r5, #0]
 8006692:	f3bf 8f5b 	dmb	ish
 8006696:	f013 0401 	ands.w	r4, r3, #1
{
 800669a:	b08c      	sub	sp, #48	; 0x30
    static touchgfx::GeneratedFont tazugane_15_4bpp(glyphs_tazugane_15_4bpp, 35, 15, 4, 4, 1, 0, 0, unicodes_tazugane_15_4bpp, kerning_tazugane_15_4bpp, 63, 0, 0, 0);
 800669c:	d002      	beq.n	80066a4 <_Z24getFont_tazugane_15_4bppv+0x18>
    return tazugane_15_4bpp;
}
 800669e:	4814      	ldr	r0, [pc, #80]	; (80066f0 <_Z24getFont_tazugane_15_4bppv+0x64>)
 80066a0:	b00c      	add	sp, #48	; 0x30
 80066a2:	bd70      	pop	{r4, r5, r6, pc}
    static touchgfx::GeneratedFont tazugane_15_4bpp(glyphs_tazugane_15_4bpp, 35, 15, 4, 4, 1, 0, 0, unicodes_tazugane_15_4bpp, kerning_tazugane_15_4bpp, 63, 0, 0, 0);
 80066a4:	4628      	mov	r0, r5
 80066a6:	f01d fdac 	bl	8024202 <__cxa_guard_acquire>
 80066aa:	2800      	cmp	r0, #0
 80066ac:	d0f7      	beq.n	800669e <_Z24getFont_tazugane_15_4bppv+0x12>
 80066ae:	4811      	ldr	r0, [pc, #68]	; (80066f4 <_Z24getFont_tazugane_15_4bppv+0x68>)
 80066b0:	4911      	ldr	r1, [pc, #68]	; (80066f8 <_Z24getFont_tazugane_15_4bppv+0x6c>)
 80066b2:	9105      	str	r1, [sp, #20]
 80066b4:	2304      	movs	r3, #4
 80066b6:	263f      	movs	r6, #63	; 0x3f
 80066b8:	2201      	movs	r2, #1
 80066ba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80066be:	490f      	ldr	r1, [pc, #60]	; (80066fc <_Z24getFont_tazugane_15_4bppv+0x70>)
 80066c0:	9300      	str	r3, [sp, #0]
 80066c2:	2223      	movs	r2, #35	; 0x23
 80066c4:	230f      	movs	r3, #15
 80066c6:	e9cd 0606 	strd	r0, r6, [sp, #24]
 80066ca:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80066ce:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80066d2:	940a      	str	r4, [sp, #40]	; 0x28
 80066d4:	4806      	ldr	r0, [pc, #24]	; (80066f0 <_Z24getFont_tazugane_15_4bppv+0x64>)
 80066d6:	f7fc fc59 	bl	8002f8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80066da:	4628      	mov	r0, r5
 80066dc:	f01d fd9d 	bl	802421a <__cxa_guard_release>
 80066e0:	4807      	ldr	r0, [pc, #28]	; (8006700 <_Z24getFont_tazugane_15_4bppv+0x74>)
 80066e2:	f01e fbc9 	bl	8024e78 <atexit>
}
 80066e6:	4802      	ldr	r0, [pc, #8]	; (80066f0 <_Z24getFont_tazugane_15_4bppv+0x64>)
 80066e8:	b00c      	add	sp, #48	; 0x30
 80066ea:	bd70      	pop	{r4, r5, r6, pc}
 80066ec:	20002b14 	.word	0x20002b14
 80066f0:	20002b18 	.word	0x20002b18
 80066f4:	0802b75c 	.word	0x0802b75c
 80066f8:	0802b794 	.word	0x0802b794
 80066fc:	0802b40c 	.word	0x0802b40c
 8006700:	08006689 	.word	0x08006689

08006704 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_tazugane_35_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_tazugane_35_4bpp();

touchgfx::GeneratedFont& getFont_tazugane_35_4bpp()
{
    static touchgfx::GeneratedFont tazugane_35_4bpp(glyphs_tazugane_35_4bpp, 17, 35, 1, 4, 1, 0, 0, unicodes_tazugane_35_4bpp, kerning_tazugane_35_4bpp, 63, 0, 0, 0);
 8006704:	4770      	bx	lr
 8006706:	bf00      	nop

08006708 <_Z24getFont_tazugane_35_4bppv>:
{
 8006708:	b570      	push	{r4, r5, r6, lr}
    static touchgfx::GeneratedFont tazugane_35_4bpp(glyphs_tazugane_35_4bpp, 17, 35, 1, 4, 1, 0, 0, unicodes_tazugane_35_4bpp, kerning_tazugane_35_4bpp, 63, 0, 0, 0);
 800670a:	4d17      	ldr	r5, [pc, #92]	; (8006768 <_Z24getFont_tazugane_35_4bppv+0x60>)
 800670c:	782b      	ldrb	r3, [r5, #0]
 800670e:	f3bf 8f5b 	dmb	ish
 8006712:	f013 0401 	ands.w	r4, r3, #1
{
 8006716:	b08c      	sub	sp, #48	; 0x30
    static touchgfx::GeneratedFont tazugane_35_4bpp(glyphs_tazugane_35_4bpp, 17, 35, 1, 4, 1, 0, 0, unicodes_tazugane_35_4bpp, kerning_tazugane_35_4bpp, 63, 0, 0, 0);
 8006718:	d002      	beq.n	8006720 <_Z24getFont_tazugane_35_4bppv+0x18>
    return tazugane_35_4bpp;
}
 800671a:	4814      	ldr	r0, [pc, #80]	; (800676c <_Z24getFont_tazugane_35_4bppv+0x64>)
 800671c:	b00c      	add	sp, #48	; 0x30
 800671e:	bd70      	pop	{r4, r5, r6, pc}
    static touchgfx::GeneratedFont tazugane_35_4bpp(glyphs_tazugane_35_4bpp, 17, 35, 1, 4, 1, 0, 0, unicodes_tazugane_35_4bpp, kerning_tazugane_35_4bpp, 63, 0, 0, 0);
 8006720:	4628      	mov	r0, r5
 8006722:	f01d fd6e 	bl	8024202 <__cxa_guard_acquire>
 8006726:	2800      	cmp	r0, #0
 8006728:	d0f7      	beq.n	800671a <_Z24getFont_tazugane_35_4bppv+0x12>
 800672a:	4811      	ldr	r0, [pc, #68]	; (8006770 <_Z24getFont_tazugane_35_4bppv+0x68>)
 800672c:	4911      	ldr	r1, [pc, #68]	; (8006774 <_Z24getFont_tazugane_35_4bppv+0x6c>)
 800672e:	9105      	str	r1, [sp, #20]
 8006730:	2301      	movs	r3, #1
 8006732:	263f      	movs	r6, #63	; 0x3f
 8006734:	2204      	movs	r2, #4
 8006736:	e9cd 3200 	strd	r3, r2, [sp]
 800673a:	490f      	ldr	r1, [pc, #60]	; (8006778 <_Z24getFont_tazugane_35_4bppv+0x70>)
 800673c:	9302      	str	r3, [sp, #8]
 800673e:	2211      	movs	r2, #17
 8006740:	2323      	movs	r3, #35	; 0x23
 8006742:	e9cd 0606 	strd	r0, r6, [sp, #24]
 8006746:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800674a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800674e:	940a      	str	r4, [sp, #40]	; 0x28
 8006750:	4806      	ldr	r0, [pc, #24]	; (800676c <_Z24getFont_tazugane_35_4bppv+0x64>)
 8006752:	f7fc fc1b 	bl	8002f8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006756:	4628      	mov	r0, r5
 8006758:	f01d fd5f 	bl	802421a <__cxa_guard_release>
 800675c:	4807      	ldr	r0, [pc, #28]	; (800677c <_Z24getFont_tazugane_35_4bppv+0x74>)
 800675e:	f01e fb8b 	bl	8024e78 <atexit>
}
 8006762:	4802      	ldr	r0, [pc, #8]	; (800676c <_Z24getFont_tazugane_35_4bppv+0x64>)
 8006764:	b00c      	add	sp, #48	; 0x30
 8006766:	bd70      	pop	{r4, r5, r6, pc}
 8006768:	20002b40 	.word	0x20002b40
 800676c:	20002b44 	.word	0x20002b44
 8006770:	0802b788 	.word	0x0802b788
 8006774:	0802b798 	.word	0x0802b798
 8006778:	0802b5f8 	.word	0x0802b5f8
 800677c:	08006705 	.word	0x08006705

08006780 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_tazugane_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_tazugane_40_4bpp();

touchgfx::GeneratedFont& getFont_tazugane_40_4bpp()
{
    static touchgfx::GeneratedFont tazugane_40_4bpp(glyphs_tazugane_40_4bpp, 7, 40, 2, 4, 1, 0, 0, unicodes_tazugane_40_4bpp, kerning_tazugane_40_4bpp, 63, 0, 0, 0);
 8006780:	4770      	bx	lr
 8006782:	bf00      	nop

08006784 <_Z24getFont_tazugane_40_4bppv>:
{
 8006784:	b570      	push	{r4, r5, r6, lr}
    static touchgfx::GeneratedFont tazugane_40_4bpp(glyphs_tazugane_40_4bpp, 7, 40, 2, 4, 1, 0, 0, unicodes_tazugane_40_4bpp, kerning_tazugane_40_4bpp, 63, 0, 0, 0);
 8006786:	4d18      	ldr	r5, [pc, #96]	; (80067e8 <_Z24getFont_tazugane_40_4bppv+0x64>)
 8006788:	782b      	ldrb	r3, [r5, #0]
 800678a:	f3bf 8f5b 	dmb	ish
 800678e:	f013 0401 	ands.w	r4, r3, #1
{
 8006792:	b08c      	sub	sp, #48	; 0x30
    static touchgfx::GeneratedFont tazugane_40_4bpp(glyphs_tazugane_40_4bpp, 7, 40, 2, 4, 1, 0, 0, unicodes_tazugane_40_4bpp, kerning_tazugane_40_4bpp, 63, 0, 0, 0);
 8006794:	d002      	beq.n	800679c <_Z24getFont_tazugane_40_4bppv+0x18>
    return tazugane_40_4bpp;
}
 8006796:	4815      	ldr	r0, [pc, #84]	; (80067ec <_Z24getFont_tazugane_40_4bppv+0x68>)
 8006798:	b00c      	add	sp, #48	; 0x30
 800679a:	bd70      	pop	{r4, r5, r6, pc}
    static touchgfx::GeneratedFont tazugane_40_4bpp(glyphs_tazugane_40_4bpp, 7, 40, 2, 4, 1, 0, 0, unicodes_tazugane_40_4bpp, kerning_tazugane_40_4bpp, 63, 0, 0, 0);
 800679c:	4628      	mov	r0, r5
 800679e:	f01d fd30 	bl	8024202 <__cxa_guard_acquire>
 80067a2:	2800      	cmp	r0, #0
 80067a4:	d0f7      	beq.n	8006796 <_Z24getFont_tazugane_40_4bppv+0x12>
 80067a6:	4e12      	ldr	r6, [pc, #72]	; (80067f0 <_Z24getFont_tazugane_40_4bppv+0x6c>)
 80067a8:	4812      	ldr	r0, [pc, #72]	; (80067f4 <_Z24getFont_tazugane_40_4bppv+0x70>)
 80067aa:	940a      	str	r4, [sp, #40]	; 0x28
 80067ac:	233f      	movs	r3, #63	; 0x3f
 80067ae:	9307      	str	r3, [sp, #28]
 80067b0:	2101      	movs	r1, #1
 80067b2:	2204      	movs	r2, #4
 80067b4:	2302      	movs	r3, #2
 80067b6:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80067ba:	e9cd 0605 	strd	r0, r6, [sp, #20]
 80067be:	490e      	ldr	r1, [pc, #56]	; (80067f8 <_Z24getFont_tazugane_40_4bppv+0x74>)
 80067c0:	9300      	str	r3, [sp, #0]
 80067c2:	2207      	movs	r2, #7
 80067c4:	2328      	movs	r3, #40	; 0x28
 80067c6:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80067ca:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80067ce:	4807      	ldr	r0, [pc, #28]	; (80067ec <_Z24getFont_tazugane_40_4bppv+0x68>)
 80067d0:	f7fc fbdc 	bl	8002f8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80067d4:	4628      	mov	r0, r5
 80067d6:	f01d fd20 	bl	802421a <__cxa_guard_release>
 80067da:	4808      	ldr	r0, [pc, #32]	; (80067fc <_Z24getFont_tazugane_40_4bppv+0x78>)
 80067dc:	f01e fb4c 	bl	8024e78 <atexit>
}
 80067e0:	4802      	ldr	r0, [pc, #8]	; (80067ec <_Z24getFont_tazugane_40_4bppv+0x68>)
 80067e2:	b00c      	add	sp, #48	; 0x30
 80067e4:	bd70      	pop	{r4, r5, r6, pc}
 80067e6:	bf00      	nop
 80067e8:	20002b6c 	.word	0x20002b6c
 80067ec:	20002b70 	.word	0x20002b70
 80067f0:	0802b78c 	.word	0x0802b78c
 80067f4:	0802b79c 	.word	0x0802b79c
 80067f8:	0802b6e8 	.word	0x0802b6e8
 80067fc:	08006781 	.word	0x08006781

08006800 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006800:	2000      	movs	r0, #0
 8006802:	4770      	bx	lr

08006804 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006804:	2000      	movs	r0, #0
 8006806:	4770      	bx	lr

08006808 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006808:	b40e      	push	{r1, r2, r3}
 800680a:	b500      	push	{lr}
 800680c:	b082      	sub	sp, #8
 800680e:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006810:	2100      	movs	r1, #0
{
 8006812:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006816:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006818:	f00f fbae 	bl	8015f78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800681c:	b002      	add	sp, #8
 800681e:	f85d eb04 	ldr.w	lr, [sp], #4
 8006822:	b003      	add	sp, #12
 8006824:	4770      	bx	lr
 8006826:	bf00      	nop

08006828 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006828:	b40c      	push	{r2, r3}
 800682a:	b500      	push	{lr}
 800682c:	b083      	sub	sp, #12
 800682e:	ab04      	add	r3, sp, #16
 8006830:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006834:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006836:	f00f fb9f 	bl	8015f78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800683a:	b003      	add	sp, #12
 800683c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006840:	b002      	add	sp, #8
 8006842:	4770      	bx	lr

08006844 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006844:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006846:	b510      	push	{r4, lr}
 8006848:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800684a:	b133      	cbz	r3, 800685a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800684c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800684e:	b39b      	cbz	r3, 80068b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
 8006850:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006852:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006856:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006858:	b923      	cbnz	r3, 8006864 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800685a:	4620      	mov	r0, r4
}
 800685c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006860:	f010 be38 	b.w	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
 8006864:	f010 ff33 	bl	80176ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006868:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800686a:	2b01      	cmp	r3, #1
 800686c:	d92a      	bls.n	80068c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
 800686e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006870:	1c53      	adds	r3, r2, #1
 8006872:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006874:	2b09      	cmp	r3, #9
 8006876:	d812      	bhi.n	800689e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
 8006878:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800687c:	f640 103f 	movw	r0, #2367	; 0x93f
 8006880:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006882:	4281      	cmp	r1, r0
 8006884:	d1e9      	bne.n	800685a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
 8006886:	eb04 0142 	add.w	r1, r4, r2, lsl #1
 800688a:	0052      	lsls	r2, r2, #1
 800688c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800688e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
 8006892:	4422      	add	r2, r4
 8006894:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
 8006898:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800689a:	8450      	strh	r0, [r2, #34]	; 0x22
        }
 800689c:	e7dd      	b.n	800685a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
 800689e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80068a2:	f640 113f 	movw	r1, #2367	; 0x93f
 80068a6:	89db      	ldrh	r3, [r3, #14]
 80068a8:	428b      	cmp	r3, r1
 80068aa:	d1d6      	bne.n	800685a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
 80068ac:	eb04 0342 	add.w	r3, r4, r2, lsl #1
 80068b0:	0052      	lsls	r2, r2, #1
 80068b2:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80068b4:	2300      	movs	r3, #0
 80068b6:	e7ea      	b.n	800688e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
 80068b8:	4b05      	ldr	r3, [pc, #20]	; (80068d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
 80068ba:	4a06      	ldr	r2, [pc, #24]	; (80068d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
 80068bc:	4806      	ldr	r0, [pc, #24]	; (80068d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
 80068be:	21c0      	movs	r1, #192	; 0xc0
 80068c0:	f01e fabc 	bl	8024e3c <__assert_func>
            assert(offset < used);
 80068c4:	4b05      	ldr	r3, [pc, #20]	; (80068dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
 80068c6:	4a06      	ldr	r2, [pc, #24]	; (80068e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
 80068c8:	4803      	ldr	r0, [pc, #12]	; (80068d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
 80068ca:	21c5      	movs	r1, #197	; 0xc5
 80068cc:	f01e fab6 	bl	8024e3c <__assert_func>
 80068d0:	08027a80 	.word	0x08027a80
 80068d4:	08027a8c 	.word	0x08027a8c
 80068d8:	08027b38 	.word	0x08027b38
 80068dc:	08027b84 	.word	0x08027b84
 80068e0:	08027b94 	.word	0x08027b94

080068e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80068e4:	f010 bdbd 	b.w	8017462 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080068e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80068e8:	b530      	push	{r4, r5, lr}
 80068ea:	b087      	sub	sp, #28
 80068ec:	ac02      	add	r4, sp, #8
 80068ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    va_list pArg;
    va_start(pArg, format);
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80068f0:	9500      	str	r5, [sp, #0]
    va_start(pArg, format);
 80068f2:	ad0c      	add	r5, sp, #48	; 0x30
{
 80068f4:	e884 0006 	stmia.w	r4, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80068f8:	461a      	mov	r2, r3
 80068fa:	9501      	str	r5, [sp, #4]
 80068fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    va_start(pArg, format);
 80068fe:	9505      	str	r5, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006900:	4621      	mov	r1, r4
 8006902:	f00d ff9e 	bl	8014842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006906:	b007      	add	sp, #28
 8006908:	bd30      	pop	{r4, r5, pc}
 800690a:	bf00      	nop

0800690c <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800690c:	b9e0      	cbnz	r0, 8006948 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
 800690e:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
 8006910:	4b13      	ldr	r3, [pc, #76]	; (8006960 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	b1cb      	cbz	r3, 800694a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006916:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800691a:	4d12      	ldr	r5, [pc, #72]	; (8006964 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800691c:	4812      	ldr	r0, [pc, #72]	; (8006968 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800691e:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006920:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006922:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006924:	6029      	str	r1, [r5, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006926:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006928:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800692a:	4b10      	ldr	r3, [pc, #64]	; (800696c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800692c:	2200      	movs	r2, #0
 800692e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006930:	f001 fb88 	bl	8008044 <_ZN17TypedTextDatabase8getFontsEv>
 8006934:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006936:	f001 fb83 	bl	8008040 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        fonts = f;
 800693a:	490d      	ldr	r1, [pc, #52]	; (8006970 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        numberOfTypedTexts = n;
 800693c:	4a0d      	ldr	r2, [pc, #52]	; (8006974 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
 800693e:	4b0e      	ldr	r3, [pc, #56]	; (8006978 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
 8006940:	600d      	str	r5, [r1, #0]
        numberOfTypedTexts = n;
 8006942:	8010      	strh	r0, [r2, #0]
        typedTexts = data;
 8006944:	601c      	str	r4, [r3, #0]
    }
}
 8006946:	bd38      	pop	{r3, r4, r5, pc}
 8006948:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800694a:	4b0c      	ldr	r3, [pc, #48]	; (800697c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
 800694c:	4905      	ldr	r1, [pc, #20]	; (8006964 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800694e:	681c      	ldr	r4, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006950:	4b05      	ldr	r3, [pc, #20]	; (8006968 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
            currentLanguagePtr = texts_all_languages;
 8006952:	480b      	ldr	r0, [pc, #44]	; (8006980 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
 8006954:	4a0b      	ldr	r2, [pc, #44]	; (8006984 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
 8006956:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006958:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
 800695a:	2c00      	cmp	r4, #0
 800695c:	d1e5      	bne.n	800692a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800695e:	bd38      	pop	{r3, r4, r5, pc}
 8006960:	20002b98 	.word	0x20002b98
 8006964:	20002b9c 	.word	0x20002b9c
 8006968:	20002ba0 	.word	0x20002ba0
 800696c:	20002ba4 	.word	0x20002ba4
 8006970:	20002ce4 	.word	0x20002ce4
 8006974:	20002ce0 	.word	0x20002ce0
 8006978:	20002cdc 	.word	0x20002cdc
 800697c:	0802bacc 	.word	0x0802bacc
 8006980:	0802b8f4 	.word	0x0802b8f4
 8006984:	0802b7a0 	.word	0x0802b7a0

08006988 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006988:	4a04      	ldr	r2, [pc, #16]	; (800699c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800698a:	4b05      	ldr	r3, [pc, #20]	; (80069a0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800698c:	6812      	ldr	r2, [r2, #0]
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
 8006994:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006998:	4770      	bx	lr
 800699a:	bf00      	nop
 800699c:	20002ba0 	.word	0x20002ba0
 80069a0:	20002b9c 	.word	0x20002b9c

080069a4 <_ZN16TransferViewBaseD1Ev>:

class TransferViewBase : public touchgfx::View<TransferPresenter>
{
public:
    TransferViewBase();
    virtual ~TransferViewBase() {}
 80069a4:	4770      	bx	lr
 80069a6:	bf00      	nop

080069a8 <_ZN16TransferViewBase15slider_callbackEi>:
     * Virtual Action Handlers
     */
    virtual void slider_callback(int value)
    {
        // Override and implement this function in Transfer
    }
 80069a8:	4770      	bx	lr
 80069aa:	bf00      	nop

080069ac <_ZN16TransferViewBase23slider_release_callbackEi>:

    virtual void slider_release_callback(int value)
    {
        // Override and implement this function in Transfer
    }
 80069ac:	4770      	bx	lr
 80069ae:	bf00      	nop

080069b0 <_ZN16TransferViewBase13demo_callbackEv>:

    virtual void demo_callback()
    {
        // Override and implement this function in Transfer
    }
 80069b0:	4770      	bx	lr
 80069b2:	bf00      	nop

080069b4 <_ZN16TransferViewBase15handleTickEventEv>:
}

//Handles tick based events
void TransferViewBase::handleTickEvent()
{
    if(waitCounter > 0)
 80069b4:	f8b0 3a9c 	ldrh.w	r3, [r0, #2716]	; 0xa9c
 80069b8:	b113      	cbz	r3, 80069c0 <_ZN16TransferViewBase15handleTickEventEv+0xc>
    {
        waitCounter--;
 80069ba:	3b01      	subs	r3, #1
 80069bc:	f8a0 3a9c 	strh.w	r3, [r0, #2716]	; 0xa9c
        {

        }
    }

}
 80069c0:	4770      	bx	lr
 80069c2:	bf00      	nop

080069c4 <_ZN16TransferViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TransferViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
}
 80069c4:	4770      	bx	lr
 80069c6:	bf00      	nop

080069c8 <_ZN8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80069c8:	4770      	bx	lr
 80069ca:	bf00      	nop

080069cc <_ZN8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80069cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80069ce:	68c3      	ldr	r3, [r0, #12]
 80069d0:	07da      	lsls	r2, r3, #31
 80069d2:	d405      	bmi.n	80069e0 <_ZN8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>
 80069d4:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 80069d8:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 80069dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80069de:	4710      	bx	r2
 80069e0:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
 80069e4:	105d      	asrs	r5, r3, #1
 80069e6:	5960      	ldr	r0, [r4, r5]
 80069e8:	5882      	ldr	r2, [r0, r2]
 80069ea:	eb04 0063 	add.w	r0, r4, r3, asr #1
    }
 80069ee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80069f0:	4710      	bx	r2
 80069f2:	bf00      	nop

080069f4 <_ZNK8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80069f4:	6843      	ldr	r3, [r0, #4]
 80069f6:	b13b      	cbz	r3, 8006a08 <_ZNK8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80069f8:	6883      	ldr	r3, [r0, #8]
 80069fa:	b10b      	cbz	r3, 8006a00 <_ZNK8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 80069fc:	2001      	movs	r0, #1
    }
 80069fe:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
 8006a00:	68c0      	ldr	r0, [r0, #12]
 8006a02:	f000 0001 	and.w	r0, r0, #1
 8006a06:	4770      	bx	lr
 8006a08:	4618      	mov	r0, r3
 8006a0a:	4770      	bx	lr

08006a0c <_ZN8touchgfx8CallbackI16TransferViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a0c:	b510      	push	{r4, lr}
 8006a0e:	2110      	movs	r1, #16
 8006a10:	4604      	mov	r4, r0
 8006a12:	f01d fbf4 	bl	80241fe <_ZdlPvj>
 8006a16:	4620      	mov	r0, r4
 8006a18:	bd10      	pop	{r4, pc}
 8006a1a:	bf00      	nop

08006a1c <_ZN16TransferViewBaseD0Ev>:
    virtual ~TransferViewBase() {}
 8006a1c:	b510      	push	{r4, lr}
 8006a1e:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8006a22:	4604      	mov	r4, r0
 8006a24:	f01d fbeb 	bl	80241fe <_ZdlPvj>
 8006a28:	4620      	mov	r0, r4
 8006a2a:	bd10      	pop	{r4, pc}

08006a2c <_ZN16TransferViewBase11setupScreenEv>:
{
 8006a2c:	b510      	push	{r4, lr}
 8006a2e:	b084      	sub	sp, #16
    textureMapper1.setupAnimation(touchgfx::AnimationTextureMapper::SCALE, 1.100f, 9, 0, touchgfx::EasingEquations::linearEaseIn);
 8006a30:	4b0a      	ldr	r3, [pc, #40]	; (8006a5c <_ZN16TransferViewBase11setupScreenEv+0x30>)
 8006a32:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 8006a60 <_ZN16TransferViewBase11setupScreenEv+0x34>
 8006a36:	9300      	str	r3, [sp, #0]
{
 8006a38:	4604      	mov	r4, r0
    textureMapper1.setupAnimation(touchgfx::AnimationTextureMapper::SCALE, 1.100f, 9, 0, touchgfx::EasingEquations::linearEaseIn);
 8006a3a:	2300      	movs	r3, #0
 8006a3c:	f600 0084 	addw	r0, r0, #2180	; 0x884
 8006a40:	2209      	movs	r2, #9
 8006a42:	2103      	movs	r1, #3
 8006a44:	9003      	str	r0, [sp, #12]
 8006a46:	f00b f9b5 	bl	8011db4 <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>
    textureMapper1.startAnimation();
 8006a4a:	9803      	ldr	r0, [sp, #12]
 8006a4c:	f00b f9c7 	bl	8011dde <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>
    waitCounter = WAIT_DURATION;
 8006a50:	2309      	movs	r3, #9
 8006a52:	f8a4 3a9c 	strh.w	r3, [r4, #2716]	; 0xa9c
}
 8006a56:	b004      	add	sp, #16
 8006a58:	bd10      	pop	{r4, pc}
 8006a5a:	bf00      	nop
 8006a5c:	08016c79 	.word	0x08016c79
 8006a60:	3f8ccccd 	.word	0x3f8ccccd

08006a64 <_ZN16TransferViewBaseC1Ev>:
TransferViewBase::TransferViewBase() :
 8006a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a68:	ed2d 8b10 	vpush	{d8-d15}
 8006a6c:	b09b      	sub	sp, #108	; 0x6c
 8006a6e:	4604      	mov	r4, r0
    buttonCallback(this, &TransferViewBase::buttonCallbackHandler)
 8006a70:	f100 0598 	add.w	r5, r0, #152	; 0x98
 8006a74:	950e      	str	r5, [sp, #56]	; 0x38
 8006a76:	f00f feed 	bl	8016854 <_ZN8touchgfx6ScreenC1Ev>
 8006a7a:	4be8      	ldr	r3, [pc, #928]	; (8006e1c <_ZN16TransferViewBaseC1Ev+0x3b8>)
        : Widget(), alpha(255), color(0)
 8006a7c:	f8df b3c0 	ldr.w	fp, [pc, #960]	; 8006e40 <_ZN16TransferViewBaseC1Ev+0x3dc>
 8006a80:	6023      	str	r3, [r4, #0]
 8006a82:	2600      	movs	r6, #0
          visible(true)
 8006a84:	f44f 7880 	mov.w	r8, #256	; 0x100
 8006a88:	27ff      	movs	r7, #255	; 0xff
 8006a8a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006a8e:	ee08 5a10 	vmov	s16, r5
 8006a92:	4628      	mov	r0, r5
 8006a94:	f8c4 b040 	str.w	fp, [r4, #64]	; 0x40
 8006a98:	461d      	mov	r5, r3
 8006a9a:	f8c4 b06c 	str.w	fp, [r4, #108]	; 0x6c
 8006a9e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8006aa2:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8006aa6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8006aaa:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
 8006aae:	e9c4 6611 	strd	r6, r6, [r4, #68]	; 0x44
 8006ab2:	e9c4 6613 	strd	r6, r6, [r4, #76]	; 0x4c
 8006ab6:	e9c4 6615 	strd	r6, r6, [r4, #84]	; 0x54
 8006aba:	e9c4 6617 	strd	r6, r6, [r4, #92]	; 0x5c
 8006abe:	e9c4 661c 	strd	r6, r6, [r4, #112]	; 0x70
 8006ac2:	e9c4 661e 	strd	r6, r6, [r4, #120]	; 0x78
 8006ac6:	e9c4 6620 	strd	r6, r6, [r4, #128]	; 0x80
 8006aca:	e9c4 6622 	strd	r6, r6, [r4, #136]	; 0x88
 8006ace:	63e6      	str	r6, [r4, #60]	; 0x3c
        : color(col)
 8006ad0:	66a6      	str	r6, [r4, #104]	; 0x68
 8006ad2:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 8006ad6:	ee0a 3a10 	vmov	s20, r3
 8006ada:	f00c fe5f 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ade:	f504 7394 	add.w	r3, r4, #296	; 0x128
 8006ae2:	4628      	mov	r0, r5
 8006ae4:	9302      	str	r3, [sp, #8]
 8006ae6:	f00c fe59 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006aea:	f504 72b8 	add.w	r2, r4, #368	; 0x170
 8006aee:	4615      	mov	r5, r2
 8006af0:	9802      	ldr	r0, [sp, #8]
 8006af2:	ee0a 2a90 	vmov	s21, r2
 8006af6:	f00c fe51 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006afa:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8006afe:	4628      	mov	r0, r5
 8006b00:	9303      	str	r3, [sp, #12]
 8006b02:	f00c fe4b 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b06:	f504 7200 	add.w	r2, r4, #512	; 0x200
 8006b0a:	4615      	mov	r5, r2
 8006b0c:	9803      	ldr	r0, [sp, #12]
 8006b0e:	ee0b 2a10 	vmov	s22, r2
 8006b12:	f00c fe43 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b16:	f504 7312 	add.w	r3, r4, #584	; 0x248
 8006b1a:	4628      	mov	r0, r5
 8006b1c:	9304      	str	r3, [sp, #16]
 8006b1e:	f00c fe3d 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b22:	f504 7224 	add.w	r2, r4, #656	; 0x290
 8006b26:	4615      	mov	r5, r2
 8006b28:	9804      	ldr	r0, [sp, #16]
 8006b2a:	ee0b 2a90 	vmov	s23, r2
 8006b2e:	f00c fe35 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b32:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
 8006b36:	4628      	mov	r0, r5
 8006b38:	9305      	str	r3, [sp, #20]
 8006b3a:	f00c fe2f 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b3e:	f504 7248 	add.w	r2, r4, #800	; 0x320
 8006b42:	4615      	mov	r5, r2
 8006b44:	9805      	ldr	r0, [sp, #20]
 8006b46:	ee0c 2a10 	vmov	s24, r2
 8006b4a:	f00c fe27 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b4e:	f504 735a 	add.w	r3, r4, #872	; 0x368
 8006b52:	4628      	mov	r0, r5
 8006b54:	9306      	str	r3, [sp, #24]
 8006b56:	f00c fe21 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b5a:	f504 726c 	add.w	r2, r4, #944	; 0x3b0
 8006b5e:	4615      	mov	r5, r2
 8006b60:	9806      	ldr	r0, [sp, #24]
 8006b62:	ee0c 2a90 	vmov	s25, r2
 8006b66:	f00c fe19 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b6a:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8006b6e:	4628      	mov	r0, r5
 8006b70:	9307      	str	r3, [sp, #28]
 8006b72:	f00c fe13 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b76:	f504 6288 	add.w	r2, r4, #1088	; 0x440
 8006b7a:	4615      	mov	r5, r2
 8006b7c:	9807      	ldr	r0, [sp, #28]
 8006b7e:	ee0d 2a10 	vmov	s26, r2
 8006b82:	f00c fe0b 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b86:	f504 6391 	add.w	r3, r4, #1160	; 0x488
 8006b8a:	4628      	mov	r0, r5
 8006b8c:	9308      	str	r3, [sp, #32]
 8006b8e:	f00c fe05 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b92:	f504 629a 	add.w	r2, r4, #1232	; 0x4d0
 8006b96:	4615      	mov	r5, r2
 8006b98:	9808      	ldr	r0, [sp, #32]
 8006b9a:	ee0d 2a90 	vmov	s27, r2
 8006b9e:	f00c fdfd 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ba2:	4628      	mov	r0, r5
 8006ba4:	f00c fdfa 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ba8:	f204 531c 	addw	r3, r4, #1308	; 0x51c
 8006bac:	461a      	mov	r2, r3
 8006bae:	ee0e 3a10 	vmov	s28, r3
 8006bb2:	4b9b      	ldr	r3, [pc, #620]	; (8006e20 <_ZN16TransferViewBaseC1Ev+0x3bc>)
 8006bb4:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        touchable = touch;
 8006bb8:	f04f 0a01 	mov.w	sl, #1
 8006bbc:	f204 5364 	addw	r3, r4, #1380	; 0x564
 8006bc0:	461d      	mov	r5, r3
 8006bc2:	4610      	mov	r0, r2
 8006bc4:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
 8006bc8:	f884 a4f4 	strb.w	sl, [r4, #1268]	; 0x4f4
 8006bcc:	ee0e 3a90 	vmov	s29, r3
 8006bd0:	f00c fde4 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bd4:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8006bd8:	4628      	mov	r0, r5
 8006bda:	9309      	str	r3, [sp, #36]	; 0x24
 8006bdc:	f00c fdde 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006be0:	f204 52f4 	addw	r2, r4, #1524	; 0x5f4
 8006be4:	4615      	mov	r5, r2
 8006be6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006be8:	ee0f 2a10 	vmov	s30, r2
 8006bec:	f00c fdd6 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bf0:	f204 633c 	addw	r3, r4, #1596	; 0x63c
 8006bf4:	4628      	mov	r0, r5
 8006bf6:	930a      	str	r3, [sp, #40]	; 0x28
 8006bf8:	f00c fdd0 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bfc:	f204 6284 	addw	r2, r4, #1668	; 0x684
 8006c00:	4615      	mov	r5, r2
 8006c02:	980a      	ldr	r0, [sp, #40]	; 0x28
 8006c04:	ee0f 2a90 	vmov	s31, r2
 8006c08:	f00c fdc8 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c0c:	f204 63cc 	addw	r3, r4, #1740	; 0x6cc
 8006c10:	4628      	mov	r0, r5
 8006c12:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c14:	f00c fdc2 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c18:	f204 7214 	addw	r2, r4, #1812	; 0x714
 8006c1c:	4615      	mov	r5, r2
 8006c1e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006c20:	920d      	str	r2, [sp, #52]	; 0x34
 8006c22:	f00c fdbb 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c26:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8006c2a:	4628      	mov	r0, r5
 8006c2c:	930c      	str	r3, [sp, #48]	; 0x30
 8006c2e:	f00c fdb5 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c32:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006c34:	f00c fdb2 	bl	801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c38:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c3c:	f8df e204 	ldr.w	lr, [pc, #516]	; 8006e44 <_ZN16TransferViewBaseC1Ev+0x3e0>
class ToggleButton : public Button
 8006c40:	f8df c204 	ldr.w	ip, [pc, #516]	; 8006e48 <_ZN16TransferViewBaseC1Ev+0x3e4>
 8006c44:	f8c4 e7a4 	str.w	lr, [r4, #1956]	; 0x7a4
 8006c48:	f240 1001 	movw	r0, #257	; 0x101
 8006c4c:	f8c4 c7d8 	str.w	ip, [r4, #2008]	; 0x7d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006c50:	f04f 39ff 	mov.w	r9, #4294967295
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006c54:	4973      	ldr	r1, [pc, #460]	; (8006e24 <_ZN16TransferViewBaseC1Ev+0x3c0>)
 8006c56:	f884 780a 	strb.w	r7, [r4, #2058]	; 0x80a
 8006c5a:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8006c5e:	f8a4 07c8 	strh.w	r0, [r4, #1992]	; 0x7c8
 8006c62:	f8a4 07fc 	strh.w	r0, [r4, #2044]	; 0x7fc
 8006c66:	f8a4 37d2 	strh.w	r3, [r4, #2002]	; 0x7d2
 8006c6a:	f8a4 37d4 	strh.w	r3, [r4, #2004]	; 0x7d4
 8006c6e:	f884 37d6 	strb.w	r3, [r4, #2006]	; 0x7d6
 8006c72:	f8a4 3806 	strh.w	r3, [r4, #2054]	; 0x806
 8006c76:	f8a4 3808 	strh.w	r3, [r4, #2056]	; 0x808
 8006c7a:	f8a4 380c 	strh.w	r3, [r4, #2060]	; 0x80c
 8006c7e:	f604 0584 	addw	r5, r4, #2180	; 0x884
        : Widget(), action(), pressed(false)
 8006c82:	f8c4 67cc 	str.w	r6, [r4, #1996]	; 0x7cc
 8006c86:	f884 67d0 	strb.w	r6, [r4, #2000]	; 0x7d0
        : x(0), y(0), width(0), height(0)
 8006c8a:	f8c4 67a8 	str.w	r6, [r4, #1960]	; 0x7a8
 8006c8e:	f8c4 67ac 	str.w	r6, [r4, #1964]	; 0x7ac
 8006c92:	f8c4 67b0 	str.w	r6, [r4, #1968]	; 0x7b0
 8006c96:	f8c4 67b4 	str.w	r6, [r4, #1972]	; 0x7b4
          visible(true)
 8006c9a:	f8c4 67b8 	str.w	r6, [r4, #1976]	; 0x7b8
 8006c9e:	f8c4 67bc 	str.w	r6, [r4, #1980]	; 0x7bc
 8006ca2:	f8c4 67c0 	str.w	r6, [r4, #1984]	; 0x7c0
 8006ca6:	f8c4 67c4 	str.w	r6, [r4, #1988]	; 0x7c4
 8006caa:	f8c4 6800 	str.w	r6, [r4, #2048]	; 0x800
 8006cae:	f884 6804 	strb.w	r6, [r4, #2052]	; 0x804
 8006cb2:	f8c4 67dc 	str.w	r6, [r4, #2012]	; 0x7dc
 8006cb6:	f8c4 67e0 	str.w	r6, [r4, #2016]	; 0x7e0
 8006cba:	f8c4 67e4 	str.w	r6, [r4, #2020]	; 0x7e4
 8006cbe:	f8c4 67e8 	str.w	r6, [r4, #2024]	; 0x7e8
 8006cc2:	f8c4 67ec 	str.w	r6, [r4, #2028]	; 0x7ec
 8006cc6:	f8c4 67f0 	str.w	r6, [r4, #2032]	; 0x7f0
 8006cca:	f8c4 67f4 	str.w	r6, [r4, #2036]	; 0x7f4
 8006cce:	f8c4 67f8 	str.w	r6, [r4, #2040]	; 0x7f8
 8006cd2:	f8c4 6814 	str.w	r6, [r4, #2068]	; 0x814
 8006cd6:	f8c4 6818 	str.w	r6, [r4, #2072]	; 0x818
        : typedTextId(id)
 8006cda:	f8a4 383c 	strh.w	r3, [r4, #2108]	; 0x83c
 8006cde:	4b52      	ldr	r3, [pc, #328]	; (8006e28 <_ZN16TransferViewBaseC1Ev+0x3c4>)
 8006ce0:	f8c4 b858 	str.w	fp, [r4, #2136]	; 0x858
 8006ce4:	f8a4 8834 	strh.w	r8, [r4, #2100]	; 0x834
 8006ce8:	f8a4 887c 	strh.w	r8, [r4, #2172]	; 0x87c
 8006cec:	f8c4 1810 	str.w	r1, [r4, #2064]	; 0x810
 8006cf0:	f8c4 3838 	str.w	r3, [r4, #2104]	; 0x838
 8006cf4:	f8c4 2844 	str.w	r2, [r4, #2116]	; 0x844
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006cf8:	f8c4 9850 	str.w	r9, [r4, #2128]	; 0x850
 8006cfc:	f884 987e 	strb.w	r9, [r4, #2174]	; 0x87e
 8006d00:	4628      	mov	r0, r5
        : x(0), y(0), width(0), height(0)
 8006d02:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
 8006d06:	f8c4 6820 	str.w	r6, [r4, #2080]	; 0x820
 8006d0a:	f8c4 6824 	str.w	r6, [r4, #2084]	; 0x824
 8006d0e:	f8c4 6828 	str.w	r6, [r4, #2088]	; 0x828
 8006d12:	f8c4 682c 	str.w	r6, [r4, #2092]	; 0x82c
 8006d16:	f8c4 6830 	str.w	r6, [r4, #2096]	; 0x830
        : color(col)
 8006d1a:	f8c4 6840 	str.w	r6, [r4, #2112]	; 0x840
 8006d1e:	f8a4 6848 	strh.w	r6, [r4, #2120]	; 0x848
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006d22:	f8a4 684c 	strh.w	r6, [r4, #2124]	; 0x84c
 8006d26:	f8a4 684e 	strh.w	r6, [r4, #2126]	; 0x84e
              text(0)
 8006d2a:	f8c4 6854 	str.w	r6, [r4, #2132]	; 0x854
        : x(0), y(0), width(0), height(0)
 8006d2e:	f8c4 685c 	str.w	r6, [r4, #2140]	; 0x85c
 8006d32:	f8c4 6860 	str.w	r6, [r4, #2144]	; 0x860
 8006d36:	f8c4 6864 	str.w	r6, [r4, #2148]	; 0x864
 8006d3a:	f8c4 6868 	str.w	r6, [r4, #2152]	; 0x868
 8006d3e:	f8c4 686c 	str.w	r6, [r4, #2156]	; 0x86c
 8006d42:	f8c4 6870 	str.w	r6, [r4, #2160]	; 0x870
 8006d46:	f8c4 6874 	str.w	r6, [r4, #2164]	; 0x874
 8006d4a:	f8c4 6878 	str.w	r6, [r4, #2168]	; 0x878
        : color(col)
 8006d4e:	f8c4 6880 	str.w	r6, [r4, #2176]	; 0x880
 8006d52:	f00b f99f 	bl	8012094 <_ZN8touchgfx22AnimationTextureMapperC1Ev>
 8006d56:	f604 17b8 	addw	r7, r4, #2488	; 0x9b8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006d5a:	4932      	ldr	r1, [pc, #200]	; (8006e24 <_ZN16TransferViewBaseC1Ev+0x3c0>)
 8006d5c:	4b32      	ldr	r3, [pc, #200]	; (8006e28 <_ZN16TransferViewBaseC1Ev+0x3c4>)
 8006d5e:	f8a4 8994 	strh.w	r8, [r4, #2452]	; 0x994
 8006d62:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8006d66:	f8c4 1970 	str.w	r1, [r4, #2416]	; 0x970
 8006d6a:	f8c4 3998 	str.w	r3, [r4, #2456]	; 0x998
 8006d6e:	f8a4 999c 	strh.w	r9, [r4, #2460]	; 0x99c
 8006d72:	f8c4 29a4 	str.w	r2, [r4, #2468]	; 0x9a4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006d76:	f8c4 99b0 	str.w	r9, [r4, #2480]	; 0x9b0
        : x(0), y(0), width(0), height(0)
 8006d7a:	f8c4 6974 	str.w	r6, [r4, #2420]	; 0x974
 8006d7e:	f8c4 6978 	str.w	r6, [r4, #2424]	; 0x978
 8006d82:	f8c4 697c 	str.w	r6, [r4, #2428]	; 0x97c
 8006d86:	f8c4 6980 	str.w	r6, [r4, #2432]	; 0x980
 8006d8a:	f8c4 6984 	str.w	r6, [r4, #2436]	; 0x984
 8006d8e:	f8c4 6988 	str.w	r6, [r4, #2440]	; 0x988
 8006d92:	f8c4 698c 	str.w	r6, [r4, #2444]	; 0x98c
 8006d96:	f8c4 6990 	str.w	r6, [r4, #2448]	; 0x990
        : color(col)
 8006d9a:	f8c4 69a0 	str.w	r6, [r4, #2464]	; 0x9a0
 8006d9e:	f8a4 69a8 	strh.w	r6, [r4, #2472]	; 0x9a8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006da2:	f8c4 69ac 	str.w	r6, [r4, #2476]	; 0x9ac
              text(0)
 8006da6:	f8c4 69b4 	str.w	r6, [r4, #2484]	; 0x9b4
 8006daa:	4638      	mov	r0, r7
 8006dac:	f009 f8d8 	bl	800ff60 <_ZN8touchgfx11BoxProgressC1Ev>
    __background.setPosition(0, 0, 320, 240);
 8006db0:	f104 0340 	add.w	r3, r4, #64	; 0x40
        : pobject(pObject), pmemfun(pmemfun_1)
 8006db4:	4a1d      	ldr	r2, [pc, #116]	; (8006e2c <_ZN16TransferViewBaseC1Ev+0x3c8>)
 8006db6:	930f      	str	r3, [sp, #60]	; 0x3c
 8006db8:	4619      	mov	r1, r3
 8006dba:	4b1d      	ldr	r3, [pc, #116]	; (8006e30 <_ZN16TransferViewBaseC1Ev+0x3cc>)
 8006dbc:	f8c4 2aa0 	str.w	r2, [r4, #2720]	; 0xaa0
 8006dc0:	f8c4 3aa8 	str.w	r3, [r4, #2728]	; 0xaa8
        setWidth(width);
 8006dc4:	4688      	mov	r8, r1
 8006dc6:	4608      	mov	r0, r1
    buttonCallback(this, &TransferViewBase::buttonCallbackHandler)
 8006dc8:	f8a4 6a9c 	strh.w	r6, [r4, #2716]	; 0xa9c
 8006dcc:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006dd0:	f8c4 4aa4 	str.w	r4, [r4, #2724]	; 0xaa4
 8006dd4:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
        rect.x = x;
 8006dd8:	6466      	str	r6, [r4, #68]	; 0x44
        setWidth(width);
 8006dda:	f7fb fa39 	bl	8002250 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006dde:	4640      	mov	r0, r8
 8006de0:	21f0      	movs	r1, #240	; 0xf0
 8006de2:	f7fb fa37 	bl	8002254 <_ZN8touchgfx8Drawable9setHeightEs>
        return typedTextId < numberOfTypedTexts;
 8006de6:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8006e4c <_ZN16TransferViewBaseC1Ev+0x3e8>
        rect.width = width;
 8006dea:	4912      	ldr	r1, [pc, #72]	; (8006e34 <_ZN16TransferViewBaseC1Ev+0x3d0>)
        color = newColor;
 8006dec:	4a12      	ldr	r2, [pc, #72]	; (8006e38 <_ZN16TransferViewBaseC1Ev+0x3d4>)
        rect.x = x;
 8006dee:	4b13      	ldr	r3, [pc, #76]	; (8006e3c <_ZN16TransferViewBaseC1Ev+0x3d8>)
        rect.width = width;
 8006df0:	6761      	str	r1, [r4, #116]	; 0x74
 8006df2:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8006df6:	66a0      	str	r0, [r4, #104]	; 0x68
 8006df8:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
    bf.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8006dfc:	ee18 0a10 	vmov	r0, s16
        rect.x = x;
 8006e00:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8006e04:	aa18      	add	r2, sp, #96	; 0x60
 8006e06:	2305      	movs	r3, #5
 8006e08:	a917      	add	r1, sp, #92	; 0x5c
 8006e0a:	6726      	str	r6, [r4, #112]	; 0x70
 8006e0c:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8006e10:	f8ad a05c 	strh.w	sl, [sp, #92]	; 0x5c
 8006e14:	f00c fa03 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e18:	e01a      	b.n	8006e50 <_ZN16TransferViewBaseC1Ev+0x3ec>
 8006e1a:	bf00      	nop
 8006e1c:	08027c88 	.word	0x08027c88
 8006e20:	080277e0 	.word	0x080277e0
 8006e24:	08028768 	.word	0x08028768
 8006e28:	08026e28 	.word	0x08026e28
 8006e2c:	08027c70 	.word	0x08027c70
 8006e30:	080069c5 	.word	0x080069c5
 8006e34:	00f00140 	.word	0x00f00140
 8006e38:	fff7f7f7 	.word	0xfff7f7f7
 8006e3c:	003000e0 	.word	0x003000e0
 8006e40:	080287f8 	.word	0x080287f8
 8006e44:	08028860 	.word	0x08028860
 8006e48:	080286f4 	.word	0x080286f4
 8006e4c:	20002ce0 	.word	0x20002ce0
        if (typedText.hasValidId())
 8006e50:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8006e54:	211a      	movs	r1, #26
    buttonCallback(this, &TransferViewBase::buttonCallbackHandler)
 8006e56:	f204 72a4 	addw	r2, r4, #1956	; 0x7a4
 8006e5a:	ee08 2a10 	vmov	s16, r2
 8006e5e:	428b      	cmp	r3, r1
    box1.setPosition(0, 0, 320, 240);
 8006e60:	f104 026c 	add.w	r2, r4, #108	; 0x6c
    buttonCallback(this, &TransferViewBase::buttonCallbackHandler)
 8006e64:	f504 6801 	add.w	r8, r4, #2064	; 0x810
 8006e68:	f504 6b17 	add.w	fp, r4, #2416	; 0x970
    box1.setPosition(0, 0, 320, 240);
 8006e6c:	9210      	str	r2, [sp, #64]	; 0x40
 8006e6e:	f8a4 10d0 	strh.w	r1, [r4, #208]	; 0xd0
 8006e72:	d92f      	bls.n	8006ed4 <_ZN16TransferViewBaseC1Ev+0x470>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006e74:	4b14      	ldr	r3, [pc, #80]	; (8006ec8 <_ZN16TransferViewBaseC1Ev+0x464>)
 8006e76:	681b      	ldr	r3, [r3, #0]
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	f001 80d4 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8006e7e:	4a13      	ldr	r2, [pc, #76]	; (8006ecc <_ZN16TransferViewBaseC1Ev+0x468>)
 8006e80:	f893 0034 	ldrb.w	r0, [r3, #52]	; 0x34
 8006e84:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8006e86:	4b12      	ldr	r3, [pc, #72]	; (8006ed0 <_ZN16TransferViewBaseC1Ev+0x46c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8006e88:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8006e8c:	6818      	ldr	r0, [r3, #0]
 8006e8e:	f7ff fd7b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8006e92:	f8da 3000 	ldr.w	r3, [sl]
 8006e96:	4601      	mov	r1, r0
 8006e98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006e9a:	9111      	str	r1, [sp, #68]	; 0x44
 8006e9c:	4650      	mov	r0, sl
 8006e9e:	4798      	blx	r3
 8006ea0:	f8da 3000 	ldr.w	r3, [sl]
 8006ea4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006ea6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ea8:	4606      	mov	r6, r0
 8006eaa:	4650      	mov	r0, sl
 8006eac:	4798      	blx	r3
 8006eae:	f8da 3000 	ldr.w	r3, [sl]
 8006eb2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006eb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006eb6:	fb16 f600 	smulbb	r6, r6, r0
 8006eba:	4650      	mov	r0, sl
 8006ebc:	4798      	blx	r3
 8006ebe:	b2f6      	uxtb	r6, r6
 8006ec0:	4430      	add	r0, r6
 8006ec2:	f884 00dd 	strb.w	r0, [r4, #221]	; 0xdd
 8006ec6:	e007      	b.n	8006ed8 <_ZN16TransferViewBaseC1Ev+0x474>
 8006ec8:	20002cdc 	.word	0x20002cdc
 8006ecc:	20002ce4 	.word	0x20002ce4
 8006ed0:	20002ce8 	.word	0x20002ce8
            textHeightIncludingSpacing = 0;
 8006ed4:	f884 60dd 	strb.w	r6, [r4, #221]	; 0xdd
 8006ed8:	4ac6      	ldr	r2, [pc, #792]	; (80071f4 <_ZN16TransferViewBaseC1Ev+0x790>)
 8006eda:	f8c4 20e4 	str.w	r2, [r4, #228]	; 0xe4
        color = col;
 8006ede:	f04f 33ff 	mov.w	r3, #4294967295
 8006ee2:	2001      	movs	r0, #1
        colorPressed = col;
 8006ee4:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    be.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8006ee8:	a917      	add	r1, sp, #92	; 0x5c
 8006eea:	2305      	movs	r3, #5
 8006eec:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8006ef0:	aa18      	add	r2, sp, #96	; 0x60
 8006ef2:	ee1a 0a10 	vmov	r0, s20
 8006ef6:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8006efa:	f00c f990 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8006efe:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8006f02:	2119      	movs	r1, #25
 8006f04:	428b      	cmp	r3, r1
 8006f06:	f8a4 1118 	strh.w	r1, [r4, #280]	; 0x118
 8006f0a:	f200 87d2 	bhi.w	8007eb2 <_ZN16TransferViewBaseC1Ev+0x144e>
            textHeightIncludingSpacing = 0;
 8006f0e:	2300      	movs	r3, #0
 8006f10:	f884 3125 	strb.w	r3, [r4, #293]	; 0x125
 8006f14:	4ab8      	ldr	r2, [pc, #736]	; (80071f8 <_ZN16TransferViewBaseC1Ev+0x794>)
 8006f16:	f8c4 212c 	str.w	r2, [r4, #300]	; 0x12c
        color = col;
 8006f1a:	f04f 33ff 	mov.w	r3, #4294967295
 8006f1e:	2001      	movs	r0, #1
        colorPressed = col;
 8006f20:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
    bd.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8006f24:	a917      	add	r1, sp, #92	; 0x5c
 8006f26:	2305      	movs	r3, #5
 8006f28:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8006f2c:	aa18      	add	r2, sp, #96	; 0x60
 8006f2e:	9802      	ldr	r0, [sp, #8]
 8006f30:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8006f34:	f00c f973 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8006f38:	f8b9 3000 	ldrh.w	r3, [r9]
 8006f3c:	2118      	movs	r1, #24
 8006f3e:	428b      	cmp	r3, r1
 8006f40:	f8a4 1160 	strh.w	r1, [r4, #352]	; 0x160
 8006f44:	f240 87e0 	bls.w	8007f08 <_ZN16TransferViewBaseC1Ev+0x14a4>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f48:	4bac      	ldr	r3, [pc, #688]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	2b00      	cmp	r3, #0
 8006f4e:	f001 806a 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8006f52:	4aab      	ldr	r2, [pc, #684]	; (8007200 <_ZN16TransferViewBaseC1Ev+0x79c>)
 8006f54:	f893 0030 	ldrb.w	r0, [r3, #48]	; 0x30
 8006f58:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8006f5a:	4baa      	ldr	r3, [pc, #680]	; (8007204 <_ZN16TransferViewBaseC1Ev+0x7a0>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8006f5c:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8006f60:	6818      	ldr	r0, [r3, #0]
 8006f62:	f7ff fd11 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8006f66:	f8da 3000 	ldr.w	r3, [sl]
 8006f6a:	4601      	mov	r1, r0
 8006f6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f6e:	9111      	str	r1, [sp, #68]	; 0x44
 8006f70:	4650      	mov	r0, sl
 8006f72:	4798      	blx	r3
 8006f74:	f8da 3000 	ldr.w	r3, [sl]
 8006f78:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f7c:	4606      	mov	r6, r0
 8006f7e:	4650      	mov	r0, sl
 8006f80:	4798      	blx	r3
 8006f82:	f8da 3000 	ldr.w	r3, [sl]
 8006f86:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006f88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006f8a:	fb16 f600 	smulbb	r6, r6, r0
 8006f8e:	4650      	mov	r0, sl
 8006f90:	4798      	blx	r3
 8006f92:	b2f6      	uxtb	r6, r6
 8006f94:	4430      	add	r0, r6
 8006f96:	f884 016d 	strb.w	r0, [r4, #365]	; 0x16d
 8006f9a:	4a9b      	ldr	r2, [pc, #620]	; (8007208 <_ZN16TransferViewBaseC1Ev+0x7a4>)
 8006f9c:	f8c4 2174 	str.w	r2, [r4, #372]	; 0x174
        color = col;
 8006fa0:	f04f 33ff 	mov.w	r3, #4294967295
 8006fa4:	2001      	movs	r0, #1
        colorPressed = col;
 8006fa6:	e9c4 3359 	strd	r3, r3, [r4, #356]	; 0x164
    bc.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8006faa:	a917      	add	r1, sp, #92	; 0x5c
 8006fac:	2305      	movs	r3, #5
 8006fae:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8006fb2:	aa18      	add	r2, sp, #96	; 0x60
 8006fb4:	ee1a 0a90 	vmov	r0, s21
 8006fb8:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8006fbc:	f00c f92f 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8006fc0:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8006fc4:	2117      	movs	r1, #23
 8006fc6:	428b      	cmp	r3, r1
 8006fc8:	f8a4 11a8 	strh.w	r1, [r4, #424]	; 0x1a8
 8006fcc:	f240 87a1 	bls.w	8007f12 <_ZN16TransferViewBaseC1Ev+0x14ae>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006fd0:	4b8a      	ldr	r3, [pc, #552]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	2b00      	cmp	r3, #0
 8006fd6:	f001 8026 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8006fda:	4a89      	ldr	r2, [pc, #548]	; (8007200 <_ZN16TransferViewBaseC1Ev+0x79c>)
 8006fdc:	f893 002e 	ldrb.w	r0, [r3, #46]	; 0x2e
 8006fe0:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8006fe2:	4b88      	ldr	r3, [pc, #544]	; (8007204 <_ZN16TransferViewBaseC1Ev+0x7a0>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8006fe4:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8006fe8:	6818      	ldr	r0, [r3, #0]
 8006fea:	f7ff fccd 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8006fee:	f8da 3000 	ldr.w	r3, [sl]
 8006ff2:	4601      	mov	r1, r0
 8006ff4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ff6:	9111      	str	r1, [sp, #68]	; 0x44
 8006ff8:	4650      	mov	r0, sl
 8006ffa:	4798      	blx	r3
 8006ffc:	f8da 3000 	ldr.w	r3, [sl]
 8007000:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007002:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007004:	4606      	mov	r6, r0
 8007006:	4650      	mov	r0, sl
 8007008:	4798      	blx	r3
 800700a:	f8da 3000 	ldr.w	r3, [sl]
 800700e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007010:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007012:	fb16 f600 	smulbb	r6, r6, r0
 8007016:	4650      	mov	r0, sl
 8007018:	4798      	blx	r3
 800701a:	b2f6      	uxtb	r6, r6
 800701c:	4430      	add	r0, r6
 800701e:	f884 01b5 	strb.w	r0, [r4, #437]	; 0x1b5
 8007022:	4a7a      	ldr	r2, [pc, #488]	; (800720c <_ZN16TransferViewBaseC1Ev+0x7a8>)
 8007024:	f8c4 21bc 	str.w	r2, [r4, #444]	; 0x1bc
        color = col;
 8007028:	f04f 33ff 	mov.w	r3, #4294967295
 800702c:	2001      	movs	r0, #1
        colorPressed = col;
 800702e:	e9c4 336b 	strd	r3, r3, [r4, #428]	; 0x1ac
    bb.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8007032:	a917      	add	r1, sp, #92	; 0x5c
 8007034:	2305      	movs	r3, #5
 8007036:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 800703a:	aa18      	add	r2, sp, #96	; 0x60
 800703c:	9803      	ldr	r0, [sp, #12]
 800703e:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007042:	f00c f8ec 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007046:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 800704a:	2116      	movs	r1, #22
 800704c:	428b      	cmp	r3, r1
 800704e:	f8a4 11f0 	strh.w	r1, [r4, #496]	; 0x1f0
 8007052:	f240 8763 	bls.w	8007f1c <_ZN16TransferViewBaseC1Ev+0x14b8>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007056:	4b69      	ldr	r3, [pc, #420]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	2b00      	cmp	r3, #0
 800705c:	f000 87e3 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007060:	4a67      	ldr	r2, [pc, #412]	; (8007200 <_ZN16TransferViewBaseC1Ev+0x79c>)
 8007062:	f893 002c 	ldrb.w	r0, [r3, #44]	; 0x2c
 8007066:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007068:	4b66      	ldr	r3, [pc, #408]	; (8007204 <_ZN16TransferViewBaseC1Ev+0x7a0>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800706a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800706e:	6818      	ldr	r0, [r3, #0]
 8007070:	f7ff fc8a 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007074:	f8da 3000 	ldr.w	r3, [sl]
 8007078:	4601      	mov	r1, r0
 800707a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800707c:	9111      	str	r1, [sp, #68]	; 0x44
 800707e:	4650      	mov	r0, sl
 8007080:	4798      	blx	r3
 8007082:	f8da 3000 	ldr.w	r3, [sl]
 8007086:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007088:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800708a:	4606      	mov	r6, r0
 800708c:	4650      	mov	r0, sl
 800708e:	4798      	blx	r3
 8007090:	f8da 3000 	ldr.w	r3, [sl]
 8007094:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007098:	fb16 f600 	smulbb	r6, r6, r0
 800709c:	4650      	mov	r0, sl
 800709e:	4798      	blx	r3
 80070a0:	b2f6      	uxtb	r6, r6
 80070a2:	4430      	add	r0, r6
 80070a4:	f884 01fd 	strb.w	r0, [r4, #509]	; 0x1fd
 80070a8:	4a59      	ldr	r2, [pc, #356]	; (8007210 <_ZN16TransferViewBaseC1Ev+0x7ac>)
 80070aa:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204
        color = col;
 80070ae:	f04f 33ff 	mov.w	r3, #4294967295
 80070b2:	2001      	movs	r0, #1
        colorPressed = col;
 80070b4:	e9c4 337d 	strd	r3, r3, [r4, #500]	; 0x1f4
    ba.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80070b8:	a917      	add	r1, sp, #92	; 0x5c
 80070ba:	2305      	movs	r3, #5
 80070bc:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80070c0:	aa18      	add	r2, sp, #96	; 0x60
 80070c2:	ee1b 0a10 	vmov	r0, s22
 80070c6:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80070ca:	f00c f8a8 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80070ce:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80070d2:	2115      	movs	r1, #21
 80070d4:	428b      	cmp	r3, r1
 80070d6:	f8a4 1238 	strh.w	r1, [r4, #568]	; 0x238
 80070da:	f240 8724 	bls.w	8007f26 <_ZN16TransferViewBaseC1Ev+0x14c2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80070de:	4b47      	ldr	r3, [pc, #284]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	2b00      	cmp	r3, #0
 80070e4:	f000 879f 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80070e8:	4a45      	ldr	r2, [pc, #276]	; (8007200 <_ZN16TransferViewBaseC1Ev+0x79c>)
 80070ea:	f893 002a 	ldrb.w	r0, [r3, #42]	; 0x2a
 80070ee:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80070f0:	4b44      	ldr	r3, [pc, #272]	; (8007204 <_ZN16TransferViewBaseC1Ev+0x7a0>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80070f2:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80070f6:	6818      	ldr	r0, [r3, #0]
 80070f8:	f7ff fc46 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80070fc:	f8da 3000 	ldr.w	r3, [sl]
 8007100:	4601      	mov	r1, r0
 8007102:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007104:	9111      	str	r1, [sp, #68]	; 0x44
 8007106:	4650      	mov	r0, sl
 8007108:	4798      	blx	r3
 800710a:	f8da 3000 	ldr.w	r3, [sl]
 800710e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007110:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007112:	4606      	mov	r6, r0
 8007114:	4650      	mov	r0, sl
 8007116:	4798      	blx	r3
 8007118:	f8da 3000 	ldr.w	r3, [sl]
 800711c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800711e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007120:	fb16 f600 	smulbb	r6, r6, r0
 8007124:	4650      	mov	r0, sl
 8007126:	4798      	blx	r3
 8007128:	b2f6      	uxtb	r6, r6
 800712a:	4430      	add	r0, r6
 800712c:	f884 0245 	strb.w	r0, [r4, #581]	; 0x245
 8007130:	4a38      	ldr	r2, [pc, #224]	; (8007214 <_ZN16TransferViewBaseC1Ev+0x7b0>)
 8007132:	f8c4 224c 	str.w	r2, [r4, #588]	; 0x24c
        color = col;
 8007136:	f04f 33ff 	mov.w	r3, #4294967295
 800713a:	2001      	movs	r0, #1
        colorPressed = col;
 800713c:	e9c4 338f 	strd	r3, r3, [r4, #572]	; 0x23c
    b9.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8007140:	a917      	add	r1, sp, #92	; 0x5c
 8007142:	2305      	movs	r3, #5
 8007144:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007148:	aa18      	add	r2, sp, #96	; 0x60
 800714a:	9804      	ldr	r0, [sp, #16]
 800714c:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007150:	f00c f865 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007154:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007158:	2114      	movs	r1, #20
 800715a:	428b      	cmp	r3, r1
 800715c:	f8a4 1280 	strh.w	r1, [r4, #640]	; 0x280
 8007160:	f240 86e6 	bls.w	8007f30 <_ZN16TransferViewBaseC1Ev+0x14cc>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007164:	4b25      	ldr	r3, [pc, #148]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	2b00      	cmp	r3, #0
 800716a:	f000 875c 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 800716e:	4a24      	ldr	r2, [pc, #144]	; (8007200 <_ZN16TransferViewBaseC1Ev+0x79c>)
 8007170:	f893 0028 	ldrb.w	r0, [r3, #40]	; 0x28
 8007174:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007176:	4b23      	ldr	r3, [pc, #140]	; (8007204 <_ZN16TransferViewBaseC1Ev+0x7a0>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007178:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800717c:	6818      	ldr	r0, [r3, #0]
 800717e:	f7ff fc03 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007182:	f8da 3000 	ldr.w	r3, [sl]
 8007186:	4601      	mov	r1, r0
 8007188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800718a:	9111      	str	r1, [sp, #68]	; 0x44
 800718c:	4650      	mov	r0, sl
 800718e:	4798      	blx	r3
 8007190:	f8da 3000 	ldr.w	r3, [sl]
 8007194:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007196:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007198:	4606      	mov	r6, r0
 800719a:	4650      	mov	r0, sl
 800719c:	4798      	blx	r3
 800719e:	f8da 3000 	ldr.w	r3, [sl]
 80071a2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80071a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071a6:	fb16 f600 	smulbb	r6, r6, r0
 80071aa:	4650      	mov	r0, sl
 80071ac:	4798      	blx	r3
 80071ae:	b2f6      	uxtb	r6, r6
 80071b0:	4430      	add	r0, r6
 80071b2:	f884 028d 	strb.w	r0, [r4, #653]	; 0x28d
 80071b6:	4a18      	ldr	r2, [pc, #96]	; (8007218 <_ZN16TransferViewBaseC1Ev+0x7b4>)
 80071b8:	f8c4 2294 	str.w	r2, [r4, #660]	; 0x294
        color = col;
 80071bc:	f04f 33ff 	mov.w	r3, #4294967295
 80071c0:	2001      	movs	r0, #1
        colorPressed = col;
 80071c2:	e9c4 33a1 	strd	r3, r3, [r4, #644]	; 0x284
    b8.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 80071c6:	a917      	add	r1, sp, #92	; 0x5c
 80071c8:	2305      	movs	r3, #5
 80071ca:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80071ce:	aa18      	add	r2, sp, #96	; 0x60
 80071d0:	ee1b 0a90 	vmov	r0, s23
 80071d4:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80071d8:	f00c f821 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80071dc:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80071e0:	2113      	movs	r1, #19
 80071e2:	428b      	cmp	r3, r1
 80071e4:	f8a4 12c8 	strh.w	r1, [r4, #712]	; 0x2c8
 80071e8:	f240 86a7 	bls.w	8007f3a <_ZN16TransferViewBaseC1Ev+0x14d6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071ec:	4b03      	ldr	r3, [pc, #12]	; (80071fc <_ZN16TransferViewBaseC1Ev+0x798>)
 80071ee:	681b      	ldr	r3, [r3, #0]
 80071f0:	e014      	b.n	800721c <_ZN16TransferViewBaseC1Ev+0x7b8>
 80071f2:	bf00      	nop
 80071f4:	003000b0 	.word	0x003000b0
 80071f8:	00300080 	.word	0x00300080
 80071fc:	20002cdc 	.word	0x20002cdc
 8007200:	20002ce4 	.word	0x20002ce4
 8007204:	20002ce8 	.word	0x20002ce8
 8007208:	00300050 	.word	0x00300050
 800720c:	006000e0 	.word	0x006000e0
 8007210:	006000b0 	.word	0x006000b0
 8007214:	00600080 	.word	0x00600080
 8007218:	00600050 	.word	0x00600050
 800721c:	2b00      	cmp	r3, #0
 800721e:	f000 8702 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007222:	4ac1      	ldr	r2, [pc, #772]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 8007224:	f893 0026 	ldrb.w	r0, [r3, #38]	; 0x26
 8007228:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800722a:	4bc0      	ldr	r3, [pc, #768]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800722c:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007230:	6818      	ldr	r0, [r3, #0]
 8007232:	f7ff fba9 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007236:	f8da 3000 	ldr.w	r3, [sl]
 800723a:	4601      	mov	r1, r0
 800723c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800723e:	9111      	str	r1, [sp, #68]	; 0x44
 8007240:	4650      	mov	r0, sl
 8007242:	4798      	blx	r3
 8007244:	f8da 3000 	ldr.w	r3, [sl]
 8007248:	9911      	ldr	r1, [sp, #68]	; 0x44
 800724a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800724c:	4606      	mov	r6, r0
 800724e:	4650      	mov	r0, sl
 8007250:	4798      	blx	r3
 8007252:	f8da 3000 	ldr.w	r3, [sl]
 8007256:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800725a:	fb16 f600 	smulbb	r6, r6, r0
 800725e:	4650      	mov	r0, sl
 8007260:	4798      	blx	r3
 8007262:	b2f6      	uxtb	r6, r6
 8007264:	4430      	add	r0, r6
 8007266:	f884 02d5 	strb.w	r0, [r4, #725]	; 0x2d5
 800726a:	4ab1      	ldr	r2, [pc, #708]	; (8007530 <_ZN16TransferViewBaseC1Ev+0xacc>)
 800726c:	f8c4 22dc 	str.w	r2, [r4, #732]	; 0x2dc
        color = col;
 8007270:	f04f 33ff 	mov.w	r3, #4294967295
 8007274:	2001      	movs	r0, #1
        colorPressed = col;
 8007276:	e9c4 33b3 	strd	r3, r3, [r4, #716]	; 0x2cc
    b7.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 800727a:	a917      	add	r1, sp, #92	; 0x5c
 800727c:	2305      	movs	r3, #5
 800727e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007282:	aa18      	add	r2, sp, #96	; 0x60
 8007284:	9805      	ldr	r0, [sp, #20]
 8007286:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 800728a:	f00b ffc8 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800728e:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007292:	2112      	movs	r1, #18
 8007294:	428b      	cmp	r3, r1
 8007296:	f8a4 1310 	strh.w	r1, [r4, #784]	; 0x310
 800729a:	f240 8653 	bls.w	8007f44 <_ZN16TransferViewBaseC1Ev+0x14e0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800729e:	4ba5      	ldr	r3, [pc, #660]	; (8007534 <_ZN16TransferViewBaseC1Ev+0xad0>)
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	f000 86bf 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80072a8:	4a9f      	ldr	r2, [pc, #636]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 80072aa:	f893 0024 	ldrb.w	r0, [r3, #36]	; 0x24
 80072ae:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80072b0:	4b9e      	ldr	r3, [pc, #632]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80072b2:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80072b6:	6818      	ldr	r0, [r3, #0]
 80072b8:	f7ff fb66 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80072bc:	f8da 3000 	ldr.w	r3, [sl]
 80072c0:	4601      	mov	r1, r0
 80072c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80072c4:	9111      	str	r1, [sp, #68]	; 0x44
 80072c6:	4650      	mov	r0, sl
 80072c8:	4798      	blx	r3
 80072ca:	f8da 3000 	ldr.w	r3, [sl]
 80072ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 80072d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072d2:	4606      	mov	r6, r0
 80072d4:	4650      	mov	r0, sl
 80072d6:	4798      	blx	r3
 80072d8:	f8da 3000 	ldr.w	r3, [sl]
 80072dc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80072de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072e0:	fb16 f600 	smulbb	r6, r6, r0
 80072e4:	4650      	mov	r0, sl
 80072e6:	4798      	blx	r3
 80072e8:	b2f6      	uxtb	r6, r6
 80072ea:	4430      	add	r0, r6
 80072ec:	f884 031d 	strb.w	r0, [r4, #797]	; 0x31d
 80072f0:	4a91      	ldr	r2, [pc, #580]	; (8007538 <_ZN16TransferViewBaseC1Ev+0xad4>)
 80072f2:	f8c4 2324 	str.w	r2, [r4, #804]	; 0x324
        color = col;
 80072f6:	f04f 33ff 	mov.w	r3, #4294967295
 80072fa:	2001      	movs	r0, #1
        colorPressed = col;
 80072fc:	e9c4 33c5 	strd	r3, r3, [r4, #788]	; 0x314
    b6.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8007300:	a917      	add	r1, sp, #92	; 0x5c
 8007302:	2305      	movs	r3, #5
 8007304:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007308:	aa18      	add	r2, sp, #96	; 0x60
 800730a:	ee1c 0a10 	vmov	r0, s24
 800730e:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007312:	f00b ff84 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007316:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 800731a:	2111      	movs	r1, #17
 800731c:	428b      	cmp	r3, r1
 800731e:	f8a4 1358 	strh.w	r1, [r4, #856]	; 0x358
 8007322:	f240 8637 	bls.w	8007f94 <_ZN16TransferViewBaseC1Ev+0x1530>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007326:	4b83      	ldr	r3, [pc, #524]	; (8007534 <_ZN16TransferViewBaseC1Ev+0xad0>)
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	2b00      	cmp	r3, #0
 800732c:	f000 867b 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007330:	4a7d      	ldr	r2, [pc, #500]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 8007332:	f893 0022 	ldrb.w	r0, [r3, #34]	; 0x22
 8007336:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007338:	4b7c      	ldr	r3, [pc, #496]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800733a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800733e:	6818      	ldr	r0, [r3, #0]
 8007340:	f7ff fb22 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007344:	f8da 3000 	ldr.w	r3, [sl]
 8007348:	4601      	mov	r1, r0
 800734a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800734c:	9111      	str	r1, [sp, #68]	; 0x44
 800734e:	4650      	mov	r0, sl
 8007350:	4798      	blx	r3
 8007352:	f8da 3000 	ldr.w	r3, [sl]
 8007356:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007358:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800735a:	4606      	mov	r6, r0
 800735c:	4650      	mov	r0, sl
 800735e:	4798      	blx	r3
 8007360:	f8da 3000 	ldr.w	r3, [sl]
 8007364:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007366:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007368:	fb16 f600 	smulbb	r6, r6, r0
 800736c:	4650      	mov	r0, sl
 800736e:	4798      	blx	r3
 8007370:	b2f6      	uxtb	r6, r6
 8007372:	4430      	add	r0, r6
 8007374:	f884 0365 	strb.w	r0, [r4, #869]	; 0x365
 8007378:	4a70      	ldr	r2, [pc, #448]	; (800753c <_ZN16TransferViewBaseC1Ev+0xad8>)
 800737a:	f8c4 236c 	str.w	r2, [r4, #876]	; 0x36c
        color = col;
 800737e:	f04f 33ff 	mov.w	r3, #4294967295
 8007382:	2001      	movs	r0, #1
        colorPressed = col;
 8007384:	e9c4 33d7 	strd	r3, r3, [r4, #860]	; 0x35c
    b5.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 8007388:	a917      	add	r1, sp, #92	; 0x5c
 800738a:	2305      	movs	r3, #5
 800738c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007390:	aa18      	add	r2, sp, #96	; 0x60
 8007392:	9806      	ldr	r0, [sp, #24]
 8007394:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007398:	f00b ff41 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800739c:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80073a0:	2110      	movs	r1, #16
 80073a2:	428b      	cmp	r3, r1
 80073a4:	f8a4 13a0 	strh.w	r1, [r4, #928]	; 0x3a0
 80073a8:	f240 85f9 	bls.w	8007f9e <_ZN16TransferViewBaseC1Ev+0x153a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073ac:	4b61      	ldr	r3, [pc, #388]	; (8007534 <_ZN16TransferViewBaseC1Ev+0xad0>)
 80073ae:	681b      	ldr	r3, [r3, #0]
 80073b0:	2b00      	cmp	r3, #0
 80073b2:	f000 8638 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80073b6:	4a5c      	ldr	r2, [pc, #368]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 80073b8:	f893 0020 	ldrb.w	r0, [r3, #32]
 80073bc:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80073be:	4b5b      	ldr	r3, [pc, #364]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80073c0:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80073c4:	6818      	ldr	r0, [r3, #0]
 80073c6:	f7ff fadf 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80073ca:	f8da 3000 	ldr.w	r3, [sl]
 80073ce:	4601      	mov	r1, r0
 80073d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80073d2:	9111      	str	r1, [sp, #68]	; 0x44
 80073d4:	4650      	mov	r0, sl
 80073d6:	4798      	blx	r3
 80073d8:	f8da 3000 	ldr.w	r3, [sl]
 80073dc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80073de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073e0:	4606      	mov	r6, r0
 80073e2:	4650      	mov	r0, sl
 80073e4:	4798      	blx	r3
 80073e6:	f8da 3000 	ldr.w	r3, [sl]
 80073ea:	9911      	ldr	r1, [sp, #68]	; 0x44
 80073ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073ee:	fb16 f600 	smulbb	r6, r6, r0
 80073f2:	4650      	mov	r0, sl
 80073f4:	4798      	blx	r3
 80073f6:	b2f6      	uxtb	r6, r6
 80073f8:	4430      	add	r0, r6
 80073fa:	f884 03ad 	strb.w	r0, [r4, #941]	; 0x3ad
 80073fe:	4a50      	ldr	r2, [pc, #320]	; (8007540 <_ZN16TransferViewBaseC1Ev+0xadc>)
 8007400:	f8c4 23b4 	str.w	r2, [r4, #948]	; 0x3b4
        color = col;
 8007404:	f04f 33ff 	mov.w	r3, #4294967295
 8007408:	2001      	movs	r0, #1
        colorPressed = col;
 800740a:	e9c4 33e9 	strd	r3, r3, [r4, #932]	; 0x3a4
    b4.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 800740e:	a917      	add	r1, sp, #92	; 0x5c
 8007410:	2305      	movs	r3, #5
 8007412:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007416:	aa18      	add	r2, sp, #96	; 0x60
 8007418:	ee1c 0a90 	vmov	r0, s25
 800741c:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007420:	f00b fefd 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007424:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007428:	210f      	movs	r1, #15
 800742a:	428b      	cmp	r3, r1
 800742c:	f8a4 13e8 	strh.w	r1, [r4, #1000]	; 0x3e8
 8007430:	f240 85ba 	bls.w	8007fa8 <_ZN16TransferViewBaseC1Ev+0x1544>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007434:	4b3f      	ldr	r3, [pc, #252]	; (8007534 <_ZN16TransferViewBaseC1Ev+0xad0>)
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	2b00      	cmp	r3, #0
 800743a:	f000 85f4 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 800743e:	4a3a      	ldr	r2, [pc, #232]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 8007440:	7f98      	ldrb	r0, [r3, #30]
 8007442:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007444:	4b39      	ldr	r3, [pc, #228]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007446:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800744a:	6818      	ldr	r0, [r3, #0]
 800744c:	f7ff fa9c 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007450:	f8da 3000 	ldr.w	r3, [sl]
 8007454:	4601      	mov	r1, r0
 8007456:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007458:	9111      	str	r1, [sp, #68]	; 0x44
 800745a:	4650      	mov	r0, sl
 800745c:	4798      	blx	r3
 800745e:	f8da 3000 	ldr.w	r3, [sl]
 8007462:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007464:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007466:	4606      	mov	r6, r0
 8007468:	4650      	mov	r0, sl
 800746a:	4798      	blx	r3
 800746c:	f8da 3000 	ldr.w	r3, [sl]
 8007470:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007474:	fb16 f600 	smulbb	r6, r6, r0
 8007478:	4650      	mov	r0, sl
 800747a:	4798      	blx	r3
 800747c:	b2f6      	uxtb	r6, r6
 800747e:	4430      	add	r0, r6
 8007480:	f884 03f5 	strb.w	r0, [r4, #1013]	; 0x3f5
 8007484:	4a2f      	ldr	r2, [pc, #188]	; (8007544 <_ZN16TransferViewBaseC1Ev+0xae0>)
 8007486:	f8c4 23fc 	str.w	r2, [r4, #1020]	; 0x3fc
        color = col;
 800748a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800748e:	e9c4 33fb 	strd	r3, r3, [r4, #1004]	; 0x3ec
    b3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8007492:	a917      	add	r1, sp, #92	; 0x5c
 8007494:	2301      	movs	r3, #1
 8007496:	9807      	ldr	r0, [sp, #28]
 8007498:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 800749c:	aa18      	add	r2, sp, #96	; 0x60
 800749e:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80074a2:	f00b febc 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80074a6:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80074aa:	210e      	movs	r1, #14
 80074ac:	428b      	cmp	r3, r1
 80074ae:	f8a4 1430 	strh.w	r1, [r4, #1072]	; 0x430
 80074b2:	f240 857e 	bls.w	8007fb2 <_ZN16TransferViewBaseC1Ev+0x154e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80074b6:	4b1f      	ldr	r3, [pc, #124]	; (8007534 <_ZN16TransferViewBaseC1Ev+0xad0>)
 80074b8:	681b      	ldr	r3, [r3, #0]
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	f000 85b3 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80074c0:	4a19      	ldr	r2, [pc, #100]	; (8007528 <_ZN16TransferViewBaseC1Ev+0xac4>)
 80074c2:	7f18      	ldrb	r0, [r3, #28]
 80074c4:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80074c6:	4b19      	ldr	r3, [pc, #100]	; (800752c <_ZN16TransferViewBaseC1Ev+0xac8>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80074c8:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80074cc:	6818      	ldr	r0, [r3, #0]
 80074ce:	f7ff fa5b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80074d2:	f8da 3000 	ldr.w	r3, [sl]
 80074d6:	4601      	mov	r1, r0
 80074d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80074da:	9111      	str	r1, [sp, #68]	; 0x44
 80074dc:	4650      	mov	r0, sl
 80074de:	4798      	blx	r3
 80074e0:	f8da 3000 	ldr.w	r3, [sl]
 80074e4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80074e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074e8:	4606      	mov	r6, r0
 80074ea:	4650      	mov	r0, sl
 80074ec:	4798      	blx	r3
 80074ee:	f8da 3000 	ldr.w	r3, [sl]
 80074f2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80074f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074f6:	fb16 f600 	smulbb	r6, r6, r0
 80074fa:	4650      	mov	r0, sl
 80074fc:	4798      	blx	r3
 80074fe:	b2f6      	uxtb	r6, r6
 8007500:	4430      	add	r0, r6
 8007502:	f884 043d 	strb.w	r0, [r4, #1085]	; 0x43d
        color = col;
 8007506:	f04f 33ff 	mov.w	r3, #4294967295
 800750a:	4a0f      	ldr	r2, [pc, #60]	; (8007548 <_ZN16TransferViewBaseC1Ev+0xae4>)
 800750c:	f8c4 3434 	str.w	r3, [r4, #1076]	; 0x434
 8007510:	2001      	movs	r0, #1
        colorPressed = col;
 8007512:	f8c4 3438 	str.w	r3, [r4, #1080]	; 0x438
 8007516:	f8c4 2444 	str.w	r2, [r4, #1092]	; 0x444
 800751a:	2305      	movs	r3, #5
    b2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_PRESSED_ID));
 800751c:	a917      	add	r1, sp, #92	; 0x5c
 800751e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007522:	aa18      	add	r2, sp, #96	; 0x60
 8007524:	e012      	b.n	800754c <_ZN16TransferViewBaseC1Ev+0xae8>
 8007526:	bf00      	nop
 8007528:	20002ce4 	.word	0x20002ce4
 800752c:	20002ce8 	.word	0x20002ce8
 8007530:	009000e0 	.word	0x009000e0
 8007534:	20002cdc 	.word	0x20002cdc
 8007538:	009000b0 	.word	0x009000b0
 800753c:	00900080 	.word	0x00900080
 8007540:	00900050 	.word	0x00900050
 8007544:	00c000e0 	.word	0x00c000e0
 8007548:	00c000b0 	.word	0x00c000b0
 800754c:	ee1d 0a10 	vmov	r0, s26
 8007550:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007554:	f00b fe63 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007558:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 800755c:	210d      	movs	r1, #13
 800755e:	428b      	cmp	r3, r1
 8007560:	f8a4 1478 	strh.w	r1, [r4, #1144]	; 0x478
 8007564:	f240 852a 	bls.w	8007fbc <_ZN16TransferViewBaseC1Ev+0x1558>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007568:	4bbe      	ldr	r3, [pc, #760]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 800756a:	681b      	ldr	r3, [r3, #0]
 800756c:	2b00      	cmp	r3, #0
 800756e:	f000 855a 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007572:	4abd      	ldr	r2, [pc, #756]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 8007574:	7e98      	ldrb	r0, [r3, #26]
 8007576:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007578:	4bbc      	ldr	r3, [pc, #752]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800757a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800757e:	6818      	ldr	r0, [r3, #0]
 8007580:	f7ff fa02 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007584:	f8da 3000 	ldr.w	r3, [sl]
 8007588:	4601      	mov	r1, r0
 800758a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800758c:	9111      	str	r1, [sp, #68]	; 0x44
 800758e:	4650      	mov	r0, sl
 8007590:	4798      	blx	r3
 8007592:	f8da 3000 	ldr.w	r3, [sl]
 8007596:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007598:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800759a:	4606      	mov	r6, r0
 800759c:	4650      	mov	r0, sl
 800759e:	4798      	blx	r3
 80075a0:	f8da 3000 	ldr.w	r3, [sl]
 80075a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80075a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80075a8:	fb16 f600 	smulbb	r6, r6, r0
 80075ac:	4650      	mov	r0, sl
 80075ae:	4798      	blx	r3
 80075b0:	b2f6      	uxtb	r6, r6
 80075b2:	4430      	add	r0, r6
 80075b4:	f884 0485 	strb.w	r0, [r4, #1157]	; 0x485
        color = col;
 80075b8:	f04f 33ff 	mov.w	r3, #4294967295
 80075bc:	4aac      	ldr	r2, [pc, #688]	; (8007870 <_ZN16TransferViewBaseC1Ev+0xe0c>)
 80075be:	f8c4 347c 	str.w	r3, [r4, #1148]	; 0x47c
        colorPressed = col;
 80075c2:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
 80075c6:	f8c4 248c 	str.w	r2, [r4, #1164]	; 0x48c
 80075ca:	2301      	movs	r3, #1
    b1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 80075cc:	a917      	add	r1, sp, #92	; 0x5c
 80075ce:	9808      	ldr	r0, [sp, #32]
 80075d0:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80075d4:	aa18      	add	r2, sp, #96	; 0x60
 80075d6:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80075da:	f00b fe20 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80075de:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80075e2:	210c      	movs	r1, #12
 80075e4:	428b      	cmp	r3, r1
 80075e6:	f8a4 14c0 	strh.w	r1, [r4, #1216]	; 0x4c0
 80075ea:	f240 84ec 	bls.w	8007fc6 <_ZN16TransferViewBaseC1Ev+0x1562>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80075ee:	4b9d      	ldr	r3, [pc, #628]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	2b00      	cmp	r3, #0
 80075f4:	f000 8517 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80075f8:	4a9b      	ldr	r2, [pc, #620]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 80075fa:	7e18      	ldrb	r0, [r3, #24]
 80075fc:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80075fe:	4b9b      	ldr	r3, [pc, #620]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007600:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007604:	6818      	ldr	r0, [r3, #0]
 8007606:	f7ff f9bf 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800760a:	f8da 3000 	ldr.w	r3, [sl]
 800760e:	4601      	mov	r1, r0
 8007610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007612:	9111      	str	r1, [sp, #68]	; 0x44
 8007614:	4650      	mov	r0, sl
 8007616:	4798      	blx	r3
 8007618:	f8da 3000 	ldr.w	r3, [sl]
 800761c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800761e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007620:	4606      	mov	r6, r0
 8007622:	4650      	mov	r0, sl
 8007624:	4798      	blx	r3
 8007626:	f8da 3000 	ldr.w	r3, [sl]
 800762a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800762c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800762e:	fb16 f600 	smulbb	r6, r6, r0
 8007632:	4650      	mov	r0, sl
 8007634:	4798      	blx	r3
 8007636:	b2f6      	uxtb	r6, r6
 8007638:	4430      	add	r0, r6
 800763a:	f884 04cd 	strb.w	r0, [r4, #1229]	; 0x4cd
        color = col;
 800763e:	f04f 33ff 	mov.w	r3, #4294967295
 8007642:	4a8c      	ldr	r2, [pc, #560]	; (8007874 <_ZN16TransferViewBaseC1Ev+0xe10>)
 8007644:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        colorPressed = col;
 8007648:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
 800764c:	f8c4 24d4 	str.w	r2, [r4, #1236]	; 0x4d4
 8007650:	2301      	movs	r3, #1
    b0.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ID), touchgfx::Bitmap(BITMAP_BLUE_ID));
 8007652:	a917      	add	r1, sp, #92	; 0x5c
 8007654:	ee1d 0a90 	vmov	r0, s27
 8007658:	aa18      	add	r2, sp, #96	; 0x60
 800765a:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 800765e:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007662:	f00b fddc 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007666:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 800766a:	210b      	movs	r1, #11
 800766c:	428b      	cmp	r3, r1
 800766e:	f8a4 1508 	strh.w	r1, [r4, #1288]	; 0x508
 8007672:	f240 84ad 	bls.w	8007fd0 <_ZN16TransferViewBaseC1Ev+0x156c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007676:	4b7b      	ldr	r3, [pc, #492]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	2b00      	cmp	r3, #0
 800767c:	f000 84d3 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007680:	4a79      	ldr	r2, [pc, #484]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 8007682:	7d98      	ldrb	r0, [r3, #22]
 8007684:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007686:	4b79      	ldr	r3, [pc, #484]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007688:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 800768c:	6818      	ldr	r0, [r3, #0]
 800768e:	f7ff f97b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007692:	f8da 3000 	ldr.w	r3, [sl]
 8007696:	4601      	mov	r1, r0
 8007698:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800769a:	9111      	str	r1, [sp, #68]	; 0x44
 800769c:	4650      	mov	r0, sl
 800769e:	4798      	blx	r3
 80076a0:	f8da 3000 	ldr.w	r3, [sl]
 80076a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80076a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076a8:	4606      	mov	r6, r0
 80076aa:	4650      	mov	r0, sl
 80076ac:	4798      	blx	r3
 80076ae:	f8da 3000 	ldr.w	r3, [sl]
 80076b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80076b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076b6:	fb16 f600 	smulbb	r6, r6, r0
 80076ba:	4650      	mov	r0, sl
 80076bc:	4798      	blx	r3
 80076be:	b2f6      	uxtb	r6, r6
 80076c0:	4430      	add	r0, r6
 80076c2:	f884 0515 	strb.w	r0, [r4, #1301]	; 0x515
        color = col;
 80076c6:	f04f 33ff 	mov.w	r3, #4294967295
 80076ca:	2250      	movs	r2, #80	; 0x50
 80076cc:	260a      	movs	r6, #10
 80076ce:	f8c4 350c 	str.w	r3, [r4, #1292]	; 0x50c
        colorPressed = col;
 80076d2:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 80076d6:	f8c4 2520 	str.w	r2, [r4, #1312]	; 0x520
 80076da:	230b      	movs	r3, #11
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80076dc:	ee1e 0a10 	vmov	r0, s28
 80076e0:	aa18      	add	r2, sp, #96	; 0x60
 80076e2:	a917      	add	r1, sp, #92	; 0x5c
 80076e4:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80076e8:	f8ad 605c 	strh.w	r6, [sp, #92]	; 0x5c
 80076ec:	f00b fd97 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80076f0:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80076f4:	f8a4 6554 	strh.w	r6, [r4, #1364]	; 0x554
 80076f8:	42b3      	cmp	r3, r6
 80076fa:	f240 846e 	bls.w	8007fda <_ZN16TransferViewBaseC1Ev+0x1576>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076fe:	4b59      	ldr	r3, [pc, #356]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 8007700:	681b      	ldr	r3, [r3, #0]
 8007702:	2b00      	cmp	r3, #0
 8007704:	f000 848f 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007708:	4a57      	ldr	r2, [pc, #348]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 800770a:	7d19      	ldrb	r1, [r3, #20]
 800770c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800770e:	4b57      	ldr	r3, [pc, #348]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007710:	f852 a021 	ldr.w	sl, [r2, r1, lsl #2]
        return texts->getText(typedTextId);
 8007714:	6818      	ldr	r0, [r3, #0]
 8007716:	4631      	mov	r1, r6
 8007718:	f7ff f936 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800771c:	f8da 3000 	ldr.w	r3, [sl]
 8007720:	4601      	mov	r1, r0
 8007722:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007724:	9111      	str	r1, [sp, #68]	; 0x44
 8007726:	4650      	mov	r0, sl
 8007728:	4798      	blx	r3
 800772a:	f8da 3000 	ldr.w	r3, [sl]
 800772e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007730:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007732:	4606      	mov	r6, r0
 8007734:	4650      	mov	r0, sl
 8007736:	4798      	blx	r3
 8007738:	f8da 3000 	ldr.w	r3, [sl]
 800773c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800773e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007740:	fb16 f600 	smulbb	r6, r6, r0
 8007744:	4650      	mov	r0, sl
 8007746:	4798      	blx	r3
 8007748:	b2f6      	uxtb	r6, r6
 800774a:	4430      	add	r0, r6
 800774c:	f884 0561 	strb.w	r0, [r4, #1377]	; 0x561
        color = col;
 8007750:	f04f 33ff 	mov.w	r3, #4294967295
 8007754:	2280      	movs	r2, #128	; 0x80
 8007756:	200a      	movs	r0, #10
 8007758:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
        colorPressed = col;
 800775c:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
 8007760:	f8c4 2568 	str.w	r2, [r4, #1384]	; 0x568
 8007764:	230b      	movs	r3, #11
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8007766:	a917      	add	r1, sp, #92	; 0x5c
 8007768:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 800776c:	aa18      	add	r2, sp, #96	; 0x60
 800776e:	ee1e 0a90 	vmov	r0, s29
 8007772:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007776:	f00b fd52 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800777a:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 800777e:	2109      	movs	r1, #9
 8007780:	428b      	cmp	r3, r1
 8007782:	f8a4 159c 	strh.w	r1, [r4, #1436]	; 0x59c
 8007786:	f240 842d 	bls.w	8007fe4 <_ZN16TransferViewBaseC1Ev+0x1580>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800778a:	4b36      	ldr	r3, [pc, #216]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 800778c:	681b      	ldr	r3, [r3, #0]
 800778e:	2b00      	cmp	r3, #0
 8007790:	f000 8449 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007794:	4a34      	ldr	r2, [pc, #208]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 8007796:	7c98      	ldrb	r0, [r3, #18]
 8007798:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800779a:	4b34      	ldr	r3, [pc, #208]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800779c:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80077a0:	6818      	ldr	r0, [r3, #0]
 80077a2:	f7ff f8f1 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80077a6:	f8da 3000 	ldr.w	r3, [sl]
 80077aa:	4601      	mov	r1, r0
 80077ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80077ae:	9111      	str	r1, [sp, #68]	; 0x44
 80077b0:	4650      	mov	r0, sl
 80077b2:	4798      	blx	r3
 80077b4:	f8da 3000 	ldr.w	r3, [sl]
 80077b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80077ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077bc:	4606      	mov	r6, r0
 80077be:	4650      	mov	r0, sl
 80077c0:	4798      	blx	r3
 80077c2:	f8da 3000 	ldr.w	r3, [sl]
 80077c6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80077c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ca:	fb16 f600 	smulbb	r6, r6, r0
 80077ce:	4650      	mov	r0, sl
 80077d0:	4798      	blx	r3
 80077d2:	b2f6      	uxtb	r6, r6
 80077d4:	4430      	add	r0, r6
 80077d6:	f884 05a9 	strb.w	r0, [r4, #1449]	; 0x5a9
        color = col;
 80077da:	f04f 33ff 	mov.w	r3, #4294967295
 80077de:	22b0      	movs	r2, #176	; 0xb0
 80077e0:	200a      	movs	r0, #10
 80077e2:	f8c4 35a0 	str.w	r3, [r4, #1440]	; 0x5a0
        colorPressed = col;
 80077e6:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
 80077ea:	f8c4 25b0 	str.w	r2, [r4, #1456]	; 0x5b0
 80077ee:	230b      	movs	r3, #11
    buttonWithLabel1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80077f0:	a917      	add	r1, sp, #92	; 0x5c
 80077f2:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80077f6:	aa18      	add	r2, sp, #96	; 0x60
 80077f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80077fa:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80077fe:	f00b fd0e 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007802:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007806:	2108      	movs	r1, #8
 8007808:	428b      	cmp	r3, r1
 800780a:	f8a4 15e4 	strh.w	r1, [r4, #1508]	; 0x5e4
 800780e:	f240 83ee 	bls.w	8007fee <_ZN16TransferViewBaseC1Ev+0x158a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007812:	4b14      	ldr	r3, [pc, #80]	; (8007864 <_ZN16TransferViewBaseC1Ev+0xe00>)
 8007814:	681b      	ldr	r3, [r3, #0]
 8007816:	2b00      	cmp	r3, #0
 8007818:	f000 8405 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 800781c:	4a12      	ldr	r2, [pc, #72]	; (8007868 <_ZN16TransferViewBaseC1Ev+0xe04>)
 800781e:	7c18      	ldrb	r0, [r3, #16]
 8007820:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007822:	4b12      	ldr	r3, [pc, #72]	; (800786c <_ZN16TransferViewBaseC1Ev+0xe08>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007824:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007828:	6818      	ldr	r0, [r3, #0]
 800782a:	f7ff f8ad 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800782e:	f8da 3000 	ldr.w	r3, [sl]
 8007832:	4601      	mov	r1, r0
 8007834:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007836:	9111      	str	r1, [sp, #68]	; 0x44
 8007838:	4650      	mov	r0, sl
 800783a:	4798      	blx	r3
 800783c:	f8da 3000 	ldr.w	r3, [sl]
 8007840:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007842:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007844:	4606      	mov	r6, r0
 8007846:	4650      	mov	r0, sl
 8007848:	4798      	blx	r3
 800784a:	f8da 3000 	ldr.w	r3, [sl]
 800784e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007852:	fb16 f600 	smulbb	r6, r6, r0
 8007856:	4650      	mov	r0, sl
 8007858:	4798      	blx	r3
 800785a:	b2f6      	uxtb	r6, r6
 800785c:	4430      	add	r0, r6
 800785e:	f884 05f1 	strb.w	r0, [r4, #1521]	; 0x5f1
 8007862:	e009      	b.n	8007878 <_ZN16TransferViewBaseC1Ev+0xe14>
 8007864:	20002cdc 	.word	0x20002cdc
 8007868:	20002ce4 	.word	0x20002ce4
 800786c:	20002ce8 	.word	0x20002ce8
 8007870:	00c00080 	.word	0x00c00080
 8007874:	00c00050 	.word	0x00c00050
        color = col;
 8007878:	f04f 33ff 	mov.w	r3, #4294967295
 800787c:	22e0      	movs	r2, #224	; 0xe0
 800787e:	200a      	movs	r0, #10
 8007880:	f8c4 35e8 	str.w	r3, [r4, #1512]	; 0x5e8
        colorPressed = col;
 8007884:	f8c4 35ec 	str.w	r3, [r4, #1516]	; 0x5ec
 8007888:	f8c4 25f8 	str.w	r2, [r4, #1528]	; 0x5f8
 800788c:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 800788e:	a917      	add	r1, sp, #92	; 0x5c
 8007890:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007894:	aa18      	add	r2, sp, #96	; 0x60
 8007896:	ee1f 0a10 	vmov	r0, s30
 800789a:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 800789e:	f00b fcbe 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80078a2:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80078a6:	2107      	movs	r1, #7
 80078a8:	428b      	cmp	r3, r1
 80078aa:	f8a4 162c 	strh.w	r1, [r4, #1580]	; 0x62c
 80078ae:	f240 83a2 	bls.w	8007ff6 <_ZN16TransferViewBaseC1Ev+0x1592>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80078b2:	4bbf      	ldr	r3, [pc, #764]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 80078b4:	681b      	ldr	r3, [r3, #0]
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	f000 83b5 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80078bc:	4abd      	ldr	r2, [pc, #756]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 80078be:	7b98      	ldrb	r0, [r3, #14]
 80078c0:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80078c2:	4bbd      	ldr	r3, [pc, #756]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80078c4:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80078c8:	6818      	ldr	r0, [r3, #0]
 80078ca:	f7ff f85d 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80078ce:	f8da 3000 	ldr.w	r3, [sl]
 80078d2:	4601      	mov	r1, r0
 80078d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80078d6:	9111      	str	r1, [sp, #68]	; 0x44
 80078d8:	4650      	mov	r0, sl
 80078da:	4798      	blx	r3
 80078dc:	f8da 3000 	ldr.w	r3, [sl]
 80078e0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80078e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078e4:	4606      	mov	r6, r0
 80078e6:	4650      	mov	r0, sl
 80078e8:	4798      	blx	r3
 80078ea:	f8da 3000 	ldr.w	r3, [sl]
 80078ee:	9911      	ldr	r1, [sp, #68]	; 0x44
 80078f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078f2:	fb16 f600 	smulbb	r6, r6, r0
 80078f6:	4650      	mov	r0, sl
 80078f8:	4798      	blx	r3
 80078fa:	b2f6      	uxtb	r6, r6
 80078fc:	4430      	add	r0, r6
 80078fe:	f884 0639 	strb.w	r0, [r4, #1593]	; 0x639
        color = col;
 8007902:	f04f 33ff 	mov.w	r3, #4294967295
 8007906:	f44f 7288 	mov.w	r2, #272	; 0x110
 800790a:	200a      	movs	r0, #10
 800790c:	f8c4 3630 	str.w	r3, [r4, #1584]	; 0x630
        colorPressed = col;
 8007910:	f8c4 3634 	str.w	r3, [r4, #1588]	; 0x634
 8007914:	f8c4 2640 	str.w	r2, [r4, #1600]	; 0x640
 8007918:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 800791a:	a917      	add	r1, sp, #92	; 0x5c
 800791c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007920:	aa18      	add	r2, sp, #96	; 0x60
 8007922:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007924:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007928:	f00b fc79 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 800792c:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007930:	2106      	movs	r1, #6
 8007932:	428b      	cmp	r3, r1
 8007934:	f8a4 1674 	strh.w	r1, [r4, #1652]	; 0x674
 8007938:	f240 8361 	bls.w	8007ffe <_ZN16TransferViewBaseC1Ev+0x159a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800793c:	4b9c      	ldr	r3, [pc, #624]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	2b00      	cmp	r3, #0
 8007942:	f000 8370 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007946:	4a9b      	ldr	r2, [pc, #620]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 8007948:	7b18      	ldrb	r0, [r3, #12]
 800794a:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 800794c:	4b9a      	ldr	r3, [pc, #616]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 800794e:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007952:	6818      	ldr	r0, [r3, #0]
 8007954:	f7ff f818 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007958:	f8da 3000 	ldr.w	r3, [sl]
 800795c:	4601      	mov	r1, r0
 800795e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007960:	9111      	str	r1, [sp, #68]	; 0x44
 8007962:	4650      	mov	r0, sl
 8007964:	4798      	blx	r3
 8007966:	f8da 3000 	ldr.w	r3, [sl]
 800796a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800796c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800796e:	4606      	mov	r6, r0
 8007970:	4650      	mov	r0, sl
 8007972:	4798      	blx	r3
 8007974:	f8da 3000 	ldr.w	r3, [sl]
 8007978:	9911      	ldr	r1, [sp, #68]	; 0x44
 800797a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800797c:	fb16 f600 	smulbb	r6, r6, r0
 8007980:	4650      	mov	r0, sl
 8007982:	4798      	blx	r3
 8007984:	b2f6      	uxtb	r6, r6
 8007986:	4430      	add	r0, r6
 8007988:	f884 0681 	strb.w	r0, [r4, #1665]	; 0x681
        color = col;
 800798c:	f04f 33ff 	mov.w	r3, #4294967295
 8007990:	4a8a      	ldr	r2, [pc, #552]	; (8007bbc <_ZN16TransferViewBaseC1Ev+0x1158>)
 8007992:	f8c4 3678 	str.w	r3, [r4, #1656]	; 0x678
 8007996:	200a      	movs	r0, #10
        colorPressed = col;
 8007998:	f8c4 367c 	str.w	r3, [r4, #1660]	; 0x67c
 800799c:	f8c4 2688 	str.w	r2, [r4, #1672]	; 0x688
 80079a0:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 80079a2:	a917      	add	r1, sp, #92	; 0x5c
 80079a4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80079a8:	aa18      	add	r2, sp, #96	; 0x60
 80079aa:	ee1f 0a90 	vmov	r0, s31
 80079ae:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 80079b2:	f00b fc34 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 80079b6:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 80079ba:	2105      	movs	r1, #5
 80079bc:	428b      	cmp	r3, r1
 80079be:	f8a4 16bc 	strh.w	r1, [r4, #1724]	; 0x6bc
 80079c2:	f240 8320 	bls.w	8008006 <_ZN16TransferViewBaseC1Ev+0x15a2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80079c6:	4b7a      	ldr	r3, [pc, #488]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	2b00      	cmp	r3, #0
 80079cc:	f000 832b 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 80079d0:	4a78      	ldr	r2, [pc, #480]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 80079d2:	7a98      	ldrb	r0, [r3, #10]
 80079d4:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 80079d6:	4b78      	ldr	r3, [pc, #480]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 80079d8:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 80079dc:	6818      	ldr	r0, [r3, #0]
 80079de:	f7fe ffd3 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80079e2:	f8da 3000 	ldr.w	r3, [sl]
 80079e6:	4601      	mov	r1, r0
 80079e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80079ea:	9111      	str	r1, [sp, #68]	; 0x44
 80079ec:	4650      	mov	r0, sl
 80079ee:	4798      	blx	r3
 80079f0:	f8da 3000 	ldr.w	r3, [sl]
 80079f4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80079f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079f8:	4606      	mov	r6, r0
 80079fa:	4650      	mov	r0, sl
 80079fc:	4798      	blx	r3
 80079fe:	f8da 3000 	ldr.w	r3, [sl]
 8007a02:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007a04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a06:	fb16 f600 	smulbb	r6, r6, r0
 8007a0a:	4650      	mov	r0, sl
 8007a0c:	4798      	blx	r3
 8007a0e:	b2f6      	uxtb	r6, r6
 8007a10:	4430      	add	r0, r6
 8007a12:	f884 06c9 	strb.w	r0, [r4, #1737]	; 0x6c9
        color = col;
 8007a16:	f04f 33ff 	mov.w	r3, #4294967295
 8007a1a:	4a69      	ldr	r2, [pc, #420]	; (8007bc0 <_ZN16TransferViewBaseC1Ev+0x115c>)
 8007a1c:	f8c4 36c0 	str.w	r3, [r4, #1728]	; 0x6c0
 8007a20:	200a      	movs	r0, #10
        colorPressed = col;
 8007a22:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
 8007a26:	f8c4 26d0 	str.w	r2, [r4, #1744]	; 0x6d0
 8007a2a:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8007a2c:	a917      	add	r1, sp, #92	; 0x5c
 8007a2e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007a32:	aa18      	add	r2, sp, #96	; 0x60
 8007a34:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8007a36:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007a3a:	f00b fbf0 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007a3e:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007a42:	2104      	movs	r1, #4
 8007a44:	428b      	cmp	r3, r1
 8007a46:	f8a4 1704 	strh.w	r1, [r4, #1796]	; 0x704
 8007a4a:	f240 82e0 	bls.w	800800e <_ZN16TransferViewBaseC1Ev+0x15aa>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a4e:	4b58      	ldr	r3, [pc, #352]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	f000 82e7 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007a58:	4a56      	ldr	r2, [pc, #344]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 8007a5a:	7a18      	ldrb	r0, [r3, #8]
 8007a5c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007a5e:	4b56      	ldr	r3, [pc, #344]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007a60:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007a64:	6818      	ldr	r0, [r3, #0]
 8007a66:	f7fe ff8f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007a6a:	f8da 3000 	ldr.w	r3, [sl]
 8007a6e:	4601      	mov	r1, r0
 8007a70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a72:	9111      	str	r1, [sp, #68]	; 0x44
 8007a74:	4650      	mov	r0, sl
 8007a76:	4798      	blx	r3
 8007a78:	f8da 3000 	ldr.w	r3, [sl]
 8007a7c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007a7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a80:	4606      	mov	r6, r0
 8007a82:	4650      	mov	r0, sl
 8007a84:	4798      	blx	r3
 8007a86:	f8da 3000 	ldr.w	r3, [sl]
 8007a8a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a8e:	fb16 f600 	smulbb	r6, r6, r0
 8007a92:	4650      	mov	r0, sl
 8007a94:	4798      	blx	r3
 8007a96:	b2f6      	uxtb	r6, r6
 8007a98:	4430      	add	r0, r6
 8007a9a:	f884 0711 	strb.w	r0, [r4, #1809]	; 0x711
        color = col;
 8007a9e:	f04f 33ff 	mov.w	r3, #4294967295
 8007aa2:	4a48      	ldr	r2, [pc, #288]	; (8007bc4 <_ZN16TransferViewBaseC1Ev+0x1160>)
 8007aa4:	f8c4 3708 	str.w	r3, [r4, #1800]	; 0x708
 8007aa8:	200a      	movs	r0, #10
        colorPressed = col;
 8007aaa:	f8c4 370c 	str.w	r3, [r4, #1804]	; 0x70c
 8007aae:	f8c4 2718 	str.w	r2, [r4, #1816]	; 0x718
 8007ab2:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8007ab4:	a917      	add	r1, sp, #92	; 0x5c
 8007ab6:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007aba:	aa18      	add	r2, sp, #96	; 0x60
 8007abc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007abe:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007ac2:	f00b fbac 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007ac6:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007aca:	2103      	movs	r1, #3
 8007acc:	428b      	cmp	r3, r1
 8007ace:	f8a4 174c 	strh.w	r1, [r4, #1868]	; 0x74c
 8007ad2:	f240 82a0 	bls.w	8008016 <_ZN16TransferViewBaseC1Ev+0x15b2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007ad6:	4b36      	ldr	r3, [pc, #216]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	2b00      	cmp	r3, #0
 8007adc:	f000 82a3 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007ae0:	4a34      	ldr	r2, [pc, #208]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 8007ae2:	7998      	ldrb	r0, [r3, #6]
 8007ae4:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007ae6:	4b34      	ldr	r3, [pc, #208]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007ae8:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007aec:	6818      	ldr	r0, [r3, #0]
 8007aee:	f7fe ff4b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007af2:	f8da 3000 	ldr.w	r3, [sl]
 8007af6:	4601      	mov	r1, r0
 8007af8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007afa:	9111      	str	r1, [sp, #68]	; 0x44
 8007afc:	4650      	mov	r0, sl
 8007afe:	4798      	blx	r3
 8007b00:	f8da 3000 	ldr.w	r3, [sl]
 8007b04:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007b06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b08:	4606      	mov	r6, r0
 8007b0a:	4650      	mov	r0, sl
 8007b0c:	4798      	blx	r3
 8007b0e:	f8da 3000 	ldr.w	r3, [sl]
 8007b12:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007b14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b16:	fb16 f600 	smulbb	r6, r6, r0
 8007b1a:	4650      	mov	r0, sl
 8007b1c:	4798      	blx	r3
 8007b1e:	b2f6      	uxtb	r6, r6
 8007b20:	4430      	add	r0, r6
 8007b22:	f884 0759 	strb.w	r0, [r4, #1881]	; 0x759
        color = col;
 8007b26:	f04f 33ff 	mov.w	r3, #4294967295
 8007b2a:	4a27      	ldr	r2, [pc, #156]	; (8007bc8 <_ZN16TransferViewBaseC1Ev+0x1164>)
 8007b2c:	f8c4 3750 	str.w	r3, [r4, #1872]	; 0x750
 8007b30:	200a      	movs	r0, #10
        colorPressed = col;
 8007b32:	f8c4 3754 	str.w	r3, [r4, #1876]	; 0x754
 8007b36:	f8c4 2760 	str.w	r2, [r4, #1888]	; 0x760
 8007b3a:	230b      	movs	r3, #11
    buttonWithLabel1_1_1_1_1_1_1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ORANGE_ID), touchgfx::Bitmap(BITMAP_ORANGE_PRESSED_ID));
 8007b3c:	a917      	add	r1, sp, #92	; 0x5c
 8007b3e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8007b42:	aa18      	add	r2, sp, #96	; 0x60
 8007b44:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007b46:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007b4a:	f00b fb68 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
 8007b4e:	f8b9 3000 	ldrh.w	r3, [r9]
class TypedText
 8007b52:	2102      	movs	r1, #2
 8007b54:	428b      	cmp	r3, r1
 8007b56:	f8a4 1794 	strh.w	r1, [r4, #1940]	; 0x794
 8007b5a:	f240 8260 	bls.w	800801e <_ZN16TransferViewBaseC1Ev+0x15ba>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b5e:	4b14      	ldr	r3, [pc, #80]	; (8007bb0 <_ZN16TransferViewBaseC1Ev+0x114c>)
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	2b00      	cmp	r3, #0
 8007b64:	f000 825f 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007b68:	4a12      	ldr	r2, [pc, #72]	; (8007bb4 <_ZN16TransferViewBaseC1Ev+0x1150>)
 8007b6a:	7918      	ldrb	r0, [r3, #4]
 8007b6c:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007b6e:	4b12      	ldr	r3, [pc, #72]	; (8007bb8 <_ZN16TransferViewBaseC1Ev+0x1154>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007b70:	f852 9020 	ldr.w	r9, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007b74:	6818      	ldr	r0, [r3, #0]
 8007b76:	f7fe ff07 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007b7a:	f8d9 3000 	ldr.w	r3, [r9]
 8007b7e:	4601      	mov	r1, r0
 8007b80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b82:	9111      	str	r1, [sp, #68]	; 0x44
 8007b84:	4648      	mov	r0, r9
 8007b86:	4798      	blx	r3
 8007b88:	f8d9 3000 	ldr.w	r3, [r9]
 8007b8c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007b8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b90:	4606      	mov	r6, r0
 8007b92:	4648      	mov	r0, r9
 8007b94:	4798      	blx	r3
 8007b96:	f8d9 3000 	ldr.w	r3, [r9]
 8007b9a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007b9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b9e:	fb16 f600 	smulbb	r6, r6, r0
 8007ba2:	4648      	mov	r0, r9
 8007ba4:	4798      	blx	r3
 8007ba6:	b2f6      	uxtb	r6, r6
 8007ba8:	4430      	add	r0, r6
 8007baa:	f884 07a1 	strb.w	r0, [r4, #1953]	; 0x7a1
 8007bae:	e00d      	b.n	8007bcc <_ZN16TransferViewBaseC1Ev+0x1168>
 8007bb0:	20002cdc 	.word	0x20002cdc
 8007bb4:	20002ce4 	.word	0x20002ce4
 8007bb8:	20002ce8 	.word	0x20002ce8
 8007bbc:	00300110 	.word	0x00300110
 8007bc0:	00600110 	.word	0x00600110
 8007bc4:	00900110 	.word	0x00900110
 8007bc8:	00c00110 	.word	0x00c00110
        color = col;
 8007bcc:	f04f 33ff 	mov.w	r3, #4294967295
 8007bd0:	4adf      	ldr	r2, [pc, #892]	; (8007f50 <_ZN16TransferViewBaseC1Ev+0x14ec>)
 8007bd2:	f8c4 3798 	str.w	r3, [r4, #1944]	; 0x798
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8007bd6:	ee18 0a10 	vmov	r0, s16
        colorPressed = col;
 8007bda:	f8c4 379c 	str.w	r3, [r4, #1948]	; 0x79c
 8007bde:	f8c4 27a8 	str.w	r2, [r4, #1960]	; 0x7a8
 8007be2:	2304      	movs	r3, #4
 8007be4:	aa18      	add	r2, sp, #96	; 0x60
 8007be6:	a917      	add	r1, sp, #92	; 0x5c
 8007be8:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8007bec:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007bf0:	f00b fb15 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007bf4:	4bd7      	ldr	r3, [pc, #860]	; (8007f54 <_ZN16TransferViewBaseC1Ev+0x14f0>)
 8007bf6:	f8c4 37dc 	str.w	r3, [r4, #2012]	; 0x7dc
    toggleButton1_1.setXY(14, 152);
 8007bfa:	f504 6afb 	add.w	sl, r4, #2008	; 0x7d8
 8007bfe:	230d      	movs	r3, #13
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8007c00:	aa17      	add	r2, sp, #92	; 0x5c
 8007c02:	4611      	mov	r1, r2
 8007c04:	4650      	mov	r0, sl
 8007c06:	aa18      	add	r2, sp, #96	; 0x60
        originalPressed = bitmapPressed;
 8007c08:	f8a4 380c 	strh.w	r3, [r4, #2060]	; 0x80c
 8007c0c:	260e      	movs	r6, #14
 8007c0e:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007c12:	f8ad 605c 	strh.w	r6, [sp, #92]	; 0x5c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8007c16:	f00b fb02 	bl	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007c1a:	4bcf      	ldr	r3, [pc, #828]	; (8007f58 <_ZN16TransferViewBaseC1Ev+0x14f4>)
 8007c1c:	f8c4 3814 	str.w	r3, [r4, #2068]	; 0x814
        linespace = space;
 8007c20:	2600      	movs	r6, #0
        boundingArea = calculateBoundingArea();
 8007c22:	f10d 0948 	add.w	r9, sp, #72	; 0x48
        color = newColor;
 8007c26:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007c2a:	f8c4 3840 	str.w	r3, [r4, #2112]	; 0x840
        linespace = space;
 8007c2e:	f8a4 6844 	strh.w	r6, [r4, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 8007c32:	4648      	mov	r0, r9
 8007c34:	4641      	mov	r1, r8
 8007c36:	f00b f815 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c3a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007c3e:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QEKA));
 8007c42:	ab18      	add	r3, sp, #96	; 0x60
 8007c44:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 8007c48:	2201      	movs	r2, #1
 8007c4a:	4619      	mov	r1, r3
 8007c4c:	4640      	mov	r0, r8
 8007c4e:	4bc3      	ldr	r3, [pc, #780]	; (8007f5c <_ZN16TransferViewBaseC1Ev+0x14f8>)
 8007c50:	9318      	str	r3, [sp, #96]	; 0x60
 8007c52:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8007c56:	f00b fa87 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c5a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    textureMapper1.setBitmap(touchgfx::Bitmap(BITMAP_POPUP_ID));
 8007c5e:	f10d 0c60 	add.w	ip, sp, #96	; 0x60
 8007c62:	f8c4 1880 	str.w	r1, [r4, #2176]	; 0x880
        alpha = newAlpha;
 8007c66:	226e      	movs	r2, #110	; 0x6e
        rect.width = width;
 8007c68:	49bd      	ldr	r1, [pc, #756]	; (8007f60 <_ZN16TransferViewBaseC1Ev+0x14fc>)
        rect.x = x;
 8007c6a:	f8c4 685c 	str.w	r6, [r4, #2140]	; 0x85c
 8007c6e:	f8c4 6888 	str.w	r6, [r4, #2184]	; 0x888
        rect.width = width;
 8007c72:	f8c4 1860 	str.w	r1, [r4, #2144]	; 0x860
 8007c76:	f884 287e 	strb.w	r2, [r4, #2174]	; 0x87e
 8007c7a:	4661      	mov	r1, ip
 8007c7c:	220c      	movs	r2, #12
 8007c7e:	4628      	mov	r0, r5
 8007c80:	f8ad 2060 	strh.w	r2, [sp, #96]	; 0x60
 8007c84:	f00a fc0e 	bl	80124a4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
        xBitmapPosition = x;
 8007c88:	4ab6      	ldr	r2, [pc, #728]	; (8007f64 <_ZN16TransferViewBaseC1Ev+0x1500>)
 8007c8a:	49b5      	ldr	r1, [pc, #724]	; (8007f60 <_ZN16TransferViewBaseC1Ev+0x14fc>)
 8007c8c:	f8c4 188c 	str.w	r1, [r4, #2188]	; 0x88c
        cameraDistance = MAX(d, MINIMAL_CAMERA_DISTANCE);
 8007c90:	eddf 8ab5 	vldr	s17, [pc, #724]	; 8007f68 <_ZN16TransferViewBaseC1Ev+0x1504>
        xBitmapPosition = x;
 8007c94:	62ea      	str	r2, [r5, #44]	; 0x2c
        yBitmapPosition = y;
 8007c96:	632a      	str	r2, [r5, #48]	; 0x30
        applyTransformation();
 8007c98:	4628      	mov	r0, r5
 8007c9a:	f00a faad 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        yOrigo = y;
 8007c9e:	ed9f 9ab3 	vldr	s18, [pc, #716]	; 8007f6c <_ZN16TransferViewBaseC1Ev+0x1508>
    textureMapper1.setScale(1.1f);
 8007ca2:	ed9f 0ab3 	vldr	s0, [pc, #716]	; 8007f70 <_ZN16TransferViewBaseC1Ev+0x150c>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
 8007ca6:	eef0 9a48 	vmov.f32	s19, s16
    textureMapper1.setScale(1.1f);
 8007caa:	4628      	mov	r0, r5
        xOrigo = x;
 8007cac:	ed9f 8ab1 	vldr	s16, [pc, #708]	; 8007f74 <_ZN16TransferViewBaseC1Ev+0x1510>
 8007cb0:	f00a fc09 	bl	80124c6 <_ZN8touchgfx13TextureMapper8setScaleEf>
        applyTransformation();
 8007cb4:	4628      	mov	r0, r5
        cameraDistance = MAX(d, MINIMAL_CAMERA_DISTANCE);
 8007cb6:	edc5 8a16 	vstr	s17, [r5, #88]	; 0x58
        applyTransformation();
 8007cba:	f00a fa9d 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        applyTransformation();
 8007cbe:	4628      	mov	r0, r5
        zOrigo = z;
 8007cc0:	edc5 8a13 	vstr	s17, [r5, #76]	; 0x4c
        xOrigo = x;
 8007cc4:	ed85 8a11 	vstr	s16, [r5, #68]	; 0x44
        yOrigo = y;
 8007cc8:	ed85 9a12 	vstr	s18, [r5, #72]	; 0x48
        applyTransformation();
 8007ccc:	f00a fa94 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
        applyTransformation();
 8007cd0:	4628      	mov	r0, r5
        xCamera = x;
 8007cd2:	ed85 8a14 	vstr	s16, [r5, #80]	; 0x50
        yCamera = y;
 8007cd6:	ed85 9a15 	vstr	s18, [r5, #84]	; 0x54
        applyTransformation();
 8007cda:	f00a fa8d 	bl	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
    textureMapper1.setAngles(0.0f, 0.0f, 0.0f);
 8007cde:	ed9f 1aa6 	vldr	s2, [pc, #664]	; 8007f78 <_ZN16TransferViewBaseC1Ev+0x1514>
 8007ce2:	4628      	mov	r0, r5
 8007ce4:	eef0 0a41 	vmov.f32	s1, s2
 8007ce8:	eeb0 0a41 	vmov.f32	s0, s2
 8007cec:	f00a fbe3 	bl	80124b6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>
        rect.x = x;
 8007cf0:	4aa2      	ldr	r2, [pc, #648]	; (8007f7c <_ZN16TransferViewBaseC1Ev+0x1518>)
        currentRenderingAlgorithm = algorithm;
 8007cf2:	f884 68ad 	strb.w	r6, [r4, #2221]	; 0x8ad
        color = newColor;
 8007cf6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8007cfa:	f8c4 19a0 	str.w	r1, [r4, #2464]	; 0x9a0
        linespace = space;
 8007cfe:	f8a4 69a4 	strh.w	r6, [r4, #2468]	; 0x9a4
        boundingArea = calculateBoundingArea();
 8007d02:	4648      	mov	r0, r9
 8007d04:	f8c4 2974 	str.w	r2, [r4, #2420]	; 0x974
 8007d08:	4659      	mov	r1, fp
 8007d0a:	f00a ffab 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d0e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007d12:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8007d16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VVTZ));
 8007d1a:	aa18      	add	r2, sp, #96	; 0x60
 8007d1c:	4b8f      	ldr	r3, [pc, #572]	; (8007f5c <_ZN16TransferViewBaseC1Ev+0x14f8>)
 8007d1e:	f8ad 6064 	strh.w	r6, [sp, #100]	; 0x64
 8007d22:	4611      	mov	r1, r2
 8007d24:	4658      	mov	r0, fp
 8007d26:	9318      	str	r3, [sp, #96]	; 0x60
 8007d28:	f00b fa1e 	bl	8013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d2c:	4b94      	ldr	r3, [pc, #592]	; (8007f80 <_ZN16TransferViewBaseC1Ev+0x151c>)
 8007d2e:	f8c4 39bc 	str.w	r3, [r4, #2492]	; 0x9bc
    boxProgress1.setProgressIndicatorPosition(2, 2, 180, 16);
 8007d32:	2202      	movs	r2, #2
 8007d34:	2310      	movs	r3, #16
 8007d36:	9300      	str	r3, [sp, #0]
 8007d38:	4611      	mov	r1, r2
 8007d3a:	4638      	mov	r0, r7
 8007d3c:	23b4      	movs	r3, #180	; 0xb4
 8007d3e:	f008 f869 	bl	800fe14 <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    boxProgress1.setRange(0, 100);
 8007d42:	2264      	movs	r2, #100	; 0x64
 8007d44:	4633      	mov	r3, r6
 8007d46:	9600      	str	r6, [sp, #0]
 8007d48:	4631      	mov	r1, r6
 8007d4a:	4638      	mov	r0, r7
 8007d4c:	f008 f980 	bl	8010050 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8007d50:	4631      	mov	r1, r6
 8007d52:	4638      	mov	r0, r7
 8007d54:	f008 f95b 	bl	801000e <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8007d58:	ab18      	add	r3, sp, #96	; 0x60
 8007d5a:	4619      	mov	r1, r3
 8007d5c:	4638      	mov	r0, r7
 8007d5e:	2306      	movs	r3, #6
 8007d60:	f8ad 3060 	strh.w	r3, [sp, #96]	; 0x60
 8007d64:	f008 fac4 	bl	80102f0 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 151, 255));
 8007d68:	4638      	mov	r0, r7
 8007d6a:	4986      	ldr	r1, [pc, #536]	; (8007f84 <_ZN16TransferViewBaseC1Ev+0x1520>)
 8007d6c:	f008 f814 	bl	800fd98 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    boxProgress1.setValue(0);
 8007d70:	4631      	mov	r1, r6
 8007d72:	4638      	mov	r0, r7
 8007d74:	1d26      	adds	r6, r4, #4
 8007d76:	f008 f865 	bl	800fe44 <_ZN8touchgfx11BoxProgress8setValueEi>
 8007d7a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007d7c:	4630      	mov	r0, r6
 8007d7e:	f008 fb25 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d82:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007d84:	4630      	mov	r0, r6
 8007d86:	f008 fb21 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d8a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8007d8c:	4630      	mov	r0, r6
 8007d8e:	f008 fb1d 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d92:	ee1a 1a10 	vmov	r1, s20
 8007d96:	4630      	mov	r0, r6
 8007d98:	f008 fb18 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d9c:	9902      	ldr	r1, [sp, #8]
 8007d9e:	4630      	mov	r0, r6
 8007da0:	f008 fb14 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007da4:	ee1a 1a90 	vmov	r1, s21
 8007da8:	4630      	mov	r0, r6
 8007daa:	f008 fb0f 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dae:	9903      	ldr	r1, [sp, #12]
 8007db0:	4630      	mov	r0, r6
 8007db2:	f008 fb0b 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007db6:	ee1b 1a10 	vmov	r1, s22
 8007dba:	4630      	mov	r0, r6
 8007dbc:	f008 fb06 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dc0:	9904      	ldr	r1, [sp, #16]
 8007dc2:	4630      	mov	r0, r6
 8007dc4:	f008 fb02 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dc8:	ee1b 1a90 	vmov	r1, s23
 8007dcc:	4630      	mov	r0, r6
 8007dce:	f008 fafd 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dd2:	9905      	ldr	r1, [sp, #20]
 8007dd4:	4630      	mov	r0, r6
 8007dd6:	f008 faf9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dda:	ee1c 1a10 	vmov	r1, s24
 8007dde:	4630      	mov	r0, r6
 8007de0:	f008 faf4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007de4:	9906      	ldr	r1, [sp, #24]
 8007de6:	4630      	mov	r0, r6
 8007de8:	f008 faf0 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dec:	ee1c 1a90 	vmov	r1, s25
 8007df0:	4630      	mov	r0, r6
 8007df2:	f008 faeb 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007df6:	9907      	ldr	r1, [sp, #28]
 8007df8:	4630      	mov	r0, r6
 8007dfa:	f008 fae7 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007dfe:	ee1d 1a10 	vmov	r1, s26
 8007e02:	4630      	mov	r0, r6
 8007e04:	f008 fae2 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e08:	9908      	ldr	r1, [sp, #32]
 8007e0a:	4630      	mov	r0, r6
 8007e0c:	f008 fade 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e10:	ee1d 1a90 	vmov	r1, s27
 8007e14:	4630      	mov	r0, r6
 8007e16:	f008 fad9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e1a:	ee1e 1a10 	vmov	r1, s28
 8007e1e:	4630      	mov	r0, r6
 8007e20:	f008 fad4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e24:	ee1e 1a90 	vmov	r1, s29
 8007e28:	4630      	mov	r0, r6
 8007e2a:	f008 facf 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e2e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007e30:	4630      	mov	r0, r6
 8007e32:	f008 facb 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e36:	ee1f 1a10 	vmov	r1, s30
 8007e3a:	4630      	mov	r0, r6
 8007e3c:	f008 fac6 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e40:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007e42:	4630      	mov	r0, r6
 8007e44:	f008 fac2 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e48:	ee1f 1a90 	vmov	r1, s31
 8007e4c:	4630      	mov	r0, r6
 8007e4e:	f008 fabd 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e52:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007e54:	4630      	mov	r0, r6
 8007e56:	f008 fab9 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e5a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007e5c:	4630      	mov	r0, r6
 8007e5e:	f008 fab5 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e62:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007e64:	4630      	mov	r0, r6
 8007e66:	f008 fab1 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e6a:	ee19 1a90 	vmov	r1, s19
 8007e6e:	4630      	mov	r0, r6
 8007e70:	f008 faac 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e74:	4651      	mov	r1, sl
 8007e76:	4630      	mov	r0, r6
 8007e78:	f008 faa8 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e7c:	4641      	mov	r1, r8
 8007e7e:	4630      	mov	r0, r6
 8007e80:	f008 faa4 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e84:	4630      	mov	r0, r6
 8007e86:	f604 0158 	addw	r1, r4, #2136	; 0x858
 8007e8a:	f008 fa9f 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e8e:	4629      	mov	r1, r5
 8007e90:	4630      	mov	r0, r6
 8007e92:	f008 fa9b 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e96:	4659      	mov	r1, fp
 8007e98:	4630      	mov	r0, r6
 8007e9a:	f008 fa97 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e9e:	4630      	mov	r0, r6
 8007ea0:	4639      	mov	r1, r7
 8007ea2:	f008 fa93 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007ea6:	4620      	mov	r0, r4
 8007ea8:	b01b      	add	sp, #108	; 0x6c
 8007eaa:	ecbd 8b10 	vpop	{d8-d15}
 8007eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007eb2:	4b35      	ldr	r3, [pc, #212]	; (8007f88 <_ZN16TransferViewBaseC1Ev+0x1524>)
 8007eb4:	681b      	ldr	r3, [r3, #0]
 8007eb6:	2b00      	cmp	r3, #0
 8007eb8:	f000 80b5 	beq.w	8008026 <_ZN16TransferViewBaseC1Ev+0x15c2>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007ebc:	4a33      	ldr	r2, [pc, #204]	; (8007f8c <_ZN16TransferViewBaseC1Ev+0x1528>)
 8007ebe:	f893 0032 	ldrb.w	r0, [r3, #50]	; 0x32
 8007ec2:	6812      	ldr	r2, [r2, #0]
        return texts->getText(typedTextId);
 8007ec4:	4b32      	ldr	r3, [pc, #200]	; (8007f90 <_ZN16TransferViewBaseC1Ev+0x152c>)
        return fonts[typedTexts[typedTextId].fontIdx];
 8007ec6:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
        return texts->getText(typedTextId);
 8007eca:	6818      	ldr	r0, [r3, #0]
 8007ecc:	f7fe fd5c 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007ed0:	f8da 3000 	ldr.w	r3, [sl]
 8007ed4:	4601      	mov	r1, r0
 8007ed6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ed8:	9111      	str	r1, [sp, #68]	; 0x44
 8007eda:	4650      	mov	r0, sl
 8007edc:	4798      	blx	r3
 8007ede:	f8da 3000 	ldr.w	r3, [sl]
 8007ee2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007ee4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ee6:	4606      	mov	r6, r0
 8007ee8:	4650      	mov	r0, sl
 8007eea:	4798      	blx	r3
 8007eec:	f8da 3000 	ldr.w	r3, [sl]
 8007ef0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007ef2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007ef4:	fb16 f600 	smulbb	r6, r6, r0
 8007ef8:	4650      	mov	r0, sl
 8007efa:	4798      	blx	r3
 8007efc:	b2f6      	uxtb	r6, r6
 8007efe:	4430      	add	r0, r6
 8007f00:	f884 0125 	strb.w	r0, [r4, #293]	; 0x125
 8007f04:	f7ff b806 	b.w	8006f14 <_ZN16TransferViewBaseC1Ev+0x4b0>
            textHeightIncludingSpacing = 0;
 8007f08:	2300      	movs	r3, #0
 8007f0a:	f884 316d 	strb.w	r3, [r4, #365]	; 0x16d
 8007f0e:	f7ff b844 	b.w	8006f9a <_ZN16TransferViewBaseC1Ev+0x536>
 8007f12:	2300      	movs	r3, #0
 8007f14:	f884 31b5 	strb.w	r3, [r4, #437]	; 0x1b5
 8007f18:	f7ff b883 	b.w	8007022 <_ZN16TransferViewBaseC1Ev+0x5be>
 8007f1c:	2300      	movs	r3, #0
 8007f1e:	f884 31fd 	strb.w	r3, [r4, #509]	; 0x1fd
 8007f22:	f7ff b8c1 	b.w	80070a8 <_ZN16TransferViewBaseC1Ev+0x644>
 8007f26:	2300      	movs	r3, #0
 8007f28:	f884 3245 	strb.w	r3, [r4, #581]	; 0x245
 8007f2c:	f7ff b900 	b.w	8007130 <_ZN16TransferViewBaseC1Ev+0x6cc>
 8007f30:	2300      	movs	r3, #0
 8007f32:	f884 328d 	strb.w	r3, [r4, #653]	; 0x28d
 8007f36:	f7ff b93e 	b.w	80071b6 <_ZN16TransferViewBaseC1Ev+0x752>
 8007f3a:	2300      	movs	r3, #0
 8007f3c:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
 8007f40:	f7ff b993 	b.w	800726a <_ZN16TransferViewBaseC1Ev+0x806>
 8007f44:	2300      	movs	r3, #0
 8007f46:	f884 331d 	strb.w	r3, [r4, #797]	; 0x31d
 8007f4a:	f7ff b9d1 	b.w	80072f0 <_ZN16TransferViewBaseC1Ev+0x88c>
 8007f4e:	bf00      	nop
 8007f50:	00c9000d 	.word	0x00c9000d
 8007f54:	0098000e 	.word	0x0098000e
 8007f58:	007a001e 	.word	0x007a001e
 8007f5c:	08026e28 	.word	0x08026e28
 8007f60:	00f00140 	.word	0x00f00140
 8007f64:	42100000 	.word	0x42100000
 8007f68:	447a0000 	.word	0x447a0000
 8007f6c:	42f00000 	.word	0x42f00000
 8007f70:	3f8ccccd 	.word	0x3f8ccccd
 8007f74:	43200000 	.word	0x43200000
 8007f78:	00000000 	.word	0x00000000
 8007f7c:	00390073 	.word	0x00390073
 8007f80:	00780048 	.word	0x00780048
 8007f84:	ff0097ff 	.word	0xff0097ff
 8007f88:	20002cdc 	.word	0x20002cdc
 8007f8c:	20002ce4 	.word	0x20002ce4
 8007f90:	20002ce8 	.word	0x20002ce8
 8007f94:	2300      	movs	r3, #0
 8007f96:	f884 3365 	strb.w	r3, [r4, #869]	; 0x365
 8007f9a:	f7ff b9ed 	b.w	8007378 <_ZN16TransferViewBaseC1Ev+0x914>
 8007f9e:	2300      	movs	r3, #0
 8007fa0:	f884 33ad 	strb.w	r3, [r4, #941]	; 0x3ad
 8007fa4:	f7ff ba2b 	b.w	80073fe <_ZN16TransferViewBaseC1Ev+0x99a>
 8007fa8:	2300      	movs	r3, #0
 8007faa:	f884 33f5 	strb.w	r3, [r4, #1013]	; 0x3f5
 8007fae:	f7ff ba69 	b.w	8007484 <_ZN16TransferViewBaseC1Ev+0xa20>
 8007fb2:	2300      	movs	r3, #0
 8007fb4:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
 8007fb8:	f7ff baa5 	b.w	8007506 <_ZN16TransferViewBaseC1Ev+0xaa2>
 8007fbc:	2300      	movs	r3, #0
 8007fbe:	f884 3485 	strb.w	r3, [r4, #1157]	; 0x485
 8007fc2:	f7ff baf9 	b.w	80075b8 <_ZN16TransferViewBaseC1Ev+0xb54>
 8007fc6:	2300      	movs	r3, #0
 8007fc8:	f884 34cd 	strb.w	r3, [r4, #1229]	; 0x4cd
 8007fcc:	f7ff bb37 	b.w	800763e <_ZN16TransferViewBaseC1Ev+0xbda>
 8007fd0:	2300      	movs	r3, #0
 8007fd2:	f884 3515 	strb.w	r3, [r4, #1301]	; 0x515
 8007fd6:	f7ff bb76 	b.w	80076c6 <_ZN16TransferViewBaseC1Ev+0xc62>
 8007fda:	2300      	movs	r3, #0
 8007fdc:	f884 3561 	strb.w	r3, [r4, #1377]	; 0x561
 8007fe0:	f7ff bbb6 	b.w	8007750 <_ZN16TransferViewBaseC1Ev+0xcec>
 8007fe4:	2300      	movs	r3, #0
 8007fe6:	f884 35a9 	strb.w	r3, [r4, #1449]	; 0x5a9
 8007fea:	f7ff bbf6 	b.w	80077da <_ZN16TransferViewBaseC1Ev+0xd76>
 8007fee:	2300      	movs	r3, #0
 8007ff0:	f884 35f1 	strb.w	r3, [r4, #1521]	; 0x5f1
 8007ff4:	e440      	b.n	8007878 <_ZN16TransferViewBaseC1Ev+0xe14>
 8007ff6:	2300      	movs	r3, #0
 8007ff8:	f884 3639 	strb.w	r3, [r4, #1593]	; 0x639
 8007ffc:	e481      	b.n	8007902 <_ZN16TransferViewBaseC1Ev+0xe9e>
 8007ffe:	2300      	movs	r3, #0
 8008000:	f884 3681 	strb.w	r3, [r4, #1665]	; 0x681
 8008004:	e4c2      	b.n	800798c <_ZN16TransferViewBaseC1Ev+0xf28>
 8008006:	2300      	movs	r3, #0
 8008008:	f884 36c9 	strb.w	r3, [r4, #1737]	; 0x6c9
 800800c:	e503      	b.n	8007a16 <_ZN16TransferViewBaseC1Ev+0xfb2>
 800800e:	2300      	movs	r3, #0
 8008010:	f884 3711 	strb.w	r3, [r4, #1809]	; 0x711
 8008014:	e543      	b.n	8007a9e <_ZN16TransferViewBaseC1Ev+0x103a>
 8008016:	2300      	movs	r3, #0
 8008018:	f884 3759 	strb.w	r3, [r4, #1881]	; 0x759
 800801c:	e583      	b.n	8007b26 <_ZN16TransferViewBaseC1Ev+0x10c2>
 800801e:	2300      	movs	r3, #0
 8008020:	f884 37a1 	strb.w	r3, [r4, #1953]	; 0x7a1
 8008024:	e5d2      	b.n	8007bcc <_ZN16TransferViewBaseC1Ev+0x1168>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008026:	4b03      	ldr	r3, [pc, #12]	; (8008034 <_ZN16TransferViewBaseC1Ev+0x15d0>)
 8008028:	4a03      	ldr	r2, [pc, #12]	; (8008038 <_ZN16TransferViewBaseC1Ev+0x15d4>)
 800802a:	4804      	ldr	r0, [pc, #16]	; (800803c <_ZN16TransferViewBaseC1Ev+0x15d8>)
 800802c:	216c      	movs	r1, #108	; 0x6c
 800802e:	f01c ff05 	bl	8024e3c <__assert_func>
 8008032:	bf00      	nop
 8008034:	08027710 	.word	0x08027710
 8008038:	08027754 	.word	0x08027754
 800803c:	08027790 	.word	0x08027790

08008040 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008040:	2055      	movs	r0, #85	; 0x55
 8008042:	4770      	bx	lr

08008044 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008044:	4800      	ldr	r0, [pc, #0]	; (8008048 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008046:	4770      	bx	lr
 8008048:	20002ba8 	.word	0x20002ba8

0800804c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_tazugane_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800804c:	b510      	push	{r4, lr}
    &(getFont_tazugane_40_4bpp()),
 800804e:	f7fe fb99 	bl	8006784 <_Z24getFont_tazugane_40_4bppv>
};
 8008052:	4c06      	ldr	r4, [pc, #24]	; (800806c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008054:	6020      	str	r0, [r4, #0]
    &(getFont_tazugane_35_4bpp()),
 8008056:	f7fe fb57 	bl	8006708 <_Z24getFont_tazugane_35_4bppv>
};
 800805a:	6060      	str	r0, [r4, #4]
    &(getFont_tazugane_11_1bpp()),
 800805c:	f7fe fad8 	bl	8006610 <_Z24getFont_tazugane_11_1bppv>
};
 8008060:	60a0      	str	r0, [r4, #8]
    &(getFont_tazugane_15_4bpp())
 8008062:	f7fe fb13 	bl	800668c <_Z24getFont_tazugane_15_4bppv>
};
 8008066:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008068:	bd10      	pop	{r4, pc}
 800806a:	bf00      	nop
 800806c:	20002ba8 	.word	0x20002ba8

08008070 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008070:	4770      	bx	lr
 8008072:	bf00      	nop

08008074 <_ZN19FrontendApplicationD0Ev>:
 8008074:	b510      	push	{r4, lr}
 8008076:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800807a:	4604      	mov	r4, r0
 800807c:	f01c f8bf 	bl	80241fe <_ZdlPvj>
 8008080:	4620      	mov	r0, r4
 8008082:	bd10      	pop	{r4, pc}

08008084 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008084:	b510      	push	{r4, lr}
 8008086:	4604      	mov	r4, r0
    {
        model.tick();
 8008088:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800808c:	f000 fa46 	bl	800851c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008090:	4620      	mov	r0, r4
    }
 8008092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008096:	f00c bf6b 	b.w	8014f70 <_ZN8touchgfx11Application15handleTickEventEv>
 800809a:	bf00      	nop

0800809c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800809c:	b510      	push	{r4, lr}
 800809e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80080a0:	f7fa fa4a 	bl	8002538 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80080a4:	4b01      	ldr	r3, [pc, #4]	; (80080ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80080a6:	6023      	str	r3, [r4, #0]
{

}
 80080a8:	4620      	mov	r0, r4
 80080aa:	bd10      	pop	{r4, pc}
 80080ac:	08027cc8 	.word	0x08027cc8

080080b0 <_ZN13LogoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~LogoPresenter() {};
 80080b0:	4770      	bx	lr
 80080b2:	bf00      	nop

080080b4 <_ZThn4_N13LogoPresenterD1Ev>:
 80080b4:	3804      	subs	r0, #4
 80080b6:	4770      	bx	lr

080080b8 <_ZN13LogoPresenter10deactivateEv>:
}

void LogoPresenter::activate()
{

}
 80080b8:	4770      	bx	lr
 80080ba:	bf00      	nop

080080bc <_ZN13LogoPresenterD0Ev>:
 80080bc:	b510      	push	{r4, lr}
 80080be:	2110      	movs	r1, #16
 80080c0:	4604      	mov	r4, r0
 80080c2:	f01c f89c 	bl	80241fe <_ZdlPvj>
 80080c6:	4620      	mov	r0, r4
 80080c8:	bd10      	pop	{r4, pc}
 80080ca:	bf00      	nop

080080cc <_ZThn4_N13LogoPresenterD0Ev>:
 80080cc:	b500      	push	{lr}
 80080ce:	b083      	sub	sp, #12
 80080d0:	3804      	subs	r0, #4
 80080d2:	2110      	movs	r1, #16
 80080d4:	9001      	str	r0, [sp, #4]
 80080d6:	f01c f892 	bl	80241fe <_ZdlPvj>
 80080da:	9801      	ldr	r0, [sp, #4]
 80080dc:	b003      	add	sp, #12
 80080de:	f85d fb04 	ldr.w	pc, [sp], #4
 80080e2:	bf00      	nop

080080e4 <_ZN13LogoPresenterC1ER8LogoView>:
LogoPresenter::LogoPresenter(LogoView& v)
 80080e4:	b430      	push	{r4, r5}
    : view(v)
 80080e6:	4a05      	ldr	r2, [pc, #20]	; (80080fc <_ZN13LogoPresenterC1ER8LogoView+0x18>)
    ModelListener() : model(0) {}
 80080e8:	2500      	movs	r5, #0
 80080ea:	f102 0408 	add.w	r4, r2, #8
 80080ee:	3220      	adds	r2, #32
 80080f0:	e9c0 5102 	strd	r5, r1, [r0, #8]
 80080f4:	e9c0 4200 	strd	r4, r2, [r0]
}
 80080f8:	bc30      	pop	{r4, r5}
 80080fa:	4770      	bx	lr
 80080fc:	08027d0c 	.word	0x08027d0c

08008100 <_ZN8LogoViewD1Ev>:

class LogoView : public LogoViewBase
{
public:
    LogoView();
    virtual ~LogoView() {}
 8008100:	4770      	bx	lr
 8008102:	bf00      	nop

08008104 <_ZN8LogoView14tearDownScreenEv>:
}

void LogoView::tearDownScreen()
{
    LogoViewBase::tearDownScreen();
}
 8008104:	4770      	bx	lr
 8008106:	bf00      	nop

08008108 <_ZN8LogoView11setupScreenEv>:
    LogoViewBase::setupScreen();
 8008108:	f7fa bf74 	b.w	8002ff4 <_ZN12LogoViewBase11setupScreenEv>

0800810c <_ZN8LogoViewD0Ev>:
 800810c:	b510      	push	{r4, lr}
 800810e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8008112:	4604      	mov	r4, r0
 8008114:	f01c f873 	bl	80241fe <_ZdlPvj>
 8008118:	4620      	mov	r0, r4
 800811a:	bd10      	pop	{r4, pc}

0800811c <_ZN8LogoViewC1Ev>:
LogoView::LogoView()
 800811c:	b510      	push	{r4, lr}
 800811e:	4604      	mov	r4, r0
 8008120:	f7fa ff86 	bl	8003030 <_ZN12LogoViewBaseC1Ev>
 8008124:	4b01      	ldr	r3, [pc, #4]	; (800812c <_ZN8LogoViewC1Ev+0x10>)
 8008126:	6023      	str	r3, [r4, #0]
}
 8008128:	4620      	mov	r0, r4
 800812a:	bd10      	pop	{r4, pc}
 800812c:	08027d3c 	.word	0x08027d3c

08008130 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8008130:	4770      	bx	lr
 8008132:	bf00      	nop

08008134 <_ZThn4_N13MainPresenterD1Ev>:
 8008134:	3804      	subs	r0, #4
 8008136:	4770      	bx	lr

08008138 <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8008138:	4770      	bx	lr
 800813a:	bf00      	nop

0800813c <_ZN13MainPresenterD0Ev>:
 800813c:	b510      	push	{r4, lr}
 800813e:	2110      	movs	r1, #16
 8008140:	4604      	mov	r4, r0
 8008142:	f01c f85c 	bl	80241fe <_ZdlPvj>
 8008146:	4620      	mov	r0, r4
 8008148:	bd10      	pop	{r4, pc}
 800814a:	bf00      	nop

0800814c <_ZThn4_N13MainPresenterD0Ev>:
 800814c:	b500      	push	{lr}
 800814e:	b083      	sub	sp, #12
 8008150:	3804      	subs	r0, #4
 8008152:	2110      	movs	r1, #16
 8008154:	9001      	str	r0, [sp, #4]
 8008156:	f01c f852 	bl	80241fe <_ZdlPvj>
 800815a:	9801      	ldr	r0, [sp, #4]
 800815c:	b003      	add	sp, #12
 800815e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008162:	bf00      	nop

08008164 <_ZN13MainPresenterC1ER8MainView>:
MainPresenter::MainPresenter(MainView& v)
 8008164:	b430      	push	{r4, r5}
    : view(v)
 8008166:	4a05      	ldr	r2, [pc, #20]	; (800817c <_ZN13MainPresenterC1ER8MainView+0x18>)
 8008168:	2500      	movs	r5, #0
 800816a:	f102 0408 	add.w	r4, r2, #8
 800816e:	3220      	adds	r2, #32
 8008170:	e9c0 5102 	strd	r5, r1, [r0, #8]
 8008174:	e9c0 4200 	strd	r4, r2, [r0]
}
 8008178:	bc30      	pop	{r4, r5}
 800817a:	4770      	bx	lr
 800817c:	08027d68 	.word	0x08027d68

08008180 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8008180:	4770      	bx	lr
 8008182:	bf00      	nop

08008184 <_ZN8MainView11b0_callbackEv>:
    void update() override;
    void file_upload_check_callback() override;

    void b0_callback() override
    {
        data = data << 4;
 8008184:	4a02      	ldr	r2, [pc, #8]	; (8008190 <_ZN8MainView11b0_callbackEv+0xc>)
 8008186:	8813      	ldrh	r3, [r2, #0]
 8008188:	011b      	lsls	r3, r3, #4
 800818a:	8013      	strh	r3, [r2, #0]
    }
 800818c:	4770      	bx	lr
 800818e:	bf00      	nop
 8008190:	20002bfe 	.word	0x20002bfe

08008194 <_ZN8MainView11b1_callbackEv>:
    void b1_callback() override
    {
        data = (data << 4) + 1;
 8008194:	4a02      	ldr	r2, [pc, #8]	; (80081a0 <_ZN8MainView11b1_callbackEv+0xc>)
 8008196:	8813      	ldrh	r3, [r2, #0]
 8008198:	011b      	lsls	r3, r3, #4
 800819a:	3301      	adds	r3, #1
 800819c:	8013      	strh	r3, [r2, #0]
    }
 800819e:	4770      	bx	lr
 80081a0:	20002bfe 	.word	0x20002bfe

080081a4 <_ZN8MainView11b2_callbackEv>:
    void b2_callback() override
    {
        data = (data << 4) + 2;
 80081a4:	4a02      	ldr	r2, [pc, #8]	; (80081b0 <_ZN8MainView11b2_callbackEv+0xc>)
 80081a6:	8813      	ldrh	r3, [r2, #0]
 80081a8:	011b      	lsls	r3, r3, #4
 80081aa:	3302      	adds	r3, #2
 80081ac:	8013      	strh	r3, [r2, #0]
    }
 80081ae:	4770      	bx	lr
 80081b0:	20002bfe 	.word	0x20002bfe

080081b4 <_ZN8MainView11b3_callbackEv>:
    void b3_callback() override
    {
        data = (data << 4) + 3;
 80081b4:	4a02      	ldr	r2, [pc, #8]	; (80081c0 <_ZN8MainView11b3_callbackEv+0xc>)
 80081b6:	8813      	ldrh	r3, [r2, #0]
 80081b8:	011b      	lsls	r3, r3, #4
 80081ba:	3303      	adds	r3, #3
 80081bc:	8013      	strh	r3, [r2, #0]
    }
 80081be:	4770      	bx	lr
 80081c0:	20002bfe 	.word	0x20002bfe

080081c4 <_ZN8MainView11b4_callbackEv>:
    void b4_callback() override
    {
        data = (data << 4) + 4;
 80081c4:	4a02      	ldr	r2, [pc, #8]	; (80081d0 <_ZN8MainView11b4_callbackEv+0xc>)
 80081c6:	8813      	ldrh	r3, [r2, #0]
 80081c8:	011b      	lsls	r3, r3, #4
 80081ca:	3304      	adds	r3, #4
 80081cc:	8013      	strh	r3, [r2, #0]
    }
 80081ce:	4770      	bx	lr
 80081d0:	20002bfe 	.word	0x20002bfe

080081d4 <_ZN8MainView11b5_callbackEv>:
    void b5_callback() override
    {
        data = (data << 4) + 5;
 80081d4:	4a02      	ldr	r2, [pc, #8]	; (80081e0 <_ZN8MainView11b5_callbackEv+0xc>)
 80081d6:	8813      	ldrh	r3, [r2, #0]
 80081d8:	011b      	lsls	r3, r3, #4
 80081da:	3305      	adds	r3, #5
 80081dc:	8013      	strh	r3, [r2, #0]
    }
 80081de:	4770      	bx	lr
 80081e0:	20002bfe 	.word	0x20002bfe

080081e4 <_ZN8MainView11b6_callbackEv>:
    void b6_callback() override
    {
        data = (data << 4) + 6;
 80081e4:	4a02      	ldr	r2, [pc, #8]	; (80081f0 <_ZN8MainView11b6_callbackEv+0xc>)
 80081e6:	8813      	ldrh	r3, [r2, #0]
 80081e8:	011b      	lsls	r3, r3, #4
 80081ea:	3306      	adds	r3, #6
 80081ec:	8013      	strh	r3, [r2, #0]
    }
 80081ee:	4770      	bx	lr
 80081f0:	20002bfe 	.word	0x20002bfe

080081f4 <_ZN8MainView11b7_callbackEv>:
    void b7_callback() override
    {
        data = (data << 4) + 7;
 80081f4:	4a02      	ldr	r2, [pc, #8]	; (8008200 <_ZN8MainView11b7_callbackEv+0xc>)
 80081f6:	8813      	ldrh	r3, [r2, #0]
 80081f8:	011b      	lsls	r3, r3, #4
 80081fa:	3307      	adds	r3, #7
 80081fc:	8013      	strh	r3, [r2, #0]
    }
 80081fe:	4770      	bx	lr
 8008200:	20002bfe 	.word	0x20002bfe

08008204 <_ZN8MainView11b8_callbackEv>:
    void b8_callback() override
    {
        data = (data << 4) + 8;
 8008204:	4a02      	ldr	r2, [pc, #8]	; (8008210 <_ZN8MainView11b8_callbackEv+0xc>)
 8008206:	8813      	ldrh	r3, [r2, #0]
 8008208:	011b      	lsls	r3, r3, #4
 800820a:	3308      	adds	r3, #8
 800820c:	8013      	strh	r3, [r2, #0]
    }
 800820e:	4770      	bx	lr
 8008210:	20002bfe 	.word	0x20002bfe

08008214 <_ZN8MainView11b9_callbackEv>:
    void b9_callback() override
    {
        data = (data << 4) + 9;
 8008214:	4a02      	ldr	r2, [pc, #8]	; (8008220 <_ZN8MainView11b9_callbackEv+0xc>)
 8008216:	8813      	ldrh	r3, [r2, #0]
 8008218:	011b      	lsls	r3, r3, #4
 800821a:	3309      	adds	r3, #9
 800821c:	8013      	strh	r3, [r2, #0]
    }
 800821e:	4770      	bx	lr
 8008220:	20002bfe 	.word	0x20002bfe

08008224 <_ZN8MainView11ba_callbackEv>:
    void ba_callback() override
    {
        data = (data << 4) + 10;
 8008224:	4a02      	ldr	r2, [pc, #8]	; (8008230 <_ZN8MainView11ba_callbackEv+0xc>)
 8008226:	8813      	ldrh	r3, [r2, #0]
 8008228:	011b      	lsls	r3, r3, #4
 800822a:	330a      	adds	r3, #10
 800822c:	8013      	strh	r3, [r2, #0]
    }
 800822e:	4770      	bx	lr
 8008230:	20002bfe 	.word	0x20002bfe

08008234 <_ZN8MainView11bb_callbackEv>:
    void bb_callback() override
    {
        data = (data << 4) + 11;
 8008234:	4a02      	ldr	r2, [pc, #8]	; (8008240 <_ZN8MainView11bb_callbackEv+0xc>)
 8008236:	8813      	ldrh	r3, [r2, #0]
 8008238:	011b      	lsls	r3, r3, #4
 800823a:	330b      	adds	r3, #11
 800823c:	8013      	strh	r3, [r2, #0]
    }
 800823e:	4770      	bx	lr
 8008240:	20002bfe 	.word	0x20002bfe

08008244 <_ZN8MainView11bc_callbackEv>:
    void bc_callback() override
    {
        data = (data << 4) + 12;
 8008244:	4a02      	ldr	r2, [pc, #8]	; (8008250 <_ZN8MainView11bc_callbackEv+0xc>)
 8008246:	8813      	ldrh	r3, [r2, #0]
 8008248:	011b      	lsls	r3, r3, #4
 800824a:	330c      	adds	r3, #12
 800824c:	8013      	strh	r3, [r2, #0]
    }
 800824e:	4770      	bx	lr
 8008250:	20002bfe 	.word	0x20002bfe

08008254 <_ZN8MainView11bd_callbackEv>:
    void bd_callback() override
    {
        data = (data << 4) + 13;
 8008254:	4a02      	ldr	r2, [pc, #8]	; (8008260 <_ZN8MainView11bd_callbackEv+0xc>)
 8008256:	8813      	ldrh	r3, [r2, #0]
 8008258:	011b      	lsls	r3, r3, #4
 800825a:	330d      	adds	r3, #13
 800825c:	8013      	strh	r3, [r2, #0]
    }
 800825e:	4770      	bx	lr
 8008260:	20002bfe 	.word	0x20002bfe

08008264 <_ZN8MainView11be_callbackEv>:
    void be_callback() override
    {
        data = (data << 4) + 14;
 8008264:	4a02      	ldr	r2, [pc, #8]	; (8008270 <_ZN8MainView11be_callbackEv+0xc>)
 8008266:	8813      	ldrh	r3, [r2, #0]
 8008268:	011b      	lsls	r3, r3, #4
 800826a:	330e      	adds	r3, #14
 800826c:	8013      	strh	r3, [r2, #0]
    }
 800826e:	4770      	bx	lr
 8008270:	20002bfe 	.word	0x20002bfe

08008274 <_ZN8MainView11bf_callbackEv>:
    void bf_callback() override
    {
        data = (data << 4) + 15;
 8008274:	4a02      	ldr	r2, [pc, #8]	; (8008280 <_ZN8MainView11bf_callbackEv+0xc>)
 8008276:	8813      	ldrh	r3, [r2, #0]
 8008278:	011b      	lsls	r3, r3, #4
 800827a:	330f      	adds	r3, #15
 800827c:	8013      	strh	r3, [r2, #0]
    }
 800827e:	4770      	bx	lr
 8008280:	20002bfe 	.word	0x20002bfe

08008284 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8008284:	4770      	bx	lr
 8008286:	bf00      	nop

08008288 <_ZN8MainView19write_incr_callbackEv>:
    void read_decr_callback() override
    {
        address--;
        printf("v%x\n", address);
    }
    void write_incr_callback() override
 8008288:	b510      	push	{r4, lr}
    {
        printf("w%04x%x\n", address, data & 0xff);
 800828a:	4b08      	ldr	r3, [pc, #32]	; (80082ac <_ZN8MainView19write_incr_callbackEv+0x24>)
 800828c:	4c08      	ldr	r4, [pc, #32]	; (80082b0 <_ZN8MainView19write_incr_callbackEv+0x28>)
 800828e:	781a      	ldrb	r2, [r3, #0]
 8008290:	8821      	ldrh	r1, [r4, #0]
 8008292:	4808      	ldr	r0, [pc, #32]	; (80082b4 <_ZN8MainView19write_incr_callbackEv+0x2c>)
 8008294:	f01d f9fe 	bl	8025694 <iprintf>
        address++;
 8008298:	8821      	ldrh	r1, [r4, #0]
        printf("v%x\n", address);
 800829a:	4807      	ldr	r0, [pc, #28]	; (80082b8 <_ZN8MainView19write_incr_callbackEv+0x30>)
        address++;
 800829c:	3101      	adds	r1, #1
 800829e:	b289      	uxth	r1, r1
 80082a0:	8021      	strh	r1, [r4, #0]
    }
 80082a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        printf("v%x\n", address);
 80082a6:	f01d b9f5 	b.w	8025694 <iprintf>
 80082aa:	bf00      	nop
 80082ac:	20002bfe 	.word	0x20002bfe
 80082b0:	20002bfa 	.word	0x20002bfa
 80082b4:	08027d90 	.word	0x08027d90
 80082b8:	08027d9c 	.word	0x08027d9c

080082bc <_ZN8MainView18read_decr_callbackEv>:
        address--;
 80082bc:	4b03      	ldr	r3, [pc, #12]	; (80082cc <_ZN8MainView18read_decr_callbackEv+0x10>)
        printf("v%x\n", address);
 80082be:	4804      	ldr	r0, [pc, #16]	; (80082d0 <_ZN8MainView18read_decr_callbackEv+0x14>)
        address--;
 80082c0:	8819      	ldrh	r1, [r3, #0]
 80082c2:	3901      	subs	r1, #1
 80082c4:	b289      	uxth	r1, r1
 80082c6:	8019      	strh	r1, [r3, #0]
        printf("v%x\n", address);
 80082c8:	f01d b9e4 	b.w	8025694 <iprintf>
 80082cc:	20002bfa 	.word	0x20002bfa
 80082d0:	08027d9c 	.word	0x08027d9c

080082d4 <_ZN8MainView18read_incr_callbackEv>:
        address++;
 80082d4:	4b03      	ldr	r3, [pc, #12]	; (80082e4 <_ZN8MainView18read_incr_callbackEv+0x10>)
        printf("v%x\n", address);
 80082d6:	4804      	ldr	r0, [pc, #16]	; (80082e8 <_ZN8MainView18read_incr_callbackEv+0x14>)
        address++;
 80082d8:	8819      	ldrh	r1, [r3, #0]
 80082da:	3101      	adds	r1, #1
 80082dc:	b289      	uxth	r1, r1
 80082de:	8019      	strh	r1, [r3, #0]
        printf("v%x\n", address);
 80082e0:	f01d b9d8 	b.w	8025694 <iprintf>
 80082e4:	20002bfa 	.word	0x20002bfa
 80082e8:	08027d9c 	.word	0x08027d9c

080082ec <_ZN8MainView13adrs_callbackEv>:
        address = data;
 80082ec:	4a03      	ldr	r2, [pc, #12]	; (80082fc <_ZN8MainView13adrs_callbackEv+0x10>)
 80082ee:	4b04      	ldr	r3, [pc, #16]	; (8008300 <_ZN8MainView13adrs_callbackEv+0x14>)
 80082f0:	8811      	ldrh	r1, [r2, #0]
        printf("v%x\n", address);
 80082f2:	4804      	ldr	r0, [pc, #16]	; (8008304 <_ZN8MainView13adrs_callbackEv+0x18>)
        address = data;
 80082f4:	8019      	strh	r1, [r3, #0]
        printf("v%x\n", address);
 80082f6:	f01d b9cd 	b.w	8025694 <iprintf>
 80082fa:	bf00      	nop
 80082fc:	20002bfe 	.word	0x20002bfe
 8008300:	20002bfa 	.word	0x20002bfa
 8008304:	08027d9c 	.word	0x08027d9c

08008308 <_ZN8MainView12run_callbackEv>:
    void run_callback() override
    {
        printf("s%x\n", address);
 8008308:	4b02      	ldr	r3, [pc, #8]	; (8008314 <_ZN8MainView12run_callbackEv+0xc>)
 800830a:	4803      	ldr	r0, [pc, #12]	; (8008318 <_ZN8MainView12run_callbackEv+0x10>)
 800830c:	8819      	ldrh	r1, [r3, #0]
 800830e:	f01d b9c1 	b.w	8025694 <iprintf>
 8008312:	bf00      	nop
 8008314:	20002bfa 	.word	0x20002bfa
 8008318:	08027da4 	.word	0x08027da4

0800831c <_ZN8MainViewD0Ev>:
    virtual ~MainView() {}
 800831c:	b510      	push	{r4, lr}
 800831e:	f44f 6107 	mov.w	r1, #2160	; 0x870
 8008322:	4604      	mov	r4, r0
 8008324:	f01b ff6b 	bl	80241fe <_ZdlPvj>
 8008328:	4620      	mov	r0, r4
 800832a:	bd10      	pop	{r4, pc}

0800832c <_ZN8MainView26file_upload_check_callbackEv>:
        printf("P%x\n", address);
    }
}

void MainView::file_upload_check_callback()
{
 800832c:	b510      	push	{r4, lr}
    printf("check\n");
 800832e:	480c      	ldr	r0, [pc, #48]	; (8008360 <_ZN8MainView26file_upload_check_callbackEv+0x34>)
{
 8008330:	f5ad 7d0c 	sub.w	sp, sp, #560	; 0x230
    printf("check\n");
 8008334:	f01d fa34 	bl	80257a0 <puts>

    FRESULT fr;
    FIL file;
    fr = f_open(&file, "0:MAIN.ROM", FA_READ);
 8008338:	490a      	ldr	r1, [pc, #40]	; (8008364 <_ZN8MainView26file_upload_check_callbackEv+0x38>)
 800833a:	2201      	movs	r2, #1
 800833c:	4668      	mov	r0, sp
 800833e:	f004 fd8b 	bl	800ce58 <f_open>
 8008342:	4604      	mov	r4, r0
    printf("%d\n", (int16_t)fr);
 8008344:	4601      	mov	r1, r0
 8008346:	4808      	ldr	r0, [pc, #32]	; (8008368 <_ZN8MainView26file_upload_check_callbackEv+0x3c>)
 8008348:	f01d f9a4 	bl	8025694 <iprintf>
    if (fr != FR_OK)
 800834c:	b92c      	cbnz	r4, 800835a <_ZN8MainView26file_upload_check_callbackEv+0x2e>
        return;

    static_cast<FrontendApplication*>(Application::getInstance())->handleKeyEvent(0);
 800834e:	f00c ff61 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8008352:	6803      	ldr	r3, [r0, #0]
 8008354:	4621      	mov	r1, r4
 8008356:	68db      	ldr	r3, [r3, #12]
 8008358:	4798      	blx	r3
}
 800835a:	f50d 7d0c 	add.w	sp, sp, #560	; 0x230
 800835e:	bd10      	pop	{r4, pc}
 8008360:	08027dac 	.word	0x08027dac
 8008364:	08027db4 	.word	0x08027db4
 8008368:	08027dc0 	.word	0x08027dc0

0800836c <_ZN8MainViewC1Ev>:
MainView::MainView()
 800836c:	b510      	push	{r4, lr}
 800836e:	4604      	mov	r4, r0
 8008370:	f7fb f96e 	bl	8003650 <_ZN12MainViewBaseC1Ev>
 8008374:	4b04      	ldr	r3, [pc, #16]	; (8008388 <_ZN8MainViewC1Ev+0x1c>)
 8008376:	6023      	str	r3, [r4, #0]
    memset(receive, 0, sizeof(receive));
 8008378:	2240      	movs	r2, #64	; 0x40
 800837a:	2100      	movs	r1, #0
 800837c:	4803      	ldr	r0, [pc, #12]	; (800838c <_ZN8MainViewC1Ev+0x20>)
 800837e:	f01c fde9 	bl	8024f54 <memset>
}
 8008382:	4620      	mov	r0, r4
 8008384:	bd10      	pop	{r4, pc}
 8008386:	bf00      	nop
 8008388:	08027de4 	.word	0x08027de4
 800838c:	20002c04 	.word	0x20002c04

08008390 <_ZN8MainView8dma_execEv>:

void MainView::dma_exec()
{
 8008390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int16_t uart_buffer_end_index = sizeof(dma_rx_buffer) - 1 - huart2.hdmarx->Instance->NDTR;
 8008392:	4b26      	ldr	r3, [pc, #152]	; (800842c <_ZN8MainView8dma_execEv+0x9c>)
 8008394:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	685a      	ldr	r2, [r3, #4]
 800839a:	f1c2 023f 	rsb	r2, r2, #63	; 0x3f
 800839e:	b212      	sxth	r2, r2
    if (uart_buffer_end_index < 0) {
 80083a0:	2a00      	cmp	r2, #0
 80083a2:	db0a      	blt.n	80083ba <_ZN8MainView8dma_execEv+0x2a>
 80083a4:	4922      	ldr	r1, [pc, #136]	; (8008430 <_ZN8MainView8dma_execEv+0xa0>)
 80083a6:	b214      	sxth	r4, r2
 80083a8:	188b      	adds	r3, r1, r2
    }

    int16_t end_index = uart_buffer_end_index;
    static int16_t last_end_index = 0;
    while (end_index >= 0) {
        if (dma_rx_buffer[end_index] == '\n') {
 80083aa:	f813 0901 	ldrb.w	r0, [r3], #-1
 80083ae:	280a      	cmp	r0, #10
 80083b0:	d004      	beq.n	80083bc <_ZN8MainView8dma_execEv+0x2c>
 80083b2:	3a01      	subs	r2, #1
    while (end_index >= 0) {
 80083b4:	b214      	sxth	r4, r2
 80083b6:	1c60      	adds	r0, r4, #1
 80083b8:	d1f7      	bne.n	80083aa <_ZN8MainView8dma_execEv+0x1a>
    }

    last_end_index = end_index;

    memset(receive, 0, sizeof(receive));
}
 80083ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (end_index == last_end_index) {  // UARTを受信してなかったら抜ける
 80083bc:	4d1d      	ldr	r5, [pc, #116]	; (8008434 <_ZN8MainView8dma_execEv+0xa4>)
 80083be:	f9b5 3000 	ldrsh.w	r3, [r5]
 80083c2:	42a3      	cmp	r3, r4
 80083c4:	d0f9      	beq.n	80083ba <_ZN8MainView8dma_execEv+0x2a>
    if (end_index > last_end_index) {
 80083c6:	da19      	bge.n	80083fc <_ZN8MainView8dma_execEv+0x6c>
        memcpy(receive, dma_rx_buffer + last_end_index, end_index - last_end_index);
 80083c8:	481b      	ldr	r0, [pc, #108]	; (8008438 <_ZN8MainView8dma_execEv+0xa8>)
 80083ca:	4606      	mov	r6, r0
 80083cc:	1ad2      	subs	r2, r2, r3
 80083ce:	4419      	add	r1, r3
 80083d0:	f01c fdb2 	bl	8024f38 <memcpy>
    switch (receive[1]) {
 80083d4:	7873      	ldrb	r3, [r6, #1]
 80083d6:	2b6b      	cmp	r3, #107	; 0x6b
 80083d8:	d020      	beq.n	800841c <_ZN8MainView8dma_execEv+0x8c>
 80083da:	2b6c      	cmp	r3, #108	; 0x6c
 80083dc:	d106      	bne.n	80083ec <_ZN8MainView8dma_execEv+0x5c>
        data = (uint16_t)strtol((char*)&receive[2], NULL, 16);
 80083de:	4817      	ldr	r0, [pc, #92]	; (800843c <_ZN8MainView8dma_execEv+0xac>)
 80083e0:	2210      	movs	r2, #16
 80083e2:	2100      	movs	r1, #0
 80083e4:	f01d fabc 	bl	8025960 <strtol>
 80083e8:	4b15      	ldr	r3, [pc, #84]	; (8008440 <_ZN8MainView8dma_execEv+0xb0>)
 80083ea:	8018      	strh	r0, [r3, #0]
    last_end_index = end_index;
 80083ec:	802c      	strh	r4, [r5, #0]
    memset(receive, 0, sizeof(receive));
 80083ee:	4812      	ldr	r0, [pc, #72]	; (8008438 <_ZN8MainView8dma_execEv+0xa8>)
}
 80083f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    memset(receive, 0, sizeof(receive));
 80083f4:	2240      	movs	r2, #64	; 0x40
 80083f6:	2100      	movs	r1, #0
 80083f8:	f01c bdac 	b.w	8024f54 <memset>
        memcpy(receive, dma_rx_buffer + last_end_index, sizeof(dma_rx_buffer) - last_end_index);
 80083fc:	4e0e      	ldr	r6, [pc, #56]	; (8008438 <_ZN8MainView8dma_execEv+0xa8>)
 80083fe:	f1c3 0740 	rsb	r7, r3, #64	; 0x40
 8008402:	4419      	add	r1, r3
 8008404:	463a      	mov	r2, r7
 8008406:	4630      	mov	r0, r6
 8008408:	f01c fd96 	bl	8024f38 <memcpy>
        memcpy(receive + sizeof(dma_rx_buffer) - last_end_index, dma_rx_buffer, end_index);
 800840c:	4908      	ldr	r1, [pc, #32]	; (8008430 <_ZN8MainView8dma_execEv+0xa0>)
 800840e:	4622      	mov	r2, r4
 8008410:	19f0      	adds	r0, r6, r7
 8008412:	f01c fd91 	bl	8024f38 <memcpy>
    switch (receive[1]) {
 8008416:	7873      	ldrb	r3, [r6, #1]
 8008418:	2b6b      	cmp	r3, #107	; 0x6b
 800841a:	d1de      	bne.n	80083da <_ZN8MainView8dma_execEv+0x4a>
        address = (uint16_t)strtol((char*)&receive[2], NULL, 16);
 800841c:	4807      	ldr	r0, [pc, #28]	; (800843c <_ZN8MainView8dma_execEv+0xac>)
 800841e:	2210      	movs	r2, #16
 8008420:	2100      	movs	r1, #0
 8008422:	f01d fa9d 	bl	8025960 <strtol>
 8008426:	4b07      	ldr	r3, [pc, #28]	; (8008444 <_ZN8MainView8dma_execEv+0xb4>)
 8008428:	8018      	strh	r0, [r3, #0]
    } break;
 800842a:	e7df      	b.n	80083ec <_ZN8MainView8dma_execEv+0x5c>
 800842c:	20003130 	.word	0x20003130
 8008430:	20002bb8 	.word	0x20002bb8
 8008434:	20002c00 	.word	0x20002c00
 8008438:	20002c04 	.word	0x20002c04
 800843c:	20002c06 	.word	0x20002c06
 8008440:	20002bfe 	.word	0x20002bfe
 8008444:	20002bfa 	.word	0x20002bfa

08008448 <_ZN8MainView11setupScreenEv>:
{
 8008448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    HAL_UART_Receive_DMA(&huart2, dma_rx_buffer, sizeof(dma_rx_buffer));
 800844a:	490d      	ldr	r1, [pc, #52]	; (8008480 <_ZN8MainView11setupScreenEv+0x38>)
 800844c:	4f0d      	ldr	r7, [pc, #52]	; (8008484 <_ZN8MainView11setupScreenEv+0x3c>)
        printf("v%x\n", address);
 800844e:	4e0e      	ldr	r6, [pc, #56]	; (8008488 <_ZN8MainView11setupScreenEv+0x40>)
{
 8008450:	4605      	mov	r5, r0
    HAL_UART_Receive_DMA(&huart2, dma_rx_buffer, sizeof(dma_rx_buffer));
 8008452:	2240      	movs	r2, #64	; 0x40
 8008454:	480d      	ldr	r0, [pc, #52]	; (800848c <_ZN8MainView11setupScreenEv+0x44>)
 8008456:	f002 ff25 	bl	800b2a4 <HAL_UART_Receive_DMA>
 800845a:	2406      	movs	r4, #6
        dma_exec();
 800845c:	4628      	mov	r0, r5
 800845e:	f7ff ff97 	bl	8008390 <_ZN8MainView8dma_execEv>
        printf("v%x\n", address);
 8008462:	8839      	ldrh	r1, [r7, #0]
 8008464:	4630      	mov	r0, r6
 8008466:	f01d f915 	bl	8025694 <iprintf>
        HAL_Delay(100);
 800846a:	2064      	movs	r0, #100	; 0x64
 800846c:	f000 f976 	bl	800875c <HAL_Delay>
    for (int i = 0; i < 6; i++) {
 8008470:	3c01      	subs	r4, #1
 8008472:	d1f3      	bne.n	800845c <_ZN8MainView11setupScreenEv+0x14>
    MainViewBase::setupScreen();
 8008474:	4628      	mov	r0, r5
}
 8008476:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    MainViewBase::setupScreen();
 800847a:	f7fa beef 	b.w	800325c <_ZN12MainViewBase11setupScreenEv>
 800847e:	bf00      	nop
 8008480:	20002bb8 	.word	0x20002bb8
 8008484:	20002bfa 	.word	0x20002bfa
 8008488:	08027d9c 	.word	0x08027d9c
 800848c:	20003130 	.word	0x20003130

08008490 <_ZN8MainView6updateEv>:
{
 8008490:	b508      	push	{r3, lr}
    dma_exec();
 8008492:	f7ff ff7d 	bl	8008390 <_ZN8MainView8dma_execEv>
    if (data != data_current) {
 8008496:	4a0b      	ldr	r2, [pc, #44]	; (80084c4 <_ZN8MainView6updateEv+0x34>)
 8008498:	4b0b      	ldr	r3, [pc, #44]	; (80084c8 <_ZN8MainView6updateEv+0x38>)
 800849a:	8811      	ldrh	r1, [r2, #0]
 800849c:	881a      	ldrh	r2, [r3, #0]
 800849e:	428a      	cmp	r2, r1
 80084a0:	d003      	beq.n	80084aa <_ZN8MainView6updateEv+0x1a>
        printf("D%x\n", data);
 80084a2:	480a      	ldr	r0, [pc, #40]	; (80084cc <_ZN8MainView6updateEv+0x3c>)
        data_current = data;
 80084a4:	8019      	strh	r1, [r3, #0]
        printf("D%x\n", data);
 80084a6:	f01d f8f5 	bl	8025694 <iprintf>
    if (address != address_current) {
 80084aa:	4a09      	ldr	r2, [pc, #36]	; (80084d0 <_ZN8MainView6updateEv+0x40>)
 80084ac:	4b09      	ldr	r3, [pc, #36]	; (80084d4 <_ZN8MainView6updateEv+0x44>)
 80084ae:	8811      	ldrh	r1, [r2, #0]
 80084b0:	881a      	ldrh	r2, [r3, #0]
 80084b2:	428a      	cmp	r2, r1
 80084b4:	d100      	bne.n	80084b8 <_ZN8MainView6updateEv+0x28>
}
 80084b6:	bd08      	pop	{r3, pc}
        address_current = address;
 80084b8:	8019      	strh	r1, [r3, #0]
        printf("P%x\n", address);
 80084ba:	4807      	ldr	r0, [pc, #28]	; (80084d8 <_ZN8MainView6updateEv+0x48>)
}
 80084bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        printf("P%x\n", address);
 80084c0:	f01d b8e8 	b.w	8025694 <iprintf>
 80084c4:	20002bfe 	.word	0x20002bfe
 80084c8:	20002bfc 	.word	0x20002bfc
 80084cc:	08027dc4 	.word	0x08027dc4
 80084d0:	20002bfa 	.word	0x20002bfa
 80084d4:	20002bf8 	.word	0x20002bf8
 80084d8:	08027dcc 	.word	0x08027dcc

080084dc <_ZN8MainView14reset_callbackEv>:
    }
    void reset_callback() override
 80084dc:	b570      	push	{r4, r5, r6, lr}
 80084de:	4605      	mov	r5, r0
    {
        printf("r\n");
 80084e0:	4809      	ldr	r0, [pc, #36]	; (8008508 <_ZN8MainView14reset_callbackEv+0x2c>)
        address = 0;
        for (int i = 0; i < 6; i++) {
            dma_exec();
            printf("v0\n");
 80084e2:	4e0a      	ldr	r6, [pc, #40]	; (800850c <_ZN8MainView14reset_callbackEv+0x30>)
        printf("r\n");
 80084e4:	f01d f95c 	bl	80257a0 <puts>
        address = 0;
 80084e8:	4b09      	ldr	r3, [pc, #36]	; (8008510 <_ZN8MainView14reset_callbackEv+0x34>)
 80084ea:	2200      	movs	r2, #0
 80084ec:	801a      	strh	r2, [r3, #0]
 80084ee:	2406      	movs	r4, #6
            dma_exec();
 80084f0:	4628      	mov	r0, r5
 80084f2:	f7ff ff4d 	bl	8008390 <_ZN8MainView8dma_execEv>
            printf("v0\n");
 80084f6:	4630      	mov	r0, r6
 80084f8:	f01d f952 	bl	80257a0 <puts>
            HAL_Delay(100);
 80084fc:	2064      	movs	r0, #100	; 0x64
 80084fe:	f000 f92d 	bl	800875c <HAL_Delay>
        for (int i = 0; i < 6; i++) {
 8008502:	3c01      	subs	r4, #1
 8008504:	d1f4      	bne.n	80084f0 <_ZN8MainView14reset_callbackEv+0x14>
        }
    }
 8008506:	bd70      	pop	{r4, r5, r6, pc}
 8008508:	08027dd4 	.word	0x08027dd4
 800850c:	08027dd8 	.word	0x08027dd8
 8008510:	20002bfa 	.word	0x20002bfa

08008514 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8008514:	2200      	movs	r2, #0
 8008516:	6002      	str	r2, [r0, #0]
{

}
 8008518:	4770      	bx	lr
 800851a:	bf00      	nop

0800851c <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800851c:	4770      	bx	lr
 800851e:	bf00      	nop

08008520 <_ZN16SettingPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SettingPresenter() {};
 8008520:	4770      	bx	lr
 8008522:	bf00      	nop

08008524 <_ZThn4_N16SettingPresenterD1Ev>:
 8008524:	3804      	subs	r0, #4
 8008526:	4770      	bx	lr

08008528 <_ZN16SettingPresenter10deactivateEv>:
}

void SettingPresenter::activate()
{

}
 8008528:	4770      	bx	lr
 800852a:	bf00      	nop

0800852c <_ZN16SettingPresenterD0Ev>:
 800852c:	b510      	push	{r4, lr}
 800852e:	2110      	movs	r1, #16
 8008530:	4604      	mov	r4, r0
 8008532:	f01b fe64 	bl	80241fe <_ZdlPvj>
 8008536:	4620      	mov	r0, r4
 8008538:	bd10      	pop	{r4, pc}
 800853a:	bf00      	nop

0800853c <_ZThn4_N16SettingPresenterD0Ev>:
 800853c:	b500      	push	{lr}
 800853e:	b083      	sub	sp, #12
 8008540:	3804      	subs	r0, #4
 8008542:	2110      	movs	r1, #16
 8008544:	9001      	str	r0, [sp, #4]
 8008546:	f01b fe5a 	bl	80241fe <_ZdlPvj>
 800854a:	9801      	ldr	r0, [sp, #4]
 800854c:	b003      	add	sp, #12
 800854e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008552:	bf00      	nop

08008554 <_ZN16SettingPresenterC1ER11SettingView>:
SettingPresenter::SettingPresenter(SettingView& v)
 8008554:	b430      	push	{r4, r5}
    : view(v)
 8008556:	4a05      	ldr	r2, [pc, #20]	; (800856c <_ZN16SettingPresenterC1ER11SettingView+0x18>)
 8008558:	2500      	movs	r5, #0
 800855a:	f102 0408 	add.w	r4, r2, #8
 800855e:	3220      	adds	r2, #32
 8008560:	e9c0 5102 	strd	r5, r1, [r0, #8]
 8008564:	e9c0 4200 	strd	r4, r2, [r0]
}
 8008568:	bc30      	pop	{r4, r5}
 800856a:	4770      	bx	lr
 800856c:	08027e7c 	.word	0x08027e7c

08008570 <_ZN11SettingViewD1Ev>:

class SettingView : public SettingViewBase
{
public:
    SettingView();
    virtual ~SettingView() {}
 8008570:	4770      	bx	lr
 8008572:	bf00      	nop

08008574 <_ZN11SettingView14tearDownScreenEv>:
}

void SettingView::tearDownScreen()
{
    SettingViewBase::tearDownScreen();
}
 8008574:	4770      	bx	lr
 8008576:	bf00      	nop

08008578 <_ZN11SettingView11setupScreenEv>:
{
 8008578:	b538      	push	{r3, r4, r5, lr}
    slider1.setValue(slider_value);
 800857a:	4d08      	ldr	r5, [pc, #32]	; (800859c <_ZN11SettingView11setupScreenEv+0x24>)
{
 800857c:	4604      	mov	r4, r0
    slider1.setValue(slider_value);
 800857e:	6829      	ldr	r1, [r5, #0]
 8008580:	f600 2018 	addw	r0, r0, #2584	; 0xa18
 8008584:	f008 f9c1 	bl	801090a <_ZN8touchgfx6Slider8setValueEi>
    slider_callback(slider_value);
 8008588:	6823      	ldr	r3, [r4, #0]
 800858a:	6829      	ldr	r1, [r5, #0]
 800858c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800858e:	4620      	mov	r0, r4
 8008590:	4798      	blx	r3
    SettingViewBase::setupScreen();
 8008592:	4620      	mov	r0, r4
}
 8008594:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    SettingViewBase::setupScreen();
 8008598:	f7fc bae8 	b.w	8004b6c <_ZN15SettingViewBase11setupScreenEv>
 800859c:	20000090 	.word	0x20000090

080085a0 <_ZN11SettingView15slider_callbackEi>:

void SettingView::slider_callback(int value)
{
 80085a0:	b570      	push	{r4, r5, r6, lr}
    slider_value = value;
    int freq = freq_list[value / 10];
 80085a2:	4c0c      	ldr	r4, [pc, #48]	; (80085d4 <_ZN11SettingView15slider_callbackEi+0x34>)
 80085a4:	4e0c      	ldr	r6, [pc, #48]	; (80085d8 <_ZN11SettingView15slider_callbackEi+0x38>)
    slider_value = value;
 80085a6:	4d0d      	ldr	r5, [pc, #52]	; (80085dc <_ZN11SettingView15slider_callbackEi+0x3c>)
    Unicode::snprintf(hzBuffer, HZ_SIZE, "%d", freq);
 80085a8:	4a0d      	ldr	r2, [pc, #52]	; (80085e0 <_ZN11SettingView15slider_callbackEi+0x40>)
    slider_value = value;
 80085aa:	6029      	str	r1, [r5, #0]
    int freq = freq_list[value / 10];
 80085ac:	fb84 3401 	smull	r3, r4, r4, r1
 80085b0:	17cb      	asrs	r3, r1, #31
 80085b2:	ebc3 03a4 	rsb	r3, r3, r4, asr #2
    Unicode::snprintf(hzBuffer, HZ_SIZE, "%d", freq);
 80085b6:	210a      	movs	r1, #10
{
 80085b8:	4604      	mov	r4, r0
    Unicode::snprintf(hzBuffer, HZ_SIZE, "%d", freq);
 80085ba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80085be:	f600 30dc 	addw	r0, r0, #3036	; 0xbdc
 80085c2:	f00f ff89 	bl	80184d8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    hz.invalidate();
 80085c6:	f604 305c 	addw	r0, r4, #2908	; 0xb5c
}
 80085ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    hz.invalidate();
 80085ce:	f00d bdf4 	b.w	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>
 80085d2:	bf00      	nop
 80085d4:	66666667 	.word	0x66666667
 80085d8:	20000094 	.word	0x20000094
 80085dc:	20000090 	.word	0x20000090
 80085e0:	08027ea4 	.word	0x08027ea4

080085e4 <_ZN11SettingView23slider_release_callbackEi>:

void SettingView::slider_release_callback(int value)
{
    int freq = freq_list[value / 10];
 80085e4:	4b05      	ldr	r3, [pc, #20]	; (80085fc <_ZN11SettingView23slider_release_callbackEi+0x18>)
 80085e6:	4a06      	ldr	r2, [pc, #24]	; (8008600 <_ZN11SettingView23slider_release_callbackEi+0x1c>)
    printf("f%d\n", freq);
 80085e8:	4806      	ldr	r0, [pc, #24]	; (8008604 <_ZN11SettingView23slider_release_callbackEi+0x20>)
    int freq = freq_list[value / 10];
 80085ea:	fb83 c301 	smull	ip, r3, r3, r1
 80085ee:	17c9      	asrs	r1, r1, #31
 80085f0:	ebc1 01a3 	rsb	r1, r1, r3, asr #2
    printf("f%d\n", freq);
 80085f4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80085f8:	f01d b84c 	b.w	8025694 <iprintf>
 80085fc:	66666667 	.word	0x66666667
 8008600:	20000094 	.word	0x20000094
 8008604:	08027ea8 	.word	0x08027ea8

08008608 <_ZN11SettingView13demo_callbackEv>:
 8008608:	b672      	cpsid	i
}

void SettingView::demo_callback()
{
    __disable_irq();
    _reboot_cookie = 0xDEADBEEF;
 800860a:	4b02      	ldr	r3, [pc, #8]	; (8008614 <_ZN11SettingView13demo_callbackEv+0xc>)
 800860c:	4a02      	ldr	r2, [pc, #8]	; (8008618 <_ZN11SettingView13demo_callbackEv+0x10>)
 800860e:	601a      	str	r2, [r3, #0]
    HAL_NVIC_SystemReset();
 8008610:	f000 b910 	b.w	8008834 <HAL_NVIC_SystemReset>
 8008614:	20000254 	.word	0x20000254
 8008618:	deadbeef 	.word	0xdeadbeef

0800861c <_ZN11SettingViewD0Ev>:
 800861c:	b510      	push	{r4, lr}
 800861e:	f640 4124 	movw	r1, #3108	; 0xc24
 8008622:	4604      	mov	r4, r0
 8008624:	f01b fdeb 	bl	80241fe <_ZdlPvj>
 8008628:	4620      	mov	r0, r4
 800862a:	bd10      	pop	{r4, pc}

0800862c <_ZN11SettingViewC1Ev>:
SettingView::SettingView()
 800862c:	b510      	push	{r4, lr}
 800862e:	4604      	mov	r4, r0
 8008630:	f7fc fba6 	bl	8004d80 <_ZN15SettingViewBaseC1Ev>
 8008634:	4b01      	ldr	r3, [pc, #4]	; (800863c <_ZN11SettingViewC1Ev+0x10>)
 8008636:	6023      	str	r3, [r4, #0]
}
 8008638:	4620      	mov	r0, r4
 800863a:	bd10      	pop	{r4, pc}
 800863c:	08027eb8 	.word	0x08027eb8

08008640 <_ZN17TransferPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TransferPresenter() {};
 8008640:	4770      	bx	lr
 8008642:	bf00      	nop

08008644 <_ZThn4_N17TransferPresenterD1Ev>:
 8008644:	3804      	subs	r0, #4
 8008646:	4770      	bx	lr

08008648 <_ZN17TransferPresenter10deactivateEv>:
}

void TransferPresenter::activate()
{

}
 8008648:	4770      	bx	lr
 800864a:	bf00      	nop

0800864c <_ZN17TransferPresenterD0Ev>:
 800864c:	b510      	push	{r4, lr}
 800864e:	2110      	movs	r1, #16
 8008650:	4604      	mov	r4, r0
 8008652:	f01b fdd4 	bl	80241fe <_ZdlPvj>
 8008656:	4620      	mov	r0, r4
 8008658:	bd10      	pop	{r4, pc}
 800865a:	bf00      	nop

0800865c <_ZThn4_N17TransferPresenterD0Ev>:
 800865c:	b500      	push	{lr}
 800865e:	b083      	sub	sp, #12
 8008660:	3804      	subs	r0, #4
 8008662:	2110      	movs	r1, #16
 8008664:	9001      	str	r0, [sp, #4]
 8008666:	f01b fdca 	bl	80241fe <_ZdlPvj>
 800866a:	9801      	ldr	r0, [sp, #4]
 800866c:	b003      	add	sp, #12
 800866e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008672:	bf00      	nop

08008674 <_ZN17TransferPresenterC1ER12TransferView>:
TransferPresenter::TransferPresenter(TransferView& v)
 8008674:	b430      	push	{r4, r5}
    : view(v)
 8008676:	4a05      	ldr	r2, [pc, #20]	; (800868c <_ZN17TransferPresenterC1ER12TransferView+0x18>)
 8008678:	2500      	movs	r5, #0
 800867a:	f102 0408 	add.w	r4, r2, #8
 800867e:	3220      	adds	r2, #32
 8008680:	e9c0 5102 	strd	r5, r1, [r0, #8]
 8008684:	e9c0 4200 	strd	r4, r2, [r0]
}
 8008688:	bc30      	pop	{r4, r5}
 800868a:	4770      	bx	lr
 800868c:	08027ef0 	.word	0x08027ef0

08008690 <_ZN12TransferViewD1Ev>:

class TransferView : public TransferViewBase
{
public:
    TransferView();
    virtual ~TransferView() {}
 8008690:	4770      	bx	lr
 8008692:	bf00      	nop

08008694 <_ZN12TransferView14tearDownScreenEv>:
}

void TransferView::tearDownScreen()
{
    TransferViewBase::tearDownScreen();
}
 8008694:	4770      	bx	lr
 8008696:	bf00      	nop

08008698 <_ZN12TransferView11setupScreenEv>:
    TransferViewBase::setupScreen();
 8008698:	f7fe b9c8 	b.w	8006a2c <_ZN16TransferViewBase11setupScreenEv>

0800869c <_ZN12TransferViewD0Ev>:
 800869c:	b510      	push	{r4, lr}
 800869e:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 80086a2:	4604      	mov	r4, r0
 80086a4:	f01b fdab 	bl	80241fe <_ZdlPvj>
 80086a8:	4620      	mov	r0, r4
 80086aa:	bd10      	pop	{r4, pc}

080086ac <_ZN12TransferViewC1Ev>:
TransferView::TransferView()
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
 80086b0:	f7fe f9d8 	bl	8006a64 <_ZN16TransferViewBaseC1Ev>
 80086b4:	4b01      	ldr	r3, [pc, #4]	; (80086bc <_ZN12TransferViewC1Ev+0x10>)
 80086b6:	6023      	str	r3, [r4, #0]
}
 80086b8:	4620      	mov	r0, r4
 80086ba:	bd10      	pop	{r4, pc}
 80086bc:	08027f20 	.word	0x08027f20

080086c0 <SystemInit>:
 *         configuration.
 * @param  None
 * @retval None
 */
void SystemInit(void)
{
 80086c0:	b508      	push	{r3, lr}
    // enter dfu mode
    if (_reboot_cookie == 0xDEADBEEF) {
 80086c2:	4b0a      	ldr	r3, [pc, #40]	; (80086ec <SystemInit+0x2c>)
 80086c4:	4a0a      	ldr	r2, [pc, #40]	; (80086f0 <SystemInit+0x30>)
 80086c6:	6819      	ldr	r1, [r3, #0]
 80086c8:	4291      	cmp	r1, r2
 80086ca:	d107      	bne.n	80086dc <SystemInit+0x1c>
        _reboot_cookie = 0xCAFEFEED;  // Reset bootloader trigger
 80086cc:	4a09      	ldr	r2, [pc, #36]	; (80086f4 <SystemInit+0x34>)
 80086ce:	601a      	str	r2, [r3, #0]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80086d0:	4b09      	ldr	r3, [pc, #36]	; (80086f8 <SystemInit+0x38>)
 80086d2:	f383 8808 	msr	MSP, r3
        __set_MSP((uintptr_t)&_estack);
        // http://www.st.com/content/ccc/resource/technical/document/application_note/6a/17/92/02/58/98/45/0c/CD00264379.pdf/files/CD00264379.pdf
        void (*builtin_bootloader)(void) = (void (*)(void))(*((uint32_t*)0x1FFF0004));
 80086d6:	4b09      	ldr	r3, [pc, #36]	; (80086fc <SystemInit+0x3c>)
        builtin_bootloader();
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	4798      	blx	r3
    }

/* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2)); /* set CP10 and CP11 Full Access */
 80086dc:	4a08      	ldr	r2, [pc, #32]	; (8008700 <SystemInit+0x40>)
 80086de:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80086e2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80086e6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

    /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
    SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif                                                   /* USER_VECT_TAB_ADDRESS */
}
 80086ea:	bd08      	pop	{r3, pc}
 80086ec:	20000254 	.word	0x20000254
 80086f0:	deadbeef 	.word	0xdeadbeef
 80086f4:	cafefeed 	.word	0xcafefeed
 80086f8:	20020000 	.word	0x20020000
 80086fc:	1fff0004 	.word	0x1fff0004
 8008700:	e000ed00 	.word	0xe000ed00

08008704 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008704:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008706:	4b0b      	ldr	r3, [pc, #44]	; (8008734 <HAL_Init+0x30>)
 8008708:	681a      	ldr	r2, [r3, #0]
 800870a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800870e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008710:	681a      	ldr	r2, [r3, #0]
 8008712:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008716:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008718:	681a      	ldr	r2, [r3, #0]
 800871a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800871e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008720:	2003      	movs	r0, #3
 8008722:	f000 f82d 	bl	8008780 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008726:	200f      	movs	r0, #15
 8008728:	f7f8 f9a4 	bl	8000a74 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800872c:	f7f8 f986 	bl	8000a3c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008730:	2000      	movs	r0, #0
 8008732:	bd08      	pop	{r3, pc}
 8008734:	40023c00 	.word	0x40023c00

08008738 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008738:	4a03      	ldr	r2, [pc, #12]	; (8008748 <HAL_IncTick+0x10>)
 800873a:	4b04      	ldr	r3, [pc, #16]	; (800874c <HAL_IncTick+0x14>)
 800873c:	6811      	ldr	r1, [r2, #0]
 800873e:	781b      	ldrb	r3, [r3, #0]
 8008740:	440b      	add	r3, r1
 8008742:	6013      	str	r3, [r2, #0]
}
 8008744:	4770      	bx	lr
 8008746:	bf00      	nop
 8008748:	20013fc4 	.word	0x20013fc4
 800874c:	200000c0 	.word	0x200000c0

08008750 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008750:	4b01      	ldr	r3, [pc, #4]	; (8008758 <HAL_GetTick+0x8>)
 8008752:	6818      	ldr	r0, [r3, #0]
}
 8008754:	4770      	bx	lr
 8008756:	bf00      	nop
 8008758:	20013fc4 	.word	0x20013fc4

0800875c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800875c:	b538      	push	{r3, r4, r5, lr}
 800875e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008760:	f7ff fff6 	bl	8008750 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008764:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008766:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008768:	d002      	beq.n	8008770 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800876a:	4b04      	ldr	r3, [pc, #16]	; (800877c <HAL_Delay+0x20>)
 800876c:	781b      	ldrb	r3, [r3, #0]
 800876e:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008770:	f7ff ffee 	bl	8008750 <HAL_GetTick>
 8008774:	1b43      	subs	r3, r0, r5
 8008776:	42a3      	cmp	r3, r4
 8008778:	d3fa      	bcc.n	8008770 <HAL_Delay+0x14>
  {
  }
}
 800877a:	bd38      	pop	{r3, r4, r5, pc}
 800877c:	200000c0 	.word	0x200000c0

08008780 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008780:	4908      	ldr	r1, [pc, #32]	; (80087a4 <HAL_NVIC_SetPriorityGrouping+0x24>)
 8008782:	68ca      	ldr	r2, [r1, #12]
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8008784:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008786:	0200      	lsls	r0, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008788:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 800878c:	4022      	ands	r2, r4
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800878e:	f400 63e0 	and.w	r3, r0, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008792:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008794:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008798:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800879c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->AIRCR =  reg_value;
 80087a0:	60cb      	str	r3, [r1, #12]
 80087a2:	4770      	bx	lr
 80087a4:	e000ed00 	.word	0xe000ed00

080087a8 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80087a8:	4b19      	ldr	r3, [pc, #100]	; (8008810 <HAL_NVIC_SetPriority+0x68>)
 80087aa:	68db      	ldr	r3, [r3, #12]
 80087ac:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80087b0:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80087b2:	f1c3 0507 	rsb	r5, r3, #7
 80087b6:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80087b8:	f103 0404 	add.w	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80087bc:	bf28      	it	cs
 80087be:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80087c0:	2c06      	cmp	r4, #6
 80087c2:	d919      	bls.n	80087f8 <HAL_NVIC_SetPriority+0x50>
 80087c4:	3b03      	subs	r3, #3
 80087c6:	f04f 34ff 	mov.w	r4, #4294967295
 80087ca:	409c      	lsls	r4, r3
 80087cc:	ea22 0204 	bic.w	r2, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80087d0:	f04f 34ff 	mov.w	r4, #4294967295
 80087d4:	40ac      	lsls	r4, r5
 80087d6:	ea21 0104 	bic.w	r1, r1, r4
 80087da:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80087dc:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80087de:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 80087e2:	db0c      	blt.n	80087fe <HAL_NVIC_SetPriority+0x56>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80087e4:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80087e8:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80087ec:	0109      	lsls	r1, r1, #4
 80087ee:	b2c9      	uxtb	r1, r1
 80087f0:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80087f4:	bc30      	pop	{r4, r5}
 80087f6:	4770      	bx	lr
 80087f8:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80087fa:	4613      	mov	r3, r2
 80087fc:	e7e8      	b.n	80087d0 <HAL_NVIC_SetPriority+0x28>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80087fe:	4b05      	ldr	r3, [pc, #20]	; (8008814 <HAL_NVIC_SetPriority+0x6c>)
 8008800:	f000 000f 	and.w	r0, r0, #15
 8008804:	0109      	lsls	r1, r1, #4
 8008806:	4403      	add	r3, r0
 8008808:	b2c9      	uxtb	r1, r1
 800880a:	7619      	strb	r1, [r3, #24]
 800880c:	bc30      	pop	{r4, r5}
 800880e:	4770      	bx	lr
 8008810:	e000ed00 	.word	0xe000ed00
 8008814:	e000ecfc 	.word	0xe000ecfc

08008818 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008818:	2800      	cmp	r0, #0
 800881a:	db07      	blt.n	800882c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800881c:	f000 011f 	and.w	r1, r0, #31
 8008820:	4a03      	ldr	r2, [pc, #12]	; (8008830 <HAL_NVIC_EnableIRQ+0x18>)
 8008822:	0940      	lsrs	r0, r0, #5
 8008824:	2301      	movs	r3, #1
 8008826:	408b      	lsls	r3, r1
 8008828:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800882c:	4770      	bx	lr
 800882e:	bf00      	nop
 8008830:	e000e100 	.word	0xe000e100

08008834 <HAL_NVIC_SystemReset>:
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8008834:	f3bf 8f4f 	dsb	sy
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8008838:	4905      	ldr	r1, [pc, #20]	; (8008850 <HAL_NVIC_SystemReset+0x1c>)
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 800883a:	4b06      	ldr	r3, [pc, #24]	; (8008854 <HAL_NVIC_SystemReset+0x20>)
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 800883c:	68ca      	ldr	r2, [r1, #12]
 800883e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8008842:	4313      	orrs	r3, r2
 8008844:	60cb      	str	r3, [r1, #12]
 8008846:	f3bf 8f4f 	dsb	sy
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 800884a:	bf00      	nop
  for(;;)                                                           /* wait until reset */
 800884c:	e7fd      	b.n	800884a <HAL_NVIC_SystemReset+0x16>
 800884e:	bf00      	nop
 8008850:	e000ed00 	.word	0xe000ed00
 8008854:	05fa0004 	.word	0x05fa0004

08008858 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008858:	b180      	cbz	r0, 800887c <HAL_CRC_Init+0x24>
{
 800885a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800885c:	7943      	ldrb	r3, [r0, #5]
 800885e:	4604      	mov	r4, r0
 8008860:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008864:	b11b      	cbz	r3, 800886e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008866:	2301      	movs	r3, #1
 8008868:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800886a:	2000      	movs	r0, #0
}
 800886c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800886e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008870:	f7f7 fe8a 	bl	8000588 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008874:	2301      	movs	r3, #1
 8008876:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008878:	2000      	movs	r0, #0
}
 800887a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800887c:	2001      	movs	r0, #1
}
 800887e:	4770      	bx	lr

08008880 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8008880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008882:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 8008884:	f7ff ff64 	bl	8008750 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8008888:	2c00      	cmp	r4, #0
 800888a:	d054      	beq.n	8008936 <HAL_DMA_Init+0xb6>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 800888c:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 800888e:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 8008890:	2102      	movs	r1, #2
 8008892:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 8008896:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800889a:	681a      	ldr	r2, [r3, #0]
 800889c:	f022 0201 	bic.w	r2, r2, #1
 80088a0:	4605      	mov	r5, r0
 80088a2:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80088a4:	e005      	b.n	80088b2 <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80088a6:	f7ff ff53 	bl	8008750 <HAL_GetTick>
 80088aa:	1b43      	subs	r3, r0, r5
 80088ac:	2b05      	cmp	r3, #5
 80088ae:	d83b      	bhi.n	8008928 <HAL_DMA_Init+0xa8>
 80088b0:	6823      	ldr	r3, [r4, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80088b2:	681a      	ldr	r2, [r3, #0]
 80088b4:	07d1      	lsls	r1, r2, #31
 80088b6:	d4f6      	bmi.n	80088a6 <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80088b8:	e9d4 2601 	ldrd	r2, r6, [r4, #4]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80088bc:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80088c0:	4332      	orrs	r2, r6
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80088c2:	6961      	ldr	r1, [r4, #20]
  tmp = hdma->Instance->CR;
 80088c4:	681f      	ldr	r7, [r3, #0]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80088c6:	432a      	orrs	r2, r5
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80088c8:	e9d4 6506 	ldrd	r6, r5, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80088cc:	4302      	orrs	r2, r0
 80088ce:	430a      	orrs	r2, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 80088d0:	6a20      	ldr	r0, [r4, #32]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80088d2:	4935      	ldr	r1, [pc, #212]	; (80089a8 <HAL_DMA_Init+0x128>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80088d4:	4332      	orrs	r2, r6
 80088d6:	432a      	orrs	r2, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 80088d8:	4302      	orrs	r2, r0

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80088da:	6a60      	ldr	r0, [r4, #36]	; 0x24
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80088dc:	4039      	ands	r1, r7
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80088de:	2804      	cmp	r0, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80088e0:	ea41 0102 	orr.w	r1, r1, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80088e4:	d029      	beq.n	800893a <HAL_DMA_Init+0xba>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 80088e6:	6019      	str	r1, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 80088e8:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80088ea:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 80088ee:	4310      	orrs	r0, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80088f0:	b2da      	uxtb	r2, r3
 80088f2:	492e      	ldr	r1, [pc, #184]	; (80089ac <HAL_DMA_Init+0x12c>)
  hdma->Instance->FCR = tmp;
 80088f4:	6158      	str	r0, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80088f6:	3a10      	subs	r2, #16
 80088f8:	fba1 0102 	umull	r0, r1, r1, r2
 80088fc:	0909      	lsrs	r1, r1, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80088fe:	482c      	ldr	r0, [pc, #176]	; (80089b0 <HAL_DMA_Init+0x130>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8008900:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8008904:	5c41      	ldrb	r1, [r0, r1]
 8008906:	65e1      	str	r1, [r4, #92]	; 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8008908:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 800890c:	2a5f      	cmp	r2, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800890e:	bf88      	it	hi
 8008910:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008912:	223f      	movs	r2, #63	; 0x3f
 8008914:	408a      	lsls	r2, r1
  hdma->State = HAL_DMA_STATE_READY;
 8008916:	2501      	movs	r5, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008918:	2100      	movs	r1, #0
 800891a:	65a3      	str	r3, [r4, #88]	; 0x58
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800891c:	609a      	str	r2, [r3, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800891e:	6561      	str	r1, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8008920:	f884 5035 	strb.w	r5, [r4, #53]	; 0x35
  return HAL_OK;
 8008924:	4608      	mov	r0, r1
}
 8008926:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8008928:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800892a:	2220      	movs	r2, #32
 800892c:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800892e:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      return HAL_TIMEOUT;
 8008932:	4618      	mov	r0, r3
}
 8008934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
 8008936:	2001      	movs	r0, #1
}
 8008938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800893a:	e9d4 500b 	ldrd	r5, r0, [r4, #44]	; 0x2c
 800893e:	4328      	orrs	r0, r5
 8008940:	4301      	orrs	r1, r0
    tmp |= hdma->Init.FIFOThreshold;
 8008942:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  hdma->Instance->CR = tmp;  
 8008944:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 8008946:	6958      	ldr	r0, [r3, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8008948:	f020 0007 	bic.w	r0, r0, #7
 800894c:	4310      	orrs	r0, r2
    tmp |= hdma->Init.FIFOThreshold;
 800894e:	f040 0004 	orr.w	r0, r0, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8008952:	2d00      	cmp	r5, #0
 8008954:	d0cc      	beq.n	80088f0 <HAL_DMA_Init+0x70>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8008956:	b17e      	cbz	r6, 8008978 <HAL_DMA_Init+0xf8>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8008958:	f5b6 5f00 	cmp.w	r6, #8192	; 0x2000
 800895c:	d012      	beq.n	8008984 <HAL_DMA_Init+0x104>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 800895e:	2a02      	cmp	r2, #2
 8008960:	d903      	bls.n	800896a <HAL_DMA_Init+0xea>
 8008962:	2a03      	cmp	r2, #3
 8008964:	d1c4      	bne.n	80088f0 <HAL_DMA_Init+0x70>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8008966:	01ea      	lsls	r2, r5, #7
 8008968:	d5c2      	bpl.n	80088f0 <HAL_DMA_Init+0x70>
        hdma->State = HAL_DMA_STATE_READY;
 800896a:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800896c:	2240      	movs	r2, #64	; 0x40
 800896e:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8008970:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        return HAL_ERROR; 
 8008974:	4618      	mov	r0, r3
}
 8008976:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (tmp)
 8008978:	2a01      	cmp	r2, #1
 800897a:	d011      	beq.n	80089a0 <HAL_DMA_Init+0x120>
 800897c:	f032 0202 	bics.w	r2, r2, #2
 8008980:	d1b6      	bne.n	80088f0 <HAL_DMA_Init+0x70>
 8008982:	e7f0      	b.n	8008966 <HAL_DMA_Init+0xe6>
    switch (tmp)
 8008984:	2a03      	cmp	r2, #3
 8008986:	d8b3      	bhi.n	80088f0 <HAL_DMA_Init+0x70>
 8008988:	a101      	add	r1, pc, #4	; (adr r1, 8008990 <HAL_DMA_Init+0x110>)
 800898a:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800898e:	bf00      	nop
 8008990:	0800896b 	.word	0x0800896b
 8008994:	08008967 	.word	0x08008967
 8008998:	0800896b 	.word	0x0800896b
 800899c:	080089a1 	.word	0x080089a1
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80089a0:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80089a4:	d1a4      	bne.n	80088f0 <HAL_DMA_Init+0x70>
 80089a6:	e7e0      	b.n	800896a <HAL_DMA_Init+0xea>
 80089a8:	f010803f 	.word	0xf010803f
 80089ac:	aaaaaaab 	.word	0xaaaaaaab
 80089b0:	08027f70 	.word	0x08027f70

080089b4 <HAL_DMA_Start_IT>:
{
 80089b4:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(hdma);
 80089b6:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80089ba:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __HAL_LOCK(hdma);
 80089bc:	2c01      	cmp	r4, #1
 80089be:	d034      	beq.n	8008a2a <HAL_DMA_Start_IT+0x76>
  if(HAL_DMA_STATE_READY == hdma->State)
 80089c0:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  __HAL_LOCK(hdma);
 80089c4:	2501      	movs	r5, #1
  if(HAL_DMA_STATE_READY == hdma->State)
 80089c6:	42ac      	cmp	r4, r5
  __HAL_LOCK(hdma);
 80089c8:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 80089cc:	d005      	beq.n	80089da <HAL_DMA_Start_IT+0x26>
    __HAL_UNLOCK(hdma);	  
 80089ce:	2300      	movs	r3, #0
 80089d0:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
}
 80089d4:	bcf0      	pop	{r4, r5, r6, r7}
    status = HAL_BUSY;
 80089d6:	2002      	movs	r0, #2
}
 80089d8:	4770      	bx	lr
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80089da:	6804      	ldr	r4, [r0, #0]
    hdma->State = HAL_DMA_STATE_BUSY;
 80089dc:	2702      	movs	r7, #2
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80089de:	2500      	movs	r5, #0
    hdma->State = HAL_DMA_STATE_BUSY;
 80089e0:	f880 7035 	strb.w	r7, [r0, #53]	; 0x35
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80089e4:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80089e6:	6825      	ldr	r5, [r4, #0]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80089e8:	6887      	ldr	r7, [r0, #8]
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80089ea:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80089ee:	2f40      	cmp	r7, #64	; 0x40
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80089f0:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 80089f2:	6063      	str	r3, [r4, #4]
    hdma->Instance->PAR = DstAddress;
 80089f4:	bf0a      	itet	eq
 80089f6:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 80089f8:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = SrcAddress;
 80089fa:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80089fc:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = DstAddress;
 80089fe:	bf18      	it	ne
 8008a00:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008a02:	233f      	movs	r3, #63	; 0x3f
 8008a04:	408b      	lsls	r3, r1
    if(hdma->XferHalfCpltCallback != NULL)
 8008a06:	6c02      	ldr	r2, [r0, #64]	; 0x40
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008a08:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8008a0a:	6823      	ldr	r3, [r4, #0]
 8008a0c:	f043 0316 	orr.w	r3, r3, #22
 8008a10:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 8008a12:	b11a      	cbz	r2, 8008a1c <HAL_DMA_Start_IT+0x68>
      hdma->Instance->CR  |= DMA_IT_HT;
 8008a14:	6823      	ldr	r3, [r4, #0]
 8008a16:	f043 0308 	orr.w	r3, r3, #8
 8008a1a:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8008a1c:	6823      	ldr	r3, [r4, #0]
 8008a1e:	f043 0301 	orr.w	r3, r3, #1
 8008a22:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008a24:	2000      	movs	r0, #0
}
 8008a26:	bcf0      	pop	{r4, r5, r6, r7}
 8008a28:	4770      	bx	lr
  __HAL_LOCK(hdma);
 8008a2a:	2002      	movs	r0, #2
}
 8008a2c:	bcf0      	pop	{r4, r5, r6, r7}
 8008a2e:	4770      	bx	lr

08008a30 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008a30:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008a34:	2b02      	cmp	r3, #2
 8008a36:	d003      	beq.n	8008a40 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008a38:	2380      	movs	r3, #128	; 0x80
 8008a3a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008a3c:	2001      	movs	r0, #1
 8008a3e:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 8008a40:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008a42:	2305      	movs	r3, #5
 8008a44:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008a48:	6813      	ldr	r3, [r2, #0]
 8008a4a:	f023 0301 	bic.w	r3, r3, #1
 8008a4e:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 8008a50:	2000      	movs	r0, #0
}
 8008a52:	4770      	bx	lr

08008a54 <HAL_DMA_IRQHandler>:
{
 8008a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a58:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8008a5a:	2300      	movs	r3, #0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8008a5c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __IO uint32_t count = 0U;
 8008a5e:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8008a60:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 8008a62:	6834      	ldr	r4, [r6, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8008a64:	4971      	ldr	r1, [pc, #452]	; (8008c2c <HAL_DMA_IRQHandler+0x1d8>)
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8008a66:	2208      	movs	r2, #8
 8008a68:	409a      	lsls	r2, r3
 8008a6a:	4222      	tst	r2, r4
  uint32_t timeout = SystemCoreClock / 9600U;
 8008a6c:	680d      	ldr	r5, [r1, #0]
{
 8008a6e:	4680      	mov	r8, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8008a70:	d004      	beq.n	8008a7c <HAL_DMA_IRQHandler+0x28>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8008a72:	6801      	ldr	r1, [r0, #0]
 8008a74:	680f      	ldr	r7, [r1, #0]
 8008a76:	0778      	lsls	r0, r7, #29
 8008a78:	f100 808a 	bmi.w	8008b90 <HAL_DMA_IRQHandler+0x13c>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8008a7c:	2201      	movs	r2, #1
 8008a7e:	409a      	lsls	r2, r3
 8008a80:	4222      	tst	r2, r4
 8008a82:	d004      	beq.n	8008a8e <HAL_DMA_IRQHandler+0x3a>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8008a84:	f8d8 1000 	ldr.w	r1, [r8]
 8008a88:	6949      	ldr	r1, [r1, #20]
 8008a8a:	0609      	lsls	r1, r1, #24
 8008a8c:	d478      	bmi.n	8008b80 <HAL_DMA_IRQHandler+0x12c>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8008a8e:	2204      	movs	r2, #4
 8008a90:	409a      	lsls	r2, r3
 8008a92:	4222      	tst	r2, r4
 8008a94:	d004      	beq.n	8008aa0 <HAL_DMA_IRQHandler+0x4c>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8008a96:	f8d8 1000 	ldr.w	r1, [r8]
 8008a9a:	6809      	ldr	r1, [r1, #0]
 8008a9c:	078f      	lsls	r7, r1, #30
 8008a9e:	d467      	bmi.n	8008b70 <HAL_DMA_IRQHandler+0x11c>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8008aa0:	2210      	movs	r2, #16
 8008aa2:	409a      	lsls	r2, r3
 8008aa4:	4222      	tst	r2, r4
 8008aa6:	d004      	beq.n	8008ab2 <HAL_DMA_IRQHandler+0x5e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8008aa8:	f8d8 1000 	ldr.w	r1, [r8]
 8008aac:	680f      	ldr	r7, [r1, #0]
 8008aae:	0738      	lsls	r0, r7, #28
 8008ab0:	d449      	bmi.n	8008b46 <HAL_DMA_IRQHandler+0xf2>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8008ab2:	2220      	movs	r2, #32
 8008ab4:	409a      	lsls	r2, r3
 8008ab6:	4222      	tst	r2, r4
 8008ab8:	d017      	beq.n	8008aea <HAL_DMA_IRQHandler+0x96>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8008aba:	f8d8 1000 	ldr.w	r1, [r8]
 8008abe:	680c      	ldr	r4, [r1, #0]
 8008ac0:	06e0      	lsls	r0, r4, #27
 8008ac2:	d512      	bpl.n	8008aea <HAL_DMA_IRQHandler+0x96>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8008ac4:	60b2      	str	r2, [r6, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8008ac6:	f898 2035 	ldrb.w	r2, [r8, #53]	; 0x35
 8008aca:	2a05      	cmp	r2, #5
 8008acc:	d073      	beq.n	8008bb6 <HAL_DMA_IRQHandler+0x162>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8008ace:	680b      	ldr	r3, [r1, #0]
 8008ad0:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8008ad4:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8008ad6:	f000 8090 	beq.w	8008bfa <HAL_DMA_IRQHandler+0x1a6>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8008ada:	0319      	lsls	r1, r3, #12
 8008adc:	f140 809b 	bpl.w	8008c16 <HAL_DMA_IRQHandler+0x1c2>
        if(hdma->XferCpltCallback != NULL)
 8008ae0:	f8d8 303c 	ldr.w	r3, [r8, #60]	; 0x3c
 8008ae4:	b10b      	cbz	r3, 8008aea <HAL_DMA_IRQHandler+0x96>
          hdma->XferCpltCallback(hdma);
 8008ae6:	4640      	mov	r0, r8
 8008ae8:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8008aea:	f8d8 3054 	ldr.w	r3, [r8, #84]	; 0x54
 8008aee:	b33b      	cbz	r3, 8008b40 <HAL_DMA_IRQHandler+0xec>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8008af0:	f8d8 3054 	ldr.w	r3, [r8, #84]	; 0x54
 8008af4:	07da      	lsls	r2, r3, #31
 8008af6:	d51b      	bpl.n	8008b30 <HAL_DMA_IRQHandler+0xdc>
      __HAL_DMA_DISABLE(hdma);
 8008af8:	f8d8 2000 	ldr.w	r2, [r8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8008afc:	494c      	ldr	r1, [pc, #304]	; (8008c30 <HAL_DMA_IRQHandler+0x1dc>)
      hdma->State = HAL_DMA_STATE_ABORT;
 8008afe:	2305      	movs	r3, #5
 8008b00:	f888 3035 	strb.w	r3, [r8, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8008b04:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8008b06:	fba1 1505 	umull	r1, r5, r1, r5
      __HAL_DMA_DISABLE(hdma);
 8008b0a:	f023 0301 	bic.w	r3, r3, #1
 8008b0e:	6013      	str	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8008b10:	0aad      	lsrs	r5, r5, #10
      __HAL_DMA_DISABLE(hdma);
 8008b12:	e002      	b.n	8008b1a <HAL_DMA_IRQHandler+0xc6>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8008b14:	6813      	ldr	r3, [r2, #0]
 8008b16:	07db      	lsls	r3, r3, #31
 8008b18:	d504      	bpl.n	8008b24 <HAL_DMA_IRQHandler+0xd0>
        if (++count > timeout)
 8008b1a:	9b01      	ldr	r3, [sp, #4]
 8008b1c:	3301      	adds	r3, #1
 8008b1e:	42ab      	cmp	r3, r5
 8008b20:	9301      	str	r3, [sp, #4]
 8008b22:	d9f7      	bls.n	8008b14 <HAL_DMA_IRQHandler+0xc0>
      hdma->State = HAL_DMA_STATE_READY;
 8008b24:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 8008b26:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 8008b28:	f888 2035 	strb.w	r2, [r8, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 8008b2c:	f888 3034 	strb.w	r3, [r8, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 8008b30:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
 8008b34:	b123      	cbz	r3, 8008b40 <HAL_DMA_IRQHandler+0xec>
      hdma->XferErrorCallback(hdma);
 8008b36:	4640      	mov	r0, r8
}
 8008b38:	b002      	add	sp, #8
 8008b3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
      hdma->XferErrorCallback(hdma);
 8008b3e:	4718      	bx	r3
}
 8008b40:	b002      	add	sp, #8
 8008b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8008b46:	60b2      	str	r2, [r6, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8008b48:	680a      	ldr	r2, [r1, #0]
 8008b4a:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8008b4e:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8008b50:	d12a      	bne.n	8008ba8 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8008b52:	05d7      	lsls	r7, r2, #23
 8008b54:	d403      	bmi.n	8008b5e <HAL_DMA_IRQHandler+0x10a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8008b56:	680a      	ldr	r2, [r1, #0]
 8008b58:	f022 0208 	bic.w	r2, r2, #8
 8008b5c:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 8008b5e:	f8d8 2040 	ldr.w	r2, [r8, #64]	; 0x40
 8008b62:	2a00      	cmp	r2, #0
 8008b64:	d0a5      	beq.n	8008ab2 <HAL_DMA_IRQHandler+0x5e>
          hdma->XferHalfCpltCallback(hdma);
 8008b66:	4640      	mov	r0, r8
 8008b68:	4790      	blx	r2
 8008b6a:	f8d8 305c 	ldr.w	r3, [r8, #92]	; 0x5c
 8008b6e:	e7a0      	b.n	8008ab2 <HAL_DMA_IRQHandler+0x5e>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8008b70:	60b2      	str	r2, [r6, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8008b72:	f8d8 2054 	ldr.w	r2, [r8, #84]	; 0x54
 8008b76:	f042 0204 	orr.w	r2, r2, #4
 8008b7a:	f8c8 2054 	str.w	r2, [r8, #84]	; 0x54
 8008b7e:	e78f      	b.n	8008aa0 <HAL_DMA_IRQHandler+0x4c>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8008b80:	60b2      	str	r2, [r6, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8008b82:	f8d8 2054 	ldr.w	r2, [r8, #84]	; 0x54
 8008b86:	f042 0202 	orr.w	r2, r2, #2
 8008b8a:	f8c8 2054 	str.w	r2, [r8, #84]	; 0x54
 8008b8e:	e77e      	b.n	8008a8e <HAL_DMA_IRQHandler+0x3a>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8008b90:	680f      	ldr	r7, [r1, #0]
 8008b92:	f027 0704 	bic.w	r7, r7, #4
 8008b96:	600f      	str	r7, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8008b98:	60b2      	str	r2, [r6, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8008b9a:	f8d8 2054 	ldr.w	r2, [r8, #84]	; 0x54
 8008b9e:	f042 0201 	orr.w	r2, r2, #1
 8008ba2:	f8c8 2054 	str.w	r2, [r8, #84]	; 0x54
 8008ba6:	e769      	b.n	8008a7c <HAL_DMA_IRQHandler+0x28>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8008ba8:	0312      	lsls	r2, r2, #12
 8008baa:	d5d8      	bpl.n	8008b5e <HAL_DMA_IRQHandler+0x10a>
          if(hdma->XferM1HalfCpltCallback != NULL)
 8008bac:	f8d8 2048 	ldr.w	r2, [r8, #72]	; 0x48
 8008bb0:	2a00      	cmp	r2, #0
 8008bb2:	d1d8      	bne.n	8008b66 <HAL_DMA_IRQHandler+0x112>
 8008bb4:	e77d      	b.n	8008ab2 <HAL_DMA_IRQHandler+0x5e>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8008bb6:	680a      	ldr	r2, [r1, #0]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8008bb8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8008bbc:	f022 0216 	bic.w	r2, r2, #22
 8008bc0:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8008bc2:	694a      	ldr	r2, [r1, #20]
 8008bc4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008bc8:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8008bca:	b354      	cbz	r4, 8008c22 <HAL_DMA_IRQHandler+0x1ce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8008bcc:	680a      	ldr	r2, [r1, #0]
 8008bce:	f022 0208 	bic.w	r2, r2, #8
 8008bd2:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008bd4:	223f      	movs	r2, #63	; 0x3f
        if(hdma->XferAbortCallback != NULL)
 8008bd6:	f8d8 1050 	ldr.w	r1, [r8, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008bda:	fa02 f303 	lsl.w	r3, r2, r3
        hdma->State = HAL_DMA_STATE_READY;
 8008bde:	2401      	movs	r4, #1
        __HAL_UNLOCK(hdma);
 8008be0:	2200      	movs	r2, #0
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008be2:	60b3      	str	r3, [r6, #8]
        hdma->State = HAL_DMA_STATE_READY;
 8008be4:	f888 4035 	strb.w	r4, [r8, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8008be8:	f888 2034 	strb.w	r2, [r8, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 8008bec:	2900      	cmp	r1, #0
 8008bee:	d0a7      	beq.n	8008b40 <HAL_DMA_IRQHandler+0xec>
          hdma->XferAbortCallback(hdma);
 8008bf0:	4640      	mov	r0, r8
}
 8008bf2:	b002      	add	sp, #8
 8008bf4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
          hdma->XferAbortCallback(hdma);
 8008bf8:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8008bfa:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 8008bfe:	f47f af6f 	bne.w	8008ae0 <HAL_DMA_IRQHandler+0x8c>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8008c02:	680a      	ldr	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8008c04:	2401      	movs	r4, #1
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8008c06:	f022 0210 	bic.w	r2, r2, #16
 8008c0a:	600a      	str	r2, [r1, #0]
          __HAL_UNLOCK(hdma);
 8008c0c:	f888 3034 	strb.w	r3, [r8, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 8008c10:	f888 4035 	strb.w	r4, [r8, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 8008c14:	e764      	b.n	8008ae0 <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1CpltCallback != NULL)
 8008c16:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
 8008c1a:	2b00      	cmp	r3, #0
 8008c1c:	f47f af63 	bne.w	8008ae6 <HAL_DMA_IRQHandler+0x92>
 8008c20:	e763      	b.n	8008aea <HAL_DMA_IRQHandler+0x96>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8008c22:	f8d8 2048 	ldr.w	r2, [r8, #72]	; 0x48
 8008c26:	2a00      	cmp	r2, #0
 8008c28:	d1d0      	bne.n	8008bcc <HAL_DMA_IRQHandler+0x178>
 8008c2a:	e7d3      	b.n	8008bd4 <HAL_DMA_IRQHandler+0x180>
 8008c2c:	200000bc 	.word	0x200000bc
 8008c30:	1b4e81b5 	.word	0x1b4e81b5

08008c34 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8008c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c38:	468b      	mov	fp, r1
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008c3a:	f8df a214 	ldr.w	sl, [pc, #532]	; 8008e50 <HAL_GPIO_Init+0x21c>
 8008c3e:	6809      	ldr	r1, [r1, #0]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008c40:	f8df c210 	ldr.w	ip, [pc, #528]	; 8008e54 <HAL_GPIO_Init+0x220>
{
 8008c44:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008c46:	2300      	movs	r3, #0
 8008c48:	46d9      	mov	r9, fp
 8008c4a:	e003      	b.n	8008c54 <HAL_GPIO_Init+0x20>
 8008c4c:	3301      	adds	r3, #1
 8008c4e:	2b10      	cmp	r3, #16
 8008c50:	f000 8089 	beq.w	8008d66 <HAL_GPIO_Init+0x132>
    ioposition = 0x01U << position;
 8008c54:	2201      	movs	r2, #1
 8008c56:	409a      	lsls	r2, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008c58:	ea02 0b01 	and.w	fp, r2, r1
    if(iocurrent == ioposition)
 8008c5c:	438a      	bics	r2, r1
 8008c5e:	d1f5      	bne.n	8008c4c <HAL_GPIO_Init+0x18>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008c60:	f8d9 5004 	ldr.w	r5, [r9, #4]
 8008c64:	f005 0203 	and.w	r2, r5, #3
 8008c68:	1e54      	subs	r4, r2, #1
 8008c6a:	2c01      	cmp	r4, #1
 8008c6c:	ea4f 0743 	mov.w	r7, r3, lsl #1
 8008c70:	d97c      	bls.n	8008d6c <HAL_GPIO_Init+0x138>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8008c72:	2a03      	cmp	r2, #3
 8008c74:	f040 80bb 	bne.w	8008dee <HAL_GPIO_Init+0x1ba>
 8008c78:	40ba      	lsls	r2, r7
 8008c7a:	43d4      	mvns	r4, r2
 8008c7c:	9400      	str	r4, [sp, #0]
      temp = GPIOx->MODER;
 8008c7e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8008c80:	9c00      	ldr	r4, [sp, #0]
 8008c82:	403c      	ands	r4, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8008c84:	4322      	orrs	r2, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008c86:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8008c8a:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008c8c:	d0de      	beq.n	8008c4c <HAL_GPIO_Init+0x18>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008c8e:	2200      	movs	r2, #0
 8008c90:	9203      	str	r2, [sp, #12]
 8008c92:	f8da 2044 	ldr.w	r2, [sl, #68]	; 0x44
 8008c96:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008c9a:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
 8008c9e:	f8da 2044 	ldr.w	r2, [sl, #68]	; 0x44
 8008ca2:	f023 0403 	bic.w	r4, r3, #3
 8008ca6:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8008caa:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8008cae:	f504 349c 	add.w	r4, r4, #79872	; 0x13800
 8008cb2:	9203      	str	r2, [sp, #12]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008cb4:	f003 0603 	and.w	r6, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008cb8:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008cba:	68a7      	ldr	r7, [r4, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008cbc:	00b6      	lsls	r6, r6, #2
 8008cbe:	220f      	movs	r2, #15
 8008cc0:	40b2      	lsls	r2, r6
 8008cc2:	ea27 0202 	bic.w	r2, r7, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008cc6:	4f5b      	ldr	r7, [pc, #364]	; (8008e34 <HAL_GPIO_Init+0x200>)
 8008cc8:	42b8      	cmp	r0, r7
 8008cca:	d020      	beq.n	8008d0e <HAL_GPIO_Init+0xda>
 8008ccc:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8008cd0:	42b8      	cmp	r0, r7
 8008cd2:	f000 8091 	beq.w	8008df8 <HAL_GPIO_Init+0x1c4>
 8008cd6:	4f58      	ldr	r7, [pc, #352]	; (8008e38 <HAL_GPIO_Init+0x204>)
 8008cd8:	42b8      	cmp	r0, r7
 8008cda:	f000 8092 	beq.w	8008e02 <HAL_GPIO_Init+0x1ce>
 8008cde:	4f57      	ldr	r7, [pc, #348]	; (8008e3c <HAL_GPIO_Init+0x208>)
 8008ce0:	42b8      	cmp	r0, r7
 8008ce2:	f000 8093 	beq.w	8008e0c <HAL_GPIO_Init+0x1d8>
 8008ce6:	4f56      	ldr	r7, [pc, #344]	; (8008e40 <HAL_GPIO_Init+0x20c>)
 8008ce8:	42b8      	cmp	r0, r7
 8008cea:	f000 8094 	beq.w	8008e16 <HAL_GPIO_Init+0x1e2>
 8008cee:	4f55      	ldr	r7, [pc, #340]	; (8008e44 <HAL_GPIO_Init+0x210>)
 8008cf0:	42b8      	cmp	r0, r7
 8008cf2:	f000 8095 	beq.w	8008e20 <HAL_GPIO_Init+0x1ec>
 8008cf6:	4f54      	ldr	r7, [pc, #336]	; (8008e48 <HAL_GPIO_Init+0x214>)
 8008cf8:	42b8      	cmp	r0, r7
 8008cfa:	f000 8096 	beq.w	8008e2a <HAL_GPIO_Init+0x1f6>
 8008cfe:	4f53      	ldr	r7, [pc, #332]	; (8008e4c <HAL_GPIO_Init+0x218>)
 8008d00:	42b8      	cmp	r0, r7
 8008d02:	bf0c      	ite	eq
 8008d04:	2707      	moveq	r7, #7
 8008d06:	2708      	movne	r7, #8
 8008d08:	fa07 f606 	lsl.w	r6, r7, r6
 8008d0c:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008d0e:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 8008d10:	f8dc 2008 	ldr.w	r2, [ip, #8]
        temp &= ~((uint32_t)iocurrent);
 8008d14:	ea6f 060b 	mvn.w	r6, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8008d18:	02ec      	lsls	r4, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8008d1a:	bf54      	ite	pl
 8008d1c:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
 8008d1e:	ea4b 0202 	orrmi.w	r2, fp, r2
        }
        EXTI->RTSR = temp;
 8008d22:	f8cc 2008 	str.w	r2, [ip, #8]

        temp = EXTI->FTSR;
 8008d26:	f8dc 400c 	ldr.w	r4, [ip, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8008d2a:	02aa      	lsls	r2, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8008d2c:	bf54      	ite	pl
 8008d2e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8008d30:	ea4b 0404 	orrmi.w	r4, fp, r4
        }
        EXTI->FTSR = temp;
 8008d34:	f8cc 400c 	str.w	r4, [ip, #12]

        temp = EXTI->EMR;
 8008d38:	f8dc 4004 	ldr.w	r4, [ip, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8008d3c:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8008d3e:	bf54      	ite	pl
 8008d40:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8008d42:	ea4b 0404 	orrmi.w	r4, fp, r4
        }
        EXTI->EMR = temp;
 8008d46:	f8cc 4004 	str.w	r4, [ip, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8008d4a:	f8dc 2000 	ldr.w	r2, [ip]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8008d4e:	03ec      	lsls	r4, r5, #15
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d50:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8008d54:	bf54      	ite	pl
 8008d56:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
 8008d58:	ea4b 0202 	orrmi.w	r2, fp, r2
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d5c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8008d5e:	f8cc 2000 	str.w	r2, [ip]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d62:	f47f af77 	bne.w	8008c54 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8008d66:	b005      	add	sp, #20
 8008d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp = GPIOx->OSPEEDR; 
 8008d6c:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008d6e:	2403      	movs	r4, #3
 8008d70:	40bc      	lsls	r4, r7
 8008d72:	ea26 0e04 	bic.w	lr, r6, r4
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008d76:	f8d9 600c 	ldr.w	r6, [r9, #12]
 8008d7a:	40be      	lsls	r6, r7
 8008d7c:	ea46 060e 	orr.w	r6, r6, lr
        GPIOx->OSPEEDR = temp;
 8008d80:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8008d82:	f8d0 e004 	ldr.w	lr, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008d86:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008d8a:	ea2e 0e0b 	bic.w	lr, lr, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008d8e:	409e      	lsls	r6, r3
 8008d90:	ea46 060e 	orr.w	r6, r6, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008d94:	43e4      	mvns	r4, r4
 8008d96:	9400      	str	r4, [sp, #0]
        GPIOx->OTYPER = temp;
 8008d98:	6046      	str	r6, [r0, #4]
        temp = GPIOx->PUPDR;
 8008d9a:	68c6      	ldr	r6, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008d9c:	9c00      	ldr	r4, [sp, #0]
 8008d9e:	ea06 0e04 	and.w	lr, r6, r4
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008da2:	f8d9 6008 	ldr.w	r6, [r9, #8]
 8008da6:	40be      	lsls	r6, r7
 8008da8:	ea46 060e 	orr.w	r6, r6, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008dac:	2a02      	cmp	r2, #2
        GPIOx->PUPDR = temp;
 8008dae:	60c6      	str	r6, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008db0:	d001      	beq.n	8008db6 <HAL_GPIO_Init+0x182>
 8008db2:	40ba      	lsls	r2, r7
 8008db4:	e763      	b.n	8008c7e <HAL_GPIO_Init+0x4a>
        temp = GPIOx->AFR[position >> 3U];
 8008db6:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 8008dba:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008dbe:	f003 0e07 	and.w	lr, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8008dc2:	f8d8 4020 	ldr.w	r4, [r8, #32]
 8008dc6:	9401      	str	r4, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008dc8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8008dcc:	240f      	movs	r4, #15
 8008dce:	fa04 f60e 	lsl.w	r6, r4, lr
 8008dd2:	9c01      	ldr	r4, [sp, #4]
 8008dd4:	ea24 0606 	bic.w	r6, r4, r6
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008dd8:	f8d9 4010 	ldr.w	r4, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008ddc:	9601      	str	r6, [sp, #4]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008dde:	fa04 f60e 	lsl.w	r6, r4, lr
 8008de2:	9c01      	ldr	r4, [sp, #4]
 8008de4:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3U] = temp;
 8008de6:	40ba      	lsls	r2, r7
 8008de8:	f8c8 6020 	str.w	r6, [r8, #32]
 8008dec:	e747      	b.n	8008c7e <HAL_GPIO_Init+0x4a>
 8008dee:	2403      	movs	r4, #3
 8008df0:	40bc      	lsls	r4, r7
 8008df2:	43e4      	mvns	r4, r4
 8008df4:	9400      	str	r4, [sp, #0]
 8008df6:	e7d0      	b.n	8008d9a <HAL_GPIO_Init+0x166>
 8008df8:	2701      	movs	r7, #1
 8008dfa:	fa07 f606 	lsl.w	r6, r7, r6
 8008dfe:	4332      	orrs	r2, r6
 8008e00:	e785      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e02:	2702      	movs	r7, #2
 8008e04:	fa07 f606 	lsl.w	r6, r7, r6
 8008e08:	4332      	orrs	r2, r6
 8008e0a:	e780      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e0c:	2703      	movs	r7, #3
 8008e0e:	fa07 f606 	lsl.w	r6, r7, r6
 8008e12:	4332      	orrs	r2, r6
 8008e14:	e77b      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e16:	2704      	movs	r7, #4
 8008e18:	fa07 f606 	lsl.w	r6, r7, r6
 8008e1c:	4332      	orrs	r2, r6
 8008e1e:	e776      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e20:	2705      	movs	r7, #5
 8008e22:	fa07 f606 	lsl.w	r6, r7, r6
 8008e26:	4332      	orrs	r2, r6
 8008e28:	e771      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e2a:	2706      	movs	r7, #6
 8008e2c:	fa07 f606 	lsl.w	r6, r7, r6
 8008e30:	4332      	orrs	r2, r6
 8008e32:	e76c      	b.n	8008d0e <HAL_GPIO_Init+0xda>
 8008e34:	40020000 	.word	0x40020000
 8008e38:	40020800 	.word	0x40020800
 8008e3c:	40020c00 	.word	0x40020c00
 8008e40:	40021000 	.word	0x40021000
 8008e44:	40021400 	.word	0x40021400
 8008e48:	40021800 	.word	0x40021800
 8008e4c:	40021c00 	.word	0x40021c00
 8008e50:	40023800 	.word	0x40023800
 8008e54:	40013c00 	.word	0x40013c00

08008e58 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008e58:	b902      	cbnz	r2, 8008e5c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008e5a:	0409      	lsls	r1, r1, #16
 8008e5c:	6181      	str	r1, [r0, #24]
  }
}
 8008e5e:	4770      	bx	lr

08008e60 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8008e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e62:	b08b      	sub	sp, #44	; 0x2c
  USB_OTG_GlobalTypeDef *USBx;
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8008e64:	2800      	cmp	r0, #0
 8008e66:	f000 8083 	beq.w	8008f70 <HAL_PCD_Init+0x110>
  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

  USBx = hpcd->Instance;

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8008e6a:	f890 34bd 	ldrb.w	r3, [r0, #1213]	; 0x4bd
  USBx = hpcd->Instance;
 8008e6e:	6804      	ldr	r4, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8008e70:	4605      	mov	r5, r0
 8008e72:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008e76:	2b00      	cmp	r3, #0
 8008e78:	d074      	beq.n	8008f64 <HAL_PCD_Init+0x104>
 8008e7a:	4620      	mov	r0, r4
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8008e7c:	2303      	movs	r3, #3
 8008e7e:	f885 34bd 	strb.w	r3, [r5, #1213]	; 0x4bd

  /* Disable DMA mode for FS instance */
  if ((USBx->CID & (0x1U << 8)) == 0U)
 8008e82:	6be3      	ldr	r3, [r4, #60]	; 0x3c

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8008e84:	462e      	mov	r6, r5
  if ((USBx->CID & (0x1U << 8)) == 0U)
 8008e86:	f413 7380 	ands.w	r3, r3, #256	; 0x100
    hpcd->Init.dma_enable = 0U;
 8008e8a:	bf08      	it	eq
 8008e8c:	612b      	streq	r3, [r5, #16]
  __HAL_PCD_DISABLE(hpcd);
 8008e8e:	f002 fb11 	bl	800b4b4 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8008e92:	f856 cb10 	ldr.w	ip, [r6], #16
 8008e96:	4637      	mov	r7, r6
 8008e98:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008e9a:	466c      	mov	r4, sp
 8008e9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e9e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008ea0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008ea2:	e897 0003 	ldmia.w	r7, {r0, r1}
 8008ea6:	e884 0003 	stmia.w	r4, {r0, r1}
 8008eaa:	1d2f      	adds	r7, r5, #4
 8008eac:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 8008eb0:	4660      	mov	r0, ip
 8008eb2:	f002 fa3b 	bl	800b32c <USB_CoreInit>
 8008eb6:	4604      	mov	r4, r0
 8008eb8:	b130      	cbz	r0, 8008ec8 <HAL_PCD_Init+0x68>

  /* Init Device */
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
    return HAL_ERROR;
 8008eba:	2401      	movs	r4, #1
    hpcd->State = HAL_PCD_STATE_ERROR;
 8008ebc:	2302      	movs	r3, #2
  }
#endif /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 8008ebe:	4620      	mov	r0, r4
    hpcd->State = HAL_PCD_STATE_ERROR;
 8008ec0:	f885 34bd 	strb.w	r3, [r5, #1213]	; 0x4bd
}
 8008ec4:	b00b      	add	sp, #44	; 0x2c
 8008ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
 8008ec8:	4601      	mov	r1, r0
 8008eca:	6828      	ldr	r0, [r5, #0]
 8008ecc:	f002 fafa 	bl	800b4c4 <USB_SetCurrentMode>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008ed0:	6868      	ldr	r0, [r5, #4]
 8008ed2:	b358      	cbz	r0, 8008f2c <HAL_PCD_Init+0xcc>
 8008ed4:	4622      	mov	r2, r4
    hpcd->IN_ep[i].is_in = 1U;
 8008ed6:	f04f 0e01 	mov.w	lr, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8008eda:	4621      	mov	r1, r4
    hpcd->IN_ep[i].is_in = 1U;
 8008edc:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8008ee0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008ee4:	f102 0c01 	add.w	ip, r2, #1
    hpcd->IN_ep[i].num = i;
 8008ee8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    hpcd->IN_ep[i].tx_fifo_num = i;
 8008eec:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008ef0:	fa5f f28c 	uxtb.w	r2, ip
 8008ef4:	4282      	cmp	r2, r0
    hpcd->IN_ep[i].xfer_buff = 0U;
 8008ef6:	e9c3 1112 	strd	r1, r1, [r3, #72]	; 0x48
    hpcd->IN_ep[i].is_in = 1U;
 8008efa:	f883 e03d 	strb.w	lr, [r3, #61]	; 0x3d
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8008efe:	f883 1040 	strb.w	r1, [r3, #64]	; 0x40
    hpcd->IN_ep[i].xfer_len = 0U;
 8008f02:	6559      	str	r1, [r3, #84]	; 0x54
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008f04:	d3ea      	bcc.n	8008edc <HAL_PCD_Init+0x7c>
    hpcd->OUT_ep[i].is_in = 0U;
 8008f06:	2200      	movs	r2, #0
 8008f08:	eb04 03c4 	add.w	r3, r4, r4, lsl #3
 8008f0c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008f10:	1c61      	adds	r1, r4, #1
    hpcd->OUT_ep[i].num = i;
 8008f12:	f883 427c 	strb.w	r4, [r3, #636]	; 0x27c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008f16:	b2cc      	uxtb	r4, r1
 8008f18:	4284      	cmp	r4, r0
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8008f1a:	e9c3 22a2 	strd	r2, r2, [r3, #648]	; 0x288
    hpcd->OUT_ep[i].is_in = 0U;
 8008f1e:	f883 227d 	strb.w	r2, [r3, #637]	; 0x27d
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8008f22:	f883 2280 	strb.w	r2, [r3, #640]	; 0x280
    hpcd->OUT_ep[i].xfer_len = 0U;
 8008f26:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8008f2a:	d3ed      	bcc.n	8008f08 <HAL_PCD_Init+0xa8>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8008f2c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008f2e:	466c      	mov	r4, sp
 8008f30:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008f32:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008f34:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008f36:	e896 0003 	ldmia.w	r6, {r0, r1}
 8008f3a:	e884 0003 	stmia.w	r4, {r0, r1}
 8008f3e:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 8008f42:	6828      	ldr	r0, [r5, #0]
 8008f44:	f002 fb48 	bl	800b5d8 <USB_DevInit>
 8008f48:	4604      	mov	r4, r0
 8008f4a:	2800      	cmp	r0, #0
 8008f4c:	d1b5      	bne.n	8008eba <HAL_PCD_Init+0x5a>
  hpcd->State = HAL_PCD_STATE_READY;
 8008f4e:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8008f50:	f885 0038 	strb.w	r0, [r5, #56]	; 0x38
  (void)USB_DevDisconnect(hpcd->Instance);
 8008f54:	6828      	ldr	r0, [r5, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8008f56:	f885 34bd 	strb.w	r3, [r5, #1213]	; 0x4bd
  (void)USB_DevDisconnect(hpcd->Instance);
 8008f5a:	f002 ff51 	bl	800be00 <USB_DevDisconnect>
}
 8008f5e:	4620      	mov	r0, r4
 8008f60:	b00b      	add	sp, #44	; 0x2c
 8008f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hpcd->Lock = HAL_UNLOCKED;
 8008f64:	f880 24bc 	strb.w	r2, [r0, #1212]	; 0x4bc
    HAL_PCD_MspInit(hpcd);
 8008f68:	f7f8 ff7c 	bl	8001e64 <HAL_PCD_MspInit>
 8008f6c:	6828      	ldr	r0, [r5, #0]
 8008f6e:	e785      	b.n	8008e7c <HAL_PCD_Init+0x1c>
    return HAL_ERROR;
 8008f70:	2401      	movs	r4, #1
}
 8008f72:	4620      	mov	r0, r4
 8008f74:	b00b      	add	sp, #44	; 0x2c
 8008f76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008f78 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8008f78:	b510      	push	{r4, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  __HAL_LOCK(hpcd);
 8008f7a:	f890 34bc 	ldrb.w	r3, [r0, #1212]	; 0x4bc
 8008f7e:	2b01      	cmp	r3, #1
{
 8008f80:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8008f82:	6800      	ldr	r0, [r0, #0]
  __HAL_LOCK(hpcd);
 8008f84:	d016      	beq.n	8008fb4 <HAL_PCD_Start+0x3c>

  if ((hpcd->Init.battery_charging_enable == 1U) &&
 8008f86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  __HAL_LOCK(hpcd);
 8008f88:	2201      	movs	r2, #1
  if ((hpcd->Init.battery_charging_enable == 1U) &&
 8008f8a:	4293      	cmp	r3, r2
  __HAL_LOCK(hpcd);
 8008f8c:	f884 24bc 	strb.w	r2, [r4, #1212]	; 0x4bc
  if ((hpcd->Init.battery_charging_enable == 1U) &&
 8008f90:	d008      	beq.n	8008fa4 <HAL_PCD_Start+0x2c>
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
  }

  __HAL_PCD_ENABLE(hpcd);
 8008f92:	f002 fa87 	bl	800b4a4 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8008f96:	6820      	ldr	r0, [r4, #0]
 8008f98:	f002 ff24 	bl	800bde4 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8008f9c:	2000      	movs	r0, #0
 8008f9e:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc

  return HAL_OK;
}
 8008fa2:	bd10      	pop	{r4, pc}
  if ((hpcd->Init.battery_charging_enable == 1U) &&
 8008fa4:	69a3      	ldr	r3, [r4, #24]
 8008fa6:	4293      	cmp	r3, r2
 8008fa8:	d0f3      	beq.n	8008f92 <HAL_PCD_Start+0x1a>
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8008faa:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008fac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008fb0:	6383      	str	r3, [r0, #56]	; 0x38
 8008fb2:	e7ee      	b.n	8008f92 <HAL_PCD_Start+0x1a>
  __HAL_LOCK(hpcd);
 8008fb4:	2002      	movs	r0, #2
}
 8008fb6:	bd10      	pop	{r4, pc}

08008fb8 <HAL_PCD_IRQHandler>:
  * @brief  Handles PCD interrupt request.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
{
 8008fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8008fbc:	6805      	ldr	r5, [r0, #0]
{
 8008fbe:	b089      	sub	sp, #36	; 0x24
 8008fc0:	4604      	mov	r4, r0
  uint32_t epnum;
  uint32_t fifoemptymsk;
  uint32_t RegVal;

  /* ensure that we are in device mode */
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8008fc2:	4628      	mov	r0, r5
 8008fc4:	f002 ff5c 	bl	800be80 <USB_GetMode>
 8008fc8:	b110      	cbz	r0, 8008fd0 <HAL_PCD_IRQHandler+0x18>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
      hpcd->Instance->GOTGINT |= RegVal;
    }
  }
}
 8008fca:	b009      	add	sp, #36	; 0x24
 8008fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8008fd0:	4682      	mov	sl, r0
 8008fd2:	6820      	ldr	r0, [r4, #0]
 8008fd4:	f002 ff22 	bl	800be1c <USB_ReadInterrupts>
 8008fd8:	2800      	cmp	r0, #0
 8008fda:	d0f6      	beq.n	8008fca <HAL_PCD_IRQHandler+0x12>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8008fdc:	f8d5 3808 	ldr.w	r3, [r5, #2056]	; 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8008fe0:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8008fe2:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8008fe6:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8008fea:	f002 ff17 	bl	800be1c <USB_ReadInterrupts>
 8008fee:	f010 0f02 	tst.w	r0, #2
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8008ff2:	6820      	ldr	r0, [r4, #0]
 8008ff4:	bf1e      	ittt	ne
 8008ff6:	6943      	ldrne	r3, [r0, #20]
 8008ff8:	f003 0302 	andne.w	r3, r3, #2
 8008ffc:	6143      	strne	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8008ffe:	f002 ff0d 	bl	800be1c <USB_ReadInterrupts>
 8009002:	f010 0f10 	tst.w	r0, #16
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8009006:	f505 6b00 	add.w	fp, r5, #2048	; 0x800
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 800900a:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 800900c:	d012      	beq.n	8009034 <HAL_PCD_IRQHandler+0x7c>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 800900e:	6983      	ldr	r3, [r0, #24]
 8009010:	f023 0310 	bic.w	r3, r3, #16
 8009014:	6183      	str	r3, [r0, #24]
      RegVal = USBx->GRXSTSP;
 8009016:	6a2e      	ldr	r6, [r5, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8009018:	f3c6 4343 	ubfx	r3, r6, #17, #4
 800901c:	2b02      	cmp	r3, #2
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 800901e:	f006 070f 	and.w	r7, r6, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8009022:	f000 82f2 	beq.w	800960a <HAL_PCD_IRQHandler+0x652>
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 8009026:	2b06      	cmp	r3, #6
 8009028:	f000 822e 	beq.w	8009488 <HAL_PCD_IRQHandler+0x4d0>
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 800902c:	6983      	ldr	r3, [r0, #24]
 800902e:	f043 0310 	orr.w	r3, r3, #16
 8009032:	6183      	str	r3, [r0, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8009034:	f002 fef2 	bl	800be1c <USB_ReadInterrupts>
 8009038:	0307      	lsls	r7, r0, #12
 800903a:	f100 81be 	bmi.w	80093ba <HAL_PCD_IRQHandler+0x402>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 800903e:	6820      	ldr	r0, [r4, #0]
 8009040:	f002 feec 	bl	800be1c <USB_ReadInterrupts>
 8009044:	0346      	lsls	r6, r0, #13
 8009046:	f100 815b 	bmi.w	8009300 <HAL_PCD_IRQHandler+0x348>
 800904a:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 800904c:	f002 fee6 	bl	800be1c <USB_ReadInterrupts>
 8009050:	2800      	cmp	r0, #0
 8009052:	f2c0 80c5 	blt.w	80091e0 <HAL_PCD_IRQHandler+0x228>
 8009056:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8009058:	f002 fee0 	bl	800be1c <USB_ReadInterrupts>
 800905c:	0507      	lsls	r7, r0, #20
 800905e:	f100 8081 	bmi.w	8009164 <HAL_PCD_IRQHandler+0x1ac>
 8009062:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8009064:	f002 feda 	bl	800be1c <USB_ReadInterrupts>
 8009068:	04c0      	lsls	r0, r0, #19
 800906a:	f100 80e4 	bmi.w	8009236 <HAL_PCD_IRQHandler+0x27e>
 800906e:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8009070:	f002 fed4 	bl	800be1c <USB_ReadInterrupts>
 8009074:	f410 5f00 	tst.w	r0, #8192	; 0x2000
      (void)USB_ActivateSetup(hpcd->Instance);
 8009078:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 800907a:	f040 80c5 	bne.w	8009208 <HAL_PCD_IRQHandler+0x250>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 800907e:	f002 fecd 	bl	800be1c <USB_ReadInterrupts>
 8009082:	0701      	lsls	r1, r0, #28
 8009084:	f100 8133 	bmi.w	80092ee <HAL_PCD_IRQHandler+0x336>
 8009088:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 800908a:	f002 fec7 	bl	800be1c <USB_ReadInterrupts>
 800908e:	0602      	lsls	r2, r0, #24
 8009090:	d51d      	bpl.n	80090ce <HAL_PCD_IRQHandler+0x116>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8009092:	69aa      	ldr	r2, [r5, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8009094:	6863      	ldr	r3, [r4, #4]
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8009096:	f022 0280 	bic.w	r2, r2, #128	; 0x80
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800909a:	2b01      	cmp	r3, #1
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 800909c:	61aa      	str	r2, [r5, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800909e:	d916      	bls.n	80090ce <HAL_PCD_IRQHandler+0x116>
 80090a0:	4627      	mov	r7, r4
 80090a2:	2601      	movs	r6, #1
 80090a4:	e002      	b.n	80090ac <HAL_PCD_IRQHandler+0xf4>
 80090a6:	3601      	adds	r6, #1
 80090a8:	42b3      	cmp	r3, r6
 80090aa:	d910      	bls.n	80090ce <HAL_PCD_IRQHandler+0x116>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80090ac:	f897 22a3 	ldrb.w	r2, [r7, #675]	; 0x2a3
 80090b0:	2a01      	cmp	r2, #1
 80090b2:	f107 0724 	add.w	r7, r7, #36	; 0x24
 80090b6:	d1f6      	bne.n	80090a6 <HAL_PCD_IRQHandler+0xee>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80090b8:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 80090bc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 80090c0:	6820      	ldr	r0, [r4, #0]
 80090c2:	f501 711f 	add.w	r1, r1, #636	; 0x27c
 80090c6:	f002 fda1 	bl	800bc0c <USB_EPStopXfer>

  return ret;
 80090ca:	6863      	ldr	r3, [r4, #4]
 80090cc:	e7eb      	b.n	80090a6 <HAL_PCD_IRQHandler+0xee>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 80090ce:	6820      	ldr	r0, [r4, #0]
 80090d0:	f002 fea4 	bl	800be1c <USB_ReadInterrupts>
 80090d4:	02c3      	lsls	r3, r0, #11
 80090d6:	d543      	bpl.n	8009160 <HAL_PCD_IRQHandler+0x1a8>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80090d8:	6863      	ldr	r3, [r4, #4]
 80090da:	2b01      	cmp	r3, #1
 80090dc:	d922      	bls.n	8009124 <HAL_PCD_IRQHandler+0x16c>
 80090de:	f505 6812 	add.w	r8, r5, #2336	; 0x920
 80090e2:	f104 0763 	add.w	r7, r4, #99	; 0x63
 80090e6:	2601      	movs	r6, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80090e8:	f04f 0a24 	mov.w	sl, #36	; 0x24
 80090ec:	f04f 093c 	mov.w	r9, #60	; 0x3c
 80090f0:	e004      	b.n	80090fc <HAL_PCD_IRQHandler+0x144>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80090f2:	3601      	adds	r6, #1
 80090f4:	42b3      	cmp	r3, r6
 80090f6:	f107 0724 	add.w	r7, r7, #36	; 0x24
 80090fa:	d913      	bls.n	8009124 <HAL_PCD_IRQHandler+0x16c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80090fc:	787a      	ldrb	r2, [r7, #1]
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 80090fe:	f8d8 1000 	ldr.w	r1, [r8]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8009102:	2a01      	cmp	r2, #1
 8009104:	f108 0820 	add.w	r8, r8, #32
 8009108:	d1f3      	bne.n	80090f2 <HAL_PCD_IRQHandler+0x13a>
 800910a:	2900      	cmp	r1, #0
 800910c:	daf1      	bge.n	80090f2 <HAL_PCD_IRQHandler+0x13a>
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800910e:	f006 010f 	and.w	r1, r6, #15
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8009112:	703a      	strb	r2, [r7, #0]
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8009114:	fb1a 9101 	smlabb	r1, sl, r1, r9
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8009118:	6820      	ldr	r0, [r4, #0]
 800911a:	4421      	add	r1, r4
 800911c:	f002 fd76 	bl	800bc0c <USB_EPStopXfer>
  return ret;
 8009120:	6863      	ldr	r3, [r4, #4]
 8009122:	e7e6      	b.n	80090f2 <HAL_PCD_IRQHandler+0x13a>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8009124:	6820      	ldr	r0, [r4, #0]
 8009126:	6943      	ldr	r3, [r0, #20]
 8009128:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800912c:	6143      	str	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 800912e:	f002 fe75 	bl	800be1c <USB_ReadInterrupts>
 8009132:	0287      	lsls	r7, r0, #10
 8009134:	d421      	bmi.n	800917a <HAL_PCD_IRQHandler+0x1c2>
 8009136:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8009138:	f002 fe70 	bl	800be1c <USB_ReadInterrupts>
 800913c:	0040      	lsls	r0, r0, #1
 800913e:	f100 80cd 	bmi.w	80092dc <HAL_PCD_IRQHandler+0x324>
 8009142:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8009144:	f002 fe6a 	bl	800be1c <USB_ReadInterrupts>
 8009148:	0741      	lsls	r1, r0, #29
 800914a:	f57f af3e 	bpl.w	8008fca <HAL_PCD_IRQHandler+0x12>
      RegVal = hpcd->Instance->GOTGINT;
 800914e:	6823      	ldr	r3, [r4, #0]
 8009150:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8009152:	076a      	lsls	r2, r5, #29
 8009154:	f100 827b 	bmi.w	800964e <HAL_PCD_IRQHandler+0x696>
      hpcd->Instance->GOTGINT |= RegVal;
 8009158:	685a      	ldr	r2, [r3, #4]
 800915a:	432a      	orrs	r2, r5
 800915c:	605a      	str	r2, [r3, #4]
 800915e:	e734      	b.n	8008fca <HAL_PCD_IRQHandler+0x12>
 8009160:	6820      	ldr	r0, [r4, #0]
 8009162:	e7e4      	b.n	800912e <HAL_PCD_IRQHandler+0x176>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8009164:	f8db 3008 	ldr.w	r3, [fp, #8]
 8009168:	07de      	lsls	r6, r3, #31
 800916a:	f100 826c 	bmi.w	8009646 <HAL_PCD_IRQHandler+0x68e>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 800916e:	6820      	ldr	r0, [r4, #0]
 8009170:	6943      	ldr	r3, [r0, #20]
 8009172:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009176:	6143      	str	r3, [r0, #20]
 8009178:	e774      	b.n	8009064 <HAL_PCD_IRQHandler+0xac>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800917a:	6867      	ldr	r7, [r4, #4]
 800917c:	2f01      	cmp	r7, #1
 800917e:	d929      	bls.n	80091d4 <HAL_PCD_IRQHandler+0x21c>
 8009180:	f505 6232 	add.w	r2, r5, #2848	; 0xb20
 8009184:	f204 23a3 	addw	r3, r4, #675	; 0x2a3
 8009188:	2101      	movs	r1, #1
 800918a:	e003      	b.n	8009194 <HAL_PCD_IRQHandler+0x1dc>
 800918c:	42b9      	cmp	r1, r7
 800918e:	f103 0324 	add.w	r3, r3, #36	; 0x24
 8009192:	d01f      	beq.n	80091d4 <HAL_PCD_IRQHandler+0x21c>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8009194:	7858      	ldrb	r0, [r3, #1]
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8009196:	6816      	ldr	r6, [r2, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8009198:	2801      	cmp	r0, #1
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800919a:	f101 0101 	add.w	r1, r1, #1
 800919e:	f102 0220 	add.w	r2, r2, #32
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80091a2:	d1f3      	bne.n	800918c <HAL_PCD_IRQHandler+0x1d4>
 80091a4:	2e00      	cmp	r6, #0
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 80091a6:	f406 3c80 	and.w	ip, r6, #65536	; 0x10000
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80091aa:	daef      	bge.n	800918c <HAL_PCD_IRQHandler+0x1d4>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 80091ac:	f8d4 64fc 	ldr.w	r6, [r4, #1276]	; 0x4fc
 80091b0:	f006 0601 	and.w	r6, r6, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 80091b4:	45b4      	cmp	ip, r6
 80091b6:	d1e9      	bne.n	800918c <HAL_PCD_IRQHandler+0x1d4>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 80091b8:	7018      	strb	r0, [r3, #0]
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 80091ba:	69a8      	ldr	r0, [r5, #24]
 80091bc:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 80091c0:	61a8      	str	r0, [r5, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 80091c2:	6968      	ldr	r0, [r5, #20]
 80091c4:	0606      	lsls	r6, r0, #24
 80091c6:	d4e1      	bmi.n	800918c <HAL_PCD_IRQHandler+0x1d4>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 80091c8:	f8db 3004 	ldr.w	r3, [fp, #4]
 80091cc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80091d0:	f8cb 3004 	str.w	r3, [fp, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 80091d4:	6820      	ldr	r0, [r4, #0]
 80091d6:	6943      	ldr	r3, [r0, #20]
 80091d8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80091dc:	6143      	str	r3, [r0, #20]
 80091de:	e7ab      	b.n	8009138 <HAL_PCD_IRQHandler+0x180>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80091e0:	f8db 3004 	ldr.w	r3, [fp, #4]
 80091e4:	f023 0301 	bic.w	r3, r3, #1
 80091e8:	f8cb 3004 	str.w	r3, [fp, #4]
      if (hpcd->LPM_State == LPM_L1)
 80091ec:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 80091f0:	2b01      	cmp	r3, #1
 80091f2:	f000 8142 	beq.w	800947a <HAL_PCD_IRQHandler+0x4c2>
        HAL_PCD_ResumeCallback(hpcd);
 80091f6:	4620      	mov	r0, r4
 80091f8:	f7f8 fed4 	bl	8001fa4 <HAL_PCD_ResumeCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 80091fc:	6820      	ldr	r0, [r4, #0]
 80091fe:	6943      	ldr	r3, [r0, #20]
 8009200:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009204:	6143      	str	r3, [r0, #20]
 8009206:	e727      	b.n	8009058 <HAL_PCD_IRQHandler+0xa0>
      (void)USB_ActivateSetup(hpcd->Instance);
 8009208:	f002 fe3e 	bl	800be88 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 800920c:	6820      	ldr	r0, [r4, #0]
 800920e:	f002 faa9 	bl	800b764 <USB_GetDevSpeed>
 8009212:	60e0      	str	r0, [r4, #12]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8009214:	6826      	ldr	r6, [r4, #0]
 8009216:	f000 feeb 	bl	8009ff0 <HAL_RCC_GetHCLKFreq>
 800921a:	7b22      	ldrb	r2, [r4, #12]
 800921c:	4601      	mov	r1, r0
 800921e:	4630      	mov	r0, r6
 8009220:	f002 f8c8 	bl	800b3b4 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 8009224:	4620      	mov	r0, r4
 8009226:	f7f8 fe8f 	bl	8001f48 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 800922a:	6820      	ldr	r0, [r4, #0]
 800922c:	6943      	ldr	r3, [r0, #20]
 800922e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009232:	6143      	str	r3, [r0, #20]
 8009234:	e723      	b.n	800907e <HAL_PCD_IRQHandler+0xc6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8009236:	f8db 3004 	ldr.w	r3, [fp, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 800923a:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800923c:	f023 0301 	bic.w	r3, r3, #1
 8009240:	f8cb 3004 	str.w	r3, [fp, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8009244:	2110      	movs	r1, #16
 8009246:	f002 f975 	bl	800b534 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800924a:	6866      	ldr	r6, [r4, #4]
 800924c:	b1e6      	cbz	r6, 8009288 <HAL_PCD_IRQHandler+0x2d0>
 800924e:	f505 6310 	add.w	r3, r5, #2304	; 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8009252:	f64f 317f 	movw	r1, #64383	; 0xfb7f
 8009256:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8009258:	681a      	ldr	r2, [r3, #0]
 800925a:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 800925e:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8009260:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8009264:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8009268:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 800926c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8009270:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8009274:	f10a 0a01 	add.w	sl, sl, #1
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8009278:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800927c:	45b2      	cmp	sl, r6
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 800927e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8009282:	f103 0320 	add.w	r3, r3, #32
 8009286:	d1e6      	bne.n	8009256 <HAL_PCD_IRQHandler+0x29e>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8009288:	f8db 301c 	ldr.w	r3, [fp, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 800928c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 800928e:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8009292:	f8cb 301c 	str.w	r3, [fp, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8009296:	2a00      	cmp	r2, #0
 8009298:	f040 80e2 	bne.w	8009460 <HAL_PCD_IRQHandler+0x4a8>
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 800929c:	f8db 3014 	ldr.w	r3, [fp, #20]
 80092a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80092a4:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 80092a8:	f8cb 3014 	str.w	r3, [fp, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80092ac:	f8db 3010 	ldr.w	r3, [fp, #16]
 80092b0:	f043 030b 	orr.w	r3, r3, #11
 80092b4:	f8cb 3010 	str.w	r3, [fp, #16]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80092b8:	f8d5 3800 	ldr.w	r3, [r5, #2048]	; 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 80092bc:	7c21      	ldrb	r1, [r4, #16]
 80092be:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80092c0:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80092c4:	f8c5 3800 	str.w	r3, [r5, #2048]	; 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 80092c8:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 80092cc:	f002 fdec 	bl	800bea8 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 80092d0:	6820      	ldr	r0, [r4, #0]
 80092d2:	6943      	ldr	r3, [r0, #20]
 80092d4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80092d8:	6143      	str	r3, [r0, #20]
 80092da:	e6c9      	b.n	8009070 <HAL_PCD_IRQHandler+0xb8>
      HAL_PCD_ConnectCallback(hpcd);
 80092dc:	4620      	mov	r0, r4
 80092de:	f7f8 fe6d 	bl	8001fbc <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 80092e2:	6820      	ldr	r0, [r4, #0]
 80092e4:	6943      	ldr	r3, [r0, #20]
 80092e6:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80092ea:	6143      	str	r3, [r0, #20]
 80092ec:	e72a      	b.n	8009144 <HAL_PCD_IRQHandler+0x18c>
      HAL_PCD_SOFCallback(hpcd);
 80092ee:	4620      	mov	r0, r4
 80092f0:	f7f8 fe26 	bl	8001f40 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 80092f4:	6820      	ldr	r0, [r4, #0]
 80092f6:	6943      	ldr	r3, [r0, #20]
 80092f8:	f003 0308 	and.w	r3, r3, #8
 80092fc:	6143      	str	r3, [r0, #20]
 80092fe:	e6c4      	b.n	800908a <HAL_PCD_IRQHandler+0xd2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8009300:	6820      	ldr	r0, [r4, #0]
 8009302:	f002 fd97 	bl	800be34 <USB_ReadDevAllInEpInterrupt>
      while (ep_intr != 0U)
 8009306:	4680      	mov	r8, r0
 8009308:	2800      	cmp	r0, #0
 800930a:	f43f ae9e 	beq.w	800904a <HAL_PCD_IRQHandler+0x92>
 800930e:	4626      	mov	r6, r4
      epnum = 0U;
 8009310:	f04f 0900 	mov.w	r9, #0
 8009314:	f505 6310 	add.w	r3, r5, #2304	; 0x900
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8009318:	e9cd 3b03 	strd	r3, fp, [sp, #12]
 800931c:	f856 0b3f 	ldr.w	r0, [r6], #63
 8009320:	9505      	str	r5, [sp, #20]
 8009322:	464f      	mov	r7, r9
 8009324:	f8cd a018 	str.w	sl, [sp, #24]
 8009328:	e007      	b.n	800933a <HAL_PCD_IRQHandler+0x382>
      while (ep_intr != 0U)
 800932a:	ea5f 0858 	movs.w	r8, r8, lsr #1
        epnum++;
 800932e:	f107 0701 	add.w	r7, r7, #1
      while (ep_intr != 0U)
 8009332:	f106 0624 	add.w	r6, r6, #36	; 0x24
 8009336:	f000 80ba 	beq.w	80094ae <HAL_PCD_IRQHandler+0x4f6>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 800933a:	f018 0f01 	tst.w	r8, #1
 800933e:	d0f4      	beq.n	800932a <HAL_PCD_IRQHandler+0x372>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8009340:	fa5f f987 	uxtb.w	r9, r7
 8009344:	4649      	mov	r1, r9
 8009346:	f002 fd87 	bl	800be58 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800934a:	07c2      	lsls	r2, r0, #31
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800934c:	4605      	mov	r5, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800934e:	d517      	bpl.n	8009380 <HAL_PCD_IRQHandler+0x3c8>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009350:	9804      	ldr	r0, [sp, #16]
            if (hpcd->Init.dma_enable == 1U)
 8009352:	6921      	ldr	r1, [r4, #16]
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009354:	6b42      	ldr	r2, [r0, #52]	; 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8009356:	f04f 0c01 	mov.w	ip, #1
 800935a:	f007 030f 	and.w	r3, r7, #15
 800935e:	fa0c f303 	lsl.w	r3, ip, r3
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009362:	ea22 0203 	bic.w	r2, r2, r3
 8009366:	9b03      	ldr	r3, [sp, #12]
 8009368:	6342      	str	r2, [r0, #52]	; 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 800936a:	eb03 1347 	add.w	r3, r3, r7, lsl #5
            if (hpcd->Init.dma_enable == 1U)
 800936e:	4561      	cmp	r1, ip
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 8009370:	f8c3 c008 	str.w	ip, [r3, #8]
            if (hpcd->Init.dma_enable == 1U)
 8009374:	f000 8170 	beq.w	8009658 <HAL_PCD_IRQHandler+0x6a0>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8009378:	4649      	mov	r1, r9
 800937a:	4620      	mov	r0, r4
 800937c:	f7f8 fdd6 	bl	8001f2c <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8009380:	072b      	lsls	r3, r5, #28
 8009382:	d504      	bpl.n	800938e <HAL_PCD_IRQHandler+0x3d6>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8009384:	9b03      	ldr	r3, [sp, #12]
 8009386:	eb03 1347 	add.w	r3, r3, r7, lsl #5
 800938a:	2208      	movs	r2, #8
 800938c:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 800938e:	06e8      	lsls	r0, r5, #27
 8009390:	d504      	bpl.n	800939c <HAL_PCD_IRQHandler+0x3e4>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8009392:	9b03      	ldr	r3, [sp, #12]
 8009394:	eb03 1347 	add.w	r3, r3, r7, lsl #5
 8009398:	2210      	movs	r2, #16
 800939a:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 800939c:	0669      	lsls	r1, r5, #25
 800939e:	d504      	bpl.n	80093aa <HAL_PCD_IRQHandler+0x3f2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 80093a0:	9b03      	ldr	r3, [sp, #12]
 80093a2:	eb03 1347 	add.w	r3, r3, r7, lsl #5
 80093a6:	2240      	movs	r2, #64	; 0x40
 80093a8:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 80093aa:	07aa      	lsls	r2, r5, #30
 80093ac:	f100 80e0 	bmi.w	8009570 <HAL_PCD_IRQHandler+0x5b8>
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80093b0:	062b      	lsls	r3, r5, #24
 80093b2:	f100 8084 	bmi.w	80094be <HAL_PCD_IRQHandler+0x506>
 80093b6:	6820      	ldr	r0, [r4, #0]
 80093b8:	e7b7      	b.n	800932a <HAL_PCD_IRQHandler+0x372>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 80093ba:	6820      	ldr	r0, [r4, #0]
 80093bc:	f002 fd32 	bl	800be24 <USB_ReadDevAllOutEpInterrupt>
      while (ep_intr != 0U)
 80093c0:	4606      	mov	r6, r0
 80093c2:	2800      	cmp	r0, #0
 80093c4:	f43f ae3b 	beq.w	800903e <HAL_PCD_IRQHandler+0x86>
 80093c8:	f505 6330 	add.w	r3, r5, #2816	; 0xb00
 80093cc:	e9cd 5a03 	strd	r5, sl, [sp, #12]
 80093d0:	f204 297f 	addw	r9, r4, #639	; 0x27f
      epnum = 0U;
 80093d4:	2700      	movs	r7, #0
 80093d6:	469a      	mov	sl, r3
 80093d8:	e005      	b.n	80093e6 <HAL_PCD_IRQHandler+0x42e>
      while (ep_intr != 0U)
 80093da:	0876      	lsrs	r6, r6, #1
        epnum++;
 80093dc:	f107 0701 	add.w	r7, r7, #1
      while (ep_intr != 0U)
 80093e0:	f109 0924 	add.w	r9, r9, #36	; 0x24
 80093e4:	d068      	beq.n	80094b8 <HAL_PCD_IRQHandler+0x500>
        if ((ep_intr & 0x1U) != 0U)
 80093e6:	07f5      	lsls	r5, r6, #31
 80093e8:	d5f7      	bpl.n	80093da <HAL_PCD_IRQHandler+0x422>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80093ea:	b2fd      	uxtb	r5, r7
 80093ec:	6820      	ldr	r0, [r4, #0]
 80093ee:	4629      	mov	r1, r5
 80093f0:	f002 fd28 	bl	800be44 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 80093f4:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80093f8:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 80093fa:	f040 80e7 	bne.w	80095cc <HAL_PCD_IRQHandler+0x614>
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 80093fe:	f018 0f08 	tst.w	r8, #8
 8009402:	f040 80c3 	bne.w	800958c <HAL_PCD_IRQHandler+0x5d4>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8009406:	f018 0f10 	tst.w	r8, #16
 800940a:	d003      	beq.n	8009414 <HAL_PCD_IRQHandler+0x45c>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 800940c:	eb0a 1247 	add.w	r2, sl, r7, lsl #5
 8009410:	2110      	movs	r1, #16
 8009412:	6091      	str	r1, [r2, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8009414:	f018 0f02 	tst.w	r8, #2
 8009418:	d012      	beq.n	8009440 <HAL_PCD_IRQHandler+0x488>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 800941a:	9b03      	ldr	r3, [sp, #12]
 800941c:	695a      	ldr	r2, [r3, #20]
 800941e:	0611      	lsls	r1, r2, #24
 8009420:	d505      	bpl.n	800942e <HAL_PCD_IRQHandler+0x476>
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8009422:	f8db 2004 	ldr.w	r2, [fp, #4]
 8009426:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800942a:	f8cb 2004 	str.w	r2, [fp, #4]
            if (ep->is_iso_incomplete == 1U)
 800942e:	f899 2000 	ldrb.w	r2, [r9]
 8009432:	2a01      	cmp	r2, #1
 8009434:	f000 8140 	beq.w	80096b8 <HAL_PCD_IRQHandler+0x700>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8009438:	eb0a 1347 	add.w	r3, sl, r7, lsl #5
 800943c:	2202      	movs	r2, #2
 800943e:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8009440:	f018 0f20 	tst.w	r8, #32
 8009444:	d003      	beq.n	800944e <HAL_PCD_IRQHandler+0x496>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8009446:	eb0a 1347 	add.w	r3, sl, r7, lsl #5
 800944a:	2220      	movs	r2, #32
 800944c:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 800944e:	f418 5f00 	tst.w	r8, #8192	; 0x2000
 8009452:	d0c2      	beq.n	80093da <HAL_PCD_IRQHandler+0x422>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8009454:	eb0a 1347 	add.w	r3, sl, r7, lsl #5
 8009458:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800945c:	609a      	str	r2, [r3, #8]
 800945e:	e7bc      	b.n	80093da <HAL_PCD_IRQHandler+0x422>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8009460:	f8db 3084 	ldr.w	r3, [fp, #132]	; 0x84
 8009464:	f043 030b 	orr.w	r3, r3, #11
 8009468:	f8cb 3084 	str.w	r3, [fp, #132]	; 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 800946c:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
 8009470:	f043 030b 	orr.w	r3, r3, #11
 8009474:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
 8009478:	e71e      	b.n	80092b8 <HAL_PCD_IRQHandler+0x300>
        hpcd->LPM_State = LPM_L0;
 800947a:	2100      	movs	r1, #0
 800947c:	f884 14f4 	strb.w	r1, [r4, #1268]	; 0x4f4
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8009480:	4620      	mov	r0, r4
 8009482:	f000 faf9 	bl	8009a78 <HAL_PCDEx_LPM_Callback>
 8009486:	e6b9      	b.n	80091fc <HAL_PCD_IRQHandler+0x244>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8009488:	2208      	movs	r2, #8
 800948a:	f204 41c4 	addw	r1, r4, #1220	; 0x4c4
 800948e:	4628      	mov	r0, r5
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8009490:	eb07 07c7 	add.w	r7, r7, r7, lsl #3
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8009494:	f002 fc14 	bl	800bcc0 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8009498:	eb04 0287 	add.w	r2, r4, r7, lsl #2
 800949c:	f3c6 130a 	ubfx	r3, r6, #4, #11
 80094a0:	f8d2 129c 	ldr.w	r1, [r2, #668]	; 0x29c
 80094a4:	6820      	ldr	r0, [r4, #0]
 80094a6:	440b      	add	r3, r1
 80094a8:	f8c2 329c 	str.w	r3, [r2, #668]	; 0x29c
 80094ac:	e5be      	b.n	800902c <HAL_PCD_IRQHandler+0x74>
 80094ae:	e9dd b504 	ldrd	fp, r5, [sp, #16]
 80094b2:	f8dd a018 	ldr.w	sl, [sp, #24]
 80094b6:	e5c9      	b.n	800904c <HAL_PCD_IRQHandler+0x94>
 80094b8:	e9dd 5a03 	ldrd	r5, sl, [sp, #12]
 80094bc:	e5bf      	b.n	800903e <HAL_PCD_IRQHandler+0x86>
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];

  if (ep->xfer_count > ep->xfer_len)
 80094be:	f8d6 301d 	ldr.w	r3, [r6, #29]
 80094c2:	f8d6 1015 	ldr.w	r1, [r6, #21]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80094c6:	f8d4 a000 	ldr.w	sl, [r4]
  if (ep->xfer_count > ep->xfer_len)
 80094ca:	428b      	cmp	r3, r1
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80094cc:	4650      	mov	r0, sl
  if (ep->xfer_count > ep->xfer_len)
 80094ce:	f63f af2c 	bhi.w	800932a <HAL_PCD_IRQHandler+0x372>
    len = ep->maxpacket;
  }

  len32b = (len + 3U) / 4U;

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80094d2:	f50a 6b10 	add.w	fp, sl, #2304	; 0x900
  len32b = (len + 3U) / 4U;
 80094d6:	f8d6 2009 	ldr.w	r2, [r6, #9]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80094da:	f8cd a01c 	str.w	sl, [sp, #28]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80094de:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
  len = ep->xfer_len - ep->xfer_count;
 80094e2:	eba1 0c03 	sub.w	ip, r1, r3
  len32b = (len + 3U) / 4U;
 80094e6:	4562      	cmp	r2, ip
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80094e8:	f8db 5018 	ldr.w	r5, [fp, #24]
  len32b = (len + 3U) / 4U;
 80094ec:	bf28      	it	cs
 80094ee:	4662      	movcs	r2, ip
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80094f0:	b2ad      	uxth	r5, r5
  len32b = (len + 3U) / 4U;
 80094f2:	3203      	adds	r2, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80094f4:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 80094f8:	d223      	bcs.n	8009542 <HAL_PCD_IRQHandler+0x58a>
 80094fa:	e0d9      	b.n	80096b0 <HAL_PCD_IRQHandler+0x6f8>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80094fc:	b339      	cbz	r1, 800954e <HAL_PCD_IRQHandler+0x596>
 80094fe:	f8d6 3009 	ldr.w	r3, [r6, #9]
    {
      len = ep->maxpacket;
    }
    len32b = (len + 3U) / 4U;

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8009502:	f894 c010 	ldrb.w	ip, [r4, #16]
 8009506:	f8d6 100d 	ldr.w	r1, [r6, #13]
 800950a:	f8cd c000 	str.w	ip, [sp]
 800950e:	429d      	cmp	r5, r3
 8009510:	bf28      	it	cs
 8009512:	461d      	movcs	r5, r3
 8009514:	b2ab      	uxth	r3, r5
 8009516:	f002 fbbd 	bl	800bc94 <USB_WritePacket>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800951a:	f8db 2018 	ldr.w	r2, [fp, #24]
                          (uint8_t)hpcd->Init.dma_enable);

    ep->xfer_buff  += len;
 800951e:	f8d6 100d 	ldr.w	r1, [r6, #13]
    ep->xfer_count += len;
 8009522:	f8d6 301d 	ldr.w	r3, [r6, #29]
    ep->xfer_buff  += len;
 8009526:	4429      	add	r1, r5
    ep->xfer_count += len;
 8009528:	442b      	add	r3, r5
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800952a:	b292      	uxth	r2, r2
    len32b = (len + 3U) / 4U;
 800952c:	3503      	adds	r5, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800952e:	ebb2 0f95 	cmp.w	r2, r5, lsr #2
    ep->xfer_buff  += len;
 8009532:	f8c6 100d 	str.w	r1, [r6, #13]
    ep->xfer_count += len;
 8009536:	f8c6 301d 	str.w	r3, [r6, #29]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800953a:	f0c0 80b4 	bcc.w	80096a6 <HAL_PCD_IRQHandler+0x6ee>
 800953e:	f8d6 1015 	ldr.w	r1, [r6, #21]
 8009542:	4299      	cmp	r1, r3
    len = ep->xfer_len - ep->xfer_count;
 8009544:	eba1 0503 	sub.w	r5, r1, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8009548:	464a      	mov	r2, r9
 800954a:	4650      	mov	r0, sl
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800954c:	d8d6      	bhi.n	80094fc <HAL_PCD_IRQHandler+0x544>
 800954e:	f8d4 a000 	ldr.w	sl, [r4]
  }

  if (ep->xfer_len <= ep->xfer_count)
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009552:	9b07      	ldr	r3, [sp, #28]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8009554:	2001      	movs	r0, #1
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009556:	f503 6100 	add.w	r1, r3, #2048	; 0x800
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 800955a:	f007 020f 	and.w	r2, r7, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800955e:	f8d3 3834 	ldr.w	r3, [r3, #2100]	; 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8009562:	fa00 f202 	lsl.w	r2, r0, r2
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8009566:	ea23 0302 	bic.w	r3, r3, r2
 800956a:	4650      	mov	r0, sl
 800956c:	634b      	str	r3, [r1, #52]	; 0x34
 800956e:	e6dc      	b.n	800932a <HAL_PCD_IRQHandler+0x372>
            (void)USB_FlushTxFifo(USBx, epnum);
 8009570:	9805      	ldr	r0, [sp, #20]
 8009572:	4639      	mov	r1, r7
 8009574:	f001 ffde 	bl	800b534 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8009578:	7833      	ldrb	r3, [r6, #0]
 800957a:	2b01      	cmp	r3, #1
 800957c:	f000 80ad 	beq.w	80096da <HAL_PCD_IRQHandler+0x722>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8009580:	9b03      	ldr	r3, [sp, #12]
 8009582:	eb03 1347 	add.w	r3, r3, r7, lsl #5
 8009586:	2202      	movs	r2, #2
 8009588:	609a      	str	r2, [r3, #8]
 800958a:	e711      	b.n	80093b0 <HAL_PCD_IRQHandler+0x3f8>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 800958c:	eb0a 1247 	add.w	r2, sl, r7, lsl #5
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8009590:	6821      	ldr	r1, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8009592:	4b6d      	ldr	r3, [pc, #436]	; (8009748 <HAL_PCD_IRQHandler+0x790>)
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8009594:	2008      	movs	r0, #8
 8009596:	6090      	str	r0, [r2, #8]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8009598:	f501 6230 	add.w	r2, r1, #2816	; 0xb00
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 800959c:	6c09      	ldr	r1, [r1, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800959e:	eb02 1247 	add.w	r2, r2, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80095a2:	4299      	cmp	r1, r3
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80095a4:	6890      	ldr	r0, [r2, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80095a6:	d96b      	bls.n	8009680 <HAL_PCD_IRQHandler+0x6c8>
 80095a8:	0400      	lsls	r0, r0, #16
 80095aa:	d502      	bpl.n	80095b2 <HAL_PCD_IRQHandler+0x5fa>
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80095ac:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80095b0:	6091      	str	r1, [r2, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 80095b2:	4620      	mov	r0, r4
 80095b4:	f7f8 fcaa 	bl	8001f0c <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 80095b8:	6921      	ldr	r1, [r4, #16]
 80095ba:	2901      	cmp	r1, #1
 80095bc:	f47f af23 	bne.w	8009406 <HAL_PCD_IRQHandler+0x44e>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80095c0:	6820      	ldr	r0, [r4, #0]
 80095c2:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 80095c6:	f002 fc6f 	bl	800bea8 <USB_EP0_OutStart>
 80095ca:	e71c      	b.n	8009406 <HAL_PCD_IRQHandler+0x44e>
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80095cc:	6820      	ldr	r0, [r4, #0]
  if (hpcd->Init.dma_enable == 1U)
 80095ce:	f8d4 c010 	ldr.w	ip, [r4, #16]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80095d2:	f500 6230 	add.w	r2, r0, #2816	; 0xb00
 80095d6:	eb0a 1147 	add.w	r1, sl, r7, lsl #5
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 80095da:	2301      	movs	r3, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80095dc:	eb02 1247 	add.w	r2, r2, r7, lsl #5
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 80095e0:	608b      	str	r3, [r1, #8]
  if (hpcd->Init.dma_enable == 1U)
 80095e2:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 80095e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80095e8:	f8d2 e008 	ldr.w	lr, [r2, #8]
  if (hpcd->Init.dma_enable == 1U)
 80095ec:	d04c      	beq.n	8009688 <HAL_PCD_IRQHandler+0x6d0>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 80095ee:	4957      	ldr	r1, [pc, #348]	; (800974c <HAL_PCD_IRQHandler+0x794>)
 80095f0:	428b      	cmp	r3, r1
 80095f2:	d069      	beq.n	80096c8 <HAL_PCD_IRQHandler+0x710>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 80095f4:	b927      	cbnz	r7, 8009600 <HAL_PCD_IRQHandler+0x648>
 80095f6:	f8d4 2294 	ldr.w	r2, [r4, #660]	; 0x294
 80095fa:	2a00      	cmp	r2, #0
 80095fc:	f000 8098 	beq.w	8009730 <HAL_PCD_IRQHandler+0x778>
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8009600:	4629      	mov	r1, r5
 8009602:	4620      	mov	r0, r4
 8009604:	f7f8 fc88 	bl	8001f18 <HAL_PCD_DataOutStageCallback>
 8009608:	e6f9      	b.n	80093fe <HAL_PCD_IRQHandler+0x446>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 800960a:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 800960e:	421e      	tst	r6, r3
 8009610:	f43f ad0c 	beq.w	800902c <HAL_PCD_IRQHandler+0x74>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8009614:	eb07 07c7 	add.w	r7, r7, r7, lsl #3
 8009618:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 800961c:	f3c6 120a 	ubfx	r2, r6, #4, #11
 8009620:	f8d7 128c 	ldr.w	r1, [r7, #652]	; 0x28c
 8009624:	4628      	mov	r0, r5
 8009626:	f002 fb4b 	bl	800bcc0 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800962a:	f8d7 228c 	ldr.w	r2, [r7, #652]	; 0x28c
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800962e:	f8d7 329c 	ldr.w	r3, [r7, #668]	; 0x29c
 8009632:	6820      	ldr	r0, [r4, #0]
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8009634:	f3c6 160a 	ubfx	r6, r6, #4, #11
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8009638:	4432      	add	r2, r6
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800963a:	4433      	add	r3, r6
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800963c:	f8c7 228c 	str.w	r2, [r7, #652]	; 0x28c
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8009640:	f8c7 329c 	str.w	r3, [r7, #668]	; 0x29c
 8009644:	e4f2      	b.n	800902c <HAL_PCD_IRQHandler+0x74>
        HAL_PCD_SuspendCallback(hpcd);
 8009646:	4620      	mov	r0, r4
 8009648:	f7f8 fc94 	bl	8001f74 <HAL_PCD_SuspendCallback>
 800964c:	e58f      	b.n	800916e <HAL_PCD_IRQHandler+0x1b6>
        HAL_PCD_DisconnectCallback(hpcd);
 800964e:	4620      	mov	r0, r4
 8009650:	f7f8 fcb8 	bl	8001fc4 <HAL_PCD_DisconnectCallback>
 8009654:	6823      	ldr	r3, [r4, #0]
 8009656:	e57f      	b.n	8009158 <HAL_PCD_IRQHandler+0x1a0>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8009658:	f8d6 300d 	ldr.w	r3, [r6, #13]
 800965c:	f8d6 2009 	ldr.w	r2, [r6, #9]
 8009660:	4413      	add	r3, r2
 8009662:	f8c6 300d 	str.w	r3, [r6, #13]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8009666:	2f00      	cmp	r7, #0
 8009668:	f47f ae86 	bne.w	8009378 <HAL_PCD_IRQHandler+0x3c0>
 800966c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800966e:	2b00      	cmp	r3, #0
 8009670:	f47f ae82 	bne.w	8009378 <HAL_PCD_IRQHandler+0x3c0>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8009674:	6820      	ldr	r0, [r4, #0]
 8009676:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 800967a:	f002 fc15 	bl	800bea8 <USB_EP0_OutStart>
 800967e:	e67b      	b.n	8009378 <HAL_PCD_IRQHandler+0x3c0>
  HAL_PCD_SetupStageCallback(hpcd);
 8009680:	4620      	mov	r0, r4
 8009682:	f7f8 fc43 	bl	8001f0c <HAL_PCD_SetupStageCallback>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8009686:	e6be      	b.n	8009406 <HAL_PCD_IRQHandler+0x44e>
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8009688:	f01e 0f08 	tst.w	lr, #8
 800968c:	d02c      	beq.n	80096e8 <HAL_PCD_IRQHandler+0x730>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800968e:	492e      	ldr	r1, [pc, #184]	; (8009748 <HAL_PCD_IRQHandler+0x790>)
 8009690:	428b      	cmp	r3, r1
 8009692:	f67f aeb4 	bls.w	80093fe <HAL_PCD_IRQHandler+0x446>
 8009696:	f41e 4f00 	tst.w	lr, #32768	; 0x8000
 800969a:	f43f aeb0 	beq.w	80093fe <HAL_PCD_IRQHandler+0x446>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 800969e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80096a2:	6091      	str	r1, [r2, #8]
 80096a4:	e6ab      	b.n	80093fe <HAL_PCD_IRQHandler+0x446>
 80096a6:	f8d4 a000 	ldr.w	sl, [r4]
 80096aa:	f8d6 1015 	ldr.w	r1, [r6, #21]
 80096ae:	4650      	mov	r0, sl
  if (ep->xfer_len <= ep->xfer_count)
 80096b0:	4299      	cmp	r1, r3
 80096b2:	f63f ae3a 	bhi.w	800932a <HAL_PCD_IRQHandler+0x372>
 80096b6:	e74c      	b.n	8009552 <HAL_PCD_IRQHandler+0x59a>
              ep->is_iso_incomplete = 0U;
 80096b8:	2200      	movs	r2, #0
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80096ba:	4629      	mov	r1, r5
              ep->is_iso_incomplete = 0U;
 80096bc:	f889 2000 	strb.w	r2, [r9]
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80096c0:	4620      	mov	r0, r4
 80096c2:	f7f8 fc73 	bl	8001fac <HAL_PCD_ISOOUTIncompleteCallback>
 80096c6:	e6b7      	b.n	8009438 <HAL_PCD_IRQHandler+0x480>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80096c8:	f41e 4f00 	tst.w	lr, #32768	; 0x8000
 80096cc:	d1e7      	bne.n	800969e <HAL_PCD_IRQHandler+0x6e6>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80096ce:	f01e 0f20 	tst.w	lr, #32
 80096d2:	d095      	beq.n	8009600 <HAL_PCD_IRQHandler+0x648>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80096d4:	2120      	movs	r1, #32
 80096d6:	6091      	str	r1, [r2, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80096d8:	e792      	b.n	8009600 <HAL_PCD_IRQHandler+0x648>
              ep->is_iso_incomplete = 0U;
 80096da:	2300      	movs	r3, #0
 80096dc:	7033      	strb	r3, [r6, #0]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80096de:	4649      	mov	r1, r9
 80096e0:	4620      	mov	r0, r4
 80096e2:	f7f8 fc67 	bl	8001fb4 <HAL_PCD_ISOINIncompleteCallback>
 80096e6:	e74b      	b.n	8009580 <HAL_PCD_IRQHandler+0x5c8>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 80096e8:	f01e 0f20 	tst.w	lr, #32
 80096ec:	d002      	beq.n	80096f4 <HAL_PCD_IRQHandler+0x73c>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80096ee:	2120      	movs	r1, #32
 80096f0:	6091      	str	r1, [r2, #8]
 80096f2:	e684      	b.n	80093fe <HAL_PCD_IRQHandler+0x446>
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
 80096f4:	f01e 0f28 	tst.w	lr, #40	; 0x28
 80096f8:	f47f ae81 	bne.w	80093fe <HAL_PCD_IRQHandler+0x446>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80096fc:	4912      	ldr	r1, [pc, #72]	; (8009748 <HAL_PCD_IRQHandler+0x790>)
 80096fe:	428b      	cmp	r3, r1
 8009700:	d902      	bls.n	8009708 <HAL_PCD_IRQHandler+0x750>
 8009702:	f41e 4f00 	tst.w	lr, #32768	; 0x8000
 8009706:	d1ca      	bne.n	800969e <HAL_PCD_IRQHandler+0x6e6>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8009708:	6911      	ldr	r1, [r2, #16]
 800970a:	f8d9 2019 	ldr.w	r2, [r9, #25]
 800970e:	f3c1 0112 	ubfx	r1, r1, #0, #19
 8009712:	1a52      	subs	r2, r2, r1
 8009714:	f8c9 201d 	str.w	r2, [r9, #29]
        if (epnum == 0U)
 8009718:	2f00      	cmp	r7, #0
 800971a:	f47f af71 	bne.w	8009600 <HAL_PCD_IRQHandler+0x648>
          if (ep->xfer_len == 0U)
 800971e:	f8d4 1294 	ldr.w	r1, [r4, #660]	; 0x294
 8009722:	b159      	cbz	r1, 800973c <HAL_PCD_IRQHandler+0x784>
            ep->xfer_buff += ep->xfer_count;
 8009724:	f8d4 128c 	ldr.w	r1, [r4, #652]	; 0x28c
 8009728:	440a      	add	r2, r1
 800972a:	f8c4 228c 	str.w	r2, [r4, #652]	; 0x28c
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800972e:	e767      	b.n	8009600 <HAL_PCD_IRQHandler+0x648>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8009730:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 8009734:	4639      	mov	r1, r7
 8009736:	f002 fbb7 	bl	800bea8 <USB_EP0_OutStart>
 800973a:	e761      	b.n	8009600 <HAL_PCD_IRQHandler+0x648>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800973c:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 8009740:	2101      	movs	r1, #1
 8009742:	f002 fbb1 	bl	800bea8 <USB_EP0_OutStart>
 8009746:	e75b      	b.n	8009600 <HAL_PCD_IRQHandler+0x648>
 8009748:	4f54300a 	.word	0x4f54300a
 800974c:	4f54310a 	.word	0x4f54310a

08009750 <HAL_PCD_SetAddress>:
  __HAL_LOCK(hpcd);
 8009750:	f890 24bc 	ldrb.w	r2, [r0, #1212]	; 0x4bc
 8009754:	2a01      	cmp	r2, #1
 8009756:	d00d      	beq.n	8009774 <HAL_PCD_SetAddress+0x24>
{
 8009758:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 800975a:	2201      	movs	r2, #1
 800975c:	4604      	mov	r4, r0
  hpcd->USB_Address = address;
 800975e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
  __HAL_LOCK(hpcd);
 8009762:	f880 24bc 	strb.w	r2, [r0, #1212]	; 0x4bc
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8009766:	6800      	ldr	r0, [r0, #0]
 8009768:	f002 fb2c 	bl	800bdc4 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 800976c:	2000      	movs	r0, #0
 800976e:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc
}
 8009772:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8009774:	2002      	movs	r0, #2
}
 8009776:	4770      	bx	lr

08009778 <HAL_PCD_EP_Open>:
{
 8009778:	b570      	push	{r4, r5, r6, lr}
 800977a:	f001 050f 	and.w	r5, r1, #15
  if ((ep_addr & 0x80U) == 0x80U)
 800977e:	f011 0f80 	tst.w	r1, #128	; 0x80
    ep->is_in = 1U;
 8009782:	eb05 01c5 	add.w	r1, r5, r5, lsl #3
{
 8009786:	4606      	mov	r6, r0
    ep->is_in = 1U;
 8009788:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800978c:	f04f 0424 	mov.w	r4, #36	; 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8009790:	d11e      	bne.n	80097d0 <HAL_PCD_EP_Open+0x58>
    ep->is_in = 0U;
 8009792:	2000      	movs	r0, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8009794:	fb04 6405 	mla	r4, r4, r5, r6
    ep->is_in = 0U;
 8009798:	f881 027d 	strb.w	r0, [r1, #637]	; 0x27d
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800979c:	f504 711f 	add.w	r1, r4, #636	; 0x27c
  if (ep->is_in != 0U)
 80097a0:	7848      	ldrb	r0, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 80097a2:	700d      	strb	r5, [r1, #0]
  ep->maxpacket = ep_mps;
 80097a4:	60ca      	str	r2, [r1, #12]
  ep->type = ep_type;
 80097a6:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 80097a8:	b100      	cbz	r0, 80097ac <HAL_PCD_EP_Open+0x34>
    ep->tx_fifo_num = ep->num;
 80097aa:	810d      	strh	r5, [r1, #8]
  if (ep_type == EP_TYPE_BULK)
 80097ac:	2b02      	cmp	r3, #2
    ep->data_pid_start = 0U;
 80097ae:	bf04      	itt	eq
 80097b0:	2300      	moveq	r3, #0
 80097b2:	714b      	strbeq	r3, [r1, #5]
  __HAL_LOCK(hpcd);
 80097b4:	f896 34bc 	ldrb.w	r3, [r6, #1212]	; 0x4bc
 80097b8:	2b01      	cmp	r3, #1
 80097ba:	d011      	beq.n	80097e0 <HAL_PCD_EP_Open+0x68>
 80097bc:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 80097be:	6830      	ldr	r0, [r6, #0]
  __HAL_LOCK(hpcd);
 80097c0:	f886 34bc 	strb.w	r3, [r6, #1212]	; 0x4bc
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 80097c4:	f001 ffda 	bl	800b77c <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 80097c8:	2000      	movs	r0, #0
 80097ca:	f886 04bc 	strb.w	r0, [r6, #1212]	; 0x4bc
}
 80097ce:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 1U;
 80097d0:	2001      	movs	r0, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80097d2:	fb04 6405 	mla	r4, r4, r5, r6
    ep->is_in = 1U;
 80097d6:	f881 003d 	strb.w	r0, [r1, #61]	; 0x3d
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80097da:	f104 013c 	add.w	r1, r4, #60	; 0x3c
    ep->is_in = 1U;
 80097de:	e7df      	b.n	80097a0 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 80097e0:	2002      	movs	r0, #2
}
 80097e2:	bd70      	pop	{r4, r5, r6, pc}

080097e4 <HAL_PCD_EP_Close>:
  if ((ep_addr & 0x80U) == 0x80U)
 80097e4:	f001 030f 	and.w	r3, r1, #15
    ep->is_in = 1U;
 80097e8:	eb03 02c3 	add.w	r2, r3, r3, lsl #3
  if ((ep_addr & 0x80U) == 0x80U)
 80097ec:	f011 0f80 	tst.w	r1, #128	; 0x80
{
 80097f0:	b510      	push	{r4, lr}
    ep->is_in = 1U;
 80097f2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
{
 80097f6:	4604      	mov	r4, r0
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80097f8:	f04f 0124 	mov.w	r1, #36	; 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 80097fc:	d115      	bne.n	800982a <HAL_PCD_EP_Close+0x46>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80097fe:	fb01 4103 	mla	r1, r1, r3, r4
 8009802:	f501 711f 	add.w	r1, r1, #636	; 0x27c
    ep->is_in = 0U;
 8009806:	2000      	movs	r0, #0
 8009808:	f882 027d 	strb.w	r0, [r2, #637]	; 0x27d
  ep->num   = ep_addr & EP_ADDR_MSK;
 800980c:	700b      	strb	r3, [r1, #0]
  __HAL_LOCK(hpcd);
 800980e:	f894 34bc 	ldrb.w	r3, [r4, #1212]	; 0x4bc
 8009812:	2b01      	cmp	r3, #1
 8009814:	d014      	beq.n	8009840 <HAL_PCD_EP_Close+0x5c>
 8009816:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8009818:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 800981a:	f884 34bc 	strb.w	r3, [r4, #1212]	; 0x4bc
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 800981e:	f001 fff9 	bl	800b814 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8009822:	2000      	movs	r0, #0
 8009824:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc
}
 8009828:	bd10      	pop	{r4, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800982a:	fb01 4103 	mla	r1, r1, r3, r4
 800982e:	313c      	adds	r1, #60	; 0x3c
    ep->is_in = 1U;
 8009830:	2001      	movs	r0, #1
 8009832:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
  ep->num   = ep_addr & EP_ADDR_MSK;
 8009836:	700b      	strb	r3, [r1, #0]
  __HAL_LOCK(hpcd);
 8009838:	f894 34bc 	ldrb.w	r3, [r4, #1212]	; 0x4bc
 800983c:	2b01      	cmp	r3, #1
 800983e:	d1ea      	bne.n	8009816 <HAL_PCD_EP_Close+0x32>
 8009840:	2002      	movs	r0, #2
}
 8009842:	bd10      	pop	{r4, pc}

08009844 <HAL_PCD_EP_Receive>:
{
 8009844:	b538      	push	{r3, r4, r5, lr}
 8009846:	f001 050f 	and.w	r5, r1, #15
  ep->xfer_buff = pBuf;
 800984a:	eb05 04c5 	add.w	r4, r5, r5, lsl #3
 800984e:	eb00 0484 	add.w	r4, r0, r4, lsl #2
  ep->xfer_count = 0U;
 8009852:	2100      	movs	r1, #0
  ep->xfer_buff = pBuf;
 8009854:	f8c4 228c 	str.w	r2, [r4, #652]	; 0x28c
  ep->xfer_count = 0U;
 8009858:	f8c4 129c 	str.w	r1, [r4, #668]	; 0x29c
  ep->is_in = 0U;
 800985c:	f884 127d 	strb.w	r1, [r4, #637]	; 0x27d
  ep->xfer_len = len;
 8009860:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
  ep->num = ep_addr & EP_ADDR_MSK;
 8009864:	f884 527c 	strb.w	r5, [r4, #636]	; 0x27c
  if (hpcd->Init.dma_enable == 1U)
 8009868:	6903      	ldr	r3, [r0, #16]
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800986a:	2124      	movs	r1, #36	; 0x24
 800986c:	fb01 0105 	mla	r1, r1, r5, r0
  if (hpcd->Init.dma_enable == 1U)
 8009870:	2b01      	cmp	r3, #1
    ep->dma_addr = (uint32_t)pBuf;
 8009872:	bf08      	it	eq
 8009874:	f8c4 2290 	streq.w	r2, [r4, #656]	; 0x290
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8009878:	6800      	ldr	r0, [r0, #0]
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800987a:	f501 711f 	add.w	r1, r1, #636	; 0x27c
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 800987e:	b2da      	uxtb	r2, r3
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8009880:	b91d      	cbnz	r5, 800988a <HAL_PCD_EP_Receive+0x46>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8009882:	f002 f941 	bl	800bb08 <USB_EP0StartXfer>
}
 8009886:	2000      	movs	r0, #0
 8009888:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 800988a:	f002 f825 	bl	800b8d8 <USB_EPStartXfer>
}
 800988e:	2000      	movs	r0, #0
 8009890:	bd38      	pop	{r3, r4, r5, pc}
 8009892:	bf00      	nop

08009894 <HAL_PCD_EP_GetRxCount>:
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
 8009894:	f001 010f 	and.w	r1, r1, #15
 8009898:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 800989c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
}
 80098a0:	f8d1 029c 	ldr.w	r0, [r1, #668]	; 0x29c
 80098a4:	4770      	bx	lr
 80098a6:	bf00      	nop

080098a8 <HAL_PCD_EP_Transmit>:
{
 80098a8:	b570      	push	{r4, r5, r6, lr}
 80098aa:	f001 050f 	and.w	r5, r1, #15
  ep->xfer_buff = pBuf;
 80098ae:	eb05 04c5 	add.w	r4, r5, r5, lsl #3
 80098b2:	eb00 0484 	add.w	r4, r0, r4, lsl #2
  ep->is_in = 1U;
 80098b6:	2101      	movs	r1, #1
  ep->xfer_count = 0U;
 80098b8:	2600      	movs	r6, #0
  ep->xfer_buff = pBuf;
 80098ba:	64e2      	str	r2, [r4, #76]	; 0x4c
  ep->is_in = 1U;
 80098bc:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  ep->xfer_len = len;
 80098c0:	6563      	str	r3, [r4, #84]	; 0x54
  ep->num = ep_addr & EP_ADDR_MSK;
 80098c2:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  ep->xfer_count = 0U;
 80098c6:	65e6      	str	r6, [r4, #92]	; 0x5c
  if (hpcd->Init.dma_enable == 1U)
 80098c8:	6903      	ldr	r3, [r0, #16]
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80098ca:	2124      	movs	r1, #36	; 0x24
 80098cc:	fb01 0105 	mla	r1, r1, r5, r0
  if (hpcd->Init.dma_enable == 1U)
 80098d0:	2b01      	cmp	r3, #1
    ep->dma_addr = (uint32_t)pBuf;
 80098d2:	bf08      	it	eq
 80098d4:	6522      	streq	r2, [r4, #80]	; 0x50
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80098d6:	6800      	ldr	r0, [r0, #0]
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80098d8:	313c      	adds	r1, #60	; 0x3c
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80098da:	b2da      	uxtb	r2, r3
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 80098dc:	b91d      	cbnz	r5, 80098e6 <HAL_PCD_EP_Transmit+0x3e>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80098de:	f002 f913 	bl	800bb08 <USB_EP0StartXfer>
}
 80098e2:	2000      	movs	r0, #0
 80098e4:	bd70      	pop	{r4, r5, r6, pc}
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80098e6:	f001 fff7 	bl	800b8d8 <USB_EPStartXfer>
}
 80098ea:	2000      	movs	r0, #0
 80098ec:	bd70      	pop	{r4, r5, r6, pc}
 80098ee:	bf00      	nop

080098f0 <HAL_PCD_EP_SetStall>:
{
 80098f0:	b538      	push	{r3, r4, r5, lr}
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 80098f2:	6843      	ldr	r3, [r0, #4]
 80098f4:	f001 050f 	and.w	r5, r1, #15
 80098f8:	429d      	cmp	r5, r3
 80098fa:	d833      	bhi.n	8009964 <HAL_PCD_EP_SetStall+0x74>
  if ((0x80U & ep_addr) == 0x80U)
 80098fc:	060b      	lsls	r3, r1, #24
 80098fe:	4604      	mov	r4, r0
 8009900:	d41c      	bmi.n	800993c <HAL_PCD_EP_SetStall+0x4c>
    ep->is_in = 0U;
 8009902:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8009906:	eb00 0383 	add.w	r3, r0, r3, lsl #2
    ep = &hpcd->OUT_ep[ep_addr];
 800990a:	2024      	movs	r0, #36	; 0x24
 800990c:	fb00 4101 	mla	r1, r0, r1, r4
    ep->is_in = 0U;
 8009910:	2200      	movs	r2, #0
    ep = &hpcd->OUT_ep[ep_addr];
 8009912:	f501 711f 	add.w	r1, r1, #636	; 0x27c
    ep->is_in = 0U;
 8009916:	f883 227d 	strb.w	r2, [r3, #637]	; 0x27d
  ep->is_stall = 1U;
 800991a:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
 800991c:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
 800991e:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
 8009920:	f894 24bc 	ldrb.w	r2, [r4, #1212]	; 0x4bc
 8009924:	429a      	cmp	r2, r3
 8009926:	d01b      	beq.n	8009960 <HAL_PCD_EP_SetStall+0x70>
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8009928:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 800992a:	f884 34bc 	strb.w	r3, [r4, #1212]	; 0x4bc
  (void)USB_EPSetStall(hpcd->Instance, ep);
 800992e:	f002 f9ef 	bl	800bd10 <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8009932:	b1cd      	cbz	r5, 8009968 <HAL_PCD_EP_SetStall+0x78>
  __HAL_UNLOCK(hpcd);
 8009934:	2000      	movs	r0, #0
 8009936:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc
}
 800993a:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 1U;
 800993c:	eb05 03c5 	add.w	r3, r5, r5, lsl #3
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8009940:	2124      	movs	r1, #36	; 0x24
 8009942:	fb01 0105 	mla	r1, r1, r5, r0
    ep->is_in = 1U;
 8009946:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800994a:	2201      	movs	r2, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800994c:	313c      	adds	r1, #60	; 0x3c
    ep->is_in = 1U;
 800994e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  ep->is_stall = 1U;
 8009952:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
 8009954:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
 8009956:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
 8009958:	f894 24bc 	ldrb.w	r2, [r4, #1212]	; 0x4bc
 800995c:	429a      	cmp	r2, r3
 800995e:	d1e3      	bne.n	8009928 <HAL_PCD_EP_SetStall+0x38>
 8009960:	2002      	movs	r0, #2
}
 8009962:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009964:	2001      	movs	r0, #1
}
 8009966:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8009968:	7c21      	ldrb	r1, [r4, #16]
 800996a:	6820      	ldr	r0, [r4, #0]
 800996c:	f204 42c4 	addw	r2, r4, #1220	; 0x4c4
 8009970:	f002 fa9a 	bl	800bea8 <USB_EP0_OutStart>
 8009974:	e7de      	b.n	8009934 <HAL_PCD_EP_SetStall+0x44>
 8009976:	bf00      	nop

08009978 <HAL_PCD_EP_ClrStall>:
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8009978:	6842      	ldr	r2, [r0, #4]
{
 800997a:	b538      	push	{r3, r4, r5, lr}
 800997c:	f001 030f 	and.w	r3, r1, #15
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8009980:	4293      	cmp	r3, r2
 8009982:	d830      	bhi.n	80099e6 <HAL_PCD_EP_ClrStall+0x6e>
    ep->is_in = 1U;
 8009984:	eb03 02c3 	add.w	r2, r3, r3, lsl #3
  if ((0x80U & ep_addr) == 0x80U)
 8009988:	f011 0f80 	tst.w	r1, #128	; 0x80
 800998c:	4604      	mov	r4, r0
    ep->is_in = 1U;
 800998e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8009992:	f04f 0124 	mov.w	r1, #36	; 0x24
  if ((0x80U & ep_addr) == 0x80U)
 8009996:	d117      	bne.n	80099c8 <HAL_PCD_EP_ClrStall+0x50>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8009998:	fb01 4103 	mla	r1, r1, r3, r4
 800999c:	f501 711f 	add.w	r1, r1, #636	; 0x27c
    ep->is_in = 0U;
 80099a0:	2000      	movs	r0, #0
  ep->is_stall = 0U;
 80099a2:	2500      	movs	r5, #0
    ep->is_in = 0U;
 80099a4:	f882 027d 	strb.w	r0, [r2, #637]	; 0x27d
  ep->num = ep_addr & EP_ADDR_MSK;
 80099a8:	700b      	strb	r3, [r1, #0]
  ep->is_stall = 0U;
 80099aa:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
 80099ac:	f894 34bc 	ldrb.w	r3, [r4, #1212]	; 0x4bc
 80099b0:	2b01      	cmp	r3, #1
 80099b2:	d016      	beq.n	80099e2 <HAL_PCD_EP_ClrStall+0x6a>
 80099b4:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80099b6:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 80099b8:	f884 34bc 	strb.w	r3, [r4, #1212]	; 0x4bc
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80099bc:	f002 f9d6 	bl	800bd6c <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 80099c0:	f884 54bc 	strb.w	r5, [r4, #1212]	; 0x4bc
  return HAL_OK;
 80099c4:	4628      	mov	r0, r5
}
 80099c6:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80099c8:	fb01 4103 	mla	r1, r1, r3, r4
 80099cc:	313c      	adds	r1, #60	; 0x3c
    ep->is_in = 1U;
 80099ce:	2001      	movs	r0, #1
  ep->is_stall = 0U;
 80099d0:	2500      	movs	r5, #0
    ep->is_in = 1U;
 80099d2:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
  ep->num = ep_addr & EP_ADDR_MSK;
 80099d6:	700b      	strb	r3, [r1, #0]
  ep->is_stall = 0U;
 80099d8:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
 80099da:	f894 34bc 	ldrb.w	r3, [r4, #1212]	; 0x4bc
 80099de:	2b01      	cmp	r3, #1
 80099e0:	d1e8      	bne.n	80099b4 <HAL_PCD_EP_ClrStall+0x3c>
 80099e2:	2002      	movs	r0, #2
}
 80099e4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80099e6:	2001      	movs	r0, #1
}
 80099e8:	bd38      	pop	{r3, r4, r5, pc}
 80099ea:	bf00      	nop

080099ec <HAL_PCD_EP_Flush>:
  __HAL_LOCK(hpcd);
 80099ec:	f890 34bc 	ldrb.w	r3, [r0, #1212]	; 0x4bc
 80099f0:	2b01      	cmp	r3, #1
 80099f2:	d016      	beq.n	8009a22 <HAL_PCD_EP_Flush+0x36>
 80099f4:	2301      	movs	r3, #1
{
 80099f6:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 80099f8:	f880 34bc 	strb.w	r3, [r0, #1212]	; 0x4bc
  if ((ep_addr & 0x80U) == 0x80U)
 80099fc:	060b      	lsls	r3, r1, #24
 80099fe:	4604      	mov	r4, r0
 8009a00:	d406      	bmi.n	8009a10 <HAL_PCD_EP_Flush+0x24>
    (void)USB_FlushRxFifo(hpcd->Instance);
 8009a02:	6800      	ldr	r0, [r0, #0]
 8009a04:	f001 fdc0 	bl	800b588 <USB_FlushRxFifo>
  __HAL_UNLOCK(hpcd);
 8009a08:	2000      	movs	r0, #0
 8009a0a:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc
}
 8009a0e:	bd10      	pop	{r4, pc}
    (void)USB_FlushTxFifo(hpcd->Instance, (uint32_t)ep_addr & EP_ADDR_MSK);
 8009a10:	f001 010f 	and.w	r1, r1, #15
 8009a14:	6800      	ldr	r0, [r0, #0]
 8009a16:	f001 fd8d 	bl	800b534 <USB_FlushTxFifo>
  __HAL_UNLOCK(hpcd);
 8009a1a:	2000      	movs	r0, #0
 8009a1c:	f884 04bc 	strb.w	r0, [r4, #1212]	; 0x4bc
}
 8009a20:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8009a22:	2002      	movs	r0, #2
}
 8009a24:	4770      	bx	lr
 8009a26:	bf00      	nop

08009a28 <HAL_PCDEx_SetTxFiFo>:
  * @param  fifo The number of Tx fifo
  * @param  size Fifo size
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
{
 8009a28:	b430      	push	{r4, r5}
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8009a2a:	6805      	ldr	r5, [r0, #0]
 8009a2c:	6a6b      	ldr	r3, [r5, #36]	; 0x24

  if (fifo == 0U)
 8009a2e:	b929      	cbnz	r1, 8009a3c <HAL_PCDEx_SetTxFiFo+0x14>
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8009a30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8009a34:	62ab      	str	r3, [r5, #40]	; 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8009a36:	2000      	movs	r0, #0
 8009a38:	bc30      	pop	{r4, r5}
 8009a3a:	4770      	bx	lr
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8009a3c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8009a3e:	1e4c      	subs	r4, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8009a40:	eb03 4010 	add.w	r0, r3, r0, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8009a44:	d00b      	beq.n	8009a5e <HAL_PCDEx_SetTxFiFo+0x36>
 8009a46:	2300      	movs	r3, #0
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8009a48:	f103 0140 	add.w	r1, r3, #64	; 0x40
 8009a4c:	eb05 0181 	add.w	r1, r5, r1, lsl #2
    for (i = 0U; i < (fifo - 1U); i++)
 8009a50:	3301      	adds	r3, #1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8009a52:	6849      	ldr	r1, [r1, #4]
    for (i = 0U; i < (fifo - 1U); i++)
 8009a54:	b2db      	uxtb	r3, r3
 8009a56:	42a3      	cmp	r3, r4
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8009a58:	eb00 4011 	add.w	r0, r0, r1, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8009a5c:	d3f4      	bcc.n	8009a48 <HAL_PCDEx_SetTxFiFo+0x20>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8009a5e:	3440      	adds	r4, #64	; 0x40
 8009a60:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8009a64:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009a68:	6060      	str	r0, [r4, #4]
}
 8009a6a:	2000      	movs	r0, #0
 8009a6c:	bc30      	pop	{r4, r5}
 8009a6e:	4770      	bx	lr

08009a70 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8009a70:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8009a72:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8009a74:	6259      	str	r1, [r3, #36]	; 0x24
}
 8009a76:	4770      	bx	lr

08009a78 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8009a78:	4770      	bx	lr
 8009a7a:	bf00      	nop

08009a7c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009a7c:	2800      	cmp	r0, #0
 8009a7e:	f000 81a5 	beq.w	8009dcc <HAL_RCC_OscConfig+0x350>
{
 8009a82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009a86:	6803      	ldr	r3, [r0, #0]
 8009a88:	07dd      	lsls	r5, r3, #31
{
 8009a8a:	b082      	sub	sp, #8
 8009a8c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009a8e:	d52f      	bpl.n	8009af0 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009a90:	49ac      	ldr	r1, [pc, #688]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009a92:	688a      	ldr	r2, [r1, #8]
 8009a94:	f002 020c 	and.w	r2, r2, #12
 8009a98:	2a04      	cmp	r2, #4
 8009a9a:	f000 80ec 	beq.w	8009c76 <HAL_RCC_OscConfig+0x1fa>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009a9e:	688a      	ldr	r2, [r1, #8]
 8009aa0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009aa4:	2a08      	cmp	r2, #8
 8009aa6:	f000 80e2 	beq.w	8009c6e <HAL_RCC_OscConfig+0x1f2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009aaa:	6863      	ldr	r3, [r4, #4]
 8009aac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009ab0:	f000 80eb 	beq.w	8009c8a <HAL_RCC_OscConfig+0x20e>
 8009ab4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009ab8:	f000 8178 	beq.w	8009dac <HAL_RCC_OscConfig+0x330>
 8009abc:	4da1      	ldr	r5, [pc, #644]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009abe:	682a      	ldr	r2, [r5, #0]
 8009ac0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8009ac4:	602a      	str	r2, [r5, #0]
 8009ac6:	682a      	ldr	r2, [r5, #0]
 8009ac8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009acc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	f040 80e0 	bne.w	8009c94 <HAL_RCC_OscConfig+0x218>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009ad4:	f7fe fe3c 	bl	8008750 <HAL_GetTick>
 8009ad8:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009ada:	e005      	b.n	8009ae8 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009adc:	f7fe fe38 	bl	8008750 <HAL_GetTick>
 8009ae0:	1b80      	subs	r0, r0, r6
 8009ae2:	2864      	cmp	r0, #100	; 0x64
 8009ae4:	f200 8100 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009ae8:	682b      	ldr	r3, [r5, #0]
 8009aea:	039b      	lsls	r3, r3, #14
 8009aec:	d4f6      	bmi.n	8009adc <HAL_RCC_OscConfig+0x60>
 8009aee:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8009af0:	079f      	lsls	r7, r3, #30
 8009af2:	d528      	bpl.n	8009b46 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009af4:	4a93      	ldr	r2, [pc, #588]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009af6:	6891      	ldr	r1, [r2, #8]
 8009af8:	f011 0f0c 	tst.w	r1, #12
 8009afc:	f000 8090 	beq.w	8009c20 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009b00:	6891      	ldr	r1, [r2, #8]
 8009b02:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009b06:	2908      	cmp	r1, #8
 8009b08:	f000 8086 	beq.w	8009c18 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8009b0c:	68e3      	ldr	r3, [r4, #12]
 8009b0e:	2b00      	cmp	r3, #0
 8009b10:	f000 8106 	beq.w	8009d20 <HAL_RCC_OscConfig+0x2a4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8009b14:	4b8c      	ldr	r3, [pc, #560]	; (8009d48 <HAL_RCC_OscConfig+0x2cc>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009b16:	4e8b      	ldr	r6, [pc, #556]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_ENABLE();
 8009b18:	2201      	movs	r2, #1
 8009b1a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009b1c:	f7fe fe18 	bl	8008750 <HAL_GetTick>
 8009b20:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009b22:	e005      	b.n	8009b30 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009b24:	f7fe fe14 	bl	8008750 <HAL_GetTick>
 8009b28:	1b40      	subs	r0, r0, r5
 8009b2a:	2802      	cmp	r0, #2
 8009b2c:	f200 80dc 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009b30:	6833      	ldr	r3, [r6, #0]
 8009b32:	0798      	lsls	r0, r3, #30
 8009b34:	d5f6      	bpl.n	8009b24 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009b36:	6833      	ldr	r3, [r6, #0]
 8009b38:	6922      	ldr	r2, [r4, #16]
 8009b3a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009b3e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009b42:	6033      	str	r3, [r6, #0]
 8009b44:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009b46:	071a      	lsls	r2, r3, #28
 8009b48:	d452      	bmi.n	8009bf0 <HAL_RCC_OscConfig+0x174>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8009b4a:	0758      	lsls	r0, r3, #29
 8009b4c:	d52f      	bpl.n	8009bae <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8009b4e:	4a7d      	ldr	r2, [pc, #500]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009b50:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009b52:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 8009b56:	d07e      	beq.n	8009c56 <HAL_RCC_OscConfig+0x1da>
    FlagStatus       pwrclkchanged = RESET;
 8009b58:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009b5a:	4e7c      	ldr	r6, [pc, #496]	; (8009d4c <HAL_RCC_OscConfig+0x2d0>)
 8009b5c:	6833      	ldr	r3, [r6, #0]
 8009b5e:	05d9      	lsls	r1, r3, #23
 8009b60:	f140 80b2 	bpl.w	8009cc8 <HAL_RCC_OscConfig+0x24c>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009b64:	68a3      	ldr	r3, [r4, #8]
 8009b66:	2b01      	cmp	r3, #1
 8009b68:	f000 80c2 	beq.w	8009cf0 <HAL_RCC_OscConfig+0x274>
 8009b6c:	2b05      	cmp	r3, #5
 8009b6e:	f000 812f 	beq.w	8009dd0 <HAL_RCC_OscConfig+0x354>
 8009b72:	4e74      	ldr	r6, [pc, #464]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009b74:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8009b76:	f022 0201 	bic.w	r2, r2, #1
 8009b7a:	6732      	str	r2, [r6, #112]	; 0x70
 8009b7c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8009b7e:	f022 0204 	bic.w	r2, r2, #4
 8009b82:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009b84:	2b00      	cmp	r3, #0
 8009b86:	f040 80b8 	bne.w	8009cfa <HAL_RCC_OscConfig+0x27e>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8009b8a:	f7fe fde1 	bl	8008750 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009b8e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8009b92:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009b94:	e005      	b.n	8009ba2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009b96:	f7fe fddb 	bl	8008750 <HAL_GetTick>
 8009b9a:	1bc0      	subs	r0, r0, r7
 8009b9c:	4540      	cmp	r0, r8
 8009b9e:	f200 80a3 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009ba2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8009ba4:	0798      	lsls	r0, r3, #30
 8009ba6:	d4f6      	bmi.n	8009b96 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8009ba8:	2d00      	cmp	r5, #0
 8009baa:	f040 8109 	bne.w	8009dc0 <HAL_RCC_OscConfig+0x344>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8009bae:	69a0      	ldr	r0, [r4, #24]
 8009bb0:	b1d0      	cbz	r0, 8009be8 <HAL_RCC_OscConfig+0x16c>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8009bb2:	4d64      	ldr	r5, [pc, #400]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009bb4:	68ab      	ldr	r3, [r5, #8]
 8009bb6:	f003 030c 	and.w	r3, r3, #12
 8009bba:	2b08      	cmp	r3, #8
 8009bbc:	f000 80cc 	beq.w	8009d58 <HAL_RCC_OscConfig+0x2dc>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8009bc0:	4b63      	ldr	r3, [pc, #396]	; (8009d50 <HAL_RCC_OscConfig+0x2d4>)
 8009bc2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009bc4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8009bc6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009bc8:	f000 810c 	beq.w	8009de4 <HAL_RCC_OscConfig+0x368>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009bcc:	f7fe fdc0 	bl	8008750 <HAL_GetTick>

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009bd0:	462c      	mov	r4, r5
        tickstart = HAL_GetTick();
 8009bd2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009bd4:	e005      	b.n	8009be2 <HAL_RCC_OscConfig+0x166>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009bd6:	f7fe fdbb 	bl	8008750 <HAL_GetTick>
 8009bda:	1b40      	subs	r0, r0, r5
 8009bdc:	2802      	cmp	r0, #2
 8009bde:	f200 8083 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009be2:	6823      	ldr	r3, [r4, #0]
 8009be4:	019b      	lsls	r3, r3, #6
 8009be6:	d4f6      	bmi.n	8009bd6 <HAL_RCC_OscConfig+0x15a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8009be8:	2000      	movs	r0, #0
}
 8009bea:	b002      	add	sp, #8
 8009bec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8009bf0:	6963      	ldr	r3, [r4, #20]
 8009bf2:	b303      	cbz	r3, 8009c36 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 8009bf4:	4b57      	ldr	r3, [pc, #348]	; (8009d54 <HAL_RCC_OscConfig+0x2d8>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009bf6:	4e53      	ldr	r6, [pc, #332]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
      __HAL_RCC_LSI_ENABLE();
 8009bf8:	2201      	movs	r2, #1
 8009bfa:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8009bfc:	f7fe fda8 	bl	8008750 <HAL_GetTick>
 8009c00:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009c02:	e004      	b.n	8009c0e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009c04:	f7fe fda4 	bl	8008750 <HAL_GetTick>
 8009c08:	1b40      	subs	r0, r0, r5
 8009c0a:	2802      	cmp	r0, #2
 8009c0c:	d86c      	bhi.n	8009ce8 <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009c0e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009c10:	079b      	lsls	r3, r3, #30
 8009c12:	d5f7      	bpl.n	8009c04 <HAL_RCC_OscConfig+0x188>
 8009c14:	6823      	ldr	r3, [r4, #0]
 8009c16:	e798      	b.n	8009b4a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009c18:	6852      	ldr	r2, [r2, #4]
 8009c1a:	0256      	lsls	r6, r2, #9
 8009c1c:	f53f af76 	bmi.w	8009b0c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8009c20:	4a48      	ldr	r2, [pc, #288]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009c22:	6812      	ldr	r2, [r2, #0]
 8009c24:	0795      	lsls	r5, r2, #30
 8009c26:	d543      	bpl.n	8009cb0 <HAL_RCC_OscConfig+0x234>
 8009c28:	68e2      	ldr	r2, [r4, #12]
 8009c2a:	2a01      	cmp	r2, #1
 8009c2c:	d040      	beq.n	8009cb0 <HAL_RCC_OscConfig+0x234>
        return HAL_ERROR;
 8009c2e:	2001      	movs	r0, #1
}
 8009c30:	b002      	add	sp, #8
 8009c32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 8009c36:	4a47      	ldr	r2, [pc, #284]	; (8009d54 <HAL_RCC_OscConfig+0x2d8>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009c38:	4e42      	ldr	r6, [pc, #264]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
      __HAL_RCC_LSI_DISABLE();
 8009c3a:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 8009c3c:	f7fe fd88 	bl	8008750 <HAL_GetTick>
 8009c40:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009c42:	e004      	b.n	8009c4e <HAL_RCC_OscConfig+0x1d2>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009c44:	f7fe fd84 	bl	8008750 <HAL_GetTick>
 8009c48:	1b40      	subs	r0, r0, r5
 8009c4a:	2802      	cmp	r0, #2
 8009c4c:	d84c      	bhi.n	8009ce8 <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009c4e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009c50:	079f      	lsls	r7, r3, #30
 8009c52:	d4f7      	bmi.n	8009c44 <HAL_RCC_OscConfig+0x1c8>
 8009c54:	e7de      	b.n	8009c14 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 8009c56:	9301      	str	r3, [sp, #4]
 8009c58:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009c5a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009c5e:	6413      	str	r3, [r2, #64]	; 0x40
 8009c60:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009c62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009c66:	9301      	str	r3, [sp, #4]
 8009c68:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8009c6a:	2501      	movs	r5, #1
 8009c6c:	e775      	b.n	8009b5a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009c6e:	684a      	ldr	r2, [r1, #4]
 8009c70:	0250      	lsls	r0, r2, #9
 8009c72:	f57f af1a 	bpl.w	8009aaa <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8009c76:	4a33      	ldr	r2, [pc, #204]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009c78:	6812      	ldr	r2, [r2, #0]
 8009c7a:	0391      	lsls	r1, r2, #14
 8009c7c:	f57f af38 	bpl.w	8009af0 <HAL_RCC_OscConfig+0x74>
 8009c80:	6862      	ldr	r2, [r4, #4]
 8009c82:	2a00      	cmp	r2, #0
 8009c84:	f47f af34 	bne.w	8009af0 <HAL_RCC_OscConfig+0x74>
 8009c88:	e7d1      	b.n	8009c2e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009c8a:	4a2e      	ldr	r2, [pc, #184]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009c8c:	6813      	ldr	r3, [r2, #0]
 8009c8e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009c92:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8009c94:	f7fe fd5c 	bl	8008750 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009c98:	4e2a      	ldr	r6, [pc, #168]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
 8009c9a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009c9c:	e004      	b.n	8009ca8 <HAL_RCC_OscConfig+0x22c>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009c9e:	f7fe fd57 	bl	8008750 <HAL_GetTick>
 8009ca2:	1b40      	subs	r0, r0, r5
 8009ca4:	2864      	cmp	r0, #100	; 0x64
 8009ca6:	d81f      	bhi.n	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009ca8:	6833      	ldr	r3, [r6, #0]
 8009caa:	039a      	lsls	r2, r3, #14
 8009cac:	d5f7      	bpl.n	8009c9e <HAL_RCC_OscConfig+0x222>
 8009cae:	e71e      	b.n	8009aee <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009cb0:	4924      	ldr	r1, [pc, #144]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009cb2:	6920      	ldr	r0, [r4, #16]
 8009cb4:	680a      	ldr	r2, [r1, #0]
 8009cb6:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8009cba:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8009cbe:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009cc0:	071a      	lsls	r2, r3, #28
 8009cc2:	f57f af42 	bpl.w	8009b4a <HAL_RCC_OscConfig+0xce>
 8009cc6:	e793      	b.n	8009bf0 <HAL_RCC_OscConfig+0x174>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8009cc8:	6833      	ldr	r3, [r6, #0]
 8009cca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009cce:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8009cd0:	f7fe fd3e 	bl	8008750 <HAL_GetTick>
 8009cd4:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009cd6:	6833      	ldr	r3, [r6, #0]
 8009cd8:	05da      	lsls	r2, r3, #23
 8009cda:	f53f af43 	bmi.w	8009b64 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009cde:	f7fe fd37 	bl	8008750 <HAL_GetTick>
 8009ce2:	1bc0      	subs	r0, r0, r7
 8009ce4:	2802      	cmp	r0, #2
 8009ce6:	d9f6      	bls.n	8009cd6 <HAL_RCC_OscConfig+0x25a>
            return HAL_TIMEOUT;
 8009ce8:	2003      	movs	r0, #3
}
 8009cea:	b002      	add	sp, #8
 8009cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009cf0:	4a14      	ldr	r2, [pc, #80]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
 8009cf2:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8009cf4:	f043 0301 	orr.w	r3, r3, #1
 8009cf8:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 8009cfa:	f7fe fd29 	bl	8008750 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009cfe:	4f11      	ldr	r7, [pc, #68]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
 8009d00:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009d02:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009d06:	e004      	b.n	8009d12 <HAL_RCC_OscConfig+0x296>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009d08:	f7fe fd22 	bl	8008750 <HAL_GetTick>
 8009d0c:	1b80      	subs	r0, r0, r6
 8009d0e:	4540      	cmp	r0, r8
 8009d10:	d8ea      	bhi.n	8009ce8 <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009d12:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8009d14:	079b      	lsls	r3, r3, #30
 8009d16:	d5f7      	bpl.n	8009d08 <HAL_RCC_OscConfig+0x28c>
    if(pwrclkchanged == SET)
 8009d18:	2d00      	cmp	r5, #0
 8009d1a:	f43f af48 	beq.w	8009bae <HAL_RCC_OscConfig+0x132>
 8009d1e:	e04f      	b.n	8009dc0 <HAL_RCC_OscConfig+0x344>
        __HAL_RCC_HSI_DISABLE();
 8009d20:	4a09      	ldr	r2, [pc, #36]	; (8009d48 <HAL_RCC_OscConfig+0x2cc>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009d22:	4e08      	ldr	r6, [pc, #32]	; (8009d44 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_DISABLE();
 8009d24:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8009d26:	f7fe fd13 	bl	8008750 <HAL_GetTick>
 8009d2a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009d2c:	e004      	b.n	8009d38 <HAL_RCC_OscConfig+0x2bc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009d2e:	f7fe fd0f 	bl	8008750 <HAL_GetTick>
 8009d32:	1b40      	subs	r0, r0, r5
 8009d34:	2802      	cmp	r0, #2
 8009d36:	d8d7      	bhi.n	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009d38:	6833      	ldr	r3, [r6, #0]
 8009d3a:	0799      	lsls	r1, r3, #30
 8009d3c:	d4f7      	bmi.n	8009d2e <HAL_RCC_OscConfig+0x2b2>
 8009d3e:	6823      	ldr	r3, [r4, #0]
 8009d40:	e701      	b.n	8009b46 <HAL_RCC_OscConfig+0xca>
 8009d42:	bf00      	nop
 8009d44:	40023800 	.word	0x40023800
 8009d48:	42470000 	.word	0x42470000
 8009d4c:	40007000 	.word	0x40007000
 8009d50:	42470060 	.word	0x42470060
 8009d54:	42470e80 	.word	0x42470e80
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8009d58:	2801      	cmp	r0, #1
 8009d5a:	f43f af46 	beq.w	8009bea <HAL_RCC_OscConfig+0x16e>
        pll_config = RCC->PLLCFGR;
 8009d5e:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009d60:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009d62:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009d66:	4291      	cmp	r1, r2
 8009d68:	f47f af61 	bne.w	8009c2e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009d6c:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009d6e:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009d72:	4291      	cmp	r1, r2
 8009d74:	f47f af5b 	bne.w	8009c2e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009d78:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009d7a:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8009d7e:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009d80:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8009d84:	f47f af53 	bne.w	8009c2e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009d88:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009d8a:	0852      	lsrs	r2, r2, #1
 8009d8c:	3a01      	subs	r2, #1
 8009d8e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009d92:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8009d96:	f47f af4a 	bne.w	8009c2e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8009d9a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009d9c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009da0:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
            return HAL_TIMEOUT;
 8009da4:	bf14      	ite	ne
 8009da6:	2001      	movne	r0, #1
 8009da8:	2000      	moveq	r0, #0
 8009daa:	e71e      	b.n	8009bea <HAL_RCC_OscConfig+0x16e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009dac:	4b24      	ldr	r3, [pc, #144]	; (8009e40 <HAL_RCC_OscConfig+0x3c4>)
 8009dae:	681a      	ldr	r2, [r3, #0]
 8009db0:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8009db4:	601a      	str	r2, [r3, #0]
 8009db6:	681a      	ldr	r2, [r3, #0]
 8009db8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8009dbc:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009dbe:	e769      	b.n	8009c94 <HAL_RCC_OscConfig+0x218>
      __HAL_RCC_PWR_CLK_DISABLE();
 8009dc0:	4a1f      	ldr	r2, [pc, #124]	; (8009e40 <HAL_RCC_OscConfig+0x3c4>)
 8009dc2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009dc4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009dc8:	6413      	str	r3, [r2, #64]	; 0x40
 8009dca:	e6f0      	b.n	8009bae <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 8009dcc:	2001      	movs	r0, #1
}
 8009dce:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009dd0:	4b1b      	ldr	r3, [pc, #108]	; (8009e40 <HAL_RCC_OscConfig+0x3c4>)
 8009dd2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009dd4:	f042 0204 	orr.w	r2, r2, #4
 8009dd8:	671a      	str	r2, [r3, #112]	; 0x70
 8009dda:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009ddc:	f042 0201 	orr.w	r2, r2, #1
 8009de0:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009de2:	e78a      	b.n	8009cfa <HAL_RCC_OscConfig+0x27e>
        tickstart = HAL_GetTick();
 8009de4:	f7fe fcb4 	bl	8008750 <HAL_GetTick>
 8009de8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009dea:	e005      	b.n	8009df8 <HAL_RCC_OscConfig+0x37c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009dec:	f7fe fcb0 	bl	8008750 <HAL_GetTick>
 8009df0:	1b80      	subs	r0, r0, r6
 8009df2:	2802      	cmp	r0, #2
 8009df4:	f63f af78 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009df8:	682b      	ldr	r3, [r5, #0]
 8009dfa:	0199      	lsls	r1, r3, #6
 8009dfc:	d4f6      	bmi.n	8009dec <HAL_RCC_OscConfig+0x370>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009dfe:	e9d4 3607 	ldrd	r3, r6, [r4, #28]
 8009e02:	e9d4 0209 	ldrd	r0, r2, [r4, #36]	; 0x24
 8009e06:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009e08:	4333      	orrs	r3, r6
 8009e0a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8009e0e:	0852      	lsrs	r2, r2, #1
 8009e10:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8009e14:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 8009e16:	490b      	ldr	r1, [pc, #44]	; (8009e44 <HAL_RCC_OscConfig+0x3c8>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009e18:	4e09      	ldr	r6, [pc, #36]	; (8009e40 <HAL_RCC_OscConfig+0x3c4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009e1a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 8009e1e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009e20:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8009e22:	600a      	str	r2, [r1, #0]
        tickstart = HAL_GetTick();
 8009e24:	f7fe fc94 	bl	8008750 <HAL_GetTick>
 8009e28:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009e2a:	e005      	b.n	8009e38 <HAL_RCC_OscConfig+0x3bc>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009e2c:	f7fe fc90 	bl	8008750 <HAL_GetTick>
 8009e30:	1b00      	subs	r0, r0, r4
 8009e32:	2802      	cmp	r0, #2
 8009e34:	f63f af58 	bhi.w	8009ce8 <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009e38:	6833      	ldr	r3, [r6, #0]
 8009e3a:	019a      	lsls	r2, r3, #6
 8009e3c:	d5f6      	bpl.n	8009e2c <HAL_RCC_OscConfig+0x3b0>
 8009e3e:	e6d3      	b.n	8009be8 <HAL_RCC_OscConfig+0x16c>
 8009e40:	40023800 	.word	0x40023800
 8009e44:	42470060 	.word	0x42470060

08009e48 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009e48:	4917      	ldr	r1, [pc, #92]	; (8009ea8 <HAL_RCC_GetSysClockFreq+0x60>)
{
 8009e4a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009e4c:	688b      	ldr	r3, [r1, #8]
 8009e4e:	f003 030c 	and.w	r3, r3, #12
 8009e52:	2b04      	cmp	r3, #4
 8009e54:	d01b      	beq.n	8009e8e <HAL_RCC_GetSysClockFreq+0x46>
 8009e56:	2b08      	cmp	r3, #8
 8009e58:	d117      	bne.n	8009e8a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009e5a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009e5c:	684b      	ldr	r3, [r1, #4]
 8009e5e:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009e62:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009e66:	d114      	bne.n	8009e92 <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009e68:	6849      	ldr	r1, [r1, #4]
 8009e6a:	4810      	ldr	r0, [pc, #64]	; (8009eac <HAL_RCC_GetSysClockFreq+0x64>)
 8009e6c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8009e70:	fba1 0100 	umull	r0, r1, r1, r0
 8009e74:	f7f6 f9fc 	bl	8000270 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8009e78:	4b0b      	ldr	r3, [pc, #44]	; (8009ea8 <HAL_RCC_GetSysClockFreq+0x60>)
 8009e7a:	685b      	ldr	r3, [r3, #4]
 8009e7c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8009e80:	3301      	adds	r3, #1
 8009e82:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8009e84:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8009e88:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 8009e8a:	4808      	ldr	r0, [pc, #32]	; (8009eac <HAL_RCC_GetSysClockFreq+0x64>)
}
 8009e8c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009e8e:	4808      	ldr	r0, [pc, #32]	; (8009eb0 <HAL_RCC_GetSysClockFreq+0x68>)
}
 8009e90:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009e92:	684b      	ldr	r3, [r1, #4]
 8009e94:	4806      	ldr	r0, [pc, #24]	; (8009eb0 <HAL_RCC_GetSysClockFreq+0x68>)
 8009e96:	f3c3 1388 	ubfx	r3, r3, #6, #9
 8009e9a:	fba3 0100 	umull	r0, r1, r3, r0
 8009e9e:	2300      	movs	r3, #0
 8009ea0:	f7f6 f9e6 	bl	8000270 <__aeabi_uldivmod>
 8009ea4:	e7e8      	b.n	8009e78 <HAL_RCC_GetSysClockFreq+0x30>
 8009ea6:	bf00      	nop
 8009ea8:	40023800 	.word	0x40023800
 8009eac:	00f42400 	.word	0x00f42400
 8009eb0:	007a1200 	.word	0x007a1200

08009eb4 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 8009eb4:	2800      	cmp	r0, #0
 8009eb6:	f000 8087 	beq.w	8009fc8 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8009eba:	4a48      	ldr	r2, [pc, #288]	; (8009fdc <HAL_RCC_ClockConfig+0x128>)
 8009ebc:	6813      	ldr	r3, [r2, #0]
 8009ebe:	f003 0307 	and.w	r3, r3, #7
 8009ec2:	428b      	cmp	r3, r1
{
 8009ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ec8:	460d      	mov	r5, r1
 8009eca:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8009ecc:	d209      	bcs.n	8009ee2 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009ece:	b2cb      	uxtb	r3, r1
 8009ed0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8009ed2:	6813      	ldr	r3, [r2, #0]
 8009ed4:	f003 0307 	and.w	r3, r3, #7
 8009ed8:	428b      	cmp	r3, r1
 8009eda:	d002      	beq.n	8009ee2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8009edc:	2001      	movs	r0, #1
}
 8009ede:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8009ee2:	6823      	ldr	r3, [r4, #0]
 8009ee4:	0798      	lsls	r0, r3, #30
 8009ee6:	d514      	bpl.n	8009f12 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8009ee8:	0759      	lsls	r1, r3, #29
 8009eea:	d504      	bpl.n	8009ef6 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8009eec:	493c      	ldr	r1, [pc, #240]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009eee:	688a      	ldr	r2, [r1, #8]
 8009ef0:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8009ef4:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009ef6:	071a      	lsls	r2, r3, #28
 8009ef8:	d504      	bpl.n	8009f04 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8009efa:	4939      	ldr	r1, [pc, #228]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009efc:	688a      	ldr	r2, [r1, #8]
 8009efe:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8009f02:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8009f04:	4936      	ldr	r1, [pc, #216]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009f06:	68a0      	ldr	r0, [r4, #8]
 8009f08:	688a      	ldr	r2, [r1, #8]
 8009f0a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8009f0e:	4302      	orrs	r2, r0
 8009f10:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8009f12:	07df      	lsls	r7, r3, #31
 8009f14:	d521      	bpl.n	8009f5a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8009f16:	6862      	ldr	r2, [r4, #4]
 8009f18:	2a01      	cmp	r2, #1
 8009f1a:	d057      	beq.n	8009fcc <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009f1c:	1e93      	subs	r3, r2, #2
 8009f1e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009f20:	4b2f      	ldr	r3, [pc, #188]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009f22:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009f24:	d94d      	bls.n	8009fc2 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009f26:	0799      	lsls	r1, r3, #30
 8009f28:	d5d8      	bpl.n	8009edc <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8009f2a:	4e2d      	ldr	r6, [pc, #180]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009f2c:	68b3      	ldr	r3, [r6, #8]
 8009f2e:	f023 0303 	bic.w	r3, r3, #3
 8009f32:	4313      	orrs	r3, r2
 8009f34:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8009f36:	f7fe fc0b 	bl	8008750 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009f3a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8009f3e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009f40:	e004      	b.n	8009f4c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009f42:	f7fe fc05 	bl	8008750 <HAL_GetTick>
 8009f46:	1bc0      	subs	r0, r0, r7
 8009f48:	4540      	cmp	r0, r8
 8009f4a:	d844      	bhi.n	8009fd6 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009f4c:	68b3      	ldr	r3, [r6, #8]
 8009f4e:	6862      	ldr	r2, [r4, #4]
 8009f50:	f003 030c 	and.w	r3, r3, #12
 8009f54:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8009f58:	d1f3      	bne.n	8009f42 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8009f5a:	4a20      	ldr	r2, [pc, #128]	; (8009fdc <HAL_RCC_ClockConfig+0x128>)
 8009f5c:	6813      	ldr	r3, [r2, #0]
 8009f5e:	f003 0307 	and.w	r3, r3, #7
 8009f62:	42ab      	cmp	r3, r5
 8009f64:	d906      	bls.n	8009f74 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009f66:	b2eb      	uxtb	r3, r5
 8009f68:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8009f6a:	6813      	ldr	r3, [r2, #0]
 8009f6c:	f003 0307 	and.w	r3, r3, #7
 8009f70:	42ab      	cmp	r3, r5
 8009f72:	d1b3      	bne.n	8009edc <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8009f74:	6823      	ldr	r3, [r4, #0]
 8009f76:	075a      	lsls	r2, r3, #29
 8009f78:	d506      	bpl.n	8009f88 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8009f7a:	4919      	ldr	r1, [pc, #100]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009f7c:	68e0      	ldr	r0, [r4, #12]
 8009f7e:	688a      	ldr	r2, [r1, #8]
 8009f80:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 8009f84:	4302      	orrs	r2, r0
 8009f86:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009f88:	071b      	lsls	r3, r3, #28
 8009f8a:	d507      	bpl.n	8009f9c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8009f8c:	4a14      	ldr	r2, [pc, #80]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009f8e:	6921      	ldr	r1, [r4, #16]
 8009f90:	6893      	ldr	r3, [r2, #8]
 8009f92:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8009f96:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8009f9a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8009f9c:	f7ff ff54 	bl	8009e48 <HAL_RCC_GetSysClockFreq>
 8009fa0:	4a0f      	ldr	r2, [pc, #60]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009fa2:	4c10      	ldr	r4, [pc, #64]	; (8009fe4 <HAL_RCC_ClockConfig+0x130>)
 8009fa4:	6892      	ldr	r2, [r2, #8]
 8009fa6:	4910      	ldr	r1, [pc, #64]	; (8009fe8 <HAL_RCC_ClockConfig+0x134>)
 8009fa8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8009fac:	4603      	mov	r3, r0
 8009fae:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 8009fb0:	480e      	ldr	r0, [pc, #56]	; (8009fec <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8009fb2:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 8009fb4:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8009fb6:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 8009fb8:	f7f6 fd5c 	bl	8000a74 <HAL_InitTick>
  return HAL_OK;
 8009fbc:	2000      	movs	r0, #0
}
 8009fbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009fc2:	0198      	lsls	r0, r3, #6
 8009fc4:	d4b1      	bmi.n	8009f2a <HAL_RCC_ClockConfig+0x76>
 8009fc6:	e789      	b.n	8009edc <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 8009fc8:	2001      	movs	r0, #1
}
 8009fca:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009fcc:	4b04      	ldr	r3, [pc, #16]	; (8009fe0 <HAL_RCC_ClockConfig+0x12c>)
 8009fce:	681b      	ldr	r3, [r3, #0]
 8009fd0:	039e      	lsls	r6, r3, #14
 8009fd2:	d4aa      	bmi.n	8009f2a <HAL_RCC_ClockConfig+0x76>
 8009fd4:	e782      	b.n	8009edc <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 8009fd6:	2003      	movs	r0, #3
 8009fd8:	e781      	b.n	8009ede <HAL_RCC_ClockConfig+0x2a>
 8009fda:	bf00      	nop
 8009fdc:	40023c00 	.word	0x40023c00
 8009fe0:	40023800 	.word	0x40023800
 8009fe4:	08027f58 	.word	0x08027f58
 8009fe8:	200000bc 	.word	0x200000bc
 8009fec:	200000c4 	.word	0x200000c4

08009ff0 <HAL_RCC_GetHCLKFreq>:
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
 8009ff0:	4b01      	ldr	r3, [pc, #4]	; (8009ff8 <HAL_RCC_GetHCLKFreq+0x8>)
}
 8009ff2:	6818      	ldr	r0, [r3, #0]
 8009ff4:	4770      	bx	lr
 8009ff6:	bf00      	nop
 8009ff8:	200000bc 	.word	0x200000bc

08009ffc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8009ffc:	4b04      	ldr	r3, [pc, #16]	; (800a010 <HAL_RCC_GetPCLK1Freq+0x14>)
 8009ffe:	4a05      	ldr	r2, [pc, #20]	; (800a014 <HAL_RCC_GetPCLK1Freq+0x18>)
 800a000:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 800a002:	4905      	ldr	r1, [pc, #20]	; (800a018 <HAL_RCC_GetPCLK1Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a004:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a008:	6808      	ldr	r0, [r1, #0]
 800a00a:	5cd3      	ldrb	r3, [r2, r3]
}
 800a00c:	40d8      	lsrs	r0, r3
 800a00e:	4770      	bx	lr
 800a010:	40023800 	.word	0x40023800
 800a014:	08027f68 	.word	0x08027f68
 800a018:	200000bc 	.word	0x200000bc

0800a01c <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800a01c:	4b04      	ldr	r3, [pc, #16]	; (800a030 <HAL_RCC_GetPCLK2Freq+0x14>)
 800a01e:	4a05      	ldr	r2, [pc, #20]	; (800a034 <HAL_RCC_GetPCLK2Freq+0x18>)
 800a020:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 800a022:	4905      	ldr	r1, [pc, #20]	; (800a038 <HAL_RCC_GetPCLK2Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800a024:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800a028:	6808      	ldr	r0, [r1, #0]
 800a02a:	5cd3      	ldrb	r3, [r2, r3]
}
 800a02c:	40d8      	lsrs	r0, r3
 800a02e:	4770      	bx	lr
 800a030:	40023800 	.word	0x40023800
 800a034:	08027f68 	.word	0x08027f68
 800a038:	200000bc 	.word	0x200000bc

0800a03c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a03c:	4b0e      	ldr	r3, [pc, #56]	; (800a078 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a03e:	220f      	movs	r2, #15
 800a040:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a042:	689a      	ldr	r2, [r3, #8]
 800a044:	f002 0203 	and.w	r2, r2, #3
 800a048:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a04a:	689a      	ldr	r2, [r3, #8]
 800a04c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800a050:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a052:	689a      	ldr	r2, [r3, #8]
 800a054:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800a058:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a05a:	689b      	ldr	r3, [r3, #8]
 800a05c:	08db      	lsrs	r3, r3, #3
{
 800a05e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a060:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a064:	4c05      	ldr	r4, [pc, #20]	; (800a07c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a066:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a068:	6823      	ldr	r3, [r4, #0]
}
 800a06a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a06e:	f003 0307 	and.w	r3, r3, #7
 800a072:	600b      	str	r3, [r1, #0]
}
 800a074:	4770      	bx	lr
 800a076:	bf00      	nop
 800a078:	40023800 	.word	0x40023800
 800a07c:	40023c00 	.word	0x40023c00

0800a080 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800a080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a084:	b082      	sub	sp, #8
 800a086:	4698      	mov	r8, r3
 800a088:	4614      	mov	r4, r2
 800a08a:	460d      	mov	r5, r1
 800a08c:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a08e:	f7fe fb5f 	bl	8008750 <HAL_GetTick>
 800a092:	44a0      	add	r8, r4
 800a094:	eba8 0600 	sub.w	r6, r8, r0
  tmp_tickstart = HAL_GetTick();
 800a098:	f7fe fb5a 	bl	8008750 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a09c:	4b26      	ldr	r3, [pc, #152]	; (800a138 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800a09e:	681b      	ldr	r3, [r3, #0]
 800a0a0:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a0a4:	fb06 f303 	mul.w	r3, r6, r3
  tmp_tickstart = HAL_GetTick();
 800a0a8:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a0aa:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a0ac:	683a      	ldr	r2, [r7, #0]
 800a0ae:	e001      	b.n	800a0b4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
  {
    if (Timeout != HAL_MAX_DELAY)
 800a0b0:	1c63      	adds	r3, r4, #1
 800a0b2:	d107      	bne.n	800a0c4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x44>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a0b4:	6893      	ldr	r3, [r2, #8]
 800a0b6:	ea35 0303 	bics.w	r3, r5, r3
 800a0ba:	d0f9      	beq.n	800a0b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800a0bc:	2000      	movs	r0, #0
}
 800a0be:	b002      	add	sp, #8
 800a0c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a0c4:	f7fe fb44 	bl	8008750 <HAL_GetTick>
 800a0c8:	eba0 0008 	sub.w	r0, r0, r8
 800a0cc:	42b0      	cmp	r0, r6
 800a0ce:	d208      	bcs.n	800a0e2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
      if (count == 0U)
 800a0d0:	9a01      	ldr	r2, [sp, #4]
      count--;
 800a0d2:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a0d4:	2a00      	cmp	r2, #0
      count--;
 800a0d6:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800a0da:	bf08      	it	eq
 800a0dc:	2600      	moveq	r6, #0
      count--;
 800a0de:	9301      	str	r3, [sp, #4]
 800a0e0:	e7e4      	b.n	800a0ac <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2c>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a0e2:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a0e6:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a0e8:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a0ec:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a0f0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a0f2:	d014      	beq.n	800a11e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x9e>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a0f4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a0f6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800a0fa:	d007      	beq.n	800a10c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8c>
        hspi->State = HAL_SPI_STATE_READY;
 800a0fc:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800a0fe:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800a100:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800a104:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800a108:	2003      	movs	r0, #3
 800a10a:	e7d8      	b.n	800a0be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3e>
          SPI_RESET_CRC(hspi);
 800a10c:	681a      	ldr	r2, [r3, #0]
 800a10e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a112:	601a      	str	r2, [r3, #0]
 800a114:	681a      	ldr	r2, [r3, #0]
 800a116:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a11a:	601a      	str	r2, [r3, #0]
 800a11c:	e7ee      	b.n	800a0fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7c>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a11e:	68ba      	ldr	r2, [r7, #8]
 800a120:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a124:	d002      	beq.n	800a12c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a126:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a12a:	d1e3      	bne.n	800a0f4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
          __HAL_SPI_DISABLE(hspi);
 800a12c:	681a      	ldr	r2, [r3, #0]
 800a12e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a132:	601a      	str	r2, [r3, #0]
 800a134:	e7de      	b.n	800a0f4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
 800a136:	bf00      	nop
 800a138:	200000bc 	.word	0x200000bc

0800a13c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a13c:	b570      	push	{r4, r5, r6, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a13e:	6845      	ldr	r5, [r0, #4]
 800a140:	f5b5 7f82 	cmp.w	r5, #260	; 0x104
{
 800a144:	4604      	mov	r4, r0
 800a146:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a148:	d006      	beq.n	800a158 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a14a:	460a      	mov	r2, r1
 800a14c:	2101      	movs	r1, #1
 800a14e:	f7ff ff97 	bl	800a080 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a152:	b998      	cbnz	r0, 800a17c <SPI_EndRxTransaction+0x40>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800a154:	2000      	movs	r0, #0
}
 800a156:	bd70      	pop	{r4, r5, r6, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a158:	6882      	ldr	r2, [r0, #8]
 800a15a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a15e:	d013      	beq.n	800a188 <SPI_EndRxTransaction+0x4c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a160:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a164:	d115      	bne.n	800a192 <SPI_EndRxTransaction+0x56>
    __HAL_SPI_DISABLE(hspi);
 800a166:	6806      	ldr	r6, [r0, #0]
 800a168:	6835      	ldr	r5, [r6, #0]
 800a16a:	f025 0540 	bic.w	r5, r5, #64	; 0x40
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a16e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800a170:	6035      	str	r5, [r6, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a172:	2101      	movs	r1, #1
 800a174:	f7ff ff84 	bl	800a080 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a178:	2800      	cmp	r0, #0
 800a17a:	d0eb      	beq.n	800a154 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a17c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a17e:	f043 0320 	orr.w	r3, r3, #32
 800a182:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800a184:	2003      	movs	r0, #3
}
 800a186:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_SPI_DISABLE(hspi);
 800a188:	6800      	ldr	r0, [r0, #0]
 800a18a:	6802      	ldr	r2, [r0, #0]
 800a18c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a190:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a192:	460a      	mov	r2, r1
 800a194:	4620      	mov	r0, r4
 800a196:	2180      	movs	r1, #128	; 0x80
 800a198:	f7ff ff72 	bl	800a080 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a19c:	2800      	cmp	r0, #0
 800a19e:	d1ed      	bne.n	800a17c <SPI_EndRxTransaction+0x40>
  return HAL_OK;
 800a1a0:	2000      	movs	r0, #0
 800a1a2:	e7d8      	b.n	800a156 <SPI_EndRxTransaction+0x1a>

0800a1a4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800a1a4:	b570      	push	{r4, r5, r6, lr}
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a1a6:	4c16      	ldr	r4, [pc, #88]	; (800a200 <SPI_EndRxTxTransaction+0x5c>)
 800a1a8:	4b16      	ldr	r3, [pc, #88]	; (800a204 <SPI_EndRxTxTransaction+0x60>)
 800a1aa:	6825      	ldr	r5, [r4, #0]
 800a1ac:	fba3 3505 	umull	r3, r5, r3, r5
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a1b0:	6843      	ldr	r3, [r0, #4]
{
 800a1b2:	b082      	sub	sp, #8
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a1b4:	0d6d      	lsrs	r5, r5, #21
 800a1b6:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 800a1ba:	fb06 f505 	mul.w	r5, r6, r5
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a1be:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800a1c2:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a1c4:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a1c6:	d107      	bne.n	800a1d8 <SPI_EndRxTxTransaction+0x34>
 800a1c8:	e00c      	b.n	800a1e4 <SPI_EndRxTxTransaction+0x40>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800a1ca:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a1cc:	6822      	ldr	r2, [r4, #0]
      count--;
 800a1ce:	3b01      	subs	r3, #1
 800a1d0:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a1d2:	6893      	ldr	r3, [r2, #8]
 800a1d4:	061b      	lsls	r3, r3, #24
 800a1d6:	d502      	bpl.n	800a1de <SPI_EndRxTxTransaction+0x3a>
      if (count == 0U)
 800a1d8:	9b01      	ldr	r3, [sp, #4]
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d1f5      	bne.n	800a1ca <SPI_EndRxTxTransaction+0x26>
  }

  return HAL_OK;
 800a1de:	2000      	movs	r0, #0
}
 800a1e0:	b002      	add	sp, #8
 800a1e2:	bd70      	pop	{r4, r5, r6, pc}
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a1e4:	4613      	mov	r3, r2
 800a1e6:	460a      	mov	r2, r1
 800a1e8:	2180      	movs	r1, #128	; 0x80
 800a1ea:	f7ff ff49 	bl	800a080 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a1ee:	2800      	cmp	r0, #0
 800a1f0:	d0f5      	beq.n	800a1de <SPI_EndRxTxTransaction+0x3a>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a1f2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a1f4:	f043 0320 	orr.w	r3, r3, #32
 800a1f8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800a1fa:	2003      	movs	r0, #3
 800a1fc:	e7f0      	b.n	800a1e0 <SPI_EndRxTxTransaction+0x3c>
 800a1fe:	bf00      	nop
 800a200:	200000bc 	.word	0x200000bc
 800a204:	165e9f81 	.word	0x165e9f81

0800a208 <HAL_SPI_Init>:
  if (hspi == NULL)
 800a208:	2800      	cmp	r0, #0
 800a20a:	d05b      	beq.n	800a2c4 <HAL_SPI_Init+0xbc>
{
 800a20c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800a20e:	6a47      	ldr	r7, [r0, #36]	; 0x24
 800a210:	4604      	mov	r4, r0
 800a212:	2f00      	cmp	r7, #0
 800a214:	d046      	beq.n	800a2a4 <HAL_SPI_Init+0x9c>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800a216:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800a218:	e9c0 3304 	strd	r3, r3, [r0, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a21c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a220:	2000      	movs	r0, #0
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a222:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a226:	62a0      	str	r0, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a228:	2a00      	cmp	r2, #0
 800a22a:	d041      	beq.n	800a2b0 <HAL_SPI_Init+0xa8>
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a22c:	e9d4 3501 	ldrd	r3, r5, [r4, #4]
 800a230:	68e1      	ldr	r1, [r4, #12]
 800a232:	69a6      	ldr	r6, [r4, #24]
 800a234:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800a238:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800a23c:	6923      	ldr	r3, [r4, #16]
 800a23e:	432a      	orrs	r2, r5
 800a240:	f401 6100 	and.w	r1, r1, #2048	; 0x800
 800a244:	430a      	orrs	r2, r1
 800a246:	f003 0102 	and.w	r1, r3, #2
 800a24a:	6963      	ldr	r3, [r4, #20]
 800a24c:	430a      	orrs	r2, r1
 800a24e:	f003 0301 	and.w	r3, r3, #1
 800a252:	431a      	orrs	r2, r3
 800a254:	69e3      	ldr	r3, [r4, #28]
  __HAL_SPI_DISABLE(hspi);
 800a256:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a258:	f003 0e38 	and.w	lr, r3, #56	; 0x38
 800a25c:	f406 7300 	and.w	r3, r6, #512	; 0x200
 800a260:	4313      	orrs	r3, r2
  hspi->State = HAL_SPI_STATE_BUSY;
 800a262:	2202      	movs	r2, #2
 800a264:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a268:	6a22      	ldr	r2, [r4, #32]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a26a:	0c35      	lsrs	r5, r6, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a26c:	ea43 030e 	orr.w	r3, r3, lr
 800a270:	f002 0680 	and.w	r6, r2, #128	; 0x80
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a274:	f005 0204 	and.w	r2, r5, #4
  __HAL_SPI_DISABLE(hspi);
 800a278:	680d      	ldr	r5, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a27a:	f007 0710 	and.w	r7, r7, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a27e:	4333      	orrs	r3, r6
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a280:	433a      	orrs	r2, r7
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a282:	4303      	orrs	r3, r0
  __HAL_SPI_DISABLE(hspi);
 800a284:	f025 0540 	bic.w	r5, r5, #64	; 0x40
 800a288:	600d      	str	r5, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a28a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a28c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a28e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a290:	2200      	movs	r2, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a292:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800a296:	2501      	movs	r5, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a298:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a29a:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800a29c:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
  return HAL_OK;
 800a2a0:	4610      	mov	r0, r2
}
 800a2a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a2a4:	6843      	ldr	r3, [r0, #4]
 800a2a6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a2aa:	d0b7      	beq.n	800a21c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800a2ac:	61c7      	str	r7, [r0, #28]
 800a2ae:	e7b5      	b.n	800a21c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800a2b0:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800a2b2:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800a2b6:	f7f6 fb0b 	bl	80008d0 <HAL_SPI_MspInit>
 800a2ba:	e9d4 7309 	ldrd	r7, r3, [r4, #36]	; 0x24
 800a2be:	f403 5000 	and.w	r0, r3, #8192	; 0x2000
 800a2c2:	e7b3      	b.n	800a22c <HAL_SPI_Init+0x24>
    return HAL_ERROR;
 800a2c4:	2001      	movs	r0, #1
}
 800a2c6:	4770      	bx	lr

0800a2c8 <HAL_SPI_Transmit>:
{
 800a2c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2cc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a2ce:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800a2d2:	2801      	cmp	r0, #1
{
 800a2d4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800a2d6:	d05f      	beq.n	800a398 <HAL_SPI_Transmit+0xd0>
 800a2d8:	461d      	mov	r5, r3
 800a2da:	2301      	movs	r3, #1
 800a2dc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a2e0:	4688      	mov	r8, r1
 800a2e2:	4617      	mov	r7, r2
 800a2e4:	f7fe fa34 	bl	8008750 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a2e8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800a2ec:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800a2ee:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800a2f0:	b2d8      	uxtb	r0, r3
 800a2f2:	d009      	beq.n	800a308 <HAL_SPI_Transmit+0x40>
    errorcode = HAL_BUSY;
 800a2f4:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800a2f6:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800a2f8:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800a2fa:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a2fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a302:	b002      	add	sp, #8
 800a304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800a308:	f1b8 0f00 	cmp.w	r8, #0
 800a30c:	d0f3      	beq.n	800a2f6 <HAL_SPI_Transmit+0x2e>
 800a30e:	2f00      	cmp	r7, #0
 800a310:	d0f1      	beq.n	800a2f6 <HAL_SPI_Transmit+0x2e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a312:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800a314:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a318:	2303      	movs	r3, #3
 800a31a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a31e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a322:	f04f 0300 	mov.w	r3, #0
 800a326:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800a328:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800a32c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800a32e:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->TxXferCount = Size;
 800a330:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->TxXferSize  = Size;
 800a332:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->RxXferCount = 0U;
 800a334:	87e3      	strh	r3, [r4, #62]	; 0x3e
    __HAL_SPI_DISABLE(hspi);
 800a336:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a338:	d059      	beq.n	800a3ee <HAL_SPI_Transmit+0x126>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a33a:	681a      	ldr	r2, [r3, #0]
 800a33c:	0652      	lsls	r2, r2, #25
 800a33e:	d403      	bmi.n	800a348 <HAL_SPI_Transmit+0x80>
    __HAL_SPI_ENABLE(hspi);
 800a340:	681a      	ldr	r2, [r3, #0]
 800a342:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a346:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a348:	68e2      	ldr	r2, [r4, #12]
 800a34a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a34e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a350:	d026      	beq.n	800a3a0 <HAL_SPI_Transmit+0xd8>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a352:	2a00      	cmp	r2, #0
 800a354:	d054      	beq.n	800a400 <HAL_SPI_Transmit+0x138>
 800a356:	2f01      	cmp	r7, #1
 800a358:	d052      	beq.n	800a400 <HAL_SPI_Transmit+0x138>
    while (hspi->TxXferCount > 0U)
 800a35a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a35c:	b29b      	uxth	r3, r3
 800a35e:	b973      	cbnz	r3, 800a37e <HAL_SPI_Transmit+0xb6>
 800a360:	e059      	b.n	800a416 <HAL_SPI_Transmit+0x14e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a362:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a364:	7812      	ldrb	r2, [r2, #0]
 800a366:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800a368:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a36a:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a36c:	3a01      	subs	r2, #1
 800a36e:	b292      	uxth	r2, r2
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a370:	3301      	adds	r3, #1
        hspi->TxXferCount--;
 800a372:	86e2      	strh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a374:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800a376:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a378:	b292      	uxth	r2, r2
 800a37a:	2a00      	cmp	r2, #0
 800a37c:	d04b      	beq.n	800a416 <HAL_SPI_Transmit+0x14e>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a37e:	6823      	ldr	r3, [r4, #0]
 800a380:	689a      	ldr	r2, [r3, #8]
 800a382:	0792      	lsls	r2, r2, #30
 800a384:	d4ed      	bmi.n	800a362 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a386:	f7fe f9e3 	bl	8008750 <HAL_GetTick>
 800a38a:	1b80      	subs	r0, r0, r6
 800a38c:	42a8      	cmp	r0, r5
 800a38e:	d3f2      	bcc.n	800a376 <HAL_SPI_Transmit+0xae>
 800a390:	1c6b      	adds	r3, r5, #1
 800a392:	d0f0      	beq.n	800a376 <HAL_SPI_Transmit+0xae>
          errorcode = HAL_TIMEOUT;
 800a394:	2003      	movs	r0, #3
 800a396:	e7ae      	b.n	800a2f6 <HAL_SPI_Transmit+0x2e>
  __HAL_LOCK(hspi);
 800a398:	2002      	movs	r0, #2
}
 800a39a:	b002      	add	sp, #8
 800a39c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a3a0:	2a00      	cmp	r2, #0
 800a3a2:	d14e      	bne.n	800a442 <HAL_SPI_Transmit+0x17a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a3a4:	4641      	mov	r1, r8
 800a3a6:	f831 2b02 	ldrh.w	r2, [r1], #2
 800a3aa:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800a3ac:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800a3ae:	6321      	str	r1, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a3b0:	3a01      	subs	r2, #1
 800a3b2:	b292      	uxth	r2, r2
 800a3b4:	86e2      	strh	r2, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a3b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a3b8:	b292      	uxth	r2, r2
 800a3ba:	b96a      	cbnz	r2, 800a3d8 <HAL_SPI_Transmit+0x110>
 800a3bc:	e02b      	b.n	800a416 <HAL_SPI_Transmit+0x14e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a3be:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a3c0:	f832 1b02 	ldrh.w	r1, [r2], #2
 800a3c4:	60d9      	str	r1, [r3, #12]
        hspi->TxXferCount--;
 800a3c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800a3c8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a3ca:	3b01      	subs	r3, #1
 800a3cc:	b29b      	uxth	r3, r3
 800a3ce:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a3d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a3d2:	b29b      	uxth	r3, r3
 800a3d4:	b1fb      	cbz	r3, 800a416 <HAL_SPI_Transmit+0x14e>
 800a3d6:	6823      	ldr	r3, [r4, #0]
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a3d8:	689a      	ldr	r2, [r3, #8]
 800a3da:	0790      	lsls	r0, r2, #30
 800a3dc:	d4ef      	bmi.n	800a3be <HAL_SPI_Transmit+0xf6>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a3de:	f7fe f9b7 	bl	8008750 <HAL_GetTick>
 800a3e2:	1b80      	subs	r0, r0, r6
 800a3e4:	42a8      	cmp	r0, r5
 800a3e6:	d3f3      	bcc.n	800a3d0 <HAL_SPI_Transmit+0x108>
 800a3e8:	1c69      	adds	r1, r5, #1
 800a3ea:	d0f1      	beq.n	800a3d0 <HAL_SPI_Transmit+0x108>
 800a3ec:	e7d2      	b.n	800a394 <HAL_SPI_Transmit+0xcc>
    __HAL_SPI_DISABLE(hspi);
 800a3ee:	681a      	ldr	r2, [r3, #0]
 800a3f0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a3f4:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800a3f6:	681a      	ldr	r2, [r3, #0]
 800a3f8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800a3fc:	601a      	str	r2, [r3, #0]
 800a3fe:	e79c      	b.n	800a33a <HAL_SPI_Transmit+0x72>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a400:	f898 2000 	ldrb.w	r2, [r8]
 800a404:	731a      	strb	r2, [r3, #12]
      hspi->TxXferCount--;
 800a406:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a408:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a40a:	3b01      	subs	r3, #1
 800a40c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a40e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800a410:	86e3      	strh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a412:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a414:	e7a1      	b.n	800a35a <HAL_SPI_Transmit+0x92>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800a416:	4632      	mov	r2, r6
 800a418:	4629      	mov	r1, r5
 800a41a:	4620      	mov	r0, r4
 800a41c:	f7ff fec2 	bl	800a1a4 <SPI_EndRxTxTransaction>
 800a420:	b108      	cbz	r0, 800a426 <HAL_SPI_Transmit+0x15e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a422:	2320      	movs	r3, #32
 800a424:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a426:	68a3      	ldr	r3, [r4, #8]
 800a428:	b933      	cbnz	r3, 800a438 <HAL_SPI_Transmit+0x170>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a42a:	6822      	ldr	r2, [r4, #0]
 800a42c:	9301      	str	r3, [sp, #4]
 800a42e:	68d3      	ldr	r3, [r2, #12]
 800a430:	9301      	str	r3, [sp, #4]
 800a432:	6893      	ldr	r3, [r2, #8]
 800a434:	9301      	str	r3, [sp, #4]
 800a436:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a438:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800a43a:	3800      	subs	r0, #0
 800a43c:	bf18      	it	ne
 800a43e:	2001      	movne	r0, #1
error:
 800a440:	e759      	b.n	800a2f6 <HAL_SPI_Transmit+0x2e>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a442:	2f01      	cmp	r7, #1
 800a444:	d1b7      	bne.n	800a3b6 <HAL_SPI_Transmit+0xee>
 800a446:	e7ad      	b.n	800a3a4 <HAL_SPI_Transmit+0xdc>

0800a448 <HAL_SPI_TransmitReceive>:
{
 800a448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a44c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a44e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
{
 800a452:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800a454:	2801      	cmp	r0, #1
{
 800a456:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800a458:	f000 8089 	beq.w	800a56e <HAL_SPI_TransmitReceive+0x126>
 800a45c:	4698      	mov	r8, r3
 800a45e:	2301      	movs	r3, #1
 800a460:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a464:	468a      	mov	sl, r1
 800a466:	4691      	mov	r9, r2
 800a468:	f7fe f972 	bl	8008750 <HAL_GetTick>
  tmp_state           = hspi->State;
 800a46c:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800a470:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a472:	2f01      	cmp	r7, #1
  tickstart = HAL_GetTick();
 800a474:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800a476:	b2f9      	uxtb	r1, r7
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a478:	d011      	beq.n	800a49e <HAL_SPI_TransmitReceive+0x56>
 800a47a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a47e:	d009      	beq.n	800a494 <HAL_SPI_TransmitReceive+0x4c>
    errorcode = HAL_BUSY;
 800a480:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800a482:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800a484:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800a486:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a48a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a48e:	b002      	add	sp, #8
 800a490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800a494:	68a2      	ldr	r2, [r4, #8]
 800a496:	2a00      	cmp	r2, #0
 800a498:	d1f2      	bne.n	800a480 <HAL_SPI_TransmitReceive+0x38>
 800a49a:	2904      	cmp	r1, #4
 800a49c:	d1f0      	bne.n	800a480 <HAL_SPI_TransmitReceive+0x38>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800a49e:	f1ba 0f00 	cmp.w	sl, #0
 800a4a2:	d068      	beq.n	800a576 <HAL_SPI_TransmitReceive+0x12e>
 800a4a4:	f1b9 0f00 	cmp.w	r9, #0
 800a4a8:	d065      	beq.n	800a576 <HAL_SPI_TransmitReceive+0x12e>
 800a4aa:	f1b8 0f00 	cmp.w	r8, #0
 800a4ae:	d062      	beq.n	800a576 <HAL_SPI_TransmitReceive+0x12e>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800a4b0:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a4b4:	6820      	ldr	r0, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800a4b6:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800a4ba:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800a4bc:	bf1c      	itt	ne
 800a4be:	2205      	movne	r2, #5
 800a4c0:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a4c4:	2200      	movs	r2, #0
 800a4c6:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->RxXferCount = Size;
 800a4c8:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800a4cc:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a4d0:	6801      	ldr	r1, [r0, #0]
  hspi->RxXferSize  = Size;
 800a4d2:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->TxISR       = NULL;
 800a4d6:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a4da:	064a      	lsls	r2, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800a4dc:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800a4e0:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a4e4:	d403      	bmi.n	800a4ee <HAL_SPI_TransmitReceive+0xa6>
    __HAL_SPI_ENABLE(hspi);
 800a4e6:	6802      	ldr	r2, [r0, #0]
 800a4e8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a4ec:	6002      	str	r2, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a4ee:	68e2      	ldr	r2, [r4, #12]
 800a4f0:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 800a4f4:	d05f      	beq.n	800a5b6 <HAL_SPI_TransmitReceive+0x16e>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	d03f      	beq.n	800a57a <HAL_SPI_TransmitReceive+0x132>
 800a4fa:	f1b8 0f01 	cmp.w	r8, #1
 800a4fe:	d03c      	beq.n	800a57a <HAL_SPI_TransmitReceive+0x132>
        txallowed = 1U;
 800a500:	2701      	movs	r7, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800a502:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a504:	b29b      	uxth	r3, r3
 800a506:	b91b      	cbnz	r3, 800a510 <HAL_SPI_TransmitReceive+0xc8>
 800a508:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a50a:	b29b      	uxth	r3, r3
 800a50c:	2b00      	cmp	r3, #0
 800a50e:	d03f      	beq.n	800a590 <HAL_SPI_TransmitReceive+0x148>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800a510:	6822      	ldr	r2, [r4, #0]
 800a512:	6893      	ldr	r3, [r2, #8]
 800a514:	0799      	lsls	r1, r3, #30
 800a516:	d50f      	bpl.n	800a538 <HAL_SPI_TransmitReceive+0xf0>
 800a518:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a51a:	b29b      	uxth	r3, r3
 800a51c:	b163      	cbz	r3, 800a538 <HAL_SPI_TransmitReceive+0xf0>
 800a51e:	b15f      	cbz	r7, 800a538 <HAL_SPI_TransmitReceive+0xf0>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800a520:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a522:	781b      	ldrb	r3, [r3, #0]
 800a524:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800a526:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800a528:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a52a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800a52c:	3b01      	subs	r3, #1
 800a52e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800a530:	3101      	adds	r1, #1
        hspi->TxXferCount--;
 800a532:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800a534:	6321      	str	r1, [r4, #48]	; 0x30
        txallowed = 0U;
 800a536:	2700      	movs	r7, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800a538:	6893      	ldr	r3, [r2, #8]
 800a53a:	f013 0301 	ands.w	r3, r3, #1
 800a53e:	d00d      	beq.n	800a55c <HAL_SPI_TransmitReceive+0x114>
 800a540:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800a542:	b289      	uxth	r1, r1
 800a544:	b151      	cbz	r1, 800a55c <HAL_SPI_TransmitReceive+0x114>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800a546:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800a548:	68d2      	ldr	r2, [r2, #12]
 800a54a:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800a54c:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800a54e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a550:	3a01      	subs	r2, #1
 800a552:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800a554:	3101      	adds	r1, #1
        txallowed = 1U;
 800a556:	461f      	mov	r7, r3
        hspi->RxXferCount--;
 800a558:	87e2      	strh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800a55a:	63a1      	str	r1, [r4, #56]	; 0x38
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800a55c:	f7fe f8f8 	bl	8008750 <HAL_GetTick>
 800a560:	1b43      	subs	r3, r0, r5
 800a562:	42b3      	cmp	r3, r6
 800a564:	d3cd      	bcc.n	800a502 <HAL_SPI_TransmitReceive+0xba>
 800a566:	1c73      	adds	r3, r6, #1
 800a568:	d0cb      	beq.n	800a502 <HAL_SPI_TransmitReceive+0xba>
        errorcode = HAL_TIMEOUT;
 800a56a:	2003      	movs	r0, #3
 800a56c:	e789      	b.n	800a482 <HAL_SPI_TransmitReceive+0x3a>
  __HAL_LOCK(hspi);
 800a56e:	2002      	movs	r0, #2
}
 800a570:	b002      	add	sp, #8
 800a572:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    errorcode = HAL_ERROR;
 800a576:	2001      	movs	r0, #1
 800a578:	e783      	b.n	800a482 <HAL_SPI_TransmitReceive+0x3a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a57a:	f89a 3000 	ldrb.w	r3, [sl]
 800a57e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800a580:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a582:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a584:	3b01      	subs	r3, #1
 800a586:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a588:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800a58a:	86e3      	strh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a58c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a58e:	e7b7      	b.n	800a500 <HAL_SPI_TransmitReceive+0xb8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800a590:	462a      	mov	r2, r5
 800a592:	4631      	mov	r1, r6
 800a594:	4620      	mov	r0, r4
 800a596:	f7ff fe05 	bl	800a1a4 <SPI_EndRxTxTransaction>
 800a59a:	2800      	cmp	r0, #0
 800a59c:	d14d      	bne.n	800a63a <HAL_SPI_TransmitReceive+0x1f2>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a59e:	68a3      	ldr	r3, [r4, #8]
 800a5a0:	2b00      	cmp	r3, #0
 800a5a2:	f47f af6e 	bne.w	800a482 <HAL_SPI_TransmitReceive+0x3a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a5a6:	6823      	ldr	r3, [r4, #0]
 800a5a8:	9001      	str	r0, [sp, #4]
 800a5aa:	68da      	ldr	r2, [r3, #12]
 800a5ac:	9201      	str	r2, [sp, #4]
 800a5ae:	689b      	ldr	r3, [r3, #8]
 800a5b0:	9301      	str	r3, [sp, #4]
 800a5b2:	9b01      	ldr	r3, [sp, #4]
 800a5b4:	e765      	b.n	800a482 <HAL_SPI_TransmitReceive+0x3a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a5b6:	2b00      	cmp	r3, #0
 800a5b8:	d13b      	bne.n	800a632 <HAL_SPI_TransmitReceive+0x1ea>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a5ba:	4651      	mov	r1, sl
 800a5bc:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a5c0:	60c3      	str	r3, [r0, #12]
      hspi->TxXferCount--;
 800a5c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800a5c4:	6321      	str	r1, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a5c6:	3b01      	subs	r3, #1
 800a5c8:	b29b      	uxth	r3, r3
 800a5ca:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800a5cc:	2701      	movs	r7, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800a5ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a5d0:	b29b      	uxth	r3, r3
 800a5d2:	b91b      	cbnz	r3, 800a5dc <HAL_SPI_TransmitReceive+0x194>
 800a5d4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a5d6:	b29b      	uxth	r3, r3
 800a5d8:	2b00      	cmp	r3, #0
 800a5da:	d0d9      	beq.n	800a590 <HAL_SPI_TransmitReceive+0x148>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800a5dc:	6822      	ldr	r2, [r4, #0]
 800a5de:	6893      	ldr	r3, [r2, #8]
 800a5e0:	079b      	lsls	r3, r3, #30
 800a5e2:	d50d      	bpl.n	800a600 <HAL_SPI_TransmitReceive+0x1b8>
 800a5e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a5e6:	b29b      	uxth	r3, r3
 800a5e8:	b153      	cbz	r3, 800a600 <HAL_SPI_TransmitReceive+0x1b8>
 800a5ea:	b14f      	cbz	r7, 800a600 <HAL_SPI_TransmitReceive+0x1b8>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a5ec:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a5ee:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a5f2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800a5f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800a5f6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a5f8:	3b01      	subs	r3, #1
 800a5fa:	b29b      	uxth	r3, r3
 800a5fc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800a5fe:	2700      	movs	r7, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800a600:	6893      	ldr	r3, [r2, #8]
 800a602:	f013 0301 	ands.w	r3, r3, #1
 800a606:	d00c      	beq.n	800a622 <HAL_SPI_TransmitReceive+0x1da>
 800a608:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800a60a:	b289      	uxth	r1, r1
 800a60c:	b149      	cbz	r1, 800a622 <HAL_SPI_TransmitReceive+0x1da>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800a60e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800a610:	68d2      	ldr	r2, [r2, #12]
 800a612:	f821 2b02 	strh.w	r2, [r1], #2
        hspi->RxXferCount--;
 800a616:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800a618:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a61a:	3a01      	subs	r2, #1
 800a61c:	b292      	uxth	r2, r2
        txallowed = 1U;
 800a61e:	461f      	mov	r7, r3
        hspi->RxXferCount--;
 800a620:	87e2      	strh	r2, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800a622:	f7fe f895 	bl	8008750 <HAL_GetTick>
 800a626:	1b40      	subs	r0, r0, r5
 800a628:	42b0      	cmp	r0, r6
 800a62a:	d3d0      	bcc.n	800a5ce <HAL_SPI_TransmitReceive+0x186>
 800a62c:	1c70      	adds	r0, r6, #1
 800a62e:	d0ce      	beq.n	800a5ce <HAL_SPI_TransmitReceive+0x186>
 800a630:	e79b      	b.n	800a56a <HAL_SPI_TransmitReceive+0x122>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a632:	f1b8 0f01 	cmp.w	r8, #1
 800a636:	d1c9      	bne.n	800a5cc <HAL_SPI_TransmitReceive+0x184>
 800a638:	e7bf      	b.n	800a5ba <HAL_SPI_TransmitReceive+0x172>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a63a:	2320      	movs	r3, #32
 800a63c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800a63e:	2001      	movs	r0, #1
    goto error;
 800a640:	e71f      	b.n	800a482 <HAL_SPI_TransmitReceive+0x3a>
 800a642:	bf00      	nop

0800a644 <HAL_SPI_Receive>:
{
 800a644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800a648:	6846      	ldr	r6, [r0, #4]
 800a64a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800a64e:	b083      	sub	sp, #12
 800a650:	4604      	mov	r4, r0
 800a652:	4691      	mov	r9, r2
 800a654:	461d      	mov	r5, r3
 800a656:	4688      	mov	r8, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800a658:	d063      	beq.n	800a722 <HAL_SPI_Receive+0xde>
  __HAL_LOCK(hspi);
 800a65a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800a65e:	2b01      	cmp	r3, #1
 800a660:	d06b      	beq.n	800a73a <HAL_SPI_Receive+0xf6>
 800a662:	2301      	movs	r3, #1
 800a664:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a668:	f7fe f872 	bl	8008750 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a66c:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
 800a670:	2f01      	cmp	r7, #1
  tickstart = HAL_GetTick();
 800a672:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800a674:	b2f8      	uxtb	r0, r7
 800a676:	d009      	beq.n	800a68c <HAL_SPI_Receive+0x48>
    errorcode = HAL_BUSY;
 800a678:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800a67a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800a67c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800a67e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a682:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a686:	b003      	add	sp, #12
 800a688:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pData == NULL) || (Size == 0U))
 800a68c:	f1b8 0f00 	cmp.w	r8, #0
 800a690:	d0f3      	beq.n	800a67a <HAL_SPI_Receive+0x36>
 800a692:	f1b9 0f00 	cmp.w	r9, #0
 800a696:	d0f0      	beq.n	800a67a <HAL_SPI_Receive+0x36>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a698:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800a69a:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800a69e:	2304      	movs	r3, #4
 800a6a0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a6a4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a6a8:	f04f 0300 	mov.w	r3, #0
 800a6ac:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800a6ae:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->RxXferCount = Size;
 800a6b2:	f8a4 903e 	strh.w	r9, [r4, #62]	; 0x3e
    __HAL_SPI_DISABLE(hspi);
 800a6b6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800a6b8:	f8a4 903c 	strh.w	r9, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800a6bc:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800a6be:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800a6c0:	86e3      	strh	r3, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a6c2:	d107      	bne.n	800a6d4 <HAL_SPI_Receive+0x90>
    __HAL_SPI_DISABLE(hspi);
 800a6c4:	6813      	ldr	r3, [r2, #0]
 800a6c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a6ca:	6013      	str	r3, [r2, #0]
    SPI_1LINE_RX(hspi);
 800a6cc:	6813      	ldr	r3, [r2, #0]
 800a6ce:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a6d2:	6013      	str	r3, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a6d4:	6813      	ldr	r3, [r2, #0]
 800a6d6:	065b      	lsls	r3, r3, #25
 800a6d8:	d403      	bmi.n	800a6e2 <HAL_SPI_Receive+0x9e>
    __HAL_SPI_ENABLE(hspi);
 800a6da:	6813      	ldr	r3, [r2, #0]
 800a6dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a6e0:	6013      	str	r3, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800a6e2:	68e3      	ldr	r3, [r4, #12]
 800a6e4:	2b00      	cmp	r3, #0
 800a6e6:	d039      	beq.n	800a75c <HAL_SPI_Receive+0x118>
    while (hspi->RxXferCount > 0U)
 800a6e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a6ea:	b29b      	uxth	r3, r3
 800a6ec:	b96b      	cbnz	r3, 800a70a <HAL_SPI_Receive+0xc6>
 800a6ee:	e028      	b.n	800a742 <HAL_SPI_Receive+0xfe>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800a6f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a6f2:	68d2      	ldr	r2, [r2, #12]
 800a6f4:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->RxXferCount--;
 800a6f8:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800a6fa:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a6fc:	3a01      	subs	r2, #1
 800a6fe:	b292      	uxth	r2, r2
 800a700:	87e2      	strh	r2, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800a702:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a704:	b29b      	uxth	r3, r3
 800a706:	b1e3      	cbz	r3, 800a742 <HAL_SPI_Receive+0xfe>
 800a708:	6822      	ldr	r2, [r4, #0]
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800a70a:	6893      	ldr	r3, [r2, #8]
 800a70c:	07d9      	lsls	r1, r3, #31
 800a70e:	d4ef      	bmi.n	800a6f0 <HAL_SPI_Receive+0xac>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a710:	f7fe f81e 	bl	8008750 <HAL_GetTick>
 800a714:	1b80      	subs	r0, r0, r6
 800a716:	42a8      	cmp	r0, r5
 800a718:	d3f3      	bcc.n	800a702 <HAL_SPI_Receive+0xbe>
 800a71a:	1c6b      	adds	r3, r5, #1
 800a71c:	d0f1      	beq.n	800a702 <HAL_SPI_Receive+0xbe>
          errorcode = HAL_TIMEOUT;
 800a71e:	2003      	movs	r0, #3
 800a720:	e7ab      	b.n	800a67a <HAL_SPI_Receive+0x36>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800a722:	6883      	ldr	r3, [r0, #8]
 800a724:	2b00      	cmp	r3, #0
 800a726:	d198      	bne.n	800a65a <HAL_SPI_Receive+0x16>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800a728:	2604      	movs	r6, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800a72a:	9500      	str	r5, [sp, #0]
 800a72c:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800a72e:	f880 6051 	strb.w	r6, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800a732:	460a      	mov	r2, r1
 800a734:	f7ff fe88 	bl	800a448 <HAL_SPI_TransmitReceive>
 800a738:	e7a5      	b.n	800a686 <HAL_SPI_Receive+0x42>
  __HAL_LOCK(hspi);
 800a73a:	2002      	movs	r0, #2
}
 800a73c:	b003      	add	sp, #12
 800a73e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800a742:	4632      	mov	r2, r6
 800a744:	4629      	mov	r1, r5
 800a746:	4620      	mov	r0, r4
 800a748:	f7ff fcf8 	bl	800a13c <SPI_EndRxTransaction>
 800a74c:	b108      	cbz	r0, 800a752 <HAL_SPI_Receive+0x10e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a74e:	2320      	movs	r3, #32
 800a750:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a752:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800a754:	3800      	subs	r0, #0
 800a756:	bf18      	it	ne
 800a758:	2001      	movne	r0, #1
error :
 800a75a:	e78e      	b.n	800a67a <HAL_SPI_Receive+0x36>
    while (hspi->RxXferCount > 0U)
 800a75c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a75e:	b29b      	uxth	r3, r3
 800a760:	b97b      	cbnz	r3, 800a782 <HAL_SPI_Receive+0x13e>
 800a762:	e7ee      	b.n	800a742 <HAL_SPI_Receive+0xfe>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800a764:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a766:	7b12      	ldrb	r2, [r2, #12]
 800a768:	701a      	strb	r2, [r3, #0]
        hspi->RxXferCount--;
 800a76a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800a76c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a76e:	3a01      	subs	r2, #1
 800a770:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800a772:	3301      	adds	r3, #1
        hspi->RxXferCount--;
 800a774:	87e2      	strh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800a776:	63a3      	str	r3, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800a778:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a77a:	b29b      	uxth	r3, r3
 800a77c:	2b00      	cmp	r3, #0
 800a77e:	d0e0      	beq.n	800a742 <HAL_SPI_Receive+0xfe>
 800a780:	6822      	ldr	r2, [r4, #0]
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800a782:	6893      	ldr	r3, [r2, #8]
 800a784:	07df      	lsls	r7, r3, #31
 800a786:	d4ed      	bmi.n	800a764 <HAL_SPI_Receive+0x120>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a788:	f7fd ffe2 	bl	8008750 <HAL_GetTick>
 800a78c:	1b80      	subs	r0, r0, r6
 800a78e:	42a8      	cmp	r0, r5
 800a790:	d3f2      	bcc.n	800a778 <HAL_SPI_Receive+0x134>
 800a792:	1c68      	adds	r0, r5, #1
 800a794:	d0f0      	beq.n	800a778 <HAL_SPI_Receive+0x134>
 800a796:	e7c2      	b.n	800a71e <HAL_SPI_Receive+0xda>

0800a798 <HAL_SPI_Transmit_DMA>:
{
 800a798:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hspi);
 800a79a:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800a79e:	2b01      	cmp	r3, #1
 800a7a0:	d057      	beq.n	800a852 <HAL_SPI_Transmit_DMA+0xba>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a7a2:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800a7a6:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a7a8:	2001      	movs	r0, #1
  if (hspi->State != HAL_SPI_STATE_READY)
 800a7aa:	4283      	cmp	r3, r0
 800a7ac:	b2dd      	uxtb	r5, r3
  __HAL_LOCK(hspi);
 800a7ae:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
  if (hspi->State != HAL_SPI_STATE_READY)
 800a7b2:	d005      	beq.n	800a7c0 <HAL_SPI_Transmit_DMA+0x28>
    errorcode = HAL_BUSY;
 800a7b4:	2502      	movs	r5, #2
  __HAL_UNLOCK(hspi);
 800a7b6:	2300      	movs	r3, #0
 800a7b8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a7bc:	4628      	mov	r0, r5
 800a7be:	bd70      	pop	{r4, r5, r6, pc}
  if ((pData == NULL) || (Size == 0U))
 800a7c0:	2900      	cmp	r1, #0
 800a7c2:	d0f8      	beq.n	800a7b6 <HAL_SPI_Transmit_DMA+0x1e>
 800a7c4:	2a00      	cmp	r2, #0
 800a7c6:	d0f6      	beq.n	800a7b6 <HAL_SPI_Transmit_DMA+0x1e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a7c8:	68a0      	ldr	r0, [r4, #8]
  hspi->TxXferSize  = Size;
 800a7ca:	86a2      	strh	r2, [r4, #52]	; 0x34
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a7cc:	2303      	movs	r3, #3
 800a7ce:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a7d2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a7d6:	f04f 0300 	mov.w	r3, #0
 800a7da:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800a7dc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800a7e0:	86e2      	strh	r2, [r4, #54]	; 0x36
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800a7e2:	6321      	str	r1, [r4, #48]	; 0x30
    __HAL_SPI_DISABLE(hspi);
 800a7e4:	6822      	ldr	r2, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800a7e6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800a7e8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800a7ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a7ec:	d028      	beq.n	800a840 <HAL_SPI_Transmit_DMA+0xa8>
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800a7ee:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a7f0:	4e19      	ldr	r6, [pc, #100]	; (800a858 <HAL_SPI_Transmit_DMA+0xc0>)
                                 hspi->TxXferCount))
 800a7f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800a7f4:	6406      	str	r6, [r0, #64]	; 0x40
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800a7f6:	4e19      	ldr	r6, [pc, #100]	; (800a85c <HAL_SPI_Transmit_DMA+0xc4>)
 800a7f8:	63c6      	str	r6, [r0, #60]	; 0x3c
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800a7fa:	4e19      	ldr	r6, [pc, #100]	; (800a860 <HAL_SPI_Transmit_DMA+0xc8>)
 800a7fc:	64c6      	str	r6, [r0, #76]	; 0x4c
  hspi->hdmatx->XferAbortCallback = NULL;
 800a7fe:	2600      	movs	r6, #0
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800a800:	320c      	adds	r2, #12
  hspi->hdmatx->XferAbortCallback = NULL;
 800a802:	6506      	str	r6, [r0, #80]	; 0x50
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800a804:	b29b      	uxth	r3, r3
 800a806:	f7fe f8d5 	bl	80089b4 <HAL_DMA_Start_IT>
 800a80a:	b988      	cbnz	r0, 800a830 <HAL_SPI_Transmit_DMA+0x98>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a80c:	6823      	ldr	r3, [r4, #0]
 800a80e:	681a      	ldr	r2, [r3, #0]
 800a810:	0652      	lsls	r2, r2, #25
 800a812:	d403      	bmi.n	800a81c <HAL_SPI_Transmit_DMA+0x84>
    __HAL_SPI_ENABLE(hspi);
 800a814:	681a      	ldr	r2, [r3, #0]
 800a816:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a81a:	601a      	str	r2, [r3, #0]
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 800a81c:	685a      	ldr	r2, [r3, #4]
 800a81e:	f042 0220 	orr.w	r2, r2, #32
 800a822:	605a      	str	r2, [r3, #4]
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800a824:	685a      	ldr	r2, [r3, #4]
 800a826:	f042 0202 	orr.w	r2, r2, #2
 800a82a:	605a      	str	r2, [r3, #4]
  HAL_StatusTypeDef errorcode = HAL_OK;
 800a82c:	2500      	movs	r5, #0
 800a82e:	e7c2      	b.n	800a7b6 <HAL_SPI_Transmit_DMA+0x1e>
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a830:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->State = HAL_SPI_STATE_READY;
 800a832:	2201      	movs	r2, #1
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a834:	f043 0310 	orr.w	r3, r3, #16
 800a838:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->State = HAL_SPI_STATE_READY;
 800a83a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
    goto error;
 800a83e:	e7ba      	b.n	800a7b6 <HAL_SPI_Transmit_DMA+0x1e>
    __HAL_SPI_DISABLE(hspi);
 800a840:	6813      	ldr	r3, [r2, #0]
 800a842:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a846:	6013      	str	r3, [r2, #0]
    SPI_1LINE_TX(hspi);
 800a848:	6813      	ldr	r3, [r2, #0]
 800a84a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800a84e:	6013      	str	r3, [r2, #0]
 800a850:	e7cd      	b.n	800a7ee <HAL_SPI_Transmit_DMA+0x56>
  __HAL_LOCK(hspi);
 800a852:	2502      	movs	r5, #2
}
 800a854:	4628      	mov	r0, r5
 800a856:	bd70      	pop	{r4, r5, r6, pc}
 800a858:	0800a869 	.word	0x0800a869
 800a85c:	0800a89d 	.word	0x0800a89d
 800a860:	0800a879 	.word	0x0800a879

0800a864 <HAL_SPI_TxHalfCpltCallback>:
 800a864:	4770      	bx	lr
 800a866:	bf00      	nop

0800a868 <SPI_DMAHalfTransmitCplt>:
{
 800a868:	b508      	push	{r3, lr}
  HAL_SPI_TxHalfCpltCallback(hspi);
 800a86a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800a86c:	f7ff fffa 	bl	800a864 <HAL_SPI_TxHalfCpltCallback>
}
 800a870:	bd08      	pop	{r3, pc}
 800a872:	bf00      	nop

0800a874 <HAL_SPI_ErrorCallback>:
 800a874:	4770      	bx	lr
 800a876:	bf00      	nop

0800a878 <SPI_DMAError>:
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a878:	6b80      	ldr	r0, [r0, #56]	; 0x38
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800a87a:	6802      	ldr	r2, [r0, #0]
{
 800a87c:	b508      	push	{r3, lr}
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800a87e:	6853      	ldr	r3, [r2, #4]
 800a880:	f023 0303 	bic.w	r3, r3, #3
 800a884:	6053      	str	r3, [r2, #4]
  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a886:	6d43      	ldr	r3, [r0, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 800a888:	2101      	movs	r1, #1
  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a88a:	f043 0310 	orr.w	r3, r3, #16
 800a88e:	6543      	str	r3, [r0, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 800a890:	f880 1051 	strb.w	r1, [r0, #81]	; 0x51
  HAL_SPI_ErrorCallback(hspi);
 800a894:	f7ff ffee 	bl	800a874 <HAL_SPI_ErrorCallback>
}
 800a898:	bd08      	pop	{r3, pc}
 800a89a:	bf00      	nop

0800a89c <SPI_DMATransmitCplt>:
{
 800a89c:	b530      	push	{r4, r5, lr}
 800a89e:	4605      	mov	r5, r0
 800a8a0:	b083      	sub	sp, #12
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a8a2:	6b84      	ldr	r4, [r0, #56]	; 0x38
  tickstart = HAL_GetTick();
 800a8a4:	f7fd ff54 	bl	8008750 <HAL_GetTick>
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 800a8a8:	682b      	ldr	r3, [r5, #0]
 800a8aa:	681b      	ldr	r3, [r3, #0]
 800a8ac:	05db      	lsls	r3, r3, #23
 800a8ae:	d422      	bmi.n	800a8f6 <SPI_DMATransmitCplt+0x5a>
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800a8b0:	6823      	ldr	r3, [r4, #0]
 800a8b2:	6859      	ldr	r1, [r3, #4]
 800a8b4:	f021 0120 	bic.w	r1, r1, #32
 800a8b8:	6059      	str	r1, [r3, #4]
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800a8ba:	6859      	ldr	r1, [r3, #4]
 800a8bc:	f021 0102 	bic.w	r1, r1, #2
 800a8c0:	4602      	mov	r2, r0
 800a8c2:	6059      	str	r1, [r3, #4]
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 800a8c4:	4620      	mov	r0, r4
 800a8c6:	2164      	movs	r1, #100	; 0x64
 800a8c8:	f7ff fc6c 	bl	800a1a4 <SPI_EndRxTxTransaction>
 800a8cc:	b118      	cbz	r0, 800a8d6 <SPI_DMATransmitCplt+0x3a>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a8ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a8d0:	f043 0320 	orr.w	r3, r3, #32
 800a8d4:	6563      	str	r3, [r4, #84]	; 0x54
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a8d6:	68a3      	ldr	r3, [r4, #8]
 800a8d8:	b933      	cbnz	r3, 800a8e8 <SPI_DMATransmitCplt+0x4c>
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a8da:	6822      	ldr	r2, [r4, #0]
 800a8dc:	9301      	str	r3, [sp, #4]
 800a8de:	68d3      	ldr	r3, [r2, #12]
 800a8e0:	9301      	str	r3, [sp, #4]
 800a8e2:	6893      	ldr	r3, [r2, #8]
 800a8e4:	9301      	str	r3, [sp, #4]
 800a8e6:	9b01      	ldr	r3, [sp, #4]
    hspi->State = HAL_SPI_STATE_READY;
 800a8e8:	2301      	movs	r3, #1
    hspi->TxXferCount = 0U;
 800a8ea:	2200      	movs	r2, #0
 800a8ec:	86e2      	strh	r2, [r4, #54]	; 0x36
    hspi->State = HAL_SPI_STATE_READY;
 800a8ee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a8f2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a8f4:	b923      	cbnz	r3, 800a900 <SPI_DMATransmitCplt+0x64>
  HAL_SPI_TxCpltCallback(hspi);
 800a8f6:	4620      	mov	r0, r4
 800a8f8:	f004 ff48 	bl	800f78c <HAL_SPI_TxCpltCallback>
}
 800a8fc:	b003      	add	sp, #12
 800a8fe:	bd30      	pop	{r4, r5, pc}
      HAL_SPI_ErrorCallback(hspi);
 800a900:	4620      	mov	r0, r4
 800a902:	f7ff ffb7 	bl	800a874 <HAL_SPI_ErrorCallback>
}
 800a906:	b003      	add	sp, #12
 800a908:	bd30      	pop	{r4, r5, pc}
 800a90a:	bf00      	nop

0800a90c <HAL_SPI_IRQHandler>:
{
 800a90c:	b530      	push	{r4, r5, lr}
  uint32_t itsource = hspi->Instance->CR2;
 800a90e:	6802      	ldr	r2, [r0, #0]
 800a910:	6851      	ldr	r1, [r2, #4]
  uint32_t itflag   = hspi->Instance->SR;
 800a912:	6893      	ldr	r3, [r2, #8]
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 800a914:	f013 0f40 	tst.w	r3, #64	; 0x40
{
 800a918:	b085      	sub	sp, #20
 800a91a:	4604      	mov	r4, r0
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 800a91c:	f3c3 1580 	ubfx	r5, r3, #6, #1
 800a920:	d105      	bne.n	800a92e <HAL_SPI_IRQHandler+0x22>
 800a922:	f013 0f01 	tst.w	r3, #1
 800a926:	d002      	beq.n	800a92e <HAL_SPI_IRQHandler+0x22>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 800a928:	f011 0f40 	tst.w	r1, #64	; 0x40
 800a92c:	d17a      	bne.n	800aa24 <HAL_SPI_IRQHandler+0x118>
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 800a92e:	0798      	lsls	r0, r3, #30
 800a930:	d501      	bpl.n	800a936 <HAL_SPI_IRQHandler+0x2a>
 800a932:	0608      	lsls	r0, r1, #24
 800a934:	d470      	bmi.n	800aa18 <HAL_SPI_IRQHandler+0x10c>
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800a936:	f013 0f20 	tst.w	r3, #32
 800a93a:	f3c3 1040 	ubfx	r0, r3, #5, #1
 800a93e:	d049      	beq.n	800a9d4 <HAL_SPI_IRQHandler+0xc8>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 800a940:	0688      	lsls	r0, r1, #26
 800a942:	d545      	bpl.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800a944:	b175      	cbz	r5, 800a964 <HAL_SPI_IRQHandler+0x58>
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800a946:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800a94a:	2803      	cmp	r0, #3
 800a94c:	d06c      	beq.n	800aa28 <HAL_SPI_IRQHandler+0x11c>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800a94e:	6d60      	ldr	r0, [r4, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a950:	2500      	movs	r5, #0
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800a952:	f040 0004 	orr.w	r0, r0, #4
 800a956:	6560      	str	r0, [r4, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a958:	9500      	str	r5, [sp, #0]
 800a95a:	68d0      	ldr	r0, [r2, #12]
 800a95c:	9000      	str	r0, [sp, #0]
 800a95e:	6890      	ldr	r0, [r2, #8]
 800a960:	9000      	str	r0, [sp, #0]
 800a962:	9800      	ldr	r0, [sp, #0]
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800a964:	6d60      	ldr	r0, [r4, #84]	; 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800a966:	2500      	movs	r5, #0
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800a968:	f040 0001 	orr.w	r0, r0, #1
 800a96c:	6560      	str	r0, [r4, #84]	; 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800a96e:	9502      	str	r5, [sp, #8]
 800a970:	6890      	ldr	r0, [r2, #8]
 800a972:	9002      	str	r0, [sp, #8]
 800a974:	6810      	ldr	r0, [r2, #0]
 800a976:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800a97a:	6010      	str	r0, [r2, #0]
 800a97c:	9802      	ldr	r0, [sp, #8]
 800a97e:	f3c3 2300 	ubfx	r3, r3, #8, #1
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 800a982:	2b00      	cmp	r3, #0
 800a984:	d13e      	bne.n	800aa04 <HAL_SPI_IRQHandler+0xf8>
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a986:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a988:	b313      	cbz	r3, 800a9d0 <HAL_SPI_IRQHandler+0xc4>
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 800a98a:	6853      	ldr	r3, [r2, #4]
 800a98c:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 800a990:	6053      	str	r3, [r2, #4]
      hspi->State = HAL_SPI_STATE_READY;
 800a992:	2001      	movs	r0, #1
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 800a994:	078b      	lsls	r3, r1, #30
      hspi->State = HAL_SPI_STATE_READY;
 800a996:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 800a99a:	d04d      	beq.n	800aa38 <HAL_SPI_IRQHandler+0x12c>
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800a99c:	6853      	ldr	r3, [r2, #4]
        if (hspi->hdmarx != NULL)
 800a99e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800a9a0:	f023 0303 	bic.w	r3, r3, #3
 800a9a4:	6053      	str	r3, [r2, #4]
        if (hspi->hdmarx != NULL)
 800a9a6:	b140      	cbz	r0, 800a9ba <HAL_SPI_IRQHandler+0xae>
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800a9a8:	4b25      	ldr	r3, [pc, #148]	; (800aa40 <HAL_SPI_IRQHandler+0x134>)
 800a9aa:	6503      	str	r3, [r0, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800a9ac:	f7fe f840 	bl	8008a30 <HAL_DMA_Abort_IT>
 800a9b0:	b118      	cbz	r0, 800a9ba <HAL_SPI_IRQHandler+0xae>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800a9b2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a9b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a9b8:	6563      	str	r3, [r4, #84]	; 0x54
        if (hspi->hdmatx != NULL)
 800a9ba:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a9bc:	b140      	cbz	r0, 800a9d0 <HAL_SPI_IRQHandler+0xc4>
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800a9be:	4b20      	ldr	r3, [pc, #128]	; (800aa40 <HAL_SPI_IRQHandler+0x134>)
 800a9c0:	6503      	str	r3, [r0, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800a9c2:	f7fe f835 	bl	8008a30 <HAL_DMA_Abort_IT>
 800a9c6:	b118      	cbz	r0, 800a9d0 <HAL_SPI_IRQHandler+0xc4>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800a9c8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a9ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a9ce:	6563      	str	r3, [r4, #84]	; 0x54
}
 800a9d0:	b005      	add	sp, #20
 800a9d2:	bd30      	pop	{r4, r5, pc}
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800a9d4:	b195      	cbz	r5, 800a9fc <HAL_SPI_IRQHandler+0xf0>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 800a9d6:	068d      	lsls	r5, r1, #26
 800a9d8:	d5fa      	bpl.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800a9da:	f894 5051 	ldrb.w	r5, [r4, #81]	; 0x51
 800a9de:	2d03      	cmp	r5, #3
 800a9e0:	d022      	beq.n	800aa28 <HAL_SPI_IRQHandler+0x11c>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800a9e2:	6d65      	ldr	r5, [r4, #84]	; 0x54
 800a9e4:	f045 0504 	orr.w	r5, r5, #4
 800a9e8:	6565      	str	r5, [r4, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a9ea:	9000      	str	r0, [sp, #0]
 800a9ec:	68d0      	ldr	r0, [r2, #12]
 800a9ee:	9000      	str	r0, [sp, #0]
 800a9f0:	6890      	ldr	r0, [r2, #8]
 800a9f2:	9000      	str	r0, [sp, #0]
 800a9f4:	9800      	ldr	r0, [sp, #0]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 800a9f6:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800a9fa:	e7c2      	b.n	800a982 <HAL_SPI_IRQHandler+0x76>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 800a9fc:	05dd      	lsls	r5, r3, #23
 800a9fe:	d5e7      	bpl.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
 800aa00:	068b      	lsls	r3, r1, #26
 800aa02:	d5e5      	bpl.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800aa04:	6d63      	ldr	r3, [r4, #84]	; 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800aa06:	2000      	movs	r0, #0
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800aa08:	f043 0308 	orr.w	r3, r3, #8
 800aa0c:	6563      	str	r3, [r4, #84]	; 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800aa0e:	9003      	str	r0, [sp, #12]
 800aa10:	6893      	ldr	r3, [r2, #8]
 800aa12:	9303      	str	r3, [sp, #12]
 800aa14:	9b03      	ldr	r3, [sp, #12]
 800aa16:	e7b6      	b.n	800a986 <HAL_SPI_IRQHandler+0x7a>
    hspi->TxISR(hspi);
 800aa18:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800aa1a:	4620      	mov	r0, r4
}
 800aa1c:	b005      	add	sp, #20
 800aa1e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    hspi->TxISR(hspi);
 800aa22:	4718      	bx	r3
    hspi->RxISR(hspi);
 800aa24:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aa26:	e7f9      	b.n	800aa1c <HAL_SPI_IRQHandler+0x110>
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800aa28:	2300      	movs	r3, #0
 800aa2a:	9301      	str	r3, [sp, #4]
 800aa2c:	68d3      	ldr	r3, [r2, #12]
 800aa2e:	9301      	str	r3, [sp, #4]
 800aa30:	6893      	ldr	r3, [r2, #8]
 800aa32:	9301      	str	r3, [sp, #4]
 800aa34:	9b01      	ldr	r3, [sp, #4]
        return;
 800aa36:	e7cb      	b.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
        HAL_SPI_ErrorCallback(hspi);
 800aa38:	4620      	mov	r0, r4
 800aa3a:	f7ff ff1b 	bl	800a874 <HAL_SPI_ErrorCallback>
 800aa3e:	e7c7      	b.n	800a9d0 <HAL_SPI_IRQHandler+0xc4>
 800aa40:	0800aa45 	.word	0x0800aa45

0800aa44 <SPI_DMAAbortOnError>:
{
 800aa44:	b508      	push	{r3, lr}
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800aa46:	6b80      	ldr	r0, [r0, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800aa48:	2300      	movs	r3, #0
 800aa4a:	87c3      	strh	r3, [r0, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800aa4c:	86c3      	strh	r3, [r0, #54]	; 0x36
  HAL_SPI_ErrorCallback(hspi);
 800aa4e:	f7ff ff11 	bl	800a874 <HAL_SPI_ErrorCallback>
}
 800aa52:	bd08      	pop	{r3, pc}

0800aa54 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800aa54:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800aa58:	2b01      	cmp	r3, #1
 800aa5a:	d12f      	bne.n	800aabc <HAL_TIM_Base_Start_IT+0x68>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800aa5c:	6803      	ldr	r3, [r0, #0]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aa5e:	4919      	ldr	r1, [pc, #100]	; (800aac4 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800aa60:	2202      	movs	r2, #2
 800aa62:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800aa66:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aa68:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800aa6a:	f042 0201 	orr.w	r2, r2, #1
 800aa6e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aa70:	d019      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa72:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aa76:	d016      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa78:	4a13      	ldr	r2, [pc, #76]	; (800aac8 <HAL_TIM_Base_Start_IT+0x74>)
 800aa7a:	4293      	cmp	r3, r2
 800aa7c:	d013      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa7e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aa82:	4293      	cmp	r3, r2
 800aa84:	d00f      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa86:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aa8a:	4293      	cmp	r3, r2
 800aa8c:	d00b      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa8e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800aa92:	4293      	cmp	r3, r2
 800aa94:	d007      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa96:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800aa9a:	4293      	cmp	r3, r2
 800aa9c:	d003      	beq.n	800aaa6 <HAL_TIM_Base_Start_IT+0x52>
 800aa9e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800aaa2:	4293      	cmp	r3, r2
 800aaa4:	d104      	bne.n	800aab0 <HAL_TIM_Base_Start_IT+0x5c>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800aaa6:	689a      	ldr	r2, [r3, #8]
 800aaa8:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800aaac:	2a06      	cmp	r2, #6
 800aaae:	d007      	beq.n	800aac0 <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800aab0:	681a      	ldr	r2, [r3, #0]
 800aab2:	f042 0201 	orr.w	r2, r2, #1
 800aab6:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800aab8:	2000      	movs	r0, #0
 800aaba:	4770      	bx	lr
    return HAL_ERROR;
 800aabc:	2001      	movs	r0, #1
 800aabe:	4770      	bx	lr
  return HAL_OK;
 800aac0:	2000      	movs	r0, #0
}
 800aac2:	4770      	bx	lr
 800aac4:	40010000 	.word	0x40010000
 800aac8:	40000400 	.word	0x40000400

0800aacc <HAL_TIM_ConfigClockSource>:
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800aacc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800aad0:	2b01      	cmp	r3, #1
 800aad2:	d075      	beq.n	800abc0 <HAL_TIM_ConfigClockSource+0xf4>
 800aad4:	4602      	mov	r2, r0
{
 800aad6:	b4f0      	push	{r4, r5, r6, r7}

  htim->State = HAL_TIM_STATE_BUSY;
 800aad8:	2302      	movs	r3, #2

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800aada:	6814      	ldr	r4, [r2, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800aadc:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800aae0:	2001      	movs	r0, #1
 800aae2:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800aae6:	68a5      	ldr	r5, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
  htim->Instance->SMCR = tmpsmcr;

  switch (sClockSourceConfig->ClockSource)
 800aae8:	680b      	ldr	r3, [r1, #0]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800aaea:	f425 457f 	bic.w	r5, r5, #65280	; 0xff00
 800aaee:	f025 0577 	bic.w	r5, r5, #119	; 0x77
  switch (sClockSourceConfig->ClockSource)
 800aaf2:	2b60      	cmp	r3, #96	; 0x60
  htim->Instance->SMCR = tmpsmcr;
 800aaf4:	60a5      	str	r5, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800aaf6:	d065      	beq.n	800abc4 <HAL_TIM_ConfigClockSource+0xf8>
 800aaf8:	d824      	bhi.n	800ab44 <HAL_TIM_ConfigClockSource+0x78>
 800aafa:	2b40      	cmp	r3, #64	; 0x40
 800aafc:	d07c      	beq.n	800abf8 <HAL_TIM_ConfigClockSource+0x12c>
 800aafe:	d94b      	bls.n	800ab98 <HAL_TIM_ConfigClockSource+0xcc>
 800ab00:	2b50      	cmp	r3, #80	; 0x50
 800ab02:	d117      	bne.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800ab04:	6a25      	ldr	r5, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ab06:	6a26      	ldr	r6, [r4, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800ab08:	6848      	ldr	r0, [r1, #4]
 800ab0a:	68cf      	ldr	r7, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ab0c:	f026 0601 	bic.w	r6, r6, #1
 800ab10:	6226      	str	r6, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ab12:	69a3      	ldr	r3, [r4, #24]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ab14:	f025 010a 	bic.w	r1, r5, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800ab18:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccer |= TIM_ICPolarity;
 800ab1c:	4301      	orrs	r1, r0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ab1e:	ea43 1307 	orr.w	r3, r3, r7, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800ab22:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800ab24:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800ab26:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800ab28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ab2c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800ab30:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800ab32:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800ab34:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800ab36:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800ab38:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800ab3c:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800ab40:	bcf0      	pop	{r4, r5, r6, r7}
 800ab42:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800ab44:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ab48:	d038      	beq.n	800abbc <HAL_TIM_ConfigClockSource+0xf0>
 800ab4a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ab4e:	d110      	bne.n	800ab72 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab50:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
 800ab54:	68c8      	ldr	r0, [r1, #12]
  tmpsmcr = TIMx->SMCR;
 800ab56:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab58:	432b      	orrs	r3, r5
 800ab5a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ab5e:	f421 417f 	bic.w	r1, r1, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab62:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800ab64:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800ab66:	68a3      	ldr	r3, [r4, #8]
 800ab68:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ab6c:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800ab6e:	2000      	movs	r0, #0
      break;
 800ab70:	e7e0      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800ab72:	2b70      	cmp	r3, #112	; 0x70
 800ab74:	d1de      	bne.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab76:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
 800ab7a:	68c8      	ldr	r0, [r1, #12]
  tmpsmcr = TIMx->SMCR;
 800ab7c:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab7e:	432b      	orrs	r3, r5
 800ab80:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ab84:	f421 417f 	bic.w	r1, r1, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ab88:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800ab8a:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800ab8c:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800ab8e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR = tmpsmcr;
 800ab92:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800ab94:	2000      	movs	r0, #0
      break;
 800ab96:	e7cd      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800ab98:	2b20      	cmp	r3, #32
 800ab9a:	d002      	beq.n	800aba2 <HAL_TIM_ConfigClockSource+0xd6>
 800ab9c:	d90a      	bls.n	800abb4 <HAL_TIM_ConfigClockSource+0xe8>
 800ab9e:	2b30      	cmp	r3, #48	; 0x30
 800aba0:	d1c8      	bne.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800aba2:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800aba4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800aba8:	430b      	orrs	r3, r1
 800abaa:	f043 0307 	orr.w	r3, r3, #7
  TIMx->SMCR = tmpsmcr;
 800abae:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800abb0:	2000      	movs	r0, #0
}
 800abb2:	e7bf      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800abb4:	f033 0110 	bics.w	r1, r3, #16
 800abb8:	d1bc      	bne.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
 800abba:	e7f2      	b.n	800aba2 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800abbc:	2000      	movs	r0, #0
 800abbe:	e7b9      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800abc0:	2002      	movs	r0, #2
}
 800abc2:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800abc4:	6a20      	ldr	r0, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800abc6:	684d      	ldr	r5, [r1, #4]
 800abc8:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800abca:	f020 0010 	bic.w	r0, r0, #16
 800abce:	6220      	str	r0, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800abd0:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800abd2:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800abd4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800abd8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800abdc:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800abe0:	ea41 3106 	orr.w	r1, r1, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800abe4:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800abe6:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800abe8:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800abea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800abee:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 800abf2:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800abf4:	2000      	movs	r0, #0
}
 800abf6:	e79d      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
  tmpccer = TIMx->CCER;
 800abf8:	6a25      	ldr	r5, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800abfa:	6a26      	ldr	r6, [r4, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800abfc:	6848      	ldr	r0, [r1, #4]
 800abfe:	68cf      	ldr	r7, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ac00:	f026 0601 	bic.w	r6, r6, #1
 800ac04:	6226      	str	r6, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ac06:	69a3      	ldr	r3, [r4, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ac08:	f025 010a 	bic.w	r1, r5, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800ac0c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccer |= TIM_ICPolarity;
 800ac10:	4301      	orrs	r1, r0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ac12:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800ac16:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800ac18:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800ac1a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ac1c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ac20:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 800ac24:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800ac26:	2000      	movs	r0, #0
}
 800ac28:	e784      	b.n	800ab34 <HAL_TIM_ConfigClockSource+0x68>
 800ac2a:	bf00      	nop

0800ac2c <HAL_TIM_OC_DelayElapsedCallback>:
 800ac2c:	4770      	bx	lr
 800ac2e:	bf00      	nop

0800ac30 <HAL_TIM_IC_CaptureCallback>:
 800ac30:	4770      	bx	lr
 800ac32:	bf00      	nop

0800ac34 <HAL_TIM_PWM_PulseFinishedCallback>:
 800ac34:	4770      	bx	lr
 800ac36:	bf00      	nop

0800ac38 <HAL_TIM_TriggerCallback>:
 800ac38:	4770      	bx	lr
 800ac3a:	bf00      	nop

0800ac3c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ac3c:	6803      	ldr	r3, [r0, #0]
 800ac3e:	691a      	ldr	r2, [r3, #16]
 800ac40:	0791      	lsls	r1, r2, #30
{
 800ac42:	b510      	push	{r4, lr}
 800ac44:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ac46:	d502      	bpl.n	800ac4e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800ac48:	68da      	ldr	r2, [r3, #12]
 800ac4a:	0792      	lsls	r2, r2, #30
 800ac4c:	d45f      	bmi.n	800ad0e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800ac4e:	691a      	ldr	r2, [r3, #16]
 800ac50:	0750      	lsls	r0, r2, #29
 800ac52:	d502      	bpl.n	800ac5a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800ac54:	68da      	ldr	r2, [r3, #12]
 800ac56:	0751      	lsls	r1, r2, #29
 800ac58:	d446      	bmi.n	800ace8 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800ac5a:	691a      	ldr	r2, [r3, #16]
 800ac5c:	0712      	lsls	r2, r2, #28
 800ac5e:	d502      	bpl.n	800ac66 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800ac60:	68da      	ldr	r2, [r3, #12]
 800ac62:	0710      	lsls	r0, r2, #28
 800ac64:	d42e      	bmi.n	800acc4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800ac66:	691a      	ldr	r2, [r3, #16]
 800ac68:	06d2      	lsls	r2, r2, #27
 800ac6a:	d502      	bpl.n	800ac72 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800ac6c:	68da      	ldr	r2, [r3, #12]
 800ac6e:	06d0      	lsls	r0, r2, #27
 800ac70:	d418      	bmi.n	800aca4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ac72:	691a      	ldr	r2, [r3, #16]
 800ac74:	07d1      	lsls	r1, r2, #31
 800ac76:	d502      	bpl.n	800ac7e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800ac78:	68da      	ldr	r2, [r3, #12]
 800ac7a:	07d2      	lsls	r2, r2, #31
 800ac7c:	d45d      	bmi.n	800ad3a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800ac7e:	691a      	ldr	r2, [r3, #16]
 800ac80:	0610      	lsls	r0, r2, #24
 800ac82:	d502      	bpl.n	800ac8a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800ac84:	68da      	ldr	r2, [r3, #12]
 800ac86:	0611      	lsls	r1, r2, #24
 800ac88:	d45f      	bmi.n	800ad4a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ac8a:	691a      	ldr	r2, [r3, #16]
 800ac8c:	0652      	lsls	r2, r2, #25
 800ac8e:	d502      	bpl.n	800ac96 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ac90:	68da      	ldr	r2, [r3, #12]
 800ac92:	0650      	lsls	r0, r2, #25
 800ac94:	d461      	bmi.n	800ad5a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ac96:	691a      	ldr	r2, [r3, #16]
 800ac98:	0691      	lsls	r1, r2, #26
 800ac9a:	d502      	bpl.n	800aca2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ac9c:	68da      	ldr	r2, [r3, #12]
 800ac9e:	0692      	lsls	r2, r2, #26
 800aca0:	d443      	bmi.n	800ad2a <HAL_TIM_IRQHandler+0xee>
}
 800aca2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800aca4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800aca8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800acaa:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800acac:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800acae:	69db      	ldr	r3, [r3, #28]
 800acb0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800acb4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800acb6:	d064      	beq.n	800ad82 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800acb8:	f7ff ffba 	bl	800ac30 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800acbc:	2200      	movs	r2, #0
 800acbe:	6823      	ldr	r3, [r4, #0]
 800acc0:	7722      	strb	r2, [r4, #28]
 800acc2:	e7d6      	b.n	800ac72 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800acc4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800acc8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800acca:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800accc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800acce:	69db      	ldr	r3, [r3, #28]
 800acd0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800acd2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800acd4:	d152      	bne.n	800ad7c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800acd6:	f7ff ffa9 	bl	800ac2c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800acda:	4620      	mov	r0, r4
 800acdc:	f7ff ffaa 	bl	800ac34 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ace0:	2200      	movs	r2, #0
 800ace2:	6823      	ldr	r3, [r4, #0]
 800ace4:	7722      	strb	r2, [r4, #28]
 800ace6:	e7be      	b.n	800ac66 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ace8:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800acec:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800acee:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800acf0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800acf2:	699b      	ldr	r3, [r3, #24]
 800acf4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800acf8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800acfa:	d13c      	bne.n	800ad76 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800acfc:	f7ff ff96 	bl	800ac2c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ad00:	4620      	mov	r0, r4
 800ad02:	f7ff ff97 	bl	800ac34 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ad06:	2200      	movs	r2, #0
 800ad08:	6823      	ldr	r3, [r4, #0]
 800ad0a:	7722      	strb	r2, [r4, #28]
 800ad0c:	e7a5      	b.n	800ac5a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ad0e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ad12:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ad14:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ad16:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800ad18:	699b      	ldr	r3, [r3, #24]
 800ad1a:	079b      	lsls	r3, r3, #30
 800ad1c:	d025      	beq.n	800ad6a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800ad1e:	f7ff ff87 	bl	800ac30 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ad22:	2200      	movs	r2, #0
 800ad24:	6823      	ldr	r3, [r4, #0]
 800ad26:	7722      	strb	r2, [r4, #28]
 800ad28:	e791      	b.n	800ac4e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ad2a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800ad2e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ad30:	611a      	str	r2, [r3, #16]
}
 800ad32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800ad36:	f000 b8fd 	b.w	800af34 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800ad3a:	f06f 0201 	mvn.w	r2, #1
 800ad3e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800ad40:	4620      	mov	r0, r4
 800ad42:	f7f5 fd65 	bl	8000810 <HAL_TIM_PeriodElapsedCallback>
 800ad46:	6823      	ldr	r3, [r4, #0]
 800ad48:	e799      	b.n	800ac7e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ad4a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ad4e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800ad50:	4620      	mov	r0, r4
 800ad52:	f000 f8f1 	bl	800af38 <HAL_TIMEx_BreakCallback>
 800ad56:	6823      	ldr	r3, [r4, #0]
 800ad58:	e797      	b.n	800ac8a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ad5a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ad5e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800ad60:	4620      	mov	r0, r4
 800ad62:	f7ff ff69 	bl	800ac38 <HAL_TIM_TriggerCallback>
 800ad66:	6823      	ldr	r3, [r4, #0]
 800ad68:	e795      	b.n	800ac96 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800ad6a:	f7ff ff5f 	bl	800ac2c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ad6e:	4620      	mov	r0, r4
 800ad70:	f7ff ff60 	bl	800ac34 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad74:	e7d5      	b.n	800ad22 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800ad76:	f7ff ff5b 	bl	800ac30 <HAL_TIM_IC_CaptureCallback>
 800ad7a:	e7c4      	b.n	800ad06 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800ad7c:	f7ff ff58 	bl	800ac30 <HAL_TIM_IC_CaptureCallback>
 800ad80:	e7ae      	b.n	800ace0 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ad82:	f7ff ff53 	bl	800ac2c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ad86:	4620      	mov	r0, r4
 800ad88:	f7ff ff54 	bl	800ac34 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad8c:	e796      	b.n	800acbc <HAL_TIM_IRQHandler+0x80>
 800ad8e:	bf00      	nop

0800ad90 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad90:	4a2f      	ldr	r2, [pc, #188]	; (800ae50 <TIM_Base_SetConfig+0xc0>)
  tmpcr1 = TIMx->CR1;
 800ad92:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad94:	4290      	cmp	r0, r2
{
 800ad96:	b470      	push	{r4, r5, r6}
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad98:	d043      	beq.n	800ae22 <TIM_Base_SetConfig+0x92>
 800ad9a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800ad9e:	d034      	beq.n	800ae0a <TIM_Base_SetConfig+0x7a>
 800ada0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ada4:	4290      	cmp	r0, r2
 800ada6:	d030      	beq.n	800ae0a <TIM_Base_SetConfig+0x7a>
 800ada8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800adac:	4290      	cmp	r0, r2
 800adae:	d02c      	beq.n	800ae0a <TIM_Base_SetConfig+0x7a>
 800adb0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800adb4:	4290      	cmp	r0, r2
 800adb6:	d028      	beq.n	800ae0a <TIM_Base_SetConfig+0x7a>
 800adb8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800adbc:	4290      	cmp	r0, r2
 800adbe:	d030      	beq.n	800ae22 <TIM_Base_SetConfig+0x92>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800adc0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800adc4:	4290      	cmp	r0, r2
 800adc6:	d024      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
 800adc8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800adcc:	4290      	cmp	r0, r2
 800adce:	d020      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
 800add0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800add4:	4290      	cmp	r0, r2
 800add6:	d01c      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
 800add8:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800addc:	4290      	cmp	r0, r2
 800adde:	d018      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
 800ade0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ade4:	4290      	cmp	r0, r2
 800ade6:	d014      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
 800ade8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800adec:	4290      	cmp	r0, r2
 800adee:	d010      	beq.n	800ae12 <TIM_Base_SetConfig+0x82>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800adf0:	694d      	ldr	r5, [r1, #20]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800adf2:	688c      	ldr	r4, [r1, #8]
  TIMx->PSC = Structure->Prescaler;
 800adf4:	680a      	ldr	r2, [r1, #0]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800adf6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800adfa:	432b      	orrs	r3, r5
  TIMx->CR1 = tmpcr1;
 800adfc:	6003      	str	r3, [r0, #0]
  TIMx->EGR = TIM_EGR_UG;
 800adfe:	2301      	movs	r3, #1
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ae00:	62c4      	str	r4, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ae02:	6282      	str	r2, [r0, #40]	; 0x28
}
 800ae04:	bc70      	pop	{r4, r5, r6}
  TIMx->EGR = TIM_EGR_UG;
 800ae06:	6143      	str	r3, [r0, #20]
}
 800ae08:	4770      	bx	lr
    tmpcr1 |= Structure->CounterMode;
 800ae0a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ae0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ae10:	4313      	orrs	r3, r2
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae12:	68ce      	ldr	r6, [r1, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ae14:	694d      	ldr	r5, [r1, #20]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ae16:	688c      	ldr	r4, [r1, #8]
  TIMx->PSC = Structure->Prescaler;
 800ae18:	680a      	ldr	r2, [r1, #0]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ae1a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae1e:	4333      	orrs	r3, r6
 800ae20:	e7e9      	b.n	800adf6 <TIM_Base_SetConfig+0x66>
    tmpcr1 |= Structure->CounterMode;
 800ae22:	684d      	ldr	r5, [r1, #4]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae24:	68cc      	ldr	r4, [r1, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ae26:	694a      	ldr	r2, [r1, #20]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ae28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ae2c:	432b      	orrs	r3, r5
    tmpcr1 &= ~TIM_CR1_CKD;
 800ae2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae32:	4323      	orrs	r3, r4
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ae34:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ae38:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 800ae3a:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ae3c:	688b      	ldr	r3, [r1, #8]
 800ae3e:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ae40:	680b      	ldr	r3, [r1, #0]
 800ae42:	6283      	str	r3, [r0, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ae44:	690b      	ldr	r3, [r1, #16]
 800ae46:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800ae48:	2301      	movs	r3, #1
}
 800ae4a:	bc70      	pop	{r4, r5, r6}
  TIMx->EGR = TIM_EGR_UG;
 800ae4c:	6143      	str	r3, [r0, #20]
}
 800ae4e:	4770      	bx	lr
 800ae50:	40010000 	.word	0x40010000

0800ae54 <HAL_TIM_Base_Init>:
  if (htim == NULL)
 800ae54:	b350      	cbz	r0, 800aeac <HAL_TIM_Base_Init+0x58>
{
 800ae56:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ae58:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae5c:	4604      	mov	r4, r0
 800ae5e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ae62:	b1f3      	cbz	r3, 800aea2 <HAL_TIM_Base_Init+0x4e>
  htim->State = HAL_TIM_STATE_BUSY;
 800ae64:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ae66:	4621      	mov	r1, r4
  htim->State = HAL_TIM_STATE_BUSY;
 800ae68:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ae6c:	f851 0b04 	ldr.w	r0, [r1], #4
 800ae70:	f7ff ff8e 	bl	800ad90 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ae74:	2301      	movs	r3, #1
 800ae76:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ae7a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ae7e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ae82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ae86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ae8a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ae8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ae92:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ae96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ae9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ae9e:	2000      	movs	r0, #0
}
 800aea0:	bd10      	pop	{r4, pc}
    htim->Lock = HAL_UNLOCKED;
 800aea2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800aea6:	f7f5 ff05 	bl	8000cb4 <HAL_TIM_Base_MspInit>
 800aeaa:	e7db      	b.n	800ae64 <HAL_TIM_Base_Init+0x10>
    return HAL_ERROR;
 800aeac:	2001      	movs	r0, #1
}
 800aeae:	4770      	bx	lr

0800aeb0 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800aeb0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800aeb4:	2b01      	cmp	r3, #1
 800aeb6:	d036      	beq.n	800af26 <HAL_TIMEx_MasterConfigSynchronization+0x76>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800aeb8:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800aeba:	2202      	movs	r2, #2
{
 800aebc:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800aebe:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800aec2:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800aec4:	680c      	ldr	r4, [r1, #0]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aec6:	4d19      	ldr	r5, [pc, #100]	; (800af2c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
  tmpcr2 &= ~TIM_CR2_MMS;
 800aec8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800aecc:	4322      	orrs	r2, r4
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aece:	42ab      	cmp	r3, r5
  tmpsmcr = htim->Instance->SMCR;
 800aed0:	689c      	ldr	r4, [r3, #8]
  htim->Instance->CR2 = tmpcr2;
 800aed2:	605a      	str	r2, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aed4:	d019      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aed6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aeda:	d016      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aedc:	4a14      	ldr	r2, [pc, #80]	; (800af30 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 800aede:	4293      	cmp	r3, r2
 800aee0:	d013      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aee2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aee6:	4293      	cmp	r3, r2
 800aee8:	d00f      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aeea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aeee:	4293      	cmp	r3, r2
 800aef0:	d00b      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aef2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800aef6:	4293      	cmp	r3, r2
 800aef8:	d007      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800aefa:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800aefe:	4293      	cmp	r3, r2
 800af00:	d003      	beq.n	800af0a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800af02:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800af06:	4293      	cmp	r3, r2
 800af08:	d104      	bne.n	800af14 <HAL_TIMEx_MasterConfigSynchronization+0x64>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800af0a:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800af0c:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800af10:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800af12:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800af14:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800af16:	2201      	movs	r2, #1
 800af18:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800af1c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800af20:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800af22:	4618      	mov	r0, r3
}
 800af24:	4770      	bx	lr
  __HAL_LOCK(htim);
 800af26:	2002      	movs	r0, #2
}
 800af28:	4770      	bx	lr
 800af2a:	bf00      	nop
 800af2c:	40010000 	.word	0x40010000
 800af30:	40000400 	.word	0x40000400

0800af34 <HAL_TIMEx_CommutCallback>:
 800af34:	4770      	bx	lr
 800af36:	bf00      	nop

0800af38 <HAL_TIMEx_BreakCallback>:
 800af38:	4770      	bx	lr
 800af3a:	bf00      	nop

0800af3c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800af3c:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800af3e:	f102 030c 	add.w	r3, r2, #12
 800af42:	e853 3f00 	ldrex	r3, [r3]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800af46:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800af4a:	f102 0c0c 	add.w	ip, r2, #12
 800af4e:	e84c 3100 	strex	r1, r3, [ip]
 800af52:	2900      	cmp	r1, #0
 800af54:	d1f3      	bne.n	800af3e <UART_EndRxTransfer+0x2>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800af56:	f102 0314 	add.w	r3, r2, #20
 800af5a:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800af5e:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800af62:	f102 0c14 	add.w	ip, r2, #20
 800af66:	e84c 3100 	strex	r1, r3, [ip]
 800af6a:	2900      	cmp	r1, #0
 800af6c:	d1f3      	bne.n	800af56 <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800af6e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800af70:	2b01      	cmp	r3, #1
 800af72:	d005      	beq.n	800af80 <UART_EndRxTransfer+0x44>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800af74:	2220      	movs	r2, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800af76:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
 800af78:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800af7c:	6303      	str	r3, [r0, #48]	; 0x30
}
 800af7e:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800af80:	f102 030c 	add.w	r3, r2, #12
 800af84:	e853 3f00 	ldrex	r3, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800af88:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800af8c:	f102 0c0c 	add.w	ip, r2, #12
 800af90:	e84c 3100 	strex	r1, r3, [ip]
 800af94:	2900      	cmp	r1, #0
 800af96:	d1f3      	bne.n	800af80 <UART_EndRxTransfer+0x44>
 800af98:	e7ec      	b.n	800af74 <UART_EndRxTransfer+0x38>
 800af9a:	bf00      	nop

0800af9c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800af9c:	b570      	push	{r4, r5, r6, lr}
 800af9e:	4604      	mov	r4, r0
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800afa0:	4833      	ldr	r0, [pc, #204]	; (800b070 <UART_SetConfig+0xd4>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800afa2:	6822      	ldr	r2, [r4, #0]
 800afa4:	68e5      	ldr	r5, [r4, #12]
 800afa6:	6911      	ldr	r1, [r2, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800afa8:	68a3      	ldr	r3, [r4, #8]
 800afaa:	6926      	ldr	r6, [r4, #16]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800afac:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 800afb0:	4329      	orrs	r1, r5
 800afb2:	6111      	str	r1, [r2, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800afb4:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800afb6:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800afb8:	4333      	orrs	r3, r6
 800afba:	432b      	orrs	r3, r5
 800afbc:	69e5      	ldr	r5, [r4, #28]
  MODIFY_REG(huart->Instance->CR1,
 800afbe:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 800afc2:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800afc6:	432b      	orrs	r3, r5
  MODIFY_REG(huart->Instance->CR1,
 800afc8:	430b      	orrs	r3, r1
 800afca:	60d3      	str	r3, [r2, #12]
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800afcc:	6953      	ldr	r3, [r2, #20]
 800afce:	69a1      	ldr	r1, [r4, #24]
 800afd0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800afd4:	430b      	orrs	r3, r1
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800afd6:	4282      	cmp	r2, r0
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800afd8:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800afda:	d029      	beq.n	800b030 <UART_SetConfig+0x94>
 800afdc:	4b25      	ldr	r3, [pc, #148]	; (800b074 <UART_SetConfig+0xd8>)
 800afde:	429a      	cmp	r2, r3
 800afe0:	d026      	beq.n	800b030 <UART_SetConfig+0x94>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 800afe2:	f7ff f80b 	bl	8009ffc <HAL_RCC_GetPCLK1Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800afe6:	69e3      	ldr	r3, [r4, #28]
 800afe8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800afec:	d126      	bne.n	800b03c <UART_SetConfig+0xa0>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800afee:	6862      	ldr	r2, [r4, #4]
 800aff0:	4d21      	ldr	r5, [pc, #132]	; (800b078 <UART_SetConfig+0xdc>)
 800aff2:	1892      	adds	r2, r2, r2
 800aff4:	f04f 0300 	mov.w	r3, #0
 800aff8:	f04f 0119 	mov.w	r1, #25
 800affc:	415b      	adcs	r3, r3
 800affe:	fba0 0101 	umull	r0, r1, r0, r1
 800b002:	f7f5 f935 	bl	8000270 <__aeabi_uldivmod>
 800b006:	fba5 3200 	umull	r3, r2, r5, r0
 800b00a:	0951      	lsrs	r1, r2, #5
 800b00c:	2264      	movs	r2, #100	; 0x64
 800b00e:	fb02 0311 	mls	r3, r2, r1, r0
 800b012:	00db      	lsls	r3, r3, #3
 800b014:	3332      	adds	r3, #50	; 0x32
 800b016:	fba5 2303 	umull	r2, r3, r5, r3
 800b01a:	f3c3 1242 	ubfx	r2, r3, #5, #3
 800b01e:	091b      	lsrs	r3, r3, #4
 800b020:	6824      	ldr	r4, [r4, #0]
 800b022:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800b026:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b02a:	4413      	add	r3, r2
 800b02c:	60a3      	str	r3, [r4, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 800b02e:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK2Freq();
 800b030:	f7fe fff4 	bl	800a01c <HAL_RCC_GetPCLK2Freq>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b034:	69e3      	ldr	r3, [r4, #28]
 800b036:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b03a:	d0d8      	beq.n	800afee <UART_SetConfig+0x52>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800b03c:	6863      	ldr	r3, [r4, #4]
 800b03e:	4d0e      	ldr	r5, [pc, #56]	; (800b078 <UART_SetConfig+0xdc>)
 800b040:	2119      	movs	r1, #25
 800b042:	009a      	lsls	r2, r3, #2
 800b044:	fba0 0101 	umull	r0, r1, r0, r1
 800b048:	0f9b      	lsrs	r3, r3, #30
 800b04a:	f7f5 f911 	bl	8000270 <__aeabi_uldivmod>
 800b04e:	fba5 3100 	umull	r3, r1, r5, r0
 800b052:	0949      	lsrs	r1, r1, #5
 800b054:	2264      	movs	r2, #100	; 0x64
 800b056:	fb02 0311 	mls	r3, r2, r1, r0
 800b05a:	011b      	lsls	r3, r3, #4
 800b05c:	3332      	adds	r3, #50	; 0x32
 800b05e:	6824      	ldr	r4, [r4, #0]
 800b060:	fba5 2303 	umull	r2, r3, r5, r3
 800b064:	0109      	lsls	r1, r1, #4
 800b066:	eb01 1353 	add.w	r3, r1, r3, lsr #5
 800b06a:	60a3      	str	r3, [r4, #8]
}
 800b06c:	bd70      	pop	{r4, r5, r6, pc}
 800b06e:	bf00      	nop
 800b070:	40011000 	.word	0x40011000
 800b074:	40011400 	.word	0x40011400
 800b078:	51eb851f 	.word	0x51eb851f

0800b07c <HAL_UART_Init>:
  if (huart == NULL)
 800b07c:	b360      	cbz	r0, 800b0d8 <HAL_UART_Init+0x5c>
{
 800b07e:	b538      	push	{r3, r4, r5, lr}
  if (huart->gState == HAL_UART_STATE_RESET)
 800b080:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b084:	4604      	mov	r4, r0
 800b086:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b08a:	b303      	cbz	r3, 800b0ce <HAL_UART_Init+0x52>
  __HAL_UART_DISABLE(huart);
 800b08c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800b08e:	2324      	movs	r3, #36	; 0x24
 800b090:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 800b094:	68d3      	ldr	r3, [r2, #12]
 800b096:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b09a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800b09c:	4620      	mov	r0, r4
 800b09e:	f7ff ff7d 	bl	800af9c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800b0a2:	6823      	ldr	r3, [r4, #0]
 800b0a4:	691a      	ldr	r2, [r3, #16]
 800b0a6:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b0aa:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800b0ac:	695a      	ldr	r2, [r3, #20]
 800b0ae:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b0b2:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800b0b4:	68da      	ldr	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b0b6:	2500      	movs	r5, #0
  huart->gState = HAL_UART_STATE_READY;
 800b0b8:	2120      	movs	r1, #32
  __HAL_UART_ENABLE(huart);
 800b0ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b0be:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b0c0:	6425      	str	r5, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 800b0c2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 800b0c6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
  return HAL_OK;
 800b0ca:	4628      	mov	r0, r5
}
 800b0cc:	bd38      	pop	{r3, r4, r5, pc}
    huart->Lock = HAL_UNLOCKED;
 800b0ce:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 800b0d2:	f7f5 fe29 	bl	8000d28 <HAL_UART_MspInit>
 800b0d6:	e7d9      	b.n	800b08c <HAL_UART_Init+0x10>
    return HAL_ERROR;
 800b0d8:	2001      	movs	r0, #1
}
 800b0da:	4770      	bx	lr

0800b0dc <HAL_UART_RxCpltCallback>:
 800b0dc:	4770      	bx	lr
 800b0de:	bf00      	nop

0800b0e0 <HAL_UART_RxHalfCpltCallback>:
 800b0e0:	4770      	bx	lr
 800b0e2:	bf00      	nop

0800b0e4 <HAL_UART_ErrorCallback>:
 800b0e4:	4770      	bx	lr
 800b0e6:	bf00      	nop

0800b0e8 <UART_DMAError>:
{
 800b0e8:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b0ea:	6b80      	ldr	r0, [r0, #56]	; 0x38
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 800b0ec:	6802      	ldr	r2, [r0, #0]
 800b0ee:	6951      	ldr	r1, [r2, #20]
  if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 800b0f0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b0f4:	2b21      	cmp	r3, #33	; 0x21
 800b0f6:	d00b      	beq.n	800b110 <UART_DMAError+0x28>
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800b0f8:	6952      	ldr	r2, [r2, #20]
  if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 800b0fa:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800b0fe:	2b22      	cmp	r3, #34	; 0x22
 800b100:	d01e      	beq.n	800b140 <UART_DMAError+0x58>
  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 800b102:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b104:	f043 0310 	orr.w	r3, r3, #16
 800b108:	6403      	str	r3, [r0, #64]	; 0x40
  HAL_UART_ErrorCallback(huart);
 800b10a:	f7ff ffeb 	bl	800b0e4 <HAL_UART_ErrorCallback>
}
 800b10e:	bd08      	pop	{r3, pc}
  if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 800b110:	0609      	lsls	r1, r1, #24
 800b112:	d5f1      	bpl.n	800b0f8 <UART_DMAError+0x10>
    huart->TxXferCount = 0x00U;
 800b114:	2300      	movs	r3, #0
 800b116:	84c3      	strh	r3, [r0, #38]	; 0x26
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b118:	f102 030c 	add.w	r3, r2, #12
 800b11c:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 800b120:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b124:	f102 0c0c 	add.w	ip, r2, #12
 800b128:	e84c 3100 	strex	r1, r3, [ip]
 800b12c:	2900      	cmp	r1, #0
 800b12e:	d1f3      	bne.n	800b118 <UART_DMAError+0x30>
  huart->gState = HAL_UART_STATE_READY;
 800b130:	2320      	movs	r3, #32
 800b132:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800b136:	6952      	ldr	r2, [r2, #20]
  if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 800b138:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800b13c:	2b22      	cmp	r3, #34	; 0x22
 800b13e:	d1e0      	bne.n	800b102 <UART_DMAError+0x1a>
 800b140:	0653      	lsls	r3, r2, #25
 800b142:	d5de      	bpl.n	800b102 <UART_DMAError+0x1a>
    huart->RxXferCount = 0x00U;
 800b144:	2300      	movs	r3, #0
 800b146:	85c3      	strh	r3, [r0, #46]	; 0x2e
    UART_EndRxTransfer(huart);
 800b148:	f7ff fef8 	bl	800af3c <UART_EndRxTransfer>
 800b14c:	e7d9      	b.n	800b102 <UART_DMAError+0x1a>
 800b14e:	bf00      	nop

0800b150 <HAL_UARTEx_RxEventCallback>:
}
 800b150:	4770      	bx	lr
 800b152:	bf00      	nop

0800b154 <UART_DMARxHalfCplt>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b154:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b156:	b508      	push	{r3, lr}
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800b158:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800b15a:	2b01      	cmp	r3, #1
 800b15c:	d002      	beq.n	800b164 <UART_DMARxHalfCplt+0x10>
    HAL_UART_RxHalfCpltCallback(huart);
 800b15e:	f7ff ffbf 	bl	800b0e0 <HAL_UART_RxHalfCpltCallback>
}
 800b162:	bd08      	pop	{r3, pc}
    HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 800b164:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b166:	0849      	lsrs	r1, r1, #1
 800b168:	f7ff fff2 	bl	800b150 <HAL_UARTEx_RxEventCallback>
}
 800b16c:	bd08      	pop	{r3, pc}
 800b16e:	bf00      	nop

0800b170 <UART_DMAReceiveCplt>:
{
 800b170:	b508      	push	{r3, lr}
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 800b172:	6803      	ldr	r3, [r0, #0]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b174:	6b80      	ldr	r0, [r0, #56]	; 0x38
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 800b176:	681a      	ldr	r2, [r3, #0]
 800b178:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 800b17c:	d12b      	bne.n	800b1d6 <UART_DMAReceiveCplt+0x66>
    huart->RxXferCount = 0U;
 800b17e:	6803      	ldr	r3, [r0, #0]
 800b180:	85c2      	strh	r2, [r0, #46]	; 0x2e
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b182:	f103 020c 	add.w	r2, r3, #12
 800b186:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800b18a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b18e:	f103 0c0c 	add.w	ip, r3, #12
 800b192:	e84c 2100 	strex	r1, r2, [ip]
 800b196:	2900      	cmp	r1, #0
 800b198:	d1f3      	bne.n	800b182 <UART_DMAReceiveCplt+0x12>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b19a:	f103 0214 	add.w	r2, r3, #20
 800b19e:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800b1a2:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b1a6:	f103 0c14 	add.w	ip, r3, #20
 800b1aa:	e84c 2100 	strex	r1, r2, [ip]
 800b1ae:	2900      	cmp	r1, #0
 800b1b0:	d1f3      	bne.n	800b19a <UART_DMAReceiveCplt+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b1b2:	f103 0214 	add.w	r2, r3, #20
 800b1b6:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800b1ba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b1be:	f103 0c14 	add.w	ip, r3, #20
 800b1c2:	e84c 2100 	strex	r1, r2, [ip]
 800b1c6:	2900      	cmp	r1, #0
 800b1c8:	d1f3      	bne.n	800b1b2 <UART_DMAReceiveCplt+0x42>
    huart->RxState = HAL_UART_STATE_READY;
 800b1ca:	2220      	movs	r2, #32
 800b1cc:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800b1d0:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800b1d2:	2a01      	cmp	r2, #1
 800b1d4:	d005      	beq.n	800b1e2 <UART_DMAReceiveCplt+0x72>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800b1d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800b1d8:	2b01      	cmp	r3, #1
 800b1da:	d00f      	beq.n	800b1fc <UART_DMAReceiveCplt+0x8c>
    HAL_UART_RxCpltCallback(huart);
 800b1dc:	f7ff ff7e 	bl	800b0dc <HAL_UART_RxCpltCallback>
}
 800b1e0:	bd08      	pop	{r3, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b1e2:	f103 020c 	add.w	r2, r3, #12
 800b1e6:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800b1ea:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b1ee:	f103 0c0c 	add.w	ip, r3, #12
 800b1f2:	e84c 2100 	strex	r1, r2, [ip]
 800b1f6:	2900      	cmp	r1, #0
 800b1f8:	d1f3      	bne.n	800b1e2 <UART_DMAReceiveCplt+0x72>
 800b1fa:	e7ec      	b.n	800b1d6 <UART_DMAReceiveCplt+0x66>
    HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800b1fc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b1fe:	f7ff ffa7 	bl	800b150 <HAL_UARTEx_RxEventCallback>
}
 800b202:	bd08      	pop	{r3, pc}

0800b204 <UART_Start_Receive_DMA>:
{
 800b204:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b206:	4604      	mov	r4, r0
  huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 800b208:	6b80      	ldr	r0, [r0, #56]	; 0x38
  HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 800b20a:	6826      	ldr	r6, [r4, #0]
  huart->pRxBuffPtr = pData;
 800b20c:	62a1      	str	r1, [r4, #40]	; 0x28
  huart->RxXferSize = Size;
 800b20e:	85a2      	strh	r2, [r4, #44]	; 0x2c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b210:	2500      	movs	r5, #0
{
 800b212:	4613      	mov	r3, r2
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800b214:	f04f 0c22 	mov.w	ip, #34	; 0x22
  HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 800b218:	460a      	mov	r2, r1
 800b21a:	1d31      	adds	r1, r6, #4
  huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 800b21c:	4e1e      	ldr	r6, [pc, #120]	; (800b298 <UART_Start_Receive_DMA+0x94>)
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b21e:	6425      	str	r5, [r4, #64]	; 0x40
  huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 800b220:	4f1e      	ldr	r7, [pc, #120]	; (800b29c <UART_Start_Receive_DMA+0x98>)
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800b222:	f884 c03e 	strb.w	ip, [r4, #62]	; 0x3e
  huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 800b226:	6406      	str	r6, [r0, #64]	; 0x40
  huart->hdmarx->XferErrorCallback = UART_DMAError;
 800b228:	4e1d      	ldr	r6, [pc, #116]	; (800b2a0 <UART_Start_Receive_DMA+0x9c>)
  huart->hdmarx->XferAbortCallback = NULL;
 800b22a:	6505      	str	r5, [r0, #80]	; 0x50
{
 800b22c:	b083      	sub	sp, #12
  huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 800b22e:	63c7      	str	r7, [r0, #60]	; 0x3c
  huart->hdmarx->XferErrorCallback = UART_DMAError;
 800b230:	64c6      	str	r6, [r0, #76]	; 0x4c
  HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 800b232:	f7fd fbbf 	bl	80089b4 <HAL_DMA_Start_IT>
  __HAL_UART_CLEAR_OREFLAG(huart);
 800b236:	6823      	ldr	r3, [r4, #0]
 800b238:	9501      	str	r5, [sp, #4]
 800b23a:	681a      	ldr	r2, [r3, #0]
 800b23c:	9201      	str	r2, [sp, #4]
 800b23e:	6859      	ldr	r1, [r3, #4]
  if (huart->Init.Parity != UART_PARITY_NONE)
 800b240:	6922      	ldr	r2, [r4, #16]
  __HAL_UART_CLEAR_OREFLAG(huart);
 800b242:	9101      	str	r1, [sp, #4]
 800b244:	9901      	ldr	r1, [sp, #4]
  __HAL_UNLOCK(huart);
 800b246:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  if (huart->Init.Parity != UART_PARITY_NONE)
 800b24a:	b15a      	cbz	r2, 800b264 <UART_Start_Receive_DMA+0x60>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b24c:	f103 020c 	add.w	r2, r3, #12
 800b250:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800b254:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b258:	f103 000c 	add.w	r0, r3, #12
 800b25c:	e840 2100 	strex	r1, r2, [r0]
 800b260:	2900      	cmp	r1, #0
 800b262:	d1f3      	bne.n	800b24c <UART_Start_Receive_DMA+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b264:	f103 0214 	add.w	r2, r3, #20
 800b268:	e852 2f00 	ldrex	r2, [r2]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800b26c:	f042 0201 	orr.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b270:	f103 0014 	add.w	r0, r3, #20
 800b274:	e840 2100 	strex	r1, r2, [r0]
 800b278:	2900      	cmp	r1, #0
 800b27a:	d1f3      	bne.n	800b264 <UART_Start_Receive_DMA+0x60>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800b27c:	f103 0214 	add.w	r2, r3, #20
 800b280:	e852 2f00 	ldrex	r2, [r2]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800b284:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800b288:	f103 0114 	add.w	r1, r3, #20
 800b28c:	e841 2000 	strex	r0, r2, [r1]
 800b290:	2800      	cmp	r0, #0
 800b292:	d1f3      	bne.n	800b27c <UART_Start_Receive_DMA+0x78>
}
 800b294:	b003      	add	sp, #12
 800b296:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b298:	0800b155 	.word	0x0800b155
 800b29c:	0800b171 	.word	0x0800b171
 800b2a0:	0800b0e9 	.word	0x0800b0e9

0800b2a4 <HAL_UART_Receive_DMA>:
{
 800b2a4:	b470      	push	{r4, r5, r6}
  if (huart->RxState == HAL_UART_STATE_READY)
 800b2a6:	f890 603e 	ldrb.w	r6, [r0, #62]	; 0x3e
 800b2aa:	2e20      	cmp	r6, #32
 800b2ac:	d110      	bne.n	800b2d0 <HAL_UART_Receive_DMA+0x2c>
    if ((pData == NULL) || (Size == 0U))
 800b2ae:	b161      	cbz	r1, 800b2ca <HAL_UART_Receive_DMA+0x26>
 800b2b0:	b15a      	cbz	r2, 800b2ca <HAL_UART_Receive_DMA+0x26>
    __HAL_LOCK(huart);
 800b2b2:	f890 403c 	ldrb.w	r4, [r0, #60]	; 0x3c
 800b2b6:	2c01      	cmp	r4, #1
 800b2b8:	d00a      	beq.n	800b2d0 <HAL_UART_Receive_DMA+0x2c>
 800b2ba:	2501      	movs	r5, #1
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800b2bc:	2400      	movs	r4, #0
    __HAL_LOCK(huart);
 800b2be:	f880 503c 	strb.w	r5, [r0, #60]	; 0x3c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800b2c2:	6304      	str	r4, [r0, #48]	; 0x30
}
 800b2c4:	bc70      	pop	{r4, r5, r6}
    return (UART_Start_Receive_DMA(huart, pData, Size));
 800b2c6:	f7ff bf9d 	b.w	800b204 <UART_Start_Receive_DMA>
      return HAL_ERROR;
 800b2ca:	2001      	movs	r0, #1
}
 800b2cc:	bc70      	pop	{r4, r5, r6}
 800b2ce:	4770      	bx	lr
    return HAL_BUSY;
 800b2d0:	2002      	movs	r0, #2
}
 800b2d2:	bc70      	pop	{r4, r5, r6}
 800b2d4:	4770      	bx	lr
 800b2d6:	bf00      	nop

0800b2d8 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 800b2d8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800b2da:	2300      	movs	r3, #0
  /* Wait for AHB master IDLE state. */
  do
  {
    count++;

    if (count > 200000U)
 800b2dc:	4a12      	ldr	r2, [pc, #72]	; (800b328 <USB_CoreReset+0x50>)
  __IO uint32_t count = 0U;
 800b2de:	9301      	str	r3, [sp, #4]
 800b2e0:	e002      	b.n	800b2e8 <USB_CoreReset+0x10>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b2e2:	6903      	ldr	r3, [r0, #16]
 800b2e4:	2b00      	cmp	r3, #0
 800b2e6:	db08      	blt.n	800b2fa <USB_CoreReset+0x22>
    count++;
 800b2e8:	9b01      	ldr	r3, [sp, #4]
 800b2ea:	3301      	adds	r3, #1
 800b2ec:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b2ee:	9b01      	ldr	r3, [sp, #4]
 800b2f0:	4293      	cmp	r3, r2
 800b2f2:	d9f6      	bls.n	800b2e2 <USB_CoreReset+0xa>
      return HAL_TIMEOUT;
 800b2f4:	2003      	movs	r0, #3
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);

  return HAL_OK;
}
 800b2f6:	b002      	add	sp, #8
 800b2f8:	4770      	bx	lr
  count = 0U;
 800b2fa:	2300      	movs	r3, #0
 800b2fc:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 800b2fe:	6903      	ldr	r3, [r0, #16]
    if (count > 200000U)
 800b300:	4a09      	ldr	r2, [pc, #36]	; (800b328 <USB_CoreReset+0x50>)
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 800b302:	f043 0301 	orr.w	r3, r3, #1
 800b306:	6103      	str	r3, [r0, #16]
 800b308:	e003      	b.n	800b312 <USB_CoreReset+0x3a>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 800b30a:	6903      	ldr	r3, [r0, #16]
 800b30c:	f013 0301 	ands.w	r3, r3, #1
 800b310:	d006      	beq.n	800b320 <USB_CoreReset+0x48>
    count++;
 800b312:	9b01      	ldr	r3, [sp, #4]
 800b314:	3301      	adds	r3, #1
 800b316:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b318:	9b01      	ldr	r3, [sp, #4]
 800b31a:	4293      	cmp	r3, r2
 800b31c:	d9f5      	bls.n	800b30a <USB_CoreReset+0x32>
 800b31e:	e7e9      	b.n	800b2f4 <USB_CoreReset+0x1c>
  return HAL_OK;
 800b320:	4618      	mov	r0, r3
}
 800b322:	b002      	add	sp, #8
 800b324:	4770      	bx	lr
 800b326:	bf00      	nop
 800b328:	00030d40 	.word	0x00030d40

0800b32c <USB_CoreInit>:
{
 800b32c:	b084      	sub	sp, #16
 800b32e:	b570      	push	{r4, r5, r6, lr}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800b330:	9e0a      	ldr	r6, [sp, #40]	; 0x28
{
 800b332:	ad05      	add	r5, sp, #20
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800b334:	2e01      	cmp	r6, #1
{
 800b336:	e885 000e 	stmia.w	r5, {r1, r2, r3}
 800b33a:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800b33c:	d122      	bne.n	800b384 <USB_CoreInit+0x58>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800b33e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    if (cfg.use_external_vbus == 1U)
 800b340:	9a11      	ldr	r2, [sp, #68]	; 0x44
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800b342:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b346:	6383      	str	r3, [r0, #56]	; 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 800b348:	68c3      	ldr	r3, [r0, #12]
 800b34a:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 800b34e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b352:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 800b354:	68c3      	ldr	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 800b356:	2a01      	cmp	r2, #1
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 800b358:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800b35c:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 800b35e:	d023      	beq.n	800b3a8 <USB_CoreInit+0x7c>
    ret = USB_CoreReset(USBx);
 800b360:	4620      	mov	r0, r4
 800b362:	f7ff ffb9 	bl	800b2d8 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 800b366:	9b08      	ldr	r3, [sp, #32]
 800b368:	2b01      	cmp	r3, #1
 800b36a:	d107      	bne.n	800b37c <USB_CoreInit+0x50>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 800b36c:	68a3      	ldr	r3, [r4, #8]
 800b36e:	f043 0306 	orr.w	r3, r3, #6
 800b372:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 800b374:	68a3      	ldr	r3, [r4, #8]
 800b376:	f043 0320 	orr.w	r3, r3, #32
 800b37a:	60a3      	str	r3, [r4, #8]
}
 800b37c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b380:	b004      	add	sp, #16
 800b382:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 800b384:	68c3      	ldr	r3, [r0, #12]
 800b386:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b38a:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 800b38c:	f7ff ffa4 	bl	800b2d8 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 800b390:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b392:	b923      	cbnz	r3, 800b39e <USB_CoreInit+0x72>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 800b394:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b396:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b39a:	63a3      	str	r3, [r4, #56]	; 0x38
 800b39c:	e7e3      	b.n	800b366 <USB_CoreInit+0x3a>
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800b39e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b3a0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b3a4:	63a3      	str	r3, [r4, #56]	; 0x38
 800b3a6:	e7de      	b.n	800b366 <USB_CoreInit+0x3a>
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 800b3a8:	68c3      	ldr	r3, [r0, #12]
 800b3aa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800b3ae:	60c3      	str	r3, [r0, #12]
 800b3b0:	e7d6      	b.n	800b360 <USB_CoreInit+0x34>
 800b3b2:	bf00      	nop

0800b3b4 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 800b3b4:	2a02      	cmp	r2, #2
 800b3b6:	d00a      	beq.n	800b3ce <USB_SetTurnaroundTime+0x1a>
 800b3b8:	f44f 5110 	mov.w	r1, #9216	; 0x2400
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 800b3bc:	68c2      	ldr	r2, [r0, #12]
 800b3be:	f422 5270 	bic.w	r2, r2, #15360	; 0x3c00
 800b3c2:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 800b3c4:	68c3      	ldr	r3, [r0, #12]
 800b3c6:	430b      	orrs	r3, r1
 800b3c8:	60c3      	str	r3, [r0, #12]
}
 800b3ca:	2000      	movs	r0, #0
 800b3cc:	4770      	bx	lr
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 800b3ce:	4b26      	ldr	r3, [pc, #152]	; (800b468 <USB_SetTurnaroundTime+0xb4>)
 800b3d0:	4a26      	ldr	r2, [pc, #152]	; (800b46c <USB_SetTurnaroundTime+0xb8>)
 800b3d2:	440b      	add	r3, r1
 800b3d4:	4293      	cmp	r3, r2
 800b3d6:	d932      	bls.n	800b43e <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 800b3d8:	4b25      	ldr	r3, [pc, #148]	; (800b470 <USB_SetTurnaroundTime+0xbc>)
 800b3da:	4a26      	ldr	r2, [pc, #152]	; (800b474 <USB_SetTurnaroundTime+0xc0>)
 800b3dc:	440b      	add	r3, r1
 800b3de:	4293      	cmp	r3, r2
 800b3e0:	d930      	bls.n	800b444 <USB_SetTurnaroundTime+0x90>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 800b3e2:	4a25      	ldr	r2, [pc, #148]	; (800b478 <USB_SetTurnaroundTime+0xc4>)
 800b3e4:	f5a1 0374 	sub.w	r3, r1, #15990784	; 0xf40000
 800b3e8:	f5a3 5310 	sub.w	r3, r3, #9216	; 0x2400
 800b3ec:	4293      	cmp	r3, r2
 800b3ee:	d92c      	bls.n	800b44a <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 800b3f0:	4a22      	ldr	r2, [pc, #136]	; (800b47c <USB_SetTurnaroundTime+0xc8>)
 800b3f2:	f1a1 7383 	sub.w	r3, r1, #17170432	; 0x1060000
 800b3f6:	f5a3 43e7 	sub.w	r3, r3, #29568	; 0x7380
 800b3fa:	4293      	cmp	r3, r2
 800b3fc:	d328      	bcc.n	800b450 <USB_SetTurnaroundTime+0x9c>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 800b3fe:	4b20      	ldr	r3, [pc, #128]	; (800b480 <USB_SetTurnaroundTime+0xcc>)
 800b400:	4a20      	ldr	r2, [pc, #128]	; (800b484 <USB_SetTurnaroundTime+0xd0>)
 800b402:	440b      	add	r3, r1
 800b404:	4293      	cmp	r3, r2
 800b406:	d926      	bls.n	800b456 <USB_SetTurnaroundTime+0xa2>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 800b408:	4b1f      	ldr	r3, [pc, #124]	; (800b488 <USB_SetTurnaroundTime+0xd4>)
 800b40a:	4a20      	ldr	r2, [pc, #128]	; (800b48c <USB_SetTurnaroundTime+0xd8>)
 800b40c:	440b      	add	r3, r1
 800b40e:	4293      	cmp	r3, r2
 800b410:	d324      	bcc.n	800b45c <USB_SetTurnaroundTime+0xa8>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 800b412:	4b1f      	ldr	r3, [pc, #124]	; (800b490 <USB_SetTurnaroundTime+0xdc>)
 800b414:	4a1f      	ldr	r2, [pc, #124]	; (800b494 <USB_SetTurnaroundTime+0xe0>)
 800b416:	440b      	add	r3, r1
 800b418:	4293      	cmp	r3, r2
 800b41a:	d3cd      	bcc.n	800b3b8 <USB_SetTurnaroundTime+0x4>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 800b41c:	4a1e      	ldr	r2, [pc, #120]	; (800b498 <USB_SetTurnaroundTime+0xe4>)
 800b41e:	f1a1 73b7 	sub.w	r3, r1, #23986176	; 0x16e0000
 800b422:	f5a3 5358 	sub.w	r3, r3, #13824	; 0x3600
 800b426:	4293      	cmp	r3, r2
 800b428:	d31b      	bcc.n	800b462 <USB_SetTurnaroundTime+0xae>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 800b42a:	4b1c      	ldr	r3, [pc, #112]	; (800b49c <USB_SetTurnaroundTime+0xe8>)
 800b42c:	4a1c      	ldr	r2, [pc, #112]	; (800b4a0 <USB_SetTurnaroundTime+0xec>)
 800b42e:	440b      	add	r3, r1
 800b430:	4293      	cmp	r3, r2
 800b432:	bf34      	ite	cc
 800b434:	f44f 51e0 	movcc.w	r1, #7168	; 0x1c00
 800b438:	f44f 51c0 	movcs.w	r1, #6144	; 0x1800
 800b43c:	e7be      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b43e:	f44f 5170 	mov.w	r1, #15360	; 0x3c00
 800b442:	e7bb      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b444:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 800b448:	e7b8      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b44a:	f44f 5150 	mov.w	r1, #13312	; 0x3400
 800b44e:	e7b5      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b450:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800b454:	e7b2      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b456:	f44f 5130 	mov.w	r1, #11264	; 0x2c00
 800b45a:	e7af      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b45c:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 800b460:	e7ac      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b462:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800b466:	e7a9      	b.n	800b3bc <USB_SetTurnaroundTime+0x8>
 800b468:	ff275340 	.word	0xff275340
 800b46c:	000c34ff 	.word	0x000c34ff
 800b470:	ff1b1e40 	.word	0xff1b1e40
 800b474:	000f423f 	.word	0x000f423f
 800b478:	00124f7f 	.word	0x00124f7f
 800b47c:	0013d620 	.word	0x0013d620
 800b480:	fee5b660 	.word	0xfee5b660
 800b484:	0016e35f 	.word	0x0016e35f
 800b488:	feced300 	.word	0xfeced300
 800b48c:	001b7740 	.word	0x001b7740
 800b490:	feb35bc0 	.word	0xfeb35bc0
 800b494:	002191c0 	.word	0x002191c0
 800b498:	00387520 	.word	0x00387520
 800b49c:	fe5954e0 	.word	0xfe5954e0
 800b4a0:	00419ce0 	.word	0x00419ce0

0800b4a4 <USB_EnableGlobalInt>:
{
 800b4a4:	4603      	mov	r3, r0
}
 800b4a6:	2000      	movs	r0, #0
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 800b4a8:	689a      	ldr	r2, [r3, #8]
 800b4aa:	f042 0201 	orr.w	r2, r2, #1
 800b4ae:	609a      	str	r2, [r3, #8]
}
 800b4b0:	4770      	bx	lr
 800b4b2:	bf00      	nop

0800b4b4 <USB_DisableGlobalInt>:
{
 800b4b4:	4603      	mov	r3, r0
}
 800b4b6:	2000      	movs	r0, #0
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 800b4b8:	689a      	ldr	r2, [r3, #8]
 800b4ba:	f022 0201 	bic.w	r2, r2, #1
 800b4be:	609a      	str	r2, [r3, #8]
}
 800b4c0:	4770      	bx	lr
 800b4c2:	bf00      	nop

0800b4c4 <USB_SetCurrentMode>:
{
 800b4c4:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800b4c6:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 800b4c8:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800b4ca:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
{
 800b4ce:	4605      	mov	r5, r0
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800b4d0:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 800b4d2:	d018      	beq.n	800b506 <USB_SetCurrentMode+0x42>
  else if (mode == USB_DEVICE_MODE)
 800b4d4:	b9a9      	cbnz	r1, 800b502 <USB_SetCurrentMode+0x3e>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 800b4d6:	68c3      	ldr	r3, [r0, #12]
 800b4d8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
  uint32_t ms = 0U;
 800b4dc:	460c      	mov	r4, r1
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 800b4de:	60c3      	str	r3, [r0, #12]
 800b4e0:	e001      	b.n	800b4e6 <USB_SetCurrentMode+0x22>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 800b4e2:	2c32      	cmp	r4, #50	; 0x32
 800b4e4:	d00d      	beq.n	800b502 <USB_SetCurrentMode+0x3e>
      HAL_Delay(1U);
 800b4e6:	2001      	movs	r0, #1
 800b4e8:	f7fd f938 	bl	800875c <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 800b4ec:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 800b4ee:	07db      	lsls	r3, r3, #31
      ms++;
 800b4f0:	f104 0401 	add.w	r4, r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 800b4f4:	d4f5      	bmi.n	800b4e2 <USB_SetCurrentMode+0x1e>
    return HAL_ERROR;
 800b4f6:	f1a4 0032 	sub.w	r0, r4, #50	; 0x32
 800b4fa:	fab0 f080 	clz	r0, r0
 800b4fe:	0940      	lsrs	r0, r0, #5
}
 800b500:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b502:	2001      	movs	r0, #1
}
 800b504:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 800b506:	68c3      	ldr	r3, [r0, #12]
 800b508:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800b50c:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 800b50e:	2400      	movs	r4, #0
 800b510:	e001      	b.n	800b516 <USB_SetCurrentMode+0x52>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 800b512:	2c32      	cmp	r4, #50	; 0x32
 800b514:	d0f5      	beq.n	800b502 <USB_SetCurrentMode+0x3e>
      HAL_Delay(1U);
 800b516:	2001      	movs	r0, #1
 800b518:	f7fd f920 	bl	800875c <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 800b51c:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 800b51e:	07da      	lsls	r2, r3, #31
      ms++;
 800b520:	f104 0401 	add.w	r4, r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 800b524:	d5f5      	bpl.n	800b512 <USB_SetCurrentMode+0x4e>
    return HAL_ERROR;
 800b526:	f1a4 0032 	sub.w	r0, r4, #50	; 0x32
 800b52a:	fab0 f080 	clz	r0, r0
 800b52e:	0940      	lsrs	r0, r0, #5
 800b530:	e7e6      	b.n	800b500 <USB_SetCurrentMode+0x3c>
 800b532:	bf00      	nop

0800b534 <USB_FlushTxFifo>:
{
 800b534:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800b536:	2300      	movs	r3, #0
    if (count > 200000U)
 800b538:	4a12      	ldr	r2, [pc, #72]	; (800b584 <USB_FlushTxFifo+0x50>)
  __IO uint32_t count = 0U;
 800b53a:	9301      	str	r3, [sp, #4]
 800b53c:	e002      	b.n	800b544 <USB_FlushTxFifo+0x10>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b53e:	6903      	ldr	r3, [r0, #16]
 800b540:	2b00      	cmp	r3, #0
 800b542:	db08      	blt.n	800b556 <USB_FlushTxFifo+0x22>
    count++;
 800b544:	9b01      	ldr	r3, [sp, #4]
 800b546:	3301      	adds	r3, #1
 800b548:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b54a:	9b01      	ldr	r3, [sp, #4]
 800b54c:	4293      	cmp	r3, r2
 800b54e:	d9f6      	bls.n	800b53e <USB_FlushTxFifo+0xa>
      return HAL_TIMEOUT;
 800b550:	2003      	movs	r0, #3
}
 800b552:	b002      	add	sp, #8
 800b554:	4770      	bx	lr
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 800b556:	0189      	lsls	r1, r1, #6
 800b558:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 800b55c:	2300      	movs	r3, #0
 800b55e:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b560:	4a08      	ldr	r2, [pc, #32]	; (800b584 <USB_FlushTxFifo+0x50>)
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 800b562:	6101      	str	r1, [r0, #16]
 800b564:	e003      	b.n	800b56e <USB_FlushTxFifo+0x3a>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 800b566:	6903      	ldr	r3, [r0, #16]
 800b568:	f013 0320 	ands.w	r3, r3, #32
 800b56c:	d006      	beq.n	800b57c <USB_FlushTxFifo+0x48>
    count++;
 800b56e:	9b01      	ldr	r3, [sp, #4]
 800b570:	3301      	adds	r3, #1
 800b572:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b574:	9b01      	ldr	r3, [sp, #4]
 800b576:	4293      	cmp	r3, r2
 800b578:	d9f5      	bls.n	800b566 <USB_FlushTxFifo+0x32>
 800b57a:	e7e9      	b.n	800b550 <USB_FlushTxFifo+0x1c>
  return HAL_OK;
 800b57c:	4618      	mov	r0, r3
}
 800b57e:	b002      	add	sp, #8
 800b580:	4770      	bx	lr
 800b582:	bf00      	nop
 800b584:	00030d40 	.word	0x00030d40

0800b588 <USB_FlushRxFifo>:
{
 800b588:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800b58a:	2300      	movs	r3, #0
    if (count > 200000U)
 800b58c:	4a11      	ldr	r2, [pc, #68]	; (800b5d4 <USB_FlushRxFifo+0x4c>)
  __IO uint32_t count = 0U;
 800b58e:	9301      	str	r3, [sp, #4]
 800b590:	e002      	b.n	800b598 <USB_FlushRxFifo+0x10>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b592:	6903      	ldr	r3, [r0, #16]
 800b594:	2b00      	cmp	r3, #0
 800b596:	db08      	blt.n	800b5aa <USB_FlushRxFifo+0x22>
    count++;
 800b598:	9b01      	ldr	r3, [sp, #4]
 800b59a:	3301      	adds	r3, #1
 800b59c:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b59e:	9b01      	ldr	r3, [sp, #4]
 800b5a0:	4293      	cmp	r3, r2
 800b5a2:	d9f6      	bls.n	800b592 <USB_FlushRxFifo+0xa>
      return HAL_TIMEOUT;
 800b5a4:	2003      	movs	r0, #3
}
 800b5a6:	b002      	add	sp, #8
 800b5a8:	4770      	bx	lr
  count = 0U;
 800b5aa:	2100      	movs	r1, #0
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800b5ac:	2310      	movs	r3, #16
  count = 0U;
 800b5ae:	9101      	str	r1, [sp, #4]
    if (count > 200000U)
 800b5b0:	4a08      	ldr	r2, [pc, #32]	; (800b5d4 <USB_FlushRxFifo+0x4c>)
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800b5b2:	6103      	str	r3, [r0, #16]
 800b5b4:	e003      	b.n	800b5be <USB_FlushRxFifo+0x36>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 800b5b6:	6903      	ldr	r3, [r0, #16]
 800b5b8:	f013 0310 	ands.w	r3, r3, #16
 800b5bc:	d006      	beq.n	800b5cc <USB_FlushRxFifo+0x44>
    count++;
 800b5be:	9b01      	ldr	r3, [sp, #4]
 800b5c0:	3301      	adds	r3, #1
 800b5c2:	9301      	str	r3, [sp, #4]
    if (count > 200000U)
 800b5c4:	9b01      	ldr	r3, [sp, #4]
 800b5c6:	4293      	cmp	r3, r2
 800b5c8:	d9f5      	bls.n	800b5b6 <USB_FlushRxFifo+0x2e>
 800b5ca:	e7eb      	b.n	800b5a4 <USB_FlushRxFifo+0x1c>
  return HAL_OK;
 800b5cc:	4618      	mov	r0, r3
}
 800b5ce:	b002      	add	sp, #8
 800b5d0:	4770      	bx	lr
 800b5d2:	bf00      	nop
 800b5d4:	00030d40 	.word	0x00030d40

0800b5d8 <USB_DevInit>:
{
 800b5d8:	b084      	sub	sp, #16
 800b5da:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b5de:	ac09      	add	r4, sp, #36	; 0x24
 800b5e0:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 800b5e4:	2300      	movs	r3, #0
 800b5e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b5e8:	460d      	mov	r5, r1
{
 800b5ea:	4604      	mov	r4, r0
    USBx->DIEPTXF[i] = 0U;
 800b5ec:	4619      	mov	r1, r3
 800b5ee:	f103 0240 	add.w	r2, r3, #64	; 0x40
 800b5f2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 800b5f6:	3301      	adds	r3, #1
 800b5f8:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 800b5fa:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 800b5fc:	d1f7      	bne.n	800b5ee <USB_DevInit+0x16>
  if (cfg.vbus_sensing_enable == 0U)
 800b5fe:	2e00      	cmp	r6, #0
 800b600:	f040 8098 	bne.w	800b734 <USB_DevInit+0x15c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800b604:	f8d4 3804 	ldr.w	r3, [r4, #2052]	; 0x804
 800b608:	f043 0302 	orr.w	r3, r3, #2
 800b60c:	f8c4 3804 	str.w	r3, [r4, #2052]	; 0x804
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 800b610:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b612:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800b616:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 800b618:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b61a:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800b61e:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 800b620:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b622:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800b626:	f504 6700 	add.w	r7, r4, #2048	; 0x800
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 800b62a:	63a3      	str	r3, [r4, #56]	; 0x38
  USBx_PCGCCTL = 0U;
 800b62c:	2300      	movs	r3, #0
 800b62e:	f8c4 3e00 	str.w	r3, [r4, #3584]	; 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800b632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  USBx_DEVICE->DCFG |= DCFG_FRAME_INTERVAL_80;
 800b634:	683a      	ldr	r2, [r7, #0]
 800b636:	603a      	str	r2, [r7, #0]
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800b638:	2b01      	cmp	r3, #1
 800b63a:	f000 8086 	beq.w	800b74a <USB_DevInit+0x172>
  USBx_DEVICE->DCFG |= speed;
 800b63e:	683b      	ldr	r3, [r7, #0]
 800b640:	f043 0303 	orr.w	r3, r3, #3
 800b644:	603b      	str	r3, [r7, #0]
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 800b646:	2110      	movs	r1, #16
 800b648:	4620      	mov	r0, r4
 800b64a:	f7ff ff73 	bl	800b534 <USB_FlushTxFifo>
 800b64e:	4680      	mov	r8, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800b650:	4620      	mov	r0, r4
 800b652:	f7ff ff99 	bl	800b588 <USB_FlushRxFifo>
 800b656:	ea48 0000 	orr.w	r0, r8, r0
  USBx_DEVICE->DIEPMSK = 0U;
 800b65a:	2200      	movs	r2, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800b65c:	b2c0      	uxtb	r0, r0
    ret = HAL_ERROR;
 800b65e:	1a80      	subs	r0, r0, r2
  USBx_DEVICE->DIEPMSK = 0U;
 800b660:	613a      	str	r2, [r7, #16]
    ret = HAL_ERROR;
 800b662:	bf18      	it	ne
 800b664:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 800b666:	617a      	str	r2, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 800b668:	61fa      	str	r2, [r7, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b66a:	b1f5      	cbz	r5, 800b6aa <USB_DevInit+0xd2>
      USBx_INEP(i)->DIEPCTL = 0U;
 800b66c:	4694      	mov	ip, r2
 800b66e:	f504 6310 	add.w	r3, r4, #2304	; 0x900
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800b672:	f04f 4890 	mov.w	r8, #1207959552	; 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800b676:	f04f 6900 	mov.w	r9, #134217728	; 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800b67a:	f64f 3e7f 	movw	lr, #64383	; 0xfb7f
 800b67e:	e00a      	b.n	800b696 <USB_DevInit+0xbe>
      USBx_INEP(i)->DIEPCTL = 0U;
 800b680:	f8c3 c000 	str.w	ip, [r3]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b684:	3201      	adds	r2, #1
 800b686:	42aa      	cmp	r2, r5
    USBx_INEP(i)->DIEPTSIZ = 0U;
 800b688:	f8c3 c010 	str.w	ip, [r3, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800b68c:	f8c3 e008 	str.w	lr, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b690:	f103 0320 	add.w	r3, r3, #32
 800b694:	d02e      	beq.n	800b6f4 <USB_DevInit+0x11c>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800b696:	6819      	ldr	r1, [r3, #0]
 800b698:	2900      	cmp	r1, #0
 800b69a:	daf1      	bge.n	800b680 <USB_DevInit+0xa8>
      if (i == 0U)
 800b69c:	b112      	cbz	r2, 800b6a4 <USB_DevInit+0xcc>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800b69e:	f8c3 8000 	str.w	r8, [r3]
 800b6a2:	e7ef      	b.n	800b684 <USB_DevInit+0xac>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800b6a4:	f8c3 9000 	str.w	r9, [r3]
 800b6a8:	e7ec      	b.n	800b684 <USB_DevInit+0xac>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800b6aa:	693b      	ldr	r3, [r7, #16]
  if (cfg.dma_enable == 0U)
 800b6ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800b6ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b6b2:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 800b6b4:	2100      	movs	r1, #0
  USBx->GINTSTS = 0xBFFFFFFFU;
 800b6b6:	f06f 4380 	mvn.w	r3, #1073741824	; 0x40000000
  USBx->GINTMSK = 0U;
 800b6ba:	61a1      	str	r1, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 800b6bc:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 800b6be:	b91a      	cbnz	r2, 800b6c8 <USB_DevInit+0xf0>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 800b6c0:	69a3      	ldr	r3, [r4, #24]
 800b6c2:	f043 0310 	orr.w	r3, r3, #16
 800b6c6:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800b6c8:	69a1      	ldr	r1, [r4, #24]
 800b6ca:	4b25      	ldr	r3, [pc, #148]	; (800b760 <USB_DevInit+0x188>)
  if (cfg.Sof_enable != 0U)
 800b6cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800b6ce:	430b      	orrs	r3, r1
 800b6d0:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 800b6d2:	b11a      	cbz	r2, 800b6dc <USB_DevInit+0x104>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 800b6d4:	69a3      	ldr	r3, [r4, #24]
 800b6d6:	f043 0308 	orr.w	r3, r3, #8
 800b6da:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 800b6dc:	2e01      	cmp	r6, #1
 800b6de:	d105      	bne.n	800b6ec <USB_DevInit+0x114>
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 800b6e0:	69a3      	ldr	r3, [r4, #24]
 800b6e2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800b6e6:	f043 0304 	orr.w	r3, r3, #4
 800b6ea:	61a3      	str	r3, [r4, #24]
}
 800b6ec:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b6f0:	b004      	add	sp, #16
 800b6f2:	4770      	bx	lr
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b6f4:	2200      	movs	r2, #0
      USBx_OUTEP(i)->DOEPCTL = 0U;
 800b6f6:	4694      	mov	ip, r2
 800b6f8:	f504 6330 	add.w	r3, r4, #2816	; 0xb00
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800b6fc:	f04f 4890 	mov.w	r8, #1207959552	; 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800b700:	f04f 6900 	mov.w	r9, #134217728	; 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800b704:	f64f 3e7f 	movw	lr, #64383	; 0xfb7f
 800b708:	e00a      	b.n	800b720 <USB_DevInit+0x148>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 800b70a:	f8c3 c000 	str.w	ip, [r3]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b70e:	3201      	adds	r2, #1
 800b710:	42aa      	cmp	r2, r5
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 800b712:	f8c3 c010 	str.w	ip, [r3, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800b716:	f8c3 e008 	str.w	lr, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b71a:	f103 0320 	add.w	r3, r3, #32
 800b71e:	d0c4      	beq.n	800b6aa <USB_DevInit+0xd2>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800b720:	6819      	ldr	r1, [r3, #0]
 800b722:	2900      	cmp	r1, #0
 800b724:	daf1      	bge.n	800b70a <USB_DevInit+0x132>
      if (i == 0U)
 800b726:	b112      	cbz	r2, 800b72e <USB_DevInit+0x156>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800b728:	f8c3 8000 	str.w	r8, [r3]
 800b72c:	e7ef      	b.n	800b70e <USB_DevInit+0x136>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800b72e:	f8c3 9000 	str.w	r9, [r3]
 800b732:	e7ec      	b.n	800b70e <USB_DevInit+0x136>
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 800b734:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b736:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b73a:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 800b73c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b73e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800b742:	63a3      	str	r3, [r4, #56]	; 0x38
 800b744:	f504 6700 	add.w	r7, r4, #2048	; 0x800
 800b748:	e770      	b.n	800b62c <USB_DevInit+0x54>
    if (cfg.speed == USBD_HS_SPEED)
 800b74a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b74c:	b913      	cbnz	r3, 800b754 <USB_DevInit+0x17c>
  USBx_DEVICE->DCFG |= speed;
 800b74e:	683b      	ldr	r3, [r7, #0]
 800b750:	603b      	str	r3, [r7, #0]
  return HAL_OK;
 800b752:	e778      	b.n	800b646 <USB_DevInit+0x6e>
  USBx_DEVICE->DCFG |= speed;
 800b754:	683b      	ldr	r3, [r7, #0]
 800b756:	f043 0301 	orr.w	r3, r3, #1
 800b75a:	603b      	str	r3, [r7, #0]
  return HAL_OK;
 800b75c:	e773      	b.n	800b646 <USB_DevInit+0x6e>
 800b75e:	bf00      	nop
 800b760:	803c3800 	.word	0x803c3800

0800b764 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 800b764:	f8d0 3808 	ldr.w	r3, [r0, #2056]	; 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 800b768:	f013 0006 	ands.w	r0, r3, #6
 800b76c:	d004      	beq.n	800b778 <USB_GetDevSpeed+0x14>
  else if ((DevEnumSpeed == DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ) ||
 800b76e:	f013 0f02 	tst.w	r3, #2
    speed = 0xFU;
 800b772:	bf14      	ite	ne
 800b774:	2002      	movne	r0, #2
 800b776:	200f      	moveq	r0, #15
}
 800b778:	4770      	bx	lr
 800b77a:	bf00      	nop

0800b77c <USB_ActivateEndpoint>:
{
 800b77c:	b470      	push	{r4, r5, r6}
  if (ep->is_in == 1U)
 800b77e:	784b      	ldrb	r3, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800b780:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 800b782:	2b01      	cmp	r3, #1
 800b784:	d022      	beq.n	800b7cc <USB_ActivateEndpoint+0x50>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 800b786:	f002 050f 	and.w	r5, r2, #15
 800b78a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800b78e:	40ab      	lsls	r3, r5
 800b790:	f8d0 581c 	ldr.w	r5, [r0, #2076]	; 0x81c
 800b794:	f500 6400 	add.w	r4, r0, #2048	; 0x800
 800b798:	432b      	orrs	r3, r5
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 800b79a:	eb00 1042 	add.w	r0, r0, r2, lsl #5
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 800b79e:	61e3      	str	r3, [r4, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 800b7a0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800b7a4:	041b      	lsls	r3, r3, #16
 800b7a6:	d40e      	bmi.n	800b7c6 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800b7a8:	68cb      	ldr	r3, [r1, #12]
 800b7aa:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	; 0xb00
                                    ((uint32_t)ep->type << 18) |
 800b7ae:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800b7b0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b7b4:	4323      	orrs	r3, r4
 800b7b6:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800b7ba:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b7be:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b7c2:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 800b7c6:	2000      	movs	r0, #0
 800b7c8:	bc70      	pop	{r4, r5, r6}
 800b7ca:	4770      	bx	lr
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 800b7cc:	f8d0 681c 	ldr.w	r6, [r0, #2076]	; 0x81c
 800b7d0:	f002 040f 	and.w	r4, r2, #15
 800b7d4:	f500 6500 	add.w	r5, r0, #2048	; 0x800
 800b7d8:	40a3      	lsls	r3, r4
 800b7da:	4333      	orrs	r3, r6
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 800b7dc:	eb00 1042 	add.w	r0, r0, r2, lsl #5
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 800b7e0:	61eb      	str	r3, [r5, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 800b7e2:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800b7e6:	041c      	lsls	r4, r3, #16
 800b7e8:	d4ed      	bmi.n	800b7c6 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800b7ea:	68cb      	ldr	r3, [r1, #12]
 800b7ec:	f8d0 4900 	ldr.w	r4, [r0, #2304]	; 0x900
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 800b7f0:	7909      	ldrb	r1, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800b7f2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b7f6:	4323      	orrs	r3, r4
 800b7f8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
 800b7fc:	ea43 5282 	orr.w	r2, r3, r2, lsl #22
 800b800:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b804:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b808:	f8c0 2900 	str.w	r2, [r0, #2304]	; 0x900
}
 800b80c:	bc70      	pop	{r4, r5, r6}
 800b80e:	2000      	movs	r0, #0
 800b810:	4770      	bx	lr
 800b812:	bf00      	nop

0800b814 <USB_DeactivateEndpoint>:
{
 800b814:	b430      	push	{r4, r5}
  if (ep->is_in == 1U)
 800b816:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800b818:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800b81a:	2a01      	cmp	r2, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800b81c:	eb00 1543 	add.w	r5, r0, r3, lsl #5
  if (ep->is_in == 1U)
 800b820:	d02b      	beq.n	800b87a <USB_DeactivateEndpoint+0x66>
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800b822:	f8d5 2b00 	ldr.w	r2, [r5, #2816]	; 0xb00
 800b826:	2a00      	cmp	r2, #0
 800b828:	db1a      	blt.n	800b860 <USB_DeactivateEndpoint+0x4c>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 800b82a:	f8d0 483c 	ldr.w	r4, [r0, #2108]	; 0x83c
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 800b82e:	4928      	ldr	r1, [pc, #160]	; (800b8d0 <USB_DeactivateEndpoint+0xbc>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 800b830:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b834:	f003 030f 	and.w	r3, r3, #15
 800b838:	fa02 f303 	lsl.w	r3, r2, r3
 800b83c:	ea24 0403 	bic.w	r4, r4, r3
 800b840:	f8c0 483c 	str.w	r4, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 800b844:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 800b848:	ea22 0303 	bic.w	r3, r2, r3
 800b84c:	f8c0 381c 	str.w	r3, [r0, #2076]	; 0x81c
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 800b850:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	; 0xb00
 800b854:	4019      	ands	r1, r3
 800b856:	f8c5 1b00 	str.w	r1, [r5, #2816]	; 0xb00
}
 800b85a:	2000      	movs	r0, #0
 800b85c:	bc30      	pop	{r4, r5}
 800b85e:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 800b860:	f8d5 2b00 	ldr.w	r2, [r5, #2816]	; 0xb00
 800b864:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 800b868:	f8c5 2b00 	str.w	r2, [r5, #2816]	; 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 800b86c:	f8d5 2b00 	ldr.w	r2, [r5, #2816]	; 0xb00
 800b870:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800b874:	f8c5 2b00 	str.w	r2, [r5, #2816]	; 0xb00
 800b878:	e7d7      	b.n	800b82a <USB_DeactivateEndpoint+0x16>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800b87a:	f8d5 2900 	ldr.w	r2, [r5, #2304]	; 0x900
 800b87e:	2a00      	cmp	r2, #0
 800b880:	da0b      	bge.n	800b89a <USB_DeactivateEndpoint+0x86>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 800b882:	f8d5 2900 	ldr.w	r2, [r5, #2304]	; 0x900
 800b886:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 800b88a:	f8c5 2900 	str.w	r2, [r5, #2304]	; 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 800b88e:	f8d5 2900 	ldr.w	r2, [r5, #2304]	; 0x900
 800b892:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800b896:	f8c5 2900 	str.w	r2, [r5, #2304]	; 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800b89a:	f8d0 483c 	ldr.w	r4, [r0, #2108]	; 0x83c
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 800b89e:	490d      	ldr	r1, [pc, #52]	; (800b8d4 <USB_DeactivateEndpoint+0xc0>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800b8a0:	2201      	movs	r2, #1
 800b8a2:	f003 030f 	and.w	r3, r3, #15
 800b8a6:	fa02 f303 	lsl.w	r3, r2, r3
 800b8aa:	ea24 0403 	bic.w	r4, r4, r3
 800b8ae:	f8c0 483c 	str.w	r4, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800b8b2:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 800b8b6:	ea22 0303 	bic.w	r3, r2, r3
 800b8ba:	f8c0 381c 	str.w	r3, [r0, #2076]	; 0x81c
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 800b8be:	f8d5 3900 	ldr.w	r3, [r5, #2304]	; 0x900
 800b8c2:	4019      	ands	r1, r3
 800b8c4:	f8c5 1900 	str.w	r1, [r5, #2304]	; 0x900
}
 800b8c8:	2000      	movs	r0, #0
 800b8ca:	bc30      	pop	{r4, r5}
 800b8cc:	4770      	bx	lr
 800b8ce:	bf00      	nop
 800b8d0:	eff37800 	.word	0xeff37800
 800b8d4:	ec337800 	.word	0xec337800

0800b8d8 <USB_EPStartXfer>:
{
 800b8d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if (ep->is_in == 1U)
 800b8dc:	784d      	ldrb	r5, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800b8de:	780c      	ldrb	r4, [r1, #0]
  if (ep->is_in == 1U)
 800b8e0:	2d01      	cmp	r5, #1
 800b8e2:	d055      	beq.n	800b990 <USB_EPStartXfer+0xb8>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800b8e4:	eb00 1444 	add.w	r4, r0, r4, lsl #5
    if (ep->xfer_len == 0U)
 800b8e8:	698d      	ldr	r5, [r1, #24]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800b8ea:	f8d4 6b10 	ldr.w	r6, [r4, #2832]	; 0xb10
 800b8ee:	0cf6      	lsrs	r6, r6, #19
 800b8f0:	04f6      	lsls	r6, r6, #19
 800b8f2:	f8c4 6b10 	str.w	r6, [r4, #2832]	; 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800b8f6:	f8d4 6b10 	ldr.w	r6, [r4, #2832]	; 0xb10
 800b8fa:	f026 56ff 	bic.w	r6, r6, #534773760	; 0x1fe00000
 800b8fe:	f426 16c0 	bic.w	r6, r6, #1572864	; 0x180000
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800b902:	f504 6330 	add.w	r3, r4, #2816	; 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800b906:	611e      	str	r6, [r3, #16]
    if (ep->xfer_len == 0U)
 800b908:	b38d      	cbz	r5, 800b96e <USB_EPStartXfer+0x96>
      pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800b90a:	68ce      	ldr	r6, [r1, #12]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800b90c:	4f7d      	ldr	r7, [pc, #500]	; (800bb04 <USB_EPStartXfer+0x22c>)
 800b90e:	f8d3 c010 	ldr.w	ip, [r3, #16]
      pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800b912:	4435      	add	r5, r6
 800b914:	3d01      	subs	r5, #1
 800b916:	fbb5 f5f6 	udiv	r5, r5, r6
      ep->xfer_size = ep->maxpacket * pktcnt;
 800b91a:	fa1f fe85 	uxth.w	lr, r5
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800b91e:	ea07 45c5 	and.w	r5, r7, r5, lsl #19
      ep->xfer_size = ep->maxpacket * pktcnt;
 800b922:	fb06 f60e 	mul.w	r6, r6, lr
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800b926:	ea45 050c 	orr.w	r5, r5, ip
      ep->xfer_size = ep->maxpacket * pktcnt;
 800b92a:	61ce      	str	r6, [r1, #28]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800b92c:	611d      	str	r5, [r3, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800b92e:	691d      	ldr	r5, [r3, #16]
 800b930:	f3c6 0612 	ubfx	r6, r6, #0, #19
 800b934:	432e      	orrs	r6, r5
    if (dma == 1U)
 800b936:	2a01      	cmp	r2, #1
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800b938:	611e      	str	r6, [r3, #16]
    if (dma == 1U)
 800b93a:	d024      	beq.n	800b986 <USB_EPStartXfer+0xae>
    if (ep->type == EP_TYPE_ISOC)
 800b93c:	790b      	ldrb	r3, [r1, #4]
 800b93e:	2b01      	cmp	r3, #1
 800b940:	d10c      	bne.n	800b95c <USB_EPStartXfer+0x84>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800b942:	f8d0 3808 	ldr.w	r3, [r0, #2056]	; 0x808
 800b946:	f413 7f80 	tst.w	r3, #256	; 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 800b94a:	f8d4 3b00 	ldr.w	r3, [r4, #2816]	; 0xb00
 800b94e:	bf0c      	ite	eq
 800b950:	f043 5300 	orreq.w	r3, r3, #536870912	; 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 800b954:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800b958:	f8c4 3b00 	str.w	r3, [r4, #2816]	; 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 800b95c:	f8d4 3b00 	ldr.w	r3, [r4, #2816]	; 0xb00
 800b960:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800b964:	f8c4 3b00 	str.w	r3, [r4, #2816]	; 0xb00
}
 800b968:	2000      	movs	r0, #0
 800b96a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 800b96e:	68cd      	ldr	r5, [r1, #12]
 800b970:	691e      	ldr	r6, [r3, #16]
 800b972:	f3c5 0512 	ubfx	r5, r5, #0, #19
 800b976:	4335      	orrs	r5, r6
 800b978:	611d      	str	r5, [r3, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800b97a:	691d      	ldr	r5, [r3, #16]
    if (dma == 1U)
 800b97c:	2a01      	cmp	r2, #1
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800b97e:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 800b982:	611d      	str	r5, [r3, #16]
    if (dma == 1U)
 800b984:	d1da      	bne.n	800b93c <USB_EPStartXfer+0x64>
      if ((uint32_t)ep->xfer_buff != 0U)
 800b986:	690a      	ldr	r2, [r1, #16]
 800b988:	2a00      	cmp	r2, #0
 800b98a:	d0d7      	beq.n	800b93c <USB_EPStartXfer+0x64>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 800b98c:	615a      	str	r2, [r3, #20]
 800b98e:	e7d5      	b.n	800b93c <USB_EPStartXfer+0x64>
    if (ep->xfer_len == 0U)
 800b990:	698e      	ldr	r6, [r1, #24]
 800b992:	2e00      	cmp	r6, #0
 800b994:	d040      	beq.n	800ba18 <USB_EPStartXfer+0x140>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800b996:	eb00 1e44 	add.w	lr, r0, r4, lsl #5
                                     (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
 800b99a:	f8d1 900c 	ldr.w	r9, [r1, #12]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800b99e:	f8de c910 	ldr.w	ip, [lr, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 800b9a2:	4f58      	ldr	r7, [pc, #352]	; (800bb04 <USB_EPStartXfer+0x22c>)
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800b9a4:	ea4f 4cdc 	mov.w	ip, ip, lsr #19
 800b9a8:	ea4f 4ccc 	mov.w	ip, ip, lsl #19
 800b9ac:	f8ce c910 	str.w	ip, [lr, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800b9b0:	f8de 8910 	ldr.w	r8, [lr, #2320]	; 0x910
 800b9b4:	f028 58ff 	bic.w	r8, r8, #534773760	; 0x1fe00000
 800b9b8:	f428 18c0 	bic.w	r8, r8, #1572864	; 0x180000
 800b9bc:	f8ce 8910 	str.w	r8, [lr, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 800b9c0:	f8de 8910 	ldr.w	r8, [lr, #2320]	; 0x910
                                     (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
 800b9c4:	eb06 0c09 	add.w	ip, r6, r9
 800b9c8:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b9cc:	fbbc fcf9 	udiv	ip, ip, r9
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 800b9d0:	ea07 47cc 	and.w	r7, r7, ip, lsl #19
 800b9d4:	ea47 0708 	orr.w	r7, r7, r8
 800b9d8:	f8ce 7910 	str.w	r7, [lr, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800b9dc:	f8de c910 	ldr.w	ip, [lr, #2320]	; 0x910
 800b9e0:	f3c6 0712 	ubfx	r7, r6, #0, #19
 800b9e4:	ea47 070c 	orr.w	r7, r7, ip
 800b9e8:	f8ce 7910 	str.w	r7, [lr, #2320]	; 0x910
      if (ep->type == EP_TYPE_ISOC)
 800b9ec:	790f      	ldrb	r7, [r1, #4]
 800b9ee:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800b9f0:	f50e 6310 	add.w	r3, lr, #2304	; 0x900
      if (ep->type == EP_TYPE_ISOC)
 800b9f4:	d055      	beq.n	800baa2 <USB_EPStartXfer+0x1ca>
    if (dma == 1U)
 800b9f6:	2a01      	cmp	r2, #1
 800b9f8:	d06f      	beq.n	800bada <USB_EPStartXfer+0x202>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800b9fa:	f8de 3900 	ldr.w	r3, [lr, #2304]	; 0x900
 800b9fe:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800ba02:	f8ce 3900 	str.w	r3, [lr, #2304]	; 0x900
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 800ba06:	f8d0 3834 	ldr.w	r3, [r0, #2100]	; 0x834
 800ba0a:	f004 040f 	and.w	r4, r4, #15
 800ba0e:	40a5      	lsls	r5, r4
 800ba10:	431d      	orrs	r5, r3
 800ba12:	f8c0 5834 	str.w	r5, [r0, #2100]	; 0x834
  return HAL_OK;
 800ba16:	e7a7      	b.n	800b968 <USB_EPStartXfer+0x90>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800ba18:	eb00 1c44 	add.w	ip, r0, r4, lsl #5
    if (dma == 1U)
 800ba1c:	2a01      	cmp	r2, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800ba1e:	f8dc 5910 	ldr.w	r5, [ip, #2320]	; 0x910
 800ba22:	f025 55ff 	bic.w	r5, r5, #534773760	; 0x1fe00000
 800ba26:	f425 15c0 	bic.w	r5, r5, #1572864	; 0x180000
 800ba2a:	f8cc 5910 	str.w	r5, [ip, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800ba2e:	f8dc 5910 	ldr.w	r5, [ip, #2320]	; 0x910
 800ba32:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 800ba36:	f8cc 5910 	str.w	r5, [ip, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800ba3a:	f8dc 5910 	ldr.w	r5, [ip, #2320]	; 0x910
 800ba3e:	ea4f 45d5 	mov.w	r5, r5, lsr #19
 800ba42:	ea4f 45c5 	mov.w	r5, r5, lsl #19
 800ba46:	f8cc 5910 	str.w	r5, [ip, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800ba4a:	f50c 6310 	add.w	r3, ip, #2304	; 0x900
 800ba4e:	790f      	ldrb	r7, [r1, #4]
    if (dma == 1U)
 800ba50:	d038      	beq.n	800bac4 <USB_EPStartXfer+0x1ec>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800ba52:	f8dc 5900 	ldr.w	r5, [ip, #2304]	; 0x900
      if (ep->type != EP_TYPE_ISOC)
 800ba56:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800ba58:	f045 4504 	orr.w	r5, r5, #2214592512	; 0x84000000
 800ba5c:	f8cc 5900 	str.w	r5, [ip, #2304]	; 0x900
      if (ep->type != EP_TYPE_ISOC)
 800ba60:	d182      	bne.n	800b968 <USB_EPStartXfer+0x90>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800ba62:	f8d0 5808 	ldr.w	r5, [r0, #2056]	; 0x808
 800ba66:	f415 7f80 	tst.w	r5, #256	; 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800ba6a:	681d      	ldr	r5, [r3, #0]
 800ba6c:	bf0c      	ite	eq
 800ba6e:	f045 5500 	orreq.w	r5, r5, #536870912	; 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800ba72:	f045 5580 	orrne.w	r5, r5, #268435456	; 0x10000000
 800ba76:	601d      	str	r5, [r3, #0]
  if (dma == 0U)
 800ba78:	2a00      	cmp	r2, #0
 800ba7a:	f47f af75 	bne.w	800b968 <USB_EPStartXfer+0x90>
    count32b = ((uint32_t)len + 3U) / 4U;
 800ba7e:	b2b6      	uxth	r6, r6
 800ba80:	3603      	adds	r6, #3
    for (i = 0U; i < count32b; i++)
 800ba82:	08b6      	lsrs	r6, r6, #2
 800ba84:	f43f af70 	beq.w	800b968 <USB_EPStartXfer+0x90>
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 800ba88:	690b      	ldr	r3, [r1, #16]
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800ba8a:	eb00 3004 	add.w	r0, r0, r4, lsl #12
 800ba8e:	eb03 0186 	add.w	r1, r3, r6, lsl #2
 800ba92:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 800ba96:	f853 2b04 	ldr.w	r2, [r3], #4
 800ba9a:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 800ba9c:	428b      	cmp	r3, r1
 800ba9e:	d1fa      	bne.n	800ba96 <USB_EPStartXfer+0x1be>
 800baa0:	e762      	b.n	800b968 <USB_EPStartXfer+0x90>
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 800baa2:	691d      	ldr	r5, [r3, #16]
 800baa4:	f025 45c0 	bic.w	r5, r5, #1610612736	; 0x60000000
 800baa8:	611d      	str	r5, [r3, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
 800baaa:	691d      	ldr	r5, [r3, #16]
    if (dma == 1U)
 800baac:	2a01      	cmp	r2, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
 800baae:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800bab2:	611d      	str	r5, [r3, #16]
    if (dma == 1U)
 800bab4:	d016      	beq.n	800bae4 <USB_EPStartXfer+0x20c>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bab6:	f8de 5900 	ldr.w	r5, [lr, #2304]	; 0x900
 800baba:	f045 4504 	orr.w	r5, r5, #2214592512	; 0x84000000
 800babe:	f8ce 5900 	str.w	r5, [lr, #2304]	; 0x900
      if (ep->type != EP_TYPE_ISOC)
 800bac2:	e7ce      	b.n	800ba62 <USB_EPStartXfer+0x18a>
      if ((uint32_t)ep->dma_addr != 0U)
 800bac4:	694a      	ldr	r2, [r1, #20]
 800bac6:	b95a      	cbnz	r2, 800bae0 <USB_EPStartXfer+0x208>
      if (ep->type == EP_TYPE_ISOC)
 800bac8:	2f01      	cmp	r7, #1
 800baca:	d00e      	beq.n	800baea <USB_EPStartXfer+0x212>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bacc:	681a      	ldr	r2, [r3, #0]
 800bace:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 800bad2:	601a      	str	r2, [r3, #0]
}
 800bad4:	2000      	movs	r0, #0
 800bad6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if ((uint32_t)ep->dma_addr != 0U)
 800bada:	694a      	ldr	r2, [r1, #20]
 800badc:	2a00      	cmp	r2, #0
 800bade:	d0f5      	beq.n	800bacc <USB_EPStartXfer+0x1f4>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 800bae0:	615a      	str	r2, [r3, #20]
 800bae2:	e7f1      	b.n	800bac8 <USB_EPStartXfer+0x1f0>
      if ((uint32_t)ep->dma_addr != 0U)
 800bae4:	694a      	ldr	r2, [r1, #20]
 800bae6:	2a00      	cmp	r2, #0
 800bae8:	d1fa      	bne.n	800bae0 <USB_EPStartXfer+0x208>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800baea:	f8d0 2808 	ldr.w	r2, [r0, #2056]	; 0x808
 800baee:	f412 7f80 	tst.w	r2, #256	; 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800baf2:	681a      	ldr	r2, [r3, #0]
 800baf4:	bf0c      	ite	eq
 800baf6:	f042 5200 	orreq.w	r2, r2, #536870912	; 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800bafa:	f042 5280 	orrne.w	r2, r2, #268435456	; 0x10000000
 800bafe:	601a      	str	r2, [r3, #0]
 800bb00:	e7e4      	b.n	800bacc <USB_EPStartXfer+0x1f4>
 800bb02:	bf00      	nop
 800bb04:	1ff80000 	.word	0x1ff80000

0800bb08 <USB_EP0StartXfer>:
{
 800bb08:	b4f0      	push	{r4, r5, r6, r7}
  if (ep->is_in == 1U)
 800bb0a:	784b      	ldrb	r3, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800bb0c:	780c      	ldrb	r4, [r1, #0]
  if (ep->is_in == 1U)
 800bb0e:	2b01      	cmp	r3, #1
 800bb10:	d02e      	beq.n	800bb70 <USB_EP0StartXfer+0x68>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800bb12:	eb00 1044 	add.w	r0, r0, r4, lsl #5
    if (ep->xfer_len > 0U)
 800bb16:	698d      	ldr	r5, [r1, #24]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800bb18:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 800bb1c:	0ce4      	lsrs	r4, r4, #19
 800bb1e:	04e4      	lsls	r4, r4, #19
 800bb20:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800bb24:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 800bb28:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800bb2c:	f424 14c0 	bic.w	r4, r4, #1572864	; 0x180000
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800bb30:	f500 6330 	add.w	r3, r0, #2816	; 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800bb34:	611c      	str	r4, [r3, #16]
      ep->xfer_len = ep->maxpacket;
 800bb36:	68cc      	ldr	r4, [r1, #12]
    if (ep->xfer_len > 0U)
 800bb38:	b105      	cbz	r5, 800bb3c <USB_EP0StartXfer+0x34>
      ep->xfer_len = ep->maxpacket;
 800bb3a:	618c      	str	r4, [r1, #24]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800bb3c:	691d      	ldr	r5, [r3, #16]
    ep->xfer_size = ep->maxpacket;
 800bb3e:	61cc      	str	r4, [r1, #28]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800bb40:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 800bb44:	611d      	str	r5, [r3, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size);
 800bb46:	691d      	ldr	r5, [r3, #16]
 800bb48:	f3c4 0412 	ubfx	r4, r4, #0, #19
 800bb4c:	432c      	orrs	r4, r5
    if (dma == 1U)
 800bb4e:	2a01      	cmp	r2, #1
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size);
 800bb50:	611c      	str	r4, [r3, #16]
    if (dma == 1U)
 800bb52:	d008      	beq.n	800bb66 <USB_EP0StartXfer+0x5e>
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 800bb54:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800bb58:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800bb5c:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 800bb60:	2000      	movs	r0, #0
 800bb62:	bcf0      	pop	{r4, r5, r6, r7}
 800bb64:	4770      	bx	lr
      if ((uint32_t)ep->xfer_buff != 0U)
 800bb66:	690a      	ldr	r2, [r1, #16]
 800bb68:	2a00      	cmp	r2, #0
 800bb6a:	d0f3      	beq.n	800bb54 <USB_EP0StartXfer+0x4c>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 800bb6c:	615a      	str	r2, [r3, #20]
 800bb6e:	e7f1      	b.n	800bb54 <USB_EP0StartXfer+0x4c>
    if (ep->xfer_len == 0U)
 800bb70:	698d      	ldr	r5, [r1, #24]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800bb72:	eb00 1344 	add.w	r3, r0, r4, lsl #5
 800bb76:	f503 6310 	add.w	r3, r3, #2304	; 0x900
    if (ep->xfer_len == 0U)
 800bb7a:	b36d      	cbz	r5, 800bbd8 <USB_EP0StartXfer+0xd0>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800bb7c:	691e      	ldr	r6, [r3, #16]
      if (ep->xfer_len > ep->maxpacket)
 800bb7e:	68cf      	ldr	r7, [r1, #12]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800bb80:	0cf6      	lsrs	r6, r6, #19
 800bb82:	04f6      	lsls	r6, r6, #19
 800bb84:	611e      	str	r6, [r3, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800bb86:	691e      	ldr	r6, [r3, #16]
 800bb88:	f026 56ff 	bic.w	r6, r6, #534773760	; 0x1fe00000
 800bb8c:	f426 16c0 	bic.w	r6, r6, #1572864	; 0x180000
 800bb90:	611e      	str	r6, [r3, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800bb92:	691e      	ldr	r6, [r3, #16]
      if (ep->xfer_len > ep->maxpacket)
 800bb94:	42bd      	cmp	r5, r7
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800bb96:	f446 2600 	orr.w	r6, r6, #524288	; 0x80000
        ep->xfer_len = ep->maxpacket;
 800bb9a:	bf88      	it	hi
 800bb9c:	618f      	strhi	r7, [r1, #24]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800bb9e:	611e      	str	r6, [r3, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800bba0:	691e      	ldr	r6, [r3, #16]
        ep->xfer_len = ep->maxpacket;
 800bba2:	bf88      	it	hi
 800bba4:	463d      	movhi	r5, r7
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800bba6:	f3c5 0512 	ubfx	r5, r5, #0, #19
 800bbaa:	4335      	orrs	r5, r6
    if (dma == 1U)
 800bbac:	2a01      	cmp	r2, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800bbae:	611d      	str	r5, [r3, #16]
    if (dma == 1U)
 800bbb0:	d022      	beq.n	800bbf8 <USB_EP0StartXfer+0xf0>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bbb2:	681a      	ldr	r2, [r3, #0]
      if (ep->xfer_len > 0U)
 800bbb4:	6989      	ldr	r1, [r1, #24]
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bbb6:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 800bbba:	601a      	str	r2, [r3, #0]
      if (ep->xfer_len > 0U)
 800bbbc:	2900      	cmp	r1, #0
 800bbbe:	d0cf      	beq.n	800bb60 <USB_EP0StartXfer+0x58>
        USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 800bbc0:	f8d0 3834 	ldr.w	r3, [r0, #2100]	; 0x834
 800bbc4:	f004 020f 	and.w	r2, r4, #15
 800bbc8:	2401      	movs	r4, #1
 800bbca:	4094      	lsls	r4, r2
 800bbcc:	431c      	orrs	r4, r3
 800bbce:	f8c0 4834 	str.w	r4, [r0, #2100]	; 0x834
}
 800bbd2:	2000      	movs	r0, #0
 800bbd4:	bcf0      	pop	{r4, r5, r6, r7}
 800bbd6:	4770      	bx	lr
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800bbd8:	691d      	ldr	r5, [r3, #16]
 800bbda:	f025 55ff 	bic.w	r5, r5, #534773760	; 0x1fe00000
 800bbde:	f425 15c0 	bic.w	r5, r5, #1572864	; 0x180000
 800bbe2:	611d      	str	r5, [r3, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800bbe4:	691d      	ldr	r5, [r3, #16]
 800bbe6:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 800bbea:	611d      	str	r5, [r3, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800bbec:	691d      	ldr	r5, [r3, #16]
 800bbee:	0ced      	lsrs	r5, r5, #19
 800bbf0:	04ed      	lsls	r5, r5, #19
    if (dma == 1U)
 800bbf2:	2a01      	cmp	r2, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800bbf4:	611d      	str	r5, [r3, #16]
    if (dma == 1U)
 800bbf6:	d1dc      	bne.n	800bbb2 <USB_EP0StartXfer+0xaa>
      if ((uint32_t)ep->dma_addr != 0U)
 800bbf8:	694a      	ldr	r2, [r1, #20]
 800bbfa:	b102      	cbz	r2, 800bbfe <USB_EP0StartXfer+0xf6>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 800bbfc:	615a      	str	r2, [r3, #20]
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bbfe:	681a      	ldr	r2, [r3, #0]
 800bc00:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
}
 800bc04:	2000      	movs	r0, #0
 800bc06:	bcf0      	pop	{r4, r5, r6, r7}
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800bc08:	601a      	str	r2, [r3, #0]
}
 800bc0a:	4770      	bx	lr

0800bc0c <USB_EPStopXfer>:
  if (ep->is_in == 1U)
 800bc0c:	784b      	ldrb	r3, [r1, #1]
{
 800bc0e:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800bc10:	2200      	movs	r2, #0
  if (ep->is_in == 1U)
 800bc12:	2b01      	cmp	r3, #1
  __IO uint32_t count = 0U;
 800bc14:	9201      	str	r2, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800bc16:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800bc18:	d020      	beq.n	800bc5c <USB_EPStopXfer+0x50>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800bc1a:	f500 6030 	add.w	r0, r0, #2816	; 0xb00
 800bc1e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800bc22:	6803      	ldr	r3, [r0, #0]
 800bc24:	2b00      	cmp	r3, #0
 800bc26:	db02      	blt.n	800bc2e <USB_EPStopXfer+0x22>
  HAL_StatusTypeDef ret = HAL_OK;
 800bc28:	2000      	movs	r0, #0
}
 800bc2a:	b002      	add	sp, #8
 800bc2c:	4770      	bx	lr
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 800bc2e:	6803      	ldr	r3, [r0, #0]
 800bc30:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800bc34:	6003      	str	r3, [r0, #0]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 800bc36:	6803      	ldr	r3, [r0, #0]
 800bc38:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800bc3c:	6003      	str	r3, [r0, #0]
        if (count > 10000U)
 800bc3e:	f242 7210 	movw	r2, #10000	; 0x2710
 800bc42:	e002      	b.n	800bc4a <USB_EPStopXfer+0x3e>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 800bc44:	6803      	ldr	r3, [r0, #0]
 800bc46:	2b00      	cmp	r3, #0
 800bc48:	daee      	bge.n	800bc28 <USB_EPStopXfer+0x1c>
        count++;
 800bc4a:	9b01      	ldr	r3, [sp, #4]
 800bc4c:	3301      	adds	r3, #1
 800bc4e:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 800bc50:	9b01      	ldr	r3, [sp, #4]
 800bc52:	4293      	cmp	r3, r2
 800bc54:	d9f6      	bls.n	800bc44 <USB_EPStopXfer+0x38>
          ret = HAL_ERROR;
 800bc56:	2001      	movs	r0, #1
}
 800bc58:	b002      	add	sp, #8
 800bc5a:	4770      	bx	lr
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800bc5c:	f500 6010 	add.w	r0, r0, #2304	; 0x900
 800bc60:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800bc64:	681a      	ldr	r2, [r3, #0]
 800bc66:	2a00      	cmp	r2, #0
 800bc68:	dade      	bge.n	800bc28 <USB_EPStopXfer+0x1c>
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 800bc6a:	681a      	ldr	r2, [r3, #0]
 800bc6c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 800bc70:	601a      	str	r2, [r3, #0]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 800bc72:	681a      	ldr	r2, [r3, #0]
 800bc74:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800bc78:	601a      	str	r2, [r3, #0]
        if (count > 10000U)
 800bc7a:	f242 7110 	movw	r1, #10000	; 0x2710
 800bc7e:	e002      	b.n	800bc86 <USB_EPStopXfer+0x7a>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 800bc80:	681a      	ldr	r2, [r3, #0]
 800bc82:	2a00      	cmp	r2, #0
 800bc84:	dad0      	bge.n	800bc28 <USB_EPStopXfer+0x1c>
        count++;
 800bc86:	9a01      	ldr	r2, [sp, #4]
 800bc88:	3201      	adds	r2, #1
 800bc8a:	9201      	str	r2, [sp, #4]
        if (count > 10000U)
 800bc8c:	9a01      	ldr	r2, [sp, #4]
 800bc8e:	428a      	cmp	r2, r1
 800bc90:	d9f6      	bls.n	800bc80 <USB_EPStopXfer+0x74>
 800bc92:	e7e0      	b.n	800bc56 <USB_EPStopXfer+0x4a>

0800bc94 <USB_WritePacket>:
{
 800bc94:	b410      	push	{r4}
 800bc96:	f89d 4004 	ldrb.w	r4, [sp, #4]
  if (dma == 0U)
 800bc9a:	b964      	cbnz	r4, 800bcb6 <USB_WritePacket+0x22>
    count32b = ((uint32_t)len + 3U) / 4U;
 800bc9c:	3303      	adds	r3, #3
    for (i = 0U; i < count32b; i++)
 800bc9e:	089b      	lsrs	r3, r3, #2
 800bca0:	d009      	beq.n	800bcb6 <USB_WritePacket+0x22>
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800bca2:	3201      	adds	r2, #1
 800bca4:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 800bca8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800bcac:	f851 2b04 	ldr.w	r2, [r1], #4
 800bcb0:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 800bcb2:	428b      	cmp	r3, r1
 800bcb4:	d1fa      	bne.n	800bcac <USB_WritePacket+0x18>
}
 800bcb6:	2000      	movs	r0, #0
 800bcb8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bcbc:	4770      	bx	lr
 800bcbe:	bf00      	nop

0800bcc0 <USB_ReadPacket>:
{
 800bcc0:	b4f0      	push	{r4, r5, r6, r7}
  for (i = 0U; i < count32b; i++)
 800bcc2:	0895      	lsrs	r5, r2, #2
  uint16_t remaining_bytes = len % 4U;
 800bcc4:	f002 0703 	and.w	r7, r2, #3
  for (i = 0U; i < count32b; i++)
 800bcc8:	d01f      	beq.n	800bd0a <USB_ReadPacket+0x4a>
 800bcca:	f500 5680 	add.w	r6, r0, #4096	; 0x1000
  uint8_t *pDest = dest;
 800bcce:	460a      	mov	r2, r1
  for (i = 0U; i < count32b; i++)
 800bcd0:	2300      	movs	r3, #0
 800bcd2:	3301      	adds	r3, #1
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800bcd4:	6834      	ldr	r4, [r6, #0]
 800bcd6:	f842 4b04 	str.w	r4, [r2], #4
  for (i = 0U; i < count32b; i++)
 800bcda:	429d      	cmp	r5, r3
 800bcdc:	d1f9      	bne.n	800bcd2 <USB_ReadPacket+0x12>
 800bcde:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  if (remaining_bytes != 0U)
 800bce2:	b17f      	cbz	r7, 800bd04 <USB_ReadPacket+0x44>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 800bce4:	1e7b      	subs	r3, r7, #1
 800bce6:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 800bcea:	b29b      	uxth	r3, r3
 800bcec:	3301      	adds	r3, #1
 800bcee:	6800      	ldr	r0, [r0, #0]
 800bcf0:	442b      	add	r3, r5
 800bcf2:	2200      	movs	r2, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800bcf4:	fa20 f102 	lsr.w	r1, r0, r2
 800bcf8:	f805 1b01 	strb.w	r1, [r5], #1
    } while (remaining_bytes != 0U);
 800bcfc:	429d      	cmp	r5, r3
 800bcfe:	f102 0208 	add.w	r2, r2, #8
 800bd02:	d1f7      	bne.n	800bcf4 <USB_ReadPacket+0x34>
}
 800bd04:	4628      	mov	r0, r5
 800bd06:	bcf0      	pop	{r4, r5, r6, r7}
 800bd08:	4770      	bx	lr
  uint8_t *pDest = dest;
 800bd0a:	460d      	mov	r5, r1
 800bd0c:	e7e9      	b.n	800bce2 <USB_ReadPacket+0x22>
 800bd0e:	bf00      	nop

0800bd10 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 800bd10:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800bd12:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800bd14:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 800bd16:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 800bd1a:	d00c      	beq.n	800bd36 <USB_EPSetStall+0x26>
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 800bd1c:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	; 0xb00
 800bd20:	2a00      	cmp	r2, #0
 800bd22:	db00      	blt.n	800bd26 <USB_EPSetStall+0x16>
 800bd24:	b9d3      	cbnz	r3, 800bd5c <USB_EPSetStall+0x4c>
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 800bd26:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800bd2a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800bd2e:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 800bd32:	2000      	movs	r0, #0
 800bd34:	4770      	bx	lr
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 800bd36:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 800bd3a:	2a00      	cmp	r2, #0
 800bd3c:	db06      	blt.n	800bd4c <USB_EPSetStall+0x3c>
 800bd3e:	b12b      	cbz	r3, 800bd4c <USB_EPSetStall+0x3c>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 800bd40:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800bd44:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800bd48:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 800bd4c:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800bd50:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800bd54:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
}
 800bd58:	2000      	movs	r0, #0
 800bd5a:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 800bd5c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800bd60:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800bd64:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
 800bd68:	e7dd      	b.n	800bd26 <USB_EPSetStall+0x16>
 800bd6a:	bf00      	nop

0800bd6c <USB_EPClearStall>:
  if (ep->is_in == 1U)
 800bd6c:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800bd6e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800bd70:	2a01      	cmp	r2, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800bd72:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 800bd76:	d013      	beq.n	800bda0 <USB_EPClearStall+0x34>
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800bd78:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800bd7c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800bd80:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800bd84:	790b      	ldrb	r3, [r1, #4]
 800bd86:	3b02      	subs	r3, #2
 800bd88:	2b01      	cmp	r3, #1
 800bd8a:	d901      	bls.n	800bd90 <USB_EPClearStall+0x24>
}
 800bd8c:	2000      	movs	r0, #0
 800bd8e:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 800bd90:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800bd94:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bd98:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 800bd9c:	2000      	movs	r0, #0
 800bd9e:	4770      	bx	lr
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800bda0:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800bda4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800bda8:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800bdac:	790b      	ldrb	r3, [r1, #4]
 800bdae:	3b02      	subs	r3, #2
 800bdb0:	2b01      	cmp	r3, #1
 800bdb2:	d8eb      	bhi.n	800bd8c <USB_EPClearStall+0x20>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 800bdb4:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800bdb8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bdbc:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
}
 800bdc0:	2000      	movs	r0, #0
 800bdc2:	4770      	bx	lr

0800bdc4 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 800bdc4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 800bdc8:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 800bdcc:	f8c0 3800 	str.w	r3, [r0, #2048]	; 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 800bdd0:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 800bdd4:	0109      	lsls	r1, r1, #4
 800bdd6:	f401 61fe 	and.w	r1, r1, #2032	; 0x7f0
 800bdda:	4319      	orrs	r1, r3
 800bddc:	f8c0 1800 	str.w	r1, [r0, #2048]	; 0x800
}
 800bde0:	2000      	movs	r0, #0
 800bde2:	4770      	bx	lr

0800bde4 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800bde4:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 800bde8:	f023 0303 	bic.w	r3, r3, #3
 800bdec:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 800bdf0:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 800bdf4:	f023 0302 	bic.w	r3, r3, #2
 800bdf8:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 800bdfc:	2000      	movs	r0, #0
 800bdfe:	4770      	bx	lr

0800be00 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800be00:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 800be04:	f023 0303 	bic.w	r3, r3, #3
 800be08:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800be0c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 800be10:	f043 0302 	orr.w	r3, r3, #2
 800be14:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 800be18:	2000      	movs	r0, #0
 800be1a:	4770      	bx	lr

0800be1c <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 800be1c:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 800be1e:	6980      	ldr	r0, [r0, #24]
}
 800be20:	4010      	ands	r0, r2
 800be22:	4770      	bx	lr

0800be24 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 800be24:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 800be28:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 800be2c:	69c0      	ldr	r0, [r0, #28]
 800be2e:	4018      	ands	r0, r3
}
 800be30:	0c00      	lsrs	r0, r0, #16
 800be32:	4770      	bx	lr

0800be34 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 800be34:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 800be38:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 800be3c:	69c0      	ldr	r0, [r0, #28]
 800be3e:	4018      	ands	r0, r3
}
 800be40:	b280      	uxth	r0, r0
 800be42:	4770      	bx	lr

0800be44 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 800be44:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 800be48:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 800be4c:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	; 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 800be50:	6940      	ldr	r0, [r0, #20]
}
 800be52:	4010      	ands	r0, r2
 800be54:	4770      	bx	lr
 800be56:	bf00      	nop

0800be58 <USB_ReadDevInEPInterrupt>:
{
 800be58:	b410      	push	{r4}
  msk = USBx_DEVICE->DIEPMSK;
 800be5a:	f8d0 4810 	ldr.w	r4, [r0, #2064]	; 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 800be5e:	f8d0 3834 	ldr.w	r3, [r0, #2100]	; 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 800be62:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 800be66:	f001 010f 	and.w	r1, r1, #15
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 800be6a:	f500 6010 	add.w	r0, r0, #2304	; 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 800be6e:	40cb      	lsrs	r3, r1
 800be70:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 800be72:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 800be74:	b2db      	uxtb	r3, r3
 800be76:	4323      	orrs	r3, r4
}
 800be78:	4018      	ands	r0, r3
 800be7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800be7e:	4770      	bx	lr

0800be80 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 800be80:	6940      	ldr	r0, [r0, #20]
}
 800be82:	f000 0001 	and.w	r0, r0, #1
 800be86:	4770      	bx	lr

0800be88 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 800be88:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800be8c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800be90:	f023 0307 	bic.w	r3, r3, #7
 800be94:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 800be98:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 800be9c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bea0:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 800bea4:	2000      	movs	r0, #0
 800bea6:	4770      	bx	lr

0800bea8 <USB_EP0_OutStart>:
{
 800bea8:	b410      	push	{r4}
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800beaa:	4b14      	ldr	r3, [pc, #80]	; (800befc <USB_EP0_OutStart+0x54>)
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 800beac:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800beae:	429c      	cmp	r4, r3
 800beb0:	d81a      	bhi.n	800bee8 <USB_EP0_OutStart+0x40>
 800beb2:	f500 6030 	add.w	r0, r0, #2816	; 0xb00
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800beb6:	2300      	movs	r3, #0
 800beb8:	6103      	str	r3, [r0, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800beba:	6903      	ldr	r3, [r0, #16]
 800bebc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800bec0:	6103      	str	r3, [r0, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800bec2:	6903      	ldr	r3, [r0, #16]
 800bec4:	f043 0318 	orr.w	r3, r3, #24
 800bec8:	6103      	str	r3, [r0, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 800beca:	6903      	ldr	r3, [r0, #16]
  if (dma == 1U)
 800becc:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 800bece:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 800bed2:	6103      	str	r3, [r0, #16]
  if (dma == 1U)
 800bed4:	d104      	bne.n	800bee0 <USB_EP0_OutStart+0x38>
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 800bed6:	6142      	str	r2, [r0, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 800bed8:	6803      	ldr	r3, [r0, #0]
 800beda:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 800bede:	6003      	str	r3, [r0, #0]
}
 800bee0:	2000      	movs	r0, #0
 800bee2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bee6:	4770      	bx	lr
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800bee8:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800beec:	2b00      	cmp	r3, #0
 800beee:	f500 6030 	add.w	r0, r0, #2816	; 0xb00
 800bef2:	dae0      	bge.n	800beb6 <USB_EP0_OutStart+0xe>
}
 800bef4:	2000      	movs	r0, #0
 800bef6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800befa:	4770      	bx	lr
 800befc:	4f54300a 	.word	0x4f54300a

0800bf00 <disk_status>:
    BYTE pdrv /* Physical drive number to identify the drive */
)
{
    DSTATUS stat;

    stat = disk.drv[pdrv]->disk_status(disk.lun[pdrv]);
 800bf00:	4b03      	ldr	r3, [pc, #12]	; (800bf10 <disk_status+0x10>)
 800bf02:	eb03 0280 	add.w	r2, r3, r0, lsl #2
 800bf06:	4418      	add	r0, r3
 800bf08:	6853      	ldr	r3, [r2, #4]
 800bf0a:	7a00      	ldrb	r0, [r0, #8]
 800bf0c:	685b      	ldr	r3, [r3, #4]
 800bf0e:	4718      	bx	r3
 800bf10:	20002c6c 	.word	0x20002c6c

0800bf14 <disk_initialize>:
    BYTE pdrv /* Physical drive nmuber to identify the drive */
)
{
    DSTATUS stat = RES_OK;

    if (disk.is_initialized[pdrv] == 0) {
 800bf14:	4b06      	ldr	r3, [pc, #24]	; (800bf30 <disk_initialize+0x1c>)
 800bf16:	5c1a      	ldrb	r2, [r3, r0]
 800bf18:	b942      	cbnz	r2, 800bf2c <disk_initialize+0x18>
        disk.is_initialized[pdrv] = 1;
        stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
 800bf1a:	eb03 0280 	add.w	r2, r3, r0, lsl #2
        disk.is_initialized[pdrv] = 1;
 800bf1e:	2101      	movs	r1, #1
 800bf20:	5419      	strb	r1, [r3, r0]
        stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
 800bf22:	6852      	ldr	r2, [r2, #4]
 800bf24:	4418      	add	r0, r3
 800bf26:	6813      	ldr	r3, [r2, #0]
 800bf28:	7a00      	ldrb	r0, [r0, #8]
 800bf2a:	4718      	bx	r3
    }
    return stat;
}
 800bf2c:	2000      	movs	r0, #0
 800bf2e:	4770      	bx	lr
 800bf30:	20002c6c 	.word	0x20002c6c

0800bf34 <disk_read>:
    BYTE pdrv,    /* Physical drive nmuber to identify the drive */
    BYTE* buff,   /* Data buffer to store read data */
    DWORD sector, /* Sector address in LBA */
    UINT count    /* Number of sectors to read */
)
{
 800bf34:	b430      	push	{r4, r5}
    DRESULT res;

    res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
 800bf36:	4c05      	ldr	r4, [pc, #20]	; (800bf4c <disk_read+0x18>)
 800bf38:	eb04 0580 	add.w	r5, r4, r0, lsl #2
 800bf3c:	4420      	add	r0, r4
 800bf3e:	686c      	ldr	r4, [r5, #4]
 800bf40:	7a00      	ldrb	r0, [r0, #8]
 800bf42:	68a4      	ldr	r4, [r4, #8]
 800bf44:	46a4      	mov	ip, r4
    return res;
}
 800bf46:	bc30      	pop	{r4, r5}
    res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
 800bf48:	4760      	bx	ip
 800bf4a:	bf00      	nop
 800bf4c:	20002c6c 	.word	0x20002c6c

0800bf50 <disk_write>:
    BYTE pdrv,        /* Physical drive nmuber to identify the drive */
    const BYTE* buff, /* Data to be written */
    DWORD sector,     /* Sector address in LBA */
    UINT count        /* Number of sectors to write */
)
{
 800bf50:	b430      	push	{r4, r5}
    DRESULT res;

    res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 800bf52:	4c05      	ldr	r4, [pc, #20]	; (800bf68 <disk_write+0x18>)
 800bf54:	eb04 0580 	add.w	r5, r4, r0, lsl #2
 800bf58:	4420      	add	r0, r4
 800bf5a:	686c      	ldr	r4, [r5, #4]
 800bf5c:	7a00      	ldrb	r0, [r0, #8]
 800bf5e:	68e4      	ldr	r4, [r4, #12]
 800bf60:	46a4      	mov	ip, r4
    return res;
}
 800bf62:	bc30      	pop	{r4, r5}
    res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 800bf64:	4760      	bx	ip
 800bf66:	bf00      	nop
 800bf68:	20002c6c 	.word	0x20002c6c

0800bf6c <disk_ioctl>:
    void* buff /* Buffer to send/receive control data */
)
{
    DRESULT res;

    res = disk.drv[pdrv]->disk_ioctl(disk.lun[pdrv], cmd, buff);
 800bf6c:	4b05      	ldr	r3, [pc, #20]	; (800bf84 <disk_ioctl+0x18>)
{
 800bf6e:	b410      	push	{r4}
    res = disk.drv[pdrv]->disk_ioctl(disk.lun[pdrv], cmd, buff);
 800bf70:	eb03 0480 	add.w	r4, r3, r0, lsl #2
 800bf74:	4418      	add	r0, r3
 800bf76:	6863      	ldr	r3, [r4, #4]
 800bf78:	7a00      	ldrb	r0, [r0, #8]
 800bf7a:	691b      	ldr	r3, [r3, #16]
    return res;
}
 800bf7c:	f85d 4b04 	ldr.w	r4, [sp], #4
    res = disk.drv[pdrv]->disk_ioctl(disk.lun[pdrv], cmd, buff);
 800bf80:	4718      	bx	r3
 800bf82:	bf00      	nop
 800bf84:	20002c6c 	.word	0x20002c6c

0800bf88 <chk_lock>:
{
	UINT i, be;

	/* Search file semaphore table */
	for (i = be = 0; i < _FS_LOCK; i++) {
		if (Files[i].fs) {	/* Existing entry */
 800bf88:	4a1e      	ldr	r2, [pc, #120]	; (800c004 <chk_lock+0x7c>)
 800bf8a:	6813      	ldr	r3, [r2, #0]
{
 800bf8c:	b430      	push	{r4, r5}
		if (Files[i].fs) {	/* Existing entry */
 800bf8e:	2b00      	cmp	r3, #0
 800bf90:	d035      	beq.n	800bffe <chk_lock+0x76>
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 800bf92:	6804      	ldr	r4, [r0, #0]
 800bf94:	429c      	cmp	r4, r3
 800bf96:	d00d      	beq.n	800bfb4 <chk_lock+0x2c>
	for (i = be = 0; i < _FS_LOCK; i++) {
 800bf98:	2400      	movs	r4, #0
		if (Files[i].fs) {	/* Existing entry */
 800bf9a:	6913      	ldr	r3, [r2, #16]
 800bf9c:	2b00      	cmp	r3, #0
 800bf9e:	d02b      	beq.n	800bff8 <chk_lock+0x70>
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 800bfa0:	6805      	ldr	r5, [r0, #0]
 800bfa2:	42ab      	cmp	r3, r5
 800bfa4:	d01a      	beq.n	800bfdc <chk_lock+0x54>
		} else {			/* Blank entry */
			be = 1;
		}
	}
	if (i == _FS_LOCK) {	/* The object is not opened */
		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new object? */
 800bfa6:	bb3c      	cbnz	r4, 800bff8 <chk_lock+0x70>
 800bfa8:	2902      	cmp	r1, #2
 800bfaa:	bf0c      	ite	eq
 800bfac:	2000      	moveq	r0, #0
 800bfae:	2012      	movne	r0, #18
	}

	/* The object has been opened. Reject any open against writing file and all write mode open */
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
}
 800bfb0:	bc30      	pop	{r4, r5}
 800bfb2:	4770      	bx	lr
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 800bfb4:	6854      	ldr	r4, [r2, #4]
 800bfb6:	6883      	ldr	r3, [r0, #8]
 800bfb8:	429c      	cmp	r4, r3
 800bfba:	d1ed      	bne.n	800bf98 <chk_lock+0x10>
				Files[i].clu == dp->obj.sclust &&
 800bfbc:	6894      	ldr	r4, [r2, #8]
 800bfbe:	6943      	ldr	r3, [r0, #20]
 800bfc0:	429c      	cmp	r4, r3
 800bfc2:	d1e9      	bne.n	800bf98 <chk_lock+0x10>
	for (i = be = 0; i < _FS_LOCK; i++) {
 800bfc4:	2300      	movs	r3, #0
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 800bfc6:	b9a1      	cbnz	r1, 800bff2 <chk_lock+0x6a>
 800bfc8:	eb02 1203 	add.w	r2, r2, r3, lsl #4
}
 800bfcc:	bc30      	pop	{r4, r5}
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 800bfce:	8993      	ldrh	r3, [r2, #12]
 800bfd0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bfd4:	bf14      	ite	ne
 800bfd6:	2000      	movne	r0, #0
 800bfd8:	2010      	moveq	r0, #16
}
 800bfda:	4770      	bx	lr
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 800bfdc:	6955      	ldr	r5, [r2, #20]
 800bfde:	6883      	ldr	r3, [r0, #8]
 800bfe0:	429d      	cmp	r5, r3
 800bfe2:	d1e0      	bne.n	800bfa6 <chk_lock+0x1e>
				Files[i].clu == dp->obj.sclust &&
 800bfe4:	6943      	ldr	r3, [r0, #20]
 800bfe6:	6990      	ldr	r0, [r2, #24]
 800bfe8:	4298      	cmp	r0, r3
 800bfea:	d1dc      	bne.n	800bfa6 <chk_lock+0x1e>
	for (i = be = 0; i < _FS_LOCK; i++) {
 800bfec:	2301      	movs	r3, #1
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 800bfee:	2900      	cmp	r1, #0
 800bff0:	d0ea      	beq.n	800bfc8 <chk_lock+0x40>
 800bff2:	2010      	movs	r0, #16
}
 800bff4:	bc30      	pop	{r4, r5}
 800bff6:	4770      	bx	lr
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 800bff8:	2000      	movs	r0, #0
}
 800bffa:	bc30      	pop	{r4, r5}
 800bffc:	4770      	bx	lr
			be = 1;
 800bffe:	2401      	movs	r4, #1
 800c000:	e7cb      	b.n	800bf9a <chk_lock+0x12>
 800c002:	bf00      	nop
 800c004:	20002c48 	.word	0x20002c48

0800c008 <inc_lock>:
{
	UINT i;


	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
		if (Files[i].fs == dp->obj.fs &&
 800c008:	4b27      	ldr	r3, [pc, #156]	; (800c0a8 <inc_lock+0xa0>)
{
 800c00a:	b4f0      	push	{r4, r5, r6, r7}
		if (Files[i].fs == dp->obj.fs &&
 800c00c:	681a      	ldr	r2, [r3, #0]
 800c00e:	6805      	ldr	r5, [r0, #0]
 800c010:	4295      	cmp	r5, r2
 800c012:	d01b      	beq.n	800c04c <inc_lock+0x44>
 800c014:	691c      	ldr	r4, [r3, #16]
 800c016:	42ac      	cmp	r4, r5
 800c018:	d006      	beq.n	800c028 <inc_lock+0x20>
			Files[i].clu == dp->obj.sclust &&
			Files[i].ofs == dp->dptr) break;
	}

	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 800c01a:	b362      	cbz	r2, 800c076 <inc_lock+0x6e>
 800c01c:	2c00      	cmp	r4, #0
 800c01e:	d040      	beq.n	800c0a2 <inc_lock+0x9a>
		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 800c020:	2400      	movs	r4, #0
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */

	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */

	return i + 1;
}
 800c022:	4620      	mov	r0, r4
 800c024:	bcf0      	pop	{r4, r5, r6, r7}
 800c026:	4770      	bx	lr
		if (Files[i].fs == dp->obj.fs &&
 800c028:	695f      	ldr	r7, [r3, #20]
 800c02a:	6886      	ldr	r6, [r0, #8]
 800c02c:	42b7      	cmp	r7, r6
 800c02e:	d1f4      	bne.n	800c01a <inc_lock+0x12>
			Files[i].clu == dp->obj.sclust &&
 800c030:	699f      	ldr	r7, [r3, #24]
 800c032:	6946      	ldr	r6, [r0, #20]
 800c034:	42b7      	cmp	r7, r6
 800c036:	d1f0      	bne.n	800c01a <inc_lock+0x12>
	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 800c038:	2201      	movs	r2, #1
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800c03a:	b991      	cbnz	r1, 800c062 <inc_lock+0x5a>
 800c03c:	eb03 1102 	add.w	r1, r3, r2, lsl #4
 800c040:	0116      	lsls	r6, r2, #4
 800c042:	8989      	ldrh	r1, [r1, #12]
 800c044:	3101      	adds	r1, #1
 800c046:	b289      	uxth	r1, r1
 800c048:	1c54      	adds	r4, r2, #1
 800c04a:	e025      	b.n	800c098 <inc_lock+0x90>
		if (Files[i].fs == dp->obj.fs &&
 800c04c:	685e      	ldr	r6, [r3, #4]
 800c04e:	6884      	ldr	r4, [r0, #8]
 800c050:	42a6      	cmp	r6, r4
 800c052:	d1df      	bne.n	800c014 <inc_lock+0xc>
			Files[i].clu == dp->obj.sclust &&
 800c054:	6946      	ldr	r6, [r0, #20]
 800c056:	689c      	ldr	r4, [r3, #8]
 800c058:	42a6      	cmp	r6, r4
 800c05a:	d1db      	bne.n	800c014 <inc_lock+0xc>
	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 800c05c:	2200      	movs	r2, #0
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800c05e:	2900      	cmp	r1, #0
 800c060:	d0ec      	beq.n	800c03c <inc_lock+0x34>
 800c062:	eb03 1102 	add.w	r1, r3, r2, lsl #4
 800c066:	0116      	lsls	r6, r2, #4
 800c068:	8989      	ldrh	r1, [r1, #12]
 800c06a:	2900      	cmp	r1, #0
 800c06c:	d1d8      	bne.n	800c020 <inc_lock+0x18>
 800c06e:	1c54      	adds	r4, r2, #1
	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800c070:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c074:	e010      	b.n	800c098 <inc_lock+0x90>
		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 800c076:	2401      	movs	r4, #1
		Files[i].fs = dp->obj.fs;
 800c078:	0116      	lsls	r6, r2, #4
 800c07a:	eb03 1202 	add.w	r2, r3, r2, lsl #4
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800c07e:	2900      	cmp	r1, #0
		Files[i].clu = dp->obj.sclust;
 800c080:	6887      	ldr	r7, [r0, #8]
		Files[i].ofs = dp->dptr;
 800c082:	6941      	ldr	r1, [r0, #20]
		Files[i].fs = dp->obj.fs;
 800c084:	519d      	str	r5, [r3, r6]
		Files[i].ctr = 0;
 800c086:	f04f 0000 	mov.w	r0, #0
		Files[i].ofs = dp->dptr;
 800c08a:	6091      	str	r1, [r2, #8]
		Files[i].clu = dp->obj.sclust;
 800c08c:	6057      	str	r7, [r2, #4]
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800c08e:	bf14      	ite	ne
 800c090:	f44f 7180 	movne.w	r1, #256	; 0x100
 800c094:	2101      	moveq	r1, #1
		Files[i].ctr = 0;
 800c096:	8190      	strh	r0, [r2, #12]
	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800c098:	4433      	add	r3, r6
}
 800c09a:	4620      	mov	r0, r4
	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800c09c:	8199      	strh	r1, [r3, #12]
}
 800c09e:	bcf0      	pop	{r4, r5, r6, r7}
 800c0a0:	4770      	bx	lr
		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 800c0a2:	2402      	movs	r4, #2
 800c0a4:	2201      	movs	r2, #1
 800c0a6:	e7e7      	b.n	800c078 <inc_lock+0x70>
 800c0a8:	20002c48 	.word	0x20002c48

0800c0ac <get_ldnumber>:
	char c;
	TCHAR tc;
#endif


	if (*path) {	/* If the pointer is not a null */
 800c0ac:	6801      	ldr	r1, [r0, #0]
 800c0ae:	b1f1      	cbz	r1, 800c0ee <get_ldnumber+0x42>
{
 800c0b0:	b410      	push	{r4}
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
 800c0b2:	780c      	ldrb	r4, [r1, #0]
 800c0b4:	2c20      	cmp	r4, #32
 800c0b6:	d910      	bls.n	800c0da <get_ldnumber+0x2e>
 800c0b8:	460a      	mov	r2, r1
 800c0ba:	4623      	mov	r3, r4
 800c0bc:	e003      	b.n	800c0c6 <get_ldnumber+0x1a>
 800c0be:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c0c2:	2b20      	cmp	r3, #32
 800c0c4:	d909      	bls.n	800c0da <get_ldnumber+0x2e>
 800c0c6:	2b3a      	cmp	r3, #58	; 0x3a
 800c0c8:	d1f9      	bne.n	800c0be <get_ldnumber+0x12>
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0';
 800c0ca:	3101      	adds	r1, #1
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 800c0cc:	428a      	cmp	r2, r1
 800c0ce:	d008      	beq.n	800c0e2 <get_ldnumber+0x36>
	int vol = -1;
 800c0d0:	f04f 30ff 	mov.w	r0, #4294967295
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
 800c0d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0d8:	4770      	bx	lr
		vol = 0;		/* Drive 0 */
 800c0da:	2000      	movs	r0, #0
}
 800c0dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0e0:	4770      	bx	lr
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 800c0e2:	2c30      	cmp	r4, #48	; 0x30
 800c0e4:	d1f4      	bne.n	800c0d0 <get_ldnumber+0x24>
					*path = ++tt;
 800c0e6:	3201      	adds	r2, #1
 800c0e8:	6002      	str	r2, [r0, #0]
					vol = (int)i;
 800c0ea:	2000      	movs	r0, #0
 800c0ec:	e7f6      	b.n	800c0dc <get_ldnumber+0x30>
	int vol = -1;
 800c0ee:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c0f2:	4770      	bx	lr

0800c0f4 <validate>:
static
FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
)
{
 800c0f4:	b538      	push	{r3, r4, r5, lr}
 800c0f6:	460d      	mov	r5, r1
	FRESULT res = FR_INVALID_OBJECT;


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
 800c0f8:	b140      	cbz	r0, 800c10c <validate+0x18>
 800c0fa:	6803      	ldr	r3, [r0, #0]
 800c0fc:	4604      	mov	r4, r0
 800c0fe:	b12b      	cbz	r3, 800c10c <validate+0x18>
 800c100:	781a      	ldrb	r2, [r3, #0]
 800c102:	b11a      	cbz	r2, 800c10c <validate+0x18>
 800c104:	8880      	ldrh	r0, [r0, #4]
 800c106:	88da      	ldrh	r2, [r3, #6]
 800c108:	4290      	cmp	r0, r2
 800c10a:	d003      	beq.n	800c114 <validate+0x20>
	FRESULT res = FR_INVALID_OBJECT;
 800c10c:	2009      	movs	r0, #9
		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
			res = FR_OK;
		}
#endif
	}
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800c10e:	2300      	movs	r3, #0
 800c110:	602b      	str	r3, [r5, #0]
	return res;
}
 800c112:	bd38      	pop	{r3, r4, r5, pc}
		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
 800c114:	7858      	ldrb	r0, [r3, #1]
 800c116:	f7ff fef3 	bl	800bf00 <disk_status>
 800c11a:	f010 0001 	ands.w	r0, r0, #1
 800c11e:	d1f5      	bne.n	800c10c <validate+0x18>
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800c120:	6823      	ldr	r3, [r4, #0]
 800c122:	e7f5      	b.n	800c110 <validate+0x1c>

0800c124 <mem_cpy.part.0>:
void mem_cpy (void* dst, const void* src, UINT cnt) {
 800c124:	3801      	subs	r0, #1
 800c126:	440a      	add	r2, r1
			*d++ = *s++;
 800c128:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c12c:	f800 3f01 	strb.w	r3, [r0, #1]!
		} while (--cnt);
 800c130:	4291      	cmp	r1, r2
 800c132:	d1f9      	bne.n	800c128 <mem_cpy.part.0+0x4>
}
 800c134:	4770      	bx	lr
 800c136:	bf00      	nop

0800c138 <sync_window.part.0>:
FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800c138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
		wsect = fs->winsect;	/* Current sector number */
 800c13c:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 800c13e:	f100 0830 	add.w	r8, r0, #48	; 0x30
FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800c142:	4604      	mov	r4, r0
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 800c144:	462a      	mov	r2, r5
 800c146:	7840      	ldrb	r0, [r0, #1]
 800c148:	4641      	mov	r1, r8
 800c14a:	2301      	movs	r3, #1
 800c14c:	f7ff ff00 	bl	800bf50 <disk_write>
 800c150:	b9c0      	cbnz	r0, 800c184 <sync_window.part.0+0x4c>
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 800c152:	6a22      	ldr	r2, [r4, #32]
 800c154:	69a3      	ldr	r3, [r4, #24]
			fs->wflag = 0;
 800c156:	70e0      	strb	r0, [r4, #3]
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 800c158:	1aaa      	subs	r2, r5, r2
 800c15a:	429a      	cmp	r2, r3
 800c15c:	4607      	mov	r7, r0
 800c15e:	d20e      	bcs.n	800c17e <sync_window.part.0+0x46>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800c160:	78a6      	ldrb	r6, [r4, #2]
 800c162:	2e01      	cmp	r6, #1
 800c164:	d801      	bhi.n	800c16a <sync_window.part.0+0x32>
 800c166:	e00a      	b.n	800c17e <sync_window.part.0+0x46>
 800c168:	69a3      	ldr	r3, [r4, #24]
					disk_write(fs->drv, fs->win, wsect, 1);
 800c16a:	7860      	ldrb	r0, [r4, #1]
					wsect += fs->fsize;
 800c16c:	441d      	add	r5, r3
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800c16e:	3e01      	subs	r6, #1
					disk_write(fs->drv, fs->win, wsect, 1);
 800c170:	462a      	mov	r2, r5
 800c172:	2301      	movs	r3, #1
 800c174:	4641      	mov	r1, r8
 800c176:	f7ff feeb 	bl	800bf50 <disk_write>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800c17a:	2e01      	cmp	r6, #1
 800c17c:	d1f4      	bne.n	800c168 <sync_window.part.0+0x30>
}
 800c17e:	4638      	mov	r0, r7
 800c180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			res = FR_DISK_ERR;
 800c184:	2701      	movs	r7, #1
}
 800c186:	4638      	mov	r0, r7
 800c188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c18c <sync_fs>:
{
 800c18c:	b570      	push	{r4, r5, r6, lr}
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800c18e:	78c3      	ldrb	r3, [r0, #3]
{
 800c190:	4604      	mov	r4, r0
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800c192:	b95b      	cbnz	r3, 800c1ac <sync_fs+0x20>
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 800c194:	7823      	ldrb	r3, [r4, #0]
 800c196:	2b03      	cmp	r3, #3
 800c198:	d00f      	beq.n	800c1ba <sync_fs+0x2e>
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 800c19a:	2200      	movs	r2, #0
 800c19c:	7860      	ldrb	r0, [r4, #1]
 800c19e:	4611      	mov	r1, r2
 800c1a0:	f7ff fee4 	bl	800bf6c <disk_ioctl>
 800c1a4:	3800      	subs	r0, #0
 800c1a6:	bf18      	it	ne
 800c1a8:	2001      	movne	r0, #1
}
 800c1aa:	bd70      	pop	{r4, r5, r6, pc}
 800c1ac:	f7ff ffc4 	bl	800c138 <sync_window.part.0>
	if (res == FR_OK) {
 800c1b0:	2800      	cmp	r0, #0
 800c1b2:	d1fa      	bne.n	800c1aa <sync_fs+0x1e>
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 800c1b4:	7823      	ldrb	r3, [r4, #0]
 800c1b6:	2b03      	cmp	r3, #3
 800c1b8:	d1ef      	bne.n	800c19a <sync_fs+0xe>
 800c1ba:	7923      	ldrb	r3, [r4, #4]
 800c1bc:	2b01      	cmp	r3, #1
 800c1be:	d1ec      	bne.n	800c19a <sync_fs+0xe>
			mem_set(fs->win, 0, SS(fs));
 800c1c0:	f104 0130 	add.w	r1, r4, #48	; 0x30
	BYTE *d = (BYTE*)dst;
 800c1c4:	460b      	mov	r3, r1
 800c1c6:	f504 720c 	add.w	r2, r4, #560	; 0x230
		*d++ = (BYTE)val;
 800c1ca:	2500      	movs	r5, #0
 800c1cc:	f803 5b01 	strb.w	r5, [r3], #1
	} while (--cnt);
 800c1d0:	429a      	cmp	r2, r3
 800c1d2:	d1fb      	bne.n	800c1cc <sync_fs+0x40>
			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 800c1d4:	e9d4 3003 	ldrd	r3, r0, [r4, #12]
	*ptr++ = (BYTE)val; val >>= 8;
 800c1d8:	0a06      	lsrs	r6, r0, #8
 800c1da:	f884 0218 	strb.w	r0, [r4, #536]	; 0x218
	*ptr++ = (BYTE)val; val >>= 8;
 800c1de:	f884 6219 	strb.w	r6, [r4, #537]	; 0x219
 800c1e2:	0c06      	lsrs	r6, r0, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800c1e4:	0e00      	lsrs	r0, r0, #24
			fs->winsect = fs->volbase + 1;
 800c1e6:	69e2      	ldr	r2, [r4, #28]
	*ptr++ = (BYTE)val; val >>= 8;
 800c1e8:	f884 621a 	strb.w	r6, [r4, #538]	; 0x21a
	*ptr++ = (BYTE)val;
 800c1ec:	f884 021b 	strb.w	r0, [r4, #539]	; 0x21b
	*ptr++ = (BYTE)val; val >>= 8;
 800c1f0:	0a1e      	lsrs	r6, r3, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800c1f2:	0c18      	lsrs	r0, r3, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800c1f4:	f884 321c 	strb.w	r3, [r4, #540]	; 0x21c
	*ptr++ = (BYTE)val; val >>= 8;
 800c1f8:	0e1b      	lsrs	r3, r3, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800c1fa:	f884 621d 	strb.w	r6, [r4, #541]	; 0x21d
	*ptr++ = (BYTE)val; val >>= 8;
 800c1fe:	f884 021e 	strb.w	r0, [r4, #542]	; 0x21e
	*ptr++ = (BYTE)val; val >>= 8;
 800c202:	2655      	movs	r6, #85	; 0x55
	*ptr++ = (BYTE)val;
 800c204:	20aa      	movs	r0, #170	; 0xaa
	*ptr++ = (BYTE)val;
 800c206:	f884 321f 	strb.w	r3, [r4, #543]	; 0x21f
	*ptr++ = (BYTE)val; val >>= 8;
 800c20a:	2352      	movs	r3, #82	; 0x52
			fs->winsect = fs->volbase + 1;
 800c20c:	3201      	adds	r2, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800c20e:	f884 622e 	strb.w	r6, [r4, #558]	; 0x22e
	*ptr++ = (BYTE)val;
 800c212:	f884 022f 	strb.w	r0, [r4, #559]	; 0x22f
	*ptr++ = (BYTE)val; val >>= 8;
 800c216:	2661      	movs	r6, #97	; 0x61
	*ptr++ = (BYTE)val;
 800c218:	2041      	movs	r0, #65	; 0x41
	*ptr++ = (BYTE)val; val >>= 8;
 800c21a:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
	*ptr++ = (BYTE)val; val >>= 8;
 800c21e:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
	*ptr++ = (BYTE)val; val >>= 8;
 800c222:	2372      	movs	r3, #114	; 0x72
	*ptr++ = (BYTE)val;
 800c224:	f884 0033 	strb.w	r0, [r4, #51]	; 0x33
	*ptr++ = (BYTE)val; val >>= 8;
 800c228:	f884 0216 	strb.w	r0, [r4, #534]	; 0x216
	*ptr++ = (BYTE)val; val >>= 8;
 800c22c:	f884 3214 	strb.w	r3, [r4, #532]	; 0x214
	*ptr++ = (BYTE)val; val >>= 8;
 800c230:	f884 3215 	strb.w	r3, [r4, #533]	; 0x215
			disk_write(fs->drv, fs->win, fs->winsect, 1);
 800c234:	7860      	ldrb	r0, [r4, #1]
			fs->winsect = fs->volbase + 1;
 800c236:	62e2      	str	r2, [r4, #44]	; 0x2c
	*ptr++ = (BYTE)val; val >>= 8;
 800c238:	f884 6032 	strb.w	r6, [r4, #50]	; 0x32
	*ptr++ = (BYTE)val;
 800c23c:	f884 6217 	strb.w	r6, [r4, #535]	; 0x217
			disk_write(fs->drv, fs->win, fs->winsect, 1);
 800c240:	2301      	movs	r3, #1
 800c242:	f7ff fe85 	bl	800bf50 <disk_write>
			fs->fsi_flag = 0;
 800c246:	7125      	strb	r5, [r4, #4]
 800c248:	e7a7      	b.n	800c19a <sync_fs+0xe>
 800c24a:	bf00      	nop

0800c24c <move_window.part.0>:
FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800c24c:	b538      	push	{r3, r4, r5, lr}
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800c24e:	78c3      	ldrb	r3, [r0, #3]
FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800c250:	4604      	mov	r4, r0
 800c252:	460d      	mov	r5, r1
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800c254:	b96b      	cbnz	r3, 800c272 <move_window.part.0+0x26>
			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 800c256:	462a      	mov	r2, r5
 800c258:	7860      	ldrb	r0, [r4, #1]
 800c25a:	2301      	movs	r3, #1
 800c25c:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800c260:	f7ff fe68 	bl	800bf34 <disk_read>
				res = FR_DISK_ERR;
 800c264:	2800      	cmp	r0, #0
 800c266:	bf1c      	itt	ne
 800c268:	f04f 35ff 	movne.w	r5, #4294967295
 800c26c:	2001      	movne	r0, #1
			fs->winsect = sector;
 800c26e:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800c270:	bd38      	pop	{r3, r4, r5, pc}
 800c272:	f7ff ff61 	bl	800c138 <sync_window.part.0>
		if (res == FR_OK) {			/* Fill sector window with new data */
 800c276:	2800      	cmp	r0, #0
 800c278:	d0ed      	beq.n	800c256 <move_window.part.0+0xa>
}
 800c27a:	bd38      	pop	{r3, r4, r5, pc}

0800c27c <check_fs>:
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 800c27c:	f04f 33ff 	mov.w	r3, #4294967295
 800c280:	2200      	movs	r2, #0
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c282:	4299      	cmp	r1, r3
{
 800c284:	b510      	push	{r4, lr}
 800c286:	4604      	mov	r4, r0
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 800c288:	70c2      	strb	r2, [r0, #3]
 800c28a:	62c3      	str	r3, [r0, #44]	; 0x2c
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c28c:	d002      	beq.n	800c294 <check_fs+0x18>
 800c28e:	f7ff ffdd 	bl	800c24c <move_window.part.0>
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 800c292:	bbb0      	cbnz	r0, 800c302 <check_fs+0x86>
	rv = rv << 8 | ptr[0];
 800c294:	f894 122f 	ldrb.w	r1, [r4, #559]	; 0x22f
 800c298:	f894 322e 	ldrb.w	r3, [r4, #558]	; 0x22e
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 800c29c:	f64a 2255 	movw	r2, #43605	; 0xaa55
	rv = rv << 8 | ptr[0];
 800c2a0:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 800c2a4:	4293      	cmp	r3, r2
 800c2a6:	d12a      	bne.n	800c2fe <check_fs+0x82>
	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90)) {
 800c2a8:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c2ac:	2be9      	cmp	r3, #233	; 0xe9
 800c2ae:	d007      	beq.n	800c2c0 <check_fs+0x44>
 800c2b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c2b2:	4a16      	ldr	r2, [pc, #88]	; (800c30c <check_fs+0x90>)
 800c2b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 800c2b8:	4293      	cmp	r3, r2
 800c2ba:	d001      	beq.n	800c2c0 <check_fs+0x44>
	return 2;
 800c2bc:	2002      	movs	r0, #2
}
 800c2be:	bd10      	pop	{r4, pc}
	rv = rv << 8 | ptr[2];
 800c2c0:	f8b4 0068 	ldrh.w	r0, [r4, #104]	; 0x68
	rv = rv << 8 | ptr[1];
 800c2c4:	f894 2067 	ldrb.w	r2, [r4, #103]	; 0x67
	rv = rv << 8 | ptr[0];
 800c2c8:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string */
 800c2cc:	4910      	ldr	r1, [pc, #64]	; (800c310 <check_fs+0x94>)
	rv = rv << 8 | ptr[1];
 800c2ce:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
	rv = rv << 8 | ptr[0];
 800c2d2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string */
 800c2d6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800c2da:	428b      	cmp	r3, r1
 800c2dc:	d013      	beq.n	800c306 <check_fs+0x8a>
	rv = rv << 8 | ptr[2];
 800c2de:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
	rv = rv << 8 | ptr[1];
 800c2e2:	f894 3083 	ldrb.w	r3, [r4, #131]	; 0x83
	rv = rv << 8 | ptr[0];
 800c2e6:	f894 0082 	ldrb.w	r0, [r4, #130]	; 0x82
		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 800c2ea:	4a0a      	ldr	r2, [pc, #40]	; (800c314 <check_fs+0x98>)
	rv = rv << 8 | ptr[1];
 800c2ec:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
	rv = rv << 8 | ptr[0];
 800c2f0:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 800c2f4:	4290      	cmp	r0, r2
 800c2f6:	bf14      	ite	ne
 800c2f8:	2002      	movne	r0, #2
 800c2fa:	2000      	moveq	r0, #0
}
 800c2fc:	bd10      	pop	{r4, pc}
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 800c2fe:	2003      	movs	r0, #3
}
 800c300:	bd10      	pop	{r4, pc}
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 800c302:	2004      	movs	r0, #4
}
 800c304:	bd10      	pop	{r4, pc}
		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 800c306:	2000      	movs	r0, #0
}
 800c308:	bd10      	pop	{r4, pc}
 800c30a:	bf00      	nop
 800c30c:	009000eb 	.word	0x009000eb
 800c310:	00544146 	.word	0x00544146
 800c314:	33544146 	.word	0x33544146

0800c318 <find_volume>:
{
 800c318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	*rfs = 0;
 800c31c:	2300      	movs	r3, #0
{
 800c31e:	b084      	sub	sp, #16
	*rfs = 0;
 800c320:	600b      	str	r3, [r1, #0]
{
 800c322:	460f      	mov	r7, r1
 800c324:	4615      	mov	r5, r2
	vol = get_ldnumber(path);
 800c326:	f7ff fec1 	bl	800c0ac <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
 800c32a:	1e06      	subs	r6, r0, #0
 800c32c:	f2c0 80fb 	blt.w	800c526 <find_volume+0x20e>
	fs = FatFs[vol];					/* Get pointer to the file system object */
 800c330:	4bc7      	ldr	r3, [pc, #796]	; (800c650 <find_volume+0x338>)
 800c332:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 800c336:	2c00      	cmp	r4, #0
 800c338:	f000 8103 	beq.w	800c542 <find_volume+0x22a>
	*rfs = fs;							/* Return pointer to the file system object */
 800c33c:	603c      	str	r4, [r7, #0]
	if (fs->fs_type) {					/* If the volume has been mounted */
 800c33e:	7823      	ldrb	r3, [r4, #0]
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
 800c340:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
	if (fs->fs_type) {					/* If the volume has been mounted */
 800c344:	b183      	cbz	r3, 800c368 <find_volume+0x50>
		stat = disk_status(fs->drv);
 800c346:	7860      	ldrb	r0, [r4, #1]
 800c348:	f7ff fdda 	bl	800bf00 <disk_status>
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 800c34c:	07c1      	lsls	r1, r0, #31
 800c34e:	d40b      	bmi.n	800c368 <find_volume+0x50>
			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 800c350:	2d00      	cmp	r5, #0
 800c352:	f000 80df 	beq.w	800c514 <find_volume+0x1fc>
 800c356:	f010 0504 	ands.w	r5, r0, #4
 800c35a:	f000 80db 	beq.w	800c514 <find_volume+0x1fc>
				return FR_WRITE_PROTECTED;
 800c35e:	250a      	movs	r5, #10
}
 800c360:	4628      	mov	r0, r5
 800c362:	b004      	add	sp, #16
 800c364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 800c368:	b2f0      	uxtb	r0, r6
	fs->fs_type = 0;					/* Clear the file system object */
 800c36a:	2300      	movs	r3, #0
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 800c36c:	7060      	strb	r0, [r4, #1]
	fs->fs_type = 0;					/* Clear the file system object */
 800c36e:	7023      	strb	r3, [r4, #0]
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 800c370:	f7ff fdd0 	bl	800bf14 <disk_initialize>
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 800c374:	07c2      	lsls	r2, r0, #31
 800c376:	f100 80d1 	bmi.w	800c51c <find_volume+0x204>
	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
 800c37a:	b10d      	cbz	r5, 800c380 <find_volume+0x68>
 800c37c:	0743      	lsls	r3, r0, #29
 800c37e:	d4ee      	bmi.n	800c35e <find_volume+0x46>
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 800c380:	2100      	movs	r1, #0
 800c382:	4620      	mov	r0, r4
 800c384:	f7ff ff7a 	bl	800c27c <check_fs>
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 800c388:	2802      	cmp	r0, #2
 800c38a:	f000 80a4 	beq.w	800c4d6 <find_volume+0x1be>
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 800c38e:	2804      	cmp	r0, #4
 800c390:	f000 80ce 	beq.w	800c530 <find_volume+0x218>
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 800c394:	2801      	cmp	r0, #1
	bsect = 0;
 800c396:	bf98      	it	ls
 800c398:	2600      	movls	r6, #0
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 800c39a:	f200 80ba 	bhi.w	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[0];
 800c39e:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 800c3a2:	f894 303b 	ldrb.w	r3, [r4, #59]	; 0x3b
 800c3a6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
 800c3aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c3ae:	f040 80b0 	bne.w	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[0];
 800c3b2:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
 800c3b6:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 800c3ba:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
 800c3be:	d109      	bne.n	800c3d4 <find_volume+0xbc>
	rv = rv << 8 | ptr[2];
 800c3c0:	f8b4 1056 	ldrh.w	r1, [r4, #86]	; 0x56
	rv = rv << 8 | ptr[1];
 800c3c4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
	rv = rv << 8 | ptr[0];
 800c3c8:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
	rv = rv << 8 | ptr[1];
 800c3cc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
	rv = rv << 8 | ptr[0];
 800c3d0:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
 800c3d4:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
		fs->fsize = fasize;
 800c3d8:	61a3      	str	r3, [r4, #24]
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 800c3da:	1e51      	subs	r1, r2, #1
 800c3dc:	2901      	cmp	r1, #1
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
 800c3de:	70a2      	strb	r2, [r4, #2]
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 800c3e0:	f200 8097 	bhi.w	800c512 <find_volume+0x1fa>
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
 800c3e4:	f894 703d 	ldrb.w	r7, [r4, #61]	; 0x3d
 800c3e8:	b2b9      	uxth	r1, r7
 800c3ea:	8161      	strh	r1, [r4, #10]
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 800c3ec:	2900      	cmp	r1, #0
 800c3ee:	f000 8090 	beq.w	800c512 <find_volume+0x1fa>
 800c3f2:	1e79      	subs	r1, r7, #1
 800c3f4:	4239      	tst	r1, r7
 800c3f6:	f040 808c 	bne.w	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[0];
 800c3fa:	f894 0042 	ldrb.w	r0, [r4, #66]	; 0x42
 800c3fe:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800c402:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 800c406:	f011 0f0f 	tst.w	r1, #15
	rv = rv << 8 | ptr[0];
 800c40a:	468c      	mov	ip, r1
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
 800c40c:	8121      	strh	r1, [r4, #8]
	rv = rv << 8 | ptr[0];
 800c40e:	b20d      	sxth	r5, r1
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 800c410:	d17f      	bne.n	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[0];
 800c412:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800c416:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 800c41a:	ea51 2100 	orrs.w	r1, r1, r0, lsl #8
 800c41e:	d109      	bne.n	800c434 <find_volume+0x11c>
	rv = rv << 8 | ptr[2];
 800c420:	f8b4 e052 	ldrh.w	lr, [r4, #82]	; 0x52
	rv = rv << 8 | ptr[1];
 800c424:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
	rv = rv << 8 | ptr[0];
 800c428:	f894 1050 	ldrb.w	r1, [r4, #80]	; 0x50
	rv = rv << 8 | ptr[1];
 800c42c:	ea40 200e 	orr.w	r0, r0, lr, lsl #8
	rv = rv << 8 | ptr[0];
 800c430:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
	rv = rv << 8 | ptr[0];
 800c434:	f894 e03f 	ldrb.w	lr, [r4, #63]	; 0x3f
 800c438:	f894 003e 	ldrb.w	r0, [r4, #62]	; 0x3e
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 800c43c:	ea50 200e 	orrs.w	r0, r0, lr, lsl #8
 800c440:	d067      	beq.n	800c512 <find_volume+0x1fa>
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 800c442:	fb03 f202 	mul.w	r2, r3, r2
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
 800c446:	eb00 1e1c 	add.w	lr, r0, ip, lsr #4
 800c44a:	4496      	add	lr, r2
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 800c44c:	4571      	cmp	r1, lr
 800c44e:	d360      	bcc.n	800c512 <find_volume+0x1fa>
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 800c450:	eba1 010e 	sub.w	r1, r1, lr
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 800c454:	42b9      	cmp	r1, r7
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 800c456:	fbb1 f8f7 	udiv	r8, r1, r7
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 800c45a:	d35a      	bcc.n	800c512 <find_volume+0x1fa>
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 800c45c:	f64f 71f5 	movw	r1, #65525	; 0xfff5
 800c460:	4588      	cmp	r8, r1
 800c462:	d870      	bhi.n	800c546 <find_volume+0x22e>
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 800c464:	f640 71f5 	movw	r1, #4085	; 0xff5
 800c468:	4588      	cmp	r8, r1
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800c46a:	4430      	add	r0, r6
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800c46c:	f108 0102 	add.w	r1, r8, #2
		fs->database = bsect + sysect;					/* Data start sector */
 800c470:	eb0e 0506 	add.w	r5, lr, r6
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800c474:	6161      	str	r1, [r4, #20]
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800c476:	6220      	str	r0, [r4, #32]
		fs->database = bsect + sysect;					/* Data start sector */
 800c478:	62a5      	str	r5, [r4, #40]	; 0x28
		fs->volbase = bsect;							/* Volume start sector */
 800c47a:	61e6      	str	r6, [r4, #28]
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 800c47c:	f200 8097 	bhi.w	800c5ae <find_volume+0x296>
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
 800c480:	f1bc 0f00 	cmp.w	ip, #0
 800c484:	d045      	beq.n	800c512 <find_volume+0x1fa>
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800c486:	4410      	add	r0, r2
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800c488:	eb01 0541 	add.w	r5, r1, r1, lsl #1
 800c48c:	f001 0201 	and.w	r2, r1, #1
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800c490:	6260      	str	r0, [r4, #36]	; 0x24
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800c492:	eb02 0255 	add.w	r2, r2, r5, lsr #1
 800c496:	2001      	movs	r0, #1
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800c498:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
 800c49c:	ebb3 2f52 	cmp.w	r3, r2, lsr #9
 800c4a0:	d337      	bcc.n	800c512 <find_volume+0x1fa>
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
 800c4a2:	f04f 33ff 	mov.w	r3, #4294967295
 800c4a6:	e9c4 3303 	strd	r3, r3, [r4, #12]
		fs->fsi_flag = 0x80;
 800c4aa:	2280      	movs	r2, #128	; 0x80
 800c4ac:	7122      	strb	r2, [r4, #4]
	fs->id = ++Fsid;		/* File system mount ID */
 800c4ae:	4969      	ldr	r1, [pc, #420]	; (800c654 <find_volume+0x33c>)
		if (Files[i].fs == fs) Files[i].fs = 0;
 800c4b0:	4a69      	ldr	r2, [pc, #420]	; (800c658 <find_volume+0x340>)
	fs->id = ++Fsid;		/* File system mount ID */
 800c4b2:	880b      	ldrh	r3, [r1, #0]
		if (Files[i].fs == fs) Files[i].fs = 0;
 800c4b4:	6815      	ldr	r5, [r2, #0]
	fs->fs_type = fmt;		/* FAT sub-type */
 800c4b6:	7020      	strb	r0, [r4, #0]
	fs->id = ++Fsid;		/* File system mount ID */
 800c4b8:	3301      	adds	r3, #1
 800c4ba:	b29b      	uxth	r3, r3
		if (Files[i].fs == fs) Files[i].fs = 0;
 800c4bc:	42ac      	cmp	r4, r5
	fs->id = ++Fsid;		/* File system mount ID */
 800c4be:	800b      	strh	r3, [r1, #0]
 800c4c0:	80e3      	strh	r3, [r4, #6]
		if (Files[i].fs == fs) Files[i].fs = 0;
 800c4c2:	bf04      	itt	eq
 800c4c4:	2300      	moveq	r3, #0
 800c4c6:	6013      	streq	r3, [r2, #0]
 800c4c8:	6913      	ldr	r3, [r2, #16]
 800c4ca:	429c      	cmp	r4, r3
 800c4cc:	f04f 0500 	mov.w	r5, #0
 800c4d0:	d120      	bne.n	800c514 <find_volume+0x1fc>
 800c4d2:	6115      	str	r5, [r2, #16]
 800c4d4:	e01e      	b.n	800c514 <find_volume+0x1fc>
 800c4d6:	466d      	mov	r5, sp
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 800c4d8:	4629      	mov	r1, r5
 800c4da:	f504 73f7 	add.w	r3, r4, #494	; 0x1ee
 800c4de:	f204 262e 	addw	r6, r4, #558	; 0x22e
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 800c4e2:	791a      	ldrb	r2, [r3, #4]
 800c4e4:	b132      	cbz	r2, 800c4f4 <find_volume+0x1dc>
	rv = rv << 8 | ptr[2];
 800c4e6:	895f      	ldrh	r7, [r3, #10]
	rv = rv << 8 | ptr[1];
 800c4e8:	7a58      	ldrb	r0, [r3, #9]
	rv = rv << 8 | ptr[0];
 800c4ea:	7a1a      	ldrb	r2, [r3, #8]
	rv = rv << 8 | ptr[1];
 800c4ec:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
	rv = rv << 8 | ptr[0];
 800c4f0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
	return rv;
 800c4f4:	3310      	adds	r3, #16
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 800c4f6:	42b3      	cmp	r3, r6
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 800c4f8:	f841 2b04 	str.w	r2, [r1], #4
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 800c4fc:	d1f1      	bne.n	800c4e2 <find_volume+0x1ca>
 800c4fe:	f105 0710 	add.w	r7, r5, #16
			bsect = br[i];
 800c502:	f855 6b04 	ldr.w	r6, [r5], #4
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 800c506:	b9ae      	cbnz	r6, 800c534 <find_volume+0x21c>
 800c508:	2003      	movs	r0, #3
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 800c50a:	42af      	cmp	r7, r5
 800c50c:	d1f9      	bne.n	800c502 <find_volume+0x1ea>
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 800c50e:	2804      	cmp	r0, #4
 800c510:	d00e      	beq.n	800c530 <find_volume+0x218>
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 800c512:	250d      	movs	r5, #13
}
 800c514:	4628      	mov	r0, r5
 800c516:	b004      	add	sp, #16
 800c518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 800c51c:	2503      	movs	r5, #3
}
 800c51e:	4628      	mov	r0, r5
 800c520:	b004      	add	sp, #16
 800c522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (vol < 0) return FR_INVALID_DRIVE;
 800c526:	250b      	movs	r5, #11
}
 800c528:	4628      	mov	r0, r5
 800c52a:	b004      	add	sp, #16
 800c52c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 800c530:	2501      	movs	r5, #1
 800c532:	e7ef      	b.n	800c514 <find_volume+0x1fc>
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 800c534:	4631      	mov	r1, r6
 800c536:	4620      	mov	r0, r4
 800c538:	f7ff fea0 	bl	800c27c <check_fs>
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 800c53c:	2801      	cmp	r0, #1
 800c53e:	d8e4      	bhi.n	800c50a <find_volume+0x1f2>
 800c540:	e72d      	b.n	800c39e <find_volume+0x86>
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 800c542:	250c      	movs	r5, #12
 800c544:	e7e6      	b.n	800c514 <find_volume+0x1fc>
	rv = rv << 8 | ptr[0];
 800c546:	f894 205b 	ldrb.w	r2, [r4, #91]	; 0x5b
 800c54a:	f894 105a 	ldrb.w	r1, [r4, #90]	; 0x5a
		fs->volbase = bsect;							/* Volume start sector */
 800c54e:	61e6      	str	r6, [r4, #28]
	rv = rv << 8 | ptr[0];
 800c550:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
 800c554:	4329      	orrs	r1, r5
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800c556:	f108 0202 	add.w	r2, r8, #2
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800c55a:	4430      	add	r0, r6
		fs->database = bsect + sysect;					/* Data start sector */
 800c55c:	eb0e 0706 	add.w	r7, lr, r6
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
 800c560:	b209      	sxth	r1, r1
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800c562:	6162      	str	r2, [r4, #20]
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800c564:	6220      	str	r0, [r4, #32]
		fs->database = bsect + sysect;					/* Data start sector */
 800c566:	62a7      	str	r7, [r4, #40]	; 0x28
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
 800c568:	2900      	cmp	r1, #0
 800c56a:	d1d2      	bne.n	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[2];
 800c56c:	f8b4 505e 	ldrh.w	r5, [r4, #94]	; 0x5e
	rv = rv << 8 | ptr[1];
 800c570:	f894 005d 	ldrb.w	r0, [r4, #93]	; 0x5d
	rv = rv << 8 | ptr[0];
 800c574:	f894 105c 	ldrb.w	r1, [r4, #92]	; 0x5c
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 800c578:	0092      	lsls	r2, r2, #2
	rv = rv << 8 | ptr[1];
 800c57a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800c57e:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
	rv = rv << 8 | ptr[0];
 800c582:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800c586:	ebb3 2f52 	cmp.w	r3, r2, lsr #9
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 800c58a:	6261      	str	r1, [r4, #36]	; 0x24
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800c58c:	d3c1      	bcc.n	800c512 <find_volume+0x1fa>
	rv = rv << 8 | ptr[0];
 800c58e:	f894 1061 	ldrb.w	r1, [r4, #97]	; 0x61
 800c592:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 800c596:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
 800c59a:	f04f 32ff 	mov.w	r2, #4294967295
		fs->fsi_flag = 0x80;
 800c59e:	2180      	movs	r1, #128	; 0x80
			&& ld_word(fs->win + BPB_FSInfo32) == 1
 800c5a0:	2b01      	cmp	r3, #1
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
 800c5a2:	e9c4 2203 	strd	r2, r2, [r4, #12]
		fs->fsi_flag = 0x80;
 800c5a6:	7121      	strb	r1, [r4, #4]
			&& ld_word(fs->win + BPB_FSInfo32) == 1
 800c5a8:	d009      	beq.n	800c5be <find_volume+0x2a6>
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
 800c5aa:	2003      	movs	r0, #3
 800c5ac:	e77f      	b.n	800c4ae <find_volume+0x196>
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
 800c5ae:	f1bc 0f00 	cmp.w	ip, #0
 800c5b2:	d0ae      	beq.n	800c512 <find_volume+0x1fa>
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800c5b4:	4402      	add	r2, r0
 800c5b6:	6262      	str	r2, [r4, #36]	; 0x24
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 800c5b8:	2002      	movs	r0, #2
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800c5ba:	004a      	lsls	r2, r1, #1
 800c5bc:	e76c      	b.n	800c498 <find_volume+0x180>
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c5be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			&& move_window(fs, bsect + 1) == FR_OK)
 800c5c0:	1c71      	adds	r1, r6, #1
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c5c2:	4299      	cmp	r1, r3
 800c5c4:	d004      	beq.n	800c5d0 <find_volume+0x2b8>
 800c5c6:	4620      	mov	r0, r4
 800c5c8:	f7ff fe40 	bl	800c24c <move_window.part.0>
			&& move_window(fs, bsect + 1) == FR_OK)
 800c5cc:	2800      	cmp	r0, #0
 800c5ce:	d1ec      	bne.n	800c5aa <find_volume+0x292>
	rv = rv << 8 | ptr[0];
 800c5d0:	f894 222f 	ldrb.w	r2, [r4, #559]	; 0x22f
 800c5d4:	f894 322e 	ldrb.w	r3, [r4, #558]	; 0x22e
 800c5d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800c5dc:	f64a 2255 	movw	r2, #43605	; 0xaa55
			fs->fsi_flag = 0;
 800c5e0:	2100      	movs	r1, #0
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800c5e2:	4293      	cmp	r3, r2
			fs->fsi_flag = 0;
 800c5e4:	7121      	strb	r1, [r4, #4]
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800c5e6:	d1e0      	bne.n	800c5aa <find_volume+0x292>
	rv = rv << 8 | ptr[2];
 800c5e8:	8e60      	ldrh	r0, [r4, #50]	; 0x32
	rv = rv << 8 | ptr[1];
 800c5ea:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
	rv = rv << 8 | ptr[0];
 800c5ee:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 800c5f2:	491a      	ldr	r1, [pc, #104]	; (800c65c <find_volume+0x344>)
	rv = rv << 8 | ptr[1];
 800c5f4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
	rv = rv << 8 | ptr[0];
 800c5f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 800c5fc:	428b      	cmp	r3, r1
 800c5fe:	d1d4      	bne.n	800c5aa <find_volume+0x292>
	rv = rv << 8 | ptr[2];
 800c600:	f8b4 0216 	ldrh.w	r0, [r4, #534]	; 0x216
	rv = rv << 8 | ptr[1];
 800c604:	f894 2215 	ldrb.w	r2, [r4, #533]	; 0x215
	rv = rv << 8 | ptr[0];
 800c608:	f894 3214 	ldrb.w	r3, [r4, #532]	; 0x214
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 800c60c:	f101 51ff 	add.w	r1, r1, #534773760	; 0x1fe00000
 800c610:	f501 5100 	add.w	r1, r1, #8192	; 0x2000
	rv = rv << 8 | ptr[1];
 800c614:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 800c618:	3120      	adds	r1, #32
	rv = rv << 8 | ptr[0];
 800c61a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 800c61e:	428b      	cmp	r3, r1
 800c620:	d1c3      	bne.n	800c5aa <find_volume+0x292>
	rv = rv << 8 | ptr[2];
 800c622:	f8b4 621a 	ldrh.w	r6, [r4, #538]	; 0x21a
	rv = rv << 8 | ptr[1];
 800c626:	f894 0219 	ldrb.w	r0, [r4, #537]	; 0x219
	rv = rv << 8 | ptr[2];
 800c62a:	f8b4 521e 	ldrh.w	r5, [r4, #542]	; 0x21e
	rv = rv << 8 | ptr[1];
 800c62e:	f894 121d 	ldrb.w	r1, [r4, #541]	; 0x21d
	rv = rv << 8 | ptr[0];
 800c632:	f894 2218 	ldrb.w	r2, [r4, #536]	; 0x218
 800c636:	f894 321c 	ldrb.w	r3, [r4, #540]	; 0x21c
	rv = rv << 8 | ptr[1];
 800c63a:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
 800c63e:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
	rv = rv << 8 | ptr[0];
 800c642:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800c646:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
 800c64a:	e9c4 3203 	strd	r3, r2, [r4, #12]
 800c64e:	e7ac      	b.n	800c5aa <find_volume+0x292>
 800c650:	20002c44 	.word	0x20002c44
 800c654:	20002c68 	.word	0x20002c68
 800c658:	20002c48 	.word	0x20002c48
 800c65c:	41615252 	.word	0x41615252

0800c660 <put_fat.part.0>:
FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
 800c660:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		switch (fs->fs_type) {
 800c664:	7803      	ldrb	r3, [r0, #0]
 800c666:	2b02      	cmp	r3, #2
FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
 800c668:	4604      	mov	r4, r0
 800c66a:	460d      	mov	r5, r1
 800c66c:	4616      	mov	r6, r2
		switch (fs->fs_type) {
 800c66e:	d006      	beq.n	800c67e <put_fat.part.0+0x1e>
 800c670:	2b03      	cmp	r3, #3
 800c672:	d052      	beq.n	800c71a <put_fat.part.0+0xba>
 800c674:	2b01      	cmp	r3, #1
 800c676:	d01b      	beq.n	800c6b0 <put_fat.part.0+0x50>
 800c678:	2002      	movs	r0, #2
}
 800c67a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 800c67e:	6a01      	ldr	r1, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c680:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 800c682:	eb01 2115 	add.w	r1, r1, r5, lsr #8
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c686:	4299      	cmp	r1, r3
 800c688:	d003      	beq.n	800c692 <put_fat.part.0+0x32>
 800c68a:	f7ff fddf 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800c68e:	2800      	cmp	r0, #0
 800c690:	d1f3      	bne.n	800c67a <put_fat.part.0+0x1a>
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 800c692:	006d      	lsls	r5, r5, #1
 800c694:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c698:	f405 75ff 	and.w	r5, r5, #510	; 0x1fe
 800c69c:	195a      	adds	r2, r3, r5
	*ptr++ = (BYTE)val; val >>= 8;
 800c69e:	555e      	strb	r6, [r3, r5]
 800c6a0:	f3c6 2107 	ubfx	r1, r6, #8, #8
			fs->wflag = 1;
 800c6a4:	2301      	movs	r3, #1
	*ptr++ = (BYTE)val;
 800c6a6:	7051      	strb	r1, [r2, #1]
			fs->wflag = 1;
 800c6a8:	70e3      	strb	r3, [r4, #3]
			break;
 800c6aa:	2000      	movs	r0, #0
}
 800c6ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c6b0:	6a01      	ldr	r1, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c6b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
			bc = (UINT)clst; bc += bc / 2;
 800c6b4:	eb05 0755 	add.w	r7, r5, r5, lsr #1
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c6b8:	eb01 2157 	add.w	r1, r1, r7, lsr #9
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c6bc:	4299      	cmp	r1, r3
 800c6be:	d003      	beq.n	800c6c8 <put_fat.part.0+0x68>
 800c6c0:	f7ff fdc4 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800c6c4:	2800      	cmp	r0, #0
 800c6c6:	d1d8      	bne.n	800c67a <put_fat.part.0+0x1a>
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 800c6c8:	07eb      	lsls	r3, r5, #31
			p = fs->win + bc++ % SS(fs);
 800c6ca:	f107 0801 	add.w	r8, r7, #1
 800c6ce:	f104 0930 	add.w	r9, r4, #48	; 0x30
 800c6d2:	f3c7 0708 	ubfx	r7, r7, #0, #9
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 800c6d6:	d543      	bpl.n	800c760 <put_fat.part.0+0x100>
 800c6d8:	f819 3007 	ldrb.w	r3, [r9, r7]
 800c6dc:	f003 030f 	and.w	r3, r3, #15
 800c6e0:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 800c6e4:	f809 3007 	strb.w	r3, [r9, r7]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c6e8:	6a21      	ldr	r1, [r4, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c6ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c6ec:	eb01 2158 	add.w	r1, r1, r8, lsr #9
			fs->wflag = 1;
 800c6f0:	2201      	movs	r2, #1
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c6f2:	4299      	cmp	r1, r3
			fs->wflag = 1;
 800c6f4:	70e2      	strb	r2, [r4, #3]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c6f6:	d004      	beq.n	800c702 <put_fat.part.0+0xa2>
 800c6f8:	4620      	mov	r0, r4
 800c6fa:	f7ff fda7 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800c6fe:	2800      	cmp	r0, #0
 800c700:	d1bb      	bne.n	800c67a <put_fat.part.0+0x1a>
			p = fs->win + bc % SS(fs);
 800c702:	f3c8 0808 	ubfx	r8, r8, #0, #9
 800c706:	44c8      	add	r8, r9
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 800c708:	f3c6 1207 	ubfx	r2, r6, #4, #8
			fs->wflag = 1;
 800c70c:	2301      	movs	r3, #1
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 800c70e:	f888 2000 	strb.w	r2, [r8]
			fs->wflag = 1;
 800c712:	70e3      	strb	r3, [r4, #3]
			break;
 800c714:	2000      	movs	r0, #0
}
 800c716:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 800c71a:	6a01      	ldr	r1, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c71c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 800c71e:	eb01 11d5 	add.w	r1, r1, r5, lsr #7
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c722:	4299      	cmp	r1, r3
 800c724:	d003      	beq.n	800c72e <put_fat.part.0+0xce>
 800c726:	f7ff fd91 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800c72a:	2800      	cmp	r0, #0
 800c72c:	d1a5      	bne.n	800c67a <put_fat.part.0+0x1a>
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
 800c72e:	00ad      	lsls	r5, r5, #2
 800c730:	f405 75fe 	and.w	r5, r5, #508	; 0x1fc
 800c734:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800c738:	1948      	adds	r0, r1, r5
 800c73a:	f026 4270 	bic.w	r2, r6, #4026531840	; 0xf0000000
	rv = rv << 8 | ptr[2];
 800c73e:	8843      	ldrh	r3, [r0, #2]
	rv = rv << 8 | ptr[0];
 800c740:	041b      	lsls	r3, r3, #16
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
 800c742:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c746:	4313      	orrs	r3, r2
	*ptr++ = (BYTE)val; val >>= 8;
 800c748:	554b      	strb	r3, [r1, r5]
 800c74a:	0a1f      	lsrs	r7, r3, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800c74c:	0c1e      	lsrs	r6, r3, #16
			fs->wflag = 1;
 800c74e:	2201      	movs	r2, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800c750:	0e1b      	lsrs	r3, r3, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800c752:	7047      	strb	r7, [r0, #1]
	*ptr++ = (BYTE)val; val >>= 8;
 800c754:	7086      	strb	r6, [r0, #2]
	*ptr++ = (BYTE)val;
 800c756:	70c3      	strb	r3, [r0, #3]
			fs->wflag = 1;
 800c758:	70e2      	strb	r2, [r4, #3]
			break;
 800c75a:	2000      	movs	r0, #0
}
 800c75c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 800c760:	f809 6007 	strb.w	r6, [r9, r7]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c764:	6a21      	ldr	r1, [r4, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c766:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800c768:	eb01 2158 	add.w	r1, r1, r8, lsr #9
			fs->wflag = 1;
 800c76c:	2201      	movs	r2, #1
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c76e:	4299      	cmp	r1, r3
			fs->wflag = 1;
 800c770:	70e2      	strb	r2, [r4, #3]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c772:	d005      	beq.n	800c780 <put_fat.part.0+0x120>
 800c774:	4620      	mov	r0, r4
 800c776:	f7ff fd69 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800c77a:	2800      	cmp	r0, #0
 800c77c:	f47f af7d 	bne.w	800c67a <put_fat.part.0+0x1a>
			p = fs->win + bc % SS(fs);
 800c780:	f3c8 0808 	ubfx	r8, r8, #0, #9
 800c784:	44c8      	add	r8, r9
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 800c786:	f3c6 2203 	ubfx	r2, r6, #8, #4
 800c78a:	f898 1000 	ldrb.w	r1, [r8]
 800c78e:	f021 060f 	bic.w	r6, r1, #15
 800c792:	4332      	orrs	r2, r6
 800c794:	e7ba      	b.n	800c70c <put_fat.part.0+0xac>
 800c796:	bf00      	nop

0800c798 <get_fat.isra.0>:
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
 800c798:	2901      	cmp	r1, #1
 800c79a:	d90e      	bls.n	800c7ba <get_fat.isra.0+0x22>
DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
 800c79c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
 800c79e:	6943      	ldr	r3, [r0, #20]
 800c7a0:	4299      	cmp	r1, r3
 800c7a2:	460c      	mov	r4, r1
 800c7a4:	4605      	mov	r5, r0
 800c7a6:	d206      	bcs.n	800c7b6 <get_fat.isra.0+0x1e>
		switch (fs->fs_type) {
 800c7a8:	7803      	ldrb	r3, [r0, #0]
 800c7aa:	2b02      	cmp	r3, #2
 800c7ac:	d046      	beq.n	800c83c <get_fat.isra.0+0xa4>
 800c7ae:	2b03      	cmp	r3, #3
 800c7b0:	d02c      	beq.n	800c80c <get_fat.isra.0+0x74>
 800c7b2:	2b01      	cmp	r3, #1
 800c7b4:	d003      	beq.n	800c7be <get_fat.isra.0+0x26>
 800c7b6:	2001      	movs	r0, #1
}
 800c7b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		val = 1;	/* Internal error */
 800c7ba:	2001      	movs	r0, #1
}
 800c7bc:	4770      	bx	lr
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c7be:	6a03      	ldr	r3, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c7c0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
			bc = (UINT)clst; bc += bc / 2;
 800c7c2:	eb01 0751 	add.w	r7, r1, r1, lsr #1
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c7c6:	eb03 2157 	add.w	r1, r3, r7, lsr #9
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c7ca:	4291      	cmp	r1, r2
 800c7cc:	d005      	beq.n	800c7da <get_fat.isra.0+0x42>
 800c7ce:	f7ff fd3d 	bl	800c24c <move_window.part.0>
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c7d2:	2800      	cmp	r0, #0
 800c7d4:	d13b      	bne.n	800c84e <get_fat.isra.0+0xb6>
 800c7d6:	6a2b      	ldr	r3, [r5, #32]
 800c7d8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
			wc = fs->win[bc++ % SS(fs)];
 800c7da:	f3c7 0008 	ubfx	r0, r7, #0, #9
 800c7de:	3701      	adds	r7, #1
 800c7e0:	4428      	add	r0, r5
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c7e2:	eb03 2157 	add.w	r1, r3, r7, lsr #9
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c7e6:	4291      	cmp	r1, r2
			wc = fs->win[bc++ % SS(fs)];
 800c7e8:	f890 6030 	ldrb.w	r6, [r0, #48]	; 0x30
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c7ec:	d003      	beq.n	800c7f6 <get_fat.isra.0+0x5e>
 800c7ee:	4628      	mov	r0, r5
 800c7f0:	f7ff fd2c 	bl	800c24c <move_window.part.0>
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c7f4:	bb58      	cbnz	r0, 800c84e <get_fat.isra.0+0xb6>
			wc |= fs->win[bc % SS(fs)] << 8;
 800c7f6:	f3c7 0708 	ubfx	r7, r7, #0, #9
 800c7fa:	443d      	add	r5, r7
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800c7fc:	07e3      	lsls	r3, r4, #31
			wc |= fs->win[bc % SS(fs)] << 8;
 800c7fe:	f895 0030 	ldrb.w	r0, [r5, #48]	; 0x30
 800c802:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800c806:	d52f      	bpl.n	800c868 <get_fat.isra.0+0xd0>
 800c808:	0900      	lsrs	r0, r0, #4
}
 800c80a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 800c80c:	6a01      	ldr	r1, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c80e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 800c810:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c814:	4299      	cmp	r1, r3
 800c816:	d002      	beq.n	800c81e <get_fat.isra.0+0x86>
 800c818:	f7ff fd18 	bl	800c24c <move_window.part.0>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 800c81c:	b9b8      	cbnz	r0, 800c84e <get_fat.isra.0+0xb6>
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 800c81e:	00a4      	lsls	r4, r4, #2
 800c820:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
 800c824:	3530      	adds	r5, #48	; 0x30
 800c826:	192a      	adds	r2, r5, r4
	rv = rv << 8 | ptr[0];
 800c828:	5d28      	ldrb	r0, [r5, r4]
	rv = rv << 8 | ptr[2];
 800c82a:	8851      	ldrh	r1, [r2, #2]
	rv = rv << 8 | ptr[1];
 800c82c:	7853      	ldrb	r3, [r2, #1]
 800c82e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
	rv = rv << 8 | ptr[0];
 800c832:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 800c836:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
}
 800c83a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 800c83c:	6a01      	ldr	r1, [r0, #32]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c83e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 800c840:	eb01 2114 	add.w	r1, r1, r4, lsr #8
	if (sector != fs->winsect) {	/* Window offset changed? */
 800c844:	4299      	cmp	r1, r3
 800c846:	d005      	beq.n	800c854 <get_fat.isra.0+0xbc>
 800c848:	f7ff fd00 	bl	800c24c <move_window.part.0>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 800c84c:	b110      	cbz	r0, 800c854 <get_fat.isra.0+0xbc>
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 800c84e:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			val = ld_word(fs->win + clst * 2 % SS(fs));
 800c854:	0064      	lsls	r4, r4, #1
 800c856:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
 800c85a:	3530      	adds	r5, #48	; 0x30
 800c85c:	192b      	adds	r3, r5, r4
	rv = rv << 8 | ptr[0];
 800c85e:	5d28      	ldrb	r0, [r5, r4]
 800c860:	785b      	ldrb	r3, [r3, #1]
			val = ld_word(fs->win + clst * 2 % SS(fs));
 800c862:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 800c866:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800c868:	f3c0 000b 	ubfx	r0, r0, #0, #12
}
 800c86c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c86e:	bf00      	nop

0800c870 <create_chain>:
{
 800c870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	FATFS *fs = obj->fs;
 800c874:	6807      	ldr	r7, [r0, #0]
{
 800c876:	4606      	mov	r6, r0
	if (clst == 0) {	/* Create a new chain */
 800c878:	4688      	mov	r8, r1
 800c87a:	2900      	cmp	r1, #0
 800c87c:	d14b      	bne.n	800c916 <create_chain+0xa6>
		scl = fs->last_clst;				/* Get suggested cluster to start from */
 800c87e:	68fd      	ldr	r5, [r7, #12]
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 800c880:	697b      	ldr	r3, [r7, #20]
 800c882:	2d00      	cmp	r5, #0
 800c884:	d13d      	bne.n	800c902 <create_chain+0x92>
 800c886:	2501      	movs	r5, #1
		ncl = scl;	/* Start cluster */
 800c888:	462c      	mov	r4, r5
 800c88a:	e006      	b.n	800c89a <create_chain+0x2a>
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 800c88c:	2801      	cmp	r0, #1
 800c88e:	d03e      	beq.n	800c90e <create_chain+0x9e>
 800c890:	3001      	adds	r0, #1
 800c892:	d051      	beq.n	800c938 <create_chain+0xc8>
			if (ncl == scl) return 0;		/* No free cluster */
 800c894:	42ac      	cmp	r4, r5
 800c896:	d04b      	beq.n	800c930 <create_chain+0xc0>
 800c898:	697b      	ldr	r3, [r7, #20]
			ncl++;							/* Next cluster */
 800c89a:	3401      	adds	r4, #1
			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 800c89c:	429c      	cmp	r4, r3
 800c89e:	d302      	bcc.n	800c8a6 <create_chain+0x36>
				if (ncl > scl) return 0;	/* No free cluster */
 800c8a0:	2d01      	cmp	r5, #1
 800c8a2:	d945      	bls.n	800c930 <create_chain+0xc0>
				ncl = 2;
 800c8a4:	2402      	movs	r4, #2
			cs = get_fat(obj, ncl);			/* Get the cluster status */
 800c8a6:	6830      	ldr	r0, [r6, #0]
 800c8a8:	4621      	mov	r1, r4
 800c8aa:	f7ff ff75 	bl	800c798 <get_fat.isra.0>
			if (cs == 0) break;				/* Found a free cluster */
 800c8ae:	2800      	cmp	r0, #0
 800c8b0:	d1ec      	bne.n	800c88c <create_chain+0x1c>
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800c8b2:	2c01      	cmp	r4, #1
 800c8b4:	d92b      	bls.n	800c90e <create_chain+0x9e>
 800c8b6:	697b      	ldr	r3, [r7, #20]
 800c8b8:	429c      	cmp	r4, r3
 800c8ba:	d228      	bcs.n	800c90e <create_chain+0x9e>
 800c8bc:	f04f 32ff 	mov.w	r2, #4294967295
 800c8c0:	4621      	mov	r1, r4
 800c8c2:	4638      	mov	r0, r7
 800c8c4:	f7ff fecc 	bl	800c660 <put_fat.part.0>
		if (res == FR_OK && clst != 0) {
 800c8c8:	b9f8      	cbnz	r0, 800c90a <create_chain+0x9a>
 800c8ca:	f1b8 0f00 	cmp.w	r8, #0
 800c8ce:	d00b      	beq.n	800c8e8 <create_chain+0x78>
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800c8d0:	f1b8 0f01 	cmp.w	r8, #1
 800c8d4:	d91b      	bls.n	800c90e <create_chain+0x9e>
 800c8d6:	697b      	ldr	r3, [r7, #20]
 800c8d8:	4598      	cmp	r8, r3
 800c8da:	d218      	bcs.n	800c90e <create_chain+0x9e>
 800c8dc:	4641      	mov	r1, r8
 800c8de:	4622      	mov	r2, r4
 800c8e0:	4638      	mov	r0, r7
 800c8e2:	f7ff febd 	bl	800c660 <put_fat.part.0>
	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
 800c8e6:	b980      	cbnz	r0, 800c90a <create_chain+0x9a>
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 800c8e8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800c8ec:	3b02      	subs	r3, #2
 800c8ee:	429a      	cmp	r2, r3
		fs->last_clst = ncl;
 800c8f0:	60fc      	str	r4, [r7, #12]
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 800c8f2:	d801      	bhi.n	800c8f8 <create_chain+0x88>
 800c8f4:	3a01      	subs	r2, #1
 800c8f6:	613a      	str	r2, [r7, #16]
		fs->fsi_flag |= 1;
 800c8f8:	793b      	ldrb	r3, [r7, #4]
 800c8fa:	f043 0301 	orr.w	r3, r3, #1
 800c8fe:	713b      	strb	r3, [r7, #4]
 800c900:	e006      	b.n	800c910 <create_chain+0xa0>
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 800c902:	42ab      	cmp	r3, r5
 800c904:	bf98      	it	ls
 800c906:	2501      	movls	r5, #1
 800c908:	e7be      	b.n	800c888 <create_chain+0x18>
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
 800c90a:	2801      	cmp	r0, #1
 800c90c:	d014      	beq.n	800c938 <create_chain+0xc8>
		if (cs < 2) return 1;				/* Invalid FAT value */
 800c90e:	2401      	movs	r4, #1
}
 800c910:	4620      	mov	r0, r4
 800c912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		cs = get_fat(obj, clst);			/* Check the cluster status */
 800c916:	4638      	mov	r0, r7
 800c918:	f7ff ff3e 	bl	800c798 <get_fat.isra.0>
		if (cs < 2) return 1;				/* Invalid FAT value */
 800c91c:	2801      	cmp	r0, #1
		cs = get_fat(obj, clst);			/* Check the cluster status */
 800c91e:	4604      	mov	r4, r0
		if (cs < 2) return 1;				/* Invalid FAT value */
 800c920:	d9f5      	bls.n	800c90e <create_chain+0x9e>
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 800c922:	1c43      	adds	r3, r0, #1
 800c924:	d008      	beq.n	800c938 <create_chain+0xc8>
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 800c926:	697b      	ldr	r3, [r7, #20]
 800c928:	4283      	cmp	r3, r0
 800c92a:	d8f1      	bhi.n	800c910 <create_chain+0xa0>
 800c92c:	4645      	mov	r5, r8
 800c92e:	e7ab      	b.n	800c888 <create_chain+0x18>
				if (ncl > scl) return 0;	/* No free cluster */
 800c930:	2400      	movs	r4, #0
}
 800c932:	4620      	mov	r0, r4
 800c934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
 800c938:	f04f 34ff 	mov.w	r4, #4294967295
}
 800c93c:	4620      	mov	r0, r4
 800c93e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c942:	bf00      	nop

0800c944 <remove_chain>:
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
 800c944:	2901      	cmp	r1, #1
{
 800c946:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	FATFS *fs = obj->fs;
 800c948:	6806      	ldr	r6, [r0, #0]
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
 800c94a:	d928      	bls.n	800c99e <remove_chain+0x5a>
 800c94c:	6973      	ldr	r3, [r6, #20]
 800c94e:	428b      	cmp	r3, r1
 800c950:	460c      	mov	r4, r1
 800c952:	d924      	bls.n	800c99e <remove_chain+0x5a>
	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
 800c954:	4607      	mov	r7, r0
 800c956:	b9f2      	cbnz	r2, 800c996 <remove_chain+0x52>
 800c958:	4630      	mov	r0, r6
		nxt = get_fat(obj, clst);			/* Get cluster status */
 800c95a:	4621      	mov	r1, r4
 800c95c:	f7ff ff1c 	bl	800c798 <get_fat.isra.0>
 800c960:	4605      	mov	r5, r0
		if (nxt == 0) break;				/* Empty cluster? */
 800c962:	4621      	mov	r1, r4
 800c964:	2200      	movs	r2, #0
 800c966:	4630      	mov	r0, r6
 800c968:	b365      	cbz	r5, 800c9c4 <remove_chain+0x80>
		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 800c96a:	2d01      	cmp	r5, #1
 800c96c:	d017      	beq.n	800c99e <remove_chain+0x5a>
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 800c96e:	1c6b      	adds	r3, r5, #1
 800c970:	d02a      	beq.n	800c9c8 <remove_chain+0x84>
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800c972:	2c01      	cmp	r4, #1
 800c974:	d913      	bls.n	800c99e <remove_chain+0x5a>
 800c976:	6973      	ldr	r3, [r6, #20]
 800c978:	429c      	cmp	r4, r3
 800c97a:	d210      	bcs.n	800c99e <remove_chain+0x5a>
 800c97c:	f7ff fe70 	bl	800c660 <put_fat.part.0>
			if (res != FR_OK) return res;
 800c980:	b970      	cbnz	r0, 800c9a0 <remove_chain+0x5c>
		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
 800c982:	e9d6 3204 	ldrd	r3, r2, [r6, #16]
 800c986:	1e91      	subs	r1, r2, #2
 800c988:	428b      	cmp	r3, r1
 800c98a:	d30a      	bcc.n	800c9a2 <remove_chain+0x5e>
	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 800c98c:	42aa      	cmp	r2, r5
 800c98e:	d919      	bls.n	800c9c4 <remove_chain+0x80>
 800c990:	6838      	ldr	r0, [r7, #0]
 800c992:	462c      	mov	r4, r5
 800c994:	e7e1      	b.n	800c95a <remove_chain+0x16>
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800c996:	2a01      	cmp	r2, #1
 800c998:	d901      	bls.n	800c99e <remove_chain+0x5a>
 800c99a:	4293      	cmp	r3, r2
 800c99c:	d808      	bhi.n	800c9b0 <remove_chain+0x6c>
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
 800c99e:	2002      	movs	r0, #2
}
 800c9a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			fs->fsi_flag |= 1;
 800c9a2:	7931      	ldrb	r1, [r6, #4]
			fs->free_clst++;
 800c9a4:	3301      	adds	r3, #1
			fs->fsi_flag |= 1;
 800c9a6:	f041 0101 	orr.w	r1, r1, #1
			fs->free_clst++;
 800c9aa:	6133      	str	r3, [r6, #16]
			fs->fsi_flag |= 1;
 800c9ac:	7131      	strb	r1, [r6, #4]
 800c9ae:	e7ed      	b.n	800c98c <remove_chain+0x48>
 800c9b0:	4611      	mov	r1, r2
 800c9b2:	4630      	mov	r0, r6
 800c9b4:	f04f 32ff 	mov.w	r2, #4294967295
 800c9b8:	f7ff fe52 	bl	800c660 <put_fat.part.0>
		if (res != FR_OK) return res;
 800c9bc:	2800      	cmp	r0, #0
 800c9be:	d1ef      	bne.n	800c9a0 <remove_chain+0x5c>
 800c9c0:	6838      	ldr	r0, [r7, #0]
 800c9c2:	e7ca      	b.n	800c95a <remove_chain+0x16>
	return FR_OK;
 800c9c4:	2000      	movs	r0, #0
}
 800c9c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 800c9c8:	2001      	movs	r0, #1
}
 800c9ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c9cc <dir_next>:
{
 800c9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800c9d0:	69c3      	ldr	r3, [r0, #28]
	ofs = dp->dptr + SZDIRE;	/* Next entry */
 800c9d2:	6945      	ldr	r5, [r0, #20]
{
 800c9d4:	b083      	sub	sp, #12
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800c9d6:	2b00      	cmp	r3, #0
 800c9d8:	d03d      	beq.n	800ca56 <dir_next+0x8a>
 800c9da:	3520      	adds	r5, #32
 800c9dc:	f5b5 1f00 	cmp.w	r5, #2097152	; 0x200000
 800c9e0:	d239      	bcs.n	800ca56 <dir_next+0x8a>
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
 800c9e2:	f3c5 0808 	ubfx	r8, r5, #0, #9
	FATFS *fs = dp->obj.fs;
 800c9e6:	6807      	ldr	r7, [r0, #0]
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
 800c9e8:	4604      	mov	r4, r0
 800c9ea:	f1b8 0f00 	cmp.w	r8, #0
 800c9ee:	d008      	beq.n	800ca02 <dir_next+0x36>
 800c9f0:	f107 0630 	add.w	r6, r7, #48	; 0x30
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 800c9f4:	4446      	add	r6, r8
 800c9f6:	6226      	str	r6, [r4, #32]
	dp->dptr = ofs;						/* Current entry */
 800c9f8:	6165      	str	r5, [r4, #20]
	return FR_OK;
 800c9fa:	2000      	movs	r0, #0
}
 800c9fc:	b003      	add	sp, #12
 800c9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		dp->sect++;				/* Next sector */
 800ca02:	460e      	mov	r6, r1
		if (!dp->clust) {		/* Static table */
 800ca04:	6981      	ldr	r1, [r0, #24]
		dp->sect++;				/* Next sector */
 800ca06:	3301      	adds	r3, #1
 800ca08:	61c3      	str	r3, [r0, #28]
		if (!dp->clust) {		/* Static table */
 800ca0a:	b341      	cbz	r1, 800ca5e <dir_next+0x92>
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
 800ca0c:	f8b7 900a 	ldrh.w	r9, [r7, #10]
 800ca10:	f109 39ff 	add.w	r9, r9, #4294967295
 800ca14:	ea19 2955 	ands.w	r9, r9, r5, lsr #9
 800ca18:	d1ea      	bne.n	800c9f0 <dir_next+0x24>
				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 800ca1a:	4638      	mov	r0, r7
 800ca1c:	f7ff febc 	bl	800c798 <get_fat.isra.0>
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 800ca20:	2801      	cmp	r0, #1
				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 800ca22:	4683      	mov	fp, r0
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 800ca24:	d923      	bls.n	800ca6e <dir_next+0xa2>
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 800ca26:	f1b0 3fff 	cmp.w	r0, #4294967295
 800ca2a:	d060      	beq.n	800caee <dir_next+0x122>
				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 800ca2c:	697b      	ldr	r3, [r7, #20]
 800ca2e:	4283      	cmp	r3, r0
 800ca30:	d91f      	bls.n	800ca72 <dir_next+0xa6>
 800ca32:	1e82      	subs	r2, r0, #2
 800ca34:	f107 0630 	add.w	r6, r7, #48	; 0x30
 800ca38:	9201      	str	r2, [sp, #4]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800ca3a:	9a01      	ldr	r2, [sp, #4]
				dp->clust = clst;		/* Initialize data for new cluster */
 800ca3c:	f8c4 b018 	str.w	fp, [r4, #24]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800ca40:	3b02      	subs	r3, #2
 800ca42:	4293      	cmp	r3, r2
 800ca44:	d904      	bls.n	800ca50 <dir_next+0x84>
	return clst * fs->csize + fs->database;
 800ca46:	f8b7 900a 	ldrh.w	r9, [r7, #10]
 800ca4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ca4c:	fb02 3909 	mla	r9, r2, r9, r3
				dp->sect = clust2sect(fs, clst);
 800ca50:	f8c4 901c 	str.w	r9, [r4, #28]
 800ca54:	e7ce      	b.n	800c9f4 <dir_next+0x28>
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800ca56:	2004      	movs	r0, #4
}
 800ca58:	b003      	add	sp, #12
 800ca5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 800ca5e:	893b      	ldrh	r3, [r7, #8]
 800ca60:	ebb3 1f55 	cmp.w	r3, r5, lsr #5
 800ca64:	d8c4      	bhi.n	800c9f0 <dir_next+0x24>
				dp->sect = 0; return FR_NO_FILE;
 800ca66:	2300      	movs	r3, #0
 800ca68:	61e3      	str	r3, [r4, #28]
 800ca6a:	2004      	movs	r0, #4
 800ca6c:	e7c6      	b.n	800c9fc <dir_next+0x30>
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 800ca6e:	2002      	movs	r0, #2
 800ca70:	e7c4      	b.n	800c9fc <dir_next+0x30>
					if (!stretch) {								/* If no stretch, report EOT */
 800ca72:	2e00      	cmp	r6, #0
 800ca74:	d0f7      	beq.n	800ca66 <dir_next+0x9a>
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
 800ca76:	69a1      	ldr	r1, [r4, #24]
 800ca78:	4620      	mov	r0, r4
 800ca7a:	f7ff fef9 	bl	800c870 <create_chain>
					if (clst == 0) return FR_DENIED;			/* No free cluster */
 800ca7e:	4683      	mov	fp, r0
 800ca80:	2800      	cmp	r0, #0
 800ca82:	d03c      	beq.n	800cafe <dir_next+0x132>
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 800ca84:	2801      	cmp	r0, #1
 800ca86:	d0f2      	beq.n	800ca6e <dir_next+0xa2>
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800ca88:	f1b0 3fff 	cmp.w	r0, #4294967295
 800ca8c:	d02f      	beq.n	800caee <dir_next+0x122>
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800ca8e:	78fb      	ldrb	r3, [r7, #3]
 800ca90:	2b00      	cmp	r3, #0
 800ca92:	d136      	bne.n	800cb02 <dir_next+0x136>
					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 800ca94:	f107 0630 	add.w	r6, r7, #48	; 0x30
	BYTE *d = (BYTE*)dst;
 800ca98:	4633      	mov	r3, r6
 800ca9a:	f507 700c 	add.w	r0, r7, #560	; 0x230
		*d++ = (BYTE)val;
 800ca9e:	2100      	movs	r1, #0
 800caa0:	f803 1b01 	strb.w	r1, [r3], #1
	} while (--cnt);
 800caa4:	4283      	cmp	r3, r0
 800caa6:	d1fb      	bne.n	800caa0 <dir_next+0xd4>
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800caa8:	6978      	ldr	r0, [r7, #20]
 800caaa:	8979      	ldrh	r1, [r7, #10]
	clst -= 2;
 800caac:	f1ab 0302 	sub.w	r3, fp, #2
 800cab0:	461a      	mov	r2, r3
 800cab2:	9301      	str	r3, [sp, #4]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800cab4:	1e83      	subs	r3, r0, #2
 800cab6:	429a      	cmp	r2, r3
	return clst * fs->csize + fs->database;
 800cab8:	bf3b      	ittet	cc
 800caba:	6abb      	ldrcc	r3, [r7, #40]	; 0x28
 800cabc:	9a01      	ldrcc	r2, [sp, #4]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800cabe:	2300      	movcs	r3, #0
	return clst * fs->csize + fs->database;
 800cac0:	fb02 3301 	mlacc	r3, r2, r1, r3
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800cac4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cac6:	b311      	cbz	r1, 800cb0e <dir_next+0x142>
 800cac8:	f04f 0a00 	mov.w	sl, #0
 800cacc:	e005      	b.n	800cada <dir_next+0x10e>
 800cace:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cad0:	8978      	ldrh	r0, [r7, #10]
 800cad2:	3301      	adds	r3, #1
 800cad4:	4550      	cmp	r0, sl
 800cad6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cad8:	d90b      	bls.n	800caf2 <dir_next+0x126>
						fs->wflag = 1;
 800cada:	f04f 0301 	mov.w	r3, #1
 800cade:	70fb      	strb	r3, [r7, #3]
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800cae0:	4638      	mov	r0, r7
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800cae2:	f10a 0a01 	add.w	sl, sl, #1
 800cae6:	f7ff fb27 	bl	800c138 <sync_window.part.0>
						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 800caea:	2800      	cmp	r0, #0
 800caec:	d0ef      	beq.n	800cace <dir_next+0x102>
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 800caee:	2001      	movs	r0, #1
 800caf0:	e784      	b.n	800c9fc <dir_next+0x30>
 800caf2:	6978      	ldr	r0, [r7, #20]
					fs->winsect -= n;							/* Restore window offset */
 800caf4:	eba3 030a 	sub.w	r3, r3, sl
 800caf8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cafa:	4603      	mov	r3, r0
 800cafc:	e79d      	b.n	800ca3a <dir_next+0x6e>
					if (clst == 0) return FR_DENIED;			/* No free cluster */
 800cafe:	2007      	movs	r0, #7
 800cb00:	e77c      	b.n	800c9fc <dir_next+0x30>
 800cb02:	4638      	mov	r0, r7
 800cb04:	f7ff fb18 	bl	800c138 <sync_window.part.0>
					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
 800cb08:	2800      	cmp	r0, #0
 800cb0a:	d0c3      	beq.n	800ca94 <dir_next+0xc8>
 800cb0c:	e7ef      	b.n	800caee <dir_next+0x122>
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800cb0e:	468a      	mov	sl, r1
 800cb10:	e7f0      	b.n	800caf4 <dir_next+0x128>
 800cb12:	bf00      	nop

0800cb14 <dir_sdi.constprop.0>:
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 800cb14:	6881      	ldr	r1, [r0, #8]
FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
 800cb16:	b538      	push	{r3, r4, r5, lr}
	dp->dptr = ofs;				/* Set current offset */
 800cb18:	2300      	movs	r3, #0
	FATFS *fs = dp->obj.fs;
 800cb1a:	6805      	ldr	r5, [r0, #0]
	dp->dptr = ofs;				/* Set current offset */
 800cb1c:	6143      	str	r3, [r0, #20]
FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
 800cb1e:	4604      	mov	r4, r0
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 800cb20:	b981      	cbnz	r1, 800cb44 <dir_sdi.constprop.0+0x30>
 800cb22:	782b      	ldrb	r3, [r5, #0]
 800cb24:	2b02      	cmp	r3, #2
 800cb26:	d809      	bhi.n	800cb3c <dir_sdi.constprop.0+0x28>
		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 800cb28:	892b      	ldrh	r3, [r5, #8]
 800cb2a:	b1f3      	cbz	r3, 800cb6a <dir_sdi.constprop.0+0x56>
		dp->sect = fs->dirbase;
 800cb2c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cb2e:	61e3      	str	r3, [r4, #28]
	dp->clust = clst;					/* Current cluster# */
 800cb30:	61a1      	str	r1, [r4, #24]
	if (!dp->sect) return FR_INT_ERR;
 800cb32:	b1d3      	cbz	r3, 800cb6a <dir_sdi.constprop.0+0x56>
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 800cb34:	3530      	adds	r5, #48	; 0x30
 800cb36:	6225      	str	r5, [r4, #32]
	return FR_OK;
 800cb38:	2000      	movs	r0, #0
}
 800cb3a:	bd38      	pop	{r3, r4, r5, pc}
		clst = fs->dirbase;
 800cb3c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
 800cb3e:	2b00      	cmp	r3, #0
 800cb40:	d0f2      	beq.n	800cb28 <dir_sdi.constprop.0+0x14>
 800cb42:	4619      	mov	r1, r3
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
 800cb44:	896b      	ldrh	r3, [r5, #10]
		while (ofs >= csz) {				/* Follow cluster chain */
 800cb46:	b12b      	cbz	r3, 800cb54 <dir_sdi.constprop.0+0x40>
 800cb48:	e011      	b.n	800cb6e <dir_sdi.constprop.0+0x5a>
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
 800cb4a:	2801      	cmp	r0, #1
 800cb4c:	d90d      	bls.n	800cb6a <dir_sdi.constprop.0+0x56>
 800cb4e:	696b      	ldr	r3, [r5, #20]
 800cb50:	4298      	cmp	r0, r3
 800cb52:	d20a      	bcs.n	800cb6a <dir_sdi.constprop.0+0x56>
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 800cb54:	6820      	ldr	r0, [r4, #0]
 800cb56:	f7ff fe1f 	bl	800c798 <get_fat.isra.0>
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800cb5a:	1c43      	adds	r3, r0, #1
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 800cb5c:	4601      	mov	r1, r0
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800cb5e:	d1f4      	bne.n	800cb4a <dir_sdi.constprop.0+0x36>
 800cb60:	2001      	movs	r0, #1
}
 800cb62:	bd38      	pop	{r3, r4, r5, pc}
		dp->sect = clust2sect(fs, clst);
 800cb64:	2300      	movs	r3, #0
 800cb66:	e9c4 1306 	strd	r1, r3, [r4, #24]
		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 800cb6a:	2002      	movs	r0, #2
}
 800cb6c:	bd38      	pop	{r3, r4, r5, pc}
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800cb6e:	696a      	ldr	r2, [r5, #20]
	clst -= 2;
 800cb70:	1e88      	subs	r0, r1, #2
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800cb72:	3a02      	subs	r2, #2
 800cb74:	4290      	cmp	r0, r2
 800cb76:	d2f5      	bcs.n	800cb64 <dir_sdi.constprop.0+0x50>
	return clst * fs->csize + fs->database;
 800cb78:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800cb7a:	fb00 2303 	mla	r3, r0, r3, r2
		dp->sect = clust2sect(fs, clst);
 800cb7e:	61e3      	str	r3, [r4, #28]
 800cb80:	e7d6      	b.n	800cb30 <dir_sdi.constprop.0+0x1c>
 800cb82:	bf00      	nop

0800cb84 <dir_register>:
{
 800cb84:	b570      	push	{r4, r5, r6, lr}
	FATFS *fs = dp->obj.fs;
 800cb86:	6806      	ldr	r6, [r0, #0]
{
 800cb88:	4604      	mov	r4, r0
	res = dir_sdi(dp, 0);
 800cb8a:	f7ff ffc3 	bl	800cb14 <dir_sdi.constprop.0>
	if (res == FR_OK) {
 800cb8e:	4605      	mov	r5, r0
 800cb90:	b138      	cbz	r0, 800cba2 <dir_register+0x1e>
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
 800cb92:	2d04      	cmp	r5, #4
 800cb94:	bf08      	it	eq
 800cb96:	2507      	moveq	r5, #7
}
 800cb98:	4628      	mov	r0, r5
 800cb9a:	bd70      	pop	{r4, r5, r6, pc}
			res = dir_next(dp, 1);
 800cb9c:	f7ff ff16 	bl	800c9cc <dir_next>
		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 800cba0:	bb48      	cbnz	r0, 800cbf6 <dir_register+0x72>
			res = move_window(fs, dp->sect);
 800cba2:	69e1      	ldr	r1, [r4, #28]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800cba4:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 800cba6:	4299      	cmp	r1, r3
 800cba8:	4630      	mov	r0, r6
 800cbaa:	d002      	beq.n	800cbb2 <dir_register+0x2e>
 800cbac:	f7ff fb4e 	bl	800c24c <move_window.part.0>
			if (res != FR_OK) break;
 800cbb0:	bb08      	cbnz	r0, 800cbf6 <dir_register+0x72>
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
 800cbb2:	6a23      	ldr	r3, [r4, #32]
 800cbb4:	781a      	ldrb	r2, [r3, #0]
 800cbb6:	2ae5      	cmp	r2, #229	; 0xe5
 800cbb8:	d003      	beq.n	800cbc2 <dir_register+0x3e>
			res = dir_next(dp, 1);
 800cbba:	2101      	movs	r1, #1
 800cbbc:	4620      	mov	r0, r4
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
 800cbbe:	2a00      	cmp	r2, #0
 800cbc0:	d1ec      	bne.n	800cb9c <dir_register+0x18>
		res = move_window(fs, dp->sect);
 800cbc2:	69e1      	ldr	r1, [r4, #28]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800cbc4:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800cbc6:	4291      	cmp	r1, r2
 800cbc8:	d004      	beq.n	800cbd4 <dir_register+0x50>
 800cbca:	4630      	mov	r0, r6
 800cbcc:	f7ff fb3e 	bl	800c24c <move_window.part.0>
		if (res == FR_OK) {
 800cbd0:	b998      	cbnz	r0, 800cbfa <dir_register+0x76>
 800cbd2:	6a23      	ldr	r3, [r4, #32]
	BYTE *d = (BYTE*)dst;
 800cbd4:	f103 0120 	add.w	r1, r3, #32
		*d++ = (BYTE)val;
 800cbd8:	2200      	movs	r2, #0
 800cbda:	f803 2b01 	strb.w	r2, [r3], #1
	} while (--cnt);
 800cbde:	428b      	cmp	r3, r1
 800cbe0:	d1fb      	bne.n	800cbda <dir_register+0x56>
	if (cnt) {
 800cbe2:	6a20      	ldr	r0, [r4, #32]
 800cbe4:	220b      	movs	r2, #11
 800cbe6:	f104 0124 	add.w	r1, r4, #36	; 0x24
 800cbea:	f7ff fa9b 	bl	800c124 <mem_cpy.part.0>
			fs->wflag = 1;
 800cbee:	2301      	movs	r3, #1
 800cbf0:	70f3      	strb	r3, [r6, #3]
}
 800cbf2:	4628      	mov	r0, r5
 800cbf4:	bd70      	pop	{r4, r5, r6, pc}
 800cbf6:	4605      	mov	r5, r0
 800cbf8:	e7cb      	b.n	800cb92 <dir_register+0xe>
 800cbfa:	4605      	mov	r5, r0
 800cbfc:	4628      	mov	r0, r5
 800cbfe:	bd70      	pop	{r4, r5, r6, pc}

0800cc00 <follow_path>:
{
 800cc00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	FATFS *fs = obj->fs;
 800cc04:	f8d0 8000 	ldr.w	r8, [r0]
{
 800cc08:	4683      	mov	fp, r0
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
 800cc0a:	780b      	ldrb	r3, [r1, #0]
 800cc0c:	2b2f      	cmp	r3, #47	; 0x2f
 800cc0e:	460c      	mov	r4, r1
 800cc10:	f101 0101 	add.w	r1, r1, #1
 800cc14:	d0f9      	beq.n	800cc0a <follow_path+0xa>
 800cc16:	2b5c      	cmp	r3, #92	; 0x5c
 800cc18:	d0f7      	beq.n	800cc0a <follow_path+0xa>
		obj->sclust = 0;					/* Start from root directory */
 800cc1a:	2300      	movs	r3, #0
 800cc1c:	f8cb 3008 	str.w	r3, [fp, #8]
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
 800cc20:	7823      	ldrb	r3, [r4, #0]
 800cc22:	2b1f      	cmp	r3, #31
 800cc24:	f240 80c7 	bls.w	800cdb6 <follow_path+0x1b6>
			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
 800cc28:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800cde0 <follow_path+0x1e0>
 800cc2c:	f10b 0924 	add.w	r9, fp, #36	; 0x24
 800cc30:	f10b 062f 	add.w	r6, fp, #47	; 0x2f
		*d++ = (BYTE)val;
 800cc34:	2720      	movs	r7, #32
	BYTE *d = (BYTE*)dst;
 800cc36:	464b      	mov	r3, r9
		*d++ = (BYTE)val;
 800cc38:	f803 7b01 	strb.w	r7, [r3], #1
	} while (--cnt);
 800cc3c:	42b3      	cmp	r3, r6
 800cc3e:	d1fb      	bne.n	800cc38 <follow_path+0x38>
		c = (BYTE)p[si++];
 800cc40:	7823      	ldrb	r3, [r4, #0]
		if (c <= ' ') break; 			/* Break if end of the path name */
 800cc42:	2b20      	cmp	r3, #32
 800cc44:	d90c      	bls.n	800cc60 <follow_path+0x60>
 800cc46:	46a6      	mov	lr, r4
	si = i = 0; ni = 8;
 800cc48:	2500      	movs	r5, #0
 800cc4a:	f04f 0c08 	mov.w	ip, #8
		c = (BYTE)p[si++];
 800cc4e:	2001      	movs	r0, #1
		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 800cc50:	2b2f      	cmp	r3, #47	; 0x2f
 800cc52:	d046      	beq.n	800cce2 <follow_path+0xe2>
 800cc54:	2b5c      	cmp	r3, #92	; 0x5c
 800cc56:	d044      	beq.n	800cce2 <follow_path+0xe2>
		if (c == '.' || i >= ni) {		/* End of body or over size? */
 800cc58:	2b2e      	cmp	r3, #46	; 0x2e
 800cc5a:	d004      	beq.n	800cc66 <follow_path+0x66>
 800cc5c:	4565      	cmp	r5, ip
 800cc5e:	d328      	bcc.n	800ccb2 <follow_path+0xb2>
	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 800cc60:	2006      	movs	r0, #6
}
 800cc62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 800cc66:	f1bc 0f0b 	cmp.w	ip, #11
 800cc6a:	d0f9      	beq.n	800cc60 <follow_path+0x60>
			i = 8; ni = 11;				/* Goto extension */
 800cc6c:	2508      	movs	r5, #8
 800cc6e:	f04f 0c0b 	mov.w	ip, #11
		c = (BYTE)p[si++];
 800cc72:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
		if (c <= ' ') break; 			/* Break if end of the path name */
 800cc76:	2b20      	cmp	r3, #32
		c = (BYTE)p[si++];
 800cc78:	f100 0001 	add.w	r0, r0, #1
		if (c <= ' ') break; 			/* Break if end of the path name */
 800cc7c:	d8e8      	bhi.n	800cc50 <follow_path+0x50>
	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 800cc7e:	f89b 3024 	ldrb.w	r3, [fp, #36]	; 0x24
 800cc82:	2be5      	cmp	r3, #229	; 0xe5
	*path = p + si;						/* Return pointer to the next segment */
 800cc84:	4404      	add	r4, r0
	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 800cc86:	f000 80a0 	beq.w	800cdca <follow_path+0x1ca>
	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800cc8a:	2304      	movs	r3, #4
 800cc8c:	f88b 302f 	strb.w	r3, [fp, #47]	; 0x2f
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800cc90:	4658      	mov	r0, fp
	FATFS *fs = dp->obj.fs;
 800cc92:	f8db 5000 	ldr.w	r5, [fp]
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800cc96:	f7ff ff3d 	bl	800cb14 <dir_sdi.constprop.0>
	if (res != FR_OK) return res;
 800cc9a:	2800      	cmp	r0, #0
 800cc9c:	d040      	beq.n	800cd20 <follow_path+0x120>
				if (res == FR_NO_FILE) {	/* Object is not found */
 800cc9e:	2804      	cmp	r0, #4
 800cca0:	d1df      	bne.n	800cc62 <follow_path+0x62>
			ns = dp->fn[NSFLAG];
 800cca2:	f89b 302f 	ldrb.w	r3, [fp, #47]	; 0x2f
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
 800cca6:	0759      	lsls	r1, r3, #29
 800cca8:	f100 808d 	bmi.w	800cdc6 <follow_path+0x1c6>
 800ccac:	2005      	movs	r0, #5
}
 800ccae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (c >= 0x80) {				/* Extended character? */
 800ccb2:	061a      	lsls	r2, r3, #24
			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
 800ccb4:	bf48      	it	mi
 800ccb6:	3b80      	submi	r3, #128	; 0x80
	while (*str && *str != chr) str++;
 800ccb8:	4948      	ldr	r1, [pc, #288]	; (800cddc <follow_path+0x1dc>)
			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
 800ccba:	bf48      	it	mi
 800ccbc:	f81a 3003 	ldrbmi.w	r3, [sl, r3]
	while (*str && *str != chr) str++;
 800ccc0:	2222      	movs	r2, #34	; 0x22
 800ccc2:	4293      	cmp	r3, r2
 800ccc4:	d0cc      	beq.n	800cc60 <follow_path+0x60>
 800ccc6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ccca:	2a00      	cmp	r2, #0
 800cccc:	d1f9      	bne.n	800ccc2 <follow_path+0xc2>
			if (IsLower(c)) c -= 0x20;	/* To upper */
 800ccce:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800ccd2:	2a19      	cmp	r2, #25
 800ccd4:	d801      	bhi.n	800ccda <follow_path+0xda>
 800ccd6:	3b20      	subs	r3, #32
 800ccd8:	b2db      	uxtb	r3, r3
			sfn[i++] = c;
 800ccda:	f809 3005 	strb.w	r3, [r9, r5]
 800ccde:	3501      	adds	r5, #1
 800cce0:	e7c7      	b.n	800cc72 <follow_path+0x72>
 800cce2:	1823      	adds	r3, r4, r0
			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 800cce4:	781a      	ldrb	r2, [r3, #0]
 800cce6:	2a2f      	cmp	r2, #47	; 0x2f
 800cce8:	461c      	mov	r4, r3
 800ccea:	f103 0301 	add.w	r3, r3, #1
 800ccee:	d0f9      	beq.n	800cce4 <follow_path+0xe4>
 800ccf0:	2a5c      	cmp	r2, #92	; 0x5c
 800ccf2:	d0f7      	beq.n	800cce4 <follow_path+0xe4>
	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 800ccf4:	2d00      	cmp	r5, #0
 800ccf6:	d0b3      	beq.n	800cc60 <follow_path+0x60>
	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 800ccf8:	f89b 3024 	ldrb.w	r3, [fp, #36]	; 0x24
 800ccfc:	2be5      	cmp	r3, #229	; 0xe5
 800ccfe:	d068      	beq.n	800cdd2 <follow_path+0x1d2>
	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800cd00:	2300      	movs	r3, #0
 800cd02:	f88b 302f 	strb.w	r3, [fp, #47]	; 0x2f
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800cd06:	4658      	mov	r0, fp
	FATFS *fs = dp->obj.fs;
 800cd08:	f8db 5000 	ldr.w	r5, [fp]
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800cd0c:	f7ff ff02 	bl	800cb14 <dir_sdi.constprop.0>
	if (res != FR_OK) return res;
 800cd10:	b130      	cbz	r0, 800cd20 <follow_path+0x120>
 800cd12:	e7c4      	b.n	800cc9e <follow_path+0x9e>
		res = dir_next(dp, 0);	/* Next entry */
 800cd14:	2100      	movs	r1, #0
 800cd16:	4658      	mov	r0, fp
 800cd18:	f7ff fe58 	bl	800c9cc <dir_next>
	} while (res == FR_OK);
 800cd1c:	2800      	cmp	r0, #0
 800cd1e:	d1be      	bne.n	800cc9e <follow_path+0x9e>
		res = move_window(fs, dp->sect);
 800cd20:	f8db 101c 	ldr.w	r1, [fp, #28]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800cd24:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800cd26:	4299      	cmp	r1, r3
 800cd28:	d004      	beq.n	800cd34 <follow_path+0x134>
 800cd2a:	4628      	mov	r0, r5
 800cd2c:	f7ff fa8e 	bl	800c24c <move_window.part.0>
		if (res != FR_OK) break;
 800cd30:	2800      	cmp	r0, #0
 800cd32:	d1b4      	bne.n	800cc9e <follow_path+0x9e>
		c = dp->dir[DIR_Name];
 800cd34:	f8db 3020 	ldr.w	r3, [fp, #32]
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 800cd38:	781a      	ldrb	r2, [r3, #0]
 800cd3a:	2a00      	cmp	r2, #0
 800cd3c:	d0b1      	beq.n	800cca2 <follow_path+0xa2>
		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
 800cd3e:	7ad9      	ldrb	r1, [r3, #11]
 800cd40:	f001 023f 	and.w	r2, r1, #63	; 0x3f
 800cd44:	f88b 2006 	strb.w	r2, [fp, #6]
		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry? */
 800cd48:	7ad8      	ldrb	r0, [r3, #11]
 800cd4a:	f010 0008 	ands.w	r0, r0, #8
 800cd4e:	d1e1      	bne.n	800cd14 <follow_path+0x114>
		r = *d++ - *s++;
 800cd50:	f89b c024 	ldrb.w	ip, [fp, #36]	; 0x24
 800cd54:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cd58:	eba2 020c 	sub.w	r2, r2, ip
 800cd5c:	f10b 0c25 	add.w	ip, fp, #37	; 0x25
	} while (--cnt && r == 0);
 800cd60:	2a00      	cmp	r2, #0
 800cd62:	d1d7      	bne.n	800cd14 <follow_path+0x114>
		r = *d++ - *s++;
 800cd64:	f81c eb01 	ldrb.w	lr, [ip], #1
 800cd68:	f813 2b01 	ldrb.w	r2, [r3], #1
	} while (--cnt && r == 0);
 800cd6c:	45b4      	cmp	ip, r6
		r = *d++ - *s++;
 800cd6e:	eba2 020e 	sub.w	r2, r2, lr
	} while (--cnt && r == 0);
 800cd72:	d1f5      	bne.n	800cd60 <follow_path+0x160>
		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry? */
 800cd74:	2a00      	cmp	r2, #0
 800cd76:	d1cd      	bne.n	800cd14 <follow_path+0x114>
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
 800cd78:	f89b 302f 	ldrb.w	r3, [fp, #47]	; 0x2f
 800cd7c:	075b      	lsls	r3, r3, #29
 800cd7e:	f53f af70 	bmi.w	800cc62 <follow_path+0x62>
			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
 800cd82:	06ca      	lsls	r2, r1, #27
 800cd84:	d592      	bpl.n	800ccac <follow_path+0xac>
				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
 800cd86:	f8db 3014 	ldr.w	r3, [fp, #20]
	if (fs->fs_type == FS_FAT32) {
 800cd8a:	f898 1000 	ldrb.w	r1, [r8]
				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
 800cd8e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800cd92:	f108 0330 	add.w	r3, r8, #48	; 0x30
 800cd96:	4413      	add	r3, r2
	if (fs->fs_type == FS_FAT32) {
 800cd98:	2903      	cmp	r1, #3
	rv = rv << 8 | ptr[0];
 800cd9a:	7ed8      	ldrb	r0, [r3, #27]
 800cd9c:	7e9a      	ldrb	r2, [r3, #26]
	cl = ld_word(dir + DIR_FstClusLO);
 800cd9e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
	if (fs->fs_type == FS_FAT32) {
 800cda2:	d105      	bne.n	800cdb0 <follow_path+0x1b0>
	rv = rv << 8 | ptr[0];
 800cda4:	7d59      	ldrb	r1, [r3, #21]
 800cda6:	7d1b      	ldrb	r3, [r3, #20]
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 800cda8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cdac:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
 800cdb0:	f8cb 2008 	str.w	r2, [fp, #8]
			res = create_name(dp, &path);	/* Get a segment name of the path */
 800cdb4:	e73f      	b.n	800cc36 <follow_path+0x36>
		dp->fn[NSFLAG] = NS_NONAME;
 800cdb6:	2380      	movs	r3, #128	; 0x80
 800cdb8:	f88b 302f 	strb.w	r3, [fp, #47]	; 0x2f
		res = dir_sdi(dp, 0);
 800cdbc:	4658      	mov	r0, fp
}
 800cdbe:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		res = dir_sdi(dp, 0);
 800cdc2:	f7ff bea7 	b.w	800cb14 <dir_sdi.constprop.0>
			res = dir_find(dp);				/* Find an object with the segment name */
 800cdc6:	2004      	movs	r0, #4
 800cdc8:	e74b      	b.n	800cc62 <follow_path+0x62>
	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 800cdca:	2305      	movs	r3, #5
 800cdcc:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
 800cdd0:	e75b      	b.n	800cc8a <follow_path+0x8a>
 800cdd2:	2305      	movs	r3, #5
 800cdd4:	f88b 3024 	strb.w	r3, [fp, #36]	; 0x24
	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800cdd8:	2300      	movs	r3, #0
 800cdda:	e792      	b.n	800cd02 <follow_path+0x102>
 800cddc:	08027f78 	.word	0x08027f78
 800cde0:	08027fbc 	.word	0x08027fbc

0800cde4 <f_mount>:
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
 800cde4:	b530      	push	{r4, r5, lr}
 800cde6:	b085      	sub	sp, #20
 800cde8:	4614      	mov	r4, r2
 800cdea:	9001      	str	r0, [sp, #4]
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
 800cdec:	a803      	add	r0, sp, #12
{
 800cdee:	9100      	str	r1, [sp, #0]
	const TCHAR *rp = path;
 800cdf0:	9103      	str	r1, [sp, #12]
	vol = get_ldnumber(&rp);
 800cdf2:	f7ff f95b 	bl	800c0ac <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
 800cdf6:	1e03      	subs	r3, r0, #0
 800cdf8:	db21      	blt.n	800ce3e <f_mount+0x5a>
	cfs = FatFs[vol];					/* Pointer to fs object */
 800cdfa:	4915      	ldr	r1, [pc, #84]	; (800ce50 <f_mount+0x6c>)
 800cdfc:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]

	if (cfs) {
 800ce00:	b162      	cbz	r2, 800ce1c <f_mount+0x38>
		if (Files[i].fs == fs) Files[i].fs = 0;
 800ce02:	4814      	ldr	r0, [pc, #80]	; (800ce54 <f_mount+0x70>)
 800ce04:	6805      	ldr	r5, [r0, #0]
 800ce06:	42aa      	cmp	r2, r5
 800ce08:	bf04      	itt	eq
 800ce0a:	2500      	moveq	r5, #0
 800ce0c:	6005      	streq	r5, [r0, #0]
 800ce0e:	6905      	ldr	r5, [r0, #16]
 800ce10:	42aa      	cmp	r2, r5
 800ce12:	bf04      	itt	eq
 800ce14:	2500      	moveq	r5, #0
 800ce16:	6105      	streq	r5, [r0, #16]
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
#endif
		cfs->fs_type = 0;				/* Clear old fs object */
 800ce18:	2000      	movs	r0, #0
 800ce1a:	7010      	strb	r0, [r2, #0]
	}

	if (fs) {
 800ce1c:	9a01      	ldr	r2, [sp, #4]
 800ce1e:	b18a      	cbz	r2, 800ce44 <f_mount+0x60>
		fs->fs_type = 0;				/* Clear new fs object */
 800ce20:	2000      	movs	r0, #0
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
#endif
	}
	FatFs[vol] = fs;					/* Register new fs object */

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800ce22:	2c01      	cmp	r4, #1
		fs->fs_type = 0;				/* Clear new fs object */
 800ce24:	7010      	strb	r0, [r2, #0]
	FatFs[vol] = fs;					/* Register new fs object */
 800ce26:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800ce2a:	d001      	beq.n	800ce30 <f_mount+0x4c>

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
 800ce2c:	b005      	add	sp, #20
 800ce2e:	bd30      	pop	{r4, r5, pc}
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 800ce30:	4602      	mov	r2, r0
 800ce32:	a901      	add	r1, sp, #4
 800ce34:	4668      	mov	r0, sp
 800ce36:	f7ff fa6f 	bl	800c318 <find_volume>
}
 800ce3a:	b005      	add	sp, #20
 800ce3c:	bd30      	pop	{r4, r5, pc}
	if (vol < 0) return FR_INVALID_DRIVE;
 800ce3e:	200b      	movs	r0, #11
}
 800ce40:	b005      	add	sp, #20
 800ce42:	bd30      	pop	{r4, r5, pc}
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800ce44:	4610      	mov	r0, r2
	FatFs[vol] = fs;					/* Register new fs object */
 800ce46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800ce4a:	b005      	add	sp, #20
 800ce4c:	bd30      	pop	{r4, r5, pc}
 800ce4e:	bf00      	nop
 800ce50:	20002c44 	.word	0x20002c44
 800ce54:	20002c48 	.word	0x20002c48

0800ce58 <f_open>:
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
 800ce58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce5c:	b090      	sub	sp, #64	; 0x40
 800ce5e:	9101      	str	r1, [sp, #4]
	FSIZE_t ofs;
#endif
	DEF_NAMBUF


	if (!fp) return FR_INVALID_OBJECT;
 800ce60:	2800      	cmp	r0, #0
 800ce62:	d039      	beq.n	800ced8 <f_open+0x80>

	/* Get logical drive */
	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND | FA_SEEKEND;
 800ce64:	f002 073f 	and.w	r7, r2, #63	; 0x3f
	res = find_volume(&path, &fs, mode);
 800ce68:	4616      	mov	r6, r2
 800ce6a:	4604      	mov	r4, r0
 800ce6c:	463a      	mov	r2, r7
 800ce6e:	a903      	add	r1, sp, #12
 800ce70:	a801      	add	r0, sp, #4
 800ce72:	f7ff fa51 	bl	800c318 <find_volume>
	if (res == FR_OK) {
 800ce76:	4605      	mov	r5, r0
 800ce78:	b128      	cbz	r0, 800ce86 <f_open+0x2e>
		}

		FREE_NAMBUF();
	}

	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 800ce7a:	2300      	movs	r3, #0
 800ce7c:	6023      	str	r3, [r4, #0]

	LEAVE_FF(fs, res);
}
 800ce7e:	4628      	mov	r0, r5
 800ce80:	b010      	add	sp, #64	; 0x40
 800ce82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		dj.obj.fs = fs;
 800ce86:	9b03      	ldr	r3, [sp, #12]
		res = follow_path(&dj, path);	/* Follow the file path */
 800ce88:	9901      	ldr	r1, [sp, #4]
		dj.obj.fs = fs;
 800ce8a:	9304      	str	r3, [sp, #16]
		res = follow_path(&dj, path);	/* Follow the file path */
 800ce8c:	a804      	add	r0, sp, #16
 800ce8e:	f7ff feb7 	bl	800cc00 <follow_path>
 800ce92:	4603      	mov	r3, r0
		if (res == FR_OK) {
 800ce94:	b9d8      	cbnz	r0, 800cece <f_open+0x76>
			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 800ce96:	f99d 303f 	ldrsb.w	r3, [sp, #63]	; 0x3f
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	db3d      	blt.n	800cf1a <f_open+0xc2>
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800ce9e:	f017 0f3e 	tst.w	r7, #62	; 0x3e
 800cea2:	bf14      	ite	ne
 800cea4:	2101      	movne	r1, #1
 800cea6:	2100      	moveq	r1, #0
 800cea8:	a804      	add	r0, sp, #16
 800ceaa:	f7ff f86d 	bl	800bf88 <chk_lock>
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 800ceae:	f016 0f1c 	tst.w	r6, #28
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800ceb2:	4603      	mov	r3, r0
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 800ceb4:	d015      	beq.n	800cee2 <f_open+0x8a>
			if (res != FR_OK) {					/* No file, create new */
 800ceb6:	2800      	cmp	r0, #0
 800ceb8:	d131      	bne.n	800cf1e <f_open+0xc6>
				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 800ceba:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800cebe:	f013 0f11 	tst.w	r3, #17
 800cec2:	d138      	bne.n	800cf36 <f_open+0xde>
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
 800cec4:	0773      	lsls	r3, r6, #29
 800cec6:	f140 80e6 	bpl.w	800d096 <f_open+0x23e>
 800ceca:	2508      	movs	r5, #8
 800cecc:	e7d5      	b.n	800ce7a <f_open+0x22>
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 800cece:	f016 0f1c 	tst.w	r6, #28
 800ced2:	d124      	bne.n	800cf1e <f_open+0xc6>
 800ced4:	4605      	mov	r5, r0
 800ced6:	e7d0      	b.n	800ce7a <f_open+0x22>
	if (!fp) return FR_INVALID_OBJECT;
 800ced8:	2509      	movs	r5, #9
}
 800ceda:	4628      	mov	r0, r5
 800cedc:	b010      	add	sp, #64	; 0x40
 800cede:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if (res == FR_OK) {					/* Following succeeded */
 800cee2:	2800      	cmp	r0, #0
 800cee4:	d1f6      	bne.n	800ced4 <f_open+0x7c>
				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 800cee6:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800ceea:	06d8      	lsls	r0, r3, #27
 800ceec:	d425      	bmi.n	800cf3a <f_open+0xe2>
					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
 800ceee:	07b2      	lsls	r2, r6, #30
 800cef0:	d501      	bpl.n	800cef6 <f_open+0x9e>
 800cef2:	07de      	lsls	r6, r3, #31
 800cef4:	d41f      	bmi.n	800cf36 <f_open+0xde>
 800cef6:	9b03      	ldr	r3, [sp, #12]
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 800cef8:	0738      	lsls	r0, r7, #28
 800cefa:	f140 80c6 	bpl.w	800d08a <f_open+0x232>
				mode |= FA_MODIFIED;
 800cefe:	f047 0740 	orr.w	r7, r7, #64	; 0x40
 800cf02:	2101      	movs	r1, #1
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 800cf04:	6ada      	ldr	r2, [r3, #44]	; 0x2c
			fp->dir_ptr = dj.dir;
 800cf06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 800cf08:	6262      	str	r2, [r4, #36]	; 0x24
			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800cf0a:	a804      	add	r0, sp, #16
			fp->dir_ptr = dj.dir;
 800cf0c:	62a3      	str	r3, [r4, #40]	; 0x28
			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800cf0e:	f7ff f87b 	bl	800c008 <inc_lock>
 800cf12:	6120      	str	r0, [r4, #16]
			if (!fp->obj.lockid) res = FR_INT_ERR;
 800cf14:	b998      	cbnz	r0, 800cf3e <f_open+0xe6>
				res = FR_INVALID_NAME;
 800cf16:	2502      	movs	r5, #2
 800cf18:	e7af      	b.n	800ce7a <f_open+0x22>
 800cf1a:	2506      	movs	r5, #6
 800cf1c:	e7ad      	b.n	800ce7a <f_open+0x22>
				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 800cf1e:	2b04      	cmp	r3, #4
 800cf20:	f040 80bd 	bne.w	800d09e <f_open+0x246>
	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 800cf24:	4b73      	ldr	r3, [pc, #460]	; (800d0f4 <f_open+0x29c>)
 800cf26:	681a      	ldr	r2, [r3, #0]
 800cf28:	2a00      	cmp	r2, #0
 800cf2a:	d053      	beq.n	800cfd4 <f_open+0x17c>
 800cf2c:	691b      	ldr	r3, [r3, #16]
 800cf2e:	2b00      	cmp	r3, #0
 800cf30:	d050      	beq.n	800cfd4 <f_open+0x17c>
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 800cf32:	2512      	movs	r5, #18
 800cf34:	e7a1      	b.n	800ce7a <f_open+0x22>
					res = FR_DENIED;
 800cf36:	2507      	movs	r5, #7
 800cf38:	e79f      	b.n	800ce7a <f_open+0x22>
					res = FR_NO_FILE;
 800cf3a:	2504      	movs	r5, #4
 800cf3c:	e79d      	b.n	800ce7a <f_open+0x22>
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 800cf3e:	9803      	ldr	r0, [sp, #12]
 800cf40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
	if (fs->fs_type == FS_FAT32) {
 800cf42:	7801      	ldrb	r1, [r0, #0]
	rv = rv << 8 | ptr[0];
 800cf44:	7ede      	ldrb	r6, [r3, #27]
 800cf46:	7e9a      	ldrb	r2, [r3, #26]
	if (fs->fs_type == FS_FAT32) {
 800cf48:	2903      	cmp	r1, #3
	cl = ld_word(dir + DIR_FstClusLO);
 800cf4a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
	if (fs->fs_type == FS_FAT32) {
 800cf4e:	d105      	bne.n	800cf5c <f_open+0x104>
	rv = rv << 8 | ptr[0];
 800cf50:	7d5e      	ldrb	r6, [r3, #21]
 800cf52:	7d19      	ldrb	r1, [r3, #20]
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 800cf54:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
 800cf58:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 800cf5c:	60a2      	str	r2, [r4, #8]
	rv = rv << 8 | ptr[2];
 800cf5e:	8bde      	ldrh	r6, [r3, #30]
	rv = rv << 8 | ptr[1];
 800cf60:	7f5a      	ldrb	r2, [r3, #29]
	rv = rv << 8 | ptr[0];
 800cf62:	7f1b      	ldrb	r3, [r3, #28]
			fp->obj.id = fs->id;
 800cf64:	88c1      	ldrh	r1, [r0, #6]
 800cf66:	80a1      	strh	r1, [r4, #4]
	rv = rv << 8 | ptr[1];
 800cf68:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
	rv = rv << 8 | ptr[0];
 800cf6c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
 800cf70:	f104 0630 	add.w	r6, r4, #48	; 0x30
			fp->cltbl = 0;			/* Disable fast seek mode */
 800cf74:	2200      	movs	r2, #0
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 800cf76:	60e3      	str	r3, [r4, #12]
			fp->obj.fs = fs;	 	/* Validate the file object */
 800cf78:	6020      	str	r0, [r4, #0]
			fp->cltbl = 0;			/* Disable fast seek mode */
 800cf7a:	62e2      	str	r2, [r4, #44]	; 0x2c
			fp->err = 0;			/* Clear error flag */
 800cf7c:	7562      	strb	r2, [r4, #21]
			fp->sect = 0;			/* Invalidate current data sector */
 800cf7e:	6222      	str	r2, [r4, #32]
			fp->fptr = 0;			/* Set file pointer top of the file */
 800cf80:	61a2      	str	r2, [r4, #24]
			fp->flag = mode;		/* Set file access mode */
 800cf82:	7527      	strb	r7, [r4, #20]
	BYTE *d = (BYTE*)dst;
 800cf84:	4633      	mov	r3, r6
 800cf86:	f504 710c 	add.w	r1, r4, #560	; 0x230
		*d++ = (BYTE)val;
 800cf8a:	f803 2b01 	strb.w	r2, [r3], #1
	} while (--cnt);
 800cf8e:	428b      	cmp	r3, r1
 800cf90:	d1fb      	bne.n	800cf8a <f_open+0x132>
			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
 800cf92:	06ba      	lsls	r2, r7, #26
 800cf94:	f57f af73 	bpl.w	800ce7e <f_open+0x26>
 800cf98:	68e7      	ldr	r7, [r4, #12]
 800cf9a:	2f00      	cmp	r7, #0
 800cf9c:	f43f af6f 	beq.w	800ce7e <f_open+0x26>
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 800cfa0:	8943      	ldrh	r3, [r0, #10]
				clst = fp->obj.sclust;				/* Follow the cluster chain */
 800cfa2:	68a1      	ldr	r1, [r4, #8]
				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 800cfa4:	61a7      	str	r7, [r4, #24]
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800cfa6:	ebb7 2f43 	cmp.w	r7, r3, lsl #9
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 800cfaa:	ea4f 2843 	mov.w	r8, r3, lsl #9
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800cfae:	d806      	bhi.n	800cfbe <f_open+0x166>
 800cfb0:	e077      	b.n	800d0a2 <f_open+0x24a>
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 800cfb2:	1c43      	adds	r3, r0, #1
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800cfb4:	eba7 0708 	sub.w	r7, r7, r8
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 800cfb8:	d00a      	beq.n	800cfd0 <f_open+0x178>
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800cfba:	45b8      	cmp	r8, r7
 800cfbc:	d271      	bcs.n	800d0a2 <f_open+0x24a>
					clst = get_fat(&fp->obj, clst);
 800cfbe:	6820      	ldr	r0, [r4, #0]
 800cfc0:	f7ff fbea 	bl	800c798 <get_fat.isra.0>
					if (clst <= 1) res = FR_INT_ERR;
 800cfc4:	2801      	cmp	r0, #1
					clst = get_fat(&fp->obj, clst);
 800cfc6:	4601      	mov	r1, r0
					if (clst <= 1) res = FR_INT_ERR;
 800cfc8:	d8f3      	bhi.n	800cfb2 <f_open+0x15a>
 800cfca:	2502      	movs	r5, #2
				fp->clust = clst;
 800cfcc:	61e1      	str	r1, [r4, #28]
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 800cfce:	e754      	b.n	800ce7a <f_open+0x22>
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 800cfd0:	2501      	movs	r5, #1
 800cfd2:	e7fb      	b.n	800cfcc <f_open+0x174>
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 800cfd4:	a804      	add	r0, sp, #16
 800cfd6:	f7ff fdd5 	bl	800cb84 <dir_register>
				mode |= FA_CREATE_ALWAYS;		/* File is created */
 800cfda:	f047 0708 	orr.w	r7, r7, #8
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 800cfde:	2800      	cmp	r0, #0
 800cfe0:	f47f af78 	bne.w	800ced4 <f_open+0x7c>
				dw = GET_FATTIME();
 800cfe4:	f7f3 ff36 	bl	8000e54 <get_fattime>
					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
 800cfe8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 800cfea:	9b03      	ldr	r3, [sp, #12]
	*ptr++ = (BYTE)val; val >>= 8;
 800cfec:	f3c0 2607 	ubfx	r6, r0, #8, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800cff0:	f3c0 4107 	ubfx	r1, r0, #16, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800cff4:	fa5f fc80 	uxtb.w	ip, r0
	*ptr++ = (BYTE)val;
 800cff8:	0e00      	lsrs	r0, r0, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800cffa:	7411      	strb	r1, [r2, #16]
	*ptr++ = (BYTE)val; val >>= 8;
 800cffc:	f882 c00e 	strb.w	ip, [r2, #14]
	*ptr++ = (BYTE)val; val >>= 8;
 800d000:	73d6      	strb	r6, [r2, #15]
	*ptr++ = (BYTE)val;
 800d002:	7450      	strb	r0, [r2, #17]
					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 800d004:	9a0c      	ldr	r2, [sp, #48]	; 0x30
	*ptr++ = (BYTE)val; val >>= 8;
 800d006:	7611      	strb	r1, [r2, #24]
	*ptr++ = (BYTE)val; val >>= 8;
 800d008:	f882 c016 	strb.w	ip, [r2, #22]
	*ptr++ = (BYTE)val; val >>= 8;
 800d00c:	75d6      	strb	r6, [r2, #23]
	*ptr++ = (BYTE)val;
 800d00e:	7650      	strb	r0, [r2, #25]
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 800d010:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d012:	2120      	movs	r1, #32
 800d014:	72d1      	strb	r1, [r2, #11]
					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 800d016:	990c      	ldr	r1, [sp, #48]	; 0x30
	if (fs->fs_type == FS_FAT32) {
 800d018:	7818      	ldrb	r0, [r3, #0]
	rv = rv << 8 | ptr[0];
 800d01a:	7ece      	ldrb	r6, [r1, #27]
 800d01c:	7e8a      	ldrb	r2, [r1, #26]
	if (fs->fs_type == FS_FAT32) {
 800d01e:	2803      	cmp	r0, #3
	cl = ld_word(dir + DIR_FstClusLO);
 800d020:	ea42 2606 	orr.w	r6, r2, r6, lsl #8
	if (fs->fs_type == FS_FAT32) {
 800d024:	d105      	bne.n	800d032 <f_open+0x1da>
	rv = rv << 8 | ptr[0];
 800d026:	7d48      	ldrb	r0, [r1, #21]
 800d028:	7d0a      	ldrb	r2, [r1, #20]
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 800d02a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d02e:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d032:	2200      	movs	r2, #0
 800d034:	768a      	strb	r2, [r1, #26]
	*ptr++ = (BYTE)val;
 800d036:	76ca      	strb	r2, [r1, #27]
	if (fs->fs_type == FS_FAT32) {
 800d038:	7818      	ldrb	r0, [r3, #0]
 800d03a:	2803      	cmp	r0, #3
 800d03c:	d101      	bne.n	800d042 <f_open+0x1ea>
	*ptr++ = (BYTE)val; val >>= 8;
 800d03e:	750a      	strb	r2, [r1, #20]
	*ptr++ = (BYTE)val;
 800d040:	754a      	strb	r2, [r1, #21]
					st_dword(dj.dir + DIR_FileSize, 0);
 800d042:	990c      	ldr	r1, [sp, #48]	; 0x30
	*ptr++ = (BYTE)val; val >>= 8;
 800d044:	2200      	movs	r2, #0
					fs->wflag = 1;
 800d046:	2001      	movs	r0, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800d048:	770a      	strb	r2, [r1, #28]
	*ptr++ = (BYTE)val; val >>= 8;
 800d04a:	774a      	strb	r2, [r1, #29]
	*ptr++ = (BYTE)val; val >>= 8;
 800d04c:	778a      	strb	r2, [r1, #30]
	*ptr++ = (BYTE)val;
 800d04e:	77ca      	strb	r2, [r1, #31]
					fs->wflag = 1;
 800d050:	70d8      	strb	r0, [r3, #3]
					if (cl) {							/* Remove the cluster chain if exist */
 800d052:	2e00      	cmp	r6, #0
 800d054:	f43f af50 	beq.w	800cef8 <f_open+0xa0>
						res = remove_chain(&dj.obj, cl, 0);
 800d058:	4631      	mov	r1, r6
 800d05a:	a804      	add	r0, sp, #16
						dw = fs->winsect;
 800d05c:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
						res = remove_chain(&dj.obj, cl, 0);
 800d060:	f7ff fc70 	bl	800c944 <remove_chain>
						if (res == FR_OK) {
 800d064:	2800      	cmp	r0, #0
 800d066:	f47f af35 	bne.w	800ced4 <f_open+0x7c>
							res = move_window(fs, dw);
 800d06a:	9b03      	ldr	r3, [sp, #12]
	if (sector != fs->winsect) {	/* Window offset changed? */
 800d06c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d06e:	4590      	cmp	r8, r2
 800d070:	d03d      	beq.n	800d0ee <f_open+0x296>
 800d072:	4618      	mov	r0, r3
 800d074:	4641      	mov	r1, r8
 800d076:	f7ff f8e9 	bl	800c24c <move_window.part.0>
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 800d07a:	9b03      	ldr	r3, [sp, #12]
 800d07c:	3e01      	subs	r6, #1
 800d07e:	60de      	str	r6, [r3, #12]
		if (res == FR_OK) {
 800d080:	2800      	cmp	r0, #0
 800d082:	f43f af39 	beq.w	800cef8 <f_open+0xa0>
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 800d086:	4605      	mov	r5, r0
 800d088:	e6f7      	b.n	800ce7a <f_open+0x22>
 800d08a:	f017 0ffe 	tst.w	r7, #254	; 0xfe
 800d08e:	bf14      	ite	ne
 800d090:	2101      	movne	r1, #1
 800d092:	2100      	moveq	r1, #0
 800d094:	e736      	b.n	800cf04 <f_open+0xac>
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 800d096:	0736      	lsls	r6, r6, #28
 800d098:	d4a4      	bmi.n	800cfe4 <f_open+0x18c>
 800d09a:	9b03      	ldr	r3, [sp, #12]
 800d09c:	e732      	b.n	800cf04 <f_open+0xac>
 800d09e:	461d      	mov	r5, r3
 800d0a0:	e6eb      	b.n	800ce7a <f_open+0x22>
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 800d0a2:	f3c7 0308 	ubfx	r3, r7, #0, #9
				fp->clust = clst;
 800d0a6:	61e1      	str	r1, [r4, #28]
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 800d0a8:	2b00      	cmp	r3, #0
 800d0aa:	f43f aee8 	beq.w	800ce7e <f_open+0x26>
					if ((sc = clust2sect(fs, clst)) == 0) {
 800d0ae:	f8dd c00c 	ldr.w	ip, [sp, #12]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800d0b2:	f8dc 3014 	ldr.w	r3, [ip, #20]
	clst -= 2;
 800d0b6:	1e88      	subs	r0, r1, #2
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800d0b8:	3b02      	subs	r3, #2
 800d0ba:	4298      	cmp	r0, r3
 800d0bc:	f4bf af2b 	bcs.w	800cf16 <f_open+0xbe>
	return clst * fs->csize + fs->database;
 800d0c0:	f8bc 300a 	ldrh.w	r3, [ip, #10]
 800d0c4:	f8dc 2028 	ldr.w	r2, [ip, #40]	; 0x28
 800d0c8:	fb00 2203 	mla	r2, r0, r3, r2
					if ((sc = clust2sect(fs, clst)) == 0) {
 800d0cc:	2a00      	cmp	r2, #0
 800d0ce:	f43f af22 	beq.w	800cf16 <f_open+0xbe>
						fp->sect = sc + (DWORD)(ofs / SS(fs));
 800d0d2:	eb02 2257 	add.w	r2, r2, r7, lsr #9
 800d0d6:	6222      	str	r2, [r4, #32]
						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
 800d0d8:	f89c 0001 	ldrb.w	r0, [ip, #1]
 800d0dc:	4631      	mov	r1, r6
 800d0de:	2301      	movs	r3, #1
 800d0e0:	f7fe ff28 	bl	800bf34 <disk_read>
 800d0e4:	2800      	cmp	r0, #0
 800d0e6:	f43f aeca 	beq.w	800ce7e <f_open+0x26>
 800d0ea:	2501      	movs	r5, #1
 800d0ec:	e6c5      	b.n	800ce7a <f_open+0x22>
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 800d0ee:	3e01      	subs	r6, #1
 800d0f0:	60de      	str	r6, [r3, #12]
		if (res == FR_OK) {
 800d0f2:	e701      	b.n	800cef8 <f_open+0xa0>
 800d0f4:	20002c48 	.word	0x20002c48

0800d0f8 <f_write>:
	FIL* fp,			/* Pointer to the file object */
	const void* buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
 800d0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0fc:	4698      	mov	r8, r3
 800d0fe:	b085      	sub	sp, #20
	DWORD clst, sect;
	UINT wcnt, cc, csect;
	const BYTE *wbuff = (const BYTE*)buff;


	*bw = 0;	/* Clear write byte counter */
 800d100:	2300      	movs	r3, #0
{
 800d102:	4689      	mov	r9, r1
	*bw = 0;	/* Clear write byte counter */
 800d104:	f8c8 3000 	str.w	r3, [r8]
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 800d108:	a903      	add	r1, sp, #12
{
 800d10a:	4617      	mov	r7, r2
 800d10c:	4604      	mov	r4, r0
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 800d10e:	f7fe fff1 	bl	800c0f4 <validate>
	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 800d112:	4605      	mov	r5, r0
 800d114:	2800      	cmp	r0, #0
 800d116:	f040 8088 	bne.w	800d22a <f_write+0x132>
 800d11a:	7d65      	ldrb	r5, [r4, #21]
 800d11c:	2d00      	cmp	r5, #0
 800d11e:	f040 8084 	bne.w	800d22a <f_write+0x132>
	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 800d122:	7d23      	ldrb	r3, [r4, #20]
 800d124:	079a      	lsls	r2, r3, #30
 800d126:	f140 80b4 	bpl.w	800d292 <f_write+0x19a>

	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
 800d12a:	69a6      	ldr	r6, [r4, #24]
 800d12c:	42fe      	cmn	r6, r7
		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 800d12e:	bf28      	it	cs
 800d130:	43f7      	mvncs	r7, r6
	}

	for ( ;  btw;							/* Repeat until all data written */
 800d132:	2f00      	cmp	r7, #0
 800d134:	d076      	beq.n	800d224 <f_write+0x12c>
 800d136:	f104 0b30 	add.w	fp, r4, #48	; 0x30
		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize, *bw += wcnt, btw -= wcnt) {
		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 800d13a:	f3c6 0008 	ubfx	r0, r6, #0, #9
 800d13e:	2800      	cmp	r0, #0
 800d140:	d150      	bne.n	800d1e4 <f_write+0xec>
			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 800d142:	9903      	ldr	r1, [sp, #12]
 800d144:	f8b1 a00a 	ldrh.w	sl, [r1, #10]
 800d148:	f10a 3aff 	add.w	sl, sl, #4294967295
			if (csect == 0) {				/* On the cluster boundary? */
 800d14c:	ea1a 2a56 	ands.w	sl, sl, r6, lsr #9
			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 800d150:	ea4f 2356 	mov.w	r3, r6, lsr #9
			if (csect == 0) {				/* On the cluster boundary? */
 800d154:	d10f      	bne.n	800d176 <f_write+0x7e>
				if (fp->fptr == 0) {		/* On the top of the file? */
 800d156:	2e00      	cmp	r6, #0
 800d158:	d171      	bne.n	800d23e <f_write+0x146>
					clst = fp->obj.sclust;	/* Follow from the origin */
 800d15a:	68a0      	ldr	r0, [r4, #8]
					if (clst == 0) {		/* If no cluster is allocated, */
 800d15c:	2800      	cmp	r0, #0
 800d15e:	f000 80a2 	beq.w	800d2a6 <f_write+0x1ae>
					{
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
					}
				}
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
				if (clst == 1) ABORT(fs, FR_INT_ERR);
 800d162:	2801      	cmp	r0, #1
 800d164:	d065      	beq.n	800d232 <f_write+0x13a>
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 800d166:	1c43      	adds	r3, r0, #1
 800d168:	f000 808d 	beq.w	800d286 <f_write+0x18e>
				fp->clust = clst;			/* Update current cluster */
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 800d16c:	68a3      	ldr	r3, [r4, #8]
 800d16e:	9903      	ldr	r1, [sp, #12]
				fp->clust = clst;			/* Update current cluster */
 800d170:	61e0      	str	r0, [r4, #28]
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 800d172:	b903      	cbnz	r3, 800d176 <f_write+0x7e>
 800d174:	60a0      	str	r0, [r4, #8]
			}
#if _FS_TINY
			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back sector cache */
#else
			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
 800d176:	f994 3014 	ldrsb.w	r3, [r4, #20]
 800d17a:	2b00      	cmp	r3, #0
 800d17c:	db76      	blt.n	800d26c <f_write+0x174>
	clst -= 2;
 800d17e:	69e2      	ldr	r2, [r4, #28]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800d180:	694b      	ldr	r3, [r1, #20]
	clst -= 2;
 800d182:	3a02      	subs	r2, #2
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800d184:	3b02      	subs	r3, #2
 800d186:	429a      	cmp	r2, r3
 800d188:	d253      	bcs.n	800d232 <f_write+0x13a>
	return clst * fs->csize + fs->database;
 800d18a:	894b      	ldrh	r3, [r1, #10]
 800d18c:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800d18e:	fb03 0202 	mla	r2, r3, r2, r0
				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
				fp->flag &= (BYTE)~FA_DIRTY;
			}
#endif
			sect = clust2sect(fs, fp->clust);	/* Get current sector */
			if (!sect) ABORT(fs, FR_INT_ERR);
 800d192:	2a00      	cmp	r2, #0
 800d194:	d04d      	beq.n	800d232 <f_write+0x13a>
			sect += csect;
			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
			if (cc) {						/* Write maximum contiguous sectors directly */
 800d196:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
			sect += csect;
 800d19a:	4452      	add	r2, sl
			if (cc) {						/* Write maximum contiguous sectors directly */
 800d19c:	d318      	bcc.n	800d1d0 <f_write+0xd8>
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 800d19e:	eb0a 2057 	add.w	r0, sl, r7, lsr #9
 800d1a2:	4298      	cmp	r0, r3
			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 800d1a4:	ea4f 2657 	mov.w	r6, r7, lsr #9
					cc = fs->csize - csect;
 800d1a8:	bf88      	it	hi
 800d1aa:	eba3 060a 	subhi.w	r6, r3, sl
				}
				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 800d1ae:	7848      	ldrb	r0, [r1, #1]
 800d1b0:	9201      	str	r2, [sp, #4]
 800d1b2:	4633      	mov	r3, r6
 800d1b4:	4649      	mov	r1, r9
 800d1b6:	f7fe fecb 	bl	800bf50 <disk_write>
 800d1ba:	2800      	cmp	r0, #0
 800d1bc:	d163      	bne.n	800d286 <f_write+0x18e>
				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct write */
					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
					fs->wflag = 0;
				}
#else
				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
 800d1be:	6a21      	ldr	r1, [r4, #32]
 800d1c0:	9a01      	ldr	r2, [sp, #4]
 800d1c2:	1a89      	subs	r1, r1, r2
 800d1c4:	42b1      	cmp	r1, r6
 800d1c6:	f0c0 8081 	bcc.w	800d2cc <f_write+0x1d4>
					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
					fp->flag &= (BYTE)~FA_DIRTY;
				}
#endif
#endif
				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
 800d1ca:	ea4f 2a46 	mov.w	sl, r6, lsl #9
				continue;
 800d1ce:	e017      	b.n	800d200 <f_write+0x108>
			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
				fs->winsect = sect;
			}
#else
			if (fp->sect != sect && 		/* Fill sector cache with file data */
 800d1d0:	6a23      	ldr	r3, [r4, #32]
				fp->fptr < fp->obj.objsize &&
 800d1d2:	69a0      	ldr	r0, [r4, #24]
			if (fp->sect != sect && 		/* Fill sector cache with file data */
 800d1d4:	4293      	cmp	r3, r2
 800d1d6:	d002      	beq.n	800d1de <f_write+0xe6>
 800d1d8:	68e3      	ldr	r3, [r4, #12]
 800d1da:	4298      	cmp	r0, r3
 800d1dc:	d36b      	bcc.n	800d2b6 <f_write+0x1be>
				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
					ABORT(fs, FR_DISK_ERR);
			}
#endif
			fp->sect = sect;
 800d1de:	6222      	str	r2, [r4, #32]
 800d1e0:	f3c0 0008 	ubfx	r0, r0, #0, #9
		}
		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 800d1e4:	f5c0 7a00 	rsb	sl, r0, #512	; 0x200
		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 800d1e8:	45ba      	cmp	sl, r7
 800d1ea:	bf28      	it	cs
 800d1ec:	46ba      	movcs	sl, r7
	if (cnt) {
 800d1ee:	4458      	add	r0, fp
 800d1f0:	4652      	mov	r2, sl
 800d1f2:	4649      	mov	r1, r9
 800d1f4:	f7fe ff96 	bl	800c124 <mem_cpy.part.0>
		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
		fs->wflag = 1;
#else
		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
		fp->flag |= FA_DIRTY;
 800d1f8:	7d23      	ldrb	r3, [r4, #20]
 800d1fa:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800d1fe:	7523      	strb	r3, [r4, #20]
		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize, *bw += wcnt, btw -= wcnt) {
 800d200:	69a6      	ldr	r6, [r4, #24]
 800d202:	68e2      	ldr	r2, [r4, #12]
 800d204:	f8d8 3000 	ldr.w	r3, [r8]
 800d208:	4456      	add	r6, sl
 800d20a:	42b2      	cmp	r2, r6
 800d20c:	bf38      	it	cc
 800d20e:	4632      	movcc	r2, r6
 800d210:	4453      	add	r3, sl
	for ( ;  btw;							/* Repeat until all data written */
 800d212:	ebb7 070a 	subs.w	r7, r7, sl
		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize, *bw += wcnt, btw -= wcnt) {
 800d216:	61a6      	str	r6, [r4, #24]
 800d218:	60e2      	str	r2, [r4, #12]
 800d21a:	44d1      	add	r9, sl
 800d21c:	f8c8 3000 	str.w	r3, [r8]
	for ( ;  btw;							/* Repeat until all data written */
 800d220:	d18b      	bne.n	800d13a <f_write+0x42>
 800d222:	7d23      	ldrb	r3, [r4, #20]
#endif
	}

	fp->flag |= FA_MODIFIED;				/* Set file change flag */
 800d224:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d228:	7523      	strb	r3, [r4, #20]

	LEAVE_FF(fs, FR_OK);
}
 800d22a:	4628      	mov	r0, r5
 800d22c:	b005      	add	sp, #20
 800d22e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if (clst == 1) ABORT(fs, FR_INT_ERR);
 800d232:	2502      	movs	r5, #2
}
 800d234:	4628      	mov	r0, r5
				if (clst == 1) ABORT(fs, FR_INT_ERR);
 800d236:	7565      	strb	r5, [r4, #21]
}
 800d238:	b005      	add	sp, #20
 800d23a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					if (fp->cltbl) {
 800d23e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d240:	b349      	cbz	r1, 800d296 <f_write+0x19e>
	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 800d242:	6820      	ldr	r0, [r4, #0]
		ncl = *tbl++;			/* Number of cluters in the fragment */
 800d244:	684a      	ldr	r2, [r1, #4]
	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 800d246:	8940      	ldrh	r0, [r0, #10]
 800d248:	fbb3 f3f0 	udiv	r3, r3, r0
	tbl = fp->cltbl + 1;	/* Top of CLMT */
 800d24c:	3104      	adds	r1, #4
		if (ncl == 0) return 0;	/* End of table? (error) */
 800d24e:	b92a      	cbnz	r2, 800d25c <f_write+0x164>
 800d250:	e7e7      	b.n	800d222 <f_write+0x12a>
		cl -= ncl; tbl++;		/* Next fragment */
 800d252:	1a9b      	subs	r3, r3, r2
		ncl = *tbl++;			/* Number of cluters in the fragment */
 800d254:	f851 2f08 	ldr.w	r2, [r1, #8]!
		if (ncl == 0) return 0;	/* End of table? (error) */
 800d258:	2a00      	cmp	r2, #0
 800d25a:	d0e2      	beq.n	800d222 <f_write+0x12a>
		if (cl < ncl) break;	/* In this fragment? */
 800d25c:	4293      	cmp	r3, r2
 800d25e:	d2f8      	bcs.n	800d252 <f_write+0x15a>
	return cl + *tbl;	/* Return the cluster number */
 800d260:	6848      	ldr	r0, [r1, #4]
 800d262:	4418      	add	r0, r3
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 800d264:	2800      	cmp	r0, #0
 800d266:	f47f af7c 	bne.w	800d162 <f_write+0x6a>
 800d26a:	e7da      	b.n	800d222 <f_write+0x12a>
				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 800d26c:	7848      	ldrb	r0, [r1, #1]
 800d26e:	6a22      	ldr	r2, [r4, #32]
 800d270:	2301      	movs	r3, #1
 800d272:	4659      	mov	r1, fp
 800d274:	f7fe fe6c 	bl	800bf50 <disk_write>
 800d278:	b928      	cbnz	r0, 800d286 <f_write+0x18e>
				fp->flag &= (BYTE)~FA_DIRTY;
 800d27a:	7d23      	ldrb	r3, [r4, #20]
 800d27c:	9903      	ldr	r1, [sp, #12]
 800d27e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d282:	7523      	strb	r3, [r4, #20]
 800d284:	e77b      	b.n	800d17e <f_write+0x86>
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 800d286:	2501      	movs	r5, #1
}
 800d288:	4628      	mov	r0, r5
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 800d28a:	7565      	strb	r5, [r4, #21]
}
 800d28c:	b005      	add	sp, #20
 800d28e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 800d292:	2507      	movs	r5, #7
 800d294:	e7c9      	b.n	800d22a <f_write+0x132>
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 800d296:	69e1      	ldr	r1, [r4, #28]
 800d298:	4620      	mov	r0, r4
 800d29a:	f7ff fae9 	bl	800c870 <create_chain>
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 800d29e:	2800      	cmp	r0, #0
 800d2a0:	f47f af5f 	bne.w	800d162 <f_write+0x6a>
 800d2a4:	e7bd      	b.n	800d222 <f_write+0x12a>
						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 800d2a6:	4651      	mov	r1, sl
 800d2a8:	4620      	mov	r0, r4
 800d2aa:	f7ff fae1 	bl	800c870 <create_chain>
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 800d2ae:	2800      	cmp	r0, #0
 800d2b0:	f47f af57 	bne.w	800d162 <f_write+0x6a>
 800d2b4:	e7b5      	b.n	800d222 <f_write+0x12a>
				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 800d2b6:	7848      	ldrb	r0, [r1, #1]
 800d2b8:	9201      	str	r2, [sp, #4]
 800d2ba:	2301      	movs	r3, #1
 800d2bc:	4659      	mov	r1, fp
 800d2be:	f7fe fe39 	bl	800bf34 <disk_read>
				fp->fptr < fp->obj.objsize &&
 800d2c2:	2800      	cmp	r0, #0
 800d2c4:	d1df      	bne.n	800d286 <f_write+0x18e>
 800d2c6:	69a0      	ldr	r0, [r4, #24]
 800d2c8:	9a01      	ldr	r2, [sp, #4]
 800d2ca:	e788      	b.n	800d1de <f_write+0xe6>
	if (cnt) {
 800d2cc:	eb09 2141 	add.w	r1, r9, r1, lsl #9
 800d2d0:	f44f 7200 	mov.w	r2, #512	; 0x200
 800d2d4:	4658      	mov	r0, fp
 800d2d6:	f7fe ff25 	bl	800c124 <mem_cpy.part.0>
					fp->flag &= (BYTE)~FA_DIRTY;
 800d2da:	7d23      	ldrb	r3, [r4, #20]
 800d2dc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d2e0:	7523      	strb	r3, [r4, #20]
 800d2e2:	e772      	b.n	800d1ca <f_write+0xd2>

0800d2e4 <putc_bfd>:
static
void putc_bfd (		/* Buffered write with code conversion */
	putbuff* pb,
	TCHAR c
)
{
 800d2e4:	b570      	push	{r4, r5, r6, lr}
	UINT bw;
	int i;


	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
 800d2e6:	290a      	cmp	r1, #10
{
 800d2e8:	b082      	sub	sp, #8
 800d2ea:	460e      	mov	r6, r1
 800d2ec:	4604      	mov	r4, r0
	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
 800d2ee:	d01a      	beq.n	800d326 <putc_bfd+0x42>
		putc_bfd(pb, '\r');
	}

	i = pb->idx;		/* Write index of pb->buf[] */
 800d2f0:	6865      	ldr	r5, [r4, #4]
	if (i < 0) return;
 800d2f2:	2d00      	cmp	r5, #0
 800d2f4:	db08      	blt.n	800d308 <putc_bfd+0x24>
	if (c >= 0x100)
		pb->buf[i++] = (BYTE)(c >> 8);
	pb->buf[i++] = (BYTE)c;
#endif
#else							/* Write a character without conversion */
	pb->buf[i++] = (BYTE)c;
 800d2f6:	1963      	adds	r3, r4, r5
 800d2f8:	3501      	adds	r5, #1
#endif

	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 800d2fa:	2d3c      	cmp	r5, #60	; 0x3c
	pb->buf[i++] = (BYTE)c;
 800d2fc:	731e      	strb	r6, [r3, #12]
	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 800d2fe:	dc05      	bgt.n	800d30c <putc_bfd+0x28>
		f_write(pb->fp, pb->buf, (UINT)i, &bw);
		i = (bw == (UINT)i) ? 0 : -1;
	}
	pb->idx = i;
	pb->nchr++;
 800d300:	68a3      	ldr	r3, [r4, #8]
	pb->idx = i;
 800d302:	6065      	str	r5, [r4, #4]
	pb->nchr++;
 800d304:	3301      	adds	r3, #1
 800d306:	60a3      	str	r3, [r4, #8]
}
 800d308:	b002      	add	sp, #8
 800d30a:	bd70      	pop	{r4, r5, r6, pc}
		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 800d30c:	4621      	mov	r1, r4
 800d30e:	ab01      	add	r3, sp, #4
 800d310:	462a      	mov	r2, r5
 800d312:	f851 0b0c 	ldr.w	r0, [r1], #12
 800d316:	f7ff feef 	bl	800d0f8 <f_write>
		i = (bw == (UINT)i) ? 0 : -1;
 800d31a:	9b01      	ldr	r3, [sp, #4]
 800d31c:	1b5d      	subs	r5, r3, r5
 800d31e:	bf18      	it	ne
 800d320:	f04f 35ff 	movne.w	r5, #4294967295
 800d324:	e7ec      	b.n	800d300 <putc_bfd+0x1c>
		putc_bfd(pb, '\r');
 800d326:	210d      	movs	r1, #13
 800d328:	f7ff ffdc 	bl	800d2e4 <putc_bfd>
 800d32c:	e7e0      	b.n	800d2f0 <putc_bfd+0xc>
 800d32e:	bf00      	nop

0800d330 <putc_flush>:
	putbuff* pb
)
{
	UINT nw;

	if (   pb->idx >= 0	/* Flush buffered characters to the file */
 800d330:	6842      	ldr	r2, [r0, #4]
 800d332:	2a00      	cmp	r2, #0
 800d334:	db14      	blt.n	800d360 <putc_flush+0x30>
{
 800d336:	b510      	push	{r4, lr}
		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 800d338:	4601      	mov	r1, r0
{
 800d33a:	b082      	sub	sp, #8
 800d33c:	4604      	mov	r4, r0
		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 800d33e:	ab01      	add	r3, sp, #4
 800d340:	f851 0b0c 	ldr.w	r0, [r1], #12
 800d344:	f7ff fed8 	bl	800d0f8 <f_write>
 800d348:	b930      	cbnz	r0, 800d358 <putc_flush+0x28>
		&& (UINT)pb->idx == nw) return pb->nchr;
 800d34a:	6862      	ldr	r2, [r4, #4]
 800d34c:	9b01      	ldr	r3, [sp, #4]
 800d34e:	429a      	cmp	r2, r3
 800d350:	d102      	bne.n	800d358 <putc_flush+0x28>
 800d352:	68a0      	ldr	r0, [r4, #8]
	return EOF;
}
 800d354:	b002      	add	sp, #8
 800d356:	bd10      	pop	{r4, pc}
	return EOF;
 800d358:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d35c:	b002      	add	sp, #8
 800d35e:	bd10      	pop	{r4, pc}
	return EOF;
 800d360:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d364:	4770      	bx	lr
 800d366:	bf00      	nop

0800d368 <f_sync>:
{
 800d368:	b570      	push	{r4, r5, r6, lr}
 800d36a:	b082      	sub	sp, #8
	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 800d36c:	a901      	add	r1, sp, #4
{
 800d36e:	4604      	mov	r4, r0
	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 800d370:	f7fe fec0 	bl	800c0f4 <validate>
	if (res == FR_OK) {
 800d374:	2800      	cmp	r0, #0
 800d376:	d13f      	bne.n	800d3f8 <f_sync+0x90>
		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 800d378:	7d23      	ldrb	r3, [r4, #20]
 800d37a:	f013 0040 	ands.w	r0, r3, #64	; 0x40
 800d37e:	d03b      	beq.n	800d3f8 <f_sync+0x90>
			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
 800d380:	061b      	lsls	r3, r3, #24
 800d382:	d43b      	bmi.n	800d3fc <f_sync+0x94>
			tm = GET_FATTIME();				/* Modified time */
 800d384:	f7f3 fd66 	bl	8000e54 <get_fattime>
				res = move_window(fs, fp->dir_sect);
 800d388:	9e01      	ldr	r6, [sp, #4]
 800d38a:	6a61      	ldr	r1, [r4, #36]	; 0x24
	if (sector != fs->winsect) {	/* Window offset changed? */
 800d38c:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 800d38e:	4299      	cmp	r1, r3
			tm = GET_FATTIME();				/* Modified time */
 800d390:	4605      	mov	r5, r0
	if (sector != fs->winsect) {	/* Window offset changed? */
 800d392:	d004      	beq.n	800d39e <f_sync+0x36>
 800d394:	4630      	mov	r0, r6
 800d396:	f7fe ff59 	bl	800c24c <move_window.part.0>
				if (res == FR_OK) {
 800d39a:	bb68      	cbnz	r0, 800d3f8 <f_sync+0x90>
 800d39c:	9e01      	ldr	r6, [sp, #4]
					dir = fp->dir_ptr;
 800d39e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 800d3a0:	7ada      	ldrb	r2, [r3, #11]
 800d3a2:	f042 0220 	orr.w	r2, r2, #32
 800d3a6:	72da      	strb	r2, [r3, #11]
					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 800d3a8:	68a2      	ldr	r2, [r4, #8]
 800d3aa:	6821      	ldr	r1, [r4, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 800d3ac:	769a      	strb	r2, [r3, #26]
 800d3ae:	f3c2 2007 	ubfx	r0, r2, #8, #8
	*ptr++ = (BYTE)val;
 800d3b2:	76d8      	strb	r0, [r3, #27]
	if (fs->fs_type == FS_FAT32) {
 800d3b4:	7809      	ldrb	r1, [r1, #0]
 800d3b6:	2903      	cmp	r1, #3
 800d3b8:	d103      	bne.n	800d3c2 <f_sync+0x5a>
		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 800d3ba:	0c12      	lsrs	r2, r2, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d3bc:	0a11      	lsrs	r1, r2, #8
 800d3be:	751a      	strb	r2, [r3, #20]
	*ptr++ = (BYTE)val;
 800d3c0:	7559      	strb	r1, [r3, #21]
					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 800d3c2:	68e2      	ldr	r2, [r4, #12]
	*ptr++ = (BYTE)val; val >>= 8;
 800d3c4:	771a      	strb	r2, [r3, #28]
 800d3c6:	0a11      	lsrs	r1, r2, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d3c8:	7759      	strb	r1, [r3, #29]
 800d3ca:	0c10      	lsrs	r0, r2, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d3cc:	0a29      	lsrs	r1, r5, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d3ce:	0e12      	lsrs	r2, r2, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d3d0:	759d      	strb	r5, [r3, #22]
	*ptr++ = (BYTE)val; val >>= 8;
 800d3d2:	7798      	strb	r0, [r3, #30]
	*ptr++ = (BYTE)val;
 800d3d4:	77da      	strb	r2, [r3, #31]
	*ptr++ = (BYTE)val; val >>= 8;
 800d3d6:	75d9      	strb	r1, [r3, #23]
 800d3d8:	0c28      	lsrs	r0, r5, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d3da:	2200      	movs	r2, #0
					fs->wflag = 1;
 800d3dc:	2101      	movs	r1, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800d3de:	0e2d      	lsrs	r5, r5, #24
 800d3e0:	7618      	strb	r0, [r3, #24]
	*ptr++ = (BYTE)val;
 800d3e2:	765d      	strb	r5, [r3, #25]
	*ptr++ = (BYTE)val; val >>= 8;
 800d3e4:	749a      	strb	r2, [r3, #18]
	*ptr++ = (BYTE)val;
 800d3e6:	74da      	strb	r2, [r3, #19]
					res = sync_fs(fs);					/* Restore it to the directory */
 800d3e8:	4630      	mov	r0, r6
					fs->wflag = 1;
 800d3ea:	70f1      	strb	r1, [r6, #3]
					res = sync_fs(fs);					/* Restore it to the directory */
 800d3ec:	f7fe fece 	bl	800c18c <sync_fs>
					fp->flag &= (BYTE)~FA_MODIFIED;
 800d3f0:	7d23      	ldrb	r3, [r4, #20]
 800d3f2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d3f6:	7523      	strb	r3, [r4, #20]
}
 800d3f8:	b002      	add	sp, #8
 800d3fa:	bd70      	pop	{r4, r5, r6, pc}
				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 800d3fc:	9b01      	ldr	r3, [sp, #4]
 800d3fe:	6a22      	ldr	r2, [r4, #32]
 800d400:	7858      	ldrb	r0, [r3, #1]
 800d402:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d406:	2301      	movs	r3, #1
 800d408:	f7fe fda2 	bl	800bf50 <disk_write>
 800d40c:	b920      	cbnz	r0, 800d418 <f_sync+0xb0>
				fp->flag &= (BYTE)~FA_DIRTY;
 800d40e:	7d23      	ldrb	r3, [r4, #20]
 800d410:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d414:	7523      	strb	r3, [r4, #20]
 800d416:	e7b5      	b.n	800d384 <f_sync+0x1c>
				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 800d418:	2001      	movs	r0, #1
 800d41a:	e7ed      	b.n	800d3f8 <f_sync+0x90>

0800d41c <f_close>:
{
 800d41c:	b530      	push	{r4, r5, lr}
 800d41e:	b083      	sub	sp, #12
 800d420:	4604      	mov	r4, r0
	res = f_sync(fp);					/* Flush cached data */
 800d422:	f7ff ffa1 	bl	800d368 <f_sync>
	if (res == FR_OK)
 800d426:	b108      	cbz	r0, 800d42c <f_close+0x10>
}
 800d428:	b003      	add	sp, #12
 800d42a:	bd30      	pop	{r4, r5, pc}
		res = validate(&fp->obj, &fs);	/* Lock volume */
 800d42c:	a901      	add	r1, sp, #4
 800d42e:	4620      	mov	r0, r4
 800d430:	f7fe fe60 	bl	800c0f4 <validate>
		if (res == FR_OK) {
 800d434:	2800      	cmp	r0, #0
 800d436:	d1f7      	bne.n	800d428 <f_close+0xc>
	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 800d438:	6923      	ldr	r3, [r4, #16]
 800d43a:	3b01      	subs	r3, #1
 800d43c:	2b01      	cmp	r3, #1
 800d43e:	d80d      	bhi.n	800d45c <f_close+0x40>
		n = Files[i].ctr;
 800d440:	490b      	ldr	r1, [pc, #44]	; (800d470 <f_close+0x54>)
 800d442:	eb01 1503 	add.w	r5, r1, r3, lsl #4
 800d446:	011b      	lsls	r3, r3, #4
 800d448:	89aa      	ldrh	r2, [r5, #12]
		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 800d44a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800d44e:	d00d      	beq.n	800d46c <f_close+0x50>
		if (n > 0) n--;				/* Decrement read mode open count */
 800d450:	b932      	cbnz	r2, 800d460 <f_close+0x44>
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 800d452:	2200      	movs	r2, #0
 800d454:	50ca      	str	r2, [r1, r3]
				fp->obj.fs = 0;			/* Invalidate file object */
 800d456:	2300      	movs	r3, #0
 800d458:	6023      	str	r3, [r4, #0]
 800d45a:	e7e5      	b.n	800d428 <f_close+0xc>
		res = FR_INT_ERR;			/* Invalid index nunber */
 800d45c:	2002      	movs	r0, #2
 800d45e:	e7e3      	b.n	800d428 <f_close+0xc>
		if (n > 0) n--;				/* Decrement read mode open count */
 800d460:	3a01      	subs	r2, #1
 800d462:	b292      	uxth	r2, r2
		Files[i].ctr = n;
 800d464:	81aa      	strh	r2, [r5, #12]
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 800d466:	2a00      	cmp	r2, #0
 800d468:	d1f5      	bne.n	800d456 <f_close+0x3a>
 800d46a:	e7f2      	b.n	800d452 <f_close+0x36>
		Files[i].ctr = n;
 800d46c:	81a8      	strh	r0, [r5, #12]
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 800d46e:	e7f0      	b.n	800d452 <f_close+0x36>
 800d470:	20002c48 	.word	0x20002c48

0800d474 <f_mkfs>:
{
 800d474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d478:	b08d      	sub	sp, #52	; 0x34
 800d47a:	460f      	mov	r7, r1
 800d47c:	9009      	str	r0, [sp, #36]	; 0x24
	vol = get_ldnumber(&path);					/* Get target logical drive */
 800d47e:	a809      	add	r0, sp, #36	; 0x24
{
 800d480:	4690      	mov	r8, r2
 800d482:	461d      	mov	r5, r3
	vol = get_ldnumber(&path);					/* Get target logical drive */
 800d484:	f7fe fe12 	bl	800c0ac <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
 800d488:	2800      	cmp	r0, #0
 800d48a:	f2c0 80dc 	blt.w	800d646 <f_mkfs+0x1d2>
	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 800d48e:	4bd1      	ldr	r3, [pc, #836]	; (800d7d4 <f_mkfs+0x360>)
 800d490:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d494:	b10b      	cbz	r3, 800d49a <f_mkfs+0x26>
 800d496:	2200      	movs	r2, #0
 800d498:	701a      	strb	r2, [r3, #0]
	pdrv = LD2PD(vol);	/* Physical drive */
 800d49a:	b2c4      	uxtb	r4, r0
	stat = disk_initialize(pdrv);
 800d49c:	4620      	mov	r0, r4
 800d49e:	f7fe fd39 	bl	800bf14 <disk_initialize>
	if (stat & STA_NOINIT) return FR_NOT_READY;
 800d4a2:	07c3      	lsls	r3, r0, #31
 800d4a4:	f100 80cb 	bmi.w	800d63e <f_mkfs+0x1ca>
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 800d4a8:	0746      	lsls	r6, r0, #29
 800d4aa:	d41e      	bmi.n	800d4ea <f_mkfs+0x76>
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & (sz_blk - 1))) sz_blk = 1;	/* Erase block to align data area */
 800d4ac:	aa0a      	add	r2, sp, #40	; 0x28
 800d4ae:	2103      	movs	r1, #3
 800d4b0:	4620      	mov	r0, r4
 800d4b2:	f7fe fd5b 	bl	800bf6c <disk_ioctl>
 800d4b6:	b928      	cbnz	r0, 800d4c4 <f_mkfs+0x50>
 800d4b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d4ba:	1e53      	subs	r3, r2, #1
 800d4bc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800d4c0:	f0c0 80ad 	bcc.w	800d61e <f_mkfs+0x1aa>
 800d4c4:	2301      	movs	r3, #1
 800d4c6:	930a      	str	r3, [sp, #40]	; 0x28
	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Check if au is valid */
 800d4c8:	f1b8 0f00 	cmp.w	r8, #0
 800d4cc:	d011      	beq.n	800d4f2 <f_mkfs+0x7e>
 800d4ce:	4bc2      	ldr	r3, [pc, #776]	; (800d7d8 <f_mkfs+0x364>)
 800d4d0:	f5a8 7200 	sub.w	r2, r8, #512	; 0x200
 800d4d4:	429a      	cmp	r2, r3
 800d4d6:	d804      	bhi.n	800d4e2 <f_mkfs+0x6e>
 800d4d8:	f108 33ff 	add.w	r3, r8, #4294967295
 800d4dc:	ea13 0f08 	tst.w	r3, r8
 800d4e0:	d007      	beq.n	800d4f2 <f_mkfs+0x7e>
 800d4e2:	2013      	movs	r0, #19
}
 800d4e4:	b00d      	add	sp, #52	; 0x34
 800d4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 800d4ea:	200a      	movs	r0, #10
}
 800d4ec:	b00d      	add	sp, #52	; 0x34
 800d4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 800d4f2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800d4f4:	f423 76ff 	bic.w	r6, r3, #510	; 0x1fe
 800d4f8:	f026 0601 	bic.w	r6, r6, #1
	if (!szb_buf) return FR_MKFS_ABORTED;
 800d4fc:	2e00      	cmp	r6, #0
 800d4fe:	f000 809a 	beq.w	800d636 <f_mkfs+0x1c2>
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
 800d502:	aa0b      	add	r2, sp, #44	; 0x2c
 800d504:	2101      	movs	r1, #1
 800d506:	4620      	mov	r0, r4
 800d508:	f7fe fd30 	bl	800bf6c <disk_ioctl>
 800d50c:	4681      	mov	r9, r0
 800d50e:	2800      	cmp	r0, #0
 800d510:	f040 8179 	bne.w	800d806 <f_mkfs+0x392>
		b_vol = (opt & FM_SFD) ? 0 : 15;		/* Volume start sector */
 800d514:	f017 0308 	ands.w	r3, r7, #8
		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 800d518:	990b      	ldr	r1, [sp, #44]	; 0x2c
		b_vol = (opt & FM_SFD) ? 0 : 15;		/* Volume start sector */
 800d51a:	9305      	str	r3, [sp, #20]
 800d51c:	f040 8175 	bne.w	800d80a <f_mkfs+0x396>
		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 800d520:	290e      	cmp	r1, #14
 800d522:	f240 8088 	bls.w	800d636 <f_mkfs+0x1c2>
 800d526:	390f      	subs	r1, #15
		b_vol = (opt & FM_SFD) ? 0 : 15;		/* Volume start sector */
 800d528:	f04f 0b0f 	mov.w	fp, #15
	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
 800d52c:	297f      	cmp	r1, #127	; 0x7f
		sz_vol -= b_vol;						/* Volume size */
 800d52e:	910b      	str	r1, [sp, #44]	; 0x2c
	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
 800d530:	f240 8081 	bls.w	800d636 <f_mkfs+0x1c2>
		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
 800d534:	f5b8 3f81 	cmp.w	r8, #66048	; 0x10200
 800d538:	d2d3      	bcs.n	800d4e2 <f_mkfs+0x6e>
		if (opt & FM_FAT32) {	/* FAT32 possible? */
 800d53a:	f017 0202 	ands.w	r2, r7, #2
	au /= ss;	/* Cluster size in unit of sector */
 800d53e:	ea4f 2358 	mov.w	r3, r8, lsr #9
		if (opt & FM_FAT32) {	/* FAT32 possible? */
 800d542:	9204      	str	r2, [sp, #16]
 800d544:	f000 8199 	beq.w	800d87a <f_mkfs+0x406>
			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 800d548:	f007 0207 	and.w	r2, r7, #7
 800d54c:	2a02      	cmp	r2, #2
 800d54e:	f000 8165 	beq.w	800d81c <f_mkfs+0x3a8>
 800d552:	07f8      	lsls	r0, r7, #31
 800d554:	f140 8162 	bpl.w	800d81c <f_mkfs+0x3a8>
 800d558:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
				if (!pau) {	/* au auto-selection */
 800d55c:	2b00      	cmp	r3, #0
 800d55e:	f000 8194 	beq.w	800d88a <f_mkfs+0x416>
 800d562:	461f      	mov	r7, r3
				if (n_clst > MAX_FAT12) {
 800d564:	f640 7ef5 	movw	lr, #4085	; 0xff5
				n_clst = sz_vol / pau;
 800d568:	fbb1 f2f7 	udiv	r2, r1, r7
				if (n_clst > MAX_FAT12) {
 800d56c:	4572      	cmp	r2, lr
 800d56e:	d94e      	bls.n	800d60e <f_mkfs+0x19a>
					n = n_clst * 2 + 4;		/* FAT size [byte] */
 800d570:	3202      	adds	r2, #2
 800d572:	0052      	lsls	r2, r2, #1
 800d574:	f04f 0a02 	mov.w	sl, #2
			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 800d578:	f10b 0e21 	add.w	lr, fp, #33	; 0x21
				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
 800d57c:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 800d580:	eb0e 2252 	add.w	r2, lr, r2, lsr #9
			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current data base */
 800d584:	f10c 3eff 	add.w	lr, ip, #4294967295
 800d588:	f1cc 0800 	rsb	r8, ip, #0
 800d58c:	4496      	add	lr, r2
 800d58e:	ea0e 0e08 	and.w	lr, lr, r8
				sz_fat += n / n_fats;
 800d592:	ebae 0e0b 	sub.w	lr, lr, fp
 800d596:	f1ae 0021 	sub.w	r0, lr, #33	; 0x21
 800d59a:	9001      	str	r0, [sp, #4]
			b_fat = b_vol + sz_rsv;						/* FAT base */
 800d59c:	f10b 0001 	add.w	r0, fp, #1
 800d5a0:	9006      	str	r0, [sp, #24]
				sz_rsv = 1;						/* Number of reserved sectors */
 800d5a2:	f04f 0820 	mov.w	r8, #32
 800d5a6:	2001      	movs	r0, #1
 800d5a8:	e9cd 0802 	strd	r0, r8, [sp, #8]
			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 800d5ac:	eba2 020b 	sub.w	r2, r2, fp
 800d5b0:	eb02 1207 	add.w	r2, r2, r7, lsl #4
 800d5b4:	428a      	cmp	r2, r1
 800d5b6:	d83e      	bhi.n	800d636 <f_mkfs+0x1c2>
			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 800d5b8:	9a02      	ldr	r2, [sp, #8]
 800d5ba:	4610      	mov	r0, r2
 800d5bc:	9a01      	ldr	r2, [sp, #4]
 800d5be:	eb00 0802 	add.w	r8, r0, r2
 800d5c2:	9a03      	ldr	r2, [sp, #12]
 800d5c4:	eba1 0808 	sub.w	r8, r1, r8
			if (fmt == FS_FAT32) {
 800d5c8:	f1ba 0f03 	cmp.w	sl, #3
			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 800d5cc:	eba8 0802 	sub.w	r8, r8, r2
 800d5d0:	fbb8 f8f7 	udiv	r8, r8, r7
			if (fmt == FS_FAT32) {
 800d5d4:	d03b      	beq.n	800d64e <f_mkfs+0x1da>
			if (fmt == FS_FAT16) {
 800d5d6:	f1ba 0f02 	cmp.w	sl, #2
 800d5da:	f040 8188 	bne.w	800d8ee <f_mkfs+0x47a>
				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 800d5de:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800d5e2:	4590      	cmp	r8, r2
 800d5e4:	d91f      	bls.n	800d626 <f_mkfs+0x1b2>
					if (!au && (pau * 2) <= 64) {
 800d5e6:	2b00      	cmp	r3, #0
 800d5e8:	f040 814b 	bne.w	800d882 <f_mkfs+0x40e>
 800d5ec:	007f      	lsls	r7, r7, #1
 800d5ee:	2f40      	cmp	r7, #64	; 0x40
 800d5f0:	f240 816c 	bls.w	800d8cc <f_mkfs+0x458>
					if ((opt & FM_FAT32)) {
 800d5f4:	9b04      	ldr	r3, [sp, #16]
 800d5f6:	2b00      	cmp	r3, #0
 800d5f8:	f040 8157 	bne.w	800d8aa <f_mkfs+0x436>
					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 800d5fc:	2f80      	cmp	r7, #128	; 0x80
 800d5fe:	d81a      	bhi.n	800d636 <f_mkfs+0x1c2>
				n_clst = sz_vol / pau;
 800d600:	fbb1 f2f7 	udiv	r2, r1, r7
				if (n_clst > MAX_FAT12) {
 800d604:	f640 7ef5 	movw	lr, #4085	; 0xff5
 800d608:	4572      	cmp	r2, lr
 800d60a:	463b      	mov	r3, r7
 800d60c:	d8b0      	bhi.n	800d570 <f_mkfs+0xfc>
					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 800d60e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d612:	3201      	adds	r2, #1
 800d614:	0852      	lsrs	r2, r2, #1
 800d616:	3203      	adds	r2, #3
					fmt = FS_FAT12;
 800d618:	f04f 0a01 	mov.w	sl, #1
 800d61c:	e7ac      	b.n	800d578 <f_mkfs+0x104>
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & (sz_blk - 1))) sz_blk = 1;	/* Erase block to align data area */
 800d61e:	421a      	tst	r2, r3
 800d620:	f43f af52 	beq.w	800d4c8 <f_mkfs+0x54>
 800d624:	e74e      	b.n	800d4c4 <f_mkfs+0x50>
				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
 800d626:	f640 72f5 	movw	r2, #4085	; 0xff5
 800d62a:	4590      	cmp	r8, r2
 800d62c:	d814      	bhi.n	800d658 <f_mkfs+0x1e4>
					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 800d62e:	b913      	cbnz	r3, 800d636 <f_mkfs+0x1c2>
 800d630:	007b      	lsls	r3, r7, #1
 800d632:	2b80      	cmp	r3, #128	; 0x80
 800d634:	d992      	bls.n	800d55c <f_mkfs+0xe8>
	if (!szb_buf) return FR_MKFS_ABORTED;
 800d636:	200e      	movs	r0, #14
}
 800d638:	b00d      	add	sp, #52	; 0x34
 800d63a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (stat & STA_NOINIT) return FR_NOT_READY;
 800d63e:	2003      	movs	r0, #3
}
 800d640:	b00d      	add	sp, #52	; 0x34
 800d642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (vol < 0) return FR_INVALID_DRIVE;
 800d646:	200b      	movs	r0, #11
}
 800d648:	b00d      	add	sp, #52	; 0x34
 800d64a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 800d64e:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800d652:	4590      	cmp	r8, r2
 800d654:	f240 80db 	bls.w	800d80e <f_mkfs+0x39a>
 800d658:	f505 7100 	add.w	r1, r5, #512	; 0x200
 800d65c:	9104      	str	r1, [sp, #16]
 800d65e:	462a      	mov	r2, r5
		*d++ = (BYTE)val;
 800d660:	2300      	movs	r3, #0
 800d662:	f802 3b01 	strb.w	r3, [r2], #1
	} while (--cnt);
 800d666:	428a      	cmp	r2, r1
 800d668:	d1fb      	bne.n	800d662 <f_mkfs+0x1ee>
	if (cnt) {
 800d66a:	495c      	ldr	r1, [pc, #368]	; (800d7dc <f_mkfs+0x368>)
 800d66c:	220b      	movs	r2, #11
 800d66e:	4628      	mov	r0, r5
 800d670:	f7fe fd58 	bl	800c124 <mem_cpy.part.0>
	*ptr++ = (BYTE)val; val >>= 8;
 800d674:	9902      	ldr	r1, [sp, #8]
		if (sz_vol < 0x10000) {
 800d676:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 800d678:	736f      	strb	r7, [r5, #13]
		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root directory entries */
 800d67a:	f1ba 0f03 	cmp.w	sl, #3
	*ptr++ = (BYTE)val; val >>= 8;
 800d67e:	f04f 0300 	mov.w	r3, #0
		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root directory entries */
 800d682:	bf18      	it	ne
 800d684:	f04f 0902 	movne.w	r9, #2
	*ptr++ = (BYTE)val; val >>= 8;
 800d688:	72eb      	strb	r3, [r5, #11]
 800d68a:	f3c1 2007 	ubfx	r0, r1, #8, #8
	*ptr++ = (BYTE)val;
 800d68e:	f04f 0e02 	mov.w	lr, #2
		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 800d692:	f04f 0c01 	mov.w	ip, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800d696:	2300      	movs	r3, #0
		if (sz_vol < 0x10000) {
 800d698:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
	*ptr++ = (BYTE)val;
 800d69c:	f885 9012 	strb.w	r9, [r5, #18]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6a0:	73a9      	strb	r1, [r5, #14]
	*ptr++ = (BYTE)val;
 800d6a2:	73e8      	strb	r0, [r5, #15]
 800d6a4:	f885 e00c 	strb.w	lr, [r5, #12]
		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 800d6a8:	f885 c010 	strb.w	ip, [r5, #16]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6ac:	746b      	strb	r3, [r5, #17]
		if (sz_vol < 0x10000) {
 800d6ae:	f080 8112 	bcs.w	800d8d6 <f_mkfs+0x462>
	*ptr++ = (BYTE)val; val >>= 8;
 800d6b2:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800d6b6:	74ea      	strb	r2, [r5, #19]
	*ptr++ = (BYTE)val;
 800d6b8:	752b      	strb	r3, [r5, #20]
		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
 800d6ba:	23f8      	movs	r3, #248	; 0xf8
	*ptr++ = (BYTE)val; val >>= 8;
 800d6bc:	223f      	movs	r2, #63	; 0x3f
	*ptr++ = (BYTE)val;
 800d6be:	f04f 0900 	mov.w	r9, #0
		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
 800d6c2:	756b      	strb	r3, [r5, #21]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6c4:	762a      	strb	r2, [r5, #24]
 800d6c6:	23ff      	movs	r3, #255	; 0xff
	*ptr++ = (BYTE)val; val >>= 8;
 800d6c8:	fa5f f28b 	uxtb.w	r2, fp
		if (fmt == FS_FAT32) {
 800d6cc:	f1ba 0f03 	cmp.w	sl, #3
	*ptr++ = (BYTE)val; val >>= 8;
 800d6d0:	9202      	str	r2, [sp, #8]
	*ptr++ = (BYTE)val;
 800d6d2:	f885 9019 	strb.w	r9, [r5, #25]
 800d6d6:	f885 901b 	strb.w	r9, [r5, #27]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6da:	f885 901d 	strb.w	r9, [r5, #29]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6de:	f885 901e 	strb.w	r9, [r5, #30]
	*ptr++ = (BYTE)val;
 800d6e2:	f885 901f 	strb.w	r9, [r5, #31]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6e6:	76ab      	strb	r3, [r5, #26]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6e8:	772a      	strb	r2, [r5, #28]
		if (fmt == FS_FAT32) {
 800d6ea:	f000 8108 	beq.w	800d8fe <f_mkfs+0x48a>
			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
 800d6ee:	f7f3 fbb1 	bl	8000e54 <get_fattime>
	*ptr++ = (BYTE)val; val >>= 8;
 800d6f2:	9b01      	ldr	r3, [sp, #4]
	*ptr++ = (BYTE)val; val >>= 8;
 800d6f4:	f885 0027 	strb.w	r0, [r5, #39]	; 0x27
 800d6f8:	0a02      	lsrs	r2, r0, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d6fa:	ea4f 4e10 	mov.w	lr, r0, lsr #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d6fe:	ea4f 6c10 	mov.w	ip, r0, lsr #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d702:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d706:	9801      	ldr	r0, [sp, #4]
	*ptr++ = (BYTE)val; val >>= 8;
 800d708:	f885 2028 	strb.w	r2, [r5, #40]	; 0x28
			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 800d70c:	2180      	movs	r1, #128	; 0x80
			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 800d70e:	2229      	movs	r2, #41	; 0x29
	*ptr++ = (BYTE)val; val >>= 8;
 800d710:	75a8      	strb	r0, [r5, #22]
	*ptr++ = (BYTE)val;
 800d712:	75eb      	strb	r3, [r5, #23]
			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 800d714:	f885 1024 	strb.w	r1, [r5, #36]	; 0x24
			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 800d718:	f885 2026 	strb.w	r2, [r5, #38]	; 0x26
 800d71c:	4930      	ldr	r1, [pc, #192]	; (800d7e0 <f_mkfs+0x36c>)
	*ptr++ = (BYTE)val; val >>= 8;
 800d71e:	f885 e029 	strb.w	lr, [r5, #41]	; 0x29
	*ptr++ = (BYTE)val;
 800d722:	2213      	movs	r2, #19
 800d724:	f105 002b 	add.w	r0, r5, #43	; 0x2b
 800d728:	f885 c02a 	strb.w	ip, [r5, #42]	; 0x2a
	if (cnt) {
 800d72c:	f7fe fcfa 	bl	800c124 <mem_cpy.part.0>
	*ptr++ = (BYTE)val; val >>= 8;
 800d730:	2255      	movs	r2, #85	; 0x55
	*ptr++ = (BYTE)val;
 800d732:	23aa      	movs	r3, #170	; 0xaa
	*ptr++ = (BYTE)val; val >>= 8;
 800d734:	f885 21fe 	strb.w	r2, [r5, #510]	; 0x1fe
	*ptr++ = (BYTE)val;
 800d738:	f885 31ff 	strb.w	r3, [r5, #511]	; 0x1ff
		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector */
 800d73c:	465a      	mov	r2, fp
 800d73e:	2301      	movs	r3, #1
 800d740:	4629      	mov	r1, r5
 800d742:	4620      	mov	r0, r4
 800d744:	f7fe fc04 	bl	800bf50 <disk_write>
 800d748:	2800      	cmp	r0, #0
 800d74a:	d15c      	bne.n	800d806 <f_mkfs+0x392>
 800d74c:	442e      	add	r6, r5
			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 800d74e:	462b      	mov	r3, r5
		*d++ = (BYTE)val;
 800d750:	2200      	movs	r2, #0
 800d752:	f803 2b01 	strb.w	r2, [r3], #1
	} while (--cnt);
 800d756:	42b3      	cmp	r3, r6
 800d758:	d1fb      	bne.n	800d752 <f_mkfs+0x2de>
			if (fmt == FS_FAT32) {
 800d75a:	f1ba 0f03 	cmp.w	sl, #3
 800d75e:	f000 81cc 	beq.w	800dafa <f_mkfs+0x686>
				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
 800d762:	f1ba 0f01 	cmp.w	sl, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800d766:	bf14      	ite	ne
 800d768:	23ff      	movne	r3, #255	; 0xff
 800d76a:	2300      	moveq	r3, #0
	*ptr++ = (BYTE)val; val >>= 8;
 800d76c:	22f8      	movs	r2, #248	; 0xf8
	*ptr++ = (BYTE)val;
 800d76e:	70eb      	strb	r3, [r5, #3]
	*ptr++ = (BYTE)val; val >>= 8;
 800d770:	23ff      	movs	r3, #255	; 0xff
	*ptr++ = (BYTE)val; val >>= 8;
 800d772:	702a      	strb	r2, [r5, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 800d774:	706b      	strb	r3, [r5, #1]
	*ptr++ = (BYTE)val; val >>= 8;
 800d776:	70ab      	strb	r3, [r5, #2]
	sz_buf = len / ss;		/* Size of working buffer (sector) */
 800d778:	9b16      	ldr	r3, [sp, #88]	; 0x58
		*d++ = (BYTE)val;
 800d77a:	e9cd 7a07 	strd	r7, sl, [sp, #28]
 800d77e:	f8dd a004 	ldr.w	sl, [sp, #4]
 800d782:	9f04      	ldr	r7, [sp, #16]
 800d784:	f8cd b004 	str.w	fp, [sp, #4]
 800d788:	46ab      	mov	fp, r5
 800d78a:	9d06      	ldr	r5, [sp, #24]
	sz_buf = len / ss;		/* Size of working buffer (sector) */
 800d78c:	0a5e      	lsrs	r6, r3, #9
		*d++ = (BYTE)val;
 800d78e:	f04f 0800 	mov.w	r8, #0
				n = (nsect > sz_buf) ? sz_buf : nsect;
 800d792:	45b2      	cmp	sl, r6
 800d794:	46d1      	mov	r9, sl
 800d796:	bf28      	it	cs
 800d798:	46b1      	movcs	r9, r6
				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 800d79a:	464b      	mov	r3, r9
 800d79c:	462a      	mov	r2, r5
 800d79e:	4659      	mov	r1, fp
 800d7a0:	4620      	mov	r0, r4
 800d7a2:	f7fe fbd5 	bl	800bf50 <disk_write>
 800d7a6:	bb70      	cbnz	r0, 800d806 <f_mkfs+0x392>
 800d7a8:	465b      	mov	r3, fp
		*d++ = (BYTE)val;
 800d7aa:	f803 8b01 	strb.w	r8, [r3], #1
	} while (--cnt);
 800d7ae:	42bb      	cmp	r3, r7
 800d7b0:	d1fb      	bne.n	800d7aa <f_mkfs+0x336>
			} while (nsect);
 800d7b2:	ebba 0a09 	subs.w	sl, sl, r9
				sect += n; nsect -= n;
 800d7b6:	444d      	add	r5, r9
			} while (nsect);
 800d7b8:	d1eb      	bne.n	800d792 <f_mkfs+0x31e>
 800d7ba:	e9dd 7a07 	ldrd	r7, sl, [sp, #28]
		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
 800d7be:	9b03      	ldr	r3, [sp, #12]
 800d7c0:	46a9      	mov	r9, r5
 800d7c2:	f1ba 0f03 	cmp.w	sl, #3
 800d7c6:	bf18      	it	ne
 800d7c8:	461f      	movne	r7, r3
 800d7ca:	465d      	mov	r5, fp
 800d7cc:	f8dd b004 	ldr.w	fp, [sp, #4]
 800d7d0:	e00c      	b.n	800d7ec <f_mkfs+0x378>
 800d7d2:	bf00      	nop
 800d7d4:	20002c44 	.word	0x20002c44
 800d7d8:	00fffe00 	.word	0x00fffe00
 800d7dc:	08027f88 	.word	0x08027f88
 800d7e0:	08027fa8 	.word	0x08027fa8
		} while (nsect);
 800d7e4:	ebb7 0708 	subs.w	r7, r7, r8
 800d7e8:	f000 8129 	beq.w	800da3e <f_mkfs+0x5ca>
			n = (nsect > sz_buf) ? sz_buf : nsect;
 800d7ec:	42b7      	cmp	r7, r6
 800d7ee:	46b8      	mov	r8, r7
 800d7f0:	bf28      	it	cs
 800d7f2:	46b0      	movcs	r8, r6
			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 800d7f4:	464a      	mov	r2, r9
 800d7f6:	4643      	mov	r3, r8
 800d7f8:	4629      	mov	r1, r5
 800d7fa:	4620      	mov	r0, r4
 800d7fc:	f7fe fba8 	bl	800bf50 <disk_write>
			sect += n; nsect -= n;
 800d800:	44c1      	add	r9, r8
			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 800d802:	2800      	cmp	r0, #0
 800d804:	d0ee      	beq.n	800d7e4 <f_mkfs+0x370>
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
 800d806:	2001      	movs	r0, #1
 800d808:	e670      	b.n	800d4ec <f_mkfs+0x78>
		b_vol = (opt & FM_SFD) ? 0 : 15;		/* Volume start sector */
 800d80a:	4683      	mov	fp, r0
 800d80c:	e68e      	b.n	800d52c <f_mkfs+0xb8>
					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 800d80e:	2b00      	cmp	r3, #0
 800d810:	f47f af11 	bne.w	800d636 <f_mkfs+0x1c2>
 800d814:	2f01      	cmp	r7, #1
 800d816:	f67f af0e 	bls.w	800d636 <f_mkfs+0x1c2>
 800d81a:	087b      	lsrs	r3, r7, #1
				if (!pau) {	/* au auto-selection */
 800d81c:	2b00      	cmp	r3, #0
 800d81e:	d044      	beq.n	800d8aa <f_mkfs+0x436>
 800d820:	469e      	mov	lr, r3
				n_clst = sz_vol / pau;	/* Number of clusters */
 800d822:	fbb1 f2f3 	udiv	r2, r1, r3
				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 800d826:	4fbf      	ldr	r7, [pc, #764]	; (800db24 <f_mkfs+0x6b0>)
				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 800d828:	ea4f 0c82 	mov.w	ip, r2, lsl #2
				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 800d82c:	f5a2 427f 	sub.w	r2, r2, #65280	; 0xff00
				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 800d830:	f20c 2c07 	addw	ip, ip, #519	; 0x207
				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 800d834:	3af6      	subs	r2, #246	; 0xf6
				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 800d836:	ea4f 205c 	mov.w	r0, ip, lsr #9
				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 800d83a:	42ba      	cmp	r2, r7
				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 800d83c:	9001      	str	r0, [sp, #4]
				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 800d83e:	f63f aefa 	bhi.w	800d636 <f_mkfs+0x1c2>
			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current data base */
 800d842:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 800d846:	9a01      	ldr	r2, [sp, #4]
			b_fat = b_vol + sz_rsv;						/* FAT base */
 800d848:	f10b 0820 	add.w	r8, fp, #32
			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 800d84c:	4442      	add	r2, r8
			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current data base */
 800d84e:	f10c 3aff 	add.w	sl, ip, #4294967295
 800d852:	f1cc 0700 	rsb	r7, ip, #0
 800d856:	4492      	add	sl, r2
 800d858:	ea0a 0a07 	and.w	sl, sl, r7
 800d85c:	ebaa 0a02 	sub.w	sl, sl, r2
				sz_rsv += n; b_fat += n;
 800d860:	f10a 0020 	add.w	r0, sl, #32
 800d864:	461f      	mov	r7, r3
 800d866:	9002      	str	r0, [sp, #8]
 800d868:	eb08 030a 	add.w	r3, r8, sl
 800d86c:	2000      	movs	r0, #0
 800d86e:	9306      	str	r3, [sp, #24]
 800d870:	f04f 0a03 	mov.w	sl, #3
 800d874:	4673      	mov	r3, lr
 800d876:	9003      	str	r0, [sp, #12]
 800d878:	e698      	b.n	800d5ac <f_mkfs+0x138>
		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
 800d87a:	07fa      	lsls	r2, r7, #31
 800d87c:	f57f ae31 	bpl.w	800d4e2 <f_mkfs+0x6e>
 800d880:	e66a      	b.n	800d558 <f_mkfs+0xe4>
					if ((opt & FM_FAT32)) {
 800d882:	9a04      	ldr	r2, [sp, #16]
 800d884:	2a00      	cmp	r2, #0
 800d886:	d1c9      	bne.n	800d81c <f_mkfs+0x3a8>
 800d888:	e6d5      	b.n	800d636 <f_mkfs+0x1c2>
					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 800d88a:	2701      	movs	r7, #1
 800d88c:	f8df e2a0 	ldr.w	lr, [pc, #672]	; 800db30 <f_mkfs+0x6bc>
 800d890:	9804      	ldr	r0, [sp, #16]
 800d892:	463a      	mov	r2, r7
					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 800d894:	ea4f 3811 	mov.w	r8, r1, lsr #12
					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 800d898:	e003      	b.n	800d8a2 <f_mkfs+0x42e>
 800d89a:	f83e 2b02 	ldrh.w	r2, [lr], #2
 800d89e:	007f      	lsls	r7, r7, #1
 800d8a0:	b10a      	cbz	r2, 800d8a6 <f_mkfs+0x432>
 800d8a2:	4542      	cmp	r2, r8
 800d8a4:	d9f9      	bls.n	800d89a <f_mkfs+0x426>
 800d8a6:	9004      	str	r0, [sp, #16]
 800d8a8:	e65c      	b.n	800d564 <f_mkfs+0xf0>
					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 800d8aa:	2301      	movs	r3, #1
 800d8ac:	4f9e      	ldr	r7, [pc, #632]	; (800db28 <f_mkfs+0x6b4>)
 800d8ae:	9804      	ldr	r0, [sp, #16]
 800d8b0:	461a      	mov	r2, r3
					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 800d8b2:	ea4f 4c51 	mov.w	ip, r1, lsr #17
					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 800d8b6:	e003      	b.n	800d8c0 <f_mkfs+0x44c>
 800d8b8:	f837 2b02 	ldrh.w	r2, [r7], #2
 800d8bc:	005b      	lsls	r3, r3, #1
 800d8be:	b13a      	cbz	r2, 800d8d0 <f_mkfs+0x45c>
 800d8c0:	4562      	cmp	r2, ip
 800d8c2:	d9f9      	bls.n	800d8b8 <f_mkfs+0x444>
 800d8c4:	9004      	str	r0, [sp, #16]
 800d8c6:	f04f 0e00 	mov.w	lr, #0
 800d8ca:	e7aa      	b.n	800d822 <f_mkfs+0x3ae>
 800d8cc:	463b      	mov	r3, r7
 800d8ce:	e645      	b.n	800d55c <f_mkfs+0xe8>
 800d8d0:	9004      	str	r0, [sp, #16]
 800d8d2:	4696      	mov	lr, r2
 800d8d4:	e7a5      	b.n	800d822 <f_mkfs+0x3ae>
	*ptr++ = (BYTE)val; val >>= 8;
 800d8d6:	0a11      	lsrs	r1, r2, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d8d8:	0c13      	lsrs	r3, r2, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d8da:	f885 2020 	strb.w	r2, [r5, #32]
	*ptr++ = (BYTE)val; val >>= 8;
 800d8de:	0e12      	lsrs	r2, r2, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d8e0:	f885 1021 	strb.w	r1, [r5, #33]	; 0x21
	*ptr++ = (BYTE)val; val >>= 8;
 800d8e4:	f885 3022 	strb.w	r3, [r5, #34]	; 0x22
	*ptr++ = (BYTE)val;
 800d8e8:	f885 2023 	strb.w	r2, [r5, #35]	; 0x23
}
 800d8ec:	e6e5      	b.n	800d6ba <f_mkfs+0x246>
			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT12 */
 800d8ee:	f640 73f5 	movw	r3, #4085	; 0xff5
 800d8f2:	4598      	cmp	r8, r3
 800d8f4:	f63f ae9f 	bhi.w	800d636 <f_mkfs+0x1c2>
 800d8f8:	f04f 0a01 	mov.w	sl, #1
 800d8fc:	e6ac      	b.n	800d658 <f_mkfs+0x1e4>
			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 800d8fe:	f7f3 faa9 	bl	8000e54 <get_fattime>
	*ptr++ = (BYTE)val; val >>= 8;
 800d902:	9a01      	ldr	r2, [sp, #4]
 800d904:	f885 0043 	strb.w	r0, [r5, #67]	; 0x43
	*ptr++ = (BYTE)val; val >>= 8;
 800d908:	0c03      	lsrs	r3, r0, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d90a:	ea4f 2e10 	mov.w	lr, r0, lsr #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d90e:	ea4f 6c10 	mov.w	ip, r0, lsr #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d912:	0a11      	lsrs	r1, r2, #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d914:	4610      	mov	r0, r2
 800d916:	9307      	str	r3, [sp, #28]
 800d918:	0c12      	lsrs	r2, r2, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d91a:	9b07      	ldr	r3, [sp, #28]
	*ptr++ = (BYTE)val; val >>= 8;
 800d91c:	f885 0024 	strb.w	r0, [r5, #36]	; 0x24
	*ptr++ = (BYTE)val; val >>= 8;
 800d920:	f885 902d 	strb.w	r9, [r5, #45]	; 0x2d
	*ptr++ = (BYTE)val; val >>= 8;
 800d924:	f885 902e 	strb.w	r9, [r5, #46]	; 0x2e
	*ptr++ = (BYTE)val;
 800d928:	f885 902f 	strb.w	r9, [r5, #47]	; 0x2f
	*ptr++ = (BYTE)val;
 800d92c:	f885 9031 	strb.w	r9, [r5, #49]	; 0x31
 800d930:	f885 9033 	strb.w	r9, [r5, #51]	; 0x33
	*ptr++ = (BYTE)val; val >>= 8;
 800d934:	0e00      	lsrs	r0, r0, #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d936:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
	*ptr++ = (BYTE)val; val >>= 8;
 800d93a:	f04f 0901 	mov.w	r9, #1
	*ptr++ = (BYTE)val; val >>= 8;
 800d93e:	f04f 0e02 	mov.w	lr, #2
	*ptr++ = (BYTE)val;
 800d942:	f885 c046 	strb.w	ip, [r5, #70]	; 0x46
	*ptr++ = (BYTE)val; val >>= 8;
 800d946:	f885 1025 	strb.w	r1, [r5, #37]	; 0x25
	*ptr++ = (BYTE)val; val >>= 8;
 800d94a:	f04f 0c06 	mov.w	ip, #6
			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 800d94e:	2180      	movs	r1, #128	; 0x80
	*ptr++ = (BYTE)val; val >>= 8;
 800d950:	f885 2026 	strb.w	r2, [r5, #38]	; 0x26
			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 800d954:	2229      	movs	r2, #41	; 0x29
	*ptr++ = (BYTE)val; val >>= 8;
 800d956:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	*ptr++ = (BYTE)val;
 800d95a:	f885 0027 	strb.w	r0, [r5, #39]	; 0x27
	*ptr++ = (BYTE)val; val >>= 8;
 800d95e:	f885 e02c 	strb.w	lr, [r5, #44]	; 0x2c
	*ptr++ = (BYTE)val; val >>= 8;
 800d962:	f885 c032 	strb.w	ip, [r5, #50]	; 0x32
			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 800d966:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 800d96a:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
 800d96e:	496f      	ldr	r1, [pc, #444]	; (800db2c <f_mkfs+0x6b8>)
	*ptr++ = (BYTE)val; val >>= 8;
 800d970:	f885 9030 	strb.w	r9, [r5, #48]	; 0x30
	if (cnt) {
 800d974:	2213      	movs	r2, #19
 800d976:	f105 0047 	add.w	r0, r5, #71	; 0x47
 800d97a:	f7fe fbd3 	bl	800c124 <mem_cpy.part.0>
	*ptr++ = (BYTE)val; val >>= 8;
 800d97e:	2155      	movs	r1, #85	; 0x55
	*ptr++ = (BYTE)val;
 800d980:	22aa      	movs	r2, #170	; 0xaa
	*ptr++ = (BYTE)val; val >>= 8;
 800d982:	f885 11fe 	strb.w	r1, [r5, #510]	; 0x1fe
	*ptr++ = (BYTE)val;
 800d986:	f885 21ff 	strb.w	r2, [r5, #511]	; 0x1ff
		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector */
 800d98a:	464b      	mov	r3, r9
 800d98c:	465a      	mov	r2, fp
 800d98e:	4629      	mov	r1, r5
 800d990:	4620      	mov	r0, r4
 800d992:	f7fe fadd 	bl	800bf50 <disk_write>
 800d996:	9007      	str	r0, [sp, #28]
 800d998:	2800      	cmp	r0, #0
 800d99a:	f47f af34 	bne.w	800d806 <f_mkfs+0x392>
			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 800d99e:	464b      	mov	r3, r9
 800d9a0:	f10b 0206 	add.w	r2, fp, #6
 800d9a4:	4629      	mov	r1, r5
 800d9a6:	4620      	mov	r0, r4
 800d9a8:	f7fe fad2 	bl	800bf50 <disk_write>
		*d++ = (BYTE)val;
 800d9ac:	f8dd 901c 	ldr.w	r9, [sp, #28]
			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 800d9b0:	9a04      	ldr	r2, [sp, #16]
 800d9b2:	462b      	mov	r3, r5
		*d++ = (BYTE)val;
 800d9b4:	f803 9b01 	strb.w	r9, [r3], #1
	} while (--cnt);
 800d9b8:	4293      	cmp	r3, r2
 800d9ba:	d1fb      	bne.n	800d9b4 <f_mkfs+0x540>
			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 800d9bc:	f108 38ff 	add.w	r8, r8, #4294967295
	*ptr++ = (BYTE)val; val >>= 8;
 800d9c0:	ea4f 2018 	mov.w	r0, r8, lsr #8
	*ptr++ = (BYTE)val; val >>= 8;
 800d9c4:	ea4f 4318 	mov.w	r3, r8, lsr #16
	*ptr++ = (BYTE)val; val >>= 8;
 800d9c8:	ea4f 6118 	mov.w	r1, r8, lsr #24
	*ptr++ = (BYTE)val; val >>= 8;
 800d9cc:	2252      	movs	r2, #82	; 0x52
	*ptr++ = (BYTE)val; val >>= 8;
 800d9ce:	f04f 0c61 	mov.w	ip, #97	; 0x61
	*ptr++ = (BYTE)val; val >>= 8;
 800d9d2:	f885 01e9 	strb.w	r0, [r5, #489]	; 0x1e9
	*ptr++ = (BYTE)val; val >>= 8;
 800d9d6:	f885 31ea 	strb.w	r3, [r5, #490]	; 0x1ea
	*ptr++ = (BYTE)val;
 800d9da:	2041      	movs	r0, #65	; 0x41
	*ptr++ = (BYTE)val; val >>= 8;
 800d9dc:	2372      	movs	r3, #114	; 0x72
	*ptr++ = (BYTE)val;
 800d9de:	f885 11eb 	strb.w	r1, [r5, #491]	; 0x1eb
	*ptr++ = (BYTE)val; val >>= 8;
 800d9e2:	702a      	strb	r2, [r5, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 800d9e4:	706a      	strb	r2, [r5, #1]
	*ptr++ = (BYTE)val; val >>= 8;
 800d9e6:	f04f 0e55 	mov.w	lr, #85	; 0x55
	*ptr++ = (BYTE)val; val >>= 8;
 800d9ea:	2102      	movs	r1, #2
	*ptr++ = (BYTE)val;
 800d9ec:	22aa      	movs	r2, #170	; 0xaa
	*ptr++ = (BYTE)val;
 800d9ee:	70e8      	strb	r0, [r5, #3]
	*ptr++ = (BYTE)val; val >>= 8;
 800d9f0:	f885 01e6 	strb.w	r0, [r5, #486]	; 0x1e6
	*ptr++ = (BYTE)val; val >>= 8;
 800d9f4:	f885 31e4 	strb.w	r3, [r5, #484]	; 0x1e4
	*ptr++ = (BYTE)val; val >>= 8;
 800d9f8:	f885 31e5 	strb.w	r3, [r5, #485]	; 0x1e5
	*ptr++ = (BYTE)val; val >>= 8;
 800d9fc:	f885 11ec 	strb.w	r1, [r5, #492]	; 0x1ec
	*ptr++ = (BYTE)val;
 800da00:	f885 21ff 	strb.w	r2, [r5, #511]	; 0x1ff
			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 800da04:	4629      	mov	r1, r5
 800da06:	f10b 0207 	add.w	r2, fp, #7
	*ptr++ = (BYTE)val; val >>= 8;
 800da0a:	f885 81e8 	strb.w	r8, [r5, #488]	; 0x1e8
	*ptr++ = (BYTE)val; val >>= 8;
 800da0e:	f885 91ed 	strb.w	r9, [r5, #493]	; 0x1ed
	*ptr++ = (BYTE)val; val >>= 8;
 800da12:	f885 91ee 	strb.w	r9, [r5, #494]	; 0x1ee
	*ptr++ = (BYTE)val;
 800da16:	f885 91ef 	strb.w	r9, [r5, #495]	; 0x1ef
	*ptr++ = (BYTE)val; val >>= 8;
 800da1a:	f885 c002 	strb.w	ip, [r5, #2]
	*ptr++ = (BYTE)val;
 800da1e:	f885 c1e7 	strb.w	ip, [r5, #487]	; 0x1e7
	*ptr++ = (BYTE)val; val >>= 8;
 800da22:	f885 e1fe 	strb.w	lr, [r5, #510]	; 0x1fe
			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 800da26:	2301      	movs	r3, #1
 800da28:	4620      	mov	r0, r4
 800da2a:	f7fe fa91 	bl	800bf50 <disk_write>
			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 800da2e:	2301      	movs	r3, #1
 800da30:	eb0b 0203 	add.w	r2, fp, r3
 800da34:	4629      	mov	r1, r5
 800da36:	4620      	mov	r0, r4
 800da38:	f7fe fa8a 	bl	800bf50 <disk_write>
 800da3c:	e686      	b.n	800d74c <f_mkfs+0x2d8>
		if (fmt == FS_FAT32) {
 800da3e:	f1ba 0f03 	cmp.w	sl, #3
 800da42:	d06c      	beq.n	800db1e <f_mkfs+0x6aa>
			if (sz_vol >= 0x10000) {
 800da44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800da46:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800da4a:	d266      	bcs.n	800db1a <f_mkfs+0x6a6>
				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
 800da4c:	f1ba 0f02 	cmp.w	sl, #2
 800da50:	bf0c      	ite	eq
 800da52:	2004      	moveq	r0, #4
 800da54:	2001      	movne	r0, #1
		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
 800da56:	9b05      	ldr	r3, [sp, #20]
 800da58:	2b00      	cmp	r3, #0
 800da5a:	d145      	bne.n	800dae8 <f_mkfs+0x674>
		*d++ = (BYTE)val;
 800da5c:	9a05      	ldr	r2, [sp, #20]
 800da5e:	9904      	ldr	r1, [sp, #16]
 800da60:	462b      	mov	r3, r5
 800da62:	f803 2b01 	strb.w	r2, [r3], #1
	} while (--cnt);
 800da66:	428b      	cmp	r3, r1
 800da68:	d1fb      	bne.n	800da62 <f_mkfs+0x5ee>
			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 800da6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
			pte[PTE_System] = sys;				/* System type */
 800da6c:	f885 01c2 	strb.w	r0, [r5, #450]	; 0x1c2
			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 800da70:	eb03 010b 	add.w	r1, r3, fp
 800da74:	f643 60c1 	movw	r0, #16065	; 0x3ec1
 800da78:	fbb1 f1f0 	udiv	r1, r1, r0
			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 800da7c:	0888      	lsrs	r0, r1, #2
	*ptr++ = (BYTE)val; val >>= 8;
 800da7e:	9e02      	ldr	r6, [sp, #8]
			pte[PTE_Boot] = 0;					/* Boot indicator */
 800da80:	f885 21be 	strb.w	r2, [r5, #446]	; 0x1be
			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 800da84:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
	*ptr++ = (BYTE)val; val >>= 8;
 800da88:	ea4f 2c13 	mov.w	ip, r3, lsr #8
	*ptr++ = (BYTE)val; val >>= 8;
 800da8c:	0c1f      	lsrs	r7, r3, #16
			pte[PTE_StCyl] = 0;					/* Start cylinder */
 800da8e:	f885 21c1 	strb.w	r2, [r5, #449]	; 0x1c1
	*ptr++ = (BYTE)val; val >>= 8;
 800da92:	f885 61c6 	strb.w	r6, [r5, #454]	; 0x1c6
	*ptr++ = (BYTE)val; val >>= 8;
 800da96:	f885 21c7 	strb.w	r2, [r5, #455]	; 0x1c7
	*ptr++ = (BYTE)val; val >>= 8;
 800da9a:	f885 21c8 	strb.w	r2, [r5, #456]	; 0x1c8
	*ptr++ = (BYTE)val;
 800da9e:	f885 21c9 	strb.w	r2, [r5, #457]	; 0x1c9
	*ptr++ = (BYTE)val; val >>= 8;
 800daa2:	f885 31ca 	strb.w	r3, [r5, #458]	; 0x1ca
	*ptr++ = (BYTE)val; val >>= 8;
 800daa6:	0e1a      	lsrs	r2, r3, #24
			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 800daa8:	f885 11c5 	strb.w	r1, [r5, #453]	; 0x1c5
			pte[PTE_StHead] = 1;				/* Start head */
 800daac:	2301      	movs	r3, #1
			pte[PTE_EdHead] = 254;				/* End head */
 800daae:	21fe      	movs	r1, #254	; 0xfe
	*ptr++ = (BYTE)val; val >>= 8;
 800dab0:	2655      	movs	r6, #85	; 0x55
			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 800dab2:	f885 01c4 	strb.w	r0, [r5, #452]	; 0x1c4
	*ptr++ = (BYTE)val;
 800dab6:	20aa      	movs	r0, #170	; 0xaa
	*ptr++ = (BYTE)val;
 800dab8:	f885 21cd 	strb.w	r2, [r5, #461]	; 0x1cd
	*ptr++ = (BYTE)val;
 800dabc:	f885 01ff 	strb.w	r0, [r5, #511]	; 0x1ff
			pte[PTE_EdHead] = 254;				/* End head */
 800dac0:	f885 11c3 	strb.w	r1, [r5, #451]	; 0x1c3
	*ptr++ = (BYTE)val; val >>= 8;
 800dac4:	f885 c1cb 	strb.w	ip, [r5, #459]	; 0x1cb
	*ptr++ = (BYTE)val; val >>= 8;
 800dac8:	f885 71cc 	strb.w	r7, [r5, #460]	; 0x1cc
	*ptr++ = (BYTE)val; val >>= 8;
 800dacc:	f885 61fe 	strb.w	r6, [r5, #510]	; 0x1fe
			pte[PTE_StHead] = 1;				/* Start head */
 800dad0:	f885 31bf 	strb.w	r3, [r5, #447]	; 0x1bf
			pte[PTE_StSec] = 1;					/* Start sector */
 800dad4:	f885 31c0 	strb.w	r3, [r5, #448]	; 0x1c0
			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 800dad8:	4629      	mov	r1, r5
 800dada:	2200      	movs	r2, #0
 800dadc:	4620      	mov	r0, r4
 800dade:	f7fe fa37 	bl	800bf50 <disk_write>
 800dae2:	2800      	cmp	r0, #0
 800dae4:	f47f ae8f 	bne.w	800d806 <f_mkfs+0x392>
	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
 800dae8:	2200      	movs	r2, #0
 800daea:	4620      	mov	r0, r4
 800daec:	4611      	mov	r1, r2
 800daee:	f7fe fa3d 	bl	800bf6c <disk_ioctl>
	if (vol < 0) return FR_INVALID_DRIVE;
 800daf2:	3800      	subs	r0, #0
 800daf4:	bf18      	it	ne
 800daf6:	2001      	movne	r0, #1
 800daf8:	e4f8      	b.n	800d4ec <f_mkfs+0x78>
	*ptr++ = (BYTE)val; val >>= 8;
 800dafa:	22f8      	movs	r2, #248	; 0xf8
	*ptr++ = (BYTE)val; val >>= 8;
 800dafc:	23ff      	movs	r3, #255	; 0xff
	*ptr++ = (BYTE)val; val >>= 8;
 800dafe:	702a      	strb	r2, [r5, #0]
	*ptr++ = (BYTE)val;
 800db00:	220f      	movs	r2, #15
	*ptr++ = (BYTE)val; val >>= 8;
 800db02:	706b      	strb	r3, [r5, #1]
	*ptr++ = (BYTE)val; val >>= 8;
 800db04:	70ab      	strb	r3, [r5, #2]
	*ptr++ = (BYTE)val;
 800db06:	70eb      	strb	r3, [r5, #3]
	*ptr++ = (BYTE)val; val >>= 8;
 800db08:	712b      	strb	r3, [r5, #4]
	*ptr++ = (BYTE)val; val >>= 8;
 800db0a:	716b      	strb	r3, [r5, #5]
	*ptr++ = (BYTE)val; val >>= 8;
 800db0c:	71ab      	strb	r3, [r5, #6]
	*ptr++ = (BYTE)val;
 800db0e:	71eb      	strb	r3, [r5, #7]
	*ptr++ = (BYTE)val; val >>= 8;
 800db10:	722b      	strb	r3, [r5, #8]
	*ptr++ = (BYTE)val; val >>= 8;
 800db12:	726b      	strb	r3, [r5, #9]
	*ptr++ = (BYTE)val; val >>= 8;
 800db14:	72ab      	strb	r3, [r5, #10]
	*ptr++ = (BYTE)val;
 800db16:	72ea      	strb	r2, [r5, #11]
}
 800db18:	e62e      	b.n	800d778 <f_mkfs+0x304>
				sys = 0x06;	/* FAT12/16 (>=64KS) */
 800db1a:	2006      	movs	r0, #6
 800db1c:	e79b      	b.n	800da56 <f_mkfs+0x5e2>
			sys = 0x0C;		/* FAT32X */
 800db1e:	200c      	movs	r0, #12
 800db20:	e799      	b.n	800da56 <f_mkfs+0x5e2>
 800db22:	bf00      	nop
 800db24:	0ffeffff 	.word	0x0ffeffff
 800db28:	0802804e 	.word	0x0802804e
 800db2c:	08027f94 	.word	0x08027f94
 800db30:	0802803e 	.word	0x0802803e

0800db34 <f_puts>:

int f_puts (
	const TCHAR* str,	/* Pointer to the string to be output */
	FIL* fp				/* Pointer to the file object */
)
{
 800db34:	b530      	push	{r4, r5, lr}
 800db36:	b095      	sub	sp, #84	; 0x54
 800db38:	460b      	mov	r3, r1
	putbuff pb;


	putc_init(&pb, fp);
	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 800db3a:	7801      	ldrb	r1, [r0, #0]
	pb->fp = fp;
 800db3c:	9301      	str	r3, [sp, #4]
	pb->nchr = pb->idx = 0;
 800db3e:	2300      	movs	r3, #0
 800db40:	e9cd 3302 	strd	r3, r3, [sp, #8]
	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 800db44:	ad01      	add	r5, sp, #4
 800db46:	b141      	cbz	r1, 800db5a <f_puts+0x26>
 800db48:	4604      	mov	r4, r0
 800db4a:	ad01      	add	r5, sp, #4
 800db4c:	4628      	mov	r0, r5
 800db4e:	f7ff fbc9 	bl	800d2e4 <putc_bfd>
 800db52:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800db56:	2900      	cmp	r1, #0
 800db58:	d1f8      	bne.n	800db4c <f_puts+0x18>
	return putc_flush(&pb);
 800db5a:	4628      	mov	r0, r5
 800db5c:	f7ff fbe8 	bl	800d330 <putc_flush>
}
 800db60:	b015      	add	sp, #84	; 0x54
 800db62:	bd30      	pop	{r4, r5, pc}

0800db64 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(const Diskio_drvTypeDef *drv, char *path)
{
 800db64:	b4f0      	push	{r4, r5, r6, r7}
  if(disk.nbr < _VOLUMES)
 800db66:	4b0f      	ldr	r3, [pc, #60]	; (800dba4 <FATFS_LinkDriver+0x40>)
 800db68:	7a5c      	ldrb	r4, [r3, #9]
 800db6a:	b9c4      	cbnz	r4, 800db9e <FATFS_LinkDriver+0x3a>
    disk.is_initialized[disk.nbr] = 0;
 800db6c:	7a5f      	ldrb	r7, [r3, #9]
    disk.drv[disk.nbr] = drv;
 800db6e:	7a5e      	ldrb	r6, [r3, #9]
    disk.lun[disk.nbr] = lun;
 800db70:	7a5d      	ldrb	r5, [r3, #9]
 800db72:	4602      	mov	r2, r0
    disk.drv[disk.nbr] = drv;
 800db74:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 800db78:	f004 00ff 	and.w	r0, r4, #255	; 0xff
    DiskNum = disk.nbr++;
 800db7c:	7a5c      	ldrb	r4, [r3, #9]
    disk.drv[disk.nbr] = drv;
 800db7e:	6072      	str	r2, [r6, #4]
    disk.lun[disk.nbr] = lun;
 800db80:	441d      	add	r5, r3
    DiskNum = disk.nbr++;
 800db82:	1c62      	adds	r2, r4, #1
    disk.is_initialized[disk.nbr] = 0;
 800db84:	55d8      	strb	r0, [r3, r7]
    DiskNum = disk.nbr++;
 800db86:	b2d2      	uxtb	r2, r2
    disk.lun[disk.nbr] = lun;
 800db88:	7228      	strb	r0, [r5, #8]
    DiskNum = disk.nbr++;
 800db8a:	725a      	strb	r2, [r3, #9]
    path[0] = DiskNum + '0';
 800db8c:	3430      	adds	r4, #48	; 0x30
    path[1] = ':';
 800db8e:	253a      	movs	r5, #58	; 0x3a
    path[2] = '/';
 800db90:	232f      	movs	r3, #47	; 0x2f
    path[0] = DiskNum + '0';
 800db92:	700c      	strb	r4, [r1, #0]
    path[1] = ':';
 800db94:	704d      	strb	r5, [r1, #1]
    path[3] = 0;
 800db96:	70c8      	strb	r0, [r1, #3]
  return FATFS_LinkDriverEx(drv, path, 0);
}
 800db98:	bcf0      	pop	{r4, r5, r6, r7}
    path[2] = '/';
 800db9a:	708b      	strb	r3, [r1, #2]
}
 800db9c:	4770      	bx	lr
  uint8_t ret = 1;
 800db9e:	2001      	movs	r0, #1
}
 800dba0:	bcf0      	pop	{r4, r5, r6, r7}
 800dba2:	4770      	bx	lr
 800dba4:	20002c6c 	.word	0x20002c6c

0800dba8 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800dba8:	b178      	cbz	r0, 800dbca <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 800dbaa:	2300      	movs	r3, #0
 800dbac:	f8c0 32b8 	str.w	r3, [r0, #696]	; 0x2b8
  pdev->pUserData[0] = NULL;
 800dbb0:	f8c0 32c4 	str.w	r3, [r0, #708]	; 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 800dbb4:	f8c0 32d0 	str.w	r3, [r0, #720]	; 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800dbb8:	b109      	cbz	r1, 800dbbe <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 800dbba:	f8c0 12b4 	str.w	r1, [r0, #692]	; 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800dbbe:	2301      	movs	r3, #1
  pdev->id = id;
 800dbc0:	7002      	strb	r2, [r0, #0]
  pdev->dev_state = USBD_STATE_DEFAULT;
 800dbc2:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800dbc6:	f7f4 ba01 	b.w	8001fcc <USBD_LL_Init>

  return ret;
}
 800dbca:	2003      	movs	r0, #3
 800dbcc:	4770      	bx	lr
 800dbce:	bf00      	nop

0800dbd0 <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800dbd0:	b510      	push	{r4, lr}
 800dbd2:	b082      	sub	sp, #8
  uint16_t len = 0U;
 800dbd4:	2300      	movs	r3, #0
 800dbd6:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 800dbda:	b189      	cbz	r1, 800dc00 <USBD_RegisterClass+0x30>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800dbdc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  pdev->pClass[0] = pclass;
 800dbde:	f8c0 12b8 	str.w	r1, [r0, #696]	; 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800dbe2:	4604      	mov	r4, r0
 800dbe4:	b123      	cbz	r3, 800dbf0 <USBD_RegisterClass+0x20>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800dbe6:	f10d 0006 	add.w	r0, sp, #6
 800dbea:	4798      	blx	r3
 800dbec:	f8c4 02d0 	str.w	r0, [r4, #720]	; 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses ++;
 800dbf0:	f8d4 32d8 	ldr.w	r3, [r4, #728]	; 0x2d8

  return USBD_OK;
 800dbf4:	2000      	movs	r0, #0
  pdev->NumClasses ++;
 800dbf6:	3301      	adds	r3, #1
 800dbf8:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
}
 800dbfc:	b002      	add	sp, #8
 800dbfe:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 800dc00:	2003      	movs	r0, #3
}
 800dc02:	b002      	add	sp, #8
 800dc04:	bd10      	pop	{r4, pc}
 800dc06:	bf00      	nop

0800dc08 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800dc08:	f7f4 ba12 	b.w	8002030 <USBD_LL_Start>

0800dc0c <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800dc0c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800dc10:	b10b      	cbz	r3, 800dc16 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 800dc12:	681b      	ldr	r3, [r3, #0]
 800dc14:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800dc16:	4618      	mov	r0, r3
 800dc18:	4770      	bx	lr
 800dc1a:	bf00      	nop

0800dc1c <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status: USBD_StatusTypeDef
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800dc1c:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 800dc1e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800dc22:	685b      	ldr	r3, [r3, #4]
 800dc24:	4798      	blx	r3
 800dc26:	2800      	cmp	r0, #0
    ret = USBD_FAIL;
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800dc28:	bf18      	it	ne
 800dc2a:	2003      	movne	r0, #3
 800dc2c:	bd08      	pop	{r3, pc}
 800dc2e:	bf00      	nop

0800dc30 <USBD_LL_SetupStage>:
  *         Handle the setup stage
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800dc30:	b538      	push	{r3, r4, r5, lr}
 800dc32:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 800dc34:	f200 25aa 	addw	r5, r0, #682	; 0x2aa
 800dc38:	4628      	mov	r0, r5
 800dc3a:	f000 fc17 	bl	800e46c <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 800dc3e:	f894 12aa 	ldrb.w	r1, [r4, #682]	; 0x2aa
  pdev->ep0_data_len = pdev->request.wLength;
 800dc42:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	; 0x2b0
 800dc46:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
  pdev->ep0_state = USBD_EP0_SETUP;
 800dc4a:	2201      	movs	r2, #1
 800dc4c:	f001 031f 	and.w	r3, r1, #31
  switch (pdev->request.bmRequest & 0x1FU)
 800dc50:	4293      	cmp	r3, r2
  pdev->ep0_state = USBD_EP0_SETUP;
 800dc52:	f8c4 2294 	str.w	r2, [r4, #660]	; 0x294
  switch (pdev->request.bmRequest & 0x1FU)
 800dc56:	d009      	beq.n	800dc6c <USBD_LL_SetupStage+0x3c>
 800dc58:	2b02      	cmp	r3, #2
 800dc5a:	d013      	beq.n	800dc84 <USBD_LL_SetupStage+0x54>
 800dc5c:	b163      	cbz	r3, 800dc78 <USBD_LL_SetupStage+0x48>
    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
      break;

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800dc5e:	4620      	mov	r0, r4
 800dc60:	f001 0180 	and.w	r1, r1, #128	; 0x80
      break;
  }

  return ret;
}
 800dc64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800dc68:	f7f4 ba1c 	b.w	80020a4 <USBD_LL_StallEP>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800dc6c:	4629      	mov	r1, r5
 800dc6e:	4620      	mov	r0, r4
}
 800dc70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800dc74:	f000 bb14 	b.w	800e2a0 <USBD_StdItfReq>
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800dc78:	4629      	mov	r1, r5
 800dc7a:	4620      	mov	r0, r4
}
 800dc7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800dc80:	f000 b952 	b.w	800df28 <USBD_StdDevReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800dc84:	4629      	mov	r1, r5
 800dc86:	4620      	mov	r0, r4
}
 800dc88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800dc8c:	f000 bb42 	b.w	800e314 <USBD_StdEPReq>

0800dc90 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800dc90:	b570      	push	{r4, r5, r6, lr}
 800dc92:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 800dc94:	b931      	cbnz	r1, 800dca4 <USBD_LL_DataOutStage+0x14>
 800dc96:	4615      	mov	r5, r2
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800dc98:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 800dc9c:	2a03      	cmp	r2, #3
 800dc9e:	d010      	beq.n	800dcc2 <USBD_LL_DataOutStage+0x32>
      }
    }
  }

  return USBD_OK;
}
 800dca0:	2000      	movs	r0, #0
 800dca2:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800dca4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800dca8:	2b03      	cmp	r3, #3
 800dcaa:	d1f9      	bne.n	800dca0 <USBD_LL_DataOutStage+0x10>
        if (pdev->pClass[idx]->DataOut != NULL)
 800dcac:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800dcb0:	699b      	ldr	r3, [r3, #24]
 800dcb2:	2b00      	cmp	r3, #0
 800dcb4:	d0f4      	beq.n	800dca0 <USBD_LL_DataOutStage+0x10>
          pdev->classId = idx;
 800dcb6:	2200      	movs	r2, #0
}
 800dcb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800dcbc:	f8c0 22d4 	str.w	r2, [r0, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800dcc0:	4718      	bx	r3
 800dcc2:	460b      	mov	r3, r1
      if (pep->rem_length > pep->maxpacket)
 800dcc4:	e9d0 1257 	ldrd	r1, r2, [r0, #348]	; 0x15c
 800dcc8:	4291      	cmp	r1, r2
 800dcca:	d808      	bhi.n	800dcde <USBD_LL_DataOutStage+0x4e>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800dccc:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 800dcd0:	2a03      	cmp	r2, #3
 800dcd2:	d00e      	beq.n	800dcf2 <USBD_LL_DataOutStage+0x62>
        (void)USBD_CtlSendStatus(pdev);
 800dcd4:	4620      	mov	r0, r4
 800dcd6:	f000 fc2d 	bl	800e534 <USBD_CtlSendStatus>
}
 800dcda:	2000      	movs	r0, #0
 800dcdc:	bd70      	pop	{r4, r5, r6, pc}
        pep->rem_length -= pep->maxpacket;
 800dcde:	1a89      	subs	r1, r1, r2
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800dce0:	428a      	cmp	r2, r1
 800dce2:	bf28      	it	cs
 800dce4:	460a      	movcs	r2, r1
        pep->rem_length -= pep->maxpacket;
 800dce6:	f8c0 115c 	str.w	r1, [r0, #348]	; 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800dcea:	4629      	mov	r1, r5
 800dcec:	f000 fc1a 	bl	800e524 <USBD_CtlContinueRx>
 800dcf0:	e7d6      	b.n	800dca0 <USBD_LL_DataOutStage+0x10>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800dcf2:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 800dcf6:	6912      	ldr	r2, [r2, #16]
 800dcf8:	2a00      	cmp	r2, #0
 800dcfa:	d0eb      	beq.n	800dcd4 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 800dcfc:	f8c0 32d4 	str.w	r3, [r0, #724]	; 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800dd00:	4790      	blx	r2
 800dd02:	e7e7      	b.n	800dcd4 <USBD_LL_DataOutStage+0x44>

0800dd04 <USBD_LL_DataInStage>:
  * @param  epnum: endpoint index
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800dd04:	b570      	push	{r4, r5, r6, lr}
 800dd06:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800dd08:	b961      	cbnz	r1, 800dd24 <USBD_LL_DataInStage+0x20>
 800dd0a:	4613      	mov	r3, r2
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800dd0c:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 800dd10:	2a02      	cmp	r2, #2
 800dd12:	d016      	beq.n	800dd42 <USBD_LL_DataInStage+0x3e>
        (void)USBD_LL_StallEP(pdev, 0x80U);
      }
#endif
    }

    if (pdev->dev_test_mode != 0U)
 800dd14:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 800dd18:	b113      	cbz	r3, 800dd20 <USBD_LL_DataInStage+0x1c>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800dd1a:	2300      	movs	r3, #0
 800dd1c:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
      }
    }
  }

  return USBD_OK;
}
 800dd20:	2000      	movs	r0, #0
 800dd22:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800dd24:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800dd28:	2b03      	cmp	r3, #3
 800dd2a:	d1f9      	bne.n	800dd20 <USBD_LL_DataInStage+0x1c>
        if (pdev->pClass[idx]->DataIn != NULL)
 800dd2c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800dd30:	695b      	ldr	r3, [r3, #20]
 800dd32:	2b00      	cmp	r3, #0
 800dd34:	d0f4      	beq.n	800dd20 <USBD_LL_DataInStage+0x1c>
          pdev->classId = idx;
 800dd36:	2200      	movs	r2, #0
}
 800dd38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800dd3c:	f8c0 22d4 	str.w	r2, [r0, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800dd40:	4718      	bx	r3
      if (pep->rem_length > pep->maxpacket)
 800dd42:	e9d0 2607 	ldrd	r2, r6, [r0, #28]
 800dd46:	42b2      	cmp	r2, r6
 800dd48:	460d      	mov	r5, r1
 800dd4a:	d810      	bhi.n	800dd6e <USBD_LL_DataInStage+0x6a>
        if ((pep->maxpacket == pep->rem_length) &&
 800dd4c:	d01b      	beq.n	800dd86 <USBD_LL_DataInStage+0x82>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800dd4e:	f894 329c 	ldrb.w	r3, [r4, #668]	; 0x29c
 800dd52:	2b03      	cmp	r3, #3
 800dd54:	d024      	beq.n	800dda0 <USBD_LL_DataInStage+0x9c>
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800dd56:	2180      	movs	r1, #128	; 0x80
 800dd58:	4620      	mov	r0, r4
 800dd5a:	f7f4 f9a3 	bl	80020a4 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800dd5e:	4620      	mov	r0, r4
 800dd60:	f000 fbf4 	bl	800e54c <USBD_CtlReceiveStatus>
    if (pdev->dev_test_mode != 0U)
 800dd64:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 800dd68:	2b00      	cmp	r3, #0
 800dd6a:	d0d9      	beq.n	800dd20 <USBD_LL_DataInStage+0x1c>
 800dd6c:	e7d5      	b.n	800dd1a <USBD_LL_DataInStage+0x16>
        pep->rem_length -= pep->maxpacket;
 800dd6e:	1b92      	subs	r2, r2, r6
 800dd70:	61c2      	str	r2, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 800dd72:	4619      	mov	r1, r3
 800dd74:	f000 fbce 	bl	800e514 <USBD_CtlContinueSendData>
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800dd78:	462b      	mov	r3, r5
 800dd7a:	462a      	mov	r2, r5
 800dd7c:	4629      	mov	r1, r5
 800dd7e:	4620      	mov	r0, r4
 800dd80:	f7f4 f9dc 	bl	800213c <USBD_LL_PrepareReceive>
 800dd84:	e7c6      	b.n	800dd14 <USBD_LL_DataInStage+0x10>
            (pep->total_length >= pep->maxpacket) &&
 800dd86:	6983      	ldr	r3, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800dd88:	429a      	cmp	r2, r3
 800dd8a:	d8e0      	bhi.n	800dd4e <USBD_LL_DataInStage+0x4a>
            (pep->total_length >= pep->maxpacket) &&
 800dd8c:	f8d0 2298 	ldr.w	r2, [r0, #664]	; 0x298
 800dd90:	4293      	cmp	r3, r2
 800dd92:	d2dc      	bcs.n	800dd4e <USBD_LL_DataInStage+0x4a>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800dd94:	460a      	mov	r2, r1
 800dd96:	f000 fbbd 	bl	800e514 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800dd9a:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 800dd9e:	e7eb      	b.n	800dd78 <USBD_LL_DataInStage+0x74>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800dda0:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 800dda4:	68db      	ldr	r3, [r3, #12]
 800dda6:	2b00      	cmp	r3, #0
 800dda8:	d0d5      	beq.n	800dd56 <USBD_LL_DataInStage+0x52>
              pdev->classId = 0U;
 800ddaa:	2200      	movs	r2, #0
 800ddac:	f8c4 22d4 	str.w	r2, [r4, #724]	; 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800ddb0:	4620      	mov	r0, r4
 800ddb2:	4798      	blx	r3
 800ddb4:	e7cf      	b.n	800dd56 <USBD_LL_DataInStage+0x52>
 800ddb6:	bf00      	nop

0800ddb8 <USBD_LL_Reset>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800ddb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800ddba:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 800ddbe:	2100      	movs	r1, #0
  pdev->dev_state = USBD_STATE_DEFAULT;
 800ddc0:	2201      	movs	r2, #1
 800ddc2:	f880 229c 	strb.w	r2, [r0, #668]	; 0x29c
{
 800ddc6:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800ddc8:	f8c0 1294 	str.w	r1, [r0, #660]	; 0x294
  pdev->dev_config = 0U;
 800ddcc:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800ddce:	f8c0 12a4 	str.w	r1, [r0, #676]	; 0x2a4
  pdev->dev_test_mode = 0U;
 800ddd2:	f880 12a0 	strb.w	r1, [r0, #672]	; 0x2a0
  if (pdev->pClass[0] != NULL)
 800ddd6:	b11b      	cbz	r3, 800dde0 <USBD_LL_Reset+0x28>
  {
    if (pdev->pClass[0]->DeInit != NULL)
 800ddd8:	685b      	ldr	r3, [r3, #4]
 800ddda:	b10b      	cbz	r3, 800dde0 <USBD_LL_Reset+0x28>
    {
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800dddc:	4798      	blx	r3
 800ddde:	b9b0      	cbnz	r0, 800de0e <USBD_LL_Reset+0x56>
  USBD_StatusTypeDef ret = USBD_OK;
 800dde0:	2700      	movs	r7, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800dde2:	2200      	movs	r2, #0
 800dde4:	2340      	movs	r3, #64	; 0x40
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800dde6:	461d      	mov	r5, r3
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800dde8:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800ddea:	2601      	movs	r6, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800ddec:	4620      	mov	r0, r4
 800ddee:	f7f4 f92d 	bl	800204c <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800ddf2:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800ddf6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800ddfa:	462b      	mov	r3, r5
 800ddfc:	2200      	movs	r2, #0
 800ddfe:	2180      	movs	r1, #128	; 0x80
 800de00:	4620      	mov	r0, r4
 800de02:	f7f4 f923 	bl	800204c <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800de06:	84a6      	strh	r6, [r4, #36]	; 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800de08:	6225      	str	r5, [r4, #32]

  return ret;
}
 800de0a:	4638      	mov	r0, r7
 800de0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        ret = USBD_FAIL;
 800de0e:	2703      	movs	r7, #3
 800de10:	e7e7      	b.n	800dde2 <USBD_LL_Reset+0x2a>
 800de12:	bf00      	nop

0800de14 <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800de14:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800de16:	2000      	movs	r0, #0
 800de18:	4770      	bx	lr
 800de1a:	bf00      	nop

0800de1c <USBD_LL_Suspend>:
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  pdev->dev_old_state = pdev->dev_state;
 800de1c:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
{
 800de20:	4603      	mov	r3, r0
  pdev->dev_state = USBD_STATE_SUSPENDED;
 800de22:	2104      	movs	r1, #4
  pdev->dev_old_state = pdev->dev_state;
 800de24:	b2d2      	uxtb	r2, r2
 800de26:	f880 229d 	strb.w	r2, [r0, #669]	; 0x29d

  return USBD_OK;
}
 800de2a:	2000      	movs	r0, #0
  pdev->dev_state = USBD_STATE_SUSPENDED;
 800de2c:	f883 129c 	strb.w	r1, [r3, #668]	; 0x29c
}
 800de30:	4770      	bx	lr
 800de32:	bf00      	nop

0800de34 <USBD_LL_Resume>:
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800de34:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800de38:	2b04      	cmp	r3, #4
 800de3a:	d104      	bne.n	800de46 <USBD_LL_Resume+0x12>
  {
    pdev->dev_state = pdev->dev_old_state;
 800de3c:	f890 329d 	ldrb.w	r3, [r0, #669]	; 0x29d
 800de40:	b2db      	uxtb	r3, r3
 800de42:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
  }

  return USBD_OK;
}
 800de46:	2000      	movs	r0, #0
 800de48:	4770      	bx	lr
 800de4a:	bf00      	nop

0800de4c <USBD_LL_SOF>:
  */

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800de4c:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 800de50:	2a03      	cmp	r2, #3
 800de52:	d001      	beq.n	800de58 <USBD_LL_SOF+0xc>
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 800de54:	2000      	movs	r0, #0
 800de56:	4770      	bx	lr
{
 800de58:	b508      	push	{r3, lr}
    if (pdev->pClass[0] != NULL)
 800de5a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800de5e:	b113      	cbz	r3, 800de66 <USBD_LL_SOF+0x1a>
      if (pdev->pClass[0]->SOF != NULL)
 800de60:	69db      	ldr	r3, [r3, #28]
 800de62:	b103      	cbz	r3, 800de66 <USBD_LL_SOF+0x1a>
        (void)pdev->pClass[0]->SOF(pdev);
 800de64:	4798      	blx	r3
}
 800de66:	2000      	movs	r0, #0
 800de68:	bd08      	pop	{r3, pc}
 800de6a:	bf00      	nop

0800de6c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800de6c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	; 0x2d4
 800de70:	32ae      	adds	r2, #174	; 0xae
 800de72:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800de76:	b15a      	cbz	r2, 800de90 <USBD_LL_IsoINIncomplete+0x24>
{
 800de78:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800de7a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800de7e:	2b03      	cmp	r3, #3
 800de80:	d001      	beq.n	800de86 <USBD_LL_IsoINIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800de82:	2000      	movs	r0, #0
}
 800de84:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800de86:	6a13      	ldr	r3, [r2, #32]
 800de88:	b123      	cbz	r3, 800de94 <USBD_LL_IsoINIncomplete+0x28>
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800de8a:	4798      	blx	r3
  return USBD_OK;
 800de8c:	2000      	movs	r0, #0
}
 800de8e:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
 800de90:	2003      	movs	r0, #3
}
 800de92:	4770      	bx	lr
  return USBD_OK;
 800de94:	4618      	mov	r0, r3
}
 800de96:	bd08      	pop	{r3, pc}

0800de98 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800de98:	f8d0 22d4 	ldr.w	r2, [r0, #724]	; 0x2d4
 800de9c:	32ae      	adds	r2, #174	; 0xae
 800de9e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800dea2:	b15a      	cbz	r2, 800debc <USBD_LL_IsoOUTIncomplete+0x24>
{
 800dea4:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800dea6:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800deaa:	2b03      	cmp	r3, #3
 800deac:	d001      	beq.n	800deb2 <USBD_LL_IsoOUTIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800deae:	2000      	movs	r0, #0
}
 800deb0:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800deb2:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800deb4:	b123      	cbz	r3, 800dec0 <USBD_LL_IsoOUTIncomplete+0x28>
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800deb6:	4798      	blx	r3
  return USBD_OK;
 800deb8:	2000      	movs	r0, #0
}
 800deba:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
 800debc:	2003      	movs	r0, #3
}
 800debe:	4770      	bx	lr
  return USBD_OK;
 800dec0:	4618      	mov	r0, r3
}
 800dec2:	bd08      	pop	{r3, pc}

0800dec4 <USBD_LL_DevConnected>:
 800dec4:	2000      	movs	r0, #0
 800dec6:	4770      	bx	lr

0800dec8 <USBD_LL_DevDisconnected>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800dec8:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
  pdev->dev_state = USBD_STATE_DEFAULT;
 800decc:	2101      	movs	r1, #1
 800dece:	f880 129c 	strb.w	r1, [r0, #668]	; 0x29c
  if (pdev->pClass[0] != NULL)
 800ded2:	b142      	cbz	r2, 800dee6 <USBD_LL_DevDisconnected+0x1e>
{
 800ded4:	b508      	push	{r3, lr}
  {
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800ded6:	6852      	ldr	r2, [r2, #4]
 800ded8:	7901      	ldrb	r1, [r0, #4]
 800deda:	4790      	blx	r2
 800dedc:	b908      	cbnz	r0, 800dee2 <USBD_LL_DevDisconnected+0x1a>
  USBD_StatusTypeDef   ret = USBD_OK;
 800dede:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800dee0:	bd08      	pop	{r3, pc}
      ret = USBD_FAIL;
 800dee2:	2003      	movs	r0, #3
}
 800dee4:	bd08      	pop	{r3, pc}
  USBD_StatusTypeDef   ret = USBD_OK;
 800dee6:	2000      	movs	r0, #0
}
 800dee8:	4770      	bx	lr
 800deea:	bf00      	nop

0800deec <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800deec:	2000      	movs	r0, #0
 800deee:	4770      	bx	lr

0800def0 <USBD_CoreFindEP>:
 800def0:	2000      	movs	r0, #0
 800def2:	4770      	bx	lr

0800def4 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800def4:	b410      	push	{r4}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800def6:	7802      	ldrb	r2, [r0, #0]
 800def8:	8844      	ldrh	r4, [r0, #2]
 800defa:	4294      	cmp	r4, r2
 800defc:	d910      	bls.n	800df20 <USBD_GetEpDesc+0x2c>
 800defe:	b293      	uxth	r3, r2
 800df00:	e002      	b.n	800df08 <USBD_GetEpDesc+0x14>
  {
    ptr = desc->bLength;

    while (ptr < desc->wTotalLength)
 800df02:	429c      	cmp	r4, r3
 800df04:	d90c      	bls.n	800df20 <USBD_GetEpDesc+0x2c>
 800df06:	7802      	ldrb	r2, [r0, #0]
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800df08:	4410      	add	r0, r2
  *ptr += pnext->bLength;
 800df0a:	4413      	add	r3, r2
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800df0c:	7842      	ldrb	r2, [r0, #1]
 800df0e:	2a05      	cmp	r2, #5
  *ptr += pnext->bLength;
 800df10:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800df12:	d1f6      	bne.n	800df02 <USBD_GetEpDesc+0xe>
        if (pEpDesc->bEndpointAddress == EpAddr)
 800df14:	7882      	ldrb	r2, [r0, #2]
 800df16:	428a      	cmp	r2, r1
 800df18:	d1f3      	bne.n	800df02 <USBD_GetEpDesc+0xe>
}
 800df1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df1e:	4770      	bx	lr
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800df20:	2000      	movs	r0, #0
}
 800df22:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df26:	4770      	bx	lr

0800df28 <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800df28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df2c:	780c      	ldrb	r4, [r1, #0]
 800df2e:	f004 0460 	and.w	r4, r4, #96	; 0x60
  USBD_StatusTypeDef ret = USBD_OK;

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800df32:	2c20      	cmp	r4, #32
{
 800df34:	b082      	sub	sp, #8
 800df36:	460e      	mov	r6, r1
 800df38:	4605      	mov	r5, r0
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800df3a:	d00f      	beq.n	800df5c <USBD_StdDevReq+0x34>
 800df3c:	2c40      	cmp	r4, #64	; 0x40
 800df3e:	d00d      	beq.n	800df5c <USBD_StdDevReq+0x34>
 800df40:	b1d4      	cbz	r4, 800df78 <USBD_StdDevReq+0x50>
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800df42:	2180      	movs	r1, #128	; 0x80
 800df44:	4628      	mov	r0, r5
 800df46:	f7f4 f8ad 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800df4a:	4628      	mov	r0, r5
 800df4c:	2100      	movs	r1, #0
 800df4e:	f7f4 f8a9 	bl	80020a4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 800df52:	2400      	movs	r4, #0
}
 800df54:	4620      	mov	r0, r4
 800df56:	b002      	add	sp, #8
 800df58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800df5c:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800df60:	33ae      	adds	r3, #174	; 0xae
 800df62:	4631      	mov	r1, r6
 800df64:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800df68:	4628      	mov	r0, r5
 800df6a:	689b      	ldr	r3, [r3, #8]
 800df6c:	4798      	blx	r3
 800df6e:	4604      	mov	r4, r0
}
 800df70:	4620      	mov	r0, r4
 800df72:	b002      	add	sp, #8
 800df74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      switch (req->bRequest)
 800df78:	784b      	ldrb	r3, [r1, #1]
 800df7a:	2b09      	cmp	r3, #9
 800df7c:	d8e1      	bhi.n	800df42 <USBD_StdDevReq+0x1a>
 800df7e:	a201      	add	r2, pc, #4	; (adr r2, 800df84 <USBD_StdDevReq+0x5c>)
 800df80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800df84:	0800dfe9 	.word	0x0800dfe9
 800df88:	0800e017 	.word	0x0800e017
 800df8c:	0800df43 	.word	0x0800df43
 800df90:	0800e035 	.word	0x0800e035
 800df94:	0800df43 	.word	0x0800df43
 800df98:	0800e059 	.word	0x0800e059
 800df9c:	0800e091 	.word	0x0800e091
 800dfa0:	0800df43 	.word	0x0800df43
 800dfa4:	0800e0c5 	.word	0x0800e0c5
 800dfa8:	0800dfad 	.word	0x0800dfad
  cfgidx = (uint8_t)(req->wValue);
 800dfac:	788e      	ldrb	r6, [r1, #2]
 800dfae:	4fbb      	ldr	r7, [pc, #748]	; (800e29c <USBD_StdDevReq+0x374>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800dfb0:	2e01      	cmp	r6, #1
  cfgidx = (uint8_t)(req->wValue);
 800dfb2:	703e      	strb	r6, [r7, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800dfb4:	f200 8149 	bhi.w	800e24a <USBD_StdDevReq+0x322>
  switch (pdev->dev_state)
 800dfb8:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800dfbc:	2b02      	cmp	r3, #2
 800dfbe:	fa5f f883 	uxtb.w	r8, r3
 800dfc2:	f000 8104 	beq.w	800e1ce <USBD_StdDevReq+0x2a6>
 800dfc6:	f1b8 0f03 	cmp.w	r8, #3
 800dfca:	f000 8115 	beq.w	800e1f8 <USBD_StdDevReq+0x2d0>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800dfce:	2180      	movs	r1, #128	; 0x80
 800dfd0:	f7f4 f868 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800dfd4:	2100      	movs	r1, #0
 800dfd6:	4628      	mov	r0, r5
 800dfd8:	f7f4 f864 	bl	80020a4 <USBD_LL_StallEP>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800dfdc:	7839      	ldrb	r1, [r7, #0]
 800dfde:	4628      	mov	r0, r5
 800dfe0:	f7ff fe1c 	bl	800dc1c <USBD_ClrClassConfig>
      ret = USBD_FAIL;
 800dfe4:	2403      	movs	r4, #3
      break;
 800dfe6:	e7b5      	b.n	800df54 <USBD_StdDevReq+0x2c>
  switch (pdev->dev_state)
 800dfe8:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 800dfec:	3a01      	subs	r2, #1
 800dfee:	2a02      	cmp	r2, #2
 800dff0:	d826      	bhi.n	800e040 <USBD_StdDevReq+0x118>
      if (req->wLength != 0x2U)
 800dff2:	88ca      	ldrh	r2, [r1, #6]
 800dff4:	2a02      	cmp	r2, #2
 800dff6:	d123      	bne.n	800e040 <USBD_StdDevReq+0x118>
      if (pdev->dev_remote_wakeup != 0U)
 800dff8:	f8d0 22a4 	ldr.w	r2, [r0, #676]	; 0x2a4
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800dffc:	2101      	movs	r1, #1
 800dffe:	60c1      	str	r1, [r0, #12]
      if (pdev->dev_remote_wakeup != 0U)
 800e000:	b10a      	cbz	r2, 800e006 <USBD_StdDevReq+0xde>
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800e002:	2203      	movs	r2, #3
 800e004:	60c2      	str	r2, [r0, #12]
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800e006:	2202      	movs	r2, #2
 800e008:	f105 010c 	add.w	r1, r5, #12
 800e00c:	4628      	mov	r0, r5
  USBD_StatusTypeDef ret = USBD_OK;
 800e00e:	461c      	mov	r4, r3
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800e010:	f000 fa72 	bl	800e4f8 <USBD_CtlSendData>
      break;
 800e014:	e79e      	b.n	800df54 <USBD_StdDevReq+0x2c>
  switch (pdev->dev_state)
 800e016:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e01a:	3b01      	subs	r3, #1
 800e01c:	2b02      	cmp	r3, #2
 800e01e:	d80f      	bhi.n	800e040 <USBD_StdDevReq+0x118>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800e020:	884b      	ldrh	r3, [r1, #2]
 800e022:	2b01      	cmp	r3, #1
 800e024:	d196      	bne.n	800df54 <USBD_StdDevReq+0x2c>
        pdev->dev_remote_wakeup = 0U;
 800e026:	2300      	movs	r3, #0
 800e028:	f8c5 32a4 	str.w	r3, [r5, #676]	; 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 800e02c:	4628      	mov	r0, r5
 800e02e:	f000 fa81 	bl	800e534 <USBD_CtlSendStatus>
 800e032:	e78f      	b.n	800df54 <USBD_StdDevReq+0x2c>
          USBD_SetFeature(pdev, req);
 800e034:	884b      	ldrh	r3, [r1, #2]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800e036:	2b01      	cmp	r3, #1
 800e038:	d0f6      	beq.n	800e028 <USBD_StdDevReq+0x100>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800e03a:	2b02      	cmp	r3, #2
 800e03c:	f000 80fe 	beq.w	800e23c <USBD_StdDevReq+0x314>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e040:	2180      	movs	r1, #128	; 0x80
 800e042:	4628      	mov	r0, r5
 800e044:	f7f4 f82e 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e048:	4628      	mov	r0, r5
 800e04a:	2100      	movs	r1, #0
 800e04c:	f7f4 f82a 	bl	80020a4 <USBD_LL_StallEP>
}
 800e050:	4620      	mov	r0, r4
 800e052:	b002      	add	sp, #8
 800e054:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800e058:	888b      	ldrh	r3, [r1, #4]
 800e05a:	2b00      	cmp	r3, #0
 800e05c:	d1f0      	bne.n	800e040 <USBD_StdDevReq+0x118>
 800e05e:	88cb      	ldrh	r3, [r1, #6]
 800e060:	2b00      	cmp	r3, #0
 800e062:	d1ed      	bne.n	800e040 <USBD_StdDevReq+0x118>
 800e064:	884e      	ldrh	r6, [r1, #2]
 800e066:	2e7f      	cmp	r6, #127	; 0x7f
 800e068:	d8ea      	bhi.n	800e040 <USBD_StdDevReq+0x118>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800e06a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e06e:	2b03      	cmp	r3, #3
 800e070:	d0e6      	beq.n	800e040 <USBD_StdDevReq+0x118>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800e072:	b2f1      	uxtb	r1, r6
      pdev->dev_address = dev_addr;
 800e074:	f880 129e 	strb.w	r1, [r0, #670]	; 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800e078:	f7f4 f844 	bl	8002104 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800e07c:	4628      	mov	r0, r5
 800e07e:	f000 fa59 	bl	800e534 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800e082:	2e00      	cmp	r6, #0
 800e084:	f000 8106 	beq.w	800e294 <USBD_StdDevReq+0x36c>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800e088:	2302      	movs	r3, #2
 800e08a:	f885 329c 	strb.w	r3, [r5, #668]	; 0x29c
 800e08e:	e761      	b.n	800df54 <USBD_StdDevReq+0x2c>
          USBD_GetDescriptor(pdev, req);
 800e090:	884a      	ldrh	r2, [r1, #2]
  uint16_t len = 0U;
 800e092:	0a13      	lsrs	r3, r2, #8
 800e094:	2100      	movs	r1, #0
 800e096:	3b01      	subs	r3, #1
 800e098:	f8ad 1006 	strh.w	r1, [sp, #6]
  switch (req->wValue >> 8)
 800e09c:	2b06      	cmp	r3, #6
 800e09e:	d8cf      	bhi.n	800e040 <USBD_StdDevReq+0x118>
 800e0a0:	a101      	add	r1, pc, #4	; (adr r1, 800e0a8 <USBD_StdDevReq+0x180>)
 800e0a2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800e0a6:	bf00      	nop
 800e0a8:	0800e15f 	.word	0x0800e15f
 800e0ac:	0800e145 	.word	0x0800e145
 800e0b0:	0800e135 	.word	0x0800e135
 800e0b4:	0800e041 	.word	0x0800e041
 800e0b8:	0800e041 	.word	0x0800e041
 800e0bc:	0800e121 	.word	0x0800e121
 800e0c0:	0800e0e9 	.word	0x0800e0e9
  if (req->wLength != 1U)
 800e0c4:	88ca      	ldrh	r2, [r1, #6]
 800e0c6:	2a01      	cmp	r2, #1
 800e0c8:	d1ba      	bne.n	800e040 <USBD_StdDevReq+0x118>
    switch (pdev->dev_state)
 800e0ca:	f890 129c 	ldrb.w	r1, [r0, #668]	; 0x29c
 800e0ce:	2902      	cmp	r1, #2
 800e0d0:	b2cb      	uxtb	r3, r1
 800e0d2:	d875      	bhi.n	800e1c0 <USBD_StdDevReq+0x298>
 800e0d4:	2b00      	cmp	r3, #0
 800e0d6:	f43f af34 	beq.w	800df42 <USBD_StdDevReq+0x1a>
        pdev->dev_default_config = 0U;
 800e0da:	4601      	mov	r1, r0
 800e0dc:	2300      	movs	r3, #0
 800e0de:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800e0e2:	f000 fa09 	bl	800e4f8 <USBD_CtlSendData>
        break;
 800e0e6:	e735      	b.n	800df54 <USBD_StdDevReq+0x2c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800e0e8:	7c03      	ldrb	r3, [r0, #16]
 800e0ea:	2b00      	cmp	r3, #0
 800e0ec:	d1a8      	bne.n	800e040 <USBD_StdDevReq+0x118>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800e0ee:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800e0f2:	f10d 0006 	add.w	r0, sp, #6
 800e0f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e0f8:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800e0fa:	2307      	movs	r3, #7
 800e0fc:	7043      	strb	r3, [r0, #1]
  if (req->wLength != 0U)
 800e0fe:	88f2      	ldrh	r2, [r6, #6]
 800e100:	2a00      	cmp	r2, #0
 800e102:	d093      	beq.n	800e02c <USBD_StdDevReq+0x104>
    if (len != 0U)
 800e104:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e108:	2b00      	cmp	r3, #0
 800e10a:	d099      	beq.n	800e040 <USBD_StdDevReq+0x118>
      len = MIN(len, req->wLength);
 800e10c:	429a      	cmp	r2, r3
 800e10e:	bf28      	it	cs
 800e110:	461a      	movcs	r2, r3
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800e112:	4601      	mov	r1, r0
 800e114:	4628      	mov	r0, r5
      len = MIN(len, req->wLength);
 800e116:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800e11a:	f000 f9ed 	bl	800e4f8 <USBD_CtlSendData>
 800e11e:	e719      	b.n	800df54 <USBD_StdDevReq+0x2c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800e120:	7c03      	ldrb	r3, [r0, #16]
 800e122:	2b00      	cmp	r3, #0
 800e124:	d18c      	bne.n	800e040 <USBD_StdDevReq+0x118>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800e126:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800e12a:	f10d 0006 	add.w	r0, sp, #6
 800e12e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e130:	4798      	blx	r3
  if (err != 0U)
 800e132:	e7e4      	b.n	800e0fe <USBD_StdDevReq+0x1d6>
      switch ((uint8_t)(req->wValue))
 800e134:	b2d2      	uxtb	r2, r2
 800e136:	2a05      	cmp	r2, #5
 800e138:	d882      	bhi.n	800e040 <USBD_StdDevReq+0x118>
 800e13a:	e8df f002 	tbb	[pc, r2]
 800e13e:	353b      	.short	0x353b
 800e140:	1823292f 	.word	0x1823292f
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800e144:	7c03      	ldrb	r3, [r0, #16]
 800e146:	2b00      	cmp	r3, #0
 800e148:	f040 8094 	bne.w	800e274 <USBD_StdDevReq+0x34c>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800e14c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800e150:	f10d 0006 	add.w	r0, sp, #6
 800e154:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e156:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800e158:	2302      	movs	r3, #2
 800e15a:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800e15c:	e7cf      	b.n	800e0fe <USBD_StdDevReq+0x1d6>
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800e15e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e162:	7c00      	ldrb	r0, [r0, #16]
 800e164:	681b      	ldr	r3, [r3, #0]
 800e166:	f10d 0106 	add.w	r1, sp, #6
 800e16a:	4798      	blx	r3
  if (err != 0U)
 800e16c:	e7c7      	b.n	800e0fe <USBD_StdDevReq+0x1d6>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800e16e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e172:	699b      	ldr	r3, [r3, #24]
 800e174:	2b00      	cmp	r3, #0
 800e176:	f43f af63 	beq.w	800e040 <USBD_StdDevReq+0x118>
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800e17a:	7c28      	ldrb	r0, [r5, #16]
 800e17c:	f10d 0106 	add.w	r1, sp, #6
 800e180:	4798      	blx	r3
  if (err != 0U)
 800e182:	e7bc      	b.n	800e0fe <USBD_StdDevReq+0x1d6>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800e184:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e188:	695b      	ldr	r3, [r3, #20]
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	d1f5      	bne.n	800e17a <USBD_StdDevReq+0x252>
 800e18e:	e757      	b.n	800e040 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800e190:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e194:	691b      	ldr	r3, [r3, #16]
 800e196:	2b00      	cmp	r3, #0
 800e198:	d1ef      	bne.n	800e17a <USBD_StdDevReq+0x252>
 800e19a:	e751      	b.n	800e040 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800e19c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e1a0:	68db      	ldr	r3, [r3, #12]
 800e1a2:	2b00      	cmp	r3, #0
 800e1a4:	d1e9      	bne.n	800e17a <USBD_StdDevReq+0x252>
 800e1a6:	e74b      	b.n	800e040 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800e1a8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e1ac:	689b      	ldr	r3, [r3, #8]
 800e1ae:	2b00      	cmp	r3, #0
 800e1b0:	d1e3      	bne.n	800e17a <USBD_StdDevReq+0x252>
 800e1b2:	e745      	b.n	800e040 <USBD_StdDevReq+0x118>
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800e1b4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800e1b8:	685b      	ldr	r3, [r3, #4]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d1dd      	bne.n	800e17a <USBD_StdDevReq+0x252>
 800e1be:	e73f      	b.n	800e040 <USBD_StdDevReq+0x118>
    switch (pdev->dev_state)
 800e1c0:	2b03      	cmp	r3, #3
 800e1c2:	f47f aebe 	bne.w	800df42 <USBD_StdDevReq+0x1a>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800e1c6:	1d01      	adds	r1, r0, #4
 800e1c8:	f000 f996 	bl	800e4f8 <USBD_CtlSendData>
        break;
 800e1cc:	e6c2      	b.n	800df54 <USBD_StdDevReq+0x2c>
      if (cfgidx != 0U)
 800e1ce:	2e00      	cmp	r6, #0
 800e1d0:	f43f af2c 	beq.w	800e02c <USBD_StdDevReq+0x104>
        pdev->dev_config = cfgidx;
 800e1d4:	2101      	movs	r1, #1
 800e1d6:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800e1d8:	f7ff fd18 	bl	800dc0c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800e1dc:	4604      	mov	r4, r0
 800e1de:	2800      	cmp	r0, #0
 800e1e0:	d051      	beq.n	800e286 <USBD_StdDevReq+0x35e>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e1e2:	2180      	movs	r1, #128	; 0x80
 800e1e4:	4628      	mov	r0, r5
 800e1e6:	f7f3 ff5d 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e1ea:	2100      	movs	r1, #0
 800e1ec:	4628      	mov	r0, r5
 800e1ee:	f7f3 ff59 	bl	80020a4 <USBD_LL_StallEP>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800e1f2:	f885 829c 	strb.w	r8, [r5, #668]	; 0x29c
 800e1f6:	e6ad      	b.n	800df54 <USBD_StdDevReq+0x2c>
      if (cfgidx == 0U)
 800e1f8:	b386      	cbz	r6, 800e25c <USBD_StdDevReq+0x334>
      else if (cfgidx != pdev->dev_config)
 800e1fa:	6841      	ldr	r1, [r0, #4]
 800e1fc:	2901      	cmp	r1, #1
 800e1fe:	f43f af15 	beq.w	800e02c <USBD_StdDevReq+0x104>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800e202:	b2c9      	uxtb	r1, r1
 800e204:	f7ff fd0a 	bl	800dc1c <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800e208:	7839      	ldrb	r1, [r7, #0]
 800e20a:	6069      	str	r1, [r5, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800e20c:	4628      	mov	r0, r5
 800e20e:	f7ff fcfd 	bl	800dc0c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800e212:	4606      	mov	r6, r0
 800e214:	2800      	cmp	r0, #0
 800e216:	f43f af09 	beq.w	800e02c <USBD_StdDevReq+0x104>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e21a:	2180      	movs	r1, #128	; 0x80
 800e21c:	4628      	mov	r0, r5
 800e21e:	f7f3 ff41 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e222:	2100      	movs	r1, #0
 800e224:	4628      	mov	r0, r5
 800e226:	f7f3 ff3d 	bl	80020a4 <USBD_LL_StallEP>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800e22a:	7929      	ldrb	r1, [r5, #4]
 800e22c:	4628      	mov	r0, r5
 800e22e:	f7ff fcf5 	bl	800dc1c <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800e232:	2302      	movs	r3, #2
 800e234:	4634      	mov	r4, r6
 800e236:	f885 329c 	strb.w	r3, [r5, #668]	; 0x29c
 800e23a:	e68b      	b.n	800df54 <USBD_StdDevReq+0x2c>
    pdev->dev_test_mode = req->wIndex >> 8;
 800e23c:	888b      	ldrh	r3, [r1, #4]
 800e23e:	0a1b      	lsrs	r3, r3, #8
 800e240:	f880 32a0 	strb.w	r3, [r0, #672]	; 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800e244:	f000 f976 	bl	800e534 <USBD_CtlSendStatus>
 800e248:	e684      	b.n	800df54 <USBD_StdDevReq+0x2c>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e24a:	2180      	movs	r1, #128	; 0x80
 800e24c:	f7f3 ff2a 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e250:	4628      	mov	r0, r5
 800e252:	2100      	movs	r1, #0
 800e254:	f7f3 ff26 	bl	80020a4 <USBD_LL_StallEP>
    return USBD_FAIL;
 800e258:	2403      	movs	r4, #3
 800e25a:	e67b      	b.n	800df54 <USBD_StdDevReq+0x2c>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800e25c:	2302      	movs	r3, #2
        pdev->dev_config = cfgidx;
 800e25e:	6046      	str	r6, [r0, #4]
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800e260:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800e264:	4631      	mov	r1, r6
 800e266:	f7ff fcd9 	bl	800dc1c <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800e26a:	4628      	mov	r0, r5
  USBD_StatusTypeDef ret = USBD_OK;
 800e26c:	4634      	mov	r4, r6
        (void)USBD_CtlSendStatus(pdev);
 800e26e:	f000 f961 	bl	800e534 <USBD_CtlSendStatus>
 800e272:	e66f      	b.n	800df54 <USBD_StdDevReq+0x2c>
          pbuf   = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800e274:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800e278:	f10d 0006 	add.w	r0, sp, #6
 800e27c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e27e:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800e280:	2302      	movs	r3, #2
 800e282:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800e284:	e73b      	b.n	800e0fe <USBD_StdDevReq+0x1d6>
          (void)USBD_CtlSendStatus(pdev);
 800e286:	4628      	mov	r0, r5
 800e288:	f000 f954 	bl	800e534 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800e28c:	2303      	movs	r3, #3
 800e28e:	f885 329c 	strb.w	r3, [r5, #668]	; 0x29c
 800e292:	e65f      	b.n	800df54 <USBD_StdDevReq+0x2c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 800e294:	2301      	movs	r3, #1
 800e296:	f885 329c 	strb.w	r3, [r5, #668]	; 0x29c
 800e29a:	e65b      	b.n	800df54 <USBD_StdDevReq+0x2c>
 800e29c:	20002c78 	.word	0x20002c78

0800e2a0 <USBD_StdItfReq>:
{
 800e2a0:	b538      	push	{r3, r4, r5, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800e2a2:	780b      	ldrb	r3, [r1, #0]
 800e2a4:	f003 0260 	and.w	r2, r3, #96	; 0x60
 800e2a8:	2a40      	cmp	r2, #64	; 0x40
{
 800e2aa:	460d      	mov	r5, r1
 800e2ac:	4604      	mov	r4, r0
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800e2ae:	d00b      	beq.n	800e2c8 <USBD_StdItfReq+0x28>
 800e2b0:	065b      	lsls	r3, r3, #25
 800e2b2:	d509      	bpl.n	800e2c8 <USBD_StdItfReq+0x28>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e2b4:	2180      	movs	r1, #128	; 0x80
 800e2b6:	f7f3 fef5 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e2ba:	4620      	mov	r0, r4
 800e2bc:	2100      	movs	r1, #0
 800e2be:	f7f3 fef1 	bl	80020a4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 800e2c2:	2500      	movs	r5, #0
}
 800e2c4:	4628      	mov	r0, r5
 800e2c6:	bd38      	pop	{r3, r4, r5, pc}
      switch (pdev->dev_state)
 800e2c8:	f894 329c 	ldrb.w	r3, [r4, #668]	; 0x29c
 800e2cc:	3b01      	subs	r3, #1
 800e2ce:	2b02      	cmp	r3, #2
 800e2d0:	d802      	bhi.n	800e2d8 <USBD_StdItfReq+0x38>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800e2d2:	7929      	ldrb	r1, [r5, #4]
 800e2d4:	2901      	cmp	r1, #1
 800e2d6:	d902      	bls.n	800e2de <USBD_StdItfReq+0x3e>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e2d8:	2180      	movs	r1, #128	; 0x80
 800e2da:	4620      	mov	r0, r4
 800e2dc:	e7eb      	b.n	800e2b6 <USBD_StdItfReq+0x16>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800e2de:	4620      	mov	r0, r4
 800e2e0:	f7ff fe04 	bl	800deec <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800e2e4:	b990      	cbnz	r0, 800e30c <USBD_StdItfReq+0x6c>
              if (pdev->pClass[idx]->Setup != NULL)
 800e2e6:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 800e2ea:	689b      	ldr	r3, [r3, #8]
 800e2ec:	b173      	cbz	r3, 800e30c <USBD_StdItfReq+0x6c>
                pdev->classId = idx;
 800e2ee:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800e2f2:	4629      	mov	r1, r5
 800e2f4:	4620      	mov	r0, r4
 800e2f6:	4798      	blx	r3
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800e2f8:	88eb      	ldrh	r3, [r5, #6]
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800e2fa:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800e2fc:	2b00      	cmp	r3, #0
 800e2fe:	d1e1      	bne.n	800e2c4 <USBD_StdItfReq+0x24>
 800e300:	2800      	cmp	r0, #0
 800e302:	d1df      	bne.n	800e2c4 <USBD_StdItfReq+0x24>
              (void)USBD_CtlSendStatus(pdev);
 800e304:	4620      	mov	r0, r4
 800e306:	f000 f915 	bl	800e534 <USBD_CtlSendStatus>
 800e30a:	e7db      	b.n	800e2c4 <USBD_StdItfReq+0x24>
              ret = USBD_FAIL;
 800e30c:	2503      	movs	r5, #3
}
 800e30e:	4628      	mov	r0, r5
 800e310:	bd38      	pop	{r3, r4, r5, pc}
 800e312:	bf00      	nop

0800e314 <USBD_StdEPReq>:
{
 800e314:	b530      	push	{r4, r5, lr}
 800e316:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800e318:	888a      	ldrh	r2, [r1, #4]
 800e31a:	f003 0360 	and.w	r3, r3, #96	; 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800e31e:	2b20      	cmp	r3, #32
{
 800e320:	460c      	mov	r4, r1
 800e322:	b083      	sub	sp, #12
  ep_addr = LOBYTE(req->wIndex);
 800e324:	b2d1      	uxtb	r1, r2
{
 800e326:	4605      	mov	r5, r0
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800e328:	d01e      	beq.n	800e368 <USBD_StdEPReq+0x54>
 800e32a:	2b40      	cmp	r3, #64	; 0x40
 800e32c:	d01c      	beq.n	800e368 <USBD_StdEPReq+0x54>
 800e32e:	b36b      	cbz	r3, 800e38c <USBD_StdEPReq+0x78>
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e330:	2180      	movs	r1, #128	; 0x80
 800e332:	4628      	mov	r0, r5
 800e334:	f7f3 feb6 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e338:	4628      	mov	r0, r5
 800e33a:	2100      	movs	r1, #0
 800e33c:	f7f3 feb2 	bl	80020a4 <USBD_LL_StallEP>
}
 800e340:	2000      	movs	r0, #0
 800e342:	b003      	add	sp, #12
 800e344:	bd30      	pop	{r4, r5, pc}
          switch (pdev->dev_state)
 800e346:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e34a:	2b02      	cmp	r3, #2
 800e34c:	b2da      	uxtb	r2, r3
 800e34e:	d05d      	beq.n	800e40c <USBD_StdEPReq+0xf8>
 800e350:	2a03      	cmp	r2, #3
 800e352:	d1ed      	bne.n	800e330 <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800e354:	8863      	ldrh	r3, [r4, #2]
 800e356:	2b00      	cmp	r3, #0
 800e358:	d1f2      	bne.n	800e340 <USBD_StdEPReq+0x2c>
                if ((ep_addr & 0x7FU) != 0x00U)
 800e35a:	064b      	lsls	r3, r1, #25
 800e35c:	d17a      	bne.n	800e454 <USBD_StdEPReq+0x140>
                (void)USBD_CtlSendStatus(pdev);
 800e35e:	4628      	mov	r0, r5
 800e360:	9101      	str	r1, [sp, #4]
 800e362:	f000 f8e7 	bl	800e534 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800e366:	9901      	ldr	r1, [sp, #4]
 800e368:	4628      	mov	r0, r5
 800e36a:	f7ff fdc1 	bl	800def0 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800e36e:	2800      	cmp	r0, #0
 800e370:	d1e6      	bne.n	800e340 <USBD_StdEPReq+0x2c>
                  if (pdev->pClass[idx]->Setup != NULL)
 800e372:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
                  pdev->classId = idx;
 800e376:	f8c5 02d4 	str.w	r0, [r5, #724]	; 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 800e37a:	689b      	ldr	r3, [r3, #8]
 800e37c:	2b00      	cmp	r3, #0
 800e37e:	d0df      	beq.n	800e340 <USBD_StdEPReq+0x2c>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800e380:	4621      	mov	r1, r4
 800e382:	4628      	mov	r0, r5
}
 800e384:	b003      	add	sp, #12
 800e386:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800e38a:	4718      	bx	r3
      switch (req->bRequest)
 800e38c:	7863      	ldrb	r3, [r4, #1]
 800e38e:	2b01      	cmp	r3, #1
 800e390:	d0d9      	beq.n	800e346 <USBD_StdEPReq+0x32>
 800e392:	2b03      	cmp	r3, #3
 800e394:	d029      	beq.n	800e3ea <USBD_StdEPReq+0xd6>
 800e396:	2b00      	cmp	r3, #0
 800e398:	d1ca      	bne.n	800e330 <USBD_StdEPReq+0x1c>
          switch (pdev->dev_state)
 800e39a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e39e:	2b02      	cmp	r3, #2
 800e3a0:	b2d8      	uxtb	r0, r3
 800e3a2:	d03c      	beq.n	800e41e <USBD_StdEPReq+0x10a>
 800e3a4:	2803      	cmp	r0, #3
 800e3a6:	d1c3      	bne.n	800e330 <USBD_StdEPReq+0x1c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800e3a8:	f001 030f 	and.w	r3, r1, #15
 800e3ac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
              if ((ep_addr & 0x80U) == 0x80U)
 800e3b0:	0612      	lsls	r2, r2, #24
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800e3b2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
              if ((ep_addr & 0x80U) == 0x80U)
 800e3b6:	d441      	bmi.n	800e43c <USBD_StdEPReq+0x128>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800e3b8:	f8b3 3164 	ldrh.w	r3, [r3, #356]	; 0x164
 800e3bc:	2b00      	cmp	r3, #0
 800e3be:	d0b7      	beq.n	800e330 <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800e3c0:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800e3c4:	2414      	movs	r4, #20
 800e3c6:	fb04 5403 	mla	r4, r4, r3, r5
 800e3ca:	f504 74aa 	add.w	r4, r4, #340	; 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800e3ce:	b12b      	cbz	r3, 800e3dc <USBD_StdEPReq+0xc8>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800e3d0:	4628      	mov	r0, r5
 800e3d2:	f7f3 fe83 	bl	80020dc <USBD_LL_IsStallEP>
 800e3d6:	2800      	cmp	r0, #0
 800e3d8:	d041      	beq.n	800e45e <USBD_StdEPReq+0x14a>
                pep->status = 0x0001U;
 800e3da:	2301      	movs	r3, #1
 800e3dc:	6023      	str	r3, [r4, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800e3de:	4621      	mov	r1, r4
 800e3e0:	4628      	mov	r0, r5
 800e3e2:	2202      	movs	r2, #2
 800e3e4:	f000 f888 	bl	800e4f8 <USBD_CtlSendData>
              break;
 800e3e8:	e7aa      	b.n	800e340 <USBD_StdEPReq+0x2c>
          switch (pdev->dev_state)
 800e3ea:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e3ee:	2b02      	cmp	r3, #2
 800e3f0:	b2da      	uxtb	r2, r3
 800e3f2:	d00b      	beq.n	800e40c <USBD_StdEPReq+0xf8>
 800e3f4:	2a03      	cmp	r2, #3
 800e3f6:	d19b      	bne.n	800e330 <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800e3f8:	8863      	ldrh	r3, [r4, #2]
 800e3fa:	b91b      	cbnz	r3, 800e404 <USBD_StdEPReq+0xf0>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800e3fc:	0648      	lsls	r0, r1, #25
 800e3fe:	d001      	beq.n	800e404 <USBD_StdEPReq+0xf0>
 800e400:	88e3      	ldrh	r3, [r4, #6]
 800e402:	b373      	cbz	r3, 800e462 <USBD_StdEPReq+0x14e>
              (void)USBD_CtlSendStatus(pdev);
 800e404:	4628      	mov	r0, r5
 800e406:	f000 f895 	bl	800e534 <USBD_CtlSendStatus>
              break;
 800e40a:	e799      	b.n	800e340 <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800e40c:	064a      	lsls	r2, r1, #25
 800e40e:	d08f      	beq.n	800e330 <USBD_StdEPReq+0x1c>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800e410:	f7f3 fe48 	bl	80020a4 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800e414:	4628      	mov	r0, r5
 800e416:	2180      	movs	r1, #128	; 0x80
 800e418:	f7f3 fe44 	bl	80020a4 <USBD_LL_StallEP>
 800e41c:	e790      	b.n	800e340 <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800e41e:	0648      	lsls	r0, r1, #25
 800e420:	d186      	bne.n	800e330 <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800e422:	0611      	lsls	r1, r2, #24
 800e424:	bf4c      	ite	mi
 800e426:	f105 0114 	addmi.w	r1, r5, #20
 800e42a:	f505 71aa 	addpl.w	r1, r5, #340	; 0x154
              pep->status = 0x0000U;
 800e42e:	2300      	movs	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800e430:	4628      	mov	r0, r5
              pep->status = 0x0000U;
 800e432:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800e434:	2202      	movs	r2, #2
 800e436:	f000 f85f 	bl	800e4f8 <USBD_CtlSendData>
              break;
 800e43a:	e781      	b.n	800e340 <USBD_StdEPReq+0x2c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800e43c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800e43e:	2b00      	cmp	r3, #0
 800e440:	f43f af76 	beq.w	800e330 <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800e444:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800e448:	1c5c      	adds	r4, r3, #1
 800e44a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800e44e:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800e452:	e7bc      	b.n	800e3ce <USBD_StdEPReq+0xba>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800e454:	9101      	str	r1, [sp, #4]
 800e456:	f7f3 fe33 	bl	80020c0 <USBD_LL_ClearStallEP>
 800e45a:	9901      	ldr	r1, [sp, #4]
 800e45c:	e77f      	b.n	800e35e <USBD_StdEPReq+0x4a>
                pep->status = 0x0000U;
 800e45e:	6020      	str	r0, [r4, #0]
 800e460:	e7bd      	b.n	800e3de <USBD_StdEPReq+0xca>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800e462:	4628      	mov	r0, r5
 800e464:	f7f3 fe1e 	bl	80020a4 <USBD_LL_StallEP>
 800e468:	e7cc      	b.n	800e404 <USBD_StdEPReq+0xf0>
 800e46a:	bf00      	nop

0800e46c <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 800e46c:	780b      	ldrb	r3, [r1, #0]
 800e46e:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800e470:	784b      	ldrb	r3, [r1, #1]
 800e472:	7043      	strb	r3, [r0, #1]

  _Byte1 = *(uint8_t *)_pbuff;
  _pbuff++;
  _Byte2 = *(uint8_t *)_pbuff;

  _SwapVal = (_Byte2 << 8) | _Byte1;
 800e474:	78ca      	ldrb	r2, [r1, #3]
 800e476:	788b      	ldrb	r3, [r1, #2]
 800e478:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wValue = SWAPBYTE(pbuff);
 800e47c:	8043      	strh	r3, [r0, #2]
 800e47e:	794a      	ldrb	r2, [r1, #5]
 800e480:	790b      	ldrb	r3, [r1, #4]
 800e482:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wIndex = SWAPBYTE(pbuff);
 800e486:	8083      	strh	r3, [r0, #4]
 800e488:	79ca      	ldrb	r2, [r1, #7]
 800e48a:	798b      	ldrb	r3, [r1, #6]
 800e48c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wLength = SWAPBYTE(pbuff);
 800e490:	80c3      	strh	r3, [r0, #6]
}
 800e492:	4770      	bx	lr

0800e494 <USBD_CtlError>:
{
 800e494:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e496:	2180      	movs	r1, #128	; 0x80
{
 800e498:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800e49a:	f7f3 fe03 	bl	80020a4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800e49e:	4620      	mov	r0, r4
 800e4a0:	2100      	movs	r1, #0
}
 800e4a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800e4a6:	f7f3 bdfd 	b.w	80020a4 <USBD_LL_StallEP>
 800e4aa:	bf00      	nop

0800e4ac <USBD_GetString>:
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800e4ac:	b308      	cbz	r0, 800e4f2 <USBD_GetString+0x46>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800e4ae:	7803      	ldrb	r3, [r0, #0]
{
 800e4b0:	b470      	push	{r4, r5, r6}
  while (*pbuff != (uint8_t)'\0')
 800e4b2:	b1fb      	cbz	r3, 800e4f4 <USBD_GetString+0x48>
 800e4b4:	4604      	mov	r4, r0
 800e4b6:	f1c0 0601 	rsb	r6, r0, #1
  {
    len++;
 800e4ba:	19a3      	adds	r3, r4, r6
  while (*pbuff != (uint8_t)'\0')
 800e4bc:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800e4c0:	b2db      	uxtb	r3, r3
 800e4c2:	2d00      	cmp	r5, #0
 800e4c4:	d1f9      	bne.n	800e4ba <USBD_GetString+0xe>
 800e4c6:	3301      	adds	r3, #1
 800e4c8:	005b      	lsls	r3, r3, #1
  unicode[idx] = USB_DESC_TYPE_STRING;
 800e4ca:	2403      	movs	r4, #3
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 800e4cc:	8013      	strh	r3, [r2, #0]
  unicode[idx] = *(uint8_t *)len;
 800e4ce:	700b      	strb	r3, [r1, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800e4d0:	704c      	strb	r4, [r1, #1]
  while (*pdesc != (uint8_t)'\0')
 800e4d2:	7804      	ldrb	r4, [r0, #0]
 800e4d4:	b15c      	cbz	r4, 800e4ee <USBD_GetString+0x42>
  idx++;
 800e4d6:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 800e4d8:	2500      	movs	r5, #0
    idx++;
 800e4da:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 800e4dc:	b2d2      	uxtb	r2, r2
    unicode[idx] = *pdesc;
 800e4de:	54cc      	strb	r4, [r1, r3]
    unicode[idx] = 0U;
 800e4e0:	548d      	strb	r5, [r1, r2]
  while (*pdesc != (uint8_t)'\0')
 800e4e2:	f810 4f01 	ldrb.w	r4, [r0, #1]!
    idx++;
 800e4e6:	3302      	adds	r3, #2
 800e4e8:	b2db      	uxtb	r3, r3
  while (*pdesc != (uint8_t)'\0')
 800e4ea:	2c00      	cmp	r4, #0
 800e4ec:	d1f5      	bne.n	800e4da <USBD_GetString+0x2e>
}
 800e4ee:	bc70      	pop	{r4, r5, r6}
 800e4f0:	4770      	bx	lr
 800e4f2:	4770      	bx	lr
  while (*pbuff != (uint8_t)'\0')
 800e4f4:	2302      	movs	r3, #2
 800e4f6:	e7e8      	b.n	800e4ca <USBD_GetString+0x1e>

0800e4f8 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800e4f8:	b538      	push	{r3, r4, r5, lr}
 800e4fa:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800e4fc:	2502      	movs	r5, #2
{
 800e4fe:	460a      	mov	r2, r1
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800e500:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800e504:	f8c0 5294 	str.w	r5, [r0, #660]	; 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800e508:	2100      	movs	r1, #0
 800e50a:	f7f3 fe09 	bl	8002120 <USBD_LL_Transmit>

  return USBD_OK;
}
 800e50e:	2000      	movs	r0, #0
 800e510:	bd38      	pop	{r3, r4, r5, pc}
 800e512:	bf00      	nop

0800e514 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800e514:	b508      	push	{r3, lr}
 800e516:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800e518:	460a      	mov	r2, r1
 800e51a:	2100      	movs	r1, #0
 800e51c:	f7f3 fe00 	bl	8002120 <USBD_LL_Transmit>

  return USBD_OK;
}
 800e520:	2000      	movs	r0, #0
 800e522:	bd08      	pop	{r3, pc}

0800e524 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800e524:	b508      	push	{r3, lr}
 800e526:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800e528:	460a      	mov	r2, r1
 800e52a:	2100      	movs	r1, #0
 800e52c:	f7f3 fe06 	bl	800213c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800e530:	2000      	movs	r0, #0
 800e532:	bd08      	pop	{r3, pc}

0800e534 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800e534:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800e536:	2104      	movs	r1, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800e538:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800e53a:	f8c0 1294 	str.w	r1, [r0, #660]	; 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800e53e:	461a      	mov	r2, r3
 800e540:	4619      	mov	r1, r3
 800e542:	f7f3 fded 	bl	8002120 <USBD_LL_Transmit>

  return USBD_OK;
}
 800e546:	2000      	movs	r0, #0
 800e548:	bd08      	pop	{r3, pc}
 800e54a:	bf00      	nop

0800e54c <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800e54c:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800e54e:	2105      	movs	r1, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800e550:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800e552:	f8c0 1294 	str.w	r1, [r0, #660]	; 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800e556:	461a      	mov	r2, r3
 800e558:	4619      	mov	r1, r3
 800e55a:	f7f3 fdef 	bl	800213c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800e55e:	2000      	movs	r0, #0
 800e560:	bd08      	pop	{r3, pc}
 800e562:	bf00      	nop

0800e564 <USBD_MSC_GetDeviceQualifierDescriptor>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
uint8_t *USBD_MSC_GetDeviceQualifierDescriptor(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_MSC_DeviceQualifierDesc);
 800e564:	230a      	movs	r3, #10
 800e566:	8003      	strh	r3, [r0, #0]

  return USBD_MSC_DeviceQualifierDesc;
}
 800e568:	4800      	ldr	r0, [pc, #0]	; (800e56c <USBD_MSC_GetDeviceQualifierDescriptor+0x8>)
 800e56a:	4770      	bx	lr
 800e56c:	20000124 	.word	0x20000124

0800e570 <USBD_MSC_Init>:
{
 800e570:	b570      	push	{r4, r5, r6, lr}
 800e572:	4604      	mov	r4, r0
  hmsc = (USBD_MSC_BOT_HandleTypeDef *)USBD_malloc(sizeof(USBD_MSC_BOT_HandleTypeDef));
 800e574:	f44f 701d 	mov.w	r0, #628	; 0x274
 800e578:	f7f3 fdf2 	bl	8002160 <USBD_static_malloc>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800e57c:	f8d4 22d4 	ldr.w	r2, [r4, #724]	; 0x2d4
  if (hmsc == NULL)
 800e580:	4603      	mov	r3, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800e582:	32b0      	adds	r2, #176	; 0xb0
  if (hmsc == NULL)
 800e584:	2800      	cmp	r0, #0
 800e586:	d03e      	beq.n	800e606 <USBD_MSC_Init+0x96>
  pdev->pClassDataCmsit[pdev->classId] = (void *)hmsc;
 800e588:	f844 0022 	str.w	r0, [r4, r2, lsl #2]
    (void)USBD_LL_OpenEP(pdev, MSCOutEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e58c:	4d20      	ldr	r5, [pc, #128]	; (800e610 <USBD_MSC_Init+0xa0>)
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800e58e:	7c22      	ldrb	r2, [r4, #16]
    (void)USBD_LL_OpenEP(pdev, MSCInEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e590:	4e20      	ldr	r6, [pc, #128]	; (800e614 <USBD_MSC_Init+0xa4>)
    (void)USBD_LL_OpenEP(pdev, MSCOutEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e592:	7829      	ldrb	r1, [r5, #0]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800e594:	f8c4 02bc 	str.w	r0, [r4, #700]	; 0x2bc
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800e598:	b30a      	cbz	r2, 800e5de <USBD_MSC_Init+0x6e>
    (void)USBD_LL_OpenEP(pdev, MSCOutEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_FS_PACKET);
 800e59a:	2340      	movs	r3, #64	; 0x40
 800e59c:	2202      	movs	r2, #2
 800e59e:	4620      	mov	r0, r4
 800e5a0:	f7f3 fd54 	bl	800204c <USBD_LL_OpenEP>
    pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 1U;
 800e5a4:	782b      	ldrb	r3, [r5, #0]
    (void)USBD_LL_OpenEP(pdev, MSCInEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_FS_PACKET);
 800e5a6:	7831      	ldrb	r1, [r6, #0]
    pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 1U;
 800e5a8:	f003 030f 	and.w	r3, r3, #15
 800e5ac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e5b0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e5b4:	2501      	movs	r5, #1
 800e5b6:	f8a3 5164 	strh.w	r5, [r3, #356]	; 0x164
    (void)USBD_LL_OpenEP(pdev, MSCInEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_FS_PACKET);
 800e5ba:	2340      	movs	r3, #64	; 0x40
 800e5bc:	2202      	movs	r2, #2
 800e5be:	4620      	mov	r0, r4
 800e5c0:	f7f3 fd44 	bl	800204c <USBD_LL_OpenEP>
    pdev->ep_in[MSCInEpAdd & 0xFU].is_used = 1U;
 800e5c4:	7833      	ldrb	r3, [r6, #0]
 800e5c6:	f003 030f 	and.w	r3, r3, #15
 800e5ca:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e5ce:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  MSC_BOT_Init(pdev);
 800e5d2:	4620      	mov	r0, r4
    pdev->ep_in[MSCInEpAdd & 0xFU].is_used = 1U;
 800e5d4:	849d      	strh	r5, [r3, #36]	; 0x24
  MSC_BOT_Init(pdev);
 800e5d6:	f000 f971 	bl	800e8bc <MSC_BOT_Init>
  return (uint8_t)USBD_OK;
 800e5da:	2000      	movs	r0, #0
}
 800e5dc:	bd70      	pop	{r4, r5, r6, pc}
    (void)USBD_LL_OpenEP(pdev, MSCOutEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e5de:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e5e2:	2202      	movs	r2, #2
 800e5e4:	4620      	mov	r0, r4
 800e5e6:	f7f3 fd31 	bl	800204c <USBD_LL_OpenEP>
    pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 1U;
 800e5ea:	782b      	ldrb	r3, [r5, #0]
    (void)USBD_LL_OpenEP(pdev, MSCInEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e5ec:	7831      	ldrb	r1, [r6, #0]
    pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 1U;
 800e5ee:	f003 030f 	and.w	r3, r3, #15
 800e5f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e5f6:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e5fa:	2501      	movs	r5, #1
 800e5fc:	f8a3 5164 	strh.w	r5, [r3, #356]	; 0x164
    (void)USBD_LL_OpenEP(pdev, MSCInEpAdd, USBD_EP_TYPE_BULK, MSC_MAX_HS_PACKET);
 800e600:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e604:	e7da      	b.n	800e5bc <USBD_MSC_Init+0x4c>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800e606:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
    return (uint8_t)USBD_EMEM;
 800e60a:	2002      	movs	r0, #2
}
 800e60c:	bd70      	pop	{r4, r5, r6, pc}
 800e60e:	bf00      	nop
 800e610:	200000c9 	.word	0x200000c9
 800e614:	200000c8 	.word	0x200000c8

0800e618 <USBD_MSC_Setup>:
{
 800e618:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e61c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e620:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800e624:	b083      	sub	sp, #12
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e626:	f8d3 82c0 	ldr.w	r8, [r3, #704]	; 0x2c0
  uint16_t status_info = 0U;
 800e62a:	2200      	movs	r2, #0
 800e62c:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hmsc == NULL)
 800e630:	f1b8 0f00 	cmp.w	r8, #0
 800e634:	f000 8082 	beq.w	800e73c <USBD_MSC_Setup+0x124>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800e638:	780f      	ldrb	r7, [r1, #0]
 800e63a:	f017 0660 	ands.w	r6, r7, #96	; 0x60
 800e63e:	4604      	mov	r4, r0
 800e640:	460d      	mov	r5, r1
 800e642:	d01a      	beq.n	800e67a <USBD_MSC_Setup+0x62>
 800e644:	2e20      	cmp	r6, #32
 800e646:	d008      	beq.n	800e65a <USBD_MSC_Setup+0x42>
          USBD_CtlError(pdev, req);
 800e648:	4629      	mov	r1, r5
 800e64a:	4620      	mov	r0, r4
 800e64c:	f7ff ff22 	bl	800e494 <USBD_CtlError>
          ret = USBD_FAIL;
 800e650:	2603      	movs	r6, #3
}
 800e652:	4630      	mov	r0, r6
 800e654:	b003      	add	sp, #12
 800e656:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      switch (req->bRequest)
 800e65a:	784a      	ldrb	r2, [r1, #1]
 800e65c:	2afe      	cmp	r2, #254	; 0xfe
 800e65e:	d02b      	beq.n	800e6b8 <USBD_MSC_Setup+0xa0>
 800e660:	2aff      	cmp	r2, #255	; 0xff
 800e662:	d1f1      	bne.n	800e648 <USBD_MSC_Setup+0x30>
          if ((req->wValue  == 0U) && (req->wLength == 0U) &&
 800e664:	884b      	ldrh	r3, [r1, #2]
 800e666:	2b00      	cmp	r3, #0
 800e668:	d1ee      	bne.n	800e648 <USBD_MSC_Setup+0x30>
 800e66a:	88ce      	ldrh	r6, [r1, #6]
 800e66c:	2e00      	cmp	r6, #0
 800e66e:	d1eb      	bne.n	800e648 <USBD_MSC_Setup+0x30>
 800e670:	063b      	lsls	r3, r7, #24
 800e672:	d4e9      	bmi.n	800e648 <USBD_MSC_Setup+0x30>
            MSC_BOT_Reset(pdev);
 800e674:	f000 f94e 	bl	800e914 <MSC_BOT_Reset>
 800e678:	e7eb      	b.n	800e652 <USBD_MSC_Setup+0x3a>
      switch (req->bRequest)
 800e67a:	784b      	ldrb	r3, [r1, #1]
 800e67c:	2b0b      	cmp	r3, #11
 800e67e:	d8e3      	bhi.n	800e648 <USBD_MSC_Setup+0x30>
 800e680:	a201      	add	r2, pc, #4	; (adr r2, 800e688 <USBD_MSC_Setup+0x70>)
 800e682:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e686:	bf00      	nop
 800e688:	0800e727 	.word	0x0800e727
 800e68c:	0800e709 	.word	0x0800e709
 800e690:	0800e649 	.word	0x0800e649
 800e694:	0800e649 	.word	0x0800e649
 800e698:	0800e649 	.word	0x0800e649
 800e69c:	0800e649 	.word	0x0800e649
 800e6a0:	0800e649 	.word	0x0800e649
 800e6a4:	0800e649 	.word	0x0800e649
 800e6a8:	0800e649 	.word	0x0800e649
 800e6ac:	0800e649 	.word	0x0800e649
 800e6b0:	0800e6f5 	.word	0x0800e6f5
 800e6b4:	0800e6e5 	.word	0x0800e6e5
          if ((req->wValue  == 0U) && (req->wLength == 1U) &&
 800e6b8:	884e      	ldrh	r6, [r1, #2]
 800e6ba:	2e00      	cmp	r6, #0
 800e6bc:	d1c4      	bne.n	800e648 <USBD_MSC_Setup+0x30>
 800e6be:	f8b1 9006 	ldrh.w	r9, [r1, #6]
 800e6c2:	f1b9 0f01 	cmp.w	r9, #1
 800e6c6:	d1bf      	bne.n	800e648 <USBD_MSC_Setup+0x30>
 800e6c8:	063a      	lsls	r2, r7, #24
 800e6ca:	d5bd      	bpl.n	800e648 <USBD_MSC_Setup+0x30>
            hmsc->max_lun = (uint32_t)((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->GetMaxLun();
 800e6cc:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 800e6d0:	699b      	ldr	r3, [r3, #24]
 800e6d2:	4798      	blx	r3
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hmsc->max_lun, 1U);
 800e6d4:	464a      	mov	r2, r9
            hmsc->max_lun = (uint32_t)((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->GetMaxLun();
 800e6d6:	f8c8 0000 	str.w	r0, [r8]
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hmsc->max_lun, 1U);
 800e6da:	4641      	mov	r1, r8
 800e6dc:	4620      	mov	r0, r4
 800e6de:	f7ff ff0b 	bl	800e4f8 <USBD_CtlSendData>
 800e6e2:	e7b6      	b.n	800e652 <USBD_MSC_Setup+0x3a>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800e6e4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e6e8:	2b03      	cmp	r3, #3
 800e6ea:	d1ad      	bne.n	800e648 <USBD_MSC_Setup+0x30>
            hmsc->interface = (uint8_t)(req->wValue);
 800e6ec:	788b      	ldrb	r3, [r1, #2]
 800e6ee:	f8c8 3004 	str.w	r3, [r8, #4]
 800e6f2:	e7ae      	b.n	800e652 <USBD_MSC_Setup+0x3a>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800e6f4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e6f8:	2b03      	cmp	r3, #3
 800e6fa:	d1a5      	bne.n	800e648 <USBD_MSC_Setup+0x30>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hmsc->interface, 1U);
 800e6fc:	f108 0104 	add.w	r1, r8, #4
 800e700:	2201      	movs	r2, #1
 800e702:	f7ff fef9 	bl	800e4f8 <USBD_CtlSendData>
 800e706:	e7a4      	b.n	800e652 <USBD_MSC_Setup+0x3a>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800e708:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800e70c:	2b03      	cmp	r3, #3
 800e70e:	d1a0      	bne.n	800e652 <USBD_MSC_Setup+0x3a>
            if (req->wValue == USB_FEATURE_EP_HALT)
 800e710:	884b      	ldrh	r3, [r1, #2]
 800e712:	2b00      	cmp	r3, #0
 800e714:	d19d      	bne.n	800e652 <USBD_MSC_Setup+0x3a>
              (void)USBD_LL_FlushEP(pdev, (uint8_t)req->wIndex);
 800e716:	7909      	ldrb	r1, [r1, #4]
 800e718:	f7f3 fcb6 	bl	8002088 <USBD_LL_FlushEP>
              MSC_BOT_CplClrFeature(pdev, (uint8_t)req->wIndex);
 800e71c:	7929      	ldrb	r1, [r5, #4]
 800e71e:	4620      	mov	r0, r4
 800e720:	f000 f9f2 	bl	800eb08 <MSC_BOT_CplClrFeature>
 800e724:	e795      	b.n	800e652 <USBD_MSC_Setup+0x3a>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800e726:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 800e72a:	2a03      	cmp	r2, #3
 800e72c:	d18c      	bne.n	800e648 <USBD_MSC_Setup+0x30>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800e72e:	2202      	movs	r2, #2
 800e730:	f10d 0106 	add.w	r1, sp, #6
  USBD_StatusTypeDef ret = USBD_OK;
 800e734:	461e      	mov	r6, r3
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800e736:	f7ff fedf 	bl	800e4f8 <USBD_CtlSendData>
 800e73a:	e78a      	b.n	800e652 <USBD_MSC_Setup+0x3a>
    return (uint8_t)USBD_FAIL;
 800e73c:	2603      	movs	r6, #3
}
 800e73e:	4630      	mov	r0, r6
 800e740:	b003      	add	sp, #12
 800e742:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e746:	bf00      	nop

0800e748 <USBD_MSC_DataIn>:
{
 800e748:	b508      	push	{r3, lr}
  MSC_BOT_DataIn(pdev, epnum);
 800e74a:	f000 f937 	bl	800e9bc <MSC_BOT_DataIn>
}
 800e74e:	2000      	movs	r0, #0
 800e750:	bd08      	pop	{r3, pc}
 800e752:	bf00      	nop

0800e754 <USBD_MSC_DataOut>:
{
 800e754:	b508      	push	{r3, lr}
  MSC_BOT_DataOut(pdev, epnum);
 800e756:	f000 f953 	bl	800ea00 <MSC_BOT_DataOut>
}
 800e75a:	2000      	movs	r0, #0
 800e75c:	bd08      	pop	{r3, pc}
 800e75e:	bf00      	nop

0800e760 <USBD_MSC_GetHSCfgDesc>:
{
 800e760:	b538      	push	{r3, r4, r5, lr}
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e762:	2181      	movs	r1, #129	; 0x81
{
 800e764:	4605      	mov	r5, r0
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e766:	480b      	ldr	r0, [pc, #44]	; (800e794 <USBD_MSC_GetHSCfgDesc+0x34>)
 800e768:	f7ff fbc4 	bl	800def4 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPOUT_ADDR);
 800e76c:	2101      	movs	r1, #1
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e76e:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPOUT_ADDR);
 800e770:	4808      	ldr	r0, [pc, #32]	; (800e794 <USBD_MSC_GetHSCfgDesc+0x34>)
 800e772:	f7ff fbbf 	bl	800def4 <USBD_GetEpDesc>
  if (pEpInDesc != NULL)
 800e776:	b11c      	cbz	r4, 800e780 <USBD_MSC_GetHSCfgDesc+0x20>
    pEpInDesc->wMaxPacketSize = MSC_MAX_HS_PACKET;
 800e778:	2100      	movs	r1, #0
 800e77a:	2202      	movs	r2, #2
 800e77c:	7121      	strb	r1, [r4, #4]
 800e77e:	7162      	strb	r2, [r4, #5]
  if (pEpOutDesc != NULL)
 800e780:	b118      	cbz	r0, 800e78a <USBD_MSC_GetHSCfgDesc+0x2a>
    pEpOutDesc->wMaxPacketSize = MSC_MAX_HS_PACKET;
 800e782:	2100      	movs	r1, #0
 800e784:	2202      	movs	r2, #2
 800e786:	7101      	strb	r1, [r0, #4]
 800e788:	7142      	strb	r2, [r0, #5]
  *length = (uint16_t)sizeof(USBD_MSC_CfgDesc);
 800e78a:	2320      	movs	r3, #32
}
 800e78c:	4801      	ldr	r0, [pc, #4]	; (800e794 <USBD_MSC_GetHSCfgDesc+0x34>)
  *length = (uint16_t)sizeof(USBD_MSC_CfgDesc);
 800e78e:	802b      	strh	r3, [r5, #0]
}
 800e790:	bd38      	pop	{r3, r4, r5, pc}
 800e792:	bf00      	nop
 800e794:	20000104 	.word	0x20000104

0800e798 <USBD_MSC_GetFSCfgDesc>:
{
 800e798:	b538      	push	{r3, r4, r5, lr}
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e79a:	2181      	movs	r1, #129	; 0x81
{
 800e79c:	4605      	mov	r5, r0
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e79e:	480b      	ldr	r0, [pc, #44]	; (800e7cc <USBD_MSC_GetFSCfgDesc+0x34>)
 800e7a0:	f7ff fba8 	bl	800def4 <USBD_GetEpDesc>
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPOUT_ADDR);
 800e7a4:	2101      	movs	r1, #1
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPIN_ADDR);
 800e7a6:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_MSC_CfgDesc, MSC_EPOUT_ADDR);
 800e7a8:	4808      	ldr	r0, [pc, #32]	; (800e7cc <USBD_MSC_GetFSCfgDesc+0x34>)
 800e7aa:	f7ff fba3 	bl	800def4 <USBD_GetEpDesc>
  if (pEpInDesc != NULL)
 800e7ae:	b11c      	cbz	r4, 800e7b8 <USBD_MSC_GetFSCfgDesc+0x20>
    pEpInDesc->wMaxPacketSize = MSC_MAX_FS_PACKET;
 800e7b0:	2100      	movs	r1, #0
 800e7b2:	2240      	movs	r2, #64	; 0x40
 800e7b4:	7161      	strb	r1, [r4, #5]
 800e7b6:	7122      	strb	r2, [r4, #4]
  if (pEpOutDesc != NULL)
 800e7b8:	b118      	cbz	r0, 800e7c2 <USBD_MSC_GetFSCfgDesc+0x2a>
    pEpOutDesc->wMaxPacketSize = MSC_MAX_FS_PACKET;
 800e7ba:	2100      	movs	r1, #0
 800e7bc:	2240      	movs	r2, #64	; 0x40
 800e7be:	7141      	strb	r1, [r0, #5]
 800e7c0:	7102      	strb	r2, [r0, #4]
  *length = (uint16_t)sizeof(USBD_MSC_CfgDesc);
 800e7c2:	2320      	movs	r3, #32
}
 800e7c4:	4801      	ldr	r0, [pc, #4]	; (800e7cc <USBD_MSC_GetFSCfgDesc+0x34>)
  *length = (uint16_t)sizeof(USBD_MSC_CfgDesc);
 800e7c6:	802b      	strh	r3, [r5, #0]
}
 800e7c8:	bd38      	pop	{r3, r4, r5, pc}
 800e7ca:	bf00      	nop
 800e7cc:	20000104 	.word	0x20000104

0800e7d0 <USBD_MSC_GetOtherSpeedCfgDesc>:
 800e7d0:	f7ff bfe2 	b.w	800e798 <USBD_MSC_GetFSCfgDesc>

0800e7d4 <USBD_MSC_DeInit>:
{
 800e7d4:	b570      	push	{r4, r5, r6, lr}
  (void)USBD_LL_CloseEP(pdev, MSCOutEpAdd);
 800e7d6:	4d1a      	ldr	r5, [pc, #104]	; (800e840 <USBD_MSC_DeInit+0x6c>)
  (void)USBD_LL_CloseEP(pdev, MSCInEpAdd);
 800e7d8:	4e1a      	ldr	r6, [pc, #104]	; (800e844 <USBD_MSC_DeInit+0x70>)
  (void)USBD_LL_CloseEP(pdev, MSCOutEpAdd);
 800e7da:	7829      	ldrb	r1, [r5, #0]
{
 800e7dc:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, MSCOutEpAdd);
 800e7de:	f7f3 fc45 	bl	800206c <USBD_LL_CloseEP>
  pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 0U;
 800e7e2:	782b      	ldrb	r3, [r5, #0]
  (void)USBD_LL_CloseEP(pdev, MSCInEpAdd);
 800e7e4:	7831      	ldrb	r1, [r6, #0]
  pdev->ep_out[MSCOutEpAdd & 0xFU].is_used = 0U;
 800e7e6:	f003 030f 	and.w	r3, r3, #15
 800e7ea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e7ee:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e7f2:	2500      	movs	r5, #0
 800e7f4:	f8a3 5164 	strh.w	r5, [r3, #356]	; 0x164
  (void)USBD_LL_CloseEP(pdev, MSCInEpAdd);
 800e7f8:	4620      	mov	r0, r4
 800e7fa:	f7f3 fc37 	bl	800206c <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800e7fe:	f8d4 22d4 	ldr.w	r2, [r4, #724]	; 0x2d4
  pdev->ep_in[MSCInEpAdd & 0xFU].is_used = 0U;
 800e802:	7833      	ldrb	r3, [r6, #0]
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800e804:	32b0      	adds	r2, #176	; 0xb0
  pdev->ep_in[MSCInEpAdd & 0xFU].is_used = 0U;
 800e806:	f003 030f 	and.w	r3, r3, #15
 800e80a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800e80e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
  pdev->ep_in[MSCInEpAdd & 0xFU].is_used = 0U;
 800e812:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e816:	849d      	strh	r5, [r3, #36]	; 0x24
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800e818:	b182      	cbz	r2, 800e83c <USBD_MSC_DeInit+0x68>
    MSC_BOT_DeInit(pdev);
 800e81a:	4620      	mov	r0, r4
 800e81c:	f000 f89c 	bl	800e958 <MSC_BOT_DeInit>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800e820:	f8d4 32d4 	ldr.w	r3, [r4, #724]	; 0x2d4
 800e824:	33b0      	adds	r3, #176	; 0xb0
 800e826:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800e82a:	f7f3 fc9d 	bl	8002168 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId]  = NULL;
 800e82e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	; 0x2d4
 800e832:	33b0      	adds	r3, #176	; 0xb0
 800e834:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
    pdev->pClassData = NULL;
 800e838:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
}
 800e83c:	2000      	movs	r0, #0
 800e83e:	bd70      	pop	{r4, r5, r6, pc}
 800e840:	200000c9 	.word	0x200000c9
 800e844:	200000c8 	.word	0x200000c8

0800e848 <USBD_MSC_RegisterStorage>:
  * @param  fops: storage callback
  * @retval status
  */
uint8_t USBD_MSC_RegisterStorage(USBD_HandleTypeDef *pdev, USBD_StorageTypeDef *fops)
{
  if (fops == NULL)
 800e848:	b139      	cbz	r1, 800e85a <USBD_MSC_RegisterStorage+0x12>
  {
    return (uint8_t)USBD_FAIL;
  }

  pdev->pUserData[pdev->classId] = fops;
 800e84a:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e84e:	eb00 0383 	add.w	r3, r0, r3, lsl #2

  return (uint8_t)USBD_OK;
 800e852:	2000      	movs	r0, #0
  pdev->pUserData[pdev->classId] = fops;
 800e854:	f8c3 12c4 	str.w	r1, [r3, #708]	; 0x2c4
  return (uint8_t)USBD_OK;
 800e858:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
 800e85a:	2003      	movs	r0, #3
}
 800e85c:	4770      	bx	lr
 800e85e:	bf00      	nop

0800e860 <MSC_BOT_Abort>:
  * @retval status
  */

static void  MSC_BOT_Abort(USBD_HandleTypeDef *pdev)
{
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e860:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e864:	33b0      	adds	r3, #176	; 0xb0
{
 800e866:	b570      	push	{r4, r5, r6, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e868:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
  /* Get the Endpoints addresses allocated for this class instance */
  MSCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK);
  MSCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */

  if (hmsc == NULL)
 800e86c:	b185      	cbz	r5, 800e890 <MSC_BOT_Abort+0x30>
  {
    return;
  }

  if ((hmsc->cbw.bmFlags == 0U) &&
 800e86e:	f895 321c 	ldrb.w	r3, [r5, #540]	; 0x21c
 800e872:	4604      	mov	r4, r0
 800e874:	b923      	cbnz	r3, 800e880 <MSC_BOT_Abort+0x20>
 800e876:	f8d5 3218 	ldr.w	r3, [r5, #536]	; 0x218
 800e87a:	b10b      	cbz	r3, 800e880 <MSC_BOT_Abort+0x20>
      (hmsc->cbw.dDataLength != 0U) &&
 800e87c:	7a6b      	ldrb	r3, [r5, #9]
 800e87e:	b19b      	cbz	r3, 800e8a8 <MSC_BOT_Abort+0x48>
      (hmsc->bot_status == USBD_BOT_STATUS_NORMAL))
  {
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
  }

  (void)USBD_LL_StallEP(pdev, MSCInEpAdd);
 800e880:	4e0c      	ldr	r6, [pc, #48]	; (800e8b4 <MSC_BOT_Abort+0x54>)
 800e882:	4620      	mov	r0, r4
 800e884:	7831      	ldrb	r1, [r6, #0]
 800e886:	f7f3 fc0d 	bl	80020a4 <USBD_LL_StallEP>

  if (hmsc->bot_status == USBD_BOT_STATUS_ERROR)
 800e88a:	7a6b      	ldrb	r3, [r5, #9]
 800e88c:	2b02      	cmp	r3, #2
 800e88e:	d000      	beq.n	800e892 <MSC_BOT_Abort+0x32>
  {
    (void)USBD_LL_StallEP(pdev, MSCInEpAdd);
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
  }
}
 800e890:	bd70      	pop	{r4, r5, r6, pc}
    (void)USBD_LL_StallEP(pdev, MSCInEpAdd);
 800e892:	7831      	ldrb	r1, [r6, #0]
 800e894:	4620      	mov	r0, r4
 800e896:	f7f3 fc05 	bl	80020a4 <USBD_LL_StallEP>
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
 800e89a:	4b07      	ldr	r3, [pc, #28]	; (800e8b8 <MSC_BOT_Abort+0x58>)
 800e89c:	4620      	mov	r0, r4
 800e89e:	7819      	ldrb	r1, [r3, #0]
}
 800e8a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
 800e8a4:	f7f3 bbfe 	b.w	80020a4 <USBD_LL_StallEP>
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
 800e8a8:	4b03      	ldr	r3, [pc, #12]	; (800e8b8 <MSC_BOT_Abort+0x58>)
 800e8aa:	7819      	ldrb	r1, [r3, #0]
 800e8ac:	f7f3 fbfa 	bl	80020a4 <USBD_LL_StallEP>
 800e8b0:	e7e6      	b.n	800e880 <MSC_BOT_Abort+0x20>
 800e8b2:	bf00      	nop
 800e8b4:	200000c8 	.word	0x200000c8
 800e8b8:	200000c9 	.word	0x200000c9

0800e8bc <MSC_BOT_Init>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e8bc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e8c0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
{
 800e8c4:	b570      	push	{r4, r5, r6, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e8c6:	f8d3 52c0 	ldr.w	r5, [r3, #704]	; 0x2c0
  if (hmsc == NULL)
 800e8ca:	b1ed      	cbz	r5, 800e908 <MSC_BOT_Init+0x4c>
  hmsc->bot_status = USBD_BOT_STATUS_NORMAL;
 800e8cc:	4604      	mov	r4, r0
  hmsc->bot_state = USBD_BOT_IDLE;
 800e8ce:	2000      	movs	r0, #0
 800e8d0:	8128      	strh	r0, [r5, #8]
  hmsc->scsi_sense_head = 0U;
 800e8d2:	f8a5 0260 	strh.w	r0, [r5, #608]	; 0x260
  hmsc->scsi_medium_state = SCSI_MEDIUM_UNLOCKED;
 800e8d6:	f885 0262 	strb.w	r0, [r5, #610]	; 0x262
  ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Init(0U);
 800e8da:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
  (void)USBD_LL_FlushEP(pdev, MSCOutEpAdd);
 800e8de:	4e0b      	ldr	r6, [pc, #44]	; (800e90c <MSC_BOT_Init+0x50>)
  ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Init(0U);
 800e8e0:	681b      	ldr	r3, [r3, #0]
 800e8e2:	4798      	blx	r3
  (void)USBD_LL_FlushEP(pdev, MSCOutEpAdd);
 800e8e4:	7831      	ldrb	r1, [r6, #0]
 800e8e6:	4620      	mov	r0, r4
 800e8e8:	f7f3 fbce 	bl	8002088 <USBD_LL_FlushEP>
  (void)USBD_LL_FlushEP(pdev, MSCInEpAdd);
 800e8ec:	4b08      	ldr	r3, [pc, #32]	; (800e910 <MSC_BOT_Init+0x54>)
 800e8ee:	4620      	mov	r0, r4
 800e8f0:	7819      	ldrb	r1, [r3, #0]
 800e8f2:	f7f3 fbc9 	bl	8002088 <USBD_LL_FlushEP>
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e8f6:	7831      	ldrb	r1, [r6, #0]
 800e8f8:	f505 7204 	add.w	r2, r5, #528	; 0x210
 800e8fc:	4620      	mov	r0, r4
 800e8fe:	231f      	movs	r3, #31
}
 800e900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e904:	f7f3 bc1a 	b.w	800213c <USBD_LL_PrepareReceive>
}
 800e908:	bd70      	pop	{r4, r5, r6, pc}
 800e90a:	bf00      	nop
 800e90c:	200000c9 	.word	0x200000c9
 800e910:	200000c8 	.word	0x200000c8

0800e914 <MSC_BOT_Reset>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e914:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e918:	33b0      	adds	r3, #176	; 0xb0
{
 800e91a:	b570      	push	{r4, r5, r6, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e91c:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
  if (hmsc == NULL)
 800e920:	b1ad      	cbz	r5, 800e94e <MSC_BOT_Reset+0x3a>
  (void)USBD_LL_ClearStallEP(pdev, MSCInEpAdd);
 800e922:	4b0b      	ldr	r3, [pc, #44]	; (800e950 <MSC_BOT_Reset+0x3c>)
  (void)USBD_LL_ClearStallEP(pdev, MSCOutEpAdd);
 800e924:	4e0b      	ldr	r6, [pc, #44]	; (800e954 <MSC_BOT_Reset+0x40>)
  (void)USBD_LL_ClearStallEP(pdev, MSCInEpAdd);
 800e926:	7819      	ldrb	r1, [r3, #0]
  hmsc->bot_state  = USBD_BOT_IDLE;
 800e928:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e92c:	4604      	mov	r4, r0
 800e92e:	812b      	strh	r3, [r5, #8]
  (void)USBD_LL_ClearStallEP(pdev, MSCInEpAdd);
 800e930:	f7f3 fbc6 	bl	80020c0 <USBD_LL_ClearStallEP>
  (void)USBD_LL_ClearStallEP(pdev, MSCOutEpAdd);
 800e934:	7831      	ldrb	r1, [r6, #0]
 800e936:	4620      	mov	r0, r4
 800e938:	f7f3 fbc2 	bl	80020c0 <USBD_LL_ClearStallEP>
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e93c:	7831      	ldrb	r1, [r6, #0]
 800e93e:	f505 7204 	add.w	r2, r5, #528	; 0x210
 800e942:	4620      	mov	r0, r4
 800e944:	231f      	movs	r3, #31
}
 800e946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e94a:	f7f3 bbf7 	b.w	800213c <USBD_LL_PrepareReceive>
}
 800e94e:	bd70      	pop	{r4, r5, r6, pc}
 800e950:	200000c8 	.word	0x200000c8
 800e954:	200000c9 	.word	0x200000c9

0800e958 <MSC_BOT_DeInit>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e958:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e95c:	33b0      	adds	r3, #176	; 0xb0
 800e95e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  if (hmsc != NULL)
 800e962:	b10b      	cbz	r3, 800e968 <MSC_BOT_DeInit+0x10>
    hmsc->bot_state = USBD_BOT_IDLE;
 800e964:	2200      	movs	r2, #0
 800e966:	721a      	strb	r2, [r3, #8]
}
 800e968:	4770      	bx	lr
 800e96a:	bf00      	nop

0800e96c <MSC_BOT_SendCSW>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e96c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e970:	33b0      	adds	r3, #176	; 0xb0
{
 800e972:	b570      	push	{r4, r5, r6, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e974:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
  if (hmsc == NULL)
 800e978:	b1c5      	cbz	r5, 800e9ac <MSC_BOT_SendCSW+0x40>
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, (uint8_t *)&hmsc->csw,
 800e97a:	4e0d      	ldr	r6, [pc, #52]	; (800e9b0 <MSC_BOT_SendCSW+0x44>)
  hmsc->csw.dSignature = USBD_BOT_CSW_SIGNATURE;
 800e97c:	4a0d      	ldr	r2, [pc, #52]	; (800e9b4 <MSC_BOT_SendCSW+0x48>)
  hmsc->csw.bStatus = CSW_Status;
 800e97e:	f885 123c 	strb.w	r1, [r5, #572]	; 0x23c
  hmsc->bot_state = USBD_BOT_IDLE;
 800e982:	2300      	movs	r3, #0
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, (uint8_t *)&hmsc->csw,
 800e984:	7831      	ldrb	r1, [r6, #0]
  hmsc->csw.dSignature = USBD_BOT_CSW_SIGNATURE;
 800e986:	f8c5 2230 	str.w	r2, [r5, #560]	; 0x230
  hmsc->bot_state = USBD_BOT_IDLE;
 800e98a:	722b      	strb	r3, [r5, #8]
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, (uint8_t *)&hmsc->csw,
 800e98c:	f505 720c 	add.w	r2, r5, #560	; 0x230
 800e990:	230d      	movs	r3, #13
 800e992:	4604      	mov	r4, r0
 800e994:	f7f3 fbc4 	bl	8002120 <USBD_LL_Transmit>
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e998:	4b07      	ldr	r3, [pc, #28]	; (800e9b8 <MSC_BOT_SendCSW+0x4c>)
 800e99a:	f505 7204 	add.w	r2, r5, #528	; 0x210
 800e99e:	7819      	ldrb	r1, [r3, #0]
 800e9a0:	4620      	mov	r0, r4
 800e9a2:	231f      	movs	r3, #31
}
 800e9a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, (uint8_t *)&hmsc->cbw,
 800e9a8:	f7f3 bbc8 	b.w	800213c <USBD_LL_PrepareReceive>
}
 800e9ac:	bd70      	pop	{r4, r5, r6, pc}
 800e9ae:	bf00      	nop
 800e9b0:	200000c8 	.word	0x200000c8
 800e9b4:	53425355 	.word	0x53425355
 800e9b8:	200000c9 	.word	0x200000c9

0800e9bc <MSC_BOT_DataIn>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800e9bc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800e9c0:	33b0      	adds	r3, #176	; 0xb0
 800e9c2:	f850 1023 	ldr.w	r1, [r0, r3, lsl #2]
  if (hmsc == NULL)
 800e9c6:	b199      	cbz	r1, 800e9f0 <MSC_BOT_DataIn+0x34>
  switch (hmsc->bot_state)
 800e9c8:	7a0b      	ldrb	r3, [r1, #8]
 800e9ca:	2b02      	cmp	r3, #2
 800e9cc:	d005      	beq.n	800e9da <MSC_BOT_DataIn+0x1e>
 800e9ce:	3b03      	subs	r3, #3
 800e9d0:	2b01      	cmp	r3, #1
 800e9d2:	d80d      	bhi.n	800e9f0 <MSC_BOT_DataIn+0x34>
      MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_PASSED);
 800e9d4:	2100      	movs	r1, #0
 800e9d6:	f7ff bfc9 	b.w	800e96c <MSC_BOT_SendCSW>
{
 800e9da:	b510      	push	{r4, lr}
      if (SCSI_ProcessCmd(pdev, hmsc->cbw.bLUN, &hmsc->cbw.CB[0]) < 0)
 800e9dc:	f201 221f 	addw	r2, r1, #543	; 0x21f
 800e9e0:	f891 121d 	ldrb.w	r1, [r1, #541]	; 0x21d
 800e9e4:	4604      	mov	r4, r0
 800e9e6:	f000 f993 	bl	800ed10 <SCSI_ProcessCmd>
 800e9ea:	2800      	cmp	r0, #0
 800e9ec:	db01      	blt.n	800e9f2 <MSC_BOT_DataIn+0x36>
}
 800e9ee:	bd10      	pop	{r4, pc}
 800e9f0:	4770      	bx	lr
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_FAILED);
 800e9f2:	4620      	mov	r0, r4
 800e9f4:	2101      	movs	r1, #1
}
 800e9f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_FAILED);
 800e9fa:	f7ff bfb7 	b.w	800e96c <MSC_BOT_SendCSW>
 800e9fe:	bf00      	nop

0800ea00 <MSC_BOT_DataOut>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ea00:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800ea04:	33b0      	adds	r3, #176	; 0xb0
{
 800ea06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ea0a:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
  if (hmsc == NULL)
 800ea0e:	b125      	cbz	r5, 800ea1a <MSC_BOT_DataOut+0x1a>
  switch (hmsc->bot_state)
 800ea10:	7a2b      	ldrb	r3, [r5, #8]
 800ea12:	4604      	mov	r4, r0
 800ea14:	b18b      	cbz	r3, 800ea3a <MSC_BOT_DataOut+0x3a>
 800ea16:	2b01      	cmp	r3, #1
 800ea18:	d001      	beq.n	800ea1e <MSC_BOT_DataOut+0x1e>
}
 800ea1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (SCSI_ProcessCmd(pdev, hmsc->cbw.bLUN, &hmsc->cbw.CB[0]) < 0)
 800ea1e:	f895 121d 	ldrb.w	r1, [r5, #541]	; 0x21d
 800ea22:	f205 221f 	addw	r2, r5, #543	; 0x21f
 800ea26:	f000 f973 	bl	800ed10 <SCSI_ProcessCmd>
 800ea2a:	2800      	cmp	r0, #0
 800ea2c:	daf5      	bge.n	800ea1a <MSC_BOT_DataOut+0x1a>
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_FAILED);
 800ea2e:	4620      	mov	r0, r4
 800ea30:	2101      	movs	r1, #1
}
 800ea32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_FAILED);
 800ea36:	f7ff bf99 	b.w	800e96c <MSC_BOT_SendCSW>
  hmsc->csw.dDataResidue = hmsc->cbw.dDataLength;
 800ea3a:	e9d5 2385 	ldrd	r2, r3, [r5, #532]	; 0x214
  if ((USBD_LL_GetRxDataSize(pdev, MSCOutEpAdd) != USBD_BOT_CBW_LENGTH) ||
 800ea3e:	492f      	ldr	r1, [pc, #188]	; (800eafc <MSC_BOT_DataOut+0xfc>)
  hmsc->csw.dDataResidue = hmsc->cbw.dDataLength;
 800ea40:	e9c5 238d 	strd	r2, r3, [r5, #564]	; 0x234
  if ((USBD_LL_GetRxDataSize(pdev, MSCOutEpAdd) != USBD_BOT_CBW_LENGTH) ||
 800ea44:	7809      	ldrb	r1, [r1, #0]
 800ea46:	f7f3 fb87 	bl	8002158 <USBD_LL_GetRxDataSize>
 800ea4a:	281f      	cmp	r0, #31
 800ea4c:	d00d      	beq.n	800ea6a <MSC_BOT_DataOut+0x6a>
 800ea4e:	f895 121d 	ldrb.w	r1, [r5, #541]	; 0x21d
    SCSI_SenseCode(pdev, hmsc->cbw.bLUN, ILLEGAL_REQUEST, INVALID_CDB);
 800ea52:	4620      	mov	r0, r4
 800ea54:	2320      	movs	r3, #32
 800ea56:	2205      	movs	r2, #5
 800ea58:	f000 fe56 	bl	800f708 <SCSI_SenseCode>
    hmsc->bot_status = USBD_BOT_STATUS_ERROR;
 800ea5c:	2302      	movs	r3, #2
 800ea5e:	726b      	strb	r3, [r5, #9]
    MSC_BOT_Abort(pdev);
 800ea60:	4620      	mov	r0, r4
}
 800ea62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    MSC_BOT_Abort(pdev);
 800ea66:	f7ff befb 	b.w	800e860 <MSC_BOT_Abort>
  if ((USBD_LL_GetRxDataSize(pdev, MSCOutEpAdd) != USBD_BOT_CBW_LENGTH) ||
 800ea6a:	4b25      	ldr	r3, [pc, #148]	; (800eb00 <MSC_BOT_DataOut+0x100>)
 800ea6c:	f8d5 2210 	ldr.w	r2, [r5, #528]	; 0x210
 800ea70:	f895 121d 	ldrb.w	r1, [r5, #541]	; 0x21d
 800ea74:	429a      	cmp	r2, r3
 800ea76:	d1ec      	bne.n	800ea52 <MSC_BOT_DataOut+0x52>
      (hmsc->cbw.dSignature != USBD_BOT_CBW_SIGNATURE) ||
 800ea78:	2901      	cmp	r1, #1
 800ea7a:	d8ea      	bhi.n	800ea52 <MSC_BOT_DataOut+0x52>
      (hmsc->cbw.bLUN > 1U) || (hmsc->cbw.bCBLength < 1U) ||
 800ea7c:	f895 321e 	ldrb.w	r3, [r5, #542]	; 0x21e
 800ea80:	3b01      	subs	r3, #1
 800ea82:	2b0f      	cmp	r3, #15
 800ea84:	d8e5      	bhi.n	800ea52 <MSC_BOT_DataOut+0x52>
    if (SCSI_ProcessCmd(pdev, hmsc->cbw.bLUN, &hmsc->cbw.CB[0]) < 0)
 800ea86:	f205 221f 	addw	r2, r5, #543	; 0x21f
 800ea8a:	4620      	mov	r0, r4
 800ea8c:	f000 f940 	bl	800ed10 <SCSI_ProcessCmd>
 800ea90:	2800      	cmp	r0, #0
      if (hmsc->bot_state == USBD_BOT_NO_DATA)
 800ea92:	7a2b      	ldrb	r3, [r5, #8]
    if (SCSI_ProcessCmd(pdev, hmsc->cbw.bLUN, &hmsc->cbw.CB[0]) < 0)
 800ea94:	db25      	blt.n	800eae2 <MSC_BOT_DataOut+0xe2>
    else if ((hmsc->bot_state != USBD_BOT_DATA_IN) &&
 800ea96:	3b01      	subs	r3, #1
 800ea98:	2b02      	cmp	r3, #2
 800ea9a:	d9be      	bls.n	800ea1a <MSC_BOT_DataOut+0x1a>
      if (hmsc->bot_data_length > 0U)
 800ea9c:	68e9      	ldr	r1, [r5, #12]
 800ea9e:	b339      	cbz	r1, 800eaf0 <MSC_BOT_DataOut+0xf0>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800eaa0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	; 0x2d4
 800eaa4:	33b0      	adds	r3, #176	; 0xb0
 800eaa6:	f854 6023 	ldr.w	r6, [r4, r3, lsl #2]
  if (hmsc == NULL)
 800eaaa:	2e00      	cmp	r6, #0
 800eaac:	d0b5      	beq.n	800ea1a <MSC_BOT_DataOut+0x1a>
  hmsc->csw.dDataResidue -= len;
 800eaae:	f8d6 2238 	ldr.w	r2, [r6, #568]	; 0x238
  length = MIN(hmsc->cbw.dDataLength, len);
 800eab2:	f8d6 3218 	ldr.w	r3, [r6, #536]	; 0x218
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, pbuf, length);
 800eab6:	f8df c04c 	ldr.w	ip, [pc, #76]	; 800eb04 <MSC_BOT_DataOut+0x104>
  hmsc->csw.dDataResidue -= len;
 800eaba:	1a57      	subs	r7, r2, r1
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, pbuf, length);
 800eabc:	4620      	mov	r0, r4
 800eabe:	f105 0210 	add.w	r2, r5, #16
  hmsc->bot_state = USBD_BOT_SEND_DATA;
 800eac2:	2404      	movs	r4, #4
  hmsc->csw.bStatus = USBD_CSW_CMD_PASSED;
 800eac4:	2500      	movs	r5, #0
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, pbuf, length);
 800eac6:	428b      	cmp	r3, r1
  hmsc->csw.bStatus = USBD_CSW_CMD_PASSED;
 800eac8:	f886 523c 	strb.w	r5, [r6, #572]	; 0x23c
  hmsc->bot_state = USBD_BOT_SEND_DATA;
 800eacc:	7234      	strb	r4, [r6, #8]
  hmsc->csw.dDataResidue -= len;
 800eace:	f8c6 7238 	str.w	r7, [r6, #568]	; 0x238
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, pbuf, length);
 800ead2:	bf28      	it	cs
 800ead4:	460b      	movcs	r3, r1
}
 800ead6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, pbuf, length);
 800eada:	f89c 1000 	ldrb.w	r1, [ip]
 800eade:	f7f3 bb1f 	b.w	8002120 <USBD_LL_Transmit>
      if (hmsc->bot_state == USBD_BOT_NO_DATA)
 800eae2:	2b05      	cmp	r3, #5
 800eae4:	d0a3      	beq.n	800ea2e <MSC_BOT_DataOut+0x2e>
        MSC_BOT_Abort(pdev);
 800eae6:	4620      	mov	r0, r4
}
 800eae8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        MSC_BOT_Abort(pdev);
 800eaec:	f7ff beb8 	b.w	800e860 <MSC_BOT_Abort>
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_PASSED);
 800eaf0:	4620      	mov	r0, r4
}
 800eaf2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_PASSED);
 800eaf6:	f7ff bf39 	b.w	800e96c <MSC_BOT_SendCSW>
 800eafa:	bf00      	nop
 800eafc:	200000c9 	.word	0x200000c9
 800eb00:	43425355 	.word	0x43425355
 800eb04:	200000c8 	.word	0x200000c8

0800eb08 <MSC_BOT_CplClrFeature>:
  * @retval None
  */

void  MSC_BOT_CplClrFeature(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800eb08:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800eb0c:	33b0      	adds	r3, #176	; 0xb0
 800eb0e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  /* Get the Endpoints addresses allocated for this class instance */
  MSCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK);
  MSCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */

  if (hmsc == NULL)
 800eb12:	b14b      	cbz	r3, 800eb28 <MSC_BOT_CplClrFeature+0x20>
  {
    return;
  }

  if (hmsc->bot_status == USBD_BOT_STATUS_ERROR) /* Bad CBW Signature */
 800eb14:	7a5b      	ldrb	r3, [r3, #9]
 800eb16:	2b02      	cmp	r3, #2
 800eb18:	d007      	beq.n	800eb2a <MSC_BOT_CplClrFeature+0x22>
  {
    (void)USBD_LL_StallEP(pdev, MSCInEpAdd);
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
  }
  else if (((epnum & 0x80U) == 0x80U) && (hmsc->bot_status != USBD_BOT_STATUS_RECOVERY))
 800eb1a:	060a      	lsls	r2, r1, #24
 800eb1c:	d504      	bpl.n	800eb28 <MSC_BOT_CplClrFeature+0x20>
 800eb1e:	2b01      	cmp	r3, #1
 800eb20:	d002      	beq.n	800eb28 <MSC_BOT_CplClrFeature+0x20>
  {
    MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_FAILED);
 800eb22:	2101      	movs	r1, #1
 800eb24:	f7ff bf22 	b.w	800e96c <MSC_BOT_SendCSW>
 800eb28:	4770      	bx	lr
{
 800eb2a:	b510      	push	{r4, lr}
    (void)USBD_LL_StallEP(pdev, MSCInEpAdd);
 800eb2c:	4b05      	ldr	r3, [pc, #20]	; (800eb44 <MSC_BOT_CplClrFeature+0x3c>)
 800eb2e:	7819      	ldrb	r1, [r3, #0]
 800eb30:	4604      	mov	r4, r0
 800eb32:	f7f3 fab7 	bl	80020a4 <USBD_LL_StallEP>
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
 800eb36:	4b04      	ldr	r3, [pc, #16]	; (800eb48 <MSC_BOT_CplClrFeature+0x40>)
 800eb38:	4620      	mov	r0, r4
 800eb3a:	7819      	ldrb	r1, [r3, #0]
  }
  else
  {
    return;
  }
}
 800eb3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    (void)USBD_LL_StallEP(pdev, MSCOutEpAdd);
 800eb40:	f7f3 bab0 	b.w	80020a4 <USBD_LL_StallEP>
 800eb44:	200000c8 	.word	0x200000c8
 800eb48:	200000c9 	.word	0x200000c9

0800eb4c <SCSI_ProcessRead>:
  * @param  lun: Logical unit number
  * @retval status
  */
static int8_t SCSI_ProcessRead(USBD_HandleTypeDef *pdev, uint8_t lun)
{
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800eb4c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	; 0x2d4
 800eb50:	eb00 0282 	add.w	r2, r0, r2, lsl #2
{
 800eb54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800eb58:	f8d2 42c0 	ldr.w	r4, [r2, #704]	; 0x2c0
  uint32_t len;

  if (hmsc == NULL)
 800eb5c:	2c00      	cmp	r4, #0
 800eb5e:	d054      	beq.n	800ec0a <SCSI_ProcessRead+0xbe>
  {
    return -1;
  }

  len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800eb60:	f8b4 3264 	ldrh.w	r3, [r4, #612]	; 0x264
 800eb64:	f8d4 5270 	ldr.w	r5, [r4, #624]	; 0x270
 800eb68:	4606      	mov	r6, r0
 800eb6a:	fb05 f503 	mul.w	r5, r5, r3
#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  MSCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */

  len = MIN(len, MSC_MEDIA_PACKET);
 800eb6e:	4608      	mov	r0, r1

  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Read(lun, hmsc->bot_data,
 800eb70:	f8d2 12c4 	ldr.w	r1, [r2, #708]	; 0x2c4
 800eb74:	f8d4 226c 	ldr.w	r2, [r4, #620]	; 0x26c
 800eb78:	690f      	ldr	r7, [r1, #16]
  len = MIN(len, MSC_MEDIA_PACKET);
 800eb7a:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Read(lun, hmsc->bot_data,
 800eb7e:	f104 0810 	add.w	r8, r4, #16
  len = MIN(len, MSC_MEDIA_PACKET);
 800eb82:	bf28      	it	cs
 800eb84:	f44f 7500 	movcs.w	r5, #512	; 0x200
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Read(lun, hmsc->bot_data,
 800eb88:	4641      	mov	r1, r8
                                                                    hmsc->scsi_blk_addr,
                                                                    (len / hmsc->scsi_blk_size)) < 0)
 800eb8a:	fbb5 f3f3 	udiv	r3, r5, r3
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Read(lun, hmsc->bot_data,
 800eb8e:	b29b      	uxth	r3, r3
 800eb90:	47b8      	blx	r7
 800eb92:	2800      	cmp	r0, #0
 800eb94:	db1d      	blt.n	800ebd2 <SCSI_ProcessRead+0x86>
  {
    SCSI_SenseCode(pdev, lun, HARDWARE_ERROR, UNRECOVERED_READ_ERROR);
    return -1;
  }

  (void)USBD_LL_Transmit(pdev, MSCInEpAdd, hmsc->bot_data, len);
 800eb96:	4b1e      	ldr	r3, [pc, #120]	; (800ec10 <SCSI_ProcessRead+0xc4>)
 800eb98:	4642      	mov	r2, r8
 800eb9a:	7819      	ldrb	r1, [r3, #0]
 800eb9c:	4630      	mov	r0, r6
 800eb9e:	462b      	mov	r3, r5
 800eba0:	f7f3 fabe 	bl	8002120 <USBD_LL_Transmit>

  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
  hmsc->scsi_blk_len -= (len / hmsc->scsi_blk_size);
 800eba4:	e9d4 109b 	ldrd	r1, r0, [r4, #620]	; 0x26c

  /* case 6 : Hi = Di */
  hmsc->csw.dDataResidue -= len;
 800eba8:	f8d4 2238 	ldr.w	r2, [r4, #568]	; 0x238
  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
 800ebac:	f8b4 3264 	ldrh.w	r3, [r4, #612]	; 0x264
 800ebb0:	fbb5 f3f3 	udiv	r3, r5, r3
  hmsc->csw.dDataResidue -= len;
 800ebb4:	1b55      	subs	r5, r2, r5
  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
 800ebb6:	4419      	add	r1, r3
  hmsc->scsi_blk_len -= (len / hmsc->scsi_blk_size);
 800ebb8:	1ac0      	subs	r0, r0, r3
 800ebba:	e9c4 109b 	strd	r1, r0, [r4, #620]	; 0x26c
  hmsc->csw.dDataResidue -= len;
 800ebbe:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238

  if (hmsc->scsi_blk_len == 0U)
 800ebc2:	b110      	cbz	r0, 800ebca <SCSI_ProcessRead+0x7e>
  {
    hmsc->bot_state = USBD_BOT_LAST_DATA_IN;
  }

  return 0;
 800ebc4:	2000      	movs	r0, #0
}
 800ebc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    hmsc->bot_state = USBD_BOT_LAST_DATA_IN;
 800ebca:	2303      	movs	r3, #3
 800ebcc:	7223      	strb	r3, [r4, #8]
}
 800ebce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ebd2:	f8d6 32d4 	ldr.w	r3, [r6, #724]	; 0x2d4
 800ebd6:	33b0      	adds	r3, #176	; 0xb0
 800ebd8:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
  if (hmsc == NULL)
 800ebdc:	b1aa      	cbz	r2, 800ec0a <SCSI_ProcessRead+0xbe>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ebde:	f892 3261 	ldrb.w	r3, [r2, #609]	; 0x261
 800ebe2:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800ebe6:	3301      	adds	r3, #1
 800ebe8:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ebea:	2504      	movs	r5, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ebec:	2000      	movs	r0, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800ebee:	42ab      	cmp	r3, r5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ebf0:	f04f 0411 	mov.w	r4, #17
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ebf4:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ebf8:	f881 4244 	strb.w	r4, [r1, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ebfc:	f881 0245 	strb.w	r0, [r1, #581]	; 0x245
  hmsc->scsi_sense_tail++;
 800ec00:	bf14      	ite	ne
 800ec02:	f882 3261 	strbne.w	r3, [r2, #609]	; 0x261
    hmsc->scsi_sense_tail = 0U;
 800ec06:	f882 0261 	strbeq.w	r0, [r2, #609]	; 0x261
    return -1;
 800ec0a:	f04f 30ff 	mov.w	r0, #4294967295
 800ec0e:	e7da      	b.n	800ebc6 <SCSI_ProcessRead+0x7a>
 800ec10:	200000c8 	.word	0x200000c8

0800ec14 <SCSI_ProcessWrite>:
  * @param  lun: Logical unit number
  * @retval status
  */
static int8_t SCSI_ProcessWrite(USBD_HandleTypeDef *pdev, uint8_t lun)
{
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ec14:	f8d0 22d4 	ldr.w	r2, [r0, #724]	; 0x2d4
 800ec18:	eb00 0282 	add.w	r2, r0, r2, lsl #2
{
 800ec1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ec20:	f8d2 42c0 	ldr.w	r4, [r2, #704]	; 0x2c0
  uint32_t len;

  if (hmsc == NULL)
 800ec24:	2c00      	cmp	r4, #0
 800ec26:	d05d      	beq.n	800ece4 <SCSI_ProcessWrite+0xd0>
  {
    return -1;
  }

  len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800ec28:	f8b4 3264 	ldrh.w	r3, [r4, #612]	; 0x264
 800ec2c:	f8d4 6270 	ldr.w	r6, [r4, #624]	; 0x270
 800ec30:	4607      	mov	r7, r0
 800ec32:	fb06 f603 	mul.w	r6, r6, r3
#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  MSCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */

  len = MIN(len, MSC_MEDIA_PACKET);
 800ec36:	4608      	mov	r0, r1

  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Write(lun, hmsc->bot_data,
 800ec38:	f8d2 12c4 	ldr.w	r1, [r2, #708]	; 0x2c4
 800ec3c:	f8d4 226c 	ldr.w	r2, [r4, #620]	; 0x26c
 800ec40:	694d      	ldr	r5, [r1, #20]
  len = MIN(len, MSC_MEDIA_PACKET);
 800ec42:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Write(lun, hmsc->bot_data,
 800ec46:	f104 0810 	add.w	r8, r4, #16
  len = MIN(len, MSC_MEDIA_PACKET);
 800ec4a:	bf28      	it	cs
 800ec4c:	f44f 7600 	movcs.w	r6, #512	; 0x200
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Write(lun, hmsc->bot_data,
 800ec50:	4641      	mov	r1, r8
                                                                     hmsc->scsi_blk_addr,
                                                                     (len / hmsc->scsi_blk_size)) < 0)
 800ec52:	fbb6 f3f3 	udiv	r3, r6, r3
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->Write(lun, hmsc->bot_data,
 800ec56:	b29b      	uxth	r3, r3
 800ec58:	47a8      	blx	r5
 800ec5a:	2800      	cmp	r0, #0
 800ec5c:	db26      	blt.n	800ecac <SCSI_ProcessWrite+0x98>
    SCSI_SenseCode(pdev, lun, HARDWARE_ERROR, WRITE_FAULT);
    return -1;
  }

  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
  hmsc->scsi_blk_len -= (len / hmsc->scsi_blk_size);
 800ec5e:	e9d4 259b 	ldrd	r2, r5, [r4, #620]	; 0x26c

  /* case 12 : Ho = Do */
  hmsc->csw.dDataResidue -= len;
 800ec62:	f8d4 1238 	ldr.w	r1, [r4, #568]	; 0x238
  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
 800ec66:	f8b4 3264 	ldrh.w	r3, [r4, #612]	; 0x264
 800ec6a:	fbb6 f0f3 	udiv	r0, r6, r3
  hmsc->csw.dDataResidue -= len;
 800ec6e:	1b8e      	subs	r6, r1, r6
  hmsc->scsi_blk_addr += (len / hmsc->scsi_blk_size);
 800ec70:	4402      	add	r2, r0
  hmsc->scsi_blk_len -= (len / hmsc->scsi_blk_size);
 800ec72:	1a2d      	subs	r5, r5, r0
 800ec74:	e9c4 259b 	strd	r2, r5, [r4, #620]	; 0x26c
  hmsc->csw.dDataResidue -= len;
 800ec78:	f8c4 6238 	str.w	r6, [r4, #568]	; 0x238

  if (hmsc->scsi_blk_len == 0U)
 800ec7c:	b17d      	cbz	r5, 800ec9e <SCSI_ProcessWrite+0x8a>
  {
    MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_PASSED);
  }
  else
  {
    len = MIN((hmsc->scsi_blk_len * hmsc->scsi_blk_size), MSC_MEDIA_PACKET);
 800ec7e:	fb05 f303 	mul.w	r3, r5, r3

    /* Prepare EP to Receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, hmsc->bot_data, len);
 800ec82:	491a      	ldr	r1, [pc, #104]	; (800ecec <SCSI_ProcessWrite+0xd8>)
 800ec84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ec88:	7809      	ldrb	r1, [r1, #0]
 800ec8a:	bf28      	it	cs
 800ec8c:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800ec90:	4642      	mov	r2, r8
 800ec92:	4638      	mov	r0, r7
 800ec94:	f7f3 fa52 	bl	800213c <USBD_LL_PrepareReceive>
  }

  return 0;
 800ec98:	2000      	movs	r0, #0
}
 800ec9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MSC_BOT_SendCSW(pdev, USBD_CSW_CMD_PASSED);
 800ec9e:	4638      	mov	r0, r7
 800eca0:	4629      	mov	r1, r5
 800eca2:	f7ff fe63 	bl	800e96c <MSC_BOT_SendCSW>
  return 0;
 800eca6:	4628      	mov	r0, r5
}
 800eca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ecac:	f8d7 32d4 	ldr.w	r3, [r7, #724]	; 0x2d4
 800ecb0:	33b0      	adds	r3, #176	; 0xb0
 800ecb2:	f857 2023 	ldr.w	r2, [r7, r3, lsl #2]
  if (hmsc == NULL)
 800ecb6:	b1aa      	cbz	r2, 800ece4 <SCSI_ProcessWrite+0xd0>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ecb8:	f892 3261 	ldrb.w	r3, [r2, #609]	; 0x261
 800ecbc:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800ecc0:	3301      	adds	r3, #1
 800ecc2:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ecc4:	2504      	movs	r5, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ecc6:	2000      	movs	r0, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800ecc8:	42ab      	cmp	r3, r5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ecca:	f04f 0403 	mov.w	r4, #3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ecce:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ecd2:	f881 4244 	strb.w	r4, [r1, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ecd6:	f881 0245 	strb.w	r0, [r1, #581]	; 0x245
  hmsc->scsi_sense_tail++;
 800ecda:	bf14      	ite	ne
 800ecdc:	f882 3261 	strbne.w	r3, [r2, #609]	; 0x261
    hmsc->scsi_sense_tail = 0U;
 800ece0:	f882 0261 	strbeq.w	r0, [r2, #609]	; 0x261
    return -1;
 800ece4:	f04f 30ff 	mov.w	r0, #4294967295
 800ece8:	e7d7      	b.n	800ec9a <SCSI_ProcessWrite+0x86>
 800ecea:	bf00      	nop
 800ecec:	200000c9 	.word	0x200000c9

0800ecf0 <SCSI_UpdateBotData.part.0>:
    return -1;
  }

  hmsc->bot_data_length = len;

  while (len != 0U)
 800ecf0:	b15a      	cbz	r2, 800ed0a <SCSI_UpdateBotData.part.0+0x1a>
 800ecf2:	3a01      	subs	r2, #1
 800ecf4:	b292      	uxth	r2, r2
 800ecf6:	1c53      	adds	r3, r2, #1
 800ecf8:	3210      	adds	r2, #16
 800ecfa:	440b      	add	r3, r1
 800ecfc:	4410      	add	r0, r2
  {
    len--;
    hmsc->bot_data[len] = pBuff[len];
 800ecfe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ed02:	f800 2901 	strb.w	r2, [r0], #-1
  while (len != 0U)
 800ed06:	428b      	cmp	r3, r1
 800ed08:	d1f9      	bne.n	800ecfe <SCSI_UpdateBotData.part.0+0xe>
  }

  return 0;
}
 800ed0a:	2000      	movs	r0, #0
 800ed0c:	4770      	bx	lr
 800ed0e:	bf00      	nop

0800ed10 <SCSI_ProcessCmd>:
{
 800ed10:	f8d0 32d4 	ldr.w	r3, [r0, #724]	; 0x2d4
 800ed14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed18:	eb00 0c83 	add.w	ip, r0, r3, lsl #2
 800ed1c:	b083      	sub	sp, #12
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ed1e:	f8dc 42c0 	ldr.w	r4, [ip, #704]	; 0x2c0
  if (hmsc == NULL)
 800ed22:	2c00      	cmp	r4, #0
 800ed24:	f000 8123 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  switch (cmd[0])
 800ed28:	7813      	ldrb	r3, [r2, #0]
 800ed2a:	2b5a      	cmp	r3, #90	; 0x5a
 800ed2c:	4605      	mov	r5, r0
 800ed2e:	4689      	mov	r9, r1
 800ed30:	4616      	mov	r6, r2
 800ed32:	d85f      	bhi.n	800edf4 <SCSI_ProcessCmd+0xe4>
 800ed34:	2b5a      	cmp	r3, #90	; 0x5a
 800ed36:	f200 80fe 	bhi.w	800ef36 <SCSI_ProcessCmd+0x226>
 800ed3a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800ed3e:	012f      	.short	0x012f
 800ed40:	00fc00fc 	.word	0x00fc00fc
 800ed44:	00fc0147 	.word	0x00fc0147
 800ed48:	00fc00fc 	.word	0x00fc00fc
 800ed4c:	00fc00fc 	.word	0x00fc00fc
 800ed50:	00fc00fc 	.word	0x00fc00fc
 800ed54:	00fc00fc 	.word	0x00fc00fc
 800ed58:	00fc00fc 	.word	0x00fc00fc
 800ed5c:	00fc00fc 	.word	0x00fc00fc
 800ed60:	017c00fc 	.word	0x017c00fc
 800ed64:	00fc00fc 	.word	0x00fc00fc
 800ed68:	00fc00fc 	.word	0x00fc00fc
 800ed6c:	00fc00fc 	.word	0x00fc00fc
 800ed70:	011b00fc 	.word	0x011b00fc
 800ed74:	00fc0195 	.word	0x00fc0195
 800ed78:	012600fc 	.word	0x012600fc
 800ed7c:	00fc00fc 	.word	0x00fc00fc
 800ed80:	00fc00fc 	.word	0x00fc00fc
 800ed84:	00fc01a9 	.word	0x00fc01a9
 800ed88:	00fc01d7 	.word	0x00fc01d7
 800ed8c:	027b00fc 	.word	0x027b00fc
 800ed90:	01fb00fc 	.word	0x01fb00fc
 800ed94:	00fc00fc 	.word	0x00fc00fc
 800ed98:	00fc00fc 	.word	0x00fc00fc
 800ed9c:	00fc0250 	.word	0x00fc0250
 800eda0:	00fc00fc 	.word	0x00fc00fc
 800eda4:	00fc00fc 	.word	0x00fc00fc
 800eda8:	00fc00fc 	.word	0x00fc00fc
 800edac:	00fc00fc 	.word	0x00fc00fc
 800edb0:	00fc00fc 	.word	0x00fc00fc
 800edb4:	00fc00fc 	.word	0x00fc00fc
 800edb8:	00fc00fc 	.word	0x00fc00fc
 800edbc:	00fc00fc 	.word	0x00fc00fc
 800edc0:	00fc00fc 	.word	0x00fc00fc
 800edc4:	00fc00fc 	.word	0x00fc00fc
 800edc8:	00fc00fc 	.word	0x00fc00fc
 800edcc:	00fc00fc 	.word	0x00fc00fc
 800edd0:	00fc00fc 	.word	0x00fc00fc
 800edd4:	00fc00fc 	.word	0x00fc00fc
 800edd8:	00fc00fc 	.word	0x00fc00fc
 800eddc:	00fc00fc 	.word	0x00fc00fc
 800ede0:	00fc00fc 	.word	0x00fc00fc
 800ede4:	00fc00fc 	.word	0x00fc00fc
 800ede8:	00fc00fc 	.word	0x00fc00fc
 800edec:	00fc00fc 	.word	0x00fc00fc
 800edf0:	00ee00fc 	.word	0x00ee00fc
 800edf4:	2ba8      	cmp	r3, #168	; 0xa8
 800edf6:	f000 8262 	beq.w	800f2be <SCSI_ProcessCmd+0x5ae>
 800edfa:	2baa      	cmp	r3, #170	; 0xaa
 800edfc:	d158      	bne.n	800eeb0 <SCSI_ProcessCmd+0x1a0>
  if (hmsc->bot_state == USBD_BOT_IDLE) /* Idle */
 800edfe:	7a27      	ldrb	r7, [r4, #8]
 800ee00:	2f00      	cmp	r7, #0
 800ee02:	f040 82c6 	bne.w	800f392 <SCSI_ProcessCmd+0x682>
    if (hmsc->cbw.dDataLength == 0U)
 800ee06:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
 800ee0a:	2b00      	cmp	r3, #0
 800ee0c:	f000 82eb 	beq.w	800f3e6 <SCSI_ProcessCmd+0x6d6>
    if ((hmsc->cbw.bmFlags & 0x80U) == 0x80U)
 800ee10:	f994 321c 	ldrsb.w	r3, [r4, #540]	; 0x21c
 800ee14:	2b00      	cmp	r3, #0
 800ee16:	f2c0 82fa 	blt.w	800f40e <SCSI_ProcessCmd+0x6fe>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800ee1a:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800ee1e:	4608      	mov	r0, r1
 800ee20:	689b      	ldr	r3, [r3, #8]
 800ee22:	4798      	blx	r3
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ee24:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800ee28:	2800      	cmp	r0, #0
 800ee2a:	f040 83c6 	bne.w	800f5ba <SCSI_ProcessCmd+0x8aa>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsWriteProtected(lun) != 0)
 800ee2e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800ee32:	4648      	mov	r0, r9
 800ee34:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 800ee38:	68db      	ldr	r3, [r3, #12]
 800ee3a:	4798      	blx	r3
 800ee3c:	4607      	mov	r7, r0
 800ee3e:	2800      	cmp	r0, #0
 800ee40:	f040 839e 	bne.w	800f580 <SCSI_ProcessCmd+0x870>
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800ee44:	f8d6 2002 	ldr.w	r2, [r6, #2]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ee48:	f8d5 12d4 	ldr.w	r1, [r5, #724]	; 0x2d4
 800ee4c:	ba12      	rev	r2, r2
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800ee4e:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800ee52:	31b0      	adds	r1, #176	; 0xb0
 800ee54:	f8d6 3006 	ldr.w	r3, [r6, #6]
 800ee58:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 800ee5c:	ba1b      	rev	r3, r3
    hmsc->scsi_blk_len = ((uint32_t)params[6] << 24) |
 800ee5e:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
  if (hmsc == NULL)
 800ee62:	2900      	cmp	r1, #0
 800ee64:	f000 8083 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  if ((blk_offset + blk_nbr) > hmsc->scsi_blk_nbr)
 800ee68:	f8d1 0268 	ldr.w	r0, [r1, #616]	; 0x268
 800ee6c:	441a      	add	r2, r3
 800ee6e:	4282      	cmp	r2, r0
 800ee70:	f200 83bb 	bhi.w	800f5ea <SCSI_ProcessCmd+0x8da>
    len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800ee74:	f8b4 0264 	ldrh.w	r0, [r4, #612]	; 0x264
    if (hmsc->cbw.dDataLength != len)
 800ee78:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
    len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800ee7c:	fb03 f300 	mul.w	r3, r3, r0
    if (hmsc->cbw.dDataLength != len)
 800ee80:	4293      	cmp	r3, r2
 800ee82:	f000 819d 	beq.w	800f1c0 <SCSI_ProcessCmd+0x4b0>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ee86:	f891 3261 	ldrb.w	r3, [r1, #609]	; 0x261
 800ee8a:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800ee8e:	3301      	adds	r3, #1
 800ee90:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ee92:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ee94:	2420      	movs	r4, #32
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ee96:	2000      	movs	r0, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800ee98:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ee9a:	f882 5240 	strb.w	r5, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ee9e:	f882 4244 	strb.w	r4, [r2, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800eea2:	f882 0245 	strb.w	r0, [r2, #581]	; 0x245
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800eea6:	f000 833d 	beq.w	800f524 <SCSI_ProcessCmd+0x814>
  hmsc->scsi_sense_tail++;
 800eeaa:	f881 3261 	strb.w	r3, [r1, #609]	; 0x261
 800eeae:	e05e      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
  switch (cmd[0])
 800eeb0:	2b9e      	cmp	r3, #158	; 0x9e
 800eeb2:	d140      	bne.n	800ef36 <SCSI_ProcessCmd+0x226>
  ret = ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->GetCapacity(lun, &hmsc->scsi_blk_nbr, &hmsc->scsi_blk_size);
 800eeb4:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800eeb8:	4608      	mov	r0, r1
 800eeba:	685b      	ldr	r3, [r3, #4]
 800eebc:	f504 7219 	add.w	r2, r4, #612	; 0x264
 800eec0:	f504 711a 	add.w	r1, r4, #616	; 0x268
 800eec4:	4798      	blx	r3
  if ((ret != 0) || (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED))
 800eec6:	4607      	mov	r7, r0
 800eec8:	2800      	cmp	r0, #0
 800eeca:	f040 8268 	bne.w	800f39e <SCSI_ProcessCmd+0x68e>
 800eece:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800eed2:	2b02      	cmp	r3, #2
 800eed4:	f000 8263 	beq.w	800f39e <SCSI_ProcessCmd+0x68e>
  hmsc->bot_data_length = ((uint32_t)params[10] << 24) |
 800eed8:	f8d6 100a 	ldr.w	r1, [r6, #10]
 800eedc:	ba09      	rev	r1, r1
 800eede:	60e1      	str	r1, [r4, #12]
  for (idx = 0U; idx < hmsc->bot_data_length; idx++)
 800eee0:	b131      	cbz	r1, 800eef0 <SCSI_ProcessCmd+0x1e0>
 800eee2:	4603      	mov	r3, r0
    hmsc->bot_data[idx] = 0U;
 800eee4:	18e2      	adds	r2, r4, r3
  for (idx = 0U; idx < hmsc->bot_data_length; idx++)
 800eee6:	3301      	adds	r3, #1
 800eee8:	b2db      	uxtb	r3, r3
 800eeea:	4299      	cmp	r1, r3
    hmsc->bot_data[idx] = 0U;
 800eeec:	7410      	strb	r0, [r2, #16]
  for (idx = 0U; idx < hmsc->bot_data_length; idx++)
 800eeee:	d8f9      	bhi.n	800eee4 <SCSI_ProcessCmd+0x1d4>
  hmsc->bot_data[4] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 24);
 800eef0:	f8d4 3268 	ldr.w	r3, [r4, #616]	; 0x268
 800eef4:	f8b4 2264 	ldrh.w	r2, [r4, #612]	; 0x264
 800eef8:	3b01      	subs	r3, #1
 800eefa:	0e19      	lsrs	r1, r3, #24
 800eefc:	7521      	strb	r1, [r4, #20]
  hmsc->bot_data[5] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 16);
 800eefe:	0c19      	lsrs	r1, r3, #16
  hmsc->bot_data[7] = (uint8_t)(hmsc->scsi_blk_nbr - 1U);
 800ef00:	75e3      	strb	r3, [r4, #23]
  hmsc->bot_data[5] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 16);
 800ef02:	7561      	strb	r1, [r4, #21]
  hmsc->bot_data[6] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >>  8);
 800ef04:	0a1b      	lsrs	r3, r3, #8
 800ef06:	ba52      	rev16	r2, r2
  hmsc->bot_data[8] = (uint8_t)(hmsc->scsi_blk_size >>  24);
 800ef08:	2100      	movs	r1, #0
  hmsc->bot_data[6] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >>  8);
 800ef0a:	75a3      	strb	r3, [r4, #22]
  hmsc->bot_data[10] = (uint8_t)(hmsc->scsi_blk_size >>  8);
 800ef0c:	8362      	strh	r2, [r4, #26]
  hmsc->bot_data[8] = (uint8_t)(hmsc->scsi_blk_size >>  24);
 800ef0e:	8321      	strh	r1, [r4, #24]
  hmsc->bot_data_length = ((uint32_t)params[10] << 24) |
 800ef10:	f8d6 300a 	ldr.w	r3, [r6, #10]
 800ef14:	ba1b      	rev	r3, r3
 800ef16:	60e3      	str	r3, [r4, #12]
  return 0;
 800ef18:	e009      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (params[8] <= len)
 800ef1a:	7a32      	ldrb	r2, [r6, #8]
 800ef1c:	49c1      	ldr	r1, [pc, #772]	; (800f224 <SCSI_ProcessCmd+0x514>)
 800ef1e:	2a1b      	cmp	r2, #27
 800ef20:	bf28      	it	cs
 800ef22:	221b      	movcs	r2, #27
  hmsc->bot_data_length = len;
 800ef24:	60e2      	str	r2, [r4, #12]
  while (len != 0U)
 800ef26:	4620      	mov	r0, r4
 800ef28:	f7ff fee2 	bl	800ecf0 <SCSI_UpdateBotData.part.0>
      ret = SCSI_ModeSense10(pdev, lun, cmd);
 800ef2c:	2700      	movs	r7, #0
}
 800ef2e:	4638      	mov	r0, r7
 800ef30:	b003      	add	sp, #12
 800ef32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ef36:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800ef3a:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800ef3e:	3301      	adds	r3, #1
 800ef40:	b2db      	uxtb	r3, r3
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800ef42:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ef44:	f04f 0100 	mov.w	r1, #0
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ef48:	f04f 0505 	mov.w	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ef4c:	f04f 0020 	mov.w	r0, #32
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800ef50:	f882 5240 	strb.w	r5, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800ef54:	f882 0244 	strb.w	r0, [r2, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800ef58:	f882 1245 	strb.w	r1, [r2, #581]	; 0x245
  hmsc->scsi_sense_tail++;
 800ef5c:	bf18      	it	ne
 800ef5e:	f884 3261 	strbne.w	r3, [r4, #609]	; 0x261
      hmsc->bot_status = USBD_BOT_STATUS_ERROR;
 800ef62:	f04f 0302 	mov.w	r3, #2
    hmsc->scsi_sense_tail = 0U;
 800ef66:	bf08      	it	eq
 800ef68:	f884 1261 	strbeq.w	r1, [r4, #609]	; 0x261
      hmsc->bot_status = USBD_BOT_STATUS_ERROR;
 800ef6c:	7263      	strb	r3, [r4, #9]
      ret = -1;
 800ef6e:	f04f 37ff 	mov.w	r7, #4294967295
      break;
 800ef72:	e7dc      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (params[4] <= len)
 800ef74:	7932      	ldrb	r2, [r6, #4]
 800ef76:	49ac      	ldr	r1, [pc, #688]	; (800f228 <SCSI_ProcessCmd+0x518>)
 800ef78:	2a17      	cmp	r2, #23
 800ef7a:	bf28      	it	cs
 800ef7c:	2217      	movcs	r2, #23
  hmsc->bot_data_length = len;
 800ef7e:	60e2      	str	r2, [r4, #12]
  while (len != 0U)
 800ef80:	4620      	mov	r0, r4
 800ef82:	f7ff feb5 	bl	800ecf0 <SCSI_UpdateBotData.part.0>
      ret = SCSI_ModeSense6(pdev, lun, cmd);
 800ef86:	2700      	movs	r7, #0
      break;
 800ef88:	e7d1      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (params[4] == 0U)
 800ef8a:	7933      	ldrb	r3, [r6, #4]
  hmsc->bot_data_length = 0U;
 800ef8c:	2700      	movs	r7, #0
  if (params[4] == 0U)
 800ef8e:	1bdb      	subs	r3, r3, r7
 800ef90:	bf18      	it	ne
 800ef92:	2301      	movne	r3, #1
 800ef94:	f884 3262 	strb.w	r3, [r4, #610]	; 0x262
  hmsc->bot_data_length = 0U;
 800ef98:	60e7      	str	r7, [r4, #12]
      break;
 800ef9a:	e7c8      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (hmsc->cbw.dDataLength != 0U)
 800ef9c:	f8d4 6218 	ldr.w	r6, [r4, #536]	; 0x218
 800efa0:	2e00      	cmp	r6, #0
 800efa2:	f040 82e3 	bne.w	800f56c <SCSI_ProcessCmd+0x85c>
  if (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED)
 800efa6:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800efaa:	2b02      	cmp	r3, #2
 800efac:	f000 8390 	beq.w	800f6d0 <SCSI_ProcessCmd+0x9c0>
  if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800efb0:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800efb4:	4608      	mov	r0, r1
 800efb6:	689b      	ldr	r3, [r3, #8]
 800efb8:	4798      	blx	r3
 800efba:	4607      	mov	r7, r0
 800efbc:	2800      	cmp	r0, #0
 800efbe:	f040 82b6 	bne.w	800f52e <SCSI_ProcessCmd+0x81e>
}
 800efc2:	4638      	mov	r0, r7
  hmsc->bot_data_length = 0U;
 800efc4:	60e7      	str	r7, [r4, #12]
}
 800efc6:	b003      	add	sp, #12
 800efc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (hmsc->cbw.dDataLength == 0U)
 800efcc:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
 800efd0:	2b00      	cmp	r3, #0
 800efd2:	f000 8208 	beq.w	800f3e6 <SCSI_ProcessCmd+0x6d6>
 800efd6:	f104 030f 	add.w	r3, r4, #15
 800efda:	f104 0121 	add.w	r1, r4, #33	; 0x21
    hmsc->bot_data[i] = 0U;
 800efde:	2200      	movs	r2, #0
 800efe0:	f803 2f01 	strb.w	r2, [r3, #1]!
  for (i = 0U; i < REQUEST_SENSE_DATA_LEN; i++)
 800efe4:	428b      	cmp	r3, r1
 800efe6:	d1fb      	bne.n	800efe0 <SCSI_ProcessCmd+0x2d0>
  if ((hmsc->scsi_sense_head != hmsc->scsi_sense_tail))
 800efe8:	f894 3260 	ldrb.w	r3, [r4, #608]	; 0x260
 800efec:	f894 1261 	ldrb.w	r1, [r4, #609]	; 0x261
  hmsc->bot_data[0] = 0x70U;
 800eff0:	2070      	movs	r0, #112	; 0x70
 800eff2:	7420      	strb	r0, [r4, #16]
  if ((hmsc->scsi_sense_head != hmsc->scsi_sense_tail))
 800eff4:	4299      	cmp	r1, r3
  hmsc->bot_data[7] = REQUEST_SENSE_DATA_LEN - 6U;
 800eff6:	f04f 000c 	mov.w	r0, #12
 800effa:	75e0      	strb	r0, [r4, #23]
  if ((hmsc->scsi_sense_head != hmsc->scsi_sense_tail))
 800effc:	d012      	beq.n	800f024 <SCSI_ProcessCmd+0x314>
    hmsc->bot_data[2] = (uint8_t)hmsc->scsi_sense[hmsc->scsi_sense_head].Skey;
 800effe:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
    hmsc->scsi_sense_head++;
 800f002:	3301      	adds	r3, #1
    hmsc->bot_data[2] = (uint8_t)hmsc->scsi_sense[hmsc->scsi_sense_head].Skey;
 800f004:	f891 0240 	ldrb.w	r0, [r1, #576]	; 0x240
 800f008:	74a0      	strb	r0, [r4, #18]
    hmsc->bot_data[12] = (uint8_t)hmsc->scsi_sense[hmsc->scsi_sense_head].w.b.ASC;
 800f00a:	f891 0244 	ldrb.w	r0, [r1, #580]	; 0x244
 800f00e:	7720      	strb	r0, [r4, #28]
    hmsc->scsi_sense_head++;
 800f010:	b2db      	uxtb	r3, r3
    hmsc->bot_data[13] = (uint8_t)hmsc->scsi_sense[hmsc->scsi_sense_head].w.b.ASCQ;
 800f012:	f891 1245 	ldrb.w	r1, [r1, #581]	; 0x245
 800f016:	7761      	strb	r1, [r4, #29]
    if (hmsc->scsi_sense_head == SENSE_LIST_DEEPTH)
 800f018:	2b04      	cmp	r3, #4
    hmsc->scsi_sense_head++;
 800f01a:	bf14      	ite	ne
 800f01c:	f884 3260 	strbne.w	r3, [r4, #608]	; 0x260
      hmsc->scsi_sense_head = 0U;
 800f020:	f884 2260 	strbeq.w	r2, [r4, #608]	; 0x260
  hmsc->bot_data_length = REQUEST_SENSE_DATA_LEN;
 800f024:	2312      	movs	r3, #18
 800f026:	60e3      	str	r3, [r4, #12]
  if (params[4] <= REQUEST_SENSE_DATA_LEN)
 800f028:	7933      	ldrb	r3, [r6, #4]
 800f02a:	2b12      	cmp	r3, #18
 800f02c:	f200 8192 	bhi.w	800f354 <SCSI_ProcessCmd+0x644>
    hmsc->bot_data_length = params[4];
 800f030:	60e3      	str	r3, [r4, #12]
  return 0;
 800f032:	2700      	movs	r7, #0
 800f034:	e77b      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (hmsc->cbw.dDataLength == 0U)
 800f036:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
 800f03a:	2b00      	cmp	r3, #0
 800f03c:	f000 81d3 	beq.w	800f3e6 <SCSI_ProcessCmd+0x6d6>
  if ((params[1] & 0x01U) != 0U) /* Evpd is set */
 800f040:	7877      	ldrb	r7, [r6, #1]
 800f042:	f017 0001 	ands.w	r0, r7, #1
 800f046:	f000 8191 	beq.w	800f36c <SCSI_ProcessCmd+0x65c>
    if (params[2] == 0U) /* Request for Supported Vital Product Data Pages*/
 800f04a:	78b7      	ldrb	r7, [r6, #2]
 800f04c:	2f00      	cmp	r7, #0
 800f04e:	f000 81c3 	beq.w	800f3d8 <SCSI_ProcessCmd+0x6c8>
    else if (params[2] == 0x80U) /* Request for VPD page 0x80 Unit Serial Number */
 800f052:	2f80      	cmp	r7, #128	; 0x80
 800f054:	f040 8208 	bne.w	800f468 <SCSI_ProcessCmd+0x758>
  hmsc->bot_data_length = len;
 800f058:	2208      	movs	r2, #8
 800f05a:	4974      	ldr	r1, [pc, #464]	; (800f22c <SCSI_ProcessCmd+0x51c>)
 800f05c:	60e2      	str	r2, [r4, #12]
  while (len != 0U)
 800f05e:	4620      	mov	r0, r4
 800f060:	f7ff fe46 	bl	800ecf0 <SCSI_UpdateBotData.part.0>
  return 0;
 800f064:	2700      	movs	r7, #0
 800f066:	e762      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if ((hmsc->scsi_medium_state == SCSI_MEDIUM_LOCKED) && ((params[4] & 0x3U) == 2U))
 800f068:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800f06c:	2b01      	cmp	r3, #1
 800f06e:	7933      	ldrb	r3, [r6, #4]
 800f070:	f003 0303 	and.w	r3, r3, #3
 800f074:	f000 8170 	beq.w	800f358 <SCSI_ProcessCmd+0x648>
  if ((params[4] & 0x3U) == 0x1U) /* START=1 */
 800f078:	2b01      	cmp	r3, #1
 800f07a:	f000 8173 	beq.w	800f364 <SCSI_ProcessCmd+0x654>
  else if ((params[4] & 0x3U) == 0x2U) /* START=0 and LOEJ Load Eject=1 */
 800f07e:	2b02      	cmp	r3, #2
 800f080:	f000 8171 	beq.w	800f366 <SCSI_ProcessCmd+0x656>
  else if ((params[4] & 0x3U) == 0x3U) /* START=1 and LOEJ Load Eject=1 */
 800f084:	2b03      	cmp	r3, #3
 800f086:	f000 816d 	beq.w	800f364 <SCSI_ProcessCmd+0x654>
  hmsc->bot_data_length = 0U;
 800f08a:	2700      	movs	r7, #0
 800f08c:	60e7      	str	r7, [r4, #12]
  return 0;
 800f08e:	e74e      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  ret = ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->GetCapacity(lun, &blk_nbr, &blk_size);
 800f090:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f094:	4608      	mov	r0, r1
 800f096:	685b      	ldr	r3, [r3, #4]
 800f098:	f10d 0202 	add.w	r2, sp, #2
 800f09c:	a901      	add	r1, sp, #4
 800f09e:	4798      	blx	r3
  if ((ret != 0) || (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED))
 800f0a0:	4607      	mov	r7, r0
 800f0a2:	2800      	cmp	r0, #0
 800f0a4:	f040 817b 	bne.w	800f39e <SCSI_ProcessCmd+0x68e>
 800f0a8:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800f0ac:	2b02      	cmp	r3, #2
 800f0ae:	f000 8176 	beq.w	800f39e <SCSI_ProcessCmd+0x68e>
 800f0b2:	f104 030f 	add.w	r3, r4, #15
 800f0b6:	f104 011b 	add.w	r1, r4, #27
    hmsc->bot_data[i] = 0U;
 800f0ba:	4602      	mov	r2, r0
 800f0bc:	f803 2f01 	strb.w	r2, [r3, #1]!
  for (i = 0U; i < 12U ; i++)
 800f0c0:	428b      	cmp	r3, r1
 800f0c2:	d1fb      	bne.n	800f0bc <SCSI_ProcessCmd+0x3ac>
  hmsc->bot_data[4] = (uint8_t)((blk_nbr - 1U) >> 24);
 800f0c4:	9b01      	ldr	r3, [sp, #4]
 800f0c6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800f0ca:	3b01      	subs	r3, #1
 800f0cc:	0e18      	lsrs	r0, r3, #24
  hmsc->bot_data[5] = (uint8_t)((blk_nbr - 1U) >> 16);
 800f0ce:	0c19      	lsrs	r1, r3, #16
  hmsc->bot_data[7] = (uint8_t)(blk_nbr - 1U);
 800f0d0:	75e3      	strb	r3, [r4, #23]
  hmsc->bot_data[6] = (uint8_t)((blk_nbr - 1U) >>  8);
 800f0d2:	0a1b      	lsrs	r3, r3, #8
 800f0d4:	ba52      	rev16	r2, r2
  hmsc->bot_data[4] = (uint8_t)((blk_nbr - 1U) >> 24);
 800f0d6:	7520      	strb	r0, [r4, #20]
  hmsc->bot_data[5] = (uint8_t)((blk_nbr - 1U) >> 16);
 800f0d8:	7561      	strb	r1, [r4, #21]
  hmsc->bot_data[3] = 0x08U;
 800f0da:	2008      	movs	r0, #8
  hmsc->bot_data[8] = 0x02U;
 800f0dc:	2102      	movs	r1, #2
  hmsc->bot_data[6] = (uint8_t)((blk_nbr - 1U) >>  8);
 800f0de:	75a3      	strb	r3, [r4, #22]
  hmsc->bot_data_length = 12U;
 800f0e0:	230c      	movs	r3, #12
  hmsc->bot_data[10] = (uint8_t)(blk_size >>  8);
 800f0e2:	8362      	strh	r2, [r4, #26]
  hmsc->bot_data[3] = 0x08U;
 800f0e4:	74e0      	strb	r0, [r4, #19]
  hmsc->bot_data[8] = 0x02U;
 800f0e6:	8321      	strh	r1, [r4, #24]
  hmsc->bot_data_length = 12U;
 800f0e8:	60e3      	str	r3, [r4, #12]
      break;
 800f0ea:	e720      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  ret = ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->GetCapacity(lun, &hmsc->scsi_blk_nbr, &hmsc->scsi_blk_size);
 800f0ec:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f0f0:	4608      	mov	r0, r1
 800f0f2:	685b      	ldr	r3, [r3, #4]
 800f0f4:	f504 7219 	add.w	r2, r4, #612	; 0x264
 800f0f8:	f504 711a 	add.w	r1, r4, #616	; 0x268
 800f0fc:	4798      	blx	r3
  if ((ret != 0) || (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED))
 800f0fe:	4607      	mov	r7, r0
 800f100:	2800      	cmp	r0, #0
 800f102:	f040 814c 	bne.w	800f39e <SCSI_ProcessCmd+0x68e>
 800f106:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800f10a:	2b02      	cmp	r3, #2
 800f10c:	f000 8147 	beq.w	800f39e <SCSI_ProcessCmd+0x68e>
  hmsc->bot_data[0] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 24);
 800f110:	f8d4 3268 	ldr.w	r3, [r4, #616]	; 0x268
 800f114:	f8b4 2264 	ldrh.w	r2, [r4, #612]	; 0x264
  hmsc->bot_data[4] = (uint8_t)(hmsc->scsi_blk_size >>  24);
 800f118:	82a0      	strh	r0, [r4, #20]
  hmsc->bot_data[0] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 24);
 800f11a:	3b01      	subs	r3, #1
 800f11c:	0e19      	lsrs	r1, r3, #24
  hmsc->bot_data[1] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 16);
 800f11e:	0c18      	lsrs	r0, r3, #16
 800f120:	ba52      	rev16	r2, r2
  hmsc->bot_data[3] = (uint8_t)(hmsc->scsi_blk_nbr - 1U);
 800f122:	74e3      	strb	r3, [r4, #19]
  hmsc->bot_data[0] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 24);
 800f124:	7421      	strb	r1, [r4, #16]
  hmsc->bot_data[2] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >>  8);
 800f126:	0a1b      	lsrs	r3, r3, #8
  hmsc->bot_data_length = 8U;
 800f128:	2108      	movs	r1, #8
  hmsc->bot_data[1] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >> 16);
 800f12a:	7460      	strb	r0, [r4, #17]
  hmsc->bot_data[2] = (uint8_t)((hmsc->scsi_blk_nbr - 1U) >>  8);
 800f12c:	74a3      	strb	r3, [r4, #18]
  hmsc->bot_data[6] = (uint8_t)(hmsc->scsi_blk_size >>  8);
 800f12e:	82e2      	strh	r2, [r4, #22]
  hmsc->bot_data_length = 8U;
 800f130:	60e1      	str	r1, [r4, #12]
  return 0;
 800f132:	e6fc      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if (hmsc->bot_state == USBD_BOT_IDLE) /* Idle */
 800f134:	7a27      	ldrb	r7, [r4, #8]
 800f136:	2f00      	cmp	r7, #0
 800f138:	f040 812b 	bne.w	800f392 <SCSI_ProcessCmd+0x682>
    if (hmsc->cbw.dDataLength == 0U)
 800f13c:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
 800f140:	2b00      	cmp	r3, #0
 800f142:	f000 8150 	beq.w	800f3e6 <SCSI_ProcessCmd+0x6d6>
    if ((hmsc->cbw.bmFlags & 0x80U) == 0x80U)
 800f146:	f994 321c 	ldrsb.w	r3, [r4, #540]	; 0x21c
 800f14a:	2b00      	cmp	r3, #0
 800f14c:	f2c0 815f 	blt.w	800f40e <SCSI_ProcessCmd+0x6fe>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800f150:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f154:	4608      	mov	r0, r1
 800f156:	689b      	ldr	r3, [r3, #8]
 800f158:	4798      	blx	r3
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f15a:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800f15e:	4680      	mov	r8, r0
 800f160:	2800      	cmp	r0, #0
 800f162:	f040 824c 	bne.w	800f5fe <SCSI_ProcessCmd+0x8ee>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsWriteProtected(lun) != 0)
 800f166:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800f16a:	4648      	mov	r0, r9
 800f16c:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 800f170:	68db      	ldr	r3, [r3, #12]
 800f172:	4798      	blx	r3
 800f174:	4607      	mov	r7, r0
 800f176:	2800      	cmp	r0, #0
 800f178:	f040 8252 	bne.w	800f620 <SCSI_ProcessCmd+0x910>
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f17c:	f8d6 2002 	ldr.w	r2, [r6, #2]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f180:	f8d5 12d4 	ldr.w	r1, [r5, #724]	; 0x2d4
 800f184:	ba12      	rev	r2, r2
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f186:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
    hmsc->scsi_blk_len = ((uint32_t)params[7] << 8) |
 800f18a:	f8b6 3007 	ldrh.w	r3, [r6, #7]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f18e:	31b0      	adds	r1, #176	; 0xb0
 800f190:	ba5b      	rev16	r3, r3
 800f192:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 800f196:	b29b      	uxth	r3, r3
    hmsc->scsi_blk_len = ((uint32_t)params[7] << 8) |
 800f198:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
  if (hmsc == NULL)
 800f19c:	2900      	cmp	r1, #0
 800f19e:	f43f aee6 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  if ((blk_offset + blk_nbr) > hmsc->scsi_blk_nbr)
 800f1a2:	f8d1 0268 	ldr.w	r0, [r1, #616]	; 0x268
 800f1a6:	441a      	add	r2, r3
 800f1a8:	4282      	cmp	r2, r0
 800f1aa:	f200 822f 	bhi.w	800f60c <SCSI_ProcessCmd+0x8fc>
    len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800f1ae:	f8b4 0264 	ldrh.w	r0, [r4, #612]	; 0x264
    if (hmsc->cbw.dDataLength != len)
 800f1b2:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
    len = hmsc->scsi_blk_len * hmsc->scsi_blk_size;
 800f1b6:	fb03 f300 	mul.w	r3, r3, r0
    if (hmsc->cbw.dDataLength != len)
 800f1ba:	4293      	cmp	r3, r2
 800f1bc:	f040 813e 	bne.w	800f43c <SCSI_ProcessCmd+0x72c>
    (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, hmsc->bot_data, len);
 800f1c0:	491b      	ldr	r1, [pc, #108]	; (800f230 <SCSI_ProcessCmd+0x520>)
    hmsc->bot_state = USBD_BOT_DATA_OUT;
 800f1c2:	2201      	movs	r2, #1
    (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, hmsc->bot_data, len);
 800f1c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    hmsc->bot_state = USBD_BOT_DATA_OUT;
 800f1c8:	7222      	strb	r2, [r4, #8]
    (void)USBD_LL_PrepareReceive(pdev, MSCOutEpAdd, hmsc->bot_data, len);
 800f1ca:	7809      	ldrb	r1, [r1, #0]
 800f1cc:	bf28      	it	cs
 800f1ce:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800f1d2:	4628      	mov	r0, r5
 800f1d4:	f104 0210 	add.w	r2, r4, #16
 800f1d8:	f7f2 ffb0 	bl	800213c <USBD_LL_PrepareReceive>
  return 0;
 800f1dc:	e6a7      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if ((params[1] & 0x02U) == 0x02U)
 800f1de:	7877      	ldrb	r7, [r6, #1]
 800f1e0:	f017 0702 	ands.w	r7, r7, #2
 800f1e4:	f040 8157 	bne.w	800f496 <SCSI_ProcessCmd+0x786>
  if ((blk_offset + blk_nbr) > hmsc->scsi_blk_nbr)
 800f1e8:	e9d4 319b 	ldrd	r3, r1, [r4, #620]	; 0x26c
 800f1ec:	f8d4 2268 	ldr.w	r2, [r4, #616]	; 0x268
 800f1f0:	440b      	add	r3, r1
 800f1f2:	4293      	cmp	r3, r2
 800f1f4:	f67f aee5 	bls.w	800efc2 <SCSI_ProcessCmd+0x2b2>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f1f8:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800f1fc:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f1fe:	3301      	adds	r3, #1
 800f200:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800f204:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f206:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f208:	2121      	movs	r1, #33	; 0x21
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f20a:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f20c:	f882 7245 	strb.w	r7, [r2, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f210:	f882 5240 	strb.w	r5, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f214:	f882 1244 	strb.w	r1, [r2, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f218:	f000 810b 	beq.w	800f432 <SCSI_ProcessCmd+0x722>
  hmsc->scsi_sense_tail++;
 800f21c:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
 800f220:	e6a5      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
 800f222:	bf00      	nop
 800f224:	20000130 	.word	0x20000130
 800f228:	2000014c 	.word	0x2000014c
 800f22c:	2000016c 	.word	0x2000016c
 800f230:	200000c9 	.word	0x200000c9
  if (hmsc->bot_state == USBD_BOT_IDLE) /* Idle */
 800f234:	7a27      	ldrb	r7, [r4, #8]
 800f236:	bbb7      	cbnz	r7, 800f2a6 <SCSI_ProcessCmd+0x596>
    if ((hmsc->cbw.bmFlags & 0x80U) != 0x80U)
 800f238:	f994 321c 	ldrsb.w	r3, [r4, #540]	; 0x21c
 800f23c:	2b00      	cmp	r3, #0
 800f23e:	f280 80e6 	bge.w	800f40e <SCSI_ProcessCmd+0x6fe>
    if (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED)
 800f242:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800f246:	2b02      	cmp	r3, #2
 800f248:	f000 8213 	beq.w	800f672 <SCSI_ProcessCmd+0x962>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800f24c:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f250:	4608      	mov	r0, r1
 800f252:	689b      	ldr	r3, [r3, #8]
 800f254:	4798      	blx	r3
 800f256:	2800      	cmp	r0, #0
 800f258:	f040 8145 	bne.w	800f4e6 <SCSI_ProcessCmd+0x7d6>
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f25c:	f8d6 2002 	ldr.w	r2, [r6, #2]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f260:	f8d5 72d4 	ldr.w	r7, [r5, #724]	; 0x2d4
 800f264:	ba12      	rev	r2, r2
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f266:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
    hmsc->scsi_blk_len = ((uint32_t)params[7] <<  8) | (uint32_t)params[8];
 800f26a:	f8b6 3007 	ldrh.w	r3, [r6, #7]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f26e:	f107 06b0 	add.w	r6, r7, #176	; 0xb0
 800f272:	ba5b      	rev16	r3, r3
 800f274:	f855 7026 	ldr.w	r7, [r5, r6, lsl #2]
 800f278:	b29b      	uxth	r3, r3
    hmsc->scsi_blk_len = ((uint32_t)params[7] <<  8) | (uint32_t)params[8];
 800f27a:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
  if (hmsc == NULL)
 800f27e:	2f00      	cmp	r7, #0
 800f280:	f43f ae75 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  if ((blk_offset + blk_nbr) > hmsc->scsi_blk_nbr)
 800f284:	f8d7 6268 	ldr.w	r6, [r7, #616]	; 0x268
 800f288:	441a      	add	r2, r3
 800f28a:	42b2      	cmp	r2, r6
 800f28c:	f200 81e7 	bhi.w	800f65e <SCSI_ProcessCmd+0x94e>
    if (hmsc->cbw.dDataLength != (hmsc->scsi_blk_len * hmsc->scsi_blk_size))
 800f290:	f8b4 6264 	ldrh.w	r6, [r4, #612]	; 0x264
 800f294:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
 800f298:	fb03 f306 	mul.w	r3, r3, r6
 800f29c:	429a      	cmp	r2, r3
 800f29e:	f040 810b 	bne.w	800f4b8 <SCSI_ProcessCmd+0x7a8>
    hmsc->bot_state = USBD_BOT_DATA_IN;
 800f2a2:	2302      	movs	r3, #2
 800f2a4:	7223      	strb	r3, [r4, #8]
  hmsc->bot_data_length = MSC_MEDIA_PACKET;
 800f2a6:	f44f 7300 	mov.w	r3, #512	; 0x200
  return SCSI_ProcessRead(pdev, lun);
 800f2aa:	4649      	mov	r1, r9
 800f2ac:	4628      	mov	r0, r5
  hmsc->bot_data_length = MSC_MEDIA_PACKET;
 800f2ae:	60e3      	str	r3, [r4, #12]
  return SCSI_ProcessRead(pdev, lun);
 800f2b0:	f7ff fc4c 	bl	800eb4c <SCSI_ProcessRead>
 800f2b4:	4607      	mov	r7, r0
}
 800f2b6:	4638      	mov	r0, r7
 800f2b8:	b003      	add	sp, #12
 800f2ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (hmsc->bot_state == USBD_BOT_IDLE) /* Idle */
 800f2be:	7a27      	ldrb	r7, [r4, #8]
 800f2c0:	2f00      	cmp	r7, #0
 800f2c2:	d1f0      	bne.n	800f2a6 <SCSI_ProcessCmd+0x596>
    if ((hmsc->cbw.bmFlags & 0x80U) != 0x80U)
 800f2c4:	f994 321c 	ldrsb.w	r3, [r4, #540]	; 0x21c
 800f2c8:	2b00      	cmp	r3, #0
 800f2ca:	f280 80a0 	bge.w	800f40e <SCSI_ProcessCmd+0x6fe>
    if (hmsc->scsi_medium_state == SCSI_MEDIUM_EJECTED)
 800f2ce:	f894 3262 	ldrb.w	r3, [r4, #610]	; 0x262
 800f2d2:	2b02      	cmp	r3, #2
 800f2d4:	f000 81cd 	beq.w	800f672 <SCSI_ProcessCmd+0x962>
    if (((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->IsReady(lun) != 0)
 800f2d8:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f2dc:	4608      	mov	r0, r1
 800f2de:	689b      	ldr	r3, [r3, #8]
 800f2e0:	4798      	blx	r3
 800f2e2:	2800      	cmp	r0, #0
 800f2e4:	f040 80ff 	bne.w	800f4e6 <SCSI_ProcessCmd+0x7d6>
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f2e8:	f8d6 2002 	ldr.w	r2, [r6, #2]
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f2ec:	f8d5 72d4 	ldr.w	r7, [r5, #724]	; 0x2d4
 800f2f0:	ba12      	rev	r2, r2
    hmsc->scsi_blk_addr = ((uint32_t)params[2] << 24) |
 800f2f2:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f2f6:	37b0      	adds	r7, #176	; 0xb0
 800f2f8:	f8d6 3006 	ldr.w	r3, [r6, #6]
 800f2fc:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 800f300:	ba1b      	rev	r3, r3
    hmsc->scsi_blk_len = ((uint32_t)params[6] << 24) |
 800f302:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
  if (hmsc == NULL)
 800f306:	2f00      	cmp	r7, #0
 800f308:	f43f ae31 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  if ((blk_offset + blk_nbr) > hmsc->scsi_blk_nbr)
 800f30c:	f8d7 6268 	ldr.w	r6, [r7, #616]	; 0x268
 800f310:	441a      	add	r2, r3
 800f312:	42b2      	cmp	r2, r6
 800f314:	f200 81bf 	bhi.w	800f696 <SCSI_ProcessCmd+0x986>
    if (hmsc->cbw.dDataLength != (hmsc->scsi_blk_len * hmsc->scsi_blk_size))
 800f318:	f8b4 0264 	ldrh.w	r0, [r4, #612]	; 0x264
 800f31c:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
 800f320:	fb03 f300 	mul.w	r3, r3, r0
 800f324:	429a      	cmp	r2, r3
 800f326:	d0bc      	beq.n	800f2a2 <SCSI_ProcessCmd+0x592>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f328:	f897 3261 	ldrb.w	r3, [r7, #609]	; 0x261
 800f32c:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f32e:	3301      	adds	r3, #1
 800f330:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800f334:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f336:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f338:	2020      	movs	r0, #32
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f33a:	2100      	movs	r1, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f33c:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f33e:	f882 4240 	strb.w	r4, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f342:	f882 0244 	strb.w	r0, [r2, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f346:	f882 1245 	strb.w	r1, [r2, #581]	; 0x245
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f34a:	f000 81bc 	beq.w	800f6c6 <SCSI_ProcessCmd+0x9b6>
  hmsc->scsi_sense_tail++;
 800f34e:	f887 3261 	strb.w	r3, [r7, #609]	; 0x261
 800f352:	e60c      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
  return 0;
 800f354:	2700      	movs	r7, #0
 800f356:	e5ea      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  if ((hmsc->scsi_medium_state == SCSI_MEDIUM_LOCKED) && ((params[4] & 0x3U) == 2U))
 800f358:	2b02      	cmp	r3, #2
 800f35a:	f000 809c 	beq.w	800f496 <SCSI_ProcessCmd+0x786>
  if ((params[4] & 0x3U) == 0x1U) /* START=1 */
 800f35e:	2b01      	cmp	r3, #1
 800f360:	f47f ae90 	bne.w	800f084 <SCSI_ProcessCmd+0x374>
    hmsc->scsi_medium_state = SCSI_MEDIUM_UNLOCKED;
 800f364:	2300      	movs	r3, #0
 800f366:	f884 3262 	strb.w	r3, [r4, #610]	; 0x262
 800f36a:	e68e      	b.n	800f08a <SCSI_ProcessCmd+0x37a>
    pPage = (uint8_t *) & ((USBD_StorageTypeDef *)pdev->pUserData[pdev->classId])->pInquiry[lun * STANDARD_INQUIRY_DATA_LEN];
 800f36c:	f8dc 32c4 	ldr.w	r3, [ip, #708]	; 0x2c4
 800f370:	7932      	ldrb	r2, [r6, #4]
 800f372:	69db      	ldr	r3, [r3, #28]
 800f374:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 800f378:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  return 0;
 800f37c:	4607      	mov	r7, r0
    len = (uint16_t)pPage[4] + 5U;
 800f37e:	790b      	ldrb	r3, [r1, #4]
 800f380:	3305      	adds	r3, #5
    if (params[4] <= len)
 800f382:	429a      	cmp	r2, r3
 800f384:	bf28      	it	cs
 800f386:	461a      	movcs	r2, r3
  hmsc->bot_data_length = len;
 800f388:	60e2      	str	r2, [r4, #12]
  while (len != 0U)
 800f38a:	4620      	mov	r0, r4
 800f38c:	f7ff fcb0 	bl	800ecf0 <SCSI_UpdateBotData.part.0>
 800f390:	e5cd      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
    return SCSI_ProcessWrite(pdev, lun);
 800f392:	4649      	mov	r1, r9
 800f394:	4628      	mov	r0, r5
 800f396:	f7ff fc3d 	bl	800ec14 <SCSI_ProcessWrite>
 800f39a:	4607      	mov	r7, r0
 800f39c:	e5c7      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f39e:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800f3a2:	33b0      	adds	r3, #176	; 0xb0
 800f3a4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f3a8:	2b00      	cmp	r3, #0
 800f3aa:	f43f ade0 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3ae:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f3b2:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f3b4:	3201      	adds	r2, #1
 800f3b6:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f3ba:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3bc:	2502      	movs	r5, #2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f3be:	243a      	movs	r4, #58	; 0x3a
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f3c0:	2000      	movs	r0, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f3c2:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3c4:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f3c8:	f881 4244 	strb.w	r4, [r1, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f3cc:	f881 0245 	strb.w	r0, [r1, #581]	; 0x245
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f3d0:	d068      	beq.n	800f4a4 <SCSI_ProcessCmd+0x794>
  hmsc->scsi_sense_tail++;
 800f3d2:	f883 2261 	strb.w	r2, [r3, #609]	; 0x261
 800f3d6:	e5ca      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->bot_data_length = len;
 800f3d8:	2206      	movs	r2, #6
 800f3da:	49ca      	ldr	r1, [pc, #808]	; (800f704 <SCSI_ProcessCmd+0x9f4>)
 800f3dc:	60e2      	str	r2, [r4, #12]
  while (len != 0U)
 800f3de:	4620      	mov	r0, r4
 800f3e0:	f7ff fc86 	bl	800ecf0 <SCSI_UpdateBotData.part.0>
 800f3e4:	e5a3      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3e6:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 800f3ea:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f3ec:	3201      	adds	r2, #1
 800f3ee:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800f3f2:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3f4:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f3f6:	2020      	movs	r0, #32
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f3f8:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f3fa:	f881 3245 	strb.w	r3, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f3fe:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f402:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f406:	d052      	beq.n	800f4ae <SCSI_ProcessCmd+0x79e>
  hmsc->scsi_sense_tail++;
 800f408:	f884 2261 	strb.w	r2, [r4, #609]	; 0x261
 800f40c:	e5af      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f40e:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800f412:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f414:	3301      	adds	r3, #1
 800f416:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800f41a:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f41c:	2005      	movs	r0, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f41e:	2120      	movs	r1, #32
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f420:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f422:	f882 7245 	strb.w	r7, [r2, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f426:	f882 0240 	strb.w	r0, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f42a:	f882 1244 	strb.w	r1, [r2, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f42e:	f47f aef5 	bne.w	800f21c <SCSI_ProcessCmd+0x50c>
    hmsc->scsi_sense_tail = 0U;
 800f432:	f884 7261 	strb.w	r7, [r4, #609]	; 0x261
    return -1; /* error */
 800f436:	f04f 37ff 	mov.w	r7, #4294967295
 800f43a:	e578      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f43c:	f891 3261 	ldrb.w	r3, [r1, #609]	; 0x261
 800f440:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800f444:	3301      	adds	r3, #1
 800f446:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f448:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f44a:	2020      	movs	r0, #32
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f44c:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f44e:	f882 7245 	strb.w	r7, [r2, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f452:	f882 4240 	strb.w	r4, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f456:	f882 0244 	strb.w	r0, [r2, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f45a:	f47f ad26 	bne.w	800eeaa <SCSI_ProcessCmd+0x19a>
    hmsc->scsi_sense_tail = 0U;
 800f45e:	f881 7261 	strb.w	r7, [r1, #609]	; 0x261
      return -1;
 800f462:	f04f 37ff 	mov.w	r7, #4294967295
 800f466:	e562      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f468:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800f46c:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
  hmsc->scsi_sense_tail++;
 800f470:	3301      	adds	r3, #1
 800f472:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f474:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f476:	2024      	movs	r0, #36	; 0x24
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f478:	2100      	movs	r1, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f47a:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f47c:	f882 5240 	strb.w	r5, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f480:	f882 0244 	strb.w	r0, [r2, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f484:	f882 1245 	strb.w	r1, [r2, #581]	; 0x245
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f488:	f47f aec8 	bne.w	800f21c <SCSI_ProcessCmd+0x50c>
    hmsc->scsi_sense_tail = 0U;
 800f48c:	f884 1261 	strb.w	r1, [r4, #609]	; 0x261
    return -1; /* Error, Verify Mode Not supported*/
 800f490:	f04f 37ff 	mov.w	r7, #4294967295
 800f494:	e54b      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f496:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800f49a:	461a      	mov	r2, r3
 800f49c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
  hmsc->scsi_sense_tail++;
 800f4a0:	3301      	adds	r3, #1
 800f4a2:	e7e6      	b.n	800f472 <SCSI_ProcessCmd+0x762>
    hmsc->scsi_sense_tail = 0U;
 800f4a4:	f883 0261 	strb.w	r0, [r3, #609]	; 0x261
    return -1;
 800f4a8:	f04f 37ff 	mov.w	r7, #4294967295
 800f4ac:	e53f      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
    hmsc->scsi_sense_tail = 0U;
 800f4ae:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
      return -1;
 800f4b2:	f04f 37ff 	mov.w	r7, #4294967295
 800f4b6:	e53a      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f4b8:	f897 3261 	ldrb.w	r3, [r7, #609]	; 0x261
 800f4bc:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f4be:	3301      	adds	r3, #1
 800f4c0:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800f4c4:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f4c6:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f4c8:	2120      	movs	r1, #32
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f4ca:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f4cc:	f882 0245 	strb.w	r0, [r2, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f4d0:	f882 4240 	strb.w	r4, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f4d4:	f882 1244 	strb.w	r1, [r2, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f4d8:	f47f af39 	bne.w	800f34e <SCSI_ProcessCmd+0x63e>
    hmsc->scsi_sense_tail = 0U;
 800f4dc:	f887 0261 	strb.w	r0, [r7, #609]	; 0x261
      return -1;
 800f4e0:	f04f 37ff 	mov.w	r7, #4294967295
 800f4e4:	e523      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f4e6:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800f4ea:	33b0      	adds	r3, #176	; 0xb0
 800f4ec:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f4f0:	2b00      	cmp	r3, #0
 800f4f2:	f43f ad3c 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f4f6:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f4fa:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f4fc:	3201      	adds	r2, #1
 800f4fe:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f502:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f504:	2402      	movs	r4, #2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f506:	203a      	movs	r0, #58	; 0x3a
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f508:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f50a:	f881 7245 	strb.w	r7, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f50e:	f881 4240 	strb.w	r4, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f512:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f516:	f47f af5c 	bne.w	800f3d2 <SCSI_ProcessCmd+0x6c2>
    hmsc->scsi_sense_tail = 0U;
 800f51a:	f883 7261 	strb.w	r7, [r3, #609]	; 0x261
      return -1;
 800f51e:	f04f 37ff 	mov.w	r7, #4294967295
 800f522:	e504      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
    hmsc->scsi_sense_tail = 0U;
 800f524:	f881 0261 	strb.w	r0, [r1, #609]	; 0x261
      return -1;
 800f528:	f04f 37ff 	mov.w	r7, #4294967295
 800f52c:	e4ff      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f52e:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800f532:	33b0      	adds	r3, #176	; 0xb0
 800f534:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f538:	b19b      	cbz	r3, 800f562 <SCSI_ProcessCmd+0x852>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f53a:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f53e:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f540:	3201      	adds	r2, #1
 800f542:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f546:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f548:	2502      	movs	r5, #2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f54a:	203a      	movs	r0, #58	; 0x3a
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f54c:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f54e:	f881 6245 	strb.w	r6, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f552:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f556:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f55a:	f000 80cf 	beq.w	800f6fc <SCSI_ProcessCmd+0x9ec>
    hmsc->scsi_sense_tail = 0U;
 800f55e:	f883 2261 	strb.w	r2, [r3, #609]	; 0x261
      hmsc->bot_state = USBD_BOT_NO_DATA;
 800f562:	2305      	movs	r3, #5
 800f564:	7223      	strb	r3, [r4, #8]
      return -1;
 800f566:	f04f 37ff 	mov.w	r7, #4294967295
 800f56a:	e4e0      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f56c:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 800f570:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f572:	3301      	adds	r3, #1
 800f574:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800f578:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f57a:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f57c:	2020      	movs	r0, #32
 800f57e:	e77b      	b.n	800f478 <SCSI_ProcessCmd+0x768>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f580:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800f584:	33b0      	adds	r3, #176	; 0xb0
 800f586:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f58a:	2b00      	cmp	r3, #0
 800f58c:	d0e9      	beq.n	800f562 <SCSI_ProcessCmd+0x852>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f58e:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f592:	4611      	mov	r1, r2
 800f594:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
  hmsc->scsi_sense_tail++;
 800f598:	3201      	adds	r2, #1
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f59a:	2002      	movs	r0, #2
  hmsc->scsi_sense_tail++;
 800f59c:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f59e:	2527      	movs	r5, #39	; 0x27
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5a0:	f881 0240 	strb.w	r0, [r1, #576]	; 0x240
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f5a4:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f5a6:	f04f 0000 	mov.w	r0, #0
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f5aa:	f881 5244 	strb.w	r5, [r1, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f5ae:	f881 0245 	strb.w	r0, [r1, #581]	; 0x245
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f5b2:	d1d4      	bne.n	800f55e <SCSI_ProcessCmd+0x84e>
    hmsc->scsi_sense_tail = 0U;
 800f5b4:	f883 0261 	strb.w	r0, [r3, #609]	; 0x261
 800f5b8:	e7d3      	b.n	800f562 <SCSI_ProcessCmd+0x852>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f5ba:	33b0      	adds	r3, #176	; 0xb0
 800f5bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f5c0:	2b00      	cmp	r3, #0
 800f5c2:	d0ce      	beq.n	800f562 <SCSI_ProcessCmd+0x852>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5c4:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f5c8:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f5ca:	3201      	adds	r2, #1
 800f5cc:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f5d0:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5d2:	2502      	movs	r5, #2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f5d4:	203a      	movs	r0, #58	; 0x3a
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f5d6:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f5d8:	f881 7245 	strb.w	r7, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5dc:	f881 5240 	strb.w	r5, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f5e0:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
    hmsc->scsi_sense_tail = 0U;
 800f5e4:	bf08      	it	eq
 800f5e6:	2200      	moveq	r2, #0
 800f5e8:	e7b9      	b.n	800f55e <SCSI_ProcessCmd+0x84e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5ea:	f891 3261 	ldrb.w	r3, [r1, #609]	; 0x261
 800f5ee:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f5f0:	3301      	adds	r3, #1
 800f5f2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800f5f6:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f5f8:	2505      	movs	r5, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f5fa:	2421      	movs	r4, #33	; 0x21
 800f5fc:	e44b      	b.n	800ee96 <SCSI_ProcessCmd+0x186>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f5fe:	33b0      	adds	r3, #176	; 0xb0
 800f600:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f604:	2b00      	cmp	r3, #0
 800f606:	f47f af76 	bne.w	800f4f6 <SCSI_ProcessCmd+0x7e6>
 800f60a:	e4b0      	b.n	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f60c:	f891 3261 	ldrb.w	r3, [r1, #609]	; 0x261
 800f610:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f612:	3301      	adds	r3, #1
 800f614:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800f618:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f61a:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f61c:	2021      	movs	r0, #33	; 0x21
 800f61e:	e715      	b.n	800f44c <SCSI_ProcessCmd+0x73c>
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f620:	f8d5 32d4 	ldr.w	r3, [r5, #724]	; 0x2d4
 800f624:	33b0      	adds	r3, #176	; 0xb0
 800f626:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
  if (hmsc == NULL)
 800f62a:	2b00      	cmp	r3, #0
 800f62c:	f43f ac9f 	beq.w	800ef6e <SCSI_ProcessCmd+0x25e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f630:	f893 2261 	ldrb.w	r2, [r3, #609]	; 0x261
 800f634:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f636:	3201      	adds	r2, #1
 800f638:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f63c:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f63e:	2402      	movs	r4, #2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f640:	2027      	movs	r0, #39	; 0x27
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f642:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f644:	f881 8245 	strb.w	r8, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f648:	f881 4240 	strb.w	r4, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f64c:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f650:	f47f aebf 	bne.w	800f3d2 <SCSI_ProcessCmd+0x6c2>
    hmsc->scsi_sense_tail = 0U;
 800f654:	f883 8261 	strb.w	r8, [r3, #609]	; 0x261
      return -1;
 800f658:	f04f 37ff 	mov.w	r7, #4294967295
 800f65c:	e467      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f65e:	f897 3261 	ldrb.w	r3, [r7, #609]	; 0x261
 800f662:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f664:	3301      	adds	r3, #1
 800f666:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800f66a:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f66c:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f66e:	2121      	movs	r1, #33	; 0x21
 800f670:	e72b      	b.n	800f4ca <SCSI_ProcessCmd+0x7ba>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f672:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 800f676:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f678:	3201      	adds	r2, #1
 800f67a:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800f67e:	b2d2      	uxtb	r2, r2
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f680:	203a      	movs	r0, #58	; 0x3a
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f682:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f684:	f881 3240 	strb.w	r3, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f688:	f881 7245 	strb.w	r7, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f68c:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f690:	f47f aeba 	bne.w	800f408 <SCSI_ProcessCmd+0x6f8>
 800f694:	e6cd      	b.n	800f432 <SCSI_ProcessCmd+0x722>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f696:	f897 3261 	ldrb.w	r3, [r7, #609]	; 0x261
 800f69a:	461a      	mov	r2, r3
  hmsc->scsi_sense_tail++;
 800f69c:	3301      	adds	r3, #1
 800f69e:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800f6a2:	b2db      	uxtb	r3, r3
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f6a4:	2405      	movs	r4, #5
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f6a6:	2121      	movs	r1, #33	; 0x21
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f6a8:	2b04      	cmp	r3, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f6aa:	f882 0245 	strb.w	r0, [r2, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f6ae:	f882 4240 	strb.w	r4, [r2, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f6b2:	f882 1244 	strb.w	r1, [r2, #580]	; 0x244
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f6b6:	f47f ae4a 	bne.w	800f34e <SCSI_ProcessCmd+0x63e>
    hmsc->scsi_sense_tail = 0U;
 800f6ba:	2300      	movs	r3, #0
 800f6bc:	f887 3261 	strb.w	r3, [r7, #609]	; 0x261
      return -1; /* error */
 800f6c0:	f04f 37ff 	mov.w	r7, #4294967295
 800f6c4:	e433      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
    hmsc->scsi_sense_tail = 0U;
 800f6c6:	f887 1261 	strb.w	r1, [r7, #609]	; 0x261
      return -1;
 800f6ca:	f04f 37ff 	mov.w	r7, #4294967295
 800f6ce:	e42e      	b.n	800ef2e <SCSI_ProcessCmd+0x21e>
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f6d0:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 800f6d4:	4611      	mov	r1, r2
  hmsc->scsi_sense_tail++;
 800f6d6:	3201      	adds	r2, #1
 800f6d8:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800f6dc:	b2d2      	uxtb	r2, r2
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f6de:	2a04      	cmp	r2, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f6e0:	f04f 003a 	mov.w	r0, #58	; 0x3a
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f6e4:	f881 3240 	strb.w	r3, [r1, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f6e8:	f881 6245 	strb.w	r6, [r1, #581]	; 0x245
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f6ec:	f881 0244 	strb.w	r0, [r1, #580]	; 0x244
  hmsc->scsi_sense_tail++;
 800f6f0:	bf14      	ite	ne
 800f6f2:	f884 2261 	strbne.w	r2, [r4, #609]	; 0x261
    hmsc->scsi_sense_tail = 0U;
 800f6f6:	f884 6261 	strbeq.w	r6, [r4, #609]	; 0x261
    hmsc->bot_state = USBD_BOT_NO_DATA;
 800f6fa:	e732      	b.n	800f562 <SCSI_ProcessCmd+0x852>
    hmsc->scsi_sense_tail = 0U;
 800f6fc:	f883 6261 	strb.w	r6, [r3, #609]	; 0x261
    hmsc->bot_state = USBD_BOT_NO_DATA;
 800f700:	e72f      	b.n	800f562 <SCSI_ProcessCmd+0x852>
 800f702:	bf00      	nop
 800f704:	20000164 	.word	0x20000164

0800f708 <SCSI_SenseCode>:
  USBD_MSC_BOT_HandleTypeDef *hmsc = (USBD_MSC_BOT_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800f708:	f8d0 12d4 	ldr.w	r1, [r0, #724]	; 0x2d4
 800f70c:	31b0      	adds	r1, #176	; 0xb0
 800f70e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
  if (hmsc == NULL)
 800f712:	b1a8      	cbz	r0, 800f740 <SCSI_SenseCode+0x38>
{
 800f714:	b430      	push	{r4, r5}
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f716:	f890 1261 	ldrb.w	r1, [r0, #609]	; 0x261
 800f71a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
  hmsc->scsi_sense_tail++;
 800f71e:	3101      	adds	r1, #1
 800f720:	b2c9      	uxtb	r1, r1
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f722:	2500      	movs	r5, #0
  if (hmsc->scsi_sense_tail == SENSE_LIST_DEEPTH)
 800f724:	2904      	cmp	r1, #4
  hmsc->scsi_sense[hmsc->scsi_sense_tail].Skey = sKey;
 800f726:	f884 2240 	strb.w	r2, [r4, #576]	; 0x240
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASC = ASC;
 800f72a:	f884 3244 	strb.w	r3, [r4, #580]	; 0x244
  hmsc->scsi_sense[hmsc->scsi_sense_tail].w.b.ASCQ = 0U;
 800f72e:	f884 5245 	strb.w	r5, [r4, #581]	; 0x245
  hmsc->scsi_sense_tail++;
 800f732:	bf14      	ite	ne
 800f734:	f880 1261 	strbne.w	r1, [r0, #609]	; 0x261
    hmsc->scsi_sense_tail = 0U;
 800f738:	f880 5261 	strbeq.w	r5, [r0, #609]	; 0x261
}
 800f73c:	bc30      	pop	{r4, r5}
 800f73e:	4770      	bx	lr
 800f740:	4770      	bx	lr
 800f742:	bf00      	nop

0800f744 <touchgfxDisplayDriverTransmitActive>:

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
    return isTransmittingData;
 800f744:	4b01      	ldr	r3, [pc, #4]	; (800f74c <touchgfxDisplayDriverTransmitActive+0x8>)
}
 800f746:	7818      	ldrb	r0, [r3, #0]
 800f748:	4770      	bx	lr
 800f74a:	bf00      	nop
 800f74c:	20002c79 	.word	0x20002c79

0800f750 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800f750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f752:	f8bd 7018 	ldrh.w	r7, [sp, #24]
    isTransmittingData = 1;
 800f756:	f8df c030 	ldr.w	ip, [pc, #48]	; 800f788 <touchgfxDisplayDriverTransmitBlock+0x38>
{
 800f75a:	461c      	mov	r4, r3
 800f75c:	460d      	mov	r5, r1
    ILI9341_SetWindow(x, y, x + w - 1, y + h - 1);
 800f75e:	1e7b      	subs	r3, r7, #1
{
 800f760:	4611      	mov	r1, r2
    ILI9341_SetWindow(x, y, x + w - 1, y + h - 1);
 800f762:	1e62      	subs	r2, r4, #1
 800f764:	440b      	add	r3, r1
 800f766:	442a      	add	r2, r5
{
 800f768:	4606      	mov	r6, r0
    ILI9341_SetWindow(x, y, x + w - 1, y + h - 1);
 800f76a:	b29b      	uxth	r3, r3
 800f76c:	4628      	mov	r0, r5
 800f76e:	b292      	uxth	r2, r2
    isTransmittingData = 1;
 800f770:	2501      	movs	r5, #1
 800f772:	f88c 5000 	strb.w	r5, [ip]
    ILI9341_SetWindow(x, y, x + w - 1, y + h - 1);
 800f776:	f000 f88d 	bl	800f894 <ILI9341_SetWindow>
    ILI9341_DrawBitmap(w, h, pixels);
 800f77a:	4632      	mov	r2, r6
 800f77c:	4639      	mov	r1, r7
 800f77e:	4620      	mov	r0, r4
}
 800f780:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ILI9341_DrawBitmap(w, h, pixels);
 800f784:	f000 b8ac 	b.w	800f8e0 <ILI9341_DrawBitmap>
 800f788:	20002c79 	.word	0x20002c79

0800f78c <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef* hspi)
{
 800f78c:	b508      	push	{r3, lr}
    if (hspi->Instance == SPI2) {
 800f78e:	6802      	ldr	r2, [r0, #0]
 800f790:	4b06      	ldr	r3, [pc, #24]	; (800f7ac <HAL_SPI_TxCpltCallback+0x20>)
 800f792:	429a      	cmp	r2, r3
 800f794:	d000      	beq.n	800f798 <HAL_SPI_TxCpltCallback+0xc>
        ILI9341_EndOfDrawBitmap();
        isTransmittingData = 0;
        DisplayDriver_TransferCompleteCallback();
    }
}
 800f796:	bd08      	pop	{r3, pc}
        ILI9341_EndOfDrawBitmap();
 800f798:	f000 f828 	bl	800f7ec <ILI9341_EndOfDrawBitmap>
        isTransmittingData = 0;
 800f79c:	4b04      	ldr	r3, [pc, #16]	; (800f7b0 <HAL_SPI_TxCpltCallback+0x24>)
 800f79e:	2200      	movs	r2, #0
 800f7a0:	701a      	strb	r2, [r3, #0]
}
 800f7a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        DisplayDriver_TransferCompleteCallback();
 800f7a6:	f7f2 ba01 	b.w	8001bac <DisplayDriver_TransferCompleteCallback>
 800f7aa:	bf00      	nop
 800f7ac:	40003800 	.word	0x40003800
 800f7b0:	20002c79 	.word	0x20002c79

0800f7b4 <LCD_WR_DATA>:
        Error_Handler();
    }
}

static void LCD_WR_DATA(uint8_t data)
{
 800f7b4:	b500      	push	{lr}
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
}

static void DC_H(void)
{
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin;
 800f7b6:	4a0b      	ldr	r2, [pc, #44]	; (800f7e4 <LCD_WR_DATA+0x30>)
{
 800f7b8:	b083      	sub	sp, #12
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin;
 800f7ba:	2180      	movs	r1, #128	; 0x80
{
 800f7bc:	f88d 0007 	strb.w	r0, [sp, #7]
    if (HAL_SPI_Transmit(&hspi2, &data, 1, 1000) != HAL_OK) {
 800f7c0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin;
 800f7c4:	6191      	str	r1, [r2, #24]
    if (HAL_SPI_Transmit(&hspi2, &data, 1, 1000) != HAL_OK) {
 800f7c6:	4808      	ldr	r0, [pc, #32]	; (800f7e8 <LCD_WR_DATA+0x34>)
 800f7c8:	2201      	movs	r2, #1
 800f7ca:	f10d 0107 	add.w	r1, sp, #7
 800f7ce:	f7fa fd7b 	bl	800a2c8 <HAL_SPI_Transmit>
 800f7d2:	b910      	cbnz	r0, 800f7da <LCD_WR_DATA+0x26>
}
 800f7d4:	b003      	add	sp, #12
 800f7d6:	f85d fb04 	ldr.w	pc, [sp], #4
        Error_Handler();
 800f7da:	f7f1 f833 	bl	8000844 <Error_Handler>
}
 800f7de:	b003      	add	sp, #12
 800f7e0:	f85d fb04 	ldr.w	pc, [sp], #4
 800f7e4:	40020800 	.word	0x40020800
 800f7e8:	20002f30 	.word	0x20002f30

0800f7ec <ILI9341_EndOfDrawBitmap>:
}
 800f7ec:	4770      	bx	lr
 800f7ee:	bf00      	nop

0800f7f0 <ILI9341_Reset>:
{
 800f7f0:	b510      	push	{r4, lr}
    P_RESET_GPIO_Port->BSRR = (uint32_t)P_RESET_Pin << 16U;
 800f7f2:	4c08      	ldr	r4, [pc, #32]	; (800f814 <ILI9341_Reset+0x24>)
 800f7f4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800f7f8:	61a3      	str	r3, [r4, #24]
    HAL_Delay(100);
 800f7fa:	2064      	movs	r0, #100	; 0x64
 800f7fc:	f7f8 ffae 	bl	800875c <HAL_Delay>
    P_RESET_GPIO_Port->BSRR = (uint32_t)P_RESET_Pin;
 800f800:	2340      	movs	r3, #64	; 0x40
 800f802:	61a3      	str	r3, [r4, #24]
    HAL_Delay(100);
 800f804:	2064      	movs	r0, #100	; 0x64
 800f806:	f7f8 ffa9 	bl	800875c <HAL_Delay>
    P_CS_GPIO_Port->BSRR = (uint32_t)P_CS_Pin << 16U;
 800f80a:	4b03      	ldr	r3, [pc, #12]	; (800f818 <ILI9341_Reset+0x28>)
 800f80c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800f810:	619a      	str	r2, [r3, #24]
}
 800f812:	bd10      	pop	{r4, pc}
 800f814:	40020800 	.word	0x40020800
 800f818:	40020400 	.word	0x40020400

0800f81c <ILI9341_SoftReset>:
{
 800f81c:	b500      	push	{lr}
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f81e:	4b0c      	ldr	r3, [pc, #48]	; (800f850 <ILI9341_SoftReset+0x34>)
    if (HAL_SPI_Transmit(&hspi2, &cmd, 1, 1000) != HAL_OK) {
 800f820:	480c      	ldr	r0, [pc, #48]	; (800f854 <ILI9341_SoftReset+0x38>)
{
 800f822:	b083      	sub	sp, #12
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f824:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
    cmd = 0x01;  // Software reset
 800f828:	2201      	movs	r2, #1
 800f82a:	f88d 2007 	strb.w	r2, [sp, #7]
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f82e:	6199      	str	r1, [r3, #24]
    if (HAL_SPI_Transmit(&hspi2, &cmd, 1, 1000) != HAL_OK) {
 800f830:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f834:	f10d 0107 	add.w	r1, sp, #7
 800f838:	f7fa fd46 	bl	800a2c8 <HAL_SPI_Transmit>
 800f83c:	b910      	cbnz	r0, 800f844 <ILI9341_SoftReset+0x28>
}
 800f83e:	b003      	add	sp, #12
 800f840:	f85d fb04 	ldr.w	pc, [sp], #4
        Error_Handler();
 800f844:	f7f0 fffe 	bl	8000844 <Error_Handler>
}
 800f848:	b003      	add	sp, #12
 800f84a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f84e:	bf00      	nop
 800f850:	40020800 	.word	0x40020800
 800f854:	20002f30 	.word	0x20002f30

0800f858 <LCD_WR_REG>:
{
 800f858:	b500      	push	{lr}
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f85a:	4a0c      	ldr	r2, [pc, #48]	; (800f88c <LCD_WR_REG+0x34>)
{
 800f85c:	b083      	sub	sp, #12
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f85e:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
{
 800f862:	f88d 0007 	strb.w	r0, [sp, #7]
    if (HAL_SPI_Transmit(&hspi2, &data, 1, 1000) != HAL_OK) {
 800f866:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin << 16U;
 800f86a:	6191      	str	r1, [r2, #24]
    if (HAL_SPI_Transmit(&hspi2, &data, 1, 1000) != HAL_OK) {
 800f86c:	4808      	ldr	r0, [pc, #32]	; (800f890 <LCD_WR_REG+0x38>)
 800f86e:	2201      	movs	r2, #1
 800f870:	f10d 0107 	add.w	r1, sp, #7
 800f874:	f7fa fd28 	bl	800a2c8 <HAL_SPI_Transmit>
 800f878:	b910      	cbnz	r0, 800f880 <LCD_WR_REG+0x28>
}
 800f87a:	b003      	add	sp, #12
 800f87c:	f85d fb04 	ldr.w	pc, [sp], #4
        Error_Handler();
 800f880:	f7f0 ffe0 	bl	8000844 <Error_Handler>
}
 800f884:	b003      	add	sp, #12
 800f886:	f85d fb04 	ldr.w	pc, [sp], #4
 800f88a:	bf00      	nop
 800f88c:	40020800 	.word	0x40020800
 800f890:	20002f30 	.word	0x20002f30

0800f894 <ILI9341_SetWindow>:
{
 800f894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f896:	4607      	mov	r7, r0
    LCD_WR_REG(0x2a);
 800f898:	202a      	movs	r0, #42	; 0x2a
{
 800f89a:	460d      	mov	r5, r1
 800f89c:	4616      	mov	r6, r2
 800f89e:	461c      	mov	r4, r3
    LCD_WR_REG(0x2a);
 800f8a0:	f7ff ffda 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(start_x >> 8);
 800f8a4:	0a38      	lsrs	r0, r7, #8
 800f8a6:	f7ff ff85 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xFF & start_x);
 800f8aa:	b2f8      	uxtb	r0, r7
 800f8ac:	f7ff ff82 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(end_x >> 8);
 800f8b0:	0a30      	lsrs	r0, r6, #8
 800f8b2:	f7ff ff7f 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xFF & end_x);
 800f8b6:	b2f0      	uxtb	r0, r6
 800f8b8:	f7ff ff7c 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0x2b);
 800f8bc:	202b      	movs	r0, #43	; 0x2b
 800f8be:	f7ff ffcb 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(start_y >> 8);
 800f8c2:	0a28      	lsrs	r0, r5, #8
 800f8c4:	f7ff ff76 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xFF & start_y);
 800f8c8:	b2e8      	uxtb	r0, r5
 800f8ca:	f7ff ff73 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(end_y >> 8);
 800f8ce:	0a20      	lsrs	r0, r4, #8
 800f8d0:	f7ff ff70 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xFF & end_y);
 800f8d4:	b2e0      	uxtb	r0, r4
}
 800f8d6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    LCD_WR_DATA(0xFF & end_y);
 800f8da:	f7ff bf6b 	b.w	800f7b4 <LCD_WR_DATA>
 800f8de:	bf00      	nop

0800f8e0 <ILI9341_DrawBitmap>:
{
 800f8e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f8e4:	4607      	mov	r7, r0
 800f8e6:	4689      	mov	r9, r1
    LCD_WR_REG(0x2c);
 800f8e8:	202c      	movs	r0, #44	; 0x2c
{
 800f8ea:	4690      	mov	r8, r2
    ConvHL(s, (int32_t)w * h * 2);
 800f8ec:	fb09 f607 	mul.w	r6, r9, r7
    LCD_WR_REG(0x2c);
 800f8f0:	f7ff ffb2 	bl	800f858 <LCD_WR_REG>
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin;
 800f8f4:	4b0e      	ldr	r3, [pc, #56]	; (800f930 <ILI9341_DrawBitmap+0x50>)
 800f8f6:	2280      	movs	r2, #128	; 0x80
    while (l > 0) {
 800f8f8:	0076      	lsls	r6, r6, #1
    P_DC_GPIO_Port->BSRR = (uint32_t)P_DC_Pin;
 800f8fa:	619a      	str	r2, [r3, #24]
    while (l > 0) {
 800f8fc:	d00e      	beq.n	800f91c <ILI9341_DrawBitmap+0x3c>
 800f8fe:	4446      	add	r6, r8
 800f900:	3602      	adds	r6, #2
 800f902:	f108 0302 	add.w	r3, r8, #2
        v = *(s + 1);
 800f906:	f813 4c01 	ldrb.w	r4, [r3, #-1]
        *(s + 1) = *s;
 800f90a:	f813 5c02 	ldrb.w	r5, [r3, #-2]
 800f90e:	f803 5c01 	strb.w	r5, [r3, #-1]
        *s = v;
 800f912:	f803 4c02 	strb.w	r4, [r3, #-2]
    while (l > 0) {
 800f916:	3302      	adds	r3, #2
 800f918:	42b3      	cmp	r3, r6
 800f91a:	d1f4      	bne.n	800f906 <ILI9341_DrawBitmap+0x26>
    HAL_SPI_Transmit_DMA(&hspi2, (uint8_t*)s, w * h * 2);
 800f91c:	fb17 f209 	smulbb	r2, r7, r9
 800f920:	0052      	lsls	r2, r2, #1
 800f922:	4641      	mov	r1, r8
 800f924:	4803      	ldr	r0, [pc, #12]	; (800f934 <ILI9341_DrawBitmap+0x54>)
}
 800f926:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    HAL_SPI_Transmit_DMA(&hspi2, (uint8_t*)s, w * h * 2);
 800f92a:	b292      	uxth	r2, r2
 800f92c:	f7fa bf34 	b.w	800a798 <HAL_SPI_Transmit_DMA>
 800f930:	40020800 	.word	0x40020800
 800f934:	20002f30 	.word	0x20002f30

0800f938 <ILI9341_Init>:
{
 800f938:	b508      	push	{r3, lr}
    ILI9341_Reset();
 800f93a:	f7ff ff59 	bl	800f7f0 <ILI9341_Reset>
    ILI9341_SoftReset();
 800f93e:	f7ff ff6d 	bl	800f81c <ILI9341_SoftReset>
    LCD_WR_REG(0xCB);
 800f942:	20cb      	movs	r0, #203	; 0xcb
 800f944:	f7ff ff88 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x39);
 800f948:	2039      	movs	r0, #57	; 0x39
 800f94a:	f7ff ff33 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x2C);
 800f94e:	202c      	movs	r0, #44	; 0x2c
 800f950:	f7ff ff30 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x00);
 800f954:	2000      	movs	r0, #0
 800f956:	f7ff ff2d 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x34);
 800f95a:	2034      	movs	r0, #52	; 0x34
 800f95c:	f7ff ff2a 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x02);
 800f960:	2002      	movs	r0, #2
 800f962:	f7ff ff27 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xCF);
 800f966:	20cf      	movs	r0, #207	; 0xcf
 800f968:	f7ff ff76 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x00);
 800f96c:	2000      	movs	r0, #0
 800f96e:	f7ff ff21 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xC1);
 800f972:	20c1      	movs	r0, #193	; 0xc1
 800f974:	f7ff ff1e 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x30);
 800f978:	2030      	movs	r0, #48	; 0x30
 800f97a:	f7ff ff1b 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xE8);
 800f97e:	20e8      	movs	r0, #232	; 0xe8
 800f980:	f7ff ff6a 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x85);
 800f984:	2085      	movs	r0, #133	; 0x85
 800f986:	f7ff ff15 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x00);
 800f98a:	2000      	movs	r0, #0
 800f98c:	f7ff ff12 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x78);
 800f990:	2078      	movs	r0, #120	; 0x78
 800f992:	f7ff ff0f 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xEA);
 800f996:	20ea      	movs	r0, #234	; 0xea
 800f998:	f7ff ff5e 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x00);
 800f99c:	2000      	movs	r0, #0
 800f99e:	f7ff ff09 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x00);
 800f9a2:	2000      	movs	r0, #0
 800f9a4:	f7ff ff06 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xED);
 800f9a8:	20ed      	movs	r0, #237	; 0xed
 800f9aa:	f7ff ff55 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x64);
 800f9ae:	2064      	movs	r0, #100	; 0x64
 800f9b0:	f7ff ff00 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x03);
 800f9b4:	2003      	movs	r0, #3
 800f9b6:	f7ff fefd 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x12);
 800f9ba:	2012      	movs	r0, #18
 800f9bc:	f7ff fefa 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x81);
 800f9c0:	2081      	movs	r0, #129	; 0x81
 800f9c2:	f7ff fef7 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xF7);
 800f9c6:	20f7      	movs	r0, #247	; 0xf7
 800f9c8:	f7ff ff46 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x20);
 800f9cc:	2020      	movs	r0, #32
 800f9ce:	f7ff fef1 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xC0);
 800f9d2:	20c0      	movs	r0, #192	; 0xc0
 800f9d4:	f7ff ff40 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x10);
 800f9d8:	2010      	movs	r0, #16
 800f9da:	f7ff feeb 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xC1);
 800f9de:	20c1      	movs	r0, #193	; 0xc1
 800f9e0:	f7ff ff3a 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x10);
 800f9e4:	2010      	movs	r0, #16
 800f9e6:	f7ff fee5 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xC5);
 800f9ea:	20c5      	movs	r0, #197	; 0xc5
 800f9ec:	f7ff ff34 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x3E);
 800f9f0:	203e      	movs	r0, #62	; 0x3e
 800f9f2:	f7ff fedf 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x28);
 800f9f6:	2028      	movs	r0, #40	; 0x28
 800f9f8:	f7ff fedc 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xC7);
 800f9fc:	20c7      	movs	r0, #199	; 0xc7
 800f9fe:	f7ff ff2b 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x86);
 800fa02:	2086      	movs	r0, #134	; 0x86
 800fa04:	f7ff fed6 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0x36);
 800fa08:	2036      	movs	r0, #54	; 0x36
 800fa0a:	f7ff ff25 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x48);
 800fa0e:	2048      	movs	r0, #72	; 0x48
 800fa10:	f7ff fed0 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0x3A);
 800fa14:	203a      	movs	r0, #58	; 0x3a
 800fa16:	f7ff ff1f 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x55);  // 16bit
 800fa1a:	2055      	movs	r0, #85	; 0x55
 800fa1c:	f7ff feca 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xB1);
 800fa20:	20b1      	movs	r0, #177	; 0xb1
 800fa22:	f7ff ff19 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x00);
 800fa26:	2000      	movs	r0, #0
 800fa28:	f7ff fec4 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x18);
 800fa2c:	2018      	movs	r0, #24
 800fa2e:	f7ff fec1 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xB6);
 800fa32:	20b6      	movs	r0, #182	; 0xb6
 800fa34:	f7ff ff10 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x08);
 800fa38:	2008      	movs	r0, #8
 800fa3a:	f7ff febb 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x82);
 800fa3e:	2082      	movs	r0, #130	; 0x82
 800fa40:	f7ff feb8 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x27);
 800fa44:	2027      	movs	r0, #39	; 0x27
 800fa46:	f7ff feb5 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xF2);
 800fa4a:	20f2      	movs	r0, #242	; 0xf2
 800fa4c:	f7ff ff04 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x00);
 800fa50:	2000      	movs	r0, #0
 800fa52:	f7ff feaf 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0x26);   // Gamma set
 800fa56:	2026      	movs	r0, #38	; 0x26
 800fa58:	f7ff fefe 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x01);  // Gamma Curve (G2.2)
 800fa5c:	2001      	movs	r0, #1
 800fa5e:	f7ff fea9 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xE0);
 800fa62:	20e0      	movs	r0, #224	; 0xe0
 800fa64:	f7ff fef8 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x0F);
 800fa68:	200f      	movs	r0, #15
 800fa6a:	f7ff fea3 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x31);
 800fa6e:	2031      	movs	r0, #49	; 0x31
 800fa70:	f7ff fea0 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x2B);
 800fa74:	202b      	movs	r0, #43	; 0x2b
 800fa76:	f7ff fe9d 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0C);
 800fa7a:	200c      	movs	r0, #12
 800fa7c:	f7ff fe9a 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0E);
 800fa80:	200e      	movs	r0, #14
 800fa82:	f7ff fe97 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x08);
 800fa86:	2008      	movs	r0, #8
 800fa88:	f7ff fe94 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x4E);
 800fa8c:	204e      	movs	r0, #78	; 0x4e
 800fa8e:	f7ff fe91 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xF1);
 800fa92:	20f1      	movs	r0, #241	; 0xf1
 800fa94:	f7ff fe8e 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x37);
 800fa98:	2037      	movs	r0, #55	; 0x37
 800fa9a:	f7ff fe8b 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x07);
 800fa9e:	2007      	movs	r0, #7
 800faa0:	f7ff fe88 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x10);
 800faa4:	2010      	movs	r0, #16
 800faa6:	f7ff fe85 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x03);
 800faaa:	2003      	movs	r0, #3
 800faac:	f7ff fe82 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0E);
 800fab0:	200e      	movs	r0, #14
 800fab2:	f7ff fe7f 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x09);
 800fab6:	2009      	movs	r0, #9
 800fab8:	f7ff fe7c 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x00);
 800fabc:	2000      	movs	r0, #0
 800fabe:	f7ff fe79 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0xE1);
 800fac2:	20e1      	movs	r0, #225	; 0xe1
 800fac4:	f7ff fec8 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x00);
 800fac8:	2000      	movs	r0, #0
 800faca:	f7ff fe73 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0E);
 800face:	200e      	movs	r0, #14
 800fad0:	f7ff fe70 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x14);
 800fad4:	2014      	movs	r0, #20
 800fad6:	f7ff fe6d 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x03);
 800fada:	2003      	movs	r0, #3
 800fadc:	f7ff fe6a 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x11);
 800fae0:	2011      	movs	r0, #17
 800fae2:	f7ff fe67 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x07);
 800fae6:	2007      	movs	r0, #7
 800fae8:	f7ff fe64 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x31);
 800faec:	2031      	movs	r0, #49	; 0x31
 800faee:	f7ff fe61 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0xC1);
 800faf2:	20c1      	movs	r0, #193	; 0xc1
 800faf4:	f7ff fe5e 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x48);
 800faf8:	2048      	movs	r0, #72	; 0x48
 800fafa:	f7ff fe5b 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x08);
 800fafe:	2008      	movs	r0, #8
 800fb00:	f7ff fe58 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0F);
 800fb04:	200f      	movs	r0, #15
 800fb06:	f7ff fe55 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0C);
 800fb0a:	200c      	movs	r0, #12
 800fb0c:	f7ff fe52 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x31);
 800fb10:	2031      	movs	r0, #49	; 0x31
 800fb12:	f7ff fe4f 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x36);
 800fb16:	2036      	movs	r0, #54	; 0x36
 800fb18:	f7ff fe4c 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_DATA(0x0F);
 800fb1c:	200f      	movs	r0, #15
 800fb1e:	f7ff fe49 	bl	800f7b4 <LCD_WR_DATA>
    LCD_WR_REG(0x11);
 800fb22:	2011      	movs	r0, #17
 800fb24:	f7ff fe98 	bl	800f858 <LCD_WR_REG>
    HAL_Delay(120);
 800fb28:	2078      	movs	r0, #120	; 0x78
 800fb2a:	f7f8 fe17 	bl	800875c <HAL_Delay>
    LCD_WR_REG(0x29);
 800fb2e:	2029      	movs	r0, #41	; 0x29
 800fb30:	f7ff fe92 	bl	800f858 <LCD_WR_REG>
    LCD_WR_DATA(0x2C);
 800fb34:	202c      	movs	r0, #44	; 0x2c
 800fb36:	f7ff fe3d 	bl	800f7b4 <LCD_WR_DATA>
        LCD_WR_REG(0x36);
 800fb3a:	2036      	movs	r0, #54	; 0x36
 800fb3c:	f7ff fe8c 	bl	800f858 <LCD_WR_REG>
}
 800fb40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        LCD_WR_DATA(0x28);
 800fb44:	2028      	movs	r0, #40	; 0x28
 800fb46:	f7ff be35 	b.w	800f7b4 <LCD_WR_DATA>
 800fb4a:	bf00      	nop

0800fb4c <besttwoavg>:

static int16_t besttwoavg(int16_t x, int16_t y, int16_t z)
{
    int16_t da, db, dc;
    int16_t reta = 0;
    if (x > y)
 800fb4c:	4288      	cmp	r0, r1
{
 800fb4e:	b470      	push	{r4, r5, r6}
    if (x > y)
 800fb50:	dd1c      	ble.n	800fb8c <besttwoavg+0x40>
        da = x - y;
 800fb52:	b283      	uxth	r3, r0
 800fb54:	b28c      	uxth	r4, r1
 800fb56:	1b1d      	subs	r5, r3, r4
 800fb58:	b22d      	sxth	r5, r5
    else
        da = y - x;
    if (x > z)
        db = x - z;
 800fb5a:	b296      	uxth	r6, r2
    if (x > z)
 800fb5c:	4290      	cmp	r0, r2
        db = x - z;
 800fb5e:	bfcc      	ite	gt
 800fb60:	1b9b      	subgt	r3, r3, r6
    else
        db = z - x;
 800fb62:	1af3      	suble	r3, r6, r3
 800fb64:	b21b      	sxth	r3, r3
    if (z > y)
 800fb66:	4291      	cmp	r1, r2
        dc = z - y;
 800fb68:	bfb4      	ite	lt
 800fb6a:	1b34      	sublt	r4, r6, r4
    else
        dc = y - z;
 800fb6c:	1ba4      	subge	r4, r4, r6

    if (da <= db && da <= dc)
 800fb6e:	429d      	cmp	r5, r3
        dc = y - z;
 800fb70:	b224      	sxth	r4, r4
    if (da <= db && da <= dc)
 800fb72:	dd05      	ble.n	800fb80 <besttwoavg+0x34>
        reta = (x + y) >> 1;
    else if (db <= da && db <= dc)
 800fb74:	42a3      	cmp	r3, r4
 800fb76:	dd0e      	ble.n	800fb96 <besttwoavg+0x4a>
        reta = (x + z) >> 1;
    else
        reta = (y + z) >> 1;  //    else if ( dc <= da && dc <= db ) reta = (x + y) >> 1;
 800fb78:	4411      	add	r1, r2
 800fb7a:	1048      	asrs	r0, r1, #1

    return (reta);
}
 800fb7c:	bc70      	pop	{r4, r5, r6}
 800fb7e:	4770      	bx	lr
    if (da <= db && da <= dc)
 800fb80:	42a5      	cmp	r5, r4
 800fb82:	dcf9      	bgt.n	800fb78 <besttwoavg+0x2c>
        reta = (x + y) >> 1;
 800fb84:	4401      	add	r1, r0
 800fb86:	1048      	asrs	r0, r1, #1
}
 800fb88:	bc70      	pop	{r4, r5, r6}
 800fb8a:	4770      	bx	lr
        da = y - x;
 800fb8c:	b28c      	uxth	r4, r1
 800fb8e:	b283      	uxth	r3, r0
 800fb90:	1ae5      	subs	r5, r4, r3
 800fb92:	b22d      	sxth	r5, r5
 800fb94:	e7e1      	b.n	800fb5a <besttwoavg+0xe>
        reta = (x + z) >> 1;
 800fb96:	4410      	add	r0, r2
 800fb98:	1040      	asrs	r0, r0, #1
}
 800fb9a:	bc70      	pop	{r4, r5, r6}
 800fb9c:	4770      	bx	lr
 800fb9e:	bf00      	nop

0800fba0 <XPT2046_Read_AD>:
{
 800fba0:	b510      	push	{r4, lr}
    T_CS_GPIO_Port->BSRR = (uint32_t)T_CS_Pin << 16U;
 800fba2:	4b25      	ldr	r3, [pc, #148]	; (800fc38 <XPT2046_Read_AD+0x98>)
    hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT);  // Set 8 bit mode
 800fba4:	4c25      	ldr	r4, [pc, #148]	; (800fc3c <XPT2046_Read_AD+0x9c>)
{
 800fba6:	b082      	sub	sp, #8
    T_CS_GPIO_Port->BSRR = (uint32_t)T_CS_Pin << 16U;
 800fba8:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800fbac:	619a      	str	r2, [r3, #24]
    hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT);  // Set 8 bit mode
 800fbae:	6823      	ldr	r3, [r4, #0]
 800fbb0:	f88d 0004 	strb.w	r0, [sp, #4]
 800fbb4:	685a      	ldr	r2, [r3, #4]
 800fbb6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800fbba:	605a      	str	r2, [r3, #4]
    __HAL_SPI_ENABLE(&hspi1);
 800fbbc:	681a      	ldr	r2, [r3, #0]
 800fbbe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800fbc2:	601a      	str	r2, [r3, #0]
    if (HAL_SPI_Transmit(&hspi1, &num, 1, 1000) != HAL_OK) {
 800fbc4:	4620      	mov	r0, r4
 800fbc6:	a901      	add	r1, sp, #4
 800fbc8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800fbcc:	2201      	movs	r2, #1
 800fbce:	f7fa fb7b 	bl	800a2c8 <HAL_SPI_Transmit>
 800fbd2:	bb50      	cbnz	r0, 800fc2a <XPT2046_Read_AD+0x8a>
    __HAL_SPI_DISABLE(&hspi1);
 800fbd4:	6822      	ldr	r2, [r4, #0]
 800fbd6:	6813      	ldr	r3, [r2, #0]
 800fbd8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800fbdc:	6013      	str	r3, [r2, #0]
    HAL_Delay(6);
 800fbde:	2006      	movs	r0, #6
 800fbe0:	f7f8 fdbc 	bl	800875c <HAL_Delay>
    hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT;  // Set 16 bit mode
 800fbe4:	6823      	ldr	r3, [r4, #0]
    if (HAL_SPI_Receive(&hspi1, num, 1, 1000) != HAL_OK) {
 800fbe6:	4815      	ldr	r0, [pc, #84]	; (800fc3c <XPT2046_Read_AD+0x9c>)
    hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT;  // Set 16 bit mode
 800fbe8:	685a      	ldr	r2, [r3, #4]
 800fbea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800fbee:	605a      	str	r2, [r3, #4]
    __HAL_SPI_ENABLE(&hspi1);
 800fbf0:	681a      	ldr	r2, [r3, #0]
 800fbf2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800fbf6:	601a      	str	r2, [r3, #0]
    if (HAL_SPI_Receive(&hspi1, num, 1, 1000) != HAL_OK) {
 800fbf8:	a901      	add	r1, sp, #4
 800fbfa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800fbfe:	2201      	movs	r2, #1
 800fc00:	f7fa fd20 	bl	800a644 <HAL_SPI_Receive>
 800fc04:	b9a0      	cbnz	r0, 800fc30 <XPT2046_Read_AD+0x90>
    __HAL_SPI_DISABLE(&hspi1);
 800fc06:	6822      	ldr	r2, [r4, #0]
    T_CS_GPIO_Port->BSRR = T_CS_Pin;
 800fc08:	490b      	ldr	r1, [pc, #44]	; (800fc38 <XPT2046_Read_AD+0x98>)
    __HAL_SPI_DISABLE(&hspi1);
 800fc0a:	6813      	ldr	r3, [r2, #0]
    T_CS_GPIO_Port->BSRR = T_CS_Pin;
 800fc0c:	2001      	movs	r0, #1
    __HAL_SPI_DISABLE(&hspi1);
 800fc0e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800fc12:	6013      	str	r3, [r2, #0]
    T_CS_GPIO_Port->BSRR = T_CS_Pin;
 800fc14:	6188      	str	r0, [r1, #24]
    ret = num[0] << 8 | num[1];
 800fc16:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800fc1a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800fc1e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 800fc22:	f3c0 00cb 	ubfx	r0, r0, #3, #12
 800fc26:	b002      	add	sp, #8
 800fc28:	bd10      	pop	{r4, pc}
        Error_Handler();
 800fc2a:	f7f0 fe0b 	bl	8000844 <Error_Handler>
 800fc2e:	e7d1      	b.n	800fbd4 <XPT2046_Read_AD+0x34>
        Error_Handler();
 800fc30:	f7f0 fe08 	bl	8000844 <Error_Handler>
 800fc34:	e7e7      	b.n	800fc06 <XPT2046_Read_AD+0x66>
 800fc36:	bf00      	nop
 800fc38:	40020400 	.word	0x40020400
 800fc3c:	20002f88 	.word	0x20002f88

0800fc40 <XPT2046_Init>:

void XPT2046_Init(void)
{
    XPT2046_initilazed = 1;
 800fc40:	4b01      	ldr	r3, [pc, #4]	; (800fc48 <XPT2046_Init+0x8>)
 800fc42:	2201      	movs	r2, #1
 800fc44:	701a      	strb	r2, [r3, #0]
}
 800fc46:	4770      	bx	lr
 800fc48:	20002c7a 	.word	0x20002c7a

0800fc4c <XPT2046_Update>:
void XPT2046_Update(uint16_t* x, uint16_t* y)
{
    int16_t data[6];
    static uint32_t ptime = 0;

    if (XPT2046_initilazed == 0) {
 800fc4c:	4b2f      	ldr	r3, [pc, #188]	; (800fd0c <XPT2046_Update+0xc0>)
 800fc4e:	781b      	ldrb	r3, [r3, #0]
 800fc50:	b903      	cbnz	r3, 800fc54 <XPT2046_Update+0x8>
 800fc52:	4770      	bx	lr
{
 800fc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        return;
    }

    if (HAL_GetTick() - ptime < MSEC_THRESHOLD) {
 800fc58:	4f2d      	ldr	r7, [pc, #180]	; (800fd10 <XPT2046_Update+0xc4>)
{
 800fc5a:	b083      	sub	sp, #12
 800fc5c:	4605      	mov	r5, r0
 800fc5e:	460c      	mov	r4, r1
    if (HAL_GetTick() - ptime < MSEC_THRESHOLD) {
 800fc60:	f7f8 fd76 	bl	8008750 <HAL_GetTick>
 800fc64:	683b      	ldr	r3, [r7, #0]
 800fc66:	1ac0      	subs	r0, r0, r3
 800fc68:	2802      	cmp	r0, #2
 800fc6a:	d917      	bls.n	800fc9c <XPT2046_Update+0x50>
        return;
    }

    int16_t z1 = XPT2046_Read_AD(0xb1);  // z1
 800fc6c:	20b1      	movs	r0, #177	; 0xb1
 800fc6e:	f7ff ff97 	bl	800fba0 <XPT2046_Read_AD>
    int32_t z = z1 + 4095;
 800fc72:	b206      	sxth	r6, r0
    int16_t z2 = XPT2046_Read_AD(0xc1);  // z2
 800fc74:	20c1      	movs	r0, #193	; 0xc1
 800fc76:	f7ff ff93 	bl	800fba0 <XPT2046_Read_AD>
    int32_t z = z1 + 4095;
 800fc7a:	f606 76ff 	addw	r6, r6, #4095	; 0xfff
    z -= z2;
 800fc7e:	b200      	sxth	r0, r0
 800fc80:	1a36      	subs	r6, r6, r0
    if (z >= Z_THRESHOLD) {
 800fc82:	f5b6 7fc8 	cmp.w	r6, #400	; 0x190
        XPT2046_Read_AD(0x91);  // dummy 1st X measure
 800fc86:	f04f 0091 	mov.w	r0, #145	; 0x91
    if (z >= Z_THRESHOLD) {
 800fc8a:	da0a      	bge.n	800fca2 <XPT2046_Update+0x56>
        data[2] = XPT2046_Read_AD(0x91);
        data[3] = XPT2046_Read_AD(0xd1);
    } else {
        data[0] = data[1] = data[2] = data[3] = 0;
    }
    data[4] = XPT2046_Read_AD(0x91);
 800fc8c:	f7ff ff88 	bl	800fba0 <XPT2046_Read_AD>
    data[5] = XPT2046_Read_AD(0xd0);
 800fc90:	20d0      	movs	r0, #208	; 0xd0
 800fc92:	f7ff ff85 	bl	800fba0 <XPT2046_Read_AD>
    ptime = HAL_GetTick();
 800fc96:	f7f8 fd5b 	bl	8008750 <HAL_GetTick>
 800fc9a:	6038      	str	r0, [r7, #0]
    int16_t inty = besttwoavg(data[1], data[3], data[5]);
    if (z >= Z_THRESHOLD) {
        *x = intx;
        *y = inty;
    }
}
 800fc9c:	b003      	add	sp, #12
 800fc9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        XPT2046_Read_AD(0x91);  // dummy 1st X measure
 800fca2:	f7ff ff7d 	bl	800fba0 <XPT2046_Read_AD>
        data[0] = XPT2046_Read_AD(0x91);
 800fca6:	2091      	movs	r0, #145	; 0x91
 800fca8:	f7ff ff7a 	bl	800fba0 <XPT2046_Read_AD>
 800fcac:	4606      	mov	r6, r0
        data[1] = XPT2046_Read_AD(0xd1);
 800fcae:	20d1      	movs	r0, #209	; 0xd1
 800fcb0:	f7ff ff76 	bl	800fba0 <XPT2046_Read_AD>
 800fcb4:	4680      	mov	r8, r0
        data[2] = XPT2046_Read_AD(0x91);
 800fcb6:	2091      	movs	r0, #145	; 0x91
 800fcb8:	f7ff ff72 	bl	800fba0 <XPT2046_Read_AD>
 800fcbc:	4683      	mov	fp, r0
        data[3] = XPT2046_Read_AD(0xd1);
 800fcbe:	20d1      	movs	r0, #209	; 0xd1
 800fcc0:	f7ff ff6e 	bl	800fba0 <XPT2046_Read_AD>
 800fcc4:	4681      	mov	r9, r0
    data[4] = XPT2046_Read_AD(0x91);
 800fcc6:	2091      	movs	r0, #145	; 0x91
 800fcc8:	f7ff ff6a 	bl	800fba0 <XPT2046_Read_AD>
 800fccc:	4602      	mov	r2, r0
    data[5] = XPT2046_Read_AD(0xd0);
 800fcce:	20d0      	movs	r0, #208	; 0xd0
    data[4] = XPT2046_Read_AD(0x91);
 800fcd0:	9201      	str	r2, [sp, #4]
    data[5] = XPT2046_Read_AD(0xd0);
 800fcd2:	f7ff ff65 	bl	800fba0 <XPT2046_Read_AD>
 800fcd6:	4682      	mov	sl, r0
    ptime = HAL_GetTick();
 800fcd8:	f7f8 fd3a 	bl	8008750 <HAL_GetTick>
    int16_t intx = besttwoavg(data[0], data[2], data[4]);
 800fcdc:	9a01      	ldr	r2, [sp, #4]
    ptime = HAL_GetTick();
 800fcde:	4603      	mov	r3, r0
    int16_t intx = besttwoavg(data[0], data[2], data[4]);
 800fce0:	fa0f f18b 	sxth.w	r1, fp
 800fce4:	b212      	sxth	r2, r2
 800fce6:	b230      	sxth	r0, r6
    ptime = HAL_GetTick();
 800fce8:	603b      	str	r3, [r7, #0]
    int16_t intx = besttwoavg(data[0], data[2], data[4]);
 800fcea:	f7ff ff2f 	bl	800fb4c <besttwoavg>
    int16_t inty = besttwoavg(data[1], data[3], data[5]);
 800fcee:	fa0f f28a 	sxth.w	r2, sl
    int16_t intx = besttwoavg(data[0], data[2], data[4]);
 800fcf2:	4606      	mov	r6, r0
    int16_t inty = besttwoavg(data[1], data[3], data[5]);
 800fcf4:	fa0f f189 	sxth.w	r1, r9
 800fcf8:	fa0f f088 	sxth.w	r0, r8
 800fcfc:	f7ff ff26 	bl	800fb4c <besttwoavg>
        *x = intx;
 800fd00:	802e      	strh	r6, [r5, #0]
        *y = inty;
 800fd02:	8020      	strh	r0, [r4, #0]
}
 800fd04:	b003      	add	sp, #12
 800fd06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd0a:	bf00      	nop
 800fd0c:	20002c7a 	.word	0x20002c7a
 800fd10:	20002c7c 	.word	0x20002c7c

0800fd14 <XPT2046_IsReasonable>:

uint8_t XPT2046_IsReasonable(uint16_t x, uint16_t y)
{
    if (x >= XPT_XMIN && x <= XPT_XMAX && y >= XPT_YMIN && y <= XPT_YMAX) {
 800fd14:	f5a0 70af 	sub.w	r0, r0, #350	; 0x15e
 800fd18:	b280      	uxth	r0, r0
 800fd1a:	f640 537a 	movw	r3, #3450	; 0xd7a
 800fd1e:	4298      	cmp	r0, r3
 800fd20:	d809      	bhi.n	800fd36 <XPT2046_IsReasonable+0x22>
 800fd22:	f5a1 71af 	sub.w	r1, r1, #350	; 0x15e
 800fd26:	b288      	uxth	r0, r1
 800fd28:	f640 43b2 	movw	r3, #3250	; 0xcb2
        return 1;
    }
    return 0;
 800fd2c:	4298      	cmp	r0, r3
 800fd2e:	bf8c      	ite	hi
 800fd30:	2000      	movhi	r0, #0
 800fd32:	2001      	movls	r0, #1
 800fd34:	4770      	bx	lr
 800fd36:	2000      	movs	r0, #0
}
 800fd38:	4770      	bx	lr
 800fd3a:	bf00      	nop

0800fd3c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fd3c:	8880      	ldrh	r0, [r0, #4]
 800fd3e:	4770      	bx	lr

0800fd40 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800fd40:	b570      	push	{r4, r5, r6, lr}
 800fd42:	6803      	ldr	r3, [r0, #0]
 800fd44:	4605      	mov	r5, r0
 800fd46:	460c      	mov	r4, r1
 800fd48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fd4a:	2100      	movs	r1, #0
 800fd4c:	4798      	blx	r3
 800fd4e:	682b      	ldr	r3, [r5, #0]
 800fd50:	4606      	mov	r6, r0
 800fd52:	6a1b      	ldr	r3, [r3, #32]
 800fd54:	4628      	mov	r0, r5
 800fd56:	4798      	blx	r3
 800fd58:	1ba4      	subs	r4, r4, r6
 800fd5a:	b2a4      	uxth	r4, r4
 800fd5c:	fbb4 f0f0 	udiv	r0, r4, r0
 800fd60:	bd70      	pop	{r4, r5, r6, pc}

0800fd62 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800fd62:	2300      	movs	r3, #0
 800fd64:	8083      	strh	r3, [r0, #4]
 800fd66:	4770      	bx	lr

0800fd68 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fd68:	b510      	push	{r4, lr}
 800fd6a:	6803      	ldr	r3, [r0, #0]
 800fd6c:	8881      	ldrh	r1, [r0, #4]
 800fd6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fd70:	4604      	mov	r4, r0
 800fd72:	4798      	blx	r3
 800fd74:	88a3      	ldrh	r3, [r4, #4]
 800fd76:	3301      	adds	r3, #1
 800fd78:	80a3      	strh	r3, [r4, #4]
 800fd7a:	bd10      	pop	{r4, pc}

0800fd7c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fd7c:	6803      	ldr	r3, [r0, #0]
 800fd7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fd80:	4718      	bx	r3

0800fd82 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800fd82:	4770      	bx	lr

0800fd84 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fd84:	4a02      	ldr	r2, [pc, #8]	; (800fd90 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fd86:	6002      	str	r2, [r0, #0]
 800fd88:	2200      	movs	r2, #0
 800fd8a:	8082      	strh	r2, [r0, #4]
 800fd8c:	4770      	bx	lr
 800fd8e:	bf00      	nop
 800fd90:	08028064 	.word	0x08028064

0800fd94 <_ZN8touchgfx9Container13getFirstChildEv>:
 800fd94:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fd96:	4770      	bx	lr

0800fd98 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
 800fd98:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800fd9c:	4770      	bx	lr

0800fd9e <_ZNK8touchgfx11BoxProgress8getColorEv>:
 800fd9e:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800fda2:	4770      	bx	lr

0800fda4 <_ZN8touchgfx11BoxProgressD1Ev>:
 800fda4:	4770      	bx	lr

0800fda6 <_ZN8touchgfx11BoxProgressD0Ev>:
 800fda6:	b510      	push	{r4, lr}
 800fda8:	21e4      	movs	r1, #228	; 0xe4
 800fdaa:	4604      	mov	r4, r0
 800fdac:	f014 fa27 	bl	80241fe <_ZdlPvj>
 800fdb0:	4620      	mov	r0, r4
 800fdb2:	bd10      	pop	{r4, pc}

0800fdb4 <_ZN8touchgfx11BoxProgress8setAlphaEh>:
 800fdb4:	b538      	push	{r3, r4, r5, lr}
 800fdb6:	4604      	mov	r4, r0
 800fdb8:	460d      	mov	r5, r1
 800fdba:	f000 f989 	bl	80100d0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800fdbe:	f884 50de 	strb.w	r5, [r4, #222]	; 0xde
 800fdc2:	bd38      	pop	{r3, r4, r5, pc}

0800fdc4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800fdc4:	b510      	push	{r4, lr}
 800fdc6:	6803      	ldr	r3, [r0, #0]
 800fdc8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800fdcc:	4604      	mov	r4, r0
 800fdce:	4798      	blx	r3
 800fdd0:	b120      	cbz	r0, 800fddc <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x18>
 800fdd2:	4620      	mov	r0, r4
 800fdd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdd8:	f000 bb31 	b.w	801043e <_ZNK8touchgfx9Container17invalidateContentEv>
 800fddc:	bd10      	pop	{r4, pc}

0800fdde <_ZN8touchgfx8Drawable11setPositionEssss>:
 800fdde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fde2:	461e      	mov	r6, r3
 800fde4:	6803      	ldr	r3, [r0, #0]
 800fde6:	f9bd 5018 	ldrsh.w	r5, [sp, #24]
 800fdea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fdec:	4604      	mov	r4, r0
 800fdee:	4617      	mov	r7, r2
 800fdf0:	4798      	blx	r3
 800fdf2:	6823      	ldr	r3, [r4, #0]
 800fdf4:	4639      	mov	r1, r7
 800fdf6:	4620      	mov	r0, r4
 800fdf8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fdfa:	4798      	blx	r3
 800fdfc:	6823      	ldr	r3, [r4, #0]
 800fdfe:	4631      	mov	r1, r6
 800fe00:	4620      	mov	r0, r4
 800fe02:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800fe04:	4790      	blx	r2
 800fe06:	6823      	ldr	r3, [r4, #0]
 800fe08:	4629      	mov	r1, r5
 800fe0a:	4620      	mov	r0, r4
 800fe0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fe0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fe12:	4718      	bx	r3

0800fe14 <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
 800fe14:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fe18:	4617      	mov	r7, r2
 800fe1a:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 800fe1e:	9500      	str	r5, [sp, #0]
 800fe20:	2200      	movs	r2, #0
 800fe22:	4604      	mov	r4, r0
 800fe24:	460e      	mov	r6, r1
 800fe26:	30b8      	adds	r0, #184	; 0xb8
 800fe28:	4611      	mov	r1, r2
 800fe2a:	4698      	mov	r8, r3
 800fe2c:	f7ff ffd7 	bl	800fdde <_ZN8touchgfx8Drawable11setPositionEssss>
 800fe30:	4643      	mov	r3, r8
 800fe32:	463a      	mov	r2, r7
 800fe34:	4631      	mov	r1, r6
 800fe36:	4620      	mov	r0, r4
 800fe38:	9508      	str	r5, [sp, #32]
 800fe3a:	b002      	add	sp, #8
 800fe3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fe40:	f000 ba37 	b.w	80102b2 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800fe44 <_ZN8touchgfx11BoxProgress8setValueEi>:
 800fe44:	b530      	push	{r4, r5, lr}
 800fe46:	4604      	mov	r4, r0
 800fe48:	b085      	sub	sp, #20
 800fe4a:	f000 f992 	bl	8010172 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800fe4e:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800fe52:	2b03      	cmp	r3, #3
 800fe54:	d814      	bhi.n	800fe80 <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
 800fe56:	e8df f003 	tbb	[pc, r3]
 800fe5a:	0202      	.short	0x0202
 800fe5c:	1010      	.short	0x1010
 800fe5e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fe62:	4620      	mov	r0, r4
 800fe64:	f000 f9e2 	bl	801022c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800fe68:	b200      	sxth	r0, r0
 800fe6a:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800fe6e:	2b03      	cmp	r3, #3
 800fe70:	d82f      	bhi.n	800fed2 <_ZN8touchgfx11BoxProgress8setValueEi+0x8e>
 800fe72:	e8df f003 	tbb	[pc, r3]
 800fe76:	3007      	.short	0x3007
 800fe78:	6341      	.short	0x6341
 800fe7a:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 800fe7e:	e7f0      	b.n	800fe62 <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
 800fe80:	2000      	movs	r0, #0
 800fe82:	e7f2      	b.n	800fe6a <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
 800fe84:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800fe88:	9300      	str	r3, [sp, #0]
 800fe8a:	2200      	movs	r2, #0
 800fe8c:	4603      	mov	r3, r0
 800fe8e:	4611      	mov	r1, r2
 800fe90:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800fe94:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	; 0xc0
 800fe98:	f7ff ffa1 	bl	800fdde <_ZN8touchgfx8Drawable11setPositionEssss>
 800fe9c:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800fea0:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800fea4:	f8ad 200e 	strh.w	r2, [sp, #14]
 800fea8:	4629      	mov	r1, r5
 800feaa:	429d      	cmp	r5, r3
 800feac:	eba5 0503 	sub.w	r5, r5, r3
 800feb0:	bfa8      	it	ge
 800feb2:	4619      	movge	r1, r3
 800feb4:	2d00      	cmp	r5, #0
 800feb6:	f8ad 1008 	strh.w	r1, [sp, #8]
 800feba:	bfb8      	it	lt
 800febc:	426d      	neglt	r5, r5
 800febe:	2100      	movs	r1, #0
 800fec0:	f8ad 100a 	strh.w	r1, [sp, #10]
 800fec4:	f8ad 500c 	strh.w	r5, [sp, #12]
 800fec8:	a902      	add	r1, sp, #8
 800feca:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fece:	f006 f9c5 	bl	801625c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
 800fed2:	b005      	add	sp, #20
 800fed4:	bd30      	pop	{r4, r5, pc}
 800fed6:	8921      	ldrh	r1, [r4, #8]
 800fed8:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800fedc:	9300      	str	r3, [sp, #0]
 800fede:	1a09      	subs	r1, r1, r0
 800fee0:	4603      	mov	r3, r0
 800fee2:	2200      	movs	r2, #0
 800fee4:	b209      	sxth	r1, r1
 800fee6:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800feea:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	; 0xbc
 800feee:	f7ff ff76 	bl	800fdde <_ZN8touchgfx8Drawable11setPositionEssss>
 800fef2:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	; 0xbc
 800fef6:	e7d3      	b.n	800fea0 <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
 800fef8:	2200      	movs	r2, #0
 800fefa:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800fefe:	9000      	str	r0, [sp, #0]
 800ff00:	4611      	mov	r1, r2
 800ff02:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800ff06:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	; 0xc2
 800ff0a:	f7ff ff68 	bl	800fdde <_ZN8touchgfx8Drawable11setPositionEssss>
 800ff0e:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	; 0xc2
 800ff12:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	; 0xc0
 800ff16:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ff1a:	2100      	movs	r1, #0
 800ff1c:	429d      	cmp	r5, r3
 800ff1e:	f8ad 1008 	strh.w	r1, [sp, #8]
 800ff22:	4629      	mov	r1, r5
 800ff24:	eba5 0503 	sub.w	r5, r5, r3
 800ff28:	bfa8      	it	ge
 800ff2a:	4619      	movge	r1, r3
 800ff2c:	2d00      	cmp	r5, #0
 800ff2e:	bfb8      	it	lt
 800ff30:	426d      	neglt	r5, r5
 800ff32:	f8ad 100a 	strh.w	r1, [sp, #10]
 800ff36:	f8ad 500e 	strh.w	r5, [sp, #14]
 800ff3a:	e7c5      	b.n	800fec8 <_ZN8touchgfx11BoxProgress8setValueEi+0x84>
 800ff3c:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800ff40:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800ff44:	9000      	str	r0, [sp, #0]
 800ff46:	1a12      	subs	r2, r2, r0
 800ff48:	b212      	sxth	r2, r2
 800ff4a:	2100      	movs	r1, #0
 800ff4c:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800ff50:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	; 0xbe
 800ff54:	f7ff ff43 	bl	800fdde <_ZN8touchgfx8Drawable11setPositionEssss>
 800ff58:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	; 0xbe
 800ff5c:	e7d9      	b.n	800ff12 <_ZN8touchgfx11BoxProgress8setValueEi+0xce>
	...

0800ff60 <_ZN8touchgfx11BoxProgressC1Ev>:
 800ff60:	b510      	push	{r4, lr}
 800ff62:	4604      	mov	r4, r0
 800ff64:	f000 f85a 	bl	801001c <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
 800ff68:	2201      	movs	r2, #1
 800ff6a:	f884 20dd 	strb.w	r2, [r4, #221]	; 0xdd
 800ff6e:	4b16      	ldr	r3, [pc, #88]	; (800ffc8 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
 800ff70:	4a16      	ldr	r2, [pc, #88]	; (800ffcc <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
 800ff72:	6023      	str	r3, [r4, #0]
 800ff74:	f8c4 20b8 	str.w	r2, [r4, #184]	; 0xb8
 800ff78:	2300      	movs	r3, #0
 800ff7a:	22ff      	movs	r2, #255	; 0xff
 800ff7c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ff80:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 800ff84:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 800ff88:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800ff8c:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800ff90:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800ff94:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800ff98:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800ff9c:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800ffa0:	e9c4 3333 	strd	r3, r3, [r4, #204]	; 0xcc
 800ffa4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800ffa8:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 800ffac:	f8a4 30da 	strh.w	r3, [r4, #218]	; 0xda
 800ffb0:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
 800ffb4:	f884 20de 	strb.w	r2, [r4, #222]	; 0xde
 800ffb8:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 800ffbc:	f104 01b8 	add.w	r1, r4, #184	; 0xb8
 800ffc0:	f000 fa04 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ffc4:	4620      	mov	r0, r4
 800ffc6:	bd10      	pop	{r4, pc}
 800ffc8:	08028098 	.word	0x08028098
 800ffcc:	080287f8 	.word	0x080287f8

0800ffd0 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
 800ffd0:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 800ffd4:	4770      	bx	lr

0800ffd6 <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
 800ffd6:	4770      	bx	lr

0800ffd8 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
 800ffd8:	b510      	push	{r4, lr}
 800ffda:	21b8      	movs	r1, #184	; 0xb8
 800ffdc:	4604      	mov	r4, r0
 800ffde:	f014 f90e 	bl	80241fe <_ZdlPvj>
 800ffe2:	4620      	mov	r0, r4
 800ffe4:	bd10      	pop	{r4, pc}

0800ffe6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
 800ffe6:	b570      	push	{r4, r5, r6, lr}
 800ffe8:	4604      	mov	r4, r0
 800ffea:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 800ffee:	3058      	adds	r0, #88	; 0x58
 800fff0:	f006 f8e3 	bl	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800fff4:	6823      	ldr	r3, [r4, #0]
 800fff6:	4620      	mov	r0, r4
 800fff8:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800fffc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010000:	4798      	blx	r3
 8010002:	462b      	mov	r3, r5
 8010004:	4601      	mov	r1, r0
 8010006:	4620      	mov	r0, r4
 8010008:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801000c:	4718      	bx	r3

0801000e <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
 801000e:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 8010012:	428b      	cmp	r3, r1
 8010014:	d001      	beq.n	801001a <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
 8010016:	f7ff bfe6 	b.w	800ffe6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
 801001a:	4770      	bx	lr

0801001c <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
 801001c:	b510      	push	{r4, lr}
 801001e:	4604      	mov	r4, r0
 8010020:	f000 f974 	bl	801030c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8010024:	4b03      	ldr	r3, [pc, #12]	; (8010034 <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
 8010026:	6023      	str	r3, [r4, #0]
 8010028:	2300      	movs	r3, #0
 801002a:	f884 30b4 	strb.w	r3, [r4, #180]	; 0xb4
 801002e:	4620      	mov	r0, r4
 8010030:	bd10      	pop	{r4, pc}
 8010032:	bf00      	nop
 8010034:	0802817c 	.word	0x0802817c

08010038 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010038:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801003c:	4770      	bx	lr

0801003e <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801003e:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010042:	4770      	bx	lr

08010044 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010044:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010048:	4770      	bx	lr

0801004a <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 801004a:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801004e:	4770      	bx	lr

08010050 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8010050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010052:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010056:	461e      	mov	r6, r3
 8010058:	6803      	ldr	r3, [r0, #0]
 801005a:	460f      	mov	r7, r1
 801005c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010060:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010064:	4604      	mov	r4, r0
 8010066:	4615      	mov	r5, r2
 8010068:	4798      	blx	r3
 801006a:	b93e      	cbnz	r6, 801007c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801006c:	1bed      	subs	r5, r5, r7
 801006e:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010072:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010076:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 801007a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801007c:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 8010080:	e7f7      	b.n	8010072 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010082 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010082:	b510      	push	{r4, lr}
 8010084:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010088:	600c      	str	r4, [r1, #0]
 801008a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801008e:	6011      	str	r1, [r2, #0]
 8010090:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010094:	801a      	strh	r2, [r3, #0]
 8010096:	9b02      	ldr	r3, [sp, #8]
 8010098:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801009c:	801a      	strh	r2, [r3, #0]
 801009e:	bd10      	pop	{r4, pc}

080100a0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80100a0:	b510      	push	{r4, lr}
 80100a2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80100a6:	600c      	str	r4, [r1, #0]
 80100a8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100ac:	6011      	str	r1, [r2, #0]
 80100ae:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80100b2:	801a      	strh	r2, [r3, #0]
 80100b4:	bd10      	pop	{r4, pc}

080100b6 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80100b6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80100ba:	600b      	str	r3, [r1, #0]
 80100bc:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80100c0:	6013      	str	r3, [r2, #0]
 80100c2:	4770      	bx	lr

080100c4 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80100c4:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80100c8:	4770      	bx	lr

080100ca <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80100ca:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80100ce:	4770      	bx	lr

080100d0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80100d0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80100d4:	4770      	bx	lr

080100d6 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80100d6:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80100da:	4770      	bx	lr

080100dc <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80100dc:	4770      	bx	lr

080100de <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80100de:	b510      	push	{r4, lr}
 80100e0:	21b4      	movs	r1, #180	; 0xb4
 80100e2:	4604      	mov	r4, r0
 80100e4:	f014 f88b 	bl	80241fe <_ZdlPvj>
 80100e8:	4620      	mov	r0, r4
 80100ea:	bd10      	pop	{r4, pc}

080100ec <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80100ec:	b570      	push	{r4, r5, r6, lr}
 80100ee:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80100f2:	428d      	cmp	r5, r1
 80100f4:	bfb8      	it	lt
 80100f6:	460d      	movlt	r5, r1
 80100f8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100fc:	428d      	cmp	r5, r1
 80100fe:	4604      	mov	r4, r0
 8010100:	bfa8      	it	ge
 8010102:	460d      	movge	r5, r1
 8010104:	4616      	mov	r6, r2
 8010106:	b99a      	cbnz	r2, 8010130 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010108:	6803      	ldr	r3, [r0, #0]
 801010a:	4629      	mov	r1, r5
 801010c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010110:	4798      	blx	r3
 8010112:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010116:	b358      	cbz	r0, 8010170 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8010118:	6803      	ldr	r3, [r0, #0]
 801011a:	68db      	ldr	r3, [r3, #12]
 801011c:	4798      	blx	r3
 801011e:	b338      	cbz	r0, 8010170 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8010120:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010124:	6803      	ldr	r3, [r0, #0]
 8010126:	4621      	mov	r1, r4
 8010128:	689b      	ldr	r3, [r3, #8]
 801012a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801012e:	4718      	bx	r3
 8010130:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010134:	2b00      	cmp	r3, #0
 8010136:	dd07      	ble.n	8010148 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5c>
 8010138:	f005 f86c 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 801013c:	4621      	mov	r1, r4
 801013e:	f005 f895 	bl	801526c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8010142:	2300      	movs	r3, #0
 8010144:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010148:	6823      	ldr	r3, [r4, #0]
 801014a:	4620      	mov	r0, r4
 801014c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010150:	4798      	blx	r3
 8010152:	2300      	movs	r3, #0
 8010154:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010158:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801015c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010160:	f005 f858 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8010164:	4621      	mov	r1, r4
 8010166:	f005 f85b 	bl	8015220 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 801016a:	2301      	movs	r3, #1
 801016c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010170:	bd70      	pop	{r4, r5, r6, pc}

08010172 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010172:	b510      	push	{r4, lr}
 8010174:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010178:	4299      	cmp	r1, r3
 801017a:	bfb8      	it	lt
 801017c:	4619      	movlt	r1, r3
 801017e:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010182:	4299      	cmp	r1, r3
 8010184:	bfa8      	it	ge
 8010186:	4619      	movge	r1, r3
 8010188:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801018c:	428b      	cmp	r3, r1
 801018e:	4604      	mov	r4, r0
 8010190:	d010      	beq.n	80101b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010192:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010196:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801019a:	b158      	cbz	r0, 80101b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801019c:	6803      	ldr	r3, [r0, #0]
 801019e:	68db      	ldr	r3, [r3, #12]
 80101a0:	4798      	blx	r3
 80101a2:	b138      	cbz	r0, 80101b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101a4:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80101a8:	6803      	ldr	r3, [r0, #0]
 80101aa:	4621      	mov	r1, r4
 80101ac:	689b      	ldr	r3, [r3, #8]
 80101ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101b2:	4718      	bx	r3
 80101b4:	bd10      	pop	{r4, pc}

080101b6 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80101b6:	b570      	push	{r4, r5, r6, lr}
 80101b8:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80101bc:	4604      	mov	r4, r0
 80101be:	b3a3      	cbz	r3, 801022a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 80101c0:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80101c4:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80101c8:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80101cc:	3001      	adds	r0, #1
 80101ce:	1ad2      	subs	r2, r2, r3
 80101d0:	b212      	sxth	r2, r2
 80101d2:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 80101d6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80101da:	2100      	movs	r1, #0
 80101dc:	b280      	uxth	r0, r0
 80101de:	47a8      	blx	r5
 80101e0:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80101e4:	6823      	ldr	r3, [r4, #0]
 80101e6:	4401      	add	r1, r0
 80101e8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80101ec:	4620      	mov	r0, r4
 80101ee:	4798      	blx	r3
 80101f0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80101f4:	429a      	cmp	r2, r3
 80101f6:	db18      	blt.n	801022a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 80101f8:	2500      	movs	r5, #0
 80101fa:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80101fe:	f005 f809 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8010202:	4621      	mov	r1, r4
 8010204:	f005 f832 	bl	801526c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8010208:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801020c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010210:	b158      	cbz	r0, 801022a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8010212:	6803      	ldr	r3, [r0, #0]
 8010214:	68db      	ldr	r3, [r3, #12]
 8010216:	4798      	blx	r3
 8010218:	b138      	cbz	r0, 801022a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 801021a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801021e:	6803      	ldr	r3, [r0, #0]
 8010220:	4621      	mov	r1, r4
 8010222:	689b      	ldr	r3, [r3, #8]
 8010224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010228:	4718      	bx	r3
 801022a:	bd70      	pop	{r4, r5, r6, pc}

0801022c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 801022c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801022e:	4604      	mov	r4, r0
 8010230:	460d      	mov	r5, r1
 8010232:	b1a9      	cbz	r1, 8010260 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010234:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010238:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 801023c:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8010240:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010244:	ab01      	add	r3, sp, #4
 8010246:	1a12      	subs	r2, r2, r0
 8010248:	1b89      	subs	r1, r1, r6
 801024a:	1a38      	subs	r0, r7, r0
 801024c:	f006 f979 	bl	8016542 <_ZN8touchgfx6muldivElllRl>
 8010250:	4629      	mov	r1, r5
 8010252:	ab01      	add	r3, sp, #4
 8010254:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010258:	4430      	add	r0, r6
 801025a:	f006 f972 	bl	8016542 <_ZN8touchgfx6muldivElllRl>
 801025e:	b285      	uxth	r5, r0
 8010260:	4628      	mov	r0, r5
 8010262:	b003      	add	sp, #12
 8010264:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010268 <_ZN8touchgfx8DrawableC1Ev>:
 8010268:	4a0a      	ldr	r2, [pc, #40]	; (8010294 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801026a:	6002      	str	r2, [r0, #0]
 801026c:	2200      	movs	r2, #0
 801026e:	8082      	strh	r2, [r0, #4]
 8010270:	80c2      	strh	r2, [r0, #6]
 8010272:	8102      	strh	r2, [r0, #8]
 8010274:	8142      	strh	r2, [r0, #10]
 8010276:	8182      	strh	r2, [r0, #12]
 8010278:	81c2      	strh	r2, [r0, #14]
 801027a:	8202      	strh	r2, [r0, #16]
 801027c:	8242      	strh	r2, [r0, #18]
 801027e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010282:	61c2      	str	r2, [r0, #28]
 8010284:	8402      	strh	r2, [r0, #32]
 8010286:	8442      	strh	r2, [r0, #34]	; 0x22
 8010288:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801028c:	2201      	movs	r2, #1
 801028e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010292:	4770      	bx	lr
 8010294:	08028a00 	.word	0x08028a00

08010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8010298:	b570      	push	{r4, r5, r6, lr}
 801029a:	6803      	ldr	r3, [r0, #0]
 801029c:	4604      	mov	r4, r0
 801029e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80102a0:	4615      	mov	r5, r2
 80102a2:	4798      	blx	r3
 80102a4:	6823      	ldr	r3, [r4, #0]
 80102a6:	4629      	mov	r1, r5
 80102a8:	4620      	mov	r0, r4
 80102aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80102ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102b0:	4718      	bx	r3

080102b2 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80102b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102b6:	4604      	mov	r4, r0
 80102b8:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80102bc:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80102c0:	460e      	mov	r6, r1
 80102c2:	4615      	mov	r5, r2
 80102c4:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80102c8:	4619      	mov	r1, r3
 80102ca:	463a      	mov	r2, r7
 80102cc:	3058      	adds	r0, #88	; 0x58
 80102ce:	4698      	mov	r8, r3
 80102d0:	f7ff ffe2 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80102d4:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80102d8:	4446      	add	r6, r8
 80102da:	42b3      	cmp	r3, r6
 80102dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80102e0:	bfb8      	it	lt
 80102e2:	8126      	strhlt	r6, [r4, #8]
 80102e4:	443d      	add	r5, r7
 80102e6:	42ab      	cmp	r3, r5
 80102e8:	bfb8      	it	lt
 80102ea:	8165      	strhlt	r5, [r4, #10]
 80102ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102f0 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80102f0:	b510      	push	{r4, lr}
 80102f2:	4604      	mov	r4, r0
 80102f4:	302c      	adds	r0, #44	; 0x2c
 80102f6:	f003 f920 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80102fa:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80102fe:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010302:	4620      	mov	r0, r4
 8010304:	f7ff ffc8 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010308:	bd10      	pop	{r4, pc}
	...

0801030c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 801030c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801030e:	4604      	mov	r4, r0
 8010310:	4626      	mov	r6, r4
 8010312:	2500      	movs	r5, #0
 8010314:	f7ff ffa8 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 8010318:	4b23      	ldr	r3, [pc, #140]	; (80103a8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801031a:	62a5      	str	r5, [r4, #40]	; 0x28
 801031c:	f846 3b2c 	str.w	r3, [r6], #44
 8010320:	2226      	movs	r2, #38	; 0x26
 8010322:	4629      	mov	r1, r5
 8010324:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010328:	4630      	mov	r0, r6
 801032a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801032e:	f014 fe11 	bl	8024f54 <memset>
 8010332:	4630      	mov	r0, r6
 8010334:	f7ff ff98 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 8010338:	a902      	add	r1, sp, #8
 801033a:	4b1c      	ldr	r3, [pc, #112]	; (80103ac <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 801033c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801033e:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010342:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8010346:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801034a:	4630      	mov	r0, r6
 801034c:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010350:	f003 f8f3 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010354:	4638      	mov	r0, r7
 8010356:	f7ff ff87 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 801035a:	4b15      	ldr	r3, [pc, #84]	; (80103b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 801035c:	65a3      	str	r3, [r4, #88]	; 0x58
 801035e:	2364      	movs	r3, #100	; 0x64
 8010360:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010364:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8010368:	4b12      	ldr	r3, [pc, #72]	; (80103b4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801036a:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 801036e:	4629      	mov	r1, r5
 8010370:	4630      	mov	r0, r6
 8010372:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8010376:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801037a:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 801037e:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010382:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8010386:	f7f1 ff5f 	bl	8002248 <_ZN8touchgfx8Drawable4setXEs>
 801038a:	4629      	mov	r1, r5
 801038c:	4630      	mov	r0, r6
 801038e:	f7f1 ff5d 	bl	800224c <_ZN8touchgfx8Drawable4setYEs>
 8010392:	4631      	mov	r1, r6
 8010394:	4620      	mov	r0, r4
 8010396:	f000 f819 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801039a:	4620      	mov	r0, r4
 801039c:	4639      	mov	r1, r7
 801039e:	f000 f815 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103a2:	4620      	mov	r0, r4
 80103a4:	b003      	add	sp, #12
 80103a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103a8:	08028258 	.word	0x08028258
 80103ac:	080288d4 	.word	0x080288d4
 80103b0:	0802832c 	.word	0x0802832c
 80103b4:	08016c1f 	.word	0x08016c1f

080103b8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80103b8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80103ba:	2000      	movs	r0, #0
 80103bc:	b12b      	cbz	r3, 80103ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80103be:	b920      	cbnz	r0, 80103ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80103c0:	1a5a      	subs	r2, r3, r1
 80103c2:	4250      	negs	r0, r2
 80103c4:	4150      	adcs	r0, r2
 80103c6:	699b      	ldr	r3, [r3, #24]
 80103c8:	e7f8      	b.n	80103bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80103ca:	4770      	bx	lr

080103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80103cc:	2300      	movs	r3, #0
 80103ce:	6148      	str	r0, [r1, #20]
 80103d0:	618b      	str	r3, [r1, #24]
 80103d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80103d4:	b913      	cbnz	r3, 80103dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80103d6:	6281      	str	r1, [r0, #40]	; 0x28
 80103d8:	4770      	bx	lr
 80103da:	4613      	mov	r3, r2
 80103dc:	699a      	ldr	r2, [r3, #24]
 80103de:	2a00      	cmp	r2, #0
 80103e0:	d1fb      	bne.n	80103da <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80103e2:	6199      	str	r1, [r3, #24]
 80103e4:	4770      	bx	lr

080103e6 <_ZN8touchgfx9Container9removeAllEv>:
 80103e6:	2200      	movs	r2, #0
 80103e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80103ea:	b123      	cbz	r3, 80103f6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80103ec:	6999      	ldr	r1, [r3, #24]
 80103ee:	6281      	str	r1, [r0, #40]	; 0x28
 80103f0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80103f4:	e7f8      	b.n	80103e8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80103f6:	4770      	bx	lr

080103f8 <_ZN8touchgfx9Container6unlinkEv>:
 80103f8:	2300      	movs	r3, #0
 80103fa:	6283      	str	r3, [r0, #40]	; 0x28
 80103fc:	4770      	bx	lr

080103fe <_ZNK8touchgfx9Container12getSolidRectEv>:
 80103fe:	2200      	movs	r2, #0
 8010400:	8002      	strh	r2, [r0, #0]
 8010402:	8042      	strh	r2, [r0, #2]
 8010404:	8082      	strh	r2, [r0, #4]
 8010406:	80c2      	strh	r2, [r0, #6]
 8010408:	4770      	bx	lr

0801040a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801040a:	b570      	push	{r4, r5, r6, lr}
 801040c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801040e:	460d      	mov	r5, r1
 8010410:	4616      	mov	r6, r2
 8010412:	b13c      	cbz	r4, 8010424 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010414:	6823      	ldr	r3, [r4, #0]
 8010416:	4620      	mov	r0, r4
 8010418:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801041a:	4632      	mov	r2, r6
 801041c:	4629      	mov	r1, r5
 801041e:	4798      	blx	r3
 8010420:	69a4      	ldr	r4, [r4, #24]
 8010422:	e7f6      	b.n	8010412 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010424:	bd70      	pop	{r4, r5, r6, pc}

08010426 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010426:	b538      	push	{r3, r4, r5, lr}
 8010428:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801042a:	460d      	mov	r5, r1
 801042c:	b134      	cbz	r4, 801043c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801042e:	682b      	ldr	r3, [r5, #0]
 8010430:	4621      	mov	r1, r4
 8010432:	689b      	ldr	r3, [r3, #8]
 8010434:	4628      	mov	r0, r5
 8010436:	4798      	blx	r3
 8010438:	69a4      	ldr	r4, [r4, #24]
 801043a:	e7f7      	b.n	801042c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 801043c:	bd38      	pop	{r3, r4, r5, pc}

0801043e <_ZNK8touchgfx9Container17invalidateContentEv>:
 801043e:	b510      	push	{r4, lr}
 8010440:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010442:	b12c      	cbz	r4, 8010450 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8010444:	6823      	ldr	r3, [r4, #0]
 8010446:	4620      	mov	r0, r4
 8010448:	699b      	ldr	r3, [r3, #24]
 801044a:	4798      	blx	r3
 801044c:	69a4      	ldr	r4, [r4, #24]
 801044e:	e7f8      	b.n	8010442 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8010450:	bd10      	pop	{r4, pc}

08010452 <_ZN8touchgfx9ContainerD1Ev>:
 8010452:	4770      	bx	lr

08010454 <_ZN8touchgfx9ContainerD0Ev>:
 8010454:	b510      	push	{r4, lr}
 8010456:	212c      	movs	r1, #44	; 0x2c
 8010458:	4604      	mov	r4, r0
 801045a:	f013 fed0 	bl	80241fe <_ZdlPvj>
 801045e:	4620      	mov	r0, r4
 8010460:	bd10      	pop	{r4, pc}

08010462 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010462:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010464:	b19b      	cbz	r3, 801048e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010466:	428b      	cmp	r3, r1
 8010468:	d109      	bne.n	801047e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801046a:	699a      	ldr	r2, [r3, #24]
 801046c:	2100      	movs	r1, #0
 801046e:	6159      	str	r1, [r3, #20]
 8010470:	6282      	str	r2, [r0, #40]	; 0x28
 8010472:	b902      	cbnz	r2, 8010476 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010474:	4770      	bx	lr
 8010476:	6199      	str	r1, [r3, #24]
 8010478:	4770      	bx	lr
 801047a:	4613      	mov	r3, r2
 801047c:	b13a      	cbz	r2, 801048e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801047e:	699a      	ldr	r2, [r3, #24]
 8010480:	428a      	cmp	r2, r1
 8010482:	d1fa      	bne.n	801047a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010484:	698a      	ldr	r2, [r1, #24]
 8010486:	619a      	str	r2, [r3, #24]
 8010488:	2300      	movs	r3, #0
 801048a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801048e:	4770      	bx	lr

08010490 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010490:	b410      	push	{r4}
 8010492:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010494:	4604      	mov	r4, r0
 8010496:	b92b      	cbnz	r3, 80104a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010498:	6803      	ldr	r3, [r0, #0]
 801049a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801049e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80104a0:	4611      	mov	r1, r2
 80104a2:	4718      	bx	r3
 80104a4:	b941      	cbnz	r1, 80104b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80104a6:	6193      	str	r3, [r2, #24]
 80104a8:	6282      	str	r2, [r0, #40]	; 0x28
 80104aa:	6154      	str	r4, [r2, #20]
 80104ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104b0:	4770      	bx	lr
 80104b2:	4603      	mov	r3, r0
 80104b4:	2800      	cmp	r0, #0
 80104b6:	d0f9      	beq.n	80104ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80104b8:	4299      	cmp	r1, r3
 80104ba:	6998      	ldr	r0, [r3, #24]
 80104bc:	d1f9      	bne.n	80104b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80104be:	6190      	str	r0, [r2, #24]
 80104c0:	618a      	str	r2, [r1, #24]
 80104c2:	e7f2      	b.n	80104aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080104c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80104c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104c8:	461f      	mov	r7, r3
 80104ca:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80104ce:	460d      	mov	r5, r1
 80104d0:	4616      	mov	r6, r2
 80104d2:	b103      	cbz	r3, 80104d6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80104d4:	6038      	str	r0, [r7, #0]
 80104d6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80104d8:	b314      	cbz	r4, 8010520 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80104da:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80104de:	b1eb      	cbz	r3, 801051c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80104e4:	428d      	cmp	r5, r1
 80104e6:	db19      	blt.n	801051c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104e8:	8923      	ldrh	r3, [r4, #8]
 80104ea:	b289      	uxth	r1, r1
 80104ec:	440b      	add	r3, r1
 80104ee:	b21b      	sxth	r3, r3
 80104f0:	429d      	cmp	r5, r3
 80104f2:	da13      	bge.n	801051c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104f4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80104f8:	4296      	cmp	r6, r2
 80104fa:	db0f      	blt.n	801051c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104fc:	8963      	ldrh	r3, [r4, #10]
 80104fe:	b292      	uxth	r2, r2
 8010500:	4413      	add	r3, r2
 8010502:	b21b      	sxth	r3, r3
 8010504:	429e      	cmp	r6, r3
 8010506:	da09      	bge.n	801051c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010508:	6823      	ldr	r3, [r4, #0]
 801050a:	1ab2      	subs	r2, r6, r2
 801050c:	1a69      	subs	r1, r5, r1
 801050e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010512:	b212      	sxth	r2, r2
 8010514:	463b      	mov	r3, r7
 8010516:	b209      	sxth	r1, r1
 8010518:	4620      	mov	r0, r4
 801051a:	47c0      	blx	r8
 801051c:	69a4      	ldr	r4, [r4, #24]
 801051e:	e7db      	b.n	80104d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010524 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010528:	4c6e      	ldr	r4, [pc, #440]	; (80106e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801052a:	b0a1      	sub	sp, #132	; 0x84
 801052c:	6824      	ldr	r4, [r4, #0]
 801052e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010530:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010534:	9303      	str	r3, [sp, #12]
 8010536:	2400      	movs	r4, #0
 8010538:	802c      	strh	r4, [r5, #0]
 801053a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801053c:	802c      	strh	r4, [r5, #0]
 801053e:	601c      	str	r4, [r3, #0]
 8010540:	4606      	mov	r6, r0
 8010542:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010546:	f7ff ffbd 	bl	80104c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801054a:	f1b9 0f03 	cmp.w	r9, #3
 801054e:	f340 80c2 	ble.w	80106d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010552:	4631      	mov	r1, r6
 8010554:	a80c      	add	r0, sp, #48	; 0x30
 8010556:	f005 fecb 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801055a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801055e:	9306      	str	r3, [sp, #24]
 8010560:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010564:	9307      	str	r3, [sp, #28]
 8010566:	9b03      	ldr	r3, [sp, #12]
 8010568:	f8d3 a000 	ldr.w	sl, [r3]
 801056c:	f1ba 0f00 	cmp.w	sl, #0
 8010570:	f000 80b4 	beq.w	80106dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010574:	4651      	mov	r1, sl
 8010576:	a810      	add	r0, sp, #64	; 0x40
 8010578:	f005 feba 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801057c:	9b01      	ldr	r3, [sp, #4]
 801057e:	9a06      	ldr	r2, [sp, #24]
 8010580:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010584:	189d      	adds	r5, r3, r2
 8010586:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801058a:	9a07      	ldr	r2, [sp, #28]
 801058c:	2002      	movs	r0, #2
 801058e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010592:	4419      	add	r1, r3
 8010594:	1a6d      	subs	r5, r5, r1
 8010596:	9b02      	ldr	r3, [sp, #8]
 8010598:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801059c:	4413      	add	r3, r2
 801059e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80105a2:	fb92 f2f0 	sdiv	r2, r2, r0
 80105a6:	440a      	add	r2, r1
 80105a8:	1a9b      	subs	r3, r3, r2
 80105aa:	435b      	muls	r3, r3
 80105ac:	fb05 3505 	mla	r5, r5, r5, r3
 80105b0:	4f4d      	ldr	r7, [pc, #308]	; (80106e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80105b2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105b4:	ac10      	add	r4, sp, #64	; 0x40
 80105b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105b8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80105c4:	f1b9 0f0c 	cmp.w	r9, #12
 80105c8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80105cc:	f04f 0303 	mov.w	r3, #3
 80105d0:	bfc8      	it	gt
 80105d2:	4698      	movgt	r8, r3
 80105d4:	f8cd 9000 	str.w	r9, [sp]
 80105d8:	f04f 0400 	mov.w	r4, #0
 80105dc:	bfdc      	itt	le
 80105de:	f109 32ff 	addle.w	r2, r9, #4294967295
 80105e2:	fb92 f8f3 	sdivle	r8, r2, r3
 80105e6:	1c63      	adds	r3, r4, #1
 80105e8:	aa10      	add	r2, sp, #64	; 0x40
 80105ea:	f004 0401 	and.w	r4, r4, #1
 80105ee:	9308      	str	r3, [sp, #32]
 80105f0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80105f4:	9b00      	ldr	r3, [sp, #0]
 80105f6:	fb93 f3f8 	sdiv	r3, r3, r8
 80105fa:	b29b      	uxth	r3, r3
 80105fc:	3404      	adds	r4, #4
 80105fe:	f04f 0b00 	mov.w	fp, #0
 8010602:	9304      	str	r3, [sp, #16]
 8010604:	9a04      	ldr	r2, [sp, #16]
 8010606:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801060a:	fb13 f302 	smulbb	r3, r3, r2
 801060e:	9a01      	ldr	r2, [sp, #4]
 8010610:	b29b      	uxth	r3, r3
 8010612:	1899      	adds	r1, r3, r2
 8010614:	9305      	str	r3, [sp, #20]
 8010616:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801061a:	b209      	sxth	r1, r1
 801061c:	4299      	cmp	r1, r3
 801061e:	db4d      	blt.n	80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010620:	8932      	ldrh	r2, [r6, #8]
 8010622:	4413      	add	r3, r2
 8010624:	b21b      	sxth	r3, r3
 8010626:	4299      	cmp	r1, r3
 8010628:	da48      	bge.n	80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801062a:	9b04      	ldr	r3, [sp, #16]
 801062c:	6827      	ldr	r7, [r4, #0]
 801062e:	fb17 f703 	smulbb	r7, r7, r3
 8010632:	9b02      	ldr	r3, [sp, #8]
 8010634:	b2bf      	uxth	r7, r7
 8010636:	18fa      	adds	r2, r7, r3
 8010638:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801063c:	b212      	sxth	r2, r2
 801063e:	429a      	cmp	r2, r3
 8010640:	db3c      	blt.n	80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010642:	8970      	ldrh	r0, [r6, #10]
 8010644:	4403      	add	r3, r0
 8010646:	b21b      	sxth	r3, r3
 8010648:	429a      	cmp	r2, r3
 801064a:	da37      	bge.n	80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801064c:	2300      	movs	r3, #0
 801064e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010650:	4630      	mov	r0, r6
 8010652:	ab0b      	add	r3, sp, #44	; 0x2c
 8010654:	f7ff ff36 	bl	80104c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010658:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801065a:	b37a      	cbz	r2, 80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801065c:	4552      	cmp	r2, sl
 801065e:	d02d      	beq.n	80106bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010660:	4611      	mov	r1, r2
 8010662:	a80e      	add	r0, sp, #56	; 0x38
 8010664:	9209      	str	r2, [sp, #36]	; 0x24
 8010666:	f005 fe43 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801066a:	9a06      	ldr	r2, [sp, #24]
 801066c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010670:	9b01      	ldr	r3, [sp, #4]
 8010672:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010676:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801067a:	4413      	add	r3, r2
 801067c:	f04f 0e02 	mov.w	lr, #2
 8010680:	fb91 f1fe 	sdiv	r1, r1, lr
 8010684:	4401      	add	r1, r0
 8010686:	1a58      	subs	r0, r3, r1
 8010688:	9a07      	ldr	r2, [sp, #28]
 801068a:	9b02      	ldr	r3, [sp, #8]
 801068c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010690:	fb9c fcfe 	sdiv	ip, ip, lr
 8010694:	4413      	add	r3, r2
 8010696:	448c      	add	ip, r1
 8010698:	eba3 030c 	sub.w	r3, r3, ip
 801069c:	435b      	muls	r3, r3
 801069e:	fb00 3300 	mla	r3, r0, r0, r3
 80106a2:	42ab      	cmp	r3, r5
 80106a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80106a6:	d208      	bcs.n	80106ba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80106a8:	9803      	ldr	r0, [sp, #12]
 80106aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80106ac:	6001      	str	r1, [r0, #0]
 80106ae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80106b0:	9805      	ldr	r0, [sp, #20]
 80106b2:	8008      	strh	r0, [r1, #0]
 80106b4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80106b6:	461d      	mov	r5, r3
 80106b8:	800f      	strh	r7, [r1, #0]
 80106ba:	4692      	mov	sl, r2
 80106bc:	f10b 0b01 	add.w	fp, fp, #1
 80106c0:	f1bb 0f04 	cmp.w	fp, #4
 80106c4:	f104 0408 	add.w	r4, r4, #8
 80106c8:	d19c      	bne.n	8010604 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80106ca:	9b00      	ldr	r3, [sp, #0]
 80106cc:	9c08      	ldr	r4, [sp, #32]
 80106ce:	444b      	add	r3, r9
 80106d0:	4544      	cmp	r4, r8
 80106d2:	9300      	str	r3, [sp, #0]
 80106d4:	d187      	bne.n	80105e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80106d6:	b021      	add	sp, #132	; 0x84
 80106d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106dc:	f04f 35ff 	mov.w	r5, #4294967295
 80106e0:	e766      	b.n	80105b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80106e2:	bf00      	nop
 80106e4:	20002c8c 	.word	0x20002c8c
 80106e8:	08026180 	.word	0x08026180

080106ec <_ZN8touchgfx4RectaNERKS0_>:
 80106ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106f0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80106f4:	888c      	ldrh	r4, [r1, #4]
 80106f6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80106fa:	443c      	add	r4, r7
 80106fc:	b2a4      	uxth	r4, r4
 80106fe:	fa0f f884 	sxth.w	r8, r4
 8010702:	45c1      	cmp	r9, r8
 8010704:	da2f      	bge.n	8010766 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010706:	8882      	ldrh	r2, [r0, #4]
 8010708:	444a      	add	r2, r9
 801070a:	b292      	uxth	r2, r2
 801070c:	fa0f fe82 	sxth.w	lr, r2
 8010710:	4577      	cmp	r7, lr
 8010712:	da28      	bge.n	8010766 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010714:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010718:	88cb      	ldrh	r3, [r1, #6]
 801071a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801071e:	442b      	add	r3, r5
 8010720:	b21b      	sxth	r3, r3
 8010722:	429e      	cmp	r6, r3
 8010724:	da1f      	bge.n	8010766 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010726:	88c3      	ldrh	r3, [r0, #6]
 8010728:	4433      	add	r3, r6
 801072a:	b29b      	uxth	r3, r3
 801072c:	fa0f fc83 	sxth.w	ip, r3
 8010730:	4565      	cmp	r5, ip
 8010732:	da18      	bge.n	8010766 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010734:	454f      	cmp	r7, r9
 8010736:	bfb8      	it	lt
 8010738:	464f      	movlt	r7, r9
 801073a:	42b5      	cmp	r5, r6
 801073c:	bfb8      	it	lt
 801073e:	4635      	movlt	r5, r6
 8010740:	45f0      	cmp	r8, lr
 8010742:	bfd8      	it	le
 8010744:	4622      	movle	r2, r4
 8010746:	1bd2      	subs	r2, r2, r7
 8010748:	8082      	strh	r2, [r0, #4]
 801074a:	884a      	ldrh	r2, [r1, #2]
 801074c:	88c9      	ldrh	r1, [r1, #6]
 801074e:	8007      	strh	r7, [r0, #0]
 8010750:	440a      	add	r2, r1
 8010752:	b292      	uxth	r2, r2
 8010754:	b211      	sxth	r1, r2
 8010756:	458c      	cmp	ip, r1
 8010758:	bfa8      	it	ge
 801075a:	4613      	movge	r3, r2
 801075c:	1b5b      	subs	r3, r3, r5
 801075e:	80c3      	strh	r3, [r0, #6]
 8010760:	8045      	strh	r5, [r0, #2]
 8010762:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010766:	2300      	movs	r3, #0
 8010768:	8003      	strh	r3, [r0, #0]
 801076a:	8043      	strh	r3, [r0, #2]
 801076c:	8083      	strh	r3, [r0, #4]
 801076e:	80c3      	strh	r3, [r0, #6]
 8010770:	e7f7      	b.n	8010762 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010772 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010772:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010776:	2b00      	cmp	r3, #0
 8010778:	dd06      	ble.n	8010788 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801077a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801077e:	2800      	cmp	r0, #0
 8010780:	bfcc      	ite	gt
 8010782:	2000      	movgt	r0, #0
 8010784:	2001      	movle	r0, #1
 8010786:	4770      	bx	lr
 8010788:	2001      	movs	r0, #1
 801078a:	4770      	bx	lr

0801078c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801078c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010790:	2300      	movs	r3, #0
 8010792:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010794:	8003      	strh	r3, [r0, #0]
 8010796:	4604      	mov	r4, r0
 8010798:	8043      	strh	r3, [r0, #2]
 801079a:	8083      	strh	r3, [r0, #4]
 801079c:	80c3      	strh	r3, [r0, #6]
 801079e:	2d00      	cmp	r5, #0
 80107a0:	d040      	beq.n	8010824 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80107a2:	1d28      	adds	r0, r5, #4
 80107a4:	f7ff ffe5 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107a8:	b988      	cbnz	r0, 80107ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80107aa:	4620      	mov	r0, r4
 80107ac:	f7ff ffe1 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107b0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80107b4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80107b8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80107bc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80107c0:	b138      	cbz	r0, 80107d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80107c2:	8022      	strh	r2, [r4, #0]
 80107c4:	8063      	strh	r3, [r4, #2]
 80107c6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80107ca:	f8a4 c006 	strh.w	ip, [r4, #6]
 80107ce:	69ad      	ldr	r5, [r5, #24]
 80107d0:	e7e5      	b.n	801079e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80107d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80107d6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80107da:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80107de:	4290      	cmp	r0, r2
 80107e0:	4607      	mov	r7, r0
 80107e2:	bfa8      	it	ge
 80107e4:	4617      	movge	r7, r2
 80107e6:	4472      	add	r2, lr
 80107e8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80107ec:	8027      	strh	r7, [r4, #0]
 80107ee:	4299      	cmp	r1, r3
 80107f0:	460e      	mov	r6, r1
 80107f2:	4440      	add	r0, r8
 80107f4:	bfa8      	it	ge
 80107f6:	461e      	movge	r6, r3
 80107f8:	4471      	add	r1, lr
 80107fa:	4463      	add	r3, ip
 80107fc:	b200      	sxth	r0, r0
 80107fe:	b212      	sxth	r2, r2
 8010800:	b209      	sxth	r1, r1
 8010802:	b21b      	sxth	r3, r3
 8010804:	4290      	cmp	r0, r2
 8010806:	bfac      	ite	ge
 8010808:	ebc7 0200 	rsbge	r2, r7, r0
 801080c:	ebc7 0202 	rsblt	r2, r7, r2
 8010810:	4299      	cmp	r1, r3
 8010812:	bfac      	ite	ge
 8010814:	ebc6 0301 	rsbge	r3, r6, r1
 8010818:	ebc6 0303 	rsblt	r3, r6, r3
 801081c:	8066      	strh	r6, [r4, #2]
 801081e:	80a2      	strh	r2, [r4, #4]
 8010820:	80e3      	strh	r3, [r4, #6]
 8010822:	e7d4      	b.n	80107ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010824:	4620      	mov	r0, r4
 8010826:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801082a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801082a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801082e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010832:	b383      	cbz	r3, 8010896 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010834:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010836:	b374      	cbz	r4, 8010896 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010838:	f9b1 5000 	ldrsh.w	r5, [r1]
 801083c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010840:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010844:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010848:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801084c:	b303      	cbz	r3, 8010890 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801084e:	4668      	mov	r0, sp
 8010850:	1d21      	adds	r1, r4, #4
 8010852:	f8ad 5000 	strh.w	r5, [sp]
 8010856:	f8ad 6002 	strh.w	r6, [sp, #2]
 801085a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801085e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010862:	f7ff ff43 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8010866:	4668      	mov	r0, sp
 8010868:	f7ff ff83 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801086c:	b980      	cbnz	r0, 8010890 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801086e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010872:	88a2      	ldrh	r2, [r4, #4]
 8010874:	1a9b      	subs	r3, r3, r2
 8010876:	f8ad 3000 	strh.w	r3, [sp]
 801087a:	88e2      	ldrh	r2, [r4, #6]
 801087c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010880:	1a9b      	subs	r3, r3, r2
 8010882:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010886:	6823      	ldr	r3, [r4, #0]
 8010888:	4669      	mov	r1, sp
 801088a:	689b      	ldr	r3, [r3, #8]
 801088c:	4620      	mov	r0, r4
 801088e:	4798      	blx	r3
 8010890:	69a4      	ldr	r4, [r4, #24]
 8010892:	2c00      	cmp	r4, #0
 8010894:	d1d8      	bne.n	8010848 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010896:	b002      	add	sp, #8
 8010898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801089c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801089c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801089e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80108a2:	460d      	mov	r5, r1
 80108a4:	4616      	mov	r6, r2
 80108a6:	b323      	cbz	r3, 80108f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80108a8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108aa:	b314      	cbz	r4, 80108f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80108ac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80108b0:	b1eb      	cbz	r3, 80108ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80108b2:	6828      	ldr	r0, [r5, #0]
 80108b4:	6869      	ldr	r1, [r5, #4]
 80108b6:	466b      	mov	r3, sp
 80108b8:	c303      	stmia	r3!, {r0, r1}
 80108ba:	4668      	mov	r0, sp
 80108bc:	1d21      	adds	r1, r4, #4
 80108be:	f7ff ff15 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 80108c2:	4668      	mov	r0, sp
 80108c4:	f7ff ff55 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108c8:	b988      	cbnz	r0, 80108ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80108ca:	f8bd 3000 	ldrh.w	r3, [sp]
 80108ce:	88a2      	ldrh	r2, [r4, #4]
 80108d0:	1a9b      	subs	r3, r3, r2
 80108d2:	f8ad 3000 	strh.w	r3, [sp]
 80108d6:	88e2      	ldrh	r2, [r4, #6]
 80108d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80108dc:	1a9b      	subs	r3, r3, r2
 80108de:	f8ad 3002 	strh.w	r3, [sp, #2]
 80108e2:	6823      	ldr	r3, [r4, #0]
 80108e4:	4632      	mov	r2, r6
 80108e6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80108e8:	4669      	mov	r1, sp
 80108ea:	4620      	mov	r0, r4
 80108ec:	4798      	blx	r3
 80108ee:	69a4      	ldr	r4, [r4, #24]
 80108f0:	e7db      	b.n	80108aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80108f2:	b002      	add	sp, #8
 80108f4:	bd70      	pop	{r4, r5, r6, pc}

080108f6 <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 80108f6:	f8b0 00ec 	ldrh.w	r0, [r0, #236]	; 0xec
 80108fa:	4770      	bx	lr

080108fc <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 80108fc:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8010900:	4770      	bx	lr

08010902 <_ZNK8touchgfx6Slider11getMinValueEv>:
 8010902:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 8010904:	4770      	bx	lr

08010906 <_ZNK8touchgfx6Slider11getMaxValueEv>:
 8010906:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8010908:	4770      	bx	lr

0801090a <_ZN8touchgfx6Slider8setValueEi>:
 801090a:	b570      	push	{r4, r5, r6, lr}
 801090c:	6803      	ldr	r3, [r0, #0]
 801090e:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	; 0xac
 8010912:	4604      	mov	r4, r0
 8010914:	4798      	blx	r3
 8010916:	462b      	mov	r3, r5
 8010918:	4601      	mov	r1, r0
 801091a:	4620      	mov	r0, r4
 801091c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010920:	4718      	bx	r3

08010922 <_ZNK8touchgfx6Slider15valueToPositionEi>:
 8010922:	b538      	push	{r3, r4, r5, lr}
 8010924:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 8010928:	428c      	cmp	r4, r1
 801092a:	bfa8      	it	ge
 801092c:	460c      	movge	r4, r1
 801092e:	429c      	cmp	r4, r3
 8010930:	bfac      	ite	ge
 8010932:	ebc3 0404 	rsbge	r4, r3, r4
 8010936:	ebc3 0403 	rsblt	r4, r3, r3
 801093a:	6803      	ldr	r3, [r0, #0]
 801093c:	4605      	mov	r5, r0
 801093e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010942:	4798      	blx	r3
 8010944:	682b      	ldr	r3, [r5, #0]
 8010946:	fb00 4404 	mla	r4, r0, r4, r4
 801094a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801094e:	4628      	mov	r0, r5
 8010950:	4798      	blx	r3
 8010952:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 8010956:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 801095a:	fb94 f0f0 	sdiv	r0, r4, r0
 801095e:	2a01      	cmp	r2, #1
 8010960:	bf08      	it	eq
 8010962:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 8010966:	4418      	add	r0, r3
 8010968:	bf04      	itt	eq
 801096a:	1a10      	subeq	r0, r2, r0
 801096c:	18c0      	addeq	r0, r0, r3
 801096e:	b200      	sxth	r0, r0
 8010970:	bd38      	pop	{r3, r4, r5, pc}

08010972 <_ZNK8touchgfx6Slider15positionToValueEs>:
 8010972:	b570      	push	{r4, r5, r6, lr}
 8010974:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 8010978:	428b      	cmp	r3, r1
 801097a:	4605      	mov	r5, r0
 801097c:	460c      	mov	r4, r1
 801097e:	d109      	bne.n	8010994 <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 8010980:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8010982:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8010986:	2b01      	cmp	r3, #1
 8010988:	bf01      	itttt	eq
 801098a:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 801098c:	1a18      	subeq	r0, r3, r0
 801098e:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 8010990:	18c0      	addeq	r0, r0, r3
 8010992:	bd70      	pop	{r4, r5, r6, pc}
 8010994:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 8010998:	428b      	cmp	r3, r1
 801099a:	d101      	bne.n	80109a0 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 801099c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801099e:	e7f0      	b.n	8010982 <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 80109a0:	6803      	ldr	r3, [r0, #0]
 80109a2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80109a6:	4798      	blx	r3
 80109a8:	682b      	ldr	r3, [r5, #0]
 80109aa:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 80109ae:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80109b2:	4606      	mov	r6, r0
 80109b4:	4628      	mov	r0, r5
 80109b6:	1a64      	subs	r4, r4, r1
 80109b8:	4798      	blx	r3
 80109ba:	682b      	ldr	r3, [r5, #0]
 80109bc:	2102      	movs	r1, #2
 80109be:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80109c2:	fb96 f6f1 	sdiv	r6, r6, r1
 80109c6:	fb00 6404 	mla	r4, r0, r4, r6
 80109ca:	4628      	mov	r0, r5
 80109cc:	4798      	blx	r3
 80109ce:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80109d0:	fb94 f0f0 	sdiv	r0, r4, r0
 80109d4:	4418      	add	r0, r3
 80109d6:	e7d4      	b.n	8010982 <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

080109d8 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 80109d8:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80109dc:	2302      	movs	r3, #2
 80109de:	b92a      	cbnz	r2, 80109ec <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 80109e0:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 80109e4:	fb90 f0f3 	sdiv	r0, r0, r3
 80109e8:	b280      	uxth	r0, r0
 80109ea:	4770      	bx	lr
 80109ec:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 80109f0:	e7f8      	b.n	80109e4 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

080109f2 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 80109f2:	b410      	push	{r4}
 80109f4:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80109f8:	6802      	ldr	r2, [r0, #0]
 80109fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80109fe:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 8010a02:	4619      	mov	r1, r3
 8010a04:	4710      	bx	r2

08010a06 <_ZN8touchgfx6Slider13setValueRangeEii>:
 8010a06:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010a08:	428b      	cmp	r3, r1
 8010a0a:	b410      	push	{r4}
 8010a0c:	db09      	blt.n	8010a22 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 8010a0e:	4293      	cmp	r3, r2
 8010a10:	bfa8      	it	ge
 8010a12:	4613      	movge	r3, r2
 8010a14:	6804      	ldr	r4, [r0, #0]
 8010a16:	f8d4 4098 	ldr.w	r4, [r4, #152]	; 0x98
 8010a1a:	46a4      	mov	ip, r4
 8010a1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010a20:	4760      	bx	ip
 8010a22:	460b      	mov	r3, r1
 8010a24:	e7f6      	b.n	8010a14 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

08010a26 <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 8010a26:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 8010a2a:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 8010a2e:	1a10      	subs	r0, r2, r0
 8010a30:	4770      	bx	lr

08010a32 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8010a32:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 8010a36:	1a10      	subs	r0, r2, r0
 8010a38:	4770      	bx	lr

08010a3a <_ZN8touchgfx6SliderD1Ev>:
 8010a3a:	4770      	bx	lr

08010a3c <_ZN8touchgfx6SliderD0Ev>:
 8010a3c:	b510      	push	{r4, lr}
 8010a3e:	21fc      	movs	r1, #252	; 0xfc
 8010a40:	4604      	mov	r4, r0
 8010a42:	f013 fbdc 	bl	80241fe <_ZdlPvj>
 8010a46:	4620      	mov	r0, r4
 8010a48:	bd10      	pop	{r4, pc}

08010a4a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 8010a4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a4e:	790b      	ldrb	r3, [r1, #4]
 8010a50:	4604      	mov	r4, r0
 8010a52:	460d      	mov	r5, r1
 8010a54:	b323      	cbz	r3, 8010aa0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 8010a56:	2b01      	cmp	r3, #1
 8010a58:	d135      	bne.n	8010ac6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8010a5a:	6823      	ldr	r3, [r4, #0]
 8010a5c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8010a60:	f8d3 70ac 	ldr.w	r7, [r3, #172]	; 0xac
 8010a64:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010a68:	2a00      	cmp	r2, #0
 8010a6a:	d12a      	bne.n	8010ac2 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 8010a6c:	88ee      	ldrh	r6, [r5, #6]
 8010a6e:	4620      	mov	r0, r4
 8010a70:	4798      	blx	r3
 8010a72:	1a31      	subs	r1, r6, r0
 8010a74:	b209      	sxth	r1, r1
 8010a76:	4620      	mov	r0, r4
 8010a78:	47b8      	blx	r7
 8010a7a:	792b      	ldrb	r3, [r5, #4]
 8010a7c:	2b01      	cmp	r3, #1
 8010a7e:	d122      	bne.n	8010ac6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8010a80:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8010a84:	b1f8      	cbz	r0, 8010ac6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8010a86:	6803      	ldr	r3, [r0, #0]
 8010a88:	68db      	ldr	r3, [r3, #12]
 8010a8a:	4798      	blx	r3
 8010a8c:	b1d8      	cbz	r0, 8010ac6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8010a8e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8010a92:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010a94:	6803      	ldr	r3, [r0, #0]
 8010a96:	4621      	mov	r1, r4
 8010a98:	689b      	ldr	r3, [r3, #8]
 8010a9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010a9e:	4718      	bx	r3
 8010aa0:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8010aa4:	2800      	cmp	r0, #0
 8010aa6:	d0d8      	beq.n	8010a5a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8010aa8:	6803      	ldr	r3, [r0, #0]
 8010aaa:	68db      	ldr	r3, [r3, #12]
 8010aac:	4798      	blx	r3
 8010aae:	2800      	cmp	r0, #0
 8010ab0:	d0d3      	beq.n	8010a5a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8010ab2:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 8010ab6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010ab8:	6803      	ldr	r3, [r0, #0]
 8010aba:	4621      	mov	r1, r4
 8010abc:	689b      	ldr	r3, [r3, #8]
 8010abe:	4798      	blx	r3
 8010ac0:	e7cb      	b.n	8010a5a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8010ac2:	892e      	ldrh	r6, [r5, #8]
 8010ac4:	e7d3      	b.n	8010a6e <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 8010ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010aca <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 8010aca:	b570      	push	{r4, r5, r6, lr}
 8010acc:	6803      	ldr	r3, [r0, #0]
 8010ace:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8010ad2:	f8d3 60ac 	ldr.w	r6, [r3, #172]	; 0xac
 8010ad6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010ada:	4604      	mov	r4, r0
 8010adc:	b942      	cbnz	r2, 8010af0 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 8010ade:	894d      	ldrh	r5, [r1, #10]
 8010ae0:	4798      	blx	r3
 8010ae2:	1a29      	subs	r1, r5, r0
 8010ae4:	4633      	mov	r3, r6
 8010ae6:	4620      	mov	r0, r4
 8010ae8:	b209      	sxth	r1, r1
 8010aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aee:	4718      	bx	r3
 8010af0:	898d      	ldrh	r5, [r1, #12]
 8010af2:	e7f5      	b.n	8010ae0 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>

08010af4 <_ZN8touchgfx8Drawable5setXYEss>:
 8010af4:	b570      	push	{r4, r5, r6, lr}
 8010af6:	6803      	ldr	r3, [r0, #0]
 8010af8:	4604      	mov	r4, r0
 8010afa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010afc:	4615      	mov	r5, r2
 8010afe:	4798      	blx	r3
 8010b00:	6823      	ldr	r3, [r4, #0]
 8010b02:	4629      	mov	r1, r5
 8010b04:	4620      	mov	r0, r4
 8010b06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010b08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b0c:	4718      	bx	r3

08010b0e <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 8010b0e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b12:	461d      	mov	r5, r3
 8010b14:	f04f 0a00 	mov.w	sl, #0
 8010b18:	b213      	sxth	r3, r2
 8010b1a:	fa0f fb81 	sxth.w	fp, r1
 8010b1e:	4604      	mov	r4, r0
 8010b20:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 8010b24:	4689      	mov	r9, r1
 8010b26:	4690      	mov	r8, r2
 8010b28:	4659      	mov	r1, fp
 8010b2a:	461a      	mov	r2, r3
 8010b2c:	303c      	adds	r0, #60	; 0x3c
 8010b2e:	f8bd 6034 	ldrh.w	r6, [sp, #52]	; 0x34
 8010b32:	f8bd 7030 	ldrh.w	r7, [sp, #48]	; 0x30
 8010b36:	9301      	str	r3, [sp, #4]
 8010b38:	f7ff ffdc 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010b3c:	9b01      	ldr	r3, [sp, #4]
 8010b3e:	4659      	mov	r1, fp
 8010b40:	461a      	mov	r2, r3
 8010b42:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8010b46:	f7ff ffd5 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010b4a:	4652      	mov	r2, sl
 8010b4c:	4651      	mov	r1, sl
 8010b4e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010b52:	f7ff ffcf 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010b56:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8010b5a:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 8010b5e:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 8010b62:	4489      	add	r9, r1
 8010b64:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8010b68:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 8010b6c:	4490      	add	r8, r2
 8010b6e:	f8b4 209e 	ldrh.w	r2, [r4, #158]	; 0x9e
 8010b72:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 8010b76:	4431      	add	r1, r6
 8010b78:	b289      	uxth	r1, r1
 8010b7a:	fa1f f989 	uxth.w	r9, r9
 8010b7e:	442a      	add	r2, r5
 8010b80:	4589      	cmp	r9, r1
 8010b82:	b292      	uxth	r2, r2
 8010b84:	fa1f f888 	uxth.w	r8, r8
 8010b88:	bf8c      	ite	hi
 8010b8a:	fa0f f189 	sxthhi.w	r1, r9
 8010b8e:	b209      	sxthls	r1, r1
 8010b90:	4590      	cmp	r8, r2
 8010b92:	4620      	mov	r0, r4
 8010b94:	bf8c      	ite	hi
 8010b96:	fa0f f288 	sxthhi.w	r2, r8
 8010b9a:	b212      	sxthls	r2, r2
 8010b9c:	f7ff fb7c 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010ba0:	6823      	ldr	r3, [r4, #0]
 8010ba2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010ba4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010ba8:	4620      	mov	r0, r4
 8010baa:	b003      	add	sp, #12
 8010bac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bb0:	4718      	bx	r3

08010bb2 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 8010bb2:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bb6:	461d      	mov	r5, r3
 8010bb8:	fa0f fa81 	sxth.w	sl, r1
 8010bbc:	2301      	movs	r3, #1
 8010bbe:	fa0f fb82 	sxth.w	fp, r2
 8010bc2:	4604      	mov	r4, r0
 8010bc4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010bc8:	4689      	mov	r9, r1
 8010bca:	4690      	mov	r8, r2
 8010bcc:	4651      	mov	r1, sl
 8010bce:	465a      	mov	r2, fp
 8010bd0:	303c      	adds	r0, #60	; 0x3c
 8010bd2:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 8010bd6:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 8010bda:	f7ff ff8b 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010bde:	465a      	mov	r2, fp
 8010be0:	4651      	mov	r1, sl
 8010be2:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8010be6:	f7ff ff85 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010bea:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8010bee:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 8010bf2:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 8010bf6:	4489      	add	r9, r1
 8010bf8:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8010bfc:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 8010c00:	4490      	add	r8, r2
 8010c02:	f8b4 209e 	ldrh.w	r2, [r4, #158]	; 0x9e
 8010c06:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 8010c0a:	4429      	add	r1, r5
 8010c0c:	b289      	uxth	r1, r1
 8010c0e:	fa1f f989 	uxth.w	r9, r9
 8010c12:	4432      	add	r2, r6
 8010c14:	4589      	cmp	r9, r1
 8010c16:	b292      	uxth	r2, r2
 8010c18:	fa1f f888 	uxth.w	r8, r8
 8010c1c:	bf8c      	ite	hi
 8010c1e:	fa0f f189 	sxthhi.w	r1, r9
 8010c22:	b209      	sxthls	r1, r1
 8010c24:	4590      	cmp	r8, r2
 8010c26:	4620      	mov	r0, r4
 8010c28:	bf8c      	ite	hi
 8010c2a:	fa0f f288 	sxthhi.w	r2, r8
 8010c2e:	b212      	sxthls	r2, r2
 8010c30:	f7ff fb32 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010c34:	6823      	ldr	r3, [r4, #0]
 8010c36:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010c38:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	b001      	add	sp, #4
 8010c40:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c44:	4718      	bx	r3

08010c46 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 8010c46:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010c4a:	f9b0 80ec 	ldrsh.w	r8, [r0, #236]	; 0xec
 8010c4e:	4588      	cmp	r8, r1
 8010c50:	4604      	mov	r4, r0
 8010c52:	bfb8      	it	lt
 8010c54:	4688      	movlt	r8, r1
 8010c56:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 8010c5a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8010c5e:	4588      	cmp	r8, r1
 8010c60:	bfa8      	it	ge
 8010c62:	4688      	movge	r8, r1
 8010c64:	3094      	adds	r0, #148	; 0x94
 8010c66:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 8010c6a:	fa1f f788 	uxth.w	r7, r8
 8010c6e:	2b00      	cmp	r3, #0
 8010c70:	d12f      	bne.n	8010cd2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8c>
 8010c72:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8010c76:	4641      	mov	r1, r8
 8010c78:	f7f1 faf8 	bl	800226c <_ZN8touchgfx8Drawable6moveToEss>
 8010c7c:	4630      	mov	r0, r6
 8010c7e:	f005 fa9c 	bl	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8010c82:	6823      	ldr	r3, [r4, #0]
 8010c84:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 8010c88:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	1abf      	subs	r7, r7, r2
 8010c90:	4798      	blx	r3
 8010c92:	b2bf      	uxth	r7, r7
 8010c94:	4407      	add	r7, r0
 8010c96:	f8a4 70c8 	strh.w	r7, [r4, #200]	; 0xc8
 8010c9a:	4630      	mov	r0, r6
 8010c9c:	f005 fa8d 	bl	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8010ca0:	6823      	ldr	r3, [r4, #0]
 8010ca2:	4641      	mov	r1, r8
 8010ca4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010ca8:	4620      	mov	r0, r4
 8010caa:	4798      	blx	r3
 8010cac:	6320      	str	r0, [r4, #48]	; 0x30
 8010cae:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8010cb2:	2800      	cmp	r0, #0
 8010cb4:	d03d      	beq.n	8010d32 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xec>
 8010cb6:	6803      	ldr	r3, [r0, #0]
 8010cb8:	68db      	ldr	r3, [r3, #12]
 8010cba:	4798      	blx	r3
 8010cbc:	2800      	cmp	r0, #0
 8010cbe:	d038      	beq.n	8010d32 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xec>
 8010cc0:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8010cc4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010cc6:	6803      	ldr	r3, [r0, #0]
 8010cc8:	4621      	mov	r1, r4
 8010cca:	689b      	ldr	r3, [r3, #8]
 8010ccc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010cd0:	4718      	bx	r3
 8010cd2:	4642      	mov	r2, r8
 8010cd4:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 8010cd8:	f7f1 fac8 	bl	800226c <_ZN8touchgfx8Drawable6moveToEss>
 8010cdc:	4630      	mov	r0, r6
 8010cde:	f005 fa6c 	bl	80161ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8010ce2:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 8010ce6:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 8010cea:	6823      	ldr	r3, [r4, #0]
 8010cec:	4405      	add	r5, r0
 8010cee:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010cf2:	4620      	mov	r0, r4
 8010cf4:	4798      	blx	r3
 8010cf6:	b2ad      	uxth	r5, r5
 8010cf8:	6823      	ldr	r3, [r4, #0]
 8010cfa:	f9b4 a0c4 	ldrsh.w	sl, [r4, #196]	; 0xc4
 8010cfe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010d02:	1bed      	subs	r5, r5, r7
 8010d04:	1a2d      	subs	r5, r5, r0
 8010d06:	4620      	mov	r0, r4
 8010d08:	4798      	blx	r3
 8010d0a:	f9b4 90c8 	ldrsh.w	r9, [r4, #200]	; 0xc8
 8010d0e:	4438      	add	r0, r7
 8010d10:	b202      	sxth	r2, r0
 8010d12:	b2ad      	uxth	r5, r5
 8010d14:	4651      	mov	r1, sl
 8010d16:	4630      	mov	r0, r6
 8010d18:	f7ff feec 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 8010d1c:	b22a      	sxth	r2, r5
 8010d1e:	4630      	mov	r0, r6
 8010d20:	4649      	mov	r1, r9
 8010d22:	f7ff fab9 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010d26:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 8010d2a:	1a2d      	subs	r5, r5, r0
 8010d2c:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 8010d30:	e7b3      	b.n	8010c9a <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
 8010d32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08010d38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8010d38:	b538      	push	{r3, r4, r5, lr}
 8010d3a:	2226      	movs	r2, #38	; 0x26
 8010d3c:	4604      	mov	r4, r0
 8010d3e:	460d      	mov	r5, r1
 8010d40:	2100      	movs	r1, #0
 8010d42:	f014 f907 	bl	8024f54 <memset>
 8010d46:	4620      	mov	r0, r4
 8010d48:	f7ff fa8e 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 8010d4c:	4b06      	ldr	r3, [pc, #24]	; (8010d68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8010d4e:	6023      	str	r3, [r4, #0]
 8010d50:	882b      	ldrh	r3, [r5, #0]
 8010d52:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010d54:	23ff      	movs	r3, #255	; 0xff
 8010d56:	4620      	mov	r0, r4
 8010d58:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8010d5c:	4629      	mov	r1, r5
 8010d5e:	f002 fbec 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010d62:	4620      	mov	r0, r4
 8010d64:	bd38      	pop	{r3, r4, r5, pc}
 8010d66:	bf00      	nop
 8010d68:	080288d4 	.word	0x080288d4

08010d6c <_ZN8touchgfx6SliderC1Ev>:
 8010d6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d70:	ae02      	add	r6, sp, #8
 8010d72:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010d76:	4604      	mov	r4, r0
 8010d78:	f7ff fa76 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 8010d7c:	f826 7d04 	strh.w	r7, [r6, #-4]!
 8010d80:	2500      	movs	r5, #0
 8010d82:	4b26      	ldr	r3, [pc, #152]	; (8010e1c <_ZN8touchgfx6SliderC1Ev+0xb0>)
 8010d84:	6023      	str	r3, [r4, #0]
 8010d86:	f04f 0b01 	mov.w	fp, #1
 8010d8a:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 8010d8e:	4631      	mov	r1, r6
 8010d90:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 8010d94:	62a5      	str	r5, [r4, #40]	; 0x28
 8010d96:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 8010d9a:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 8010d9e:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 8010da2:	4648      	mov	r0, r9
 8010da4:	f7ff ffc8 	bl	8010d38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010da8:	f104 0894 	add.w	r8, r4, #148	; 0x94
 8010dac:	4631      	mov	r1, r6
 8010dae:	4650      	mov	r0, sl
 8010db0:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010db4:	f7ff ffc0 	bl	8010d38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010db8:	4631      	mov	r1, r6
 8010dba:	4640      	mov	r0, r8
 8010dbc:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 8010dc0:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010dc4:	f7ff ffb8 	bl	8010d38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010dc8:	4630      	mov	r0, r6
 8010dca:	f7ff fa4d 	bl	8010268 <_ZN8touchgfx8DrawableC1Ev>
 8010dce:	4b14      	ldr	r3, [pc, #80]	; (8010e20 <_ZN8touchgfx6SliderC1Ev+0xb4>)
 8010dd0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010dd4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8010dd8:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 8010ddc:	4651      	mov	r1, sl
 8010dde:	4630      	mov	r0, r6
 8010de0:	f8c4 50e8 	str.w	r5, [r4, #232]	; 0xe8
 8010de4:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 8010de8:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 8010dec:	f7ff faee 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010df0:	4649      	mov	r1, r9
 8010df2:	4620      	mov	r0, r4
 8010df4:	f7ff faea 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010df8:	4631      	mov	r1, r6
 8010dfa:	4620      	mov	r0, r4
 8010dfc:	f7ff fae6 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010e00:	4641      	mov	r1, r8
 8010e02:	4620      	mov	r0, r4
 8010e04:	f7ff fae2 	bl	80103cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010e08:	4620      	mov	r0, r4
 8010e0a:	2264      	movs	r2, #100	; 0x64
 8010e0c:	4629      	mov	r1, r5
 8010e0e:	f7ff fdfa 	bl	8010a06 <_ZN8touchgfx6Slider13setValueRangeEii>
 8010e12:	4620      	mov	r0, r4
 8010e14:	b003      	add	sp, #12
 8010e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e1a:	bf00      	nop
 8010e1c:	080283bc 	.word	0x080283bc
 8010e20:	0802832c 	.word	0x0802832c

08010e24 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8010e24:	b570      	push	{r4, r5, r6, lr}
 8010e26:	4604      	mov	r4, r0
 8010e28:	4616      	mov	r6, r2
 8010e2a:	303c      	adds	r0, #60	; 0x3c
 8010e2c:	461d      	mov	r5, r3
 8010e2e:	f002 fb84 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010e32:	4631      	mov	r1, r6
 8010e34:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010e38:	f002 fb7f 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010e3c:	4629      	mov	r1, r5
 8010e3e:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8010e42:	f002 fb7a 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010e46:	f9b4 2072 	ldrsh.w	r2, [r4, #114]	; 0x72
 8010e4a:	f9b4 1070 	ldrsh.w	r1, [r4, #112]	; 0x70
 8010e4e:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8010e52:	f7ff fa21 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e56:	bd70      	pop	{r4, r5, r6, pc}

08010e58 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010e58:	b513      	push	{r0, r1, r4, lr}
 8010e5a:	6803      	ldr	r3, [r0, #0]
 8010e5c:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010e60:	2300      	movs	r3, #0
 8010e62:	e9cd 3300 	strd	r3, r3, [sp]
 8010e66:	466b      	mov	r3, sp
 8010e68:	47a0      	blx	r4
 8010e6a:	b002      	add	sp, #8
 8010e6c:	bd10      	pop	{r4, pc}

08010e6e <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010e6e:	2301      	movs	r3, #1
 8010e70:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010e74:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8010e78:	4770      	bx	lr

08010e7a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010e7a:	2301      	movs	r3, #1
 8010e7c:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010e80:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8010e84:	4770      	bx	lr

08010e86 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010e86:	6843      	ldr	r3, [r0, #4]
 8010e88:	2201      	movs	r2, #1
 8010e8a:	725a      	strb	r2, [r3, #9]
 8010e8c:	6840      	ldr	r0, [r0, #4]
 8010e8e:	6803      	ldr	r3, [r0, #0]
 8010e90:	691b      	ldr	r3, [r3, #16]
 8010e92:	4718      	bx	r3

08010e94 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010e94:	6840      	ldr	r0, [r0, #4]
 8010e96:	6803      	ldr	r3, [r0, #0]
 8010e98:	689b      	ldr	r3, [r3, #8]
 8010e9a:	4718      	bx	r3

08010e9c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010e9c:	b530      	push	{r4, r5, lr}
 8010e9e:	b08b      	sub	sp, #44	; 0x2c
 8010ea0:	6804      	ldr	r4, [r0, #0]
 8010ea2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010ea6:	9509      	str	r5, [sp, #36]	; 0x24
 8010ea8:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010eac:	9508      	str	r5, [sp, #32]
 8010eae:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010eb2:	9507      	str	r5, [sp, #28]
 8010eb4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010eb8:	9506      	str	r5, [sp, #24]
 8010eba:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010ebe:	9505      	str	r5, [sp, #20]
 8010ec0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010ec4:	9504      	str	r5, [sp, #16]
 8010ec6:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010eca:	9503      	str	r5, [sp, #12]
 8010ecc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010ed0:	9502      	str	r5, [sp, #8]
 8010ed2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010ed6:	e9cd 3500 	strd	r3, r5, [sp]
 8010eda:	4613      	mov	r3, r2
 8010edc:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010ede:	2200      	movs	r2, #0
 8010ee0:	47a0      	blx	r4
 8010ee2:	b00b      	add	sp, #44	; 0x2c
 8010ee4:	bd30      	pop	{r4, r5, pc}
	...

08010ee8 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010ee8:	4b04      	ldr	r3, [pc, #16]	; (8010efc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010eea:	781b      	ldrb	r3, [r3, #0]
 8010eec:	b123      	cbz	r3, 8010ef8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010eee:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8010ef2:	f080 0001 	eor.w	r0, r0, #1
 8010ef6:	4770      	bx	lr
 8010ef8:	2001      	movs	r0, #1
 8010efa:	4770      	bx	lr
 8010efc:	20002c8a 	.word	0x20002c8a

08010f00 <_ZN8touchgfx3HAL8endFrameEv>:
 8010f00:	b510      	push	{r4, lr}
 8010f02:	4604      	mov	r4, r0
 8010f04:	6840      	ldr	r0, [r0, #4]
 8010f06:	6803      	ldr	r3, [r0, #0]
 8010f08:	689b      	ldr	r3, [r3, #8]
 8010f0a:	4798      	blx	r3
 8010f0c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8010f10:	b113      	cbz	r3, 8010f18 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010f12:	2301      	movs	r3, #1
 8010f14:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8010f18:	bd10      	pop	{r4, pc}

08010f1a <_ZN8touchgfx3HAL10initializeEv>:
 8010f1a:	b510      	push	{r4, lr}
 8010f1c:	4604      	mov	r4, r0
 8010f1e:	f7f0 f9a3 	bl	8001268 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010f22:	6860      	ldr	r0, [r4, #4]
 8010f24:	6803      	ldr	r3, [r0, #0]
 8010f26:	68db      	ldr	r3, [r3, #12]
 8010f28:	4798      	blx	r3
 8010f2a:	68e0      	ldr	r0, [r4, #12]
 8010f2c:	6803      	ldr	r3, [r0, #0]
 8010f2e:	689b      	ldr	r3, [r3, #8]
 8010f30:	4798      	blx	r3
 8010f32:	6823      	ldr	r3, [r4, #0]
 8010f34:	4620      	mov	r0, r4
 8010f36:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010f38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f3c:	4718      	bx	r3

08010f3e <_ZN8touchgfx3HAL9taskEntryEv>:
 8010f3e:	b508      	push	{r3, lr}
 8010f40:	6803      	ldr	r3, [r0, #0]
 8010f42:	4604      	mov	r4, r0
 8010f44:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010f48:	4798      	blx	r3
 8010f4a:	6823      	ldr	r3, [r4, #0]
 8010f4c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010f4e:	4620      	mov	r0, r4
 8010f50:	4798      	blx	r3
 8010f52:	f7f0 f9c3 	bl	80012dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8010f56:	6823      	ldr	r3, [r4, #0]
 8010f58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010f5a:	e7f8      	b.n	8010f4e <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08010f5c <_ZN8touchgfx3HAL4tickEv>:
 8010f5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	4d5b      	ldr	r5, [pc, #364]	; (80110d0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010f62:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010f66:	4604      	mov	r4, r0
 8010f68:	4798      	blx	r3
 8010f6a:	2800      	cmp	r0, #0
 8010f6c:	f000 8095 	beq.w	801109a <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010f70:	2001      	movs	r0, #1
 8010f72:	f7f0 f893 	bl	800109c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010f76:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8010f7a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8010f7e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8010f82:	2600      	movs	r6, #0
 8010f84:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8010f88:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010f8c:	b133      	cbz	r3, 8010f9c <_ZN8touchgfx3HAL4tickEv+0x40>
 8010f8e:	6823      	ldr	r3, [r4, #0]
 8010f90:	4620      	mov	r0, r4
 8010f92:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010f96:	4798      	blx	r3
 8010f98:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8010f9c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010fa0:	6862      	ldr	r2, [r4, #4]
 8010fa2:	f083 0301 	eor.w	r3, r3, #1
 8010fa6:	7253      	strb	r3, [r2, #9]
 8010fa8:	2601      	movs	r6, #1
 8010faa:	702e      	strb	r6, [r5, #0]
 8010fac:	f004 f932 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8010fb0:	6803      	ldr	r3, [r0, #0]
 8010fb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010fb4:	4798      	blx	r3
 8010fb6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010fba:	b90b      	cbnz	r3, 8010fc0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010fbc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8010fc0:	f004 f928 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8010fc4:	6803      	ldr	r3, [r0, #0]
 8010fc6:	695b      	ldr	r3, [r3, #20]
 8010fc8:	4798      	blx	r3
 8010fca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010fcc:	6803      	ldr	r3, [r0, #0]
 8010fce:	691b      	ldr	r3, [r3, #16]
 8010fd0:	4798      	blx	r3
 8010fd2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010fd6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8010fda:	3b01      	subs	r3, #1
 8010fdc:	b2db      	uxtb	r3, r3
 8010fde:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8010fe2:	b10a      	cbz	r2, 8010fe8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010fe4:	2b00      	cmp	r3, #0
 8010fe6:	d1eb      	bne.n	8010fc0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010fe8:	4a3a      	ldr	r2, [pc, #232]	; (80110d4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010fea:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8010fee:	7813      	ldrb	r3, [r2, #0]
 8010ff0:	3301      	adds	r3, #1
 8010ff2:	b25b      	sxtb	r3, r3
 8010ff4:	4299      	cmp	r1, r3
 8010ff6:	7013      	strb	r3, [r2, #0]
 8010ff8:	dc10      	bgt.n	801101c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010ffa:	68e0      	ldr	r0, [r4, #12]
 8010ffc:	2300      	movs	r3, #0
 8010ffe:	7013      	strb	r3, [r2, #0]
 8011000:	6803      	ldr	r3, [r0, #0]
 8011002:	aa03      	add	r2, sp, #12
 8011004:	68db      	ldr	r3, [r3, #12]
 8011006:	a902      	add	r1, sp, #8
 8011008:	4798      	blx	r3
 801100a:	6823      	ldr	r3, [r4, #0]
 801100c:	2800      	cmp	r0, #0
 801100e:	d050      	beq.n	80110b2 <_ZN8touchgfx3HAL4tickEv+0x156>
 8011010:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011014:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011018:	4620      	mov	r0, r4
 801101a:	4798      	blx	r3
 801101c:	6960      	ldr	r0, [r4, #20]
 801101e:	2300      	movs	r3, #0
 8011020:	f88d 3007 	strb.w	r3, [sp, #7]
 8011024:	b158      	cbz	r0, 801103e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011026:	6803      	ldr	r3, [r0, #0]
 8011028:	f10d 0107 	add.w	r1, sp, #7
 801102c:	68db      	ldr	r3, [r3, #12]
 801102e:	4798      	blx	r3
 8011030:	b128      	cbz	r0, 801103e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011032:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011034:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011038:	6803      	ldr	r3, [r0, #0]
 801103a:	68db      	ldr	r3, [r3, #12]
 801103c:	4798      	blx	r3
 801103e:	f104 001c 	add.w	r0, r4, #28
 8011042:	f013 f827 	bl	8024094 <_ZN8touchgfx8Gestures4tickEv>
 8011046:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 801104a:	b30b      	cbz	r3, 8011090 <_ZN8touchgfx3HAL4tickEv+0x134>
 801104c:	6920      	ldr	r0, [r4, #16]
 801104e:	6803      	ldr	r3, [r0, #0]
 8011050:	691b      	ldr	r3, [r3, #16]
 8011052:	4798      	blx	r3
 8011054:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8011056:	4606      	mov	r6, r0
 8011058:	b903      	cbnz	r3, 801105c <_ZN8touchgfx3HAL4tickEv+0x100>
 801105a:	6720      	str	r0, [r4, #112]	; 0x70
 801105c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 801105e:	4a1e      	ldr	r2, [pc, #120]	; (80110d8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011060:	1af3      	subs	r3, r6, r3
 8011062:	4293      	cmp	r3, r2
 8011064:	d914      	bls.n	8011090 <_ZN8touchgfx3HAL4tickEv+0x134>
 8011066:	6920      	ldr	r0, [r4, #16]
 8011068:	6803      	ldr	r3, [r0, #0]
 801106a:	699b      	ldr	r3, [r3, #24]
 801106c:	4798      	blx	r3
 801106e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8011070:	2264      	movs	r2, #100	; 0x64
 8011072:	1af3      	subs	r3, r6, r3
 8011074:	fbb3 f3f2 	udiv	r3, r3, r2
 8011078:	fbb0 f0f3 	udiv	r0, r0, r3
 801107c:	2800      	cmp	r0, #0
 801107e:	dc1d      	bgt.n	80110bc <_ZN8touchgfx3HAL4tickEv+0x160>
 8011080:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8011084:	6920      	ldr	r0, [r4, #16]
 8011086:	6803      	ldr	r3, [r0, #0]
 8011088:	2100      	movs	r1, #0
 801108a:	69db      	ldr	r3, [r3, #28]
 801108c:	4798      	blx	r3
 801108e:	6726      	str	r6, [r4, #112]	; 0x70
 8011090:	f004 f8c0 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8011094:	6803      	ldr	r3, [r0, #0]
 8011096:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011098:	4798      	blx	r3
 801109a:	6823      	ldr	r3, [r4, #0]
 801109c:	4620      	mov	r0, r4
 801109e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80110a2:	4798      	blx	r3
 80110a4:	2001      	movs	r0, #1
 80110a6:	f7ef fffb 	bl	80010a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80110aa:	2300      	movs	r3, #0
 80110ac:	702b      	strb	r3, [r5, #0]
 80110ae:	b004      	add	sp, #16
 80110b0:	bd70      	pop	{r4, r5, r6, pc}
 80110b2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80110b6:	4620      	mov	r0, r4
 80110b8:	4798      	blx	r3
 80110ba:	e7af      	b.n	801101c <_ZN8touchgfx3HAL4tickEv+0xc0>
 80110bc:	2863      	cmp	r0, #99	; 0x63
 80110be:	bfcb      	itete	gt
 80110c0:	2300      	movgt	r3, #0
 80110c2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80110c6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80110ca:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80110ce:	e7d9      	b.n	8011084 <_ZN8touchgfx3HAL4tickEv+0x128>
 80110d0:	20002c90 	.word	0x20002c90
 80110d4:	20002c91 	.word	0x20002c91
 80110d8:	05f5e100 	.word	0x05f5e100

080110dc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80110dc:	f7f0 b8d8 	b.w	8001290 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080110e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80110e0:	6581      	str	r1, [r0, #88]	; 0x58
 80110e2:	301c      	adds	r0, #28
 80110e4:	f012 bfd4 	b.w	8024090 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080110e8 <_ZN8touchgfx3HAL5touchEll>:
 80110e8:	b530      	push	{r4, r5, lr}
 80110ea:	b087      	sub	sp, #28
 80110ec:	4604      	mov	r4, r0
 80110ee:	a804      	add	r0, sp, #16
 80110f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80110f4:	f003 fdec 	bl	8014cd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80110f8:	9b04      	ldr	r3, [sp, #16]
 80110fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80110fe:	a906      	add	r1, sp, #24
 8011100:	9b05      	ldr	r3, [sp, #20]
 8011102:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011106:	a803      	add	r0, sp, #12
 8011108:	f003 fe34 	bl	8014d74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801110c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8011110:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011114:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011118:	f104 001c 	add.w	r0, r4, #28
 801111c:	b189      	cbz	r1, 8011142 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801111e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8011122:	9300      	str	r3, [sp, #0]
 8011124:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8011128:	4613      	mov	r3, r2
 801112a:	462a      	mov	r2, r5
 801112c:	f012 ffc0 	bl	80240b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011130:	b128      	cbz	r0, 801113e <_ZN8touchgfx3HAL5touchEll+0x56>
 8011132:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011136:	65e3      	str	r3, [r4, #92]	; 0x5c
 8011138:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801113c:	6623      	str	r3, [r4, #96]	; 0x60
 801113e:	b007      	add	sp, #28
 8011140:	bd30      	pop	{r4, r5, pc}
 8011142:	f012 fff5 	bl	8024130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011146:	2301      	movs	r3, #1
 8011148:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801114c:	e7f1      	b.n	8011132 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801114e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801114e:	b510      	push	{r4, lr}
 8011150:	2b00      	cmp	r3, #0
 8011152:	d046      	beq.n	80111e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011154:	ea81 0002 	eor.w	r0, r1, r2
 8011158:	07c4      	lsls	r4, r0, #31
 801115a:	d508      	bpl.n	801116e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801115c:	440b      	add	r3, r1
 801115e:	3a01      	subs	r2, #1
 8011160:	428b      	cmp	r3, r1
 8011162:	d93e      	bls.n	80111e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011164:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011168:	f801 0b01 	strb.w	r0, [r1], #1
 801116c:	e7f8      	b.n	8011160 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801116e:	07d0      	lsls	r0, r2, #31
 8011170:	bf42      	ittt	mi
 8011172:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011176:	f801 0b01 	strbmi.w	r0, [r1], #1
 801117a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801117e:	2b01      	cmp	r3, #1
 8011180:	d911      	bls.n	80111a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011182:	ea81 0402 	eor.w	r4, r1, r2
 8011186:	07a4      	lsls	r4, r4, #30
 8011188:	4610      	mov	r0, r2
 801118a:	d022      	beq.n	80111d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801118c:	f023 0401 	bic.w	r4, r3, #1
 8011190:	440c      	add	r4, r1
 8011192:	428c      	cmp	r4, r1
 8011194:	4602      	mov	r2, r0
 8011196:	d904      	bls.n	80111a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011198:	8812      	ldrh	r2, [r2, #0]
 801119a:	f821 2b02 	strh.w	r2, [r1], #2
 801119e:	3002      	adds	r0, #2
 80111a0:	e7f7      	b.n	8011192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80111a2:	f003 0301 	and.w	r3, r3, #1
 80111a6:	f023 0003 	bic.w	r0, r3, #3
 80111aa:	4408      	add	r0, r1
 80111ac:	4288      	cmp	r0, r1
 80111ae:	4614      	mov	r4, r2
 80111b0:	d904      	bls.n	80111bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80111b2:	6824      	ldr	r4, [r4, #0]
 80111b4:	f841 4b04 	str.w	r4, [r1], #4
 80111b8:	3204      	adds	r2, #4
 80111ba:	e7f7      	b.n	80111ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80111bc:	f003 0303 	and.w	r3, r3, #3
 80111c0:	440b      	add	r3, r1
 80111c2:	3a01      	subs	r2, #1
 80111c4:	428b      	cmp	r3, r1
 80111c6:	d90c      	bls.n	80111e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80111c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80111cc:	f801 0b01 	strb.w	r0, [r1], #1
 80111d0:	e7f8      	b.n	80111c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80111d2:	0790      	lsls	r0, r2, #30
 80111d4:	d0e7      	beq.n	80111a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80111d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80111da:	f821 0b02 	strh.w	r0, [r1], #2
 80111de:	3b02      	subs	r3, #2
 80111e0:	e7e1      	b.n	80111a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80111e2:	2001      	movs	r0, #1
 80111e4:	bd10      	pop	{r4, pc}

080111e6 <_ZN8touchgfx3HAL7noTouchEv>:
 80111e6:	b510      	push	{r4, lr}
 80111e8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 80111ec:	4604      	mov	r4, r0
 80111ee:	b153      	cbz	r3, 8011206 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80111f0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 80111f4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80111f8:	2101      	movs	r1, #1
 80111fa:	301c      	adds	r0, #28
 80111fc:	f012 ff98 	bl	8024130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011200:	2300      	movs	r3, #0
 8011202:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011206:	bd10      	pop	{r4, pc}

08011208 <_ZN8touchgfx3HAL3lcdEv>:
 8011208:	4b04      	ldr	r3, [pc, #16]	; (801121c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 801120a:	681b      	ldr	r3, [r3, #0]
 801120c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011210:	b10a      	cbz	r2, 8011216 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8011212:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011214:	b900      	cbnz	r0, 8011218 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8011216:	6898      	ldr	r0, [r3, #8]
 8011218:	4770      	bx	lr
 801121a:	bf00      	nop
 801121c:	20002c8c 	.word	0x20002c8c

08011220 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011224:	b085      	sub	sp, #20
 8011226:	ad04      	add	r5, sp, #16
 8011228:	4604      	mov	r4, r0
 801122a:	2000      	movs	r0, #0
 801122c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011230:	69a0      	ldr	r0, [r4, #24]
 8011232:	6806      	ldr	r6, [r0, #0]
 8011234:	9501      	str	r5, [sp, #4]
 8011236:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801123a:	9500      	str	r5, [sp, #0]
 801123c:	6835      	ldr	r5, [r6, #0]
 801123e:	4699      	mov	r9, r3
 8011240:	460f      	mov	r7, r1
 8011242:	4690      	mov	r8, r2
 8011244:	47a8      	blx	r5
 8011246:	4d10      	ldr	r5, [pc, #64]	; (8011288 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011248:	4606      	mov	r6, r0
 801124a:	f8a5 9000 	strh.w	r9, [r5]
 801124e:	f7ff ffdb 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 8011252:	6803      	ldr	r3, [r0, #0]
 8011254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011256:	4798      	blx	r3
 8011258:	b128      	cbz	r0, 8011266 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801125a:	2801      	cmp	r0, #1
 801125c:	d00b      	beq.n	8011276 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801125e:	4630      	mov	r0, r6
 8011260:	b005      	add	sp, #20
 8011262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011266:	882b      	ldrh	r3, [r5, #0]
 8011268:	fb08 7203 	mla	r2, r8, r3, r7
 801126c:	9b03      	ldr	r3, [sp, #12]
 801126e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011272:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011274:	e7f3      	b.n	801125e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011276:	882a      	ldrh	r2, [r5, #0]
 8011278:	9b03      	ldr	r3, [sp, #12]
 801127a:	fb08 7202 	mla	r2, r8, r2, r7
 801127e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011282:	1a9a      	subs	r2, r3, r2
 8011284:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011286:	e7ea      	b.n	801125e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011288:	20002c86 	.word	0x20002c86

0801128c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801128c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801128e:	b08b      	sub	sp, #44	; 0x2c
 8011290:	4617      	mov	r7, r2
 8011292:	4604      	mov	r4, r0
 8011294:	460e      	mov	r6, r1
 8011296:	461d      	mov	r5, r3
 8011298:	f7ff ffb6 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 801129c:	6803      	ldr	r3, [r0, #0]
 801129e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112a0:	4798      	blx	r3
 80112a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80112a6:	9007      	str	r0, [sp, #28]
 80112a8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80112ac:	4b0d      	ldr	r3, [pc, #52]	; (80112e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80112ae:	6822      	ldr	r2, [r4, #0]
 80112b0:	881b      	ldrh	r3, [r3, #0]
 80112b2:	9306      	str	r3, [sp, #24]
 80112b4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80112b8:	9305      	str	r3, [sp, #20]
 80112ba:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80112be:	9304      	str	r3, [sp, #16]
 80112c0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80112c4:	9303      	str	r3, [sp, #12]
 80112c6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80112ca:	9302      	str	r3, [sp, #8]
 80112cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80112d0:	e9cd 5300 	strd	r5, r3, [sp]
 80112d4:	4631      	mov	r1, r6
 80112d6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80112d8:	463b      	mov	r3, r7
 80112da:	2200      	movs	r2, #0
 80112dc:	4620      	mov	r0, r4
 80112de:	47a8      	blx	r5
 80112e0:	b00b      	add	sp, #44	; 0x2c
 80112e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112e4:	20002c86 	.word	0x20002c86

080112e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80112e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80112ec:	4698      	mov	r8, r3
 80112ee:	6803      	ldr	r3, [r0, #0]
 80112f0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80112f2:	4b15      	ldr	r3, [pc, #84]	; (8011348 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80112f4:	b08b      	sub	sp, #44	; 0x2c
 80112f6:	4617      	mov	r7, r2
 80112f8:	f8b3 9000 	ldrh.w	r9, [r3]
 80112fc:	460e      	mov	r6, r1
 80112fe:	4604      	mov	r4, r0
 8011300:	f7ff ff82 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 8011304:	6803      	ldr	r3, [r0, #0]
 8011306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011308:	4798      	blx	r3
 801130a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801130e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011312:	2302      	movs	r3, #2
 8011314:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011318:	2301      	movs	r3, #1
 801131a:	9305      	str	r3, [sp, #20]
 801131c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011320:	9304      	str	r3, [sp, #16]
 8011322:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011326:	9303      	str	r3, [sp, #12]
 8011328:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801132c:	9302      	str	r3, [sp, #8]
 801132e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011332:	2200      	movs	r2, #0
 8011334:	e9cd 8300 	strd	r8, r3, [sp]
 8011338:	4631      	mov	r1, r6
 801133a:	463b      	mov	r3, r7
 801133c:	4620      	mov	r0, r4
 801133e:	47a8      	blx	r5
 8011340:	b00b      	add	sp, #44	; 0x2c
 8011342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011346:	bf00      	nop
 8011348:	20002c86 	.word	0x20002c86

0801134c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801134c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011350:	4698      	mov	r8, r3
 8011352:	6803      	ldr	r3, [r0, #0]
 8011354:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011356:	4b11      	ldr	r3, [pc, #68]	; (801139c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011358:	b087      	sub	sp, #28
 801135a:	f8b3 9000 	ldrh.w	r9, [r3]
 801135e:	460e      	mov	r6, r1
 8011360:	4617      	mov	r7, r2
 8011362:	4604      	mov	r4, r0
 8011364:	f7ff ff50 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 8011368:	6803      	ldr	r3, [r0, #0]
 801136a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801136c:	4798      	blx	r3
 801136e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011372:	f8cd 900c 	str.w	r9, [sp, #12]
 8011376:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801137a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801137e:	9302      	str	r3, [sp, #8]
 8011380:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011384:	9301      	str	r3, [sp, #4]
 8011386:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801138a:	9300      	str	r3, [sp, #0]
 801138c:	463a      	mov	r2, r7
 801138e:	4643      	mov	r3, r8
 8011390:	4631      	mov	r1, r6
 8011392:	4620      	mov	r0, r4
 8011394:	47a8      	blx	r5
 8011396:	b007      	add	sp, #28
 8011398:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801139c:	20002c86 	.word	0x20002c86

080113a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80113a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113a4:	4604      	mov	r4, r0
 80113a6:	b08f      	sub	sp, #60	; 0x3c
 80113a8:	4610      	mov	r0, r2
 80113aa:	460d      	mov	r5, r1
 80113ac:	4691      	mov	r9, r2
 80113ae:	461e      	mov	r6, r3
 80113b0:	f007 f8b8 	bl	8018524 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80113b4:	2800      	cmp	r0, #0
 80113b6:	f000 809d 	beq.w	80114f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80113ba:	6823      	ldr	r3, [r4, #0]
 80113bc:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80113c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80113c2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801155c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80113c6:	4f61      	ldr	r7, [pc, #388]	; (801154c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80113c8:	4620      	mov	r0, r4
 80113ca:	4798      	blx	r3
 80113cc:	6823      	ldr	r3, [r4, #0]
 80113ce:	4620      	mov	r0, r4
 80113d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113d2:	4798      	blx	r3
 80113d4:	f8bb 3000 	ldrh.w	r3, [fp]
 80113d8:	9301      	str	r3, [sp, #4]
 80113da:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80113de:	f8ba 3000 	ldrh.w	r3, [sl]
 80113e2:	9302      	str	r3, [sp, #8]
 80113e4:	883b      	ldrh	r3, [r7, #0]
 80113e6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80113ea:	9303      	str	r3, [sp, #12]
 80113ec:	4b58      	ldr	r3, [pc, #352]	; (8011550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80113ee:	9305      	str	r3, [sp, #20]
 80113f0:	881a      	ldrh	r2, [r3, #0]
 80113f2:	9204      	str	r2, [sp, #16]
 80113f4:	4640      	mov	r0, r8
 80113f6:	f007 f929 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80113fa:	8038      	strh	r0, [r7, #0]
 80113fc:	4640      	mov	r0, r8
 80113fe:	f007 f959 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011402:	9b05      	ldr	r3, [sp, #20]
 8011404:	b280      	uxth	r0, r0
 8011406:	8018      	strh	r0, [r3, #0]
 8011408:	4b52      	ldr	r3, [pc, #328]	; (8011554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801140a:	781b      	ldrb	r3, [r3, #0]
 801140c:	2b00      	cmp	r3, #0
 801140e:	d174      	bne.n	80114fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011410:	883b      	ldrh	r3, [r7, #0]
 8011412:	f8ab 3000 	strh.w	r3, [fp]
 8011416:	f8aa 0000 	strh.w	r0, [sl]
 801141a:	4648      	mov	r0, r9
 801141c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011420:	f007 f880 	bl	8018524 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011424:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011428:	2200      	movs	r2, #0
 801142a:	4611      	mov	r1, r2
 801142c:	4628      	mov	r0, r5
 801142e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011432:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011436:	f7ff fb5d 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 801143a:	2301      	movs	r3, #1
 801143c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011440:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011444:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011448:	2b00      	cmp	r3, #0
 801144a:	dd5c      	ble.n	8011506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801144c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011450:	2b00      	cmp	r3, #0
 8011452:	dd58      	ble.n	8011506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011454:	462a      	mov	r2, r5
 8011456:	ab0a      	add	r3, sp, #40	; 0x28
 8011458:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801145c:	6851      	ldr	r1, [r2, #4]
 801145e:	c303      	stmia	r3!, {r0, r1}
 8011460:	4631      	mov	r1, r6
 8011462:	a80a      	add	r0, sp, #40	; 0x28
 8011464:	f7ff f942 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8011468:	4b38      	ldr	r3, [pc, #224]	; (801154c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801146a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801146e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011472:	2100      	movs	r1, #0
 8011474:	aa0a      	add	r2, sp, #40	; 0x28
 8011476:	4b36      	ldr	r3, [pc, #216]	; (8011550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011478:	910c      	str	r1, [sp, #48]	; 0x30
 801147a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801147e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011482:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011486:	ab08      	add	r3, sp, #32
 8011488:	e883 0003 	stmia.w	r3, {r0, r1}
 801148c:	4618      	mov	r0, r3
 801148e:	a90c      	add	r1, sp, #48	; 0x30
 8011490:	f7ff f92c 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8011494:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011496:	2b00      	cmp	r3, #0
 8011498:	d13c      	bne.n	8011514 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801149a:	2000      	movs	r0, #0
 801149c:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 80114a0:	2600      	movs	r6, #0
 80114a2:	682a      	ldr	r2, [r5, #0]
 80114a4:	696b      	ldr	r3, [r5, #20]
 80114a6:	616e      	str	r6, [r5, #20]
 80114a8:	9305      	str	r3, [sp, #20]
 80114aa:	6892      	ldr	r2, [r2, #8]
 80114ac:	a908      	add	r1, sp, #32
 80114ae:	4628      	mov	r0, r5
 80114b0:	4790      	blx	r2
 80114b2:	9b05      	ldr	r3, [sp, #20]
 80114b4:	616b      	str	r3, [r5, #20]
 80114b6:	4652      	mov	r2, sl
 80114b8:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 80114bc:	4649      	mov	r1, r9
 80114be:	4628      	mov	r0, r5
 80114c0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80114c4:	f7ff fb16 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 80114c8:	4b23      	ldr	r3, [pc, #140]	; (8011558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80114ca:	9a01      	ldr	r2, [sp, #4]
 80114cc:	801a      	strh	r2, [r3, #0]
 80114ce:	4b23      	ldr	r3, [pc, #140]	; (801155c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80114d0:	9a02      	ldr	r2, [sp, #8]
 80114d2:	801a      	strh	r2, [r3, #0]
 80114d4:	4b1d      	ldr	r3, [pc, #116]	; (801154c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80114d6:	9a03      	ldr	r2, [sp, #12]
 80114d8:	801a      	strh	r2, [r3, #0]
 80114da:	4b1d      	ldr	r3, [pc, #116]	; (8011550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80114dc:	9a04      	ldr	r2, [sp, #16]
 80114de:	801a      	strh	r2, [r3, #0]
 80114e0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80114e4:	6823      	ldr	r3, [r4, #0]
 80114e6:	4620      	mov	r0, r4
 80114e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114ea:	4798      	blx	r3
 80114ec:	6823      	ldr	r3, [r4, #0]
 80114ee:	4620      	mov	r0, r4
 80114f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114f2:	4798      	blx	r3
 80114f4:	b00f      	add	sp, #60	; 0x3c
 80114f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114fa:	883b      	ldrh	r3, [r7, #0]
 80114fc:	f8ab 0000 	strh.w	r0, [fp]
 8011500:	f8aa 3000 	strh.w	r3, [sl]
 8011504:	e789      	b.n	801141a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011506:	462a      	mov	r2, r5
 8011508:	ab0a      	add	r3, sp, #40	; 0x28
 801150a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801150e:	6851      	ldr	r1, [r2, #4]
 8011510:	c303      	stmia	r3!, {r0, r1}
 8011512:	e7a9      	b.n	8011468 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011514:	a807      	add	r0, sp, #28
 8011516:	f007 fa09 	bl	801892c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801151a:	4606      	mov	r6, r0
 801151c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801151e:	6803      	ldr	r3, [r0, #0]
 8011520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011522:	4798      	blx	r3
 8011524:	4286      	cmp	r6, r0
 8011526:	d1b8      	bne.n	801149a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011528:	f7ff fe6e 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 801152c:	6803      	ldr	r3, [r0, #0]
 801152e:	4606      	mov	r6, r0
 8011530:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011532:	9305      	str	r3, [sp, #20]
 8011534:	a807      	add	r0, sp, #28
 8011536:	f007 f9f9 	bl	801892c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801153a:	9b05      	ldr	r3, [sp, #20]
 801153c:	4601      	mov	r1, r0
 801153e:	4630      	mov	r0, r6
 8011540:	4798      	blx	r3
 8011542:	f080 0001 	eor.w	r0, r0, #1
 8011546:	b2c0      	uxtb	r0, r0
 8011548:	e7a8      	b.n	801149c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801154a:	bf00      	nop
 801154c:	20002c80 	.word	0x20002c80
 8011550:	20002c82 	.word	0x20002c82
 8011554:	20002c84 	.word	0x20002c84
 8011558:	20002c86 	.word	0x20002c86
 801155c:	20002c88 	.word	0x20002c88

08011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011560:	b510      	push	{r4, lr}
 8011562:	4b07      	ldr	r3, [pc, #28]	; (8011580 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011564:	781b      	ldrb	r3, [r3, #0]
 8011566:	4604      	mov	r4, r0
 8011568:	b13b      	cbz	r3, 801157a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801156a:	6803      	ldr	r3, [r0, #0]
 801156c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801156e:	4798      	blx	r3
 8011570:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011572:	4283      	cmp	r3, r0
 8011574:	d101      	bne.n	801157a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011576:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011578:	bd10      	pop	{r4, pc}
 801157a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801157c:	e7fc      	b.n	8011578 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801157e:	bf00      	nop
 8011580:	20002c8a 	.word	0x20002c8a

08011584 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011588:	b08a      	sub	sp, #40	; 0x28
 801158a:	461d      	mov	r5, r3
 801158c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011590:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011594:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011598:	f8ad 3018 	strh.w	r3, [sp, #24]
 801159c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80115a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80115a4:	2400      	movs	r4, #0
 80115a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80115aa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80115ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115b2:	4690      	mov	r8, r2
 80115b4:	4607      	mov	r7, r0
 80115b6:	9404      	str	r4, [sp, #16]
 80115b8:	f88d 4020 	strb.w	r4, [sp, #32]
 80115bc:	f7ff ffd0 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80115c0:	fb06 8505 	mla	r5, r6, r5, r8
 80115c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80115c8:	6878      	ldr	r0, [r7, #4]
 80115ca:	9505      	str	r5, [sp, #20]
 80115cc:	f8ad 601e 	strh.w	r6, [sp, #30]
 80115d0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80115d4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80115d8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80115dc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80115e0:	6803      	ldr	r3, [r0, #0]
 80115e2:	a901      	add	r1, sp, #4
 80115e4:	685b      	ldr	r3, [r3, #4]
 80115e6:	4798      	blx	r3
 80115e8:	b00a      	add	sp, #40	; 0x28
 80115ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080115ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80115ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80115f2:	b08b      	sub	sp, #44	; 0x2c
 80115f4:	2400      	movs	r4, #0
 80115f6:	461d      	mov	r5, r3
 80115f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80115fc:	4688      	mov	r8, r1
 80115fe:	4691      	mov	r9, r2
 8011600:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011604:	9404      	str	r4, [sp, #16]
 8011606:	4607      	mov	r7, r0
 8011608:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801160c:	f7ff ffa8 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011610:	fb06 9505 	mla	r5, r6, r5, r9
 8011614:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011618:	f8ad 3018 	strh.w	r3, [sp, #24]
 801161c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011620:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011624:	6878      	ldr	r0, [r7, #4]
 8011626:	9505      	str	r5, [sp, #20]
 8011628:	f8ad 301a 	strh.w	r3, [sp, #26]
 801162c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011630:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011634:	f8cd 8010 	str.w	r8, [sp, #16]
 8011638:	f8ad 4020 	strh.w	r4, [sp, #32]
 801163c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011640:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011644:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011648:	6803      	ldr	r3, [r0, #0]
 801164a:	a901      	add	r1, sp, #4
 801164c:	685b      	ldr	r3, [r3, #4]
 801164e:	4798      	blx	r3
 8011650:	b00b      	add	sp, #44	; 0x2c
 8011652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801165c:	b08a      	sub	sp, #40	; 0x28
 801165e:	4698      	mov	r8, r3
 8011660:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011664:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011668:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801166c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011670:	2300      	movs	r3, #0
 8011672:	2d0b      	cmp	r5, #11
 8011674:	4606      	mov	r6, r0
 8011676:	9304      	str	r3, [sp, #16]
 8011678:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801167c:	d138      	bne.n	80116f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801167e:	2380      	movs	r3, #128	; 0x80
 8011680:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011684:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011688:	f8ad 3018 	strh.w	r3, [sp, #24]
 801168c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011690:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011694:	f88d 0020 	strb.w	r0, [sp, #32]
 8011698:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801169c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80116a0:	4630      	mov	r0, r6
 80116a2:	9203      	str	r2, [sp, #12]
 80116a4:	f7ff ff5c 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116a8:	2c0b      	cmp	r4, #11
 80116aa:	bf98      	it	ls
 80116ac:	4b1b      	ldrls	r3, [pc, #108]	; (801171c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80116ae:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80116b2:	bf98      	it	ls
 80116b4:	5d19      	ldrbls	r1, [r3, r4]
 80116b6:	f8ad 701e 	strh.w	r7, [sp, #30]
 80116ba:	bf88      	it	hi
 80116bc:	2100      	movhi	r1, #0
 80116be:	fb02 8307 	mla	r3, r2, r7, r8
 80116c2:	10c9      	asrs	r1, r1, #3
 80116c4:	fb01 0003 	mla	r0, r1, r3, r0
 80116c8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80116cc:	9005      	str	r0, [sp, #20]
 80116ce:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80116d2:	6870      	ldr	r0, [r6, #4]
 80116d4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80116d8:	2300      	movs	r3, #0
 80116da:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80116de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80116e2:	6803      	ldr	r3, [r0, #0]
 80116e4:	a901      	add	r1, sp, #4
 80116e6:	685b      	ldr	r3, [r3, #4]
 80116e8:	4798      	blx	r3
 80116ea:	b00a      	add	sp, #40	; 0x28
 80116ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116f0:	2d02      	cmp	r5, #2
 80116f2:	d109      	bne.n	8011708 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80116f4:	28ff      	cmp	r0, #255	; 0xff
 80116f6:	d105      	bne.n	8011704 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80116f8:	f1bc 0f00 	cmp.w	ip, #0
 80116fc:	bf14      	ite	ne
 80116fe:	2340      	movne	r3, #64	; 0x40
 8011700:	2320      	moveq	r3, #32
 8011702:	e7bd      	b.n	8011680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011704:	2340      	movs	r3, #64	; 0x40
 8011706:	e7bb      	b.n	8011680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011708:	28ff      	cmp	r0, #255	; 0xff
 801170a:	d105      	bne.n	8011718 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801170c:	f1bc 0f00 	cmp.w	ip, #0
 8011710:	bf14      	ite	ne
 8011712:	2304      	movne	r3, #4
 8011714:	2301      	moveq	r3, #1
 8011716:	e7b3      	b.n	8011680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011718:	2304      	movs	r3, #4
 801171a:	e7b1      	b.n	8011680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801171c:	08028480 	.word	0x08028480

08011720 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011724:	b08b      	sub	sp, #44	; 0x2c
 8011726:	461d      	mov	r5, r3
 8011728:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801172c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011730:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011734:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011738:	bf14      	ite	ne
 801173a:	2308      	movne	r3, #8
 801173c:	2302      	moveq	r3, #2
 801173e:	2400      	movs	r4, #0
 8011740:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011744:	4688      	mov	r8, r1
 8011746:	4693      	mov	fp, r2
 8011748:	9404      	str	r4, [sp, #16]
 801174a:	4607      	mov	r7, r0
 801174c:	f7ff ff08 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011750:	2e0b      	cmp	r6, #11
 8011752:	bf98      	it	ls
 8011754:	4b15      	ldrls	r3, [pc, #84]	; (80117ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011756:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801175a:	bf98      	it	ls
 801175c:	5d9c      	ldrbls	r4, [r3, r6]
 801175e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011762:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011766:	fb05 b50a 	mla	r5, r5, sl, fp
 801176a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801176e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011772:	10e4      	asrs	r4, r4, #3
 8011774:	fb04 0405 	mla	r4, r4, r5, r0
 8011778:	2300      	movs	r3, #0
 801177a:	6878      	ldr	r0, [r7, #4]
 801177c:	9405      	str	r4, [sp, #20]
 801177e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011782:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011786:	f8cd 8010 	str.w	r8, [sp, #16]
 801178a:	f88d 9020 	strb.w	r9, [sp, #32]
 801178e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011792:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011796:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801179a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801179e:	6803      	ldr	r3, [r0, #0]
 80117a0:	a901      	add	r1, sp, #4
 80117a2:	685b      	ldr	r3, [r3, #4]
 80117a4:	4798      	blx	r3
 80117a6:	b00b      	add	sp, #44	; 0x2c
 80117a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117ac:	08028480 	.word	0x08028480

080117b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80117b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117b4:	461e      	mov	r6, r3
 80117b6:	4b0a      	ldr	r3, [pc, #40]	; (80117e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80117b8:	460f      	mov	r7, r1
 80117ba:	881d      	ldrh	r5, [r3, #0]
 80117bc:	4690      	mov	r8, r2
 80117be:	f7ff fd23 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 80117c2:	6803      	ldr	r3, [r0, #0]
 80117c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117c6:	4798      	blx	r3
 80117c8:	280b      	cmp	r0, #11
 80117ca:	bf9a      	itte	ls
 80117cc:	4b05      	ldrls	r3, [pc, #20]	; (80117e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80117ce:	5c1c      	ldrbls	r4, [r3, r0]
 80117d0:	2400      	movhi	r4, #0
 80117d2:	fb08 7005 	mla	r0, r8, r5, r7
 80117d6:	10e4      	asrs	r4, r4, #3
 80117d8:	fb04 6000 	mla	r0, r4, r0, r6
 80117dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80117e0:	20002c86 	.word	0x20002c86
 80117e4:	08028480 	.word	0x08028480

080117e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80117e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117ea:	b08b      	sub	sp, #44	; 0x2c
 80117ec:	461f      	mov	r7, r3
 80117ee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80117f2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80117f6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80117fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80117fe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011802:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011806:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801180a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801180e:	2500      	movs	r5, #0
 8011810:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011814:	f88d 3020 	strb.w	r3, [sp, #32]
 8011818:	4604      	mov	r4, r0
 801181a:	4616      	mov	r6, r2
 801181c:	9504      	str	r5, [sp, #16]
 801181e:	f7ff fe9f 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011822:	463a      	mov	r2, r7
 8011824:	4631      	mov	r1, r6
 8011826:	4603      	mov	r3, r0
 8011828:	4620      	mov	r0, r4
 801182a:	f7ff ffc1 	bl	80117b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801182e:	4b0e      	ldr	r3, [pc, #56]	; (8011868 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011830:	9005      	str	r0, [sp, #20]
 8011832:	881b      	ldrh	r3, [r3, #0]
 8011834:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011838:	f7ff fce6 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 801183c:	6803      	ldr	r3, [r0, #0]
 801183e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011840:	4798      	blx	r3
 8011842:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011844:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011848:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801184c:	9304      	str	r3, [sp, #16]
 801184e:	6860      	ldr	r0, [r4, #4]
 8011850:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011854:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011858:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801185c:	6803      	ldr	r3, [r0, #0]
 801185e:	a901      	add	r1, sp, #4
 8011860:	685b      	ldr	r3, [r3, #4]
 8011862:	4798      	blx	r3
 8011864:	b00b      	add	sp, #44	; 0x2c
 8011866:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011868:	20002c86 	.word	0x20002c86

0801186c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801186c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801186e:	b08d      	sub	sp, #52	; 0x34
 8011870:	466b      	mov	r3, sp
 8011872:	e883 0006 	stmia.w	r3, {r1, r2}
 8011876:	2300      	movs	r3, #0
 8011878:	9306      	str	r3, [sp, #24]
 801187a:	6803      	ldr	r3, [r0, #0]
 801187c:	f8bd 6000 	ldrh.w	r6, [sp]
 8011880:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011882:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011886:	2501      	movs	r5, #1
 8011888:	9503      	str	r5, [sp, #12]
 801188a:	4604      	mov	r4, r0
 801188c:	4798      	blx	r3
 801188e:	463a      	mov	r2, r7
 8011890:	4631      	mov	r1, r6
 8011892:	4603      	mov	r3, r0
 8011894:	4620      	mov	r0, r4
 8011896:	f7ff ff8b 	bl	80117b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801189a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801189c:	9307      	str	r3, [sp, #28]
 801189e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80118a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80118a6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80118aa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80118ae:	4b0f      	ldr	r3, [pc, #60]	; (80118ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80118b0:	9004      	str	r0, [sp, #16]
 80118b2:	881b      	ldrh	r3, [r3, #0]
 80118b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80118b8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80118bc:	f7ff fca4 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 80118c0:	6803      	ldr	r3, [r0, #0]
 80118c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118c4:	4798      	blx	r3
 80118c6:	23ff      	movs	r3, #255	; 0xff
 80118c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80118cc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80118d0:	6860      	ldr	r0, [r4, #4]
 80118d2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80118d6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80118da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80118de:	6803      	ldr	r3, [r0, #0]
 80118e0:	a903      	add	r1, sp, #12
 80118e2:	685b      	ldr	r3, [r3, #4]
 80118e4:	4798      	blx	r3
 80118e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80118e8:	b00d      	add	sp, #52	; 0x34
 80118ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118ec:	20002c86 	.word	0x20002c86

080118f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80118f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118f4:	b08c      	sub	sp, #48	; 0x30
 80118f6:	461e      	mov	r6, r3
 80118f8:	466d      	mov	r5, sp
 80118fa:	2300      	movs	r3, #0
 80118fc:	e885 0006 	stmia.w	r5, {r1, r2}
 8011900:	9306      	str	r3, [sp, #24]
 8011902:	6803      	ldr	r3, [r0, #0]
 8011904:	f8bd 7000 	ldrh.w	r7, [sp]
 8011908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801190a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801190e:	2501      	movs	r5, #1
 8011910:	9503      	str	r5, [sp, #12]
 8011912:	4604      	mov	r4, r0
 8011914:	4798      	blx	r3
 8011916:	4642      	mov	r2, r8
 8011918:	4639      	mov	r1, r7
 801191a:	4603      	mov	r3, r0
 801191c:	4620      	mov	r0, r4
 801191e:	f7ff ff47 	bl	80117b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011922:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011926:	f8ad 3020 	strh.w	r3, [sp, #32]
 801192a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801192e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011932:	4b11      	ldr	r3, [pc, #68]	; (8011978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011934:	9004      	str	r0, [sp, #16]
 8011936:	881b      	ldrh	r3, [r3, #0]
 8011938:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801193c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801193e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011942:	9607      	str	r6, [sp, #28]
 8011944:	f7ff fc60 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 8011948:	6803      	ldr	r3, [r0, #0]
 801194a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801194c:	4798      	blx	r3
 801194e:	23ff      	movs	r3, #255	; 0xff
 8011950:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011954:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011958:	6860      	ldr	r0, [r4, #4]
 801195a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801195e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011962:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011966:	6803      	ldr	r3, [r0, #0]
 8011968:	a903      	add	r1, sp, #12
 801196a:	685b      	ldr	r3, [r3, #4]
 801196c:	4798      	blx	r3
 801196e:	4630      	mov	r0, r6
 8011970:	b00c      	add	sp, #48	; 0x30
 8011972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011976:	bf00      	nop
 8011978:	20002c86 	.word	0x20002c86

0801197c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801197c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801197e:	b085      	sub	sp, #20
 8011980:	ac02      	add	r4, sp, #8
 8011982:	e884 0006 	stmia.w	r4, {r1, r2}
 8011986:	4605      	mov	r5, r0
 8011988:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801198c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011990:	f7ff fde6 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011994:	463a      	mov	r2, r7
 8011996:	4603      	mov	r3, r0
 8011998:	4631      	mov	r1, r6
 801199a:	4628      	mov	r0, r5
 801199c:	f7ff ff08 	bl	80117b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80119a0:	4a05      	ldr	r2, [pc, #20]	; (80119b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80119a2:	682b      	ldr	r3, [r5, #0]
 80119a4:	8812      	ldrh	r2, [r2, #0]
 80119a6:	9200      	str	r2, [sp, #0]
 80119a8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80119aa:	e894 0006 	ldmia.w	r4, {r1, r2}
 80119ae:	4603      	mov	r3, r0
 80119b0:	4628      	mov	r0, r5
 80119b2:	47b0      	blx	r6
 80119b4:	b005      	add	sp, #20
 80119b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119b8:	20002c86 	.word	0x20002c86

080119bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80119bc:	b570      	push	{r4, r5, r6, lr}
 80119be:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 80119c2:	4604      	mov	r4, r0
 80119c4:	b19b      	cbz	r3, 80119ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80119c6:	2002      	movs	r0, #2
 80119c8:	f7ef fb6c 	bl	80010a4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80119cc:	2300      	movs	r3, #0
 80119ce:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80119d2:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80119d6:	6823      	ldr	r3, [r4, #0]
 80119d8:	4620      	mov	r0, r4
 80119da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80119de:	f7ff fdbf 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80119e2:	462b      	mov	r3, r5
 80119e4:	4601      	mov	r1, r0
 80119e6:	4620      	mov	r0, r4
 80119e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119ec:	4718      	bx	r3
 80119ee:	bd70      	pop	{r4, r5, r6, pc}

080119f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80119f0:	b538      	push	{r3, r4, r5, lr}
 80119f2:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 80119f6:	428b      	cmp	r3, r1
 80119f8:	4604      	mov	r4, r0
 80119fa:	460d      	mov	r5, r1
 80119fc:	d006      	beq.n	8011a0c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80119fe:	6803      	ldr	r3, [r0, #0]
 8011a00:	b929      	cbnz	r1, 8011a0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011a02:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011a06:	4798      	blx	r3
 8011a08:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 8011a0c:	bd38      	pop	{r3, r4, r5, pc}
 8011a0e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011a12:	e7f8      	b.n	8011a06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011a14 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011a14:	b510      	push	{r4, lr}
 8011a16:	4b0d      	ldr	r3, [pc, #52]	; (8011a4c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011a18:	781b      	ldrb	r3, [r3, #0]
 8011a1a:	4604      	mov	r4, r0
 8011a1c:	b95b      	cbnz	r3, 8011a36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011a1e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011a22:	2b02      	cmp	r3, #2
 8011a24:	d007      	beq.n	8011a36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011a26:	6840      	ldr	r0, [r0, #4]
 8011a28:	f000 f912 	bl	8011c50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011a2c:	b118      	cbz	r0, 8011a36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011a2e:	6862      	ldr	r2, [r4, #4]
 8011a30:	7a53      	ldrb	r3, [r2, #9]
 8011a32:	2b00      	cmp	r3, #0
 8011a34:	d0fc      	beq.n	8011a30 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011a36:	f7ef fc21 	bl	800127c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011a3a:	4620      	mov	r0, r4
 8011a3c:	2100      	movs	r1, #0
 8011a3e:	f7ff ffd7 	bl	80119f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011a42:	4620      	mov	r0, r4
 8011a44:	f7ff fd8c 	bl	8011560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011a48:	bd10      	pop	{r4, pc}
 8011a4a:	bf00      	nop
 8011a4c:	20002c8a 	.word	0x20002c8a

08011a50 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011a50:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011a54:	1a13      	subs	r3, r2, r0
 8011a56:	4258      	negs	r0, r3
 8011a58:	4158      	adcs	r0, r3
 8011a5a:	4770      	bx	lr

08011a5c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011a5c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011a60:	1a9b      	subs	r3, r3, r2
 8011a62:	2b00      	cmp	r3, #0
 8011a64:	bfdc      	itt	le
 8011a66:	6882      	ldrle	r2, [r0, #8]
 8011a68:	189b      	addle	r3, r3, r2
 8011a6a:	2b01      	cmp	r3, #1
 8011a6c:	bfcc      	ite	gt
 8011a6e:	2000      	movgt	r0, #0
 8011a70:	2001      	movle	r0, #1
 8011a72:	4770      	bx	lr

08011a74 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011a74:	6902      	ldr	r2, [r0, #16]
 8011a76:	6843      	ldr	r3, [r0, #4]
 8011a78:	2024      	movs	r0, #36	; 0x24
 8011a7a:	fb00 3002 	mla	r0, r0, r2, r3
 8011a7e:	4770      	bx	lr

08011a80 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011a80:	6803      	ldr	r3, [r0, #0]
 8011a82:	691b      	ldr	r3, [r3, #16]
 8011a84:	4718      	bx	r3

08011a86 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011a86:	b570      	push	{r4, r5, r6, lr}
 8011a88:	2301      	movs	r3, #1
 8011a8a:	7203      	strb	r3, [r0, #8]
 8011a8c:	4604      	mov	r4, r0
 8011a8e:	6840      	ldr	r0, [r0, #4]
 8011a90:	6803      	ldr	r3, [r0, #0]
 8011a92:	699b      	ldr	r3, [r3, #24]
 8011a94:	4798      	blx	r3
 8011a96:	6803      	ldr	r3, [r0, #0]
 8011a98:	2b40      	cmp	r3, #64	; 0x40
 8011a9a:	4605      	mov	r5, r0
 8011a9c:	d00c      	beq.n	8011ab8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a9e:	d810      	bhi.n	8011ac2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011aa0:	2b04      	cmp	r3, #4
 8011aa2:	d01d      	beq.n	8011ae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011aa4:	d804      	bhi.n	8011ab0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011aa6:	2b01      	cmp	r3, #1
 8011aa8:	d006      	beq.n	8011ab8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011aaa:	2b02      	cmp	r3, #2
 8011aac:	d02c      	beq.n	8011b08 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011aae:	bd70      	pop	{r4, r5, r6, pc}
 8011ab0:	2b08      	cmp	r3, #8
 8011ab2:	d01d      	beq.n	8011af0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011ab4:	2b20      	cmp	r3, #32
 8011ab6:	d1fa      	bne.n	8011aae <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011ab8:	6823      	ldr	r3, [r4, #0]
 8011aba:	4620      	mov	r0, r4
 8011abc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011abe:	4798      	blx	r3
 8011ac0:	e013      	b.n	8011aea <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011ac2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011ac6:	d0f7      	beq.n	8011ab8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011ac8:	d804      	bhi.n	8011ad4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011aca:	2b80      	cmp	r3, #128	; 0x80
 8011acc:	d0f4      	beq.n	8011ab8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011ace:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011ad2:	e7f0      	b.n	8011ab6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011ad4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011ad8:	d0ee      	beq.n	8011ab8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011ada:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011ade:	e7e5      	b.n	8011aac <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011ae0:	6823      	ldr	r3, [r4, #0]
 8011ae2:	7f01      	ldrb	r1, [r0, #28]
 8011ae4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ae6:	4620      	mov	r0, r4
 8011ae8:	4798      	blx	r3
 8011aea:	6823      	ldr	r3, [r4, #0]
 8011aec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011aee:	e006      	b.n	8011afe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011af0:	6823      	ldr	r3, [r4, #0]
 8011af2:	7f01      	ldrb	r1, [r0, #28]
 8011af4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011af6:	4620      	mov	r0, r4
 8011af8:	4798      	blx	r3
 8011afa:	6823      	ldr	r3, [r4, #0]
 8011afc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011afe:	4629      	mov	r1, r5
 8011b00:	4620      	mov	r0, r4
 8011b02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b06:	4718      	bx	r3
 8011b08:	6823      	ldr	r3, [r4, #0]
 8011b0a:	4620      	mov	r0, r4
 8011b0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011b0e:	4798      	blx	r3
 8011b10:	e7f3      	b.n	8011afa <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011b12 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011b12:	4770      	bx	lr

08011b14 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011b14:	4770      	bx	lr

08011b16 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011b16:	4770      	bx	lr

08011b18 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011b18:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011b1c:	1ad2      	subs	r2, r2, r3
 8011b1e:	2a00      	cmp	r2, #0
 8011b20:	b510      	push	{r4, lr}
 8011b22:	bfdc      	itt	le
 8011b24:	6884      	ldrle	r4, [r0, #8]
 8011b26:	1912      	addle	r2, r2, r4
 8011b28:	2a01      	cmp	r2, #1
 8011b2a:	dd16      	ble.n	8011b5a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011b2c:	6842      	ldr	r2, [r0, #4]
 8011b2e:	2424      	movs	r4, #36	; 0x24
 8011b30:	fb04 2303 	mla	r3, r4, r3, r2
 8011b34:	f101 0220 	add.w	r2, r1, #32
 8011b38:	f851 4b04 	ldr.w	r4, [r1], #4
 8011b3c:	f843 4b04 	str.w	r4, [r3], #4
 8011b40:	4291      	cmp	r1, r2
 8011b42:	d1f9      	bne.n	8011b38 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011b44:	780a      	ldrb	r2, [r1, #0]
 8011b46:	701a      	strb	r2, [r3, #0]
 8011b48:	68c3      	ldr	r3, [r0, #12]
 8011b4a:	6882      	ldr	r2, [r0, #8]
 8011b4c:	f3bf 8f5b 	dmb	ish
 8011b50:	3301      	adds	r3, #1
 8011b52:	429a      	cmp	r2, r3
 8011b54:	bfd8      	it	le
 8011b56:	1a9b      	suble	r3, r3, r2
 8011b58:	60c3      	str	r3, [r0, #12]
 8011b5a:	bd10      	pop	{r4, pc}

08011b5c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011b5c:	6903      	ldr	r3, [r0, #16]
 8011b5e:	6882      	ldr	r2, [r0, #8]
 8011b60:	f3bf 8f5b 	dmb	ish
 8011b64:	3301      	adds	r3, #1
 8011b66:	429a      	cmp	r2, r3
 8011b68:	bfd8      	it	le
 8011b6a:	1a9b      	suble	r3, r3, r2
 8011b6c:	6103      	str	r3, [r0, #16]
 8011b6e:	4770      	bx	lr

08011b70 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011b70:	b570      	push	{r4, r5, r6, lr}
 8011b72:	4604      	mov	r4, r0
 8011b74:	460e      	mov	r6, r1
 8011b76:	6860      	ldr	r0, [r4, #4]
 8011b78:	6803      	ldr	r3, [r0, #0]
 8011b7a:	685b      	ldr	r3, [r3, #4]
 8011b7c:	4798      	blx	r3
 8011b7e:	2800      	cmp	r0, #0
 8011b80:	d1f9      	bne.n	8011b76 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011b82:	4d0d      	ldr	r5, [pc, #52]	; (8011bb8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011b84:	6828      	ldr	r0, [r5, #0]
 8011b86:	6803      	ldr	r3, [r0, #0]
 8011b88:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b8a:	4798      	blx	r3
 8011b8c:	f7ef fb86 	bl	800129c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011b90:	6828      	ldr	r0, [r5, #0]
 8011b92:	2101      	movs	r1, #1
 8011b94:	f7ff ff2c 	bl	80119f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011b98:	6860      	ldr	r0, [r4, #4]
 8011b9a:	6803      	ldr	r3, [r0, #0]
 8011b9c:	4631      	mov	r1, r6
 8011b9e:	689b      	ldr	r3, [r3, #8]
 8011ba0:	4798      	blx	r3
 8011ba2:	6823      	ldr	r3, [r4, #0]
 8011ba4:	4620      	mov	r0, r4
 8011ba6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ba8:	4798      	blx	r3
 8011baa:	6828      	ldr	r0, [r5, #0]
 8011bac:	6803      	ldr	r3, [r0, #0]
 8011bae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bb2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011bb4:	4718      	bx	r3
 8011bb6:	bf00      	nop
 8011bb8:	20002c8c 	.word	0x20002c8c

08011bbc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011bbc:	b508      	push	{r3, lr}
 8011bbe:	f7ef fb5d 	bl	800127c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011bc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011bc6:	f7ef bb63 	b.w	8001290 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011bca <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011bca:	b510      	push	{r4, lr}
 8011bcc:	2114      	movs	r1, #20
 8011bce:	4604      	mov	r4, r0
 8011bd0:	f012 fb15 	bl	80241fe <_ZdlPvj>
 8011bd4:	4620      	mov	r0, r4
 8011bd6:	bd10      	pop	{r4, pc}

08011bd8 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011bd8:	b510      	push	{r4, lr}
 8011bda:	4604      	mov	r4, r0
 8011bdc:	6840      	ldr	r0, [r0, #4]
 8011bde:	6803      	ldr	r3, [r0, #0]
 8011be0:	681b      	ldr	r3, [r3, #0]
 8011be2:	4798      	blx	r3
 8011be4:	b948      	cbnz	r0, 8011bfa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011be6:	7a63      	ldrb	r3, [r4, #9]
 8011be8:	b13b      	cbz	r3, 8011bfa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011bea:	7a23      	ldrb	r3, [r4, #8]
 8011bec:	b92b      	cbnz	r3, 8011bfa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011bee:	6823      	ldr	r3, [r4, #0]
 8011bf0:	4620      	mov	r0, r4
 8011bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011bf8:	4718      	bx	r3
 8011bfa:	bd10      	pop	{r4, pc}

08011bfc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011bfc:	b570      	push	{r4, r5, r6, lr}
 8011bfe:	4604      	mov	r4, r0
 8011c00:	6840      	ldr	r0, [r0, #4]
 8011c02:	6803      	ldr	r3, [r0, #0]
 8011c04:	681b      	ldr	r3, [r3, #0]
 8011c06:	4798      	blx	r3
 8011c08:	4605      	mov	r5, r0
 8011c0a:	b930      	cbnz	r0, 8011c1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011c0c:	7a23      	ldrb	r3, [r4, #8]
 8011c0e:	b123      	cbz	r3, 8011c1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011c10:	6860      	ldr	r0, [r4, #4]
 8011c12:	6803      	ldr	r3, [r0, #0]
 8011c14:	695b      	ldr	r3, [r3, #20]
 8011c16:	4798      	blx	r3
 8011c18:	7225      	strb	r5, [r4, #8]
 8011c1a:	6860      	ldr	r0, [r4, #4]
 8011c1c:	6803      	ldr	r3, [r0, #0]
 8011c1e:	681b      	ldr	r3, [r3, #0]
 8011c20:	4798      	blx	r3
 8011c22:	b928      	cbnz	r0, 8011c30 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011c24:	6823      	ldr	r3, [r4, #0]
 8011c26:	4620      	mov	r0, r4
 8011c28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c2e:	4718      	bx	r3
 8011c30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c34:	f7ef bb38 	b.w	80012a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011c38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011c38:	b510      	push	{r4, lr}
 8011c3a:	4c04      	ldr	r4, [pc, #16]	; (8011c4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011c3c:	6082      	str	r2, [r0, #8]
 8011c3e:	2200      	movs	r2, #0
 8011c40:	e9c0 4100 	strd	r4, r1, [r0]
 8011c44:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011c48:	bd10      	pop	{r4, pc}
 8011c4a:	bf00      	nop
 8011c4c:	08028494 	.word	0x08028494

08011c50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011c50:	6840      	ldr	r0, [r0, #4]
 8011c52:	6803      	ldr	r3, [r0, #0]
 8011c54:	681b      	ldr	r3, [r3, #0]
 8011c56:	4718      	bx	r3

08011c58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8011c58:	b570      	push	{r4, r5, r6, lr}
 8011c5a:	790b      	ldrb	r3, [r1, #4]
 8011c5c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8011c60:	2b00      	cmp	r3, #0
 8011c62:	bf0c      	ite	eq
 8011c64:	2301      	moveq	r3, #1
 8011c66:	2300      	movne	r3, #0
 8011c68:	4604      	mov	r4, r0
 8011c6a:	460e      	mov	r6, r1
 8011c6c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011c70:	d109      	bne.n	8011c86 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8011c72:	b14d      	cbz	r5, 8011c88 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8011c74:	7933      	ldrb	r3, [r6, #4]
 8011c76:	2b01      	cmp	r3, #1
 8011c78:	d10c      	bne.n	8011c94 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011c7a:	6823      	ldr	r3, [r4, #0]
 8011c7c:	4620      	mov	r0, r4
 8011c7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011c80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c84:	4718      	bx	r3
 8011c86:	b12d      	cbz	r5, 8011c94 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011c88:	6823      	ldr	r3, [r4, #0]
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	695b      	ldr	r3, [r3, #20]
 8011c8e:	4798      	blx	r3
 8011c90:	2d00      	cmp	r5, #0
 8011c92:	d1ef      	bne.n	8011c74 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011c94:	bd70      	pop	{r4, r5, r6, pc}

08011c96 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8011c96:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011c9a:	4770      	bx	lr

08011c9c <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8011c9c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8011ca0:	4770      	bx	lr

08011ca2 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8011ca2:	6802      	ldr	r2, [r0, #0]
 8011ca4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8011ca8:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8011caa:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8011cae:	4710      	bx	r2

08011cb0 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8011cb0:	6802      	ldr	r2, [r0, #0]
 8011cb2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8011cb6:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8011cb8:	eef0 0a40 	vmov.f32	s1, s0
 8011cbc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8011cc0:	4710      	bx	r2

08011cc2 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8011cc2:	6802      	ldr	r2, [r0, #0]
 8011cc4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8011cc8:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8011cca:	eeb0 1a40 	vmov.f32	s2, s0
 8011cce:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8011cd2:	4710      	bx	r2

08011cd4 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8011cd4:	6802      	ldr	r2, [r0, #0]
 8011cd6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8011cda:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8011cdc:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8011ce0:	4710      	bx	r2

08011ce2 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8011ce2:	6802      	ldr	r2, [r0, #0]
 8011ce4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8011ce8:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8011cea:	eef0 0a40 	vmov.f32	s1, s0
 8011cee:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8011cf2:	4710      	bx	r2

08011cf4 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8011cf4:	6802      	ldr	r2, [r0, #0]
 8011cf6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8011cfa:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8011cfc:	eeb0 1a40 	vmov.f32	s2, s0
 8011d00:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8011d04:	4710      	bx	r2

08011d06 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8011d06:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8011d0a:	4770      	bx	lr

08011d0c <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8011d0c:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8011d10:	4770      	bx	lr

08011d12 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8011d12:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8011d16:	4770      	bx	lr

08011d18 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8011d18:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8011d1c:	4770      	bx	lr

08011d1e <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8011d1e:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8011d22:	4770      	bx	lr

08011d24 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8011d24:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8011d28:	4770      	bx	lr

08011d2a <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8011d2a:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8011d2e:	4770      	bx	lr

08011d30 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8011d30:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8011d34:	4770      	bx	lr

08011d36 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8011d36:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8011d3a:	4770      	bx	lr

08011d3c <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8011d3c:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8011d40:	4770      	bx	lr

08011d42 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8011d42:	ee07 2a90 	vmov	s15, r2
 8011d46:	6803      	ldr	r3, [r0, #0]
 8011d48:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8011d4c:	ee07 1a90 	vmov	s15, r1
 8011d50:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011d54:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011d58:	4718      	bx	r3

08011d5a <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8011d5a:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8011d5e:	4770      	bx	lr

08011d60 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8011d60:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8011d64:	4770      	bx	lr

08011d66 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8011d66:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8011d6a:	4770      	bx	lr

08011d6c <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8011d6c:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8011d70:	4770      	bx	lr

08011d72 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8011d72:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8011d76:	4770      	bx	lr

08011d78 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8011d78:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8011d7c:	4770      	bx	lr

08011d7e <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8011d7e:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8011d82:	4770      	bx	lr

08011d84 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8011d84:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8011d88:	4770      	bx	lr

08011d8a <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8011d8a:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8011d8e:	4770      	bx	lr

08011d90 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8011d90:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8011d94:	4770      	bx	lr

08011d96 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8011d96:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8011d9a:	4770      	bx	lr

08011d9c <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8011d9c:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8011da0:	4770      	bx	lr

08011da2 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8011da2:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8011da6:	4770      	bx	lr

08011da8 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8011da8:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8011dac:	4770      	bx	lr

08011dae <_ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv>:
 8011dae:	f890 00ea 	ldrb.w	r0, [r0, #234]	; 0xea
 8011db2:	4770      	bx	lr

08011db4 <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>:
 8011db4:	b510      	push	{r4, lr}
 8011db6:	2414      	movs	r4, #20
 8011db8:	fb04 0101 	mla	r1, r4, r1, r0
 8011dbc:	2001      	movs	r0, #1
 8011dbe:	f8a1 309c 	strh.w	r3, [r1, #156]	; 0x9c
 8011dc2:	9b02      	ldr	r3, [sp, #8]
 8011dc4:	f881 0090 	strb.w	r0, [r1, #144]	; 0x90
 8011dc8:	ed81 0a26 	vstr	s0, [r1, #152]	; 0x98
 8011dcc:	f8a1 209e 	strh.w	r2, [r1, #158]	; 0x9e
 8011dd0:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
 8011dd4:	bd10      	pop	{r4, pc}

08011dd6 <_ZN8touchgfx22AnimationTextureMapper16getAnimationStepEv>:
 8011dd6:	f8b0 00e8 	ldrh.w	r0, [r0, #232]	; 0xe8
 8011dda:	4770      	bx	lr

08011ddc <_ZN8touchgfx22AnimationTextureMapperD1Ev>:
 8011ddc:	4770      	bx	lr

08011dde <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>:
 8011dde:	b510      	push	{r4, lr}
 8011de0:	4604      	mov	r4, r0
 8011de2:	f003 fa17 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8011de6:	4621      	mov	r1, r4
 8011de8:	f003 fa1a 	bl	8015220 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8011dec:	2300      	movs	r3, #0
 8011dee:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
 8011df2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011df4:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8011df8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8011dfa:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8011dfe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011e00:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011e04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011e06:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 8011e0a:	2301      	movs	r3, #1
 8011e0c:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 8011e10:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8011e14:	4623      	mov	r3, r4
 8011e16:	f893 1090 	ldrb.w	r1, [r3, #144]	; 0x90
 8011e1a:	b129      	cbz	r1, 8011e28 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv+0x4a>
 8011e1c:	f8b3 109c 	ldrh.w	r1, [r3, #156]	; 0x9c
 8011e20:	f8b3 009e 	ldrh.w	r0, [r3, #158]	; 0x9e
 8011e24:	42c1      	cmn	r1, r0
 8011e26:	d108      	bne.n	8011e3a <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv+0x5c>
 8011e28:	3314      	adds	r3, #20
 8011e2a:	4293      	cmp	r3, r2
 8011e2c:	d1f3      	bne.n	8011e16 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv+0x38>
 8011e2e:	6823      	ldr	r3, [r4, #0]
 8011e30:	4620      	mov	r0, r4
 8011e32:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e38:	4718      	bx	r3
 8011e3a:	bd10      	pop	{r4, pc}

08011e3c <_ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv>:
 8011e3c:	b510      	push	{r4, lr}
 8011e3e:	4604      	mov	r4, r0
 8011e40:	f003 f9e8 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 8011e44:	4621      	mov	r1, r4
 8011e46:	f003 fa11 	bl	801526c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8011e4a:	2300      	movs	r3, #0
 8011e4c:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 8011e50:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 8011e54:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 8011e58:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 8011e5c:	f884 30cc 	strb.w	r3, [r4, #204]	; 0xcc
 8011e60:	bd10      	pop	{r4, pc}

08011e62 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8011e62:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8011e66:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8011e6a:	f000 b9c5 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08011e6e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8011e6e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8011e72:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8011e76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e7a:	bfd8      	it	le
 8011e7c:	eeb0 0a67 	vmovle.f32	s0, s15
 8011e80:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8011e84:	f000 b9b8 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08011e88 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8011e88:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8011e8c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8011e90:	f000 b9b2 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08011e94 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8011e94:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8011e98:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8011e9c:	f000 b9ac 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08011ea0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8011ea0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8011ea4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8011ea8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8011eac:	f000 b9a4 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08011eb0 <_ZN8touchgfx22AnimationTextureMapperD0Ev>:
 8011eb0:	b510      	push	{r4, lr}
 8011eb2:	21ec      	movs	r1, #236	; 0xec
 8011eb4:	4604      	mov	r4, r0
 8011eb6:	f012 f9a2 	bl	80241fe <_ZdlPvj>
 8011eba:	4620      	mov	r0, r4
 8011ebc:	bd10      	pop	{r4, pc}
	...

08011ec0 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv>:
 8011ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ec4:	ed2d 8b06 	vpush	{d8-d10}
 8011ec8:	f890 30ea 	ldrb.w	r3, [r0, #234]	; 0xea
 8011ecc:	b083      	sub	sp, #12
 8011ece:	4604      	mov	r4, r0
 8011ed0:	2b00      	cmp	r3, #0
 8011ed2:	f000 80c4 	beq.w	801205e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x19e>
 8011ed6:	f8b0 30e8 	ldrh.w	r3, [r0, #232]	; 0xe8
 8011eda:	ed90 8a0d 	vldr	s16, [r0, #52]	; 0x34
 8011ede:	edd0 8a0e 	vldr	s17, [r0, #56]	; 0x38
 8011ee2:	ed90 9a0f 	vldr	s18, [r0, #60]	; 0x3c
 8011ee6:	edd0 9a10 	vldr	s19, [r0, #64]	; 0x40
 8011eea:	eddf aa5f 	vldr	s21, [pc, #380]	; 8012068 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x1a8>
 8011eee:	2600      	movs	r6, #0
 8011ef0:	3301      	adds	r3, #1
 8011ef2:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8011ef6:	4605      	mov	r5, r0
 8011ef8:	9601      	str	r6, [sp, #4]
 8011efa:	46b2      	mov	sl, r6
 8011efc:	46b0      	mov	r8, r6
 8011efe:	46b3      	mov	fp, r6
 8011f00:	f895 9090 	ldrb.w	r9, [r5, #144]	; 0x90
 8011f04:	f1b9 0f00 	cmp.w	r9, #0
 8011f08:	d049      	beq.n	8011f9e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xde>
 8011f0a:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 8011f0e:	f8b5 309c 	ldrh.w	r3, [r5, #156]	; 0x9c
 8011f12:	4298      	cmp	r0, r3
 8011f14:	d337      	bcc.n	8011f86 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xc6>
 8011f16:	ed95 7a26 	vldr	s14, [r5, #152]	; 0x98
 8011f1a:	edd5 7a25 	vldr	s15, [r5, #148]	; 0x94
 8011f1e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f26:	dd74      	ble.n	8012012 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x152>
 8011f28:	ee77 7a67 	vsub.f32	s15, s14, s15
 8011f2c:	ed9f aa4f 	vldr	s20, [pc, #316]	; 801206c <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x1ac>
 8011f30:	ee67 7aaa 	vmul.f32	s15, s15, s21
 8011f34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011f38:	ee17 2a90 	vmov	r2, s15
 8011f3c:	b212      	sxth	r2, r2
 8011f3e:	1ac0      	subs	r0, r0, r3
 8011f40:	2100      	movs	r1, #0
 8011f42:	f8b5 309e 	ldrh.w	r3, [r5, #158]	; 0x9e
 8011f46:	f8d5 70a0 	ldr.w	r7, [r5, #160]	; 0xa0
 8011f4a:	b280      	uxth	r0, r0
 8011f4c:	47b8      	blx	r7
 8011f4e:	ee07 0a90 	vmov	s15, r0
 8011f52:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011f56:	eeb8 aaca 	vcvt.f32.s32	s20, s20
 8011f5a:	eec7 7a2a 	vdiv.f32	s15, s14, s21
 8011f5e:	f1b8 0f02 	cmp.w	r8, #2
 8011f62:	ee67 7a8a 	vmul.f32	s15, s15, s20
 8011f66:	d060      	beq.n	801202a <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x16a>
 8011f68:	f1b8 0f03 	cmp.w	r8, #3
 8011f6c:	d062      	beq.n	8012034 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x174>
 8011f6e:	f1b8 0f01 	cmp.w	r8, #1
 8011f72:	bf15      	itete	ne
 8011f74:	ed94 8a25 	vldrne	s16, [r4, #148]	; 0x94
 8011f78:	edd4 8a2a 	vldreq	s17, [r4, #168]	; 0xa8
 8011f7c:	ee37 8a88 	vaddne.f32	s16, s15, s16
 8011f80:	ee77 8aa8 	vaddeq.f32	s17, s15, s17
 8011f84:	46ca      	mov	sl, r9
 8011f86:	f8b5 309c 	ldrh.w	r3, [r5, #156]	; 0x9c
 8011f8a:	f8b5 109e 	ldrh.w	r1, [r5, #158]	; 0x9e
 8011f8e:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011f92:	440b      	add	r3, r1
 8011f94:	429a      	cmp	r2, r3
 8011f96:	bf2c      	ite	cs
 8011f98:	f885 b090 	strbcs.w	fp, [r5, #144]	; 0x90
 8011f9c:	464e      	movcc	r6, r9
 8011f9e:	f108 0801 	add.w	r8, r8, #1
 8011fa2:	f1b8 0f04 	cmp.w	r8, #4
 8011fa6:	f105 0514 	add.w	r5, r5, #20
 8011faa:	d1a9      	bne.n	8011f00 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x40>
 8011fac:	f1ba 0f00 	cmp.w	sl, #0
 8011fb0:	d147      	bne.n	8012042 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x182>
 8011fb2:	9b01      	ldr	r3, [sp, #4]
 8011fb4:	b19b      	cbz	r3, 8011fde <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x11e>
 8011fb6:	6823      	ldr	r3, [r4, #0]
 8011fb8:	eeb0 0a69 	vmov.f32	s0, s19
 8011fbc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011fc0:	4620      	mov	r0, r4
 8011fc2:	4798      	blx	r3
 8011fc4:	f8d4 00e0 	ldr.w	r0, [r4, #224]	; 0xe0
 8011fc8:	b148      	cbz	r0, 8011fde <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x11e>
 8011fca:	6803      	ldr	r3, [r0, #0]
 8011fcc:	68db      	ldr	r3, [r3, #12]
 8011fce:	4798      	blx	r3
 8011fd0:	b128      	cbz	r0, 8011fde <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x11e>
 8011fd2:	f8d4 00e0 	ldr.w	r0, [r4, #224]	; 0xe0
 8011fd6:	6803      	ldr	r3, [r0, #0]
 8011fd8:	4621      	mov	r1, r4
 8011fda:	689b      	ldr	r3, [r3, #8]
 8011fdc:	4798      	blx	r3
 8011fde:	2e00      	cmp	r6, #0
 8011fe0:	d13d      	bne.n	801205e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x19e>
 8011fe2:	6823      	ldr	r3, [r4, #0]
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8011fea:	4798      	blx	r3
 8011fec:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 8011ff0:	2800      	cmp	r0, #0
 8011ff2:	d034      	beq.n	801205e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x19e>
 8011ff4:	6803      	ldr	r3, [r0, #0]
 8011ff6:	68db      	ldr	r3, [r3, #12]
 8011ff8:	4798      	blx	r3
 8011ffa:	b380      	cbz	r0, 801205e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x19e>
 8011ffc:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 8012000:	6803      	ldr	r3, [r0, #0]
 8012002:	689b      	ldr	r3, [r3, #8]
 8012004:	4621      	mov	r1, r4
 8012006:	b003      	add	sp, #12
 8012008:	ecbd 8b06 	vpop	{d8-d10}
 801200c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012010:	4718      	bx	r3
 8012012:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012016:	ed9f aa16 	vldr	s20, [pc, #88]	; 8012070 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x1b0>
 801201a:	ee67 7aaa 	vmul.f32	s15, s15, s21
 801201e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012022:	ee17 2a90 	vmov	r2, s15
 8012026:	b212      	sxth	r2, r2
 8012028:	e789      	b.n	8011f3e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x7e>
 801202a:	ed94 9a2f 	vldr	s18, [r4, #188]	; 0xbc
 801202e:	ee37 9a89 	vadd.f32	s18, s15, s18
 8012032:	e7a7      	b.n	8011f84 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xc4>
 8012034:	edd4 9a34 	vldr	s19, [r4, #208]	; 0xd0
 8012038:	f8cd 9004 	str.w	r9, [sp, #4]
 801203c:	ee77 9aa9 	vadd.f32	s19, s15, s19
 8012040:	e7a1      	b.n	8011f86 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xc6>
 8012042:	6823      	ldr	r3, [r4, #0]
 8012044:	eeb0 1a49 	vmov.f32	s2, s18
 8012048:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801204a:	eef0 0a68 	vmov.f32	s1, s17
 801204e:	eeb0 0a48 	vmov.f32	s0, s16
 8012052:	4620      	mov	r0, r4
 8012054:	4798      	blx	r3
 8012056:	9b01      	ldr	r3, [sp, #4]
 8012058:	2b00      	cmp	r3, #0
 801205a:	d0b3      	beq.n	8011fc4 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x104>
 801205c:	e7ab      	b.n	8011fb6 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xf6>
 801205e:	b003      	add	sp, #12
 8012060:	ecbd 8b06 	vpop	{d8-d10}
 8012064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012068:	447a0000 	.word	0x447a0000
 801206c:	00000001 	.word	0x00000001
 8012070:	ffffffff 	.word	0xffffffff

08012074 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8012074:	b513      	push	{r0, r1, r4, lr}
 8012076:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801207a:	4604      	mov	r4, r0
 801207c:	b143      	cbz	r3, 8012090 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 801207e:	4601      	mov	r1, r0
 8012080:	4668      	mov	r0, sp
 8012082:	f000 fa24 	bl	80124ce <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8012086:	6823      	ldr	r3, [r4, #0]
 8012088:	4669      	mov	r1, sp
 801208a:	691b      	ldr	r3, [r3, #16]
 801208c:	4620      	mov	r0, r4
 801208e:	4798      	blx	r3
 8012090:	b002      	add	sp, #8
 8012092:	bd10      	pop	{r4, pc}

08012094 <_ZN8touchgfx22AnimationTextureMapperC1Ev>:
 8012094:	b513      	push	{r0, r1, r4, lr}
 8012096:	a902      	add	r1, sp, #8
 8012098:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801209c:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80120a0:	4604      	mov	r4, r0
 80120a2:	f000 f85d 	bl	8012160 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 80120a6:	4b0a      	ldr	r3, [pc, #40]	; (80120d0 <_ZN8touchgfx22AnimationTextureMapperC1Ev+0x3c>)
 80120a8:	6023      	str	r3, [r4, #0]
 80120aa:	4620      	mov	r0, r4
 80120ac:	2300      	movs	r3, #0
 80120ae:	e9c4 3338 	strd	r3, r3, [r4, #224]	; 0xe0
 80120b2:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
 80120b6:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 80120ba:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 80120be:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 80120c2:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 80120c6:	f884 30cc 	strb.w	r3, [r4, #204]	; 0xcc
 80120ca:	b002      	add	sp, #8
 80120cc:	bd10      	pop	{r4, pc}
 80120ce:	bf00      	nop
 80120d0:	080284b8 	.word	0x080284b8

080120d4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80120d4:	b510      	push	{r4, lr}
 80120d6:	ed2d 8b04 	vpush	{d8-d9}
 80120da:	6803      	ldr	r3, [r0, #0]
 80120dc:	4604      	mov	r4, r0
 80120de:	699b      	ldr	r3, [r3, #24]
 80120e0:	eeb0 8a40 	vmov.f32	s16, s0
 80120e4:	eef0 8a60 	vmov.f32	s17, s1
 80120e8:	eeb0 9a41 	vmov.f32	s18, s2
 80120ec:	4798      	blx	r3
 80120ee:	6823      	ldr	r3, [r4, #0]
 80120f0:	4620      	mov	r0, r4
 80120f2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80120f4:	eeb0 1a49 	vmov.f32	s2, s18
 80120f8:	eef0 0a68 	vmov.f32	s1, s17
 80120fc:	eeb0 0a48 	vmov.f32	s0, s16
 8012100:	4798      	blx	r3
 8012102:	ecbd 8b04 	vpop	{d8-d9}
 8012106:	6823      	ldr	r3, [r4, #0]
 8012108:	4620      	mov	r0, r4
 801210a:	699b      	ldr	r3, [r3, #24]
 801210c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012110:	4718      	bx	r3

08012112 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8012112:	b510      	push	{r4, lr}
 8012114:	ed2d 8b02 	vpush	{d8}
 8012118:	6803      	ldr	r3, [r0, #0]
 801211a:	4604      	mov	r4, r0
 801211c:	699b      	ldr	r3, [r3, #24]
 801211e:	eeb0 8a40 	vmov.f32	s16, s0
 8012122:	4798      	blx	r3
 8012124:	6823      	ldr	r3, [r4, #0]
 8012126:	4620      	mov	r0, r4
 8012128:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801212c:	eeb0 0a48 	vmov.f32	s0, s16
 8012130:	4798      	blx	r3
 8012132:	ecbd 8b02 	vpop	{d8}
 8012136:	6823      	ldr	r3, [r4, #0]
 8012138:	4620      	mov	r0, r4
 801213a:	699b      	ldr	r3, [r3, #24]
 801213c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012140:	4718      	bx	r3

08012142 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8012142:	2200      	movs	r2, #0
 8012144:	8002      	strh	r2, [r0, #0]
 8012146:	8042      	strh	r2, [r0, #2]
 8012148:	8082      	strh	r2, [r0, #4]
 801214a:	80c2      	strh	r2, [r0, #6]
 801214c:	4770      	bx	lr

0801214e <_ZN8touchgfx13TextureMapperD1Ev>:
 801214e:	4770      	bx	lr

08012150 <_ZN8touchgfx13TextureMapperD0Ev>:
 8012150:	b510      	push	{r4, lr}
 8012152:	2190      	movs	r1, #144	; 0x90
 8012154:	4604      	mov	r4, r0
 8012156:	f012 f852 	bl	80241fe <_ZdlPvj>
 801215a:	4620      	mov	r0, r4
 801215c:	bd10      	pop	{r4, pc}
	...

08012160 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8012160:	b538      	push	{r3, r4, r5, lr}
 8012162:	2500      	movs	r5, #0
 8012164:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8012168:	2301      	movs	r3, #1
 801216a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801216e:	4b1f      	ldr	r3, [pc, #124]	; (80121ec <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8012170:	8085      	strh	r5, [r0, #4]
 8012172:	80c5      	strh	r5, [r0, #6]
 8012174:	8105      	strh	r5, [r0, #8]
 8012176:	8145      	strh	r5, [r0, #10]
 8012178:	8185      	strh	r5, [r0, #12]
 801217a:	81c5      	strh	r5, [r0, #14]
 801217c:	8205      	strh	r5, [r0, #16]
 801217e:	8245      	strh	r5, [r0, #18]
 8012180:	61c5      	str	r5, [r0, #28]
 8012182:	8405      	strh	r5, [r0, #32]
 8012184:	8445      	strh	r5, [r0, #34]	; 0x22
 8012186:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801218a:	6003      	str	r3, [r0, #0]
 801218c:	880b      	ldrh	r3, [r1, #0]
 801218e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012190:	23ff      	movs	r3, #255	; 0xff
 8012192:	4604      	mov	r4, r0
 8012194:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012198:	f001 f9cf 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801219c:	4b14      	ldr	r3, [pc, #80]	; (80121f0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801219e:	6023      	str	r3, [r4, #0]
 80121a0:	2300      	movs	r3, #0
 80121a2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80121a6:	4913      	ldr	r1, [pc, #76]	; (80121f4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80121a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80121aa:	6323      	str	r3, [r4, #48]	; 0x30
 80121ac:	6363      	str	r3, [r4, #52]	; 0x34
 80121ae:	63a3      	str	r3, [r4, #56]	; 0x38
 80121b0:	63e3      	str	r3, [r4, #60]	; 0x3c
 80121b2:	6463      	str	r3, [r4, #68]	; 0x44
 80121b4:	64a3      	str	r3, [r4, #72]	; 0x48
 80121b6:	6523      	str	r3, [r4, #80]	; 0x50
 80121b8:	6563      	str	r3, [r4, #84]	; 0x54
 80121ba:	65e3      	str	r3, [r4, #92]	; 0x5c
 80121bc:	6623      	str	r3, [r4, #96]	; 0x60
 80121be:	66a3      	str	r3, [r4, #104]	; 0x68
 80121c0:	66e3      	str	r3, [r4, #108]	; 0x6c
 80121c2:	6763      	str	r3, [r4, #116]	; 0x74
 80121c4:	67a3      	str	r3, [r4, #120]	; 0x78
 80121c6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80121ca:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80121ce:	230c      	movs	r3, #12
 80121d0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80121d4:	6422      	str	r2, [r4, #64]	; 0x40
 80121d6:	64e1      	str	r1, [r4, #76]	; 0x4c
 80121d8:	65a1      	str	r1, [r4, #88]	; 0x58
 80121da:	6662      	str	r2, [r4, #100]	; 0x64
 80121dc:	6722      	str	r2, [r4, #112]	; 0x70
 80121de:	67e2      	str	r2, [r4, #124]	; 0x7c
 80121e0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80121e4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80121e8:	4620      	mov	r0, r4
 80121ea:	bd38      	pop	{r3, r4, r5, pc}
 80121ec:	080288d4 	.word	0x080288d4
 80121f0:	080285e0 	.word	0x080285e0
 80121f4:	447a0000 	.word	0x447a0000

080121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80121f8:	b570      	push	{r4, r5, r6, lr}
 80121fa:	ed2d 8b04 	vpush	{d8-d9}
 80121fe:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8012202:	add0      	add	r5, sp, #832	; 0x340
 8012204:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8012206:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801220a:	4604      	mov	r4, r0
 801220c:	4628      	mov	r0, r5
 801220e:	f006 fa1d 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012212:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8012214:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8012218:	4606      	mov	r6, r0
 801221a:	4628      	mov	r0, r5
 801221c:	f006 fa4a 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012220:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012224:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8012228:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801222a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 801222e:	9312      	str	r3, [sp, #72]	; 0x48
 8012230:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012234:	1c72      	adds	r2, r6, #1
 8012236:	3001      	adds	r0, #1
 8012238:	ee76 5ac7 	vsub.f32	s11, s13, s14
 801223c:	ee07 2a90 	vmov	s15, r2
 8012240:	ee06 0a90 	vmov	s13, r0
 8012244:	ee36 6a47 	vsub.f32	s12, s12, s14
 8012248:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801224c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012250:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012254:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012258:	9316      	str	r3, [sp, #88]	; 0x58
 801225a:	931a      	str	r3, [sp, #104]	; 0x68
 801225c:	931e      	str	r3, [sp, #120]	; 0x78
 801225e:	2300      	movs	r3, #0
 8012260:	9320      	str	r3, [sp, #128]	; 0x80
 8012262:	9321      	str	r3, [sp, #132]	; 0x84
 8012264:	9322      	str	r3, [sp, #136]	; 0x88
 8012266:	9324      	str	r3, [sp, #144]	; 0x90
 8012268:	9325      	str	r3, [sp, #148]	; 0x94
 801226a:	9326      	str	r3, [sp, #152]	; 0x98
 801226c:	9328      	str	r3, [sp, #160]	; 0xa0
 801226e:	9329      	str	r3, [sp, #164]	; 0xa4
 8012270:	932a      	str	r3, [sp, #168]	; 0xa8
 8012272:	932c      	str	r3, [sp, #176]	; 0xb0
 8012274:	932d      	str	r3, [sp, #180]	; 0xb4
 8012276:	932e      	str	r3, [sp, #184]	; 0xb8
 8012278:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801227c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8012280:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8012284:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8012288:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801228c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8012290:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8012294:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8012298:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801229c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80122a0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80122a4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80122a8:	a830      	add	r0, sp, #192	; 0xc0
 80122aa:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80122ae:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80122b2:	f005 fa5b 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 80122b6:	eeb1 0a49 	vneg.f32	s0, s18
 80122ba:	a830      	add	r0, sp, #192	; 0xc0
 80122bc:	f005 fb2a 	bl	8017914 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80122c0:	eeb1 0a68 	vneg.f32	s0, s17
 80122c4:	f005 fb34 	bl	8017930 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80122c8:	eeb1 0a48 	vneg.f32	s0, s16
 80122cc:	f005 fb3f 	bl	801794e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80122d0:	a840      	add	r0, sp, #256	; 0x100
 80122d2:	f005 fa4b 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 80122d6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80122da:	a840      	add	r0, sp, #256	; 0x100
 80122dc:	f005 fa9e 	bl	801781c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80122e0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80122e4:	f005 fac4 	bl	8017870 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80122e8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80122ec:	f005 fae9 	bl	80178c2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80122f0:	a850      	add	r0, sp, #320	; 0x140
 80122f2:	f005 fa3b 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 80122f6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80122fa:	a850      	add	r0, sp, #320	; 0x140
 80122fc:	f005 fb36 	bl	801796c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8012300:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8012304:	f005 fb3e 	bl	8017984 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8012308:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801230c:	f005 fb47 	bl	801799e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8012310:	a860      	add	r0, sp, #384	; 0x180
 8012312:	f005 fa2b 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 8012316:	eeb0 0a49 	vmov.f32	s0, s18
 801231a:	a860      	add	r0, sp, #384	; 0x180
 801231c:	f005 fafa 	bl	8017914 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8012320:	eeb0 0a68 	vmov.f32	s0, s17
 8012324:	f005 fb04 	bl	8017930 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8012328:	eeb0 0a48 	vmov.f32	s0, s16
 801232c:	f005 fb0f 	bl	801794e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8012330:	aa50      	add	r2, sp, #320	; 0x140
 8012332:	a960      	add	r1, sp, #384	; 0x180
 8012334:	a8b0      	add	r0, sp, #704	; 0x2c0
 8012336:	f005 fa33 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801233a:	4628      	mov	r0, r5
 801233c:	aa40      	add	r2, sp, #256	; 0x100
 801233e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8012340:	f005 fa2e 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8012344:	4629      	mov	r1, r5
 8012346:	aa30      	add	r2, sp, #192	; 0xc0
 8012348:	a870      	add	r0, sp, #448	; 0x1c0
 801234a:	f005 fa29 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801234e:	a880      	add	r0, sp, #512	; 0x200
 8012350:	f005 fa0c 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 8012354:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8012358:	a880      	add	r0, sp, #512	; 0x200
 801235a:	eeb1 0a40 	vneg.f32	s0, s0
 801235e:	f005 fad9 	bl	8017914 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8012362:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8012366:	a880      	add	r0, sp, #512	; 0x200
 8012368:	eeb1 0a40 	vneg.f32	s0, s0
 801236c:	f005 fae0 	bl	8017930 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8012370:	a890      	add	r0, sp, #576	; 0x240
 8012372:	f005 f9fb 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 8012376:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801237a:	a890      	add	r0, sp, #576	; 0x240
 801237c:	f005 fa3e 	bl	80177fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8012380:	a8a0      	add	r0, sp, #640	; 0x280
 8012382:	f005 f9f3 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 8012386:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801238a:	a8a0      	add	r0, sp, #640	; 0x280
 801238c:	f005 fac2 	bl	8017914 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8012390:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8012394:	f005 facc 	bl	8017930 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8012398:	aa90      	add	r2, sp, #576	; 0x240
 801239a:	a9a0      	add	r1, sp, #640	; 0x280
 801239c:	a8b0      	add	r0, sp, #704	; 0x2c0
 801239e:	f005 f9ff 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80123a2:	4628      	mov	r0, r5
 80123a4:	aa80      	add	r2, sp, #512	; 0x200
 80123a6:	a9b0      	add	r1, sp, #704	; 0x2c0
 80123a8:	f005 f9fa 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80123ac:	4629      	mov	r1, r5
 80123ae:	aa70      	add	r2, sp, #448	; 0x1c0
 80123b0:	4668      	mov	r0, sp
 80123b2:	466d      	mov	r5, sp
 80123b4:	f005 f9f4 	bl	80177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80123b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80123ba:	ae70      	add	r6, sp, #448	; 0x1c0
 80123bc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80123be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80123c0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80123c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80123c4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80123c6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80123ca:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80123ce:	2500      	movs	r5, #0
 80123d0:	0129      	lsls	r1, r5, #4
 80123d2:	ab20      	add	r3, sp, #128	; 0x80
 80123d4:	185e      	adds	r6, r3, r1
 80123d6:	ab10      	add	r3, sp, #64	; 0x40
 80123d8:	4419      	add	r1, r3
 80123da:	a870      	add	r0, sp, #448	; 0x1c0
 80123dc:	f005 f996 	bl	801770c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80123e0:	3501      	adds	r5, #1
 80123e2:	2d04      	cmp	r5, #4
 80123e4:	ed86 0a00 	vstr	s0, [r6]
 80123e8:	edc6 0a01 	vstr	s1, [r6, #4]
 80123ec:	ed86 1a02 	vstr	s2, [r6, #8]
 80123f0:	edc6 1a03 	vstr	s3, [r6, #12]
 80123f4:	d1ec      	bne.n	80123d0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80123f6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80123fa:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80123fe:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8012402:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8012406:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801240a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801240e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8012412:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8012416:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801241a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801241e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8012422:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012426:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801242a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801242e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8012432:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8012436:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801243a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 801243e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8012442:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8012446:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801244a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801244e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8012452:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8012456:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801245a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801245e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8012462:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8012466:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801246a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801246e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8012472:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8012476:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801247a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801247e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8012482:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8012486:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801248a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801248e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012492:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8012496:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801249a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801249e:	ecbd 8b04 	vpop	{d8-d9}
 80124a2:	bd70      	pop	{r4, r5, r6, pc}

080124a4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80124a4:	b510      	push	{r4, lr}
 80124a6:	4604      	mov	r4, r0
 80124a8:	f001 f847 	bl	801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80124ac:	4620      	mov	r0, r4
 80124ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124b2:	f7ff bea1 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080124b6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80124b6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80124ba:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80124be:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80124c2:	f7ff be99 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080124c6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80124c6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80124ca:	f7ff be95 	b.w	80121f8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080124ce <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80124ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124d2:	ed2d 8b04 	vpush	{d8-d9}
 80124d6:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80124da:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80124de:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80124e2:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80124e6:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80124ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124ee:	bf54      	ite	pl
 80124f0:	eeb0 0a69 	vmovpl.f32	s0, s19
 80124f4:	eeb0 0a48 	vmovmi.f32	s0, s16
 80124f8:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80124fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012500:	bfd8      	it	le
 8012502:	eeb0 0a49 	vmovle.f32	s0, s18
 8012506:	eef4 8ac0 	vcmpe.f32	s17, s0
 801250a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801250e:	bfd8      	it	le
 8012510:	eeb0 0a68 	vmovle.f32	s0, s17
 8012514:	460c      	mov	r4, r1
 8012516:	4607      	mov	r7, r0
 8012518:	f011 ff1c 	bl	8024354 <floorf>
 801251c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012524:	bf58      	it	pl
 8012526:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 801252a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801252e:	bf56      	itet	pl
 8012530:	ee10 3a10 	vmovpl	r3, s0
 8012534:	2600      	movmi	r6, #0
 8012536:	b21e      	sxthpl	r6, r3
 8012538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801253c:	bfd8      	it	le
 801253e:	eeb0 8a69 	vmovle.f32	s16, s19
 8012542:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8012546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801254a:	bf58      	it	pl
 801254c:	eeb0 8a49 	vmovpl.f32	s16, s18
 8012550:	eef4 8ac8 	vcmpe.f32	s17, s16
 8012554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012558:	bf54      	ite	pl
 801255a:	eeb0 0a68 	vmovpl.f32	s0, s17
 801255e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8012562:	f011 fe75 	bl	8024250 <ceilf>
 8012566:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 801256a:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 801256e:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8012572:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8012576:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 801257a:	ee07 8a90 	vmov	s15, r8
 801257e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012582:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8012586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801258a:	bfd8      	it	le
 801258c:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8012590:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8012594:	bfdc      	itt	le
 8012596:	ee10 3a10 	vmovle	r3, s0
 801259a:	fa0f f883 	sxthle.w	r8, r3
 801259e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125a2:	bf54      	ite	pl
 80125a4:	eeb0 0a69 	vmovpl.f32	s0, s19
 80125a8:	eeb0 0a48 	vmovmi.f32	s0, s16
 80125ac:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80125b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125b4:	bfd8      	it	le
 80125b6:	eeb0 0a49 	vmovle.f32	s0, s18
 80125ba:	eef4 8ac0 	vcmpe.f32	s17, s0
 80125be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125c2:	bfd8      	it	le
 80125c4:	eeb0 0a68 	vmovle.f32	s0, s17
 80125c8:	f011 fec4 	bl	8024354 <floorf>
 80125cc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80125d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125d4:	bf58      	it	pl
 80125d6:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80125da:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80125de:	bf56      	itet	pl
 80125e0:	ee10 3a10 	vmovpl	r3, s0
 80125e4:	2500      	movmi	r5, #0
 80125e6:	b21d      	sxthpl	r5, r3
 80125e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125ec:	bfd8      	it	le
 80125ee:	eeb0 8a69 	vmovle.f32	s16, s19
 80125f2:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80125f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125fa:	bf58      	it	pl
 80125fc:	eeb0 8a49 	vmovpl.f32	s16, s18
 8012600:	eef4 8ac8 	vcmpe.f32	s17, s16
 8012604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012608:	bf54      	ite	pl
 801260a:	eeb0 0a68 	vmovpl.f32	s0, s17
 801260e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8012612:	f011 fe1d 	bl	8024250 <ceilf>
 8012616:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801261a:	803e      	strh	r6, [r7, #0]
 801261c:	ee07 3a90 	vmov	s15, r3
 8012620:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012624:	807d      	strh	r5, [r7, #2]
 8012626:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801262a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801262e:	bfd8      	it	le
 8012630:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8012634:	eba8 0606 	sub.w	r6, r8, r6
 8012638:	bfdc      	itt	le
 801263a:	ee10 3a10 	vmovle	r3, s0
 801263e:	b21b      	sxthle	r3, r3
 8012640:	1b5d      	subs	r5, r3, r5
 8012642:	80be      	strh	r6, [r7, #4]
 8012644:	80fd      	strh	r5, [r7, #6]
 8012646:	ecbd 8b04 	vpop	{d8-d9}
 801264a:	4638      	mov	r0, r7
 801264c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012650 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8012650:	4603      	mov	r3, r0
 8012652:	3026      	adds	r0, #38	; 0x26
 8012654:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8012658:	b90b      	cbnz	r3, 801265e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801265a:	f003 bee7 	b.w	801642c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801265e:	f003 bef5 	b.w	801644c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08012664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8012664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012668:	ed2d 8b04 	vpush	{d8-d9}
 801266c:	4604      	mov	r4, r0
 801266e:	469b      	mov	fp, r3
 8012670:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8012674:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012678:	f9b1 6000 	ldrsh.w	r6, [r1]
 801267c:	8888      	ldrh	r0, [r1, #4]
 801267e:	b0b3      	sub	sp, #204	; 0xcc
 8012680:	4430      	add	r0, r6
 8012682:	b280      	uxth	r0, r0
 8012684:	9206      	str	r2, [sp, #24]
 8012686:	fa0f fe80 	sxth.w	lr, r0
 801268a:	2200      	movs	r2, #0
 801268c:	4596      	cmp	lr, r2
 801268e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8012692:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8012696:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801269a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801269c:	9211      	str	r2, [sp, #68]	; 0x44
 801269e:	f340 8129 	ble.w	80128f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80126a2:	45b4      	cmp	ip, r6
 80126a4:	f340 8126 	ble.w	80128f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80126a8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80126ac:	88ca      	ldrh	r2, [r1, #6]
 80126ae:	442a      	add	r2, r5
 80126b0:	b292      	uxth	r2, r2
 80126b2:	b211      	sxth	r1, r2
 80126b4:	2900      	cmp	r1, #0
 80126b6:	f340 811d 	ble.w	80128f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80126ba:	42ab      	cmp	r3, r5
 80126bc:	f340 811a 	ble.w	80128f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80126c0:	45f4      	cmp	ip, lr
 80126c2:	bfb8      	it	lt
 80126c4:	fa1f f08c 	uxthlt.w	r0, ip
 80126c8:	428b      	cmp	r3, r1
 80126ca:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80126ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80126d2:	bfb8      	it	lt
 80126d4:	b29a      	uxthlt	r2, r3
 80126d6:	1b80      	subs	r0, r0, r6
 80126d8:	1b52      	subs	r2, r2, r5
 80126da:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80126de:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80126e2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80126e6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80126ea:	ab11      	add	r3, sp, #68	; 0x44
 80126ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80126f0:	6822      	ldr	r2, [r4, #0]
 80126f2:	9307      	str	r3, [sp, #28]
 80126f4:	ad13      	add	r5, sp, #76	; 0x4c
 80126f6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80126f8:	e885 0003 	stmia.w	r5, {r0, r1}
 80126fc:	4629      	mov	r1, r5
 80126fe:	4620      	mov	r0, r4
 8012700:	4790      	blx	r2
 8012702:	4621      	mov	r1, r4
 8012704:	a815      	add	r0, sp, #84	; 0x54
 8012706:	f003 fdf3 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801270a:	a815      	add	r0, sp, #84	; 0x54
 801270c:	f002 fb60 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012710:	9b07      	ldr	r3, [sp, #28]
 8012712:	1d26      	adds	r6, r4, #4
 8012714:	4618      	mov	r0, r3
 8012716:	4631      	mov	r1, r6
 8012718:	f002 fb9e 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801271c:	4628      	mov	r0, r5
 801271e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8012722:	f002 fb55 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012726:	4628      	mov	r0, r5
 8012728:	f006 f87c 	bl	8018824 <_ZNK8touchgfx6Bitmap7getDataEv>
 801272c:	9007      	str	r0, [sp, #28]
 801272e:	2800      	cmp	r0, #0
 8012730:	f000 80db 	beq.w	80128ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8012734:	f8db 2000 	ldr.w	r2, [fp]
 8012738:	9209      	str	r2, [sp, #36]	; 0x24
 801273a:	f8db 2004 	ldr.w	r2, [fp, #4]
 801273e:	920a      	str	r2, [sp, #40]	; 0x28
 8012740:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012744:	920b      	str	r2, [sp, #44]	; 0x2c
 8012746:	f8db 200c 	ldr.w	r2, [fp, #12]
 801274a:	920c      	str	r2, [sp, #48]	; 0x30
 801274c:	f8da 2000 	ldr.w	r2, [sl]
 8012750:	920d      	str	r2, [sp, #52]	; 0x34
 8012752:	f8da 2004 	ldr.w	r2, [sl, #4]
 8012756:	920e      	str	r2, [sp, #56]	; 0x38
 8012758:	f8da 2008 	ldr.w	r2, [sl, #8]
 801275c:	920f      	str	r2, [sp, #60]	; 0x3c
 801275e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8012762:	9210      	str	r2, [sp, #64]	; 0x40
 8012764:	a90d      	add	r1, sp, #52	; 0x34
 8012766:	4632      	mov	r2, r6
 8012768:	a809      	add	r0, sp, #36	; 0x24
 801276a:	f002 fb59 	bl	8014e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801276e:	4632      	mov	r2, r6
 8012770:	a90e      	add	r1, sp, #56	; 0x38
 8012772:	a80a      	add	r0, sp, #40	; 0x28
 8012774:	f002 fb54 	bl	8014e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012778:	4632      	mov	r2, r6
 801277a:	a90f      	add	r1, sp, #60	; 0x3c
 801277c:	a80b      	add	r0, sp, #44	; 0x2c
 801277e:	f002 fb4f 	bl	8014e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012782:	4632      	mov	r2, r6
 8012784:	a910      	add	r1, sp, #64	; 0x40
 8012786:	a80c      	add	r0, sp, #48	; 0x30
 8012788:	f002 fb4a 	bl	8014e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801278c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8012790:	edd7 4a00 	vldr	s9, [r7]
 8012794:	edd7 5a01 	vldr	s11, [r7, #4]
 8012798:	ed98 4a00 	vldr	s8, [r8]
 801279c:	ed98 5a01 	vldr	s10, [r8, #4]
 80127a0:	ed99 9a00 	vldr	s18, [r9]
 80127a4:	ed99 8a01 	vldr	s16, [r9, #4]
 80127a8:	edd9 8a02 	vldr	s17, [r9, #8]
 80127ac:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80127b0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80127b4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80127b8:	eef0 6a67 	vmov.f32	s13, s15
 80127bc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80127c0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80127c4:	eeb0 7a67 	vmov.f32	s14, s15
 80127c8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80127cc:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80127d0:	eeb0 6a67 	vmov.f32	s12, s15
 80127d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80127d8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80127dc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80127e0:	ee16 6a10 	vmov	r6, s12
 80127e4:	eeb0 6a67 	vmov.f32	s12, s15
 80127e8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80127ec:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80127f0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80127f4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80127f8:	68ff      	ldr	r7, [r7, #12]
 80127fa:	9624      	str	r6, [sp, #144]	; 0x90
 80127fc:	ee16 0a10 	vmov	r0, s12
 8012800:	eeb0 6a67 	vmov.f32	s12, s15
 8012804:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012808:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801280c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8012810:	ee16 1a10 	vmov	r1, s12
 8012814:	eeb0 6a67 	vmov.f32	s12, s15
 8012818:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801281c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8012820:	ee16 2a10 	vmov	r2, s12
 8012824:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8012828:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801282c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8012830:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8012834:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012838:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801283c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8012840:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8012844:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8012848:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 801284c:	922d      	str	r2, [sp, #180]	; 0xb4
 801284e:	4a2b      	ldr	r2, [pc, #172]	; (80128fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8012850:	9b06      	ldr	r3, [sp, #24]
 8012852:	8812      	ldrh	r2, [r2, #0]
 8012854:	9317      	str	r3, [sp, #92]	; 0x5c
 8012856:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801285a:	9b07      	ldr	r3, [sp, #28]
 801285c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8012860:	4628      	mov	r0, r5
 8012862:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8012866:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801286a:	9218      	str	r2, [sp, #96]	; 0x60
 801286c:	9319      	str	r3, [sp, #100]	; 0x64
 801286e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8012872:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8012876:	9731      	str	r7, [sp, #196]	; 0xc4
 8012878:	f006 f804 	bl	8018884 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801287c:	901a      	str	r0, [sp, #104]	; 0x68
 801287e:	4628      	mov	r0, r5
 8012880:	f005 fee4 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012884:	901b      	str	r0, [sp, #108]	; 0x6c
 8012886:	4628      	mov	r0, r5
 8012888:	f005 ff14 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801288c:	901c      	str	r0, [sp, #112]	; 0x70
 801288e:	4628      	mov	r0, r5
 8012890:	f005 fedc 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012894:	eeb4 9a48 	vcmp.f32	s18, s16
 8012898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801289c:	901d      	str	r0, [sp, #116]	; 0x74
 801289e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80128a2:	d107      	bne.n	80128b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80128a4:	eeb4 8a68 	vcmp.f32	s16, s17
 80128a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80128b0:	bf08      	it	eq
 80128b2:	461e      	moveq	r6, r3
 80128b4:	4b12      	ldr	r3, [pc, #72]	; (8012900 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80128b6:	681b      	ldr	r3, [r3, #0]
 80128b8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80128bc:	b10a      	cbz	r2, 80128c2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80128be:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80128c0:	b905      	cbnz	r5, 80128c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80128c2:	689d      	ldr	r5, [r3, #8]
 80128c4:	682b      	ldr	r3, [r5, #0]
 80128c6:	4620      	mov	r0, r4
 80128c8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80128ca:	f7ff fec1 	bl	8012650 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80128ce:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80128d2:	9604      	str	r6, [sp, #16]
 80128d4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80128d8:	ab13      	add	r3, sp, #76	; 0x4c
 80128da:	9301      	str	r3, [sp, #4]
 80128dc:	ab15      	add	r3, sp, #84	; 0x54
 80128de:	9300      	str	r3, [sp, #0]
 80128e0:	aa1e      	add	r2, sp, #120	; 0x78
 80128e2:	ab19      	add	r3, sp, #100	; 0x64
 80128e4:	a917      	add	r1, sp, #92	; 0x5c
 80128e6:	4628      	mov	r0, r5
 80128e8:	47b8      	blx	r7
 80128ea:	b033      	add	sp, #204	; 0xcc
 80128ec:	ecbd 8b04 	vpop	{d8-d9}
 80128f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128f4:	2300      	movs	r3, #0
 80128f6:	9312      	str	r3, [sp, #72]	; 0x48
 80128f8:	e6f7      	b.n	80126ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80128fa:	bf00      	nop
 80128fc:	20002c86 	.word	0x20002c86
 8012900:	20002c8c 	.word	0x20002c8c

08012904 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8012904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012908:	ed2d 8b02 	vpush	{d8}
 801290c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8012910:	b098      	sub	sp, #96	; 0x60
 8012912:	4604      	mov	r4, r0
 8012914:	4688      	mov	r8, r1
 8012916:	2b00      	cmp	r3, #0
 8012918:	d077      	beq.n	8012a0a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 801291a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801291e:	4628      	mov	r0, r5
 8012920:	f005 fe94 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012924:	ee07 0a90 	vmov	s15, r0
 8012928:	4628      	mov	r0, r5
 801292a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 801292e:	f005 fec1 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012932:	4b4e      	ldr	r3, [pc, #312]	; (8012a6c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8012934:	781b      	ldrb	r3, [r3, #0]
 8012936:	ee07 0a90 	vmov	s15, r0
 801293a:	2b01      	cmp	r3, #1
 801293c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012940:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8012944:	d066      	beq.n	8012a14 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8012946:	eeb0 6a47 	vmov.f32	s12, s14
 801294a:	ee17 3a10 	vmov	r3, s14
 801294e:	eeb0 4a48 	vmov.f32	s8, s16
 8012952:	eeb0 7a48 	vmov.f32	s14, s16
 8012956:	eef0 4a67 	vmov.f32	s9, s15
 801295a:	eeb0 8a67 	vmov.f32	s16, s15
 801295e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8012962:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8012966:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 801296a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801296e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8012972:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8012976:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8012978:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801297a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 801297c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8012980:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8012984:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8012988:	ee73 1a65 	vsub.f32	s3, s6, s11
 801298c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8012990:	ee32 1a45 	vsub.f32	s2, s4, s10
 8012994:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8012998:	ee73 1ae5 	vsub.f32	s3, s7, s11
 801299c:	eee1 6a21 	vfma.f32	s13, s2, s3
 80129a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80129a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129a8:	dd3d      	ble.n	8012a26 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80129aa:	ed8d 5a04 	vstr	s10, [sp, #16]
 80129ae:	ed8d 2a05 	vstr	s4, [sp, #20]
 80129b2:	edcd 2a06 	vstr	s5, [sp, #24]
 80129b6:	f8cd c01c 	str.w	ip, [sp, #28]
 80129ba:	edcd 5a08 	vstr	s11, [sp, #32]
 80129be:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80129c2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80129c6:	970b      	str	r7, [sp, #44]	; 0x2c
 80129c8:	960c      	str	r6, [sp, #48]	; 0x30
 80129ca:	950d      	str	r5, [sp, #52]	; 0x34
 80129cc:	920e      	str	r2, [sp, #56]	; 0x38
 80129ce:	900f      	str	r0, [sp, #60]	; 0x3c
 80129d0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80129d4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80129d8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80129dc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80129e0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80129e4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80129e8:	9316      	str	r3, [sp, #88]	; 0x58
 80129ea:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80129ee:	ab14      	add	r3, sp, #80	; 0x50
 80129f0:	9303      	str	r3, [sp, #12]
 80129f2:	ab10      	add	r3, sp, #64	; 0x40
 80129f4:	9302      	str	r3, [sp, #8]
 80129f6:	ab0c      	add	r3, sp, #48	; 0x30
 80129f8:	9301      	str	r3, [sp, #4]
 80129fa:	ab08      	add	r3, sp, #32
 80129fc:	9300      	str	r3, [sp, #0]
 80129fe:	2200      	movs	r2, #0
 8012a00:	ab04      	add	r3, sp, #16
 8012a02:	4641      	mov	r1, r8
 8012a04:	4620      	mov	r0, r4
 8012a06:	f7ff fe2d 	bl	8012664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8012a0a:	b018      	add	sp, #96	; 0x60
 8012a0c:	ecbd 8b02 	vpop	{d8}
 8012a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a14:	eeb0 6a48 	vmov.f32	s12, s16
 8012a18:	eef0 4a47 	vmov.f32	s9, s14
 8012a1c:	ee17 3a90 	vmov	r3, s15
 8012a20:	eeb0 4a67 	vmov.f32	s8, s15
 8012a24:	e79b      	b.n	801295e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8012a26:	ed8d 5a05 	vstr	s10, [sp, #20]
 8012a2a:	ed8d 2a04 	vstr	s4, [sp, #16]
 8012a2e:	f8cd c018 	str.w	ip, [sp, #24]
 8012a32:	edcd 2a07 	vstr	s5, [sp, #28]
 8012a36:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8012a3a:	ed8d 3a08 	vstr	s6, [sp, #32]
 8012a3e:	970a      	str	r7, [sp, #40]	; 0x28
 8012a40:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8012a44:	960d      	str	r6, [sp, #52]	; 0x34
 8012a46:	950c      	str	r5, [sp, #48]	; 0x30
 8012a48:	900e      	str	r0, [sp, #56]	; 0x38
 8012a4a:	920f      	str	r2, [sp, #60]	; 0x3c
 8012a4c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8012a50:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8012a54:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8012a58:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8012a5c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8012a60:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8012a64:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8012a68:	9317      	str	r3, [sp, #92]	; 0x5c
 8012a6a:	e7c0      	b.n	80129ee <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8012a6c:	20002c84 	.word	0x20002c84

08012a70 <_ZN8touchgfx12ToggleButtonD1Ev>:
 8012a70:	4770      	bx	lr

08012a72 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8012a72:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012a76:	b133      	cbz	r3, 8012a86 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 8012a78:	790b      	ldrb	r3, [r1, #4]
 8012a7a:	2b01      	cmp	r3, #1
 8012a7c:	bf01      	itttt	eq
 8012a7e:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8012a80:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8012a82:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8012a84:	8603      	strheq	r3, [r0, #48]	; 0x30
 8012a86:	f7ff b8e7 	b.w	8011c58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08012a8a <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 8012a8a:	8813      	ldrh	r3, [r2, #0]
 8012a8c:	8683      	strh	r3, [r0, #52]	; 0x34
 8012a8e:	f000 bbc6 	b.w	801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08012a92 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8012a92:	b510      	push	{r4, lr}
 8012a94:	2138      	movs	r1, #56	; 0x38
 8012a96:	4604      	mov	r4, r0
 8012a98:	f011 fbb1 	bl	80241fe <_ZdlPvj>
 8012a9c:	4620      	mov	r0, r4
 8012a9e:	bd10      	pop	{r4, pc}

08012aa0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012aa0:	2000      	movs	r0, #0
 8012aa2:	4770      	bx	lr

08012aa4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012aa4:	4b07      	ldr	r3, [pc, #28]	; (8012ac4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012aa6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012aa8:	881b      	ldrh	r3, [r3, #0]
 8012aaa:	4293      	cmp	r3, r2
 8012aac:	bf81      	itttt	hi
 8012aae:	4b06      	ldrhi	r3, [pc, #24]	; (8012ac8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012ab0:	681b      	ldrhi	r3, [r3, #0]
 8012ab2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012ab6:	7858      	ldrbhi	r0, [r3, #1]
 8012ab8:	bf8c      	ite	hi
 8012aba:	f000 0003 	andhi.w	r0, r0, #3
 8012abe:	2000      	movls	r0, #0
 8012ac0:	4770      	bx	lr
 8012ac2:	bf00      	nop
 8012ac4:	20002ce0 	.word	0x20002ce0
 8012ac8:	20002cdc 	.word	0x20002cdc

08012acc <_ZN8touchgfx8TextAreaD1Ev>:
 8012acc:	4770      	bx	lr
	...

08012ad0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ad4:	4b10      	ldr	r3, [pc, #64]	; (8012b18 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012ad6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012ad8:	881b      	ldrh	r3, [r3, #0]
 8012ada:	428b      	cmp	r3, r1
 8012adc:	4604      	mov	r4, r0
 8012ade:	d918      	bls.n	8012b12 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012ae0:	6803      	ldr	r3, [r0, #0]
 8012ae2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012ae4:	4b0d      	ldr	r3, [pc, #52]	; (8012b1c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012ae6:	6818      	ldr	r0, [r3, #0]
 8012ae8:	f7f3 ff4e 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8012aec:	6823      	ldr	r3, [r4, #0]
 8012aee:	4606      	mov	r6, r0
 8012af0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012af2:	4620      	mov	r0, r4
 8012af4:	4798      	blx	r3
 8012af6:	6823      	ldr	r3, [r4, #0]
 8012af8:	4607      	mov	r7, r0
 8012afa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012afe:	4620      	mov	r0, r4
 8012b00:	4798      	blx	r3
 8012b02:	463a      	mov	r2, r7
 8012b04:	4603      	mov	r3, r0
 8012b06:	4631      	mov	r1, r6
 8012b08:	4620      	mov	r0, r4
 8012b0a:	46ac      	mov	ip, r5
 8012b0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012b10:	4760      	bx	ip
 8012b12:	2000      	movs	r0, #0
 8012b14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b18:	20002ce0 	.word	0x20002ce0
 8012b1c:	20002ce8 	.word	0x20002ce8

08012b20 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012b20:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012b24:	4b17      	ldr	r3, [pc, #92]	; (8012b84 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012b26:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012b28:	881b      	ldrh	r3, [r3, #0]
 8012b2a:	428b      	cmp	r3, r1
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	d926      	bls.n	8012b7e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012b30:	4b15      	ldr	r3, [pc, #84]	; (8012b88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012b32:	681b      	ldr	r3, [r3, #0]
 8012b34:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012b38:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012b3c:	4b13      	ldr	r3, [pc, #76]	; (8012b8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012b3e:	7855      	ldrb	r5, [r2, #1]
 8012b40:	681b      	ldr	r3, [r3, #0]
 8012b42:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012b46:	6833      	ldr	r3, [r6, #0]
 8012b48:	69df      	ldr	r7, [r3, #28]
 8012b4a:	4b11      	ldr	r3, [pc, #68]	; (8012b90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012b4c:	6818      	ldr	r0, [r3, #0]
 8012b4e:	f7f3 ff1b 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8012b52:	6823      	ldr	r3, [r4, #0]
 8012b54:	4680      	mov	r8, r0
 8012b56:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b58:	4620      	mov	r0, r4
 8012b5a:	4798      	blx	r3
 8012b5c:	6823      	ldr	r3, [r4, #0]
 8012b5e:	4681      	mov	r9, r0
 8012b60:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012b64:	4620      	mov	r0, r4
 8012b66:	4798      	blx	r3
 8012b68:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012b6c:	9000      	str	r0, [sp, #0]
 8012b6e:	464b      	mov	r3, r9
 8012b70:	4642      	mov	r2, r8
 8012b72:	4629      	mov	r1, r5
 8012b74:	4630      	mov	r0, r6
 8012b76:	47b8      	blx	r7
 8012b78:	b003      	add	sp, #12
 8012b7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b7e:	2000      	movs	r0, #0
 8012b80:	e7fa      	b.n	8012b78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012b82:	bf00      	nop
 8012b84:	20002ce0 	.word	0x20002ce0
 8012b88:	20002cdc 	.word	0x20002cdc
 8012b8c:	20002ce4 	.word	0x20002ce4
 8012b90:	20002ce8 	.word	0x20002ce8

08012b94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012b94:	b40e      	push	{r1, r2, r3}
 8012b96:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b9a:	4b2f      	ldr	r3, [pc, #188]	; (8012c58 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012b9c:	881a      	ldrh	r2, [r3, #0]
 8012b9e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012ba0:	429a      	cmp	r2, r3
 8012ba2:	b09d      	sub	sp, #116	; 0x74
 8012ba4:	4604      	mov	r4, r0
 8012ba6:	d954      	bls.n	8012c52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012ba8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012c5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012bac:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012c60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012bb0:	aa26      	add	r2, sp, #152	; 0x98
 8012bb2:	9202      	str	r2, [sp, #8]
 8012bb4:	f8d9 2000 	ldr.w	r2, [r9]
 8012bb8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012bbc:	f8d8 3000 	ldr.w	r3, [r8]
 8012bc0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012bc4:	682b      	ldr	r3, [r5, #0]
 8012bc6:	4628      	mov	r0, r5
 8012bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012bca:	4798      	blx	r3
 8012bcc:	b207      	sxth	r7, r0
 8012bce:	4606      	mov	r6, r0
 8012bd0:	a803      	add	r0, sp, #12
 8012bd2:	f004 f853 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 8012bd6:	682b      	ldr	r3, [r5, #0]
 8012bd8:	4628      	mov	r0, r5
 8012bda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012bdc:	4798      	blx	r3
 8012bde:	682b      	ldr	r3, [r5, #0]
 8012be0:	4682      	mov	sl, r0
 8012be2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012be4:	4628      	mov	r0, r5
 8012be6:	4798      	blx	r3
 8012be8:	4653      	mov	r3, sl
 8012bea:	9000      	str	r0, [sp, #0]
 8012bec:	9a02      	ldr	r2, [sp, #8]
 8012bee:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012bf0:	a803      	add	r0, sp, #12
 8012bf2:	f004 f89e 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012bf6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012bf8:	f8d9 3000 	ldr.w	r3, [r9]
 8012bfc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012c00:	8925      	ldrh	r5, [r4, #8]
 8012c02:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012c06:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012c0a:	eba5 050c 	sub.w	r5, r5, ip
 8012c0e:	784a      	ldrb	r2, [r1, #1]
 8012c10:	f8d8 3000 	ldr.w	r3, [r8]
 8012c14:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012c18:	b22d      	sxth	r5, r5
 8012c1a:	9500      	str	r5, [sp, #0]
 8012c1c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012c20:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012c24:	a803      	add	r0, sp, #12
 8012c26:	f001 fde7 	bl	80147f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012c2a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012c2e:	18b9      	adds	r1, r7, r2
 8012c30:	2900      	cmp	r1, #0
 8012c32:	b203      	sxth	r3, r0
 8012c34:	dd0b      	ble.n	8012c4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012c36:	3b01      	subs	r3, #1
 8012c38:	fb13 f302 	smulbb	r3, r3, r2
 8012c3c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012c40:	b21f      	sxth	r7, r3
 8012c42:	4638      	mov	r0, r7
 8012c44:	b01d      	add	sp, #116	; 0x74
 8012c46:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c4a:	b003      	add	sp, #12
 8012c4c:	4770      	bx	lr
 8012c4e:	2b00      	cmp	r3, #0
 8012c50:	dcf7      	bgt.n	8012c42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012c52:	2700      	movs	r7, #0
 8012c54:	e7f5      	b.n	8012c42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012c56:	bf00      	nop
 8012c58:	20002ce0 	.word	0x20002ce0
 8012c5c:	20002cdc 	.word	0x20002cdc
 8012c60:	20002ce4 	.word	0x20002ce4

08012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c68:	4bbb      	ldr	r3, [pc, #748]	; (8012f58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 8012c6a:	460c      	mov	r4, r1
 8012c6c:	881b      	ldrh	r3, [r3, #0]
 8012c6e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012c70:	428b      	cmp	r3, r1
 8012c72:	b0a9      	sub	sp, #164	; 0xa4
 8012c74:	4681      	mov	r9, r0
 8012c76:	d809      	bhi.n	8012c8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012c78:	2300      	movs	r3, #0
 8012c7a:	f04f 32ff 	mov.w	r2, #4294967295
 8012c7e:	e9c0 3200 	strd	r3, r2, [r0]
 8012c82:	6083      	str	r3, [r0, #8]
 8012c84:	4648      	mov	r0, r9
 8012c86:	b029      	add	sp, #164	; 0xa4
 8012c88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c8c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 8012f60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012c90:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 8012f64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 8012c94:	f8db 3000 	ldr.w	r3, [fp]
 8012c98:	f8d8 0000 	ldr.w	r0, [r8]
 8012c9c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012ca0:	4bae      	ldr	r3, [pc, #696]	; (8012f5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012ca2:	681b      	ldr	r3, [r3, #0]
 8012ca4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012ca8:	f7f3 fe6e 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8012cac:	682b      	ldr	r3, [r5, #0]
 8012cae:	4607      	mov	r7, r0
 8012cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012cb2:	4628      	mov	r0, r5
 8012cb4:	4798      	blx	r3
 8012cb6:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 8012cb8:	f8cd 800c 	str.w	r8, [sp, #12]
 8012cbc:	4430      	add	r0, r6
 8012cbe:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 8012cc2:	b283      	uxth	r3, r0
 8012cc4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 8012cc8:	9302      	str	r3, [sp, #8]
 8012cca:	4650      	mov	r0, sl
 8012ccc:	2e00      	cmp	r6, #0
 8012cce:	f040 8091 	bne.w	8012df4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012cd2:	f003 ffd3 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 8012cd6:	682b      	ldr	r3, [r5, #0]
 8012cd8:	4628      	mov	r0, r5
 8012cda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012cdc:	4798      	blx	r3
 8012cde:	682b      	ldr	r3, [r5, #0]
 8012ce0:	9005      	str	r0, [sp, #20]
 8012ce2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012ce4:	4628      	mov	r0, r5
 8012ce6:	4798      	blx	r3
 8012ce8:	6823      	ldr	r3, [r4, #0]
 8012cea:	4680      	mov	r8, r0
 8012cec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012cee:	4620      	mov	r0, r4
 8012cf0:	4798      	blx	r3
 8012cf2:	6822      	ldr	r2, [r4, #0]
 8012cf4:	9004      	str	r0, [sp, #16]
 8012cf6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012cfa:	4620      	mov	r0, r4
 8012cfc:	4790      	blx	r2
 8012cfe:	9905      	ldr	r1, [sp, #20]
 8012d00:	9b04      	ldr	r3, [sp, #16]
 8012d02:	9001      	str	r0, [sp, #4]
 8012d04:	9300      	str	r3, [sp, #0]
 8012d06:	460a      	mov	r2, r1
 8012d08:	4643      	mov	r3, r8
 8012d0a:	4639      	mov	r1, r7
 8012d0c:	4650      	mov	r0, sl
 8012d0e:	f004 f825 	bl	8016d5c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012d12:	4637      	mov	r7, r6
 8012d14:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012d16:	f8db 3000 	ldr.w	r3, [fp]
 8012d1a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012d1e:	4629      	mov	r1, r5
 8012d20:	785b      	ldrb	r3, [r3, #1]
 8012d22:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012d26:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012d2a:	4650      	mov	r0, sl
 8012d2c:	f001 fab6 	bl	801429c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012d30:	4287      	cmp	r7, r0
 8012d32:	bfb8      	it	lt
 8012d34:	b207      	sxthlt	r7, r0
 8012d36:	3601      	adds	r6, #1
 8012d38:	4650      	mov	r0, sl
 8012d3a:	b2b6      	uxth	r6, r6
 8012d3c:	f003 ffc5 	bl	8016cca <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012d40:	2800      	cmp	r0, #0
 8012d42:	d0e7      	beq.n	8012d14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 8012d44:	9b02      	ldr	r3, [sp, #8]
 8012d46:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 8012d4a:	fb13 f606 	smulbb	r6, r3, r6
 8012d4e:	eba6 0608 	sub.w	r6, r6, r8
 8012d52:	b2b6      	uxth	r6, r6
 8012d54:	fa0f f886 	sxth.w	r8, r6
 8012d58:	f1b8 0f00 	cmp.w	r8, #0
 8012d5c:	dd06      	ble.n	8012d6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 8012d5e:	682b      	ldr	r3, [r5, #0]
 8012d60:	4628      	mov	r0, r5
 8012d62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d64:	4798      	blx	r3
 8012d66:	4430      	add	r0, r6
 8012d68:	fa0f f880 	sxth.w	r8, r0
 8012d6c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012d70:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012d74:	6823      	ldr	r3, [r4, #0]
 8012d76:	bf08      	it	eq
 8012d78:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 8012d7c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012d7e:	bf18      	it	ne
 8012d80:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 8012d84:	4620      	mov	r0, r4
 8012d86:	4798      	blx	r3
 8012d88:	2801      	cmp	r0, #1
 8012d8a:	b2ba      	uxth	r2, r7
 8012d8c:	f000 80d1 	beq.w	8012f32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 8012d90:	2802      	cmp	r0, #2
 8012d92:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012d96:	f000 80d2 	beq.w	8012f3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 8012d9a:	b21e      	sxth	r6, r3
 8012d9c:	7a29      	ldrb	r1, [r5, #8]
 8012d9e:	7a6d      	ldrb	r5, [r5, #9]
 8012da0:	1a76      	subs	r6, r6, r1
 8012da2:	4429      	add	r1, r5
 8012da4:	440a      	add	r2, r1
 8012da6:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 8012daa:	b2b3      	uxth	r3, r6
 8012dac:	b292      	uxth	r2, r2
 8012dae:	2902      	cmp	r1, #2
 8012db0:	b21f      	sxth	r7, r3
 8012db2:	b216      	sxth	r6, r2
 8012db4:	f000 80c6 	beq.w	8012f44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 8012db8:	2903      	cmp	r1, #3
 8012dba:	f000 80d5 	beq.w	8012f68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 8012dbe:	2901      	cmp	r1, #1
 8012dc0:	f040 80db 	bne.w	8012f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 8012dc4:	8923      	ldrh	r3, [r4, #8]
 8012dc6:	4632      	mov	r2, r6
 8012dc8:	eba3 0308 	sub.w	r3, r3, r8
 8012dcc:	4646      	mov	r6, r8
 8012dce:	463d      	mov	r5, r7
 8012dd0:	4690      	mov	r8, r2
 8012dd2:	b21f      	sxth	r7, r3
 8012dd4:	9b03      	ldr	r3, [sp, #12]
 8012dd6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012dd8:	6818      	ldr	r0, [r3, #0]
 8012dda:	f7f3 fdd5 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8012dde:	f8a9 7000 	strh.w	r7, [r9]
 8012de2:	f8a9 5002 	strh.w	r5, [r9, #2]
 8012de6:	f8a9 6004 	strh.w	r6, [r9, #4]
 8012dea:	f8a9 8006 	strh.w	r8, [r9, #6]
 8012dee:	f8c9 0008 	str.w	r0, [r9, #8]
 8012df2:	e747      	b.n	8012c84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012df4:	f003 ff42 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 8012df8:	682b      	ldr	r3, [r5, #0]
 8012dfa:	4628      	mov	r0, r5
 8012dfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012dfe:	4798      	blx	r3
 8012e00:	682b      	ldr	r3, [r5, #0]
 8012e02:	4606      	mov	r6, r0
 8012e04:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012e06:	4628      	mov	r0, r5
 8012e08:	4798      	blx	r3
 8012e0a:	6823      	ldr	r3, [r4, #0]
 8012e0c:	4680      	mov	r8, r0
 8012e0e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012e10:	4620      	mov	r0, r4
 8012e12:	4798      	blx	r3
 8012e14:	6822      	ldr	r2, [r4, #0]
 8012e16:	9004      	str	r0, [sp, #16]
 8012e18:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012e1c:	4620      	mov	r0, r4
 8012e1e:	4790      	blx	r2
 8012e20:	9b04      	ldr	r3, [sp, #16]
 8012e22:	9001      	str	r0, [sp, #4]
 8012e24:	4632      	mov	r2, r6
 8012e26:	9300      	str	r3, [sp, #0]
 8012e28:	4639      	mov	r1, r7
 8012e2a:	4643      	mov	r3, r8
 8012e2c:	4650      	mov	r0, sl
 8012e2e:	f003 ff95 	bl	8016d5c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012e32:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012e36:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8012e3a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012e3c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012e40:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012e44:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012e48:	bf0a      	itet	eq
 8012e4a:	4642      	moveq	r2, r8
 8012e4c:	461a      	movne	r2, r3
 8012e4e:	4698      	moveq	r8, r3
 8012e50:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012e54:	1ad2      	subs	r2, r2, r3
 8012e56:	f8db 3000 	ldr.w	r3, [fp]
 8012e5a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012e5e:	7859      	ldrb	r1, [r3, #1]
 8012e60:	f8cd a020 	str.w	sl, [sp, #32]
 8012e64:	2300      	movs	r3, #0
 8012e66:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012e6a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012e6e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012e72:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8012e76:	950a      	str	r5, [sp, #40]	; 0x28
 8012e78:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8012e7c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012e80:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012e84:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012e88:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012e8c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012e90:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012e94:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012e98:	b350      	cbz	r0, 8012ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 8012e9a:	682b      	ldr	r3, [r5, #0]
 8012e9c:	4628      	mov	r0, r5
 8012e9e:	695b      	ldr	r3, [r3, #20]
 8012ea0:	4798      	blx	r3
 8012ea2:	4607      	mov	r7, r0
 8012ea4:	b320      	cbz	r0, 8012ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 8012ea6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012ea8:	6803      	ldr	r3, [r0, #0]
 8012eaa:	4639      	mov	r1, r7
 8012eac:	68db      	ldr	r3, [r3, #12]
 8012eae:	4798      	blx	r3
 8012eb0:	4606      	mov	r6, r0
 8012eb2:	b1e8      	cbz	r0, 8012ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 8012eb4:	7b43      	ldrb	r3, [r0, #13]
 8012eb6:	7a82      	ldrb	r2, [r0, #10]
 8012eb8:	005b      	lsls	r3, r3, #1
 8012eba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012ebe:	4313      	orrs	r3, r2
 8012ec0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012ec4:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 8012ec8:	2b04      	cmp	r3, #4
 8012eca:	d111      	bne.n	8012ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 8012ecc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012ece:	6803      	ldr	r3, [r0, #0]
 8012ed0:	4632      	mov	r2, r6
 8012ed2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012ed4:	4639      	mov	r1, r7
 8012ed6:	4798      	blx	r3
 8012ed8:	7b73      	ldrb	r3, [r6, #13]
 8012eda:	005b      	lsls	r3, r3, #1
 8012edc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012ee0:	7ab3      	ldrb	r3, [r6, #10]
 8012ee2:	4313      	orrs	r3, r2
 8012ee4:	4418      	add	r0, r3
 8012ee6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012eea:	4418      	add	r0, r3
 8012eec:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012ef0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012ef4:	2600      	movs	r6, #0
 8012ef6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 8012efa:	4637      	mov	r7, r6
 8012efc:	45c3      	cmp	fp, r8
 8012efe:	bfd4      	ite	le
 8012f00:	2100      	movle	r1, #0
 8012f02:	2101      	movgt	r1, #1
 8012f04:	a807      	add	r0, sp, #28
 8012f06:	f001 fba8 	bl	801465a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8012f0a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8012f0e:	429f      	cmp	r7, r3
 8012f10:	bfb8      	it	lt
 8012f12:	b21f      	sxthlt	r7, r3
 8012f14:	9b02      	ldr	r3, [sp, #8]
 8012f16:	eba8 0803 	sub.w	r8, r8, r3
 8012f1a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8012f1e:	3601      	adds	r6, #1
 8012f20:	b2b6      	uxth	r6, r6
 8012f22:	fa0f f888 	sxth.w	r8, r8
 8012f26:	2b00      	cmp	r3, #0
 8012f28:	f43f af0c 	beq.w	8012d44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 8012f2c:	45c2      	cmp	sl, r8
 8012f2e:	dbe5      	blt.n	8012efc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 8012f30:	e708      	b.n	8012d44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 8012f32:	1bf6      	subs	r6, r6, r7
 8012f34:	2702      	movs	r7, #2
 8012f36:	fb96 f6f7 	sdiv	r6, r6, r7
 8012f3a:	b236      	sxth	r6, r6
 8012f3c:	e72e      	b.n	8012d9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 8012f3e:	4413      	add	r3, r2
 8012f40:	1af6      	subs	r6, r6, r3
 8012f42:	e7fa      	b.n	8012f3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 8012f44:	8925      	ldrh	r5, [r4, #8]
 8012f46:	1aad      	subs	r5, r5, r2
 8012f48:	1aed      	subs	r5, r5, r3
 8012f4a:	b22f      	sxth	r7, r5
 8012f4c:	8965      	ldrh	r5, [r4, #10]
 8012f4e:	eba5 0508 	sub.w	r5, r5, r8
 8012f52:	b22d      	sxth	r5, r5
 8012f54:	e73e      	b.n	8012dd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 8012f56:	bf00      	nop
 8012f58:	20002ce0 	.word	0x20002ce0
 8012f5c:	20002ce4 	.word	0x20002ce4
 8012f60:	20002cdc 	.word	0x20002cdc
 8012f64:	20002ce8 	.word	0x20002ce8
 8012f68:	8965      	ldrh	r5, [r4, #10]
 8012f6a:	1aad      	subs	r5, r5, r2
 8012f6c:	1aed      	subs	r5, r5, r3
 8012f6e:	4633      	mov	r3, r6
 8012f70:	b22d      	sxth	r5, r5
 8012f72:	4646      	mov	r6, r8
 8012f74:	2700      	movs	r7, #0
 8012f76:	4698      	mov	r8, r3
 8012f78:	e72c      	b.n	8012dd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 8012f7a:	2500      	movs	r5, #0
 8012f7c:	e72a      	b.n	8012dd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 8012f7e:	bf00      	nop

08012f80 <_ZN8touchgfx8TextAreaD0Ev>:
 8012f80:	b510      	push	{r4, lr}
 8012f82:	2148      	movs	r1, #72	; 0x48
 8012f84:	4604      	mov	r4, r0
 8012f86:	f011 f93a 	bl	80241fe <_ZdlPvj>
 8012f8a:	4620      	mov	r0, r4
 8012f8c:	bd10      	pop	{r4, pc}
	...

08012f90 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012f90:	b513      	push	{r0, r1, r4, lr}
 8012f92:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012f96:	4604      	mov	r4, r0
 8012f98:	b1fb      	cbz	r3, 8012fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012f9a:	4b16      	ldr	r3, [pc, #88]	; (8012ff4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012f9c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012f9e:	881b      	ldrh	r3, [r3, #0]
 8012fa0:	428b      	cmp	r3, r1
 8012fa2:	d91a      	bls.n	8012fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012fa4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012fa8:	2b00      	cmp	r3, #0
 8012faa:	dd16      	ble.n	8012fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012fac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012fb0:	2b00      	cmp	r3, #0
 8012fb2:	dd12      	ble.n	8012fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012fb4:	4b10      	ldr	r3, [pc, #64]	; (8012ff8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012fb6:	6818      	ldr	r0, [r3, #0]
 8012fb8:	f7f3 fce6 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8012fbc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012fc0:	6822      	ldr	r2, [r4, #0]
 8012fc2:	2b00      	cmp	r3, #0
 8012fc4:	db06      	blt.n	8012fd4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012fc6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012fca:	2b00      	cmp	r3, #0
 8012fcc:	db02      	blt.n	8012fd4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012fce:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012fd0:	4298      	cmp	r0, r3
 8012fd2:	d004      	beq.n	8012fde <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012fd4:	6953      	ldr	r3, [r2, #20]
 8012fd6:	4620      	mov	r0, r4
 8012fd8:	4798      	blx	r3
 8012fda:	b002      	add	sp, #8
 8012fdc:	bd10      	pop	{r4, pc}
 8012fde:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012fe2:	c903      	ldmia	r1, {r0, r1}
 8012fe4:	466b      	mov	r3, sp
 8012fe6:	e883 0003 	stmia.w	r3, {r0, r1}
 8012fea:	6912      	ldr	r2, [r2, #16]
 8012fec:	4619      	mov	r1, r3
 8012fee:	4620      	mov	r0, r4
 8012ff0:	4790      	blx	r2
 8012ff2:	e7f2      	b.n	8012fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012ff4:	20002ce0 	.word	0x20002ce0
 8012ff8:	20002ce8 	.word	0x20002ce8

08012ffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013000:	4b44      	ldr	r3, [pc, #272]	; (8013114 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8013002:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013004:	881b      	ldrh	r3, [r3, #0]
 8013006:	4293      	cmp	r3, r2
 8013008:	b08e      	sub	sp, #56	; 0x38
 801300a:	4604      	mov	r4, r0
 801300c:	d97e      	bls.n	801310c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801300e:	6808      	ldr	r0, [r1, #0]
 8013010:	4d41      	ldr	r5, [pc, #260]	; (8013118 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8013012:	6849      	ldr	r1, [r1, #4]
 8013014:	ab05      	add	r3, sp, #20
 8013016:	c303      	stmia	r3!, {r0, r1}
 8013018:	4611      	mov	r1, r2
 801301a:	6828      	ldr	r0, [r5, #0]
 801301c:	f7f3 fcb4 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8013020:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013024:	2b00      	cmp	r3, #0
 8013026:	db11      	blt.n	801304c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013028:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801302c:	2b00      	cmp	r3, #0
 801302e:	db0d      	blt.n	801304c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013030:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013032:	4298      	cmp	r0, r3
 8013034:	d10a      	bne.n	801304c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013036:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801303a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801303e:	ab09      	add	r3, sp, #36	; 0x24
 8013040:	e883 0003 	stmia.w	r3, {r0, r1}
 8013044:	4619      	mov	r1, r3
 8013046:	a805      	add	r0, sp, #20
 8013048:	f7fd fb50 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801304c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013050:	2b00      	cmp	r3, #0
 8013052:	dd5b      	ble.n	801310c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013054:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013058:	2b00      	cmp	r3, #0
 801305a:	dd57      	ble.n	801310c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801305c:	4f2f      	ldr	r7, [pc, #188]	; (801311c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801305e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013060:	683b      	ldr	r3, [r7, #0]
 8013062:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8013066:	4b2e      	ldr	r3, [pc, #184]	; (8013120 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013068:	681b      	ldr	r3, [r3, #0]
 801306a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801306e:	2e00      	cmp	r6, #0
 8013070:	d04c      	beq.n	801310c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013072:	6823      	ldr	r3, [r4, #0]
 8013074:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013078:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801307a:	4620      	mov	r0, r4
 801307c:	4798      	blx	r3
 801307e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013080:	683b      	ldr	r3, [r7, #0]
 8013082:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8013086:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801308a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801308e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013090:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013094:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013098:	785b      	ldrb	r3, [r3, #1]
 801309a:	9609      	str	r6, [sp, #36]	; 0x24
 801309c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80130a0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80130a4:	4b1f      	ldr	r3, [pc, #124]	; (8013124 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80130a6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80130aa:	681b      	ldr	r3, [r3, #0]
 80130ac:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80130b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80130b2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80130b6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80130ba:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80130be:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80130c2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80130c6:	b10a      	cbz	r2, 80130cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80130c8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80130ca:	b906      	cbnz	r6, 80130ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80130cc:	689e      	ldr	r6, [r3, #8]
 80130ce:	af07      	add	r7, sp, #28
 80130d0:	4621      	mov	r1, r4
 80130d2:	4638      	mov	r0, r7
 80130d4:	f003 f90c 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130d8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80130da:	6828      	ldr	r0, [r5, #0]
 80130dc:	f7f3 fc54 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 80130e0:	6823      	ldr	r3, [r4, #0]
 80130e2:	4605      	mov	r5, r0
 80130e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130e6:	4620      	mov	r0, r4
 80130e8:	4798      	blx	r3
 80130ea:	6823      	ldr	r3, [r4, #0]
 80130ec:	4680      	mov	r8, r0
 80130ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130f2:	4620      	mov	r0, r4
 80130f4:	4798      	blx	r3
 80130f6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80130fa:	ab09      	add	r3, sp, #36	; 0x24
 80130fc:	9300      	str	r3, [sp, #0]
 80130fe:	9501      	str	r5, [sp, #4]
 8013100:	ab05      	add	r3, sp, #20
 8013102:	e897 0006 	ldmia.w	r7, {r1, r2}
 8013106:	4630      	mov	r0, r6
 8013108:	f7f3 fbee 	bl	80068e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801310c:	b00e      	add	sp, #56	; 0x38
 801310e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013112:	bf00      	nop
 8013114:	20002ce0 	.word	0x20002ce0
 8013118:	20002ce8 	.word	0x20002ce8
 801311c:	20002cdc 	.word	0x20002cdc
 8013120:	20002ce4 	.word	0x20002ce4
 8013124:	20002c8c 	.word	0x20002c8c

08013128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013128:	b538      	push	{r3, r4, r5, lr}
 801312a:	4b0e      	ldr	r3, [pc, #56]	; (8013164 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801312c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801312e:	881b      	ldrh	r3, [r3, #0]
 8013130:	429a      	cmp	r2, r3
 8013132:	4604      	mov	r4, r0
 8013134:	d214      	bcs.n	8013160 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8013136:	6803      	ldr	r3, [r0, #0]
 8013138:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801313a:	4798      	blx	r3
 801313c:	6823      	ldr	r3, [r4, #0]
 801313e:	4605      	mov	r5, r0
 8013140:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8013142:	4620      	mov	r0, r4
 8013144:	4798      	blx	r3
 8013146:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801314a:	b22d      	sxth	r5, r5
 801314c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013150:	4601      	mov	r1, r0
 8013152:	bf06      	itte	eq
 8013154:	4602      	moveq	r2, r0
 8013156:	4629      	moveq	r1, r5
 8013158:	462a      	movne	r2, r5
 801315a:	4620      	mov	r0, r4
 801315c:	f7fd f89c 	bl	8010298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013160:	bd38      	pop	{r3, r4, r5, pc}
 8013162:	bf00      	nop
 8013164:	20002ce0 	.word	0x20002ce0

08013168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013168:	b530      	push	{r4, r5, lr}
 801316a:	888b      	ldrh	r3, [r1, #4]
 801316c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801316e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013172:	b085      	sub	sp, #20
 8013174:	4604      	mov	r4, r0
 8013176:	b923      	cbnz	r3, 8013182 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013178:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801317c:	b90b      	cbnz	r3, 8013182 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801317e:	f7ff ffd3 	bl	8013128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8013182:	6823      	ldr	r3, [r4, #0]
 8013184:	466d      	mov	r5, sp
 8013186:	4621      	mov	r1, r4
 8013188:	4628      	mov	r0, r5
 801318a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801318e:	4798      	blx	r3
 8013190:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8013194:	343c      	adds	r4, #60	; 0x3c
 8013196:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801319a:	b005      	add	sp, #20
 801319c:	bd30      	pop	{r4, r5, pc}

0801319e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801319e:	2300      	movs	r3, #0
 80131a0:	8083      	strh	r3, [r0, #4]
 80131a2:	80c3      	strh	r3, [r0, #6]
 80131a4:	8003      	strh	r3, [r0, #0]
 80131a6:	8043      	strh	r3, [r0, #2]
 80131a8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80131ac:	2bff      	cmp	r3, #255	; 0xff
 80131ae:	bf01      	itttt	eq
 80131b0:	890b      	ldrheq	r3, [r1, #8]
 80131b2:	8083      	strheq	r3, [r0, #4]
 80131b4:	894b      	ldrheq	r3, [r1, #10]
 80131b6:	80c3      	strheq	r3, [r0, #6]
 80131b8:	4770      	bx	lr
	...

080131bc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80131bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80131be:	4604      	mov	r4, r0
 80131c0:	6808      	ldr	r0, [r1, #0]
 80131c2:	6849      	ldr	r1, [r1, #4]
 80131c4:	466b      	mov	r3, sp
 80131c6:	c303      	stmia	r3!, {r0, r1}
 80131c8:	6823      	ldr	r3, [r4, #0]
 80131ca:	4669      	mov	r1, sp
 80131cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131ce:	4620      	mov	r0, r4
 80131d0:	4798      	blx	r3
 80131d2:	4b08      	ldr	r3, [pc, #32]	; (80131f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80131d4:	681b      	ldr	r3, [r3, #0]
 80131d6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80131da:	b10a      	cbz	r2, 80131e0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80131dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80131de:	b900      	cbnz	r0, 80131e2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80131e0:	6898      	ldr	r0, [r3, #8]
 80131e2:	6803      	ldr	r3, [r0, #0]
 80131e4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80131e6:	6a1d      	ldr	r5, [r3, #32]
 80131e8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80131ec:	4669      	mov	r1, sp
 80131ee:	47a8      	blx	r5
 80131f0:	b003      	add	sp, #12
 80131f2:	bd30      	pop	{r4, r5, pc}
 80131f4:	20002c8c 	.word	0x20002c8c

080131f8 <_ZN8touchgfx3BoxD1Ev>:
 80131f8:	4770      	bx	lr

080131fa <_ZN8touchgfx3BoxD0Ev>:
 80131fa:	b510      	push	{r4, lr}
 80131fc:	212c      	movs	r1, #44	; 0x2c
 80131fe:	4604      	mov	r4, r0
 8013200:	f010 fffd 	bl	80241fe <_ZdlPvj>
 8013204:	4620      	mov	r0, r4
 8013206:	bd10      	pop	{r4, pc}

08013208 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013208:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801320c:	b12a      	cbz	r2, 801321a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801320e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013212:	b112      	cbz	r2, 801321a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013214:	6803      	ldr	r3, [r0, #0]
 8013216:	695b      	ldr	r3, [r3, #20]
 8013218:	4718      	bx	r3
 801321a:	4770      	bx	lr

0801321c <_ZN8touchgfx6ButtonD1Ev>:
 801321c:	4770      	bx	lr

0801321e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801321e:	b570      	push	{r4, r5, r6, lr}
 8013220:	880b      	ldrh	r3, [r1, #0]
 8013222:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013224:	4605      	mov	r5, r0
 8013226:	8813      	ldrh	r3, [r2, #0]
 8013228:	f825 3f30 	strh.w	r3, [r5, #48]!
 801322c:	4604      	mov	r4, r0
 801322e:	4628      	mov	r0, r5
 8013230:	f005 fa0c 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013234:	4606      	mov	r6, r0
 8013236:	4628      	mov	r0, r5
 8013238:	f005 fa3c 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801323c:	6823      	ldr	r3, [r4, #0]
 801323e:	4605      	mov	r5, r0
 8013240:	4631      	mov	r1, r6
 8013242:	4620      	mov	r0, r4
 8013244:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013246:	4798      	blx	r3
 8013248:	6823      	ldr	r3, [r4, #0]
 801324a:	4629      	mov	r1, r5
 801324c:	4620      	mov	r0, r4
 801324e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013250:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013254:	4718      	bx	r3

08013256 <_ZN8touchgfx6ButtonD0Ev>:
 8013256:	b510      	push	{r4, lr}
 8013258:	2134      	movs	r1, #52	; 0x34
 801325a:	4604      	mov	r4, r0
 801325c:	f010 ffcf 	bl	80241fe <_ZdlPvj>
 8013260:	4620      	mov	r0, r4
 8013262:	bd10      	pop	{r4, pc}

08013264 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013264:	b510      	push	{r4, lr}
 8013266:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 801326a:	2bff      	cmp	r3, #255	; 0xff
 801326c:	4604      	mov	r4, r0
 801326e:	d006      	beq.n	801327e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013270:	2300      	movs	r3, #0
 8013272:	8003      	strh	r3, [r0, #0]
 8013274:	8043      	strh	r3, [r0, #2]
 8013276:	8083      	strh	r3, [r0, #4]
 8013278:	80c3      	strh	r3, [r0, #6]
 801327a:	4620      	mov	r0, r4
 801327c:	bd10      	pop	{r4, pc}
 801327e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013282:	b11b      	cbz	r3, 801328c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013284:	3130      	adds	r1, #48	; 0x30
 8013286:	f005 fa49 	bl	801871c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801328a:	e7f6      	b.n	801327a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801328c:	312e      	adds	r1, #46	; 0x2e
 801328e:	e7fa      	b.n	8013286 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08013290 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013294:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013298:	b08a      	sub	sp, #40	; 0x28
 801329a:	4604      	mov	r4, r0
 801329c:	4688      	mov	r8, r1
 801329e:	2b00      	cmp	r3, #0
 80132a0:	d066      	beq.n	8013370 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80132a2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80132a4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80132a8:	a805      	add	r0, sp, #20
 80132aa:	f005 f9cf 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80132ae:	4607      	mov	r7, r0
 80132b0:	a805      	add	r0, sp, #20
 80132b2:	f005 f9ff 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80132b6:	f9b8 6000 	ldrsh.w	r6, [r8]
 80132ba:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80132be:	4432      	add	r2, r6
 80132c0:	b292      	uxth	r2, r2
 80132c2:	2300      	movs	r3, #0
 80132c4:	fa0f fc82 	sxth.w	ip, r2
 80132c8:	459c      	cmp	ip, r3
 80132ca:	9306      	str	r3, [sp, #24]
 80132cc:	dd52      	ble.n	8013374 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80132ce:	42b7      	cmp	r7, r6
 80132d0:	dd50      	ble.n	8013374 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80132d2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80132d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80132da:	442b      	add	r3, r5
 80132dc:	b29b      	uxth	r3, r3
 80132de:	b219      	sxth	r1, r3
 80132e0:	2900      	cmp	r1, #0
 80132e2:	dd47      	ble.n	8013374 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80132e4:	42a8      	cmp	r0, r5
 80132e6:	dd45      	ble.n	8013374 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80132e8:	4567      	cmp	r7, ip
 80132ea:	bfb8      	it	lt
 80132ec:	b2ba      	uxthlt	r2, r7
 80132ee:	4288      	cmp	r0, r1
 80132f0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80132f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80132f8:	bfb8      	it	lt
 80132fa:	b283      	uxthlt	r3, r0
 80132fc:	1b92      	subs	r2, r2, r6
 80132fe:	1b5b      	subs	r3, r3, r5
 8013300:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013304:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013308:	f8ad 6018 	strh.w	r6, [sp, #24]
 801330c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013310:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013314:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013318:	429a      	cmp	r2, r3
 801331a:	d026      	beq.n	801336a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801331c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013320:	2b00      	cmp	r3, #0
 8013322:	dd22      	ble.n	801336a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013324:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013328:	2b00      	cmp	r3, #0
 801332a:	dd1e      	ble.n	801336a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801332c:	2300      	movs	r3, #0
 801332e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013332:	6823      	ldr	r3, [r4, #0]
 8013334:	a908      	add	r1, sp, #32
 8013336:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013338:	4620      	mov	r0, r4
 801333a:	4798      	blx	r3
 801333c:	4b0f      	ldr	r3, [pc, #60]	; (801337c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801333e:	681b      	ldr	r3, [r3, #0]
 8013340:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013344:	b10a      	cbz	r2, 801334a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013346:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013348:	b900      	cbnz	r0, 801334c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801334a:	6898      	ldr	r0, [r3, #8]
 801334c:	6801      	ldr	r1, [r0, #0]
 801334e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013352:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013356:	2501      	movs	r5, #1
 8013358:	9502      	str	r5, [sp, #8]
 801335a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801335e:	9401      	str	r4, [sp, #4]
 8013360:	ac06      	add	r4, sp, #24
 8013362:	9400      	str	r4, [sp, #0]
 8013364:	688c      	ldr	r4, [r1, #8]
 8013366:	a905      	add	r1, sp, #20
 8013368:	47a0      	blx	r4
 801336a:	b00a      	add	sp, #40	; 0x28
 801336c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013370:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013372:	e797      	b.n	80132a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013374:	2300      	movs	r3, #0
 8013376:	9307      	str	r3, [sp, #28]
 8013378:	e7ca      	b.n	8013310 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801337a:	bf00      	nop
 801337c:	20002c8c 	.word	0x20002c8c

08013380 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013384:	4b2f      	ldr	r3, [pc, #188]	; (8013444 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013386:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013388:	881b      	ldrh	r3, [r3, #0]
 801338a:	4293      	cmp	r3, r2
 801338c:	b08d      	sub	sp, #52	; 0x34
 801338e:	4604      	mov	r4, r0
 8013390:	460f      	mov	r7, r1
 8013392:	d954      	bls.n	801343e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013394:	4b2c      	ldr	r3, [pc, #176]	; (8013448 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013396:	6819      	ldr	r1, [r3, #0]
 8013398:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801339c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80133a0:	4a2a      	ldr	r2, [pc, #168]	; (801344c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80133a2:	6812      	ldr	r2, [r2, #0]
 80133a4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80133a8:	2900      	cmp	r1, #0
 80133aa:	d048      	beq.n	801343e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80133ac:	785a      	ldrb	r2, [r3, #1]
 80133ae:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80133b2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80133b6:	4b26      	ldr	r3, [pc, #152]	; (8013450 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80133b8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80133bc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80133c0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80133c4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80133c6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80133ca:	9107      	str	r1, [sp, #28]
 80133cc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80133d0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80133d4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80133d8:	681a      	ldr	r2, [r3, #0]
 80133da:	f88d 8020 	strb.w	r8, [sp, #32]
 80133de:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 80133e2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80133e6:	9609      	str	r6, [sp, #36]	; 0x24
 80133e8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80133ec:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80133f0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80133f4:	b10b      	cbz	r3, 80133fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80133f6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80133f8:	b905      	cbnz	r5, 80133fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80133fa:	6895      	ldr	r5, [r2, #8]
 80133fc:	ae05      	add	r6, sp, #20
 80133fe:	4621      	mov	r1, r4
 8013400:	4630      	mov	r0, r6
 8013402:	f002 ff75 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013406:	4b13      	ldr	r3, [pc, #76]	; (8013454 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013408:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801340a:	6818      	ldr	r0, [r3, #0]
 801340c:	f7f3 fabc 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 8013410:	6823      	ldr	r3, [r4, #0]
 8013412:	4680      	mov	r8, r0
 8013414:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013416:	4620      	mov	r0, r4
 8013418:	4798      	blx	r3
 801341a:	6823      	ldr	r3, [r4, #0]
 801341c:	4681      	mov	r9, r0
 801341e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013422:	4620      	mov	r0, r4
 8013424:	4798      	blx	r3
 8013426:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801342a:	ab07      	add	r3, sp, #28
 801342c:	9300      	str	r3, [sp, #0]
 801342e:	f8cd 8004 	str.w	r8, [sp, #4]
 8013432:	463b      	mov	r3, r7
 8013434:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013438:	4628      	mov	r0, r5
 801343a:	f7f3 fa55 	bl	80068e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801343e:	b00d      	add	sp, #52	; 0x34
 8013440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013444:	20002ce0 	.word	0x20002ce0
 8013448:	20002cdc 	.word	0x20002cdc
 801344c:	20002ce4 	.word	0x20002ce4
 8013450:	20002c8c 	.word	0x20002c8c
 8013454:	20002ce8 	.word	0x20002ce8

08013458 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 8013458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801345c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8013460:	b0a0      	sub	sp, #128	; 0x80
 8013462:	4604      	mov	r4, r0
 8013464:	b193      	cbz	r3, 801348c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013466:	4b30      	ldr	r3, [pc, #192]	; (8013528 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 8013468:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801346a:	881b      	ldrh	r3, [r3, #0]
 801346c:	428b      	cmp	r3, r1
 801346e:	d90d      	bls.n	801348c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013470:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013474:	2b00      	cmp	r3, #0
 8013476:	dd09      	ble.n	801348c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013478:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801347c:	2b00      	cmp	r3, #0
 801347e:	dd05      	ble.n	801348c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013480:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8013484:	b12b      	cbz	r3, 8013492 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 8013486:	6803      	ldr	r3, [r0, #0]
 8013488:	695b      	ldr	r3, [r3, #20]
 801348a:	4798      	blx	r3
 801348c:	b020      	add	sp, #128	; 0x80
 801348e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013492:	4b26      	ldr	r3, [pc, #152]	; (801352c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 8013494:	681b      	ldr	r3, [r3, #0]
 8013496:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801349a:	4b25      	ldr	r3, [pc, #148]	; (8013530 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 801349c:	681b      	ldr	r3, [r3, #0]
 801349e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80134a2:	4b24      	ldr	r3, [pc, #144]	; (8013534 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 80134a4:	6818      	ldr	r0, [r3, #0]
 80134a6:	f7f3 fa6f 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 80134aa:	4606      	mov	r6, r0
 80134ac:	a807      	add	r0, sp, #28
 80134ae:	f003 fbe5 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 80134b2:	682b      	ldr	r3, [r5, #0]
 80134b4:	4628      	mov	r0, r5
 80134b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80134b8:	4798      	blx	r3
 80134ba:	682b      	ldr	r3, [r5, #0]
 80134bc:	4607      	mov	r7, r0
 80134be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80134c0:	4628      	mov	r0, r5
 80134c2:	4798      	blx	r3
 80134c4:	6823      	ldr	r3, [r4, #0]
 80134c6:	4605      	mov	r5, r0
 80134c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80134ca:	4620      	mov	r0, r4
 80134cc:	4798      	blx	r3
 80134ce:	6823      	ldr	r3, [r4, #0]
 80134d0:	4680      	mov	r8, r0
 80134d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80134d6:	4620      	mov	r0, r4
 80134d8:	4798      	blx	r3
 80134da:	462b      	mov	r3, r5
 80134dc:	e9cd 8000 	strd	r8, r0, [sp]
 80134e0:	463a      	mov	r2, r7
 80134e2:	a807      	add	r0, sp, #28
 80134e4:	4631      	mov	r1, r6
 80134e6:	f003 fc39 	bl	8016d5c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80134ea:	a807      	add	r0, sp, #28
 80134ec:	f003 fff2 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80134f0:	280a      	cmp	r0, #10
 80134f2:	d103      	bne.n	80134fc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 80134f4:	6823      	ldr	r3, [r4, #0]
 80134f6:	4620      	mov	r0, r4
 80134f8:	695b      	ldr	r3, [r3, #20]
 80134fa:	e7c6      	b.n	801348a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 80134fc:	a807      	add	r0, sp, #28
 80134fe:	f003 ffe9 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013502:	2800      	cmp	r0, #0
 8013504:	d1f4      	bne.n	80134f0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 8013506:	ad04      	add	r5, sp, #16
 8013508:	4621      	mov	r1, r4
 801350a:	4628      	mov	r0, r5
 801350c:	f7ff fbaa 	bl	8012c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8013510:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013514:	6822      	ldr	r2, [r4, #0]
 8013516:	ab02      	add	r3, sp, #8
 8013518:	e883 0003 	stmia.w	r3, {r0, r1}
 801351c:	6912      	ldr	r2, [r2, #16]
 801351e:	4619      	mov	r1, r3
 8013520:	4620      	mov	r0, r4
 8013522:	4790      	blx	r2
 8013524:	e7b2      	b.n	801348c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013526:	bf00      	nop
 8013528:	20002ce0 	.word	0x20002ce0
 801352c:	20002cdc 	.word	0x20002cdc
 8013530:	20002ce4 	.word	0x20002ce4
 8013534:	20002ce8 	.word	0x20002ce8

08013538 <_ZN8touchgfx5ImageD1Ev>:
 8013538:	4770      	bx	lr

0801353a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801353a:	b570      	push	{r4, r5, r6, lr}
 801353c:	880b      	ldrh	r3, [r1, #0]
 801353e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013540:	4604      	mov	r4, r0
 8013542:	4608      	mov	r0, r1
 8013544:	460d      	mov	r5, r1
 8013546:	f005 f881 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801354a:	4606      	mov	r6, r0
 801354c:	4628      	mov	r0, r5
 801354e:	f005 f8b1 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013552:	6823      	ldr	r3, [r4, #0]
 8013554:	4605      	mov	r5, r0
 8013556:	4631      	mov	r1, r6
 8013558:	4620      	mov	r0, r4
 801355a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801355c:	4798      	blx	r3
 801355e:	6823      	ldr	r3, [r4, #0]
 8013560:	4629      	mov	r1, r5
 8013562:	4620      	mov	r0, r4
 8013564:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801356a:	4718      	bx	r3

0801356c <_ZN8touchgfx5ImageD0Ev>:
 801356c:	b510      	push	{r4, lr}
 801356e:	212c      	movs	r1, #44	; 0x2c
 8013570:	4604      	mov	r4, r0
 8013572:	f010 fe44 	bl	80241fe <_ZdlPvj>
 8013576:	4620      	mov	r0, r4
 8013578:	bd10      	pop	{r4, pc}

0801357a <_ZNK8touchgfx5Image12getSolidRectEv>:
 801357a:	b510      	push	{r4, lr}
 801357c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013580:	2bff      	cmp	r3, #255	; 0xff
 8013582:	4604      	mov	r4, r0
 8013584:	d006      	beq.n	8013594 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013586:	2300      	movs	r3, #0
 8013588:	8003      	strh	r3, [r0, #0]
 801358a:	8043      	strh	r3, [r0, #2]
 801358c:	8083      	strh	r3, [r0, #4]
 801358e:	80c3      	strh	r3, [r0, #6]
 8013590:	4620      	mov	r0, r4
 8013592:	bd10      	pop	{r4, pc}
 8013594:	3126      	adds	r1, #38	; 0x26
 8013596:	f005 f8c1 	bl	801871c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801359a:	e7f9      	b.n	8013590 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0801359c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801359c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80135a0:	b12a      	cbz	r2, 80135ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80135a2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80135a6:	b112      	cbz	r2, 80135ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80135a8:	6803      	ldr	r3, [r0, #0]
 80135aa:	695b      	ldr	r3, [r3, #20]
 80135ac:	4718      	bx	r3
 80135ae:	4770      	bx	lr

080135b0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80135b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135b4:	4604      	mov	r4, r0
 80135b6:	b088      	sub	sp, #32
 80135b8:	f854 3b26 	ldr.w	r3, [r4], #38
 80135bc:	2500      	movs	r5, #0
 80135be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135c0:	460f      	mov	r7, r1
 80135c2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80135c6:	a904      	add	r1, sp, #16
 80135c8:	4606      	mov	r6, r0
 80135ca:	4798      	blx	r3
 80135cc:	4620      	mov	r0, r4
 80135ce:	f005 f83d 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80135d2:	4680      	mov	r8, r0
 80135d4:	4620      	mov	r0, r4
 80135d6:	f005 f86d 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80135da:	9506      	str	r5, [sp, #24]
 80135dc:	ad06      	add	r5, sp, #24
 80135de:	f8ad 001e 	strh.w	r0, [sp, #30]
 80135e2:	4639      	mov	r1, r7
 80135e4:	4628      	mov	r0, r5
 80135e6:	f8ad 801c 	strh.w	r8, [sp, #28]
 80135ea:	f7fd f87f 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 80135ee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80135f2:	2b00      	cmp	r3, #0
 80135f4:	dd19      	ble.n	801362a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80135f6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80135fa:	2b00      	cmp	r3, #0
 80135fc:	dd15      	ble.n	801362a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80135fe:	4b0c      	ldr	r3, [pc, #48]	; (8013630 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013600:	681b      	ldr	r3, [r3, #0]
 8013602:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013606:	b10a      	cbz	r2, 801360c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013608:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801360a:	b900      	cbnz	r0, 801360e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 801360c:	6898      	ldr	r0, [r3, #8]
 801360e:	6801      	ldr	r1, [r0, #0]
 8013610:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013614:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013618:	2701      	movs	r7, #1
 801361a:	9702      	str	r7, [sp, #8]
 801361c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013620:	e9cd 5600 	strd	r5, r6, [sp]
 8013624:	688d      	ldr	r5, [r1, #8]
 8013626:	4621      	mov	r1, r4
 8013628:	47a8      	blx	r5
 801362a:	b008      	add	sp, #32
 801362c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013630:	20002c8c 	.word	0x20002c8c

08013634 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013634:	4770      	bx	lr

08013636 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013636:	b510      	push	{r4, lr}
 8013638:	2148      	movs	r1, #72	; 0x48
 801363a:	4604      	mov	r4, r0
 801363c:	f010 fddf 	bl	80241fe <_ZdlPvj>
 8013640:	4620      	mov	r0, r4
 8013642:	bd10      	pop	{r4, pc}

08013644 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013648:	b08d      	sub	sp, #52	; 0x34
 801364a:	4604      	mov	r4, r0
 801364c:	4688      	mov	r8, r1
 801364e:	f7ff fe1f 	bl	8013290 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013652:	4a4d      	ldr	r2, [pc, #308]	; (8013788 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 8013654:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013656:	8812      	ldrh	r2, [r2, #0]
 8013658:	429a      	cmp	r2, r3
 801365a:	f240 8081 	bls.w	8013760 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 801365e:	4e4b      	ldr	r6, [pc, #300]	; (801378c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 8013660:	6832      	ldr	r2, [r6, #0]
 8013662:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013666:	4b4a      	ldr	r3, [pc, #296]	; (8013790 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 8013668:	681b      	ldr	r3, [r3, #0]
 801366a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801366e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8013672:	2300      	movs	r3, #0
 8013674:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8013678:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801367c:	2b03      	cmp	r3, #3
 801367e:	d811      	bhi.n	80136a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013680:	e8df f003 	tbb	[pc, r3]
 8013684:	71027102 	.word	0x71027102
 8013688:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801368c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013690:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013694:	1a9b      	subs	r3, r3, r2
 8013696:	2002      	movs	r0, #2
 8013698:	f8ad 2012 	strh.w	r2, [sp, #18]
 801369c:	fb93 f3f0 	sdiv	r3, r3, r0
 80136a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80136a4:	ad03      	add	r5, sp, #12
 80136a6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80136aa:	f10d 0914 	add.w	r9, sp, #20
 80136ae:	e889 0003 	stmia.w	r9, {r0, r1}
 80136b2:	4641      	mov	r1, r8
 80136b4:	4648      	mov	r0, r9
 80136b6:	f7fd f819 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 80136ba:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80136be:	2b00      	cmp	r3, #0
 80136c0:	dd4e      	ble.n	8013760 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 80136c2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80136c6:	2b00      	cmp	r3, #0
 80136c8:	dd4a      	ble.n	8013760 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 80136ca:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80136ce:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80136d2:	1a9b      	subs	r3, r3, r2
 80136d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80136d8:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80136dc:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80136e0:	1a9b      	subs	r3, r3, r2
 80136e2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80136e6:	6823      	ldr	r3, [r4, #0]
 80136e8:	4629      	mov	r1, r5
 80136ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80136ec:	4620      	mov	r0, r4
 80136ee:	4798      	blx	r3
 80136f0:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80136f4:	2b00      	cmp	r3, #0
 80136f6:	d045      	beq.n	8013784 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 80136f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80136fa:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80136fc:	6833      	ldr	r3, [r6, #0]
 80136fe:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013702:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013706:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801370a:	785b      	ldrb	r3, [r3, #1]
 801370c:	9209      	str	r2, [sp, #36]	; 0x24
 801370e:	f3c3 0601 	ubfx	r6, r3, #0, #2
 8013712:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013716:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801371a:	2300      	movs	r3, #0
 801371c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013720:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013724:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013728:	4b1a      	ldr	r3, [pc, #104]	; (8013794 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 801372a:	9707      	str	r7, [sp, #28]
 801372c:	681b      	ldr	r3, [r3, #0]
 801372e:	f88d 6020 	strb.w	r6, [sp, #32]
 8013732:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013736:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801373a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801373e:	b10a      	cbz	r2, 8013744 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 8013740:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013742:	b904      	cbnz	r4, 8013746 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013744:	689c      	ldr	r4, [r3, #8]
 8013746:	4b14      	ldr	r3, [pc, #80]	; (8013798 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 8013748:	6818      	ldr	r0, [r3, #0]
 801374a:	f7f3 f91d 	bl	8006988 <_ZNK8touchgfx5Texts7getTextEt>
 801374e:	ab07      	add	r3, sp, #28
 8013750:	9001      	str	r0, [sp, #4]
 8013752:	9300      	str	r3, [sp, #0]
 8013754:	e895 0006 	ldmia.w	r5, {r1, r2}
 8013758:	464b      	mov	r3, r9
 801375a:	4620      	mov	r0, r4
 801375c:	f7f3 f8c4 	bl	80068e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013760:	b00d      	add	sp, #52	; 0x34
 8013762:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013766:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801376a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801376e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013772:	1a9b      	subs	r3, r3, r2
 8013774:	2002      	movs	r0, #2
 8013776:	f8ad 1012 	strh.w	r1, [sp, #18]
 801377a:	fb93 f3f0 	sdiv	r3, r3, r0
 801377e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013782:	e78f      	b.n	80136a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013784:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013786:	e7b8      	b.n	80136fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 8013788:	20002ce0 	.word	0x20002ce0
 801378c:	20002cdc 	.word	0x20002cdc
 8013790:	20002ce4 	.word	0x20002ce4
 8013794:	20002c8c 	.word	0x20002c8c
 8013798:	20002ce8 	.word	0x20002ce8

0801379c <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 801379c:	b510      	push	{r4, lr}
 801379e:	2101      	movs	r1, #1
 80137a0:	4c13      	ldr	r4, [pc, #76]	; (80137f0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80137a2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80137a6:	2200      	movs	r2, #0
 80137a8:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80137ac:	6004      	str	r4, [r0, #0]
 80137ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80137b2:	4c10      	ldr	r4, [pc, #64]	; (80137f4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80137b4:	8082      	strh	r2, [r0, #4]
 80137b6:	80c2      	strh	r2, [r0, #6]
 80137b8:	8102      	strh	r2, [r0, #8]
 80137ba:	8142      	strh	r2, [r0, #10]
 80137bc:	8182      	strh	r2, [r0, #12]
 80137be:	81c2      	strh	r2, [r0, #14]
 80137c0:	8202      	strh	r2, [r0, #16]
 80137c2:	8242      	strh	r2, [r0, #18]
 80137c4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80137c8:	61c2      	str	r2, [r0, #28]
 80137ca:	8402      	strh	r2, [r0, #32]
 80137cc:	8442      	strh	r2, [r0, #34]	; 0x22
 80137ce:	6282      	str	r2, [r0, #40]	; 0x28
 80137d0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80137d4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80137d6:	8601      	strh	r1, [r0, #48]	; 0x30
 80137d8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80137dc:	6344      	str	r4, [r0, #52]	; 0x34
 80137de:	8701      	strh	r1, [r0, #56]	; 0x38
 80137e0:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80137e4:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80137e8:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 80137ec:	bd10      	pop	{r4, pc}
 80137ee:	bf00      	nop
 80137f0:	08028940 	.word	0x08028940
 80137f4:	08026e28 	.word	0x08026e28

080137f8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80137f8:	b510      	push	{r4, lr}
 80137fa:	6803      	ldr	r3, [r0, #0]
 80137fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80137fe:	460c      	mov	r4, r1
 8013800:	4798      	blx	r3
 8013802:	1b03      	subs	r3, r0, r4
 8013804:	4258      	negs	r0, r3
 8013806:	4158      	adcs	r0, r3
 8013808:	bd10      	pop	{r4, pc}
	...

0801380c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801380c:	4b01      	ldr	r3, [pc, #4]	; (8013814 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801380e:	6019      	str	r1, [r3, #0]
 8013810:	4770      	bx	lr
 8013812:	bf00      	nop
 8013814:	20002c94 	.word	0x20002c94

08013818 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801381c:	4696      	mov	lr, r2
 801381e:	4605      	mov	r5, r0
 8013820:	4614      	mov	r4, r2
 8013822:	460e      	mov	r6, r1
 8013824:	461f      	mov	r7, r3
 8013826:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801382a:	b097      	sub	sp, #92	; 0x5c
 801382c:	f10d 0c1c 	add.w	ip, sp, #28
 8013830:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013834:	f8de 3000 	ldr.w	r3, [lr]
 8013838:	f8cc 3000 	str.w	r3, [ip]
 801383c:	f104 0e14 	add.w	lr, r4, #20
 8013840:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013844:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013848:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801384c:	f8de 3000 	ldr.w	r3, [lr]
 8013850:	f8cc 3000 	str.w	r3, [ip]
 8013854:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013858:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801385c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013860:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013864:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013868:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801386c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013870:	f8de 3000 	ldr.w	r3, [lr]
 8013874:	f8cc 3000 	str.w	r3, [ip]
 8013878:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801387a:	682b      	ldr	r3, [r5, #0]
 801387c:	9201      	str	r2, [sp, #4]
 801387e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013882:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013884:	9200      	str	r2, [sp, #0]
 8013886:	f8cd 8008 	str.w	r8, [sp, #8]
 801388a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801388e:	aa07      	add	r2, sp, #28
 8013890:	463b      	mov	r3, r7
 8013892:	4631      	mov	r1, r6
 8013894:	4628      	mov	r0, r5
 8013896:	47d8      	blx	fp
 8013898:	46a6      	mov	lr, r4
 801389a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801389e:	f10d 0c1c 	add.w	ip, sp, #28
 80138a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80138a6:	f8de 3000 	ldr.w	r3, [lr]
 80138aa:	f8cc 3000 	str.w	r3, [ip]
 80138ae:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80138b2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80138b6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80138ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80138be:	343c      	adds	r4, #60	; 0x3c
 80138c0:	f8de 3000 	ldr.w	r3, [lr]
 80138c4:	f8cc 3000 	str.w	r3, [ip]
 80138c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80138ca:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80138ce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80138d2:	6823      	ldr	r3, [r4, #0]
 80138d4:	f8cc 3000 	str.w	r3, [ip]
 80138d8:	682b      	ldr	r3, [r5, #0]
 80138da:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80138de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80138e0:	9201      	str	r2, [sp, #4]
 80138e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80138e4:	9200      	str	r2, [sp, #0]
 80138e6:	f8cd 8008 	str.w	r8, [sp, #8]
 80138ea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80138ec:	aa07      	add	r2, sp, #28
 80138ee:	463b      	mov	r3, r7
 80138f0:	4631      	mov	r1, r6
 80138f2:	4628      	mov	r0, r5
 80138f4:	47a0      	blx	r4
 80138f6:	b017      	add	sp, #92	; 0x5c
 80138f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080138fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80138fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013900:	b08d      	sub	sp, #52	; 0x34
 8013902:	4688      	mov	r8, r1
 8013904:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013906:	f8d3 c000 	ldr.w	ip, [r3]
 801390a:	680f      	ldr	r7, [r1, #0]
 801390c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013910:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013914:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013918:	edd3 6a07 	vldr	s13, [r3, #28]
 801391c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801391e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013922:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013926:	f9ba 1000 	ldrsh.w	r1, [sl]
 801392a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801392e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013932:	eba7 070c 	sub.w	r7, r7, ip
 8013936:	42bc      	cmp	r4, r7
 8013938:	bfa8      	it	ge
 801393a:	463c      	movge	r4, r7
 801393c:	ee07 4a90 	vmov	s15, r4
 8013940:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013944:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013948:	ee25 4a04 	vmul.f32	s8, s10, s8
 801394c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013950:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013954:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013958:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801395c:	eb09 0e0c 	add.w	lr, r9, ip
 8013960:	4571      	cmp	r1, lr
 8013962:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013966:	ee32 1a05 	vadd.f32	s2, s4, s10
 801396a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801396e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013972:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013976:	f340 808d 	ble.w	8013a94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801397a:	eba1 060e 	sub.w	r6, r1, lr
 801397e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013982:	ee07 5a10 	vmov	s14, r5
 8013986:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801398a:	2d00      	cmp	r5, #0
 801398c:	fb04 6615 	mls	r6, r4, r5, r6
 8013990:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013994:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013998:	eea7 1a05 	vfma.f32	s2, s14, s10
 801399c:	dd13      	ble.n	80139c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801399e:	ee70 6a44 	vsub.f32	s13, s0, s8
 80139a2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80139a6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80139aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80139ae:	bf18      	it	ne
 80139b0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80139b4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80139b8:	bf08      	it	eq
 80139ba:	eeb0 7a67 	vmoveq.f32	s14, s15
 80139be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80139c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80139c6:	fb05 f204 	mul.w	r2, r5, r4
 80139ca:	1abf      	subs	r7, r7, r2
 80139cc:	4494      	add	ip, r2
 80139ce:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80139d2:	4411      	add	r1, r2
 80139d4:	eb09 020c 	add.w	r2, r9, ip
 80139d8:	443a      	add	r2, r7
 80139da:	b209      	sxth	r1, r1
 80139dc:	428a      	cmp	r2, r1
 80139de:	bfc4      	itt	gt
 80139e0:	eba1 0209 	subgt.w	r2, r1, r9
 80139e4:	eba2 070c 	subgt.w	r7, r2, ip
 80139e8:	2f00      	cmp	r7, #0
 80139ea:	dd50      	ble.n	8013a8e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80139ec:	fb97 f1f4 	sdiv	r1, r7, r4
 80139f0:	fb04 7211 	mls	r2, r4, r1, r7
 80139f4:	b90a      	cbnz	r2, 80139fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80139f6:	3901      	subs	r1, #1
 80139f8:	4622      	mov	r2, r4
 80139fa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80139fe:	6840      	ldr	r0, [r0, #4]
 8013a00:	900b      	str	r0, [sp, #44]	; 0x2c
 8013a02:	f8d0 a000 	ldr.w	sl, [r0]
 8013a06:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013a08:	9008      	str	r0, [sp, #32]
 8013a0a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013a0e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013a10:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013a14:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013a18:	695b      	ldr	r3, [r3, #20]
 8013a1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013a1c:	445b      	add	r3, fp
 8013a1e:	eef0 6a42 	vmov.f32	s13, s4
 8013a22:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013a26:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013a2a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a32:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013a36:	9307      	str	r3, [sp, #28]
 8013a38:	ee17 7a90 	vmov	r7, s15
 8013a3c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013a40:	eeb0 7a61 	vmov.f32	s14, s3
 8013a44:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013a48:	ee16 3a90 	vmov	r3, s13
 8013a4c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013a50:	ee17 ca90 	vmov	ip, s15
 8013a54:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013a58:	fb9c fcf4 	sdiv	ip, ip, r4
 8013a5c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013a60:	9302      	str	r3, [sp, #8]
 8013a62:	ee17 3a10 	vmov	r3, s14
 8013a66:	44b6      	add	lr, r6
 8013a68:	fb04 e505 	mla	r5, r4, r5, lr
 8013a6c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013a70:	fb07 3706 	mla	r7, r7, r6, r3
 8013a74:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013a78:	e9cd 4700 	strd	r4, r7, [sp]
 8013a7c:	2900      	cmp	r1, #0
 8013a7e:	bfcc      	ite	gt
 8013a80:	46a1      	movgt	r9, r4
 8013a82:	4691      	movle	r9, r2
 8013a84:	eba9 0306 	sub.w	r3, r9, r6
 8013a88:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013a8c:	47a0      	blx	r4
 8013a8e:	b00d      	add	sp, #52	; 0x34
 8013a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a94:	2500      	movs	r5, #0
 8013a96:	462e      	mov	r6, r5
 8013a98:	e799      	b.n	80139ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013a9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aa0:	b0db      	sub	sp, #364	; 0x16c
 8013aa2:	461d      	mov	r5, r3
 8013aa4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013aa8:	930a      	str	r3, [sp, #40]	; 0x28
 8013aaa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013aae:	930b      	str	r3, [sp, #44]	; 0x2c
 8013ab0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013ab4:	9310      	str	r3, [sp, #64]	; 0x40
 8013ab6:	6803      	ldr	r3, [r0, #0]
 8013ab8:	910f      	str	r1, [sp, #60]	; 0x3c
 8013aba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013abc:	9009      	str	r0, [sp, #36]	; 0x24
 8013abe:	4614      	mov	r4, r2
 8013ac0:	4629      	mov	r1, r5
 8013ac2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013ac6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013aca:	47b8      	blx	r7
 8013acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ace:	6058      	str	r0, [r3, #4]
 8013ad0:	2800      	cmp	r0, #0
 8013ad2:	f000 83a1 	beq.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ad6:	682b      	ldr	r3, [r5, #0]
 8013ad8:	9314      	str	r3, [sp, #80]	; 0x50
 8013ada:	686b      	ldr	r3, [r5, #4]
 8013adc:	9315      	str	r3, [sp, #84]	; 0x54
 8013ade:	4bc4      	ldr	r3, [pc, #784]	; (8013df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013ae0:	ed94 7a02 	vldr	s14, [r4, #8]
 8013ae4:	7819      	ldrb	r1, [r3, #0]
 8013ae6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013aea:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013aee:	2900      	cmp	r1, #0
 8013af0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013af4:	bf16      	itet	ne
 8013af6:	4619      	movne	r1, r3
 8013af8:	4611      	moveq	r1, r2
 8013afa:	4613      	movne	r3, r2
 8013afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b00:	9116      	str	r1, [sp, #88]	; 0x58
 8013b02:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013b06:	f240 8387 	bls.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b0a:	ed94 7a07 	vldr	s14, [r4, #28]
 8013b0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013b12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b16:	f240 837f 	bls.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b1a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013b1e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b26:	f240 8377 	bls.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b2a:	6822      	ldr	r2, [r4, #0]
 8013b2c:	4bb1      	ldr	r3, [pc, #708]	; (8013df4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013b2e:	429a      	cmp	r2, r3
 8013b30:	f2c0 8372 	blt.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b34:	49b0      	ldr	r1, [pc, #704]	; (8013df8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013b36:	6963      	ldr	r3, [r4, #20]
 8013b38:	428a      	cmp	r2, r1
 8013b3a:	f300 836d 	bgt.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b3e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013b42:	48ae      	ldr	r0, [pc, #696]	; (8013dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013b44:	33ff      	adds	r3, #255	; 0xff
 8013b46:	4283      	cmp	r3, r0
 8013b48:	f200 8366 	bhi.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b4c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013b4e:	4dac      	ldr	r5, [pc, #688]	; (8013e00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013b50:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013b54:	33ff      	adds	r3, #255	; 0xff
 8013b56:	42ab      	cmp	r3, r5
 8013b58:	f200 835e 	bhi.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b5c:	6862      	ldr	r2, [r4, #4]
 8013b5e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013b62:	33ff      	adds	r3, #255	; 0xff
 8013b64:	4283      	cmp	r3, r0
 8013b66:	f200 8357 	bhi.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b6a:	69a1      	ldr	r1, [r4, #24]
 8013b6c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013b70:	33ff      	adds	r3, #255	; 0xff
 8013b72:	4283      	cmp	r3, r0
 8013b74:	f200 8350 	bhi.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013b7a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013b7e:	30ff      	adds	r0, #255	; 0xff
 8013b80:	42a8      	cmp	r0, r5
 8013b82:	f200 8349 	bhi.w	8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b86:	428a      	cmp	r2, r1
 8013b88:	f280 8110 	bge.w	8013dac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013b8c:	429a      	cmp	r2, r3
 8013b8e:	f300 8119 	bgt.w	8013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013b92:	4299      	cmp	r1, r3
 8013b94:	f280 811d 	bge.w	8013dd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013b98:	2502      	movs	r5, #2
 8013b9a:	2701      	movs	r7, #1
 8013b9c:	46a9      	mov	r9, r5
 8013b9e:	46b8      	mov	r8, r7
 8013ba0:	f04f 0a00 	mov.w	sl, #0
 8013ba4:	4621      	mov	r1, r4
 8013ba6:	a849      	add	r0, sp, #292	; 0x124
 8013ba8:	f003 ff06 	bl	80179b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013bac:	4622      	mov	r2, r4
 8013bae:	4653      	mov	r3, sl
 8013bb0:	a949      	add	r1, sp, #292	; 0x124
 8013bb2:	f8cd 9000 	str.w	r9, [sp]
 8013bb6:	a819      	add	r0, sp, #100	; 0x64
 8013bb8:	f004 f82e 	bl	8017c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013bbc:	4622      	mov	r2, r4
 8013bbe:	4653      	mov	r3, sl
 8013bc0:	a949      	add	r1, sp, #292	; 0x124
 8013bc2:	f8cd 8000 	str.w	r8, [sp]
 8013bc6:	a829      	add	r0, sp, #164	; 0xa4
 8013bc8:	f004 f826 	bl	8017c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013bcc:	4643      	mov	r3, r8
 8013bce:	4622      	mov	r2, r4
 8013bd0:	a949      	add	r1, sp, #292	; 0x124
 8013bd2:	f8cd 9000 	str.w	r9, [sp]
 8013bd6:	a839      	add	r0, sp, #228	; 0xe4
 8013bd8:	f004 f81e 	bl	8017c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013bdc:	42af      	cmp	r7, r5
 8013bde:	bfb5      	itete	lt
 8013be0:	2300      	movlt	r3, #0
 8013be2:	2301      	movge	r3, #1
 8013be4:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013be6:	930e      	strge	r3, [sp, #56]	; 0x38
 8013be8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013bea:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013bee:	af12      	add	r7, sp, #72	; 0x48
 8013bf0:	bfb9      	ittee	lt
 8013bf2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013bf4:	ac19      	addlt	r4, sp, #100	; 0x64
 8013bf6:	ad19      	addge	r5, sp, #100	; 0x64
 8013bf8:	ac29      	addge	r4, sp, #164	; 0xa4
 8013bfa:	e887 0003 	stmia.w	r7, {r0, r1}
 8013bfe:	b928      	cbnz	r0, 8013c0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013c00:	4b80      	ldr	r3, [pc, #512]	; (8013e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013c02:	6818      	ldr	r0, [r3, #0]
 8013c04:	6803      	ldr	r3, [r0, #0]
 8013c06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c08:	4798      	blx	r3
 8013c0a:	6038      	str	r0, [r7, #0]
 8013c0c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c0e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013c12:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013c16:	930c      	str	r3, [sp, #48]	; 0x30
 8013c18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c1a:	6963      	ldr	r3, [r4, #20]
 8013c1c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013c1e:	440b      	add	r3, r1
 8013c20:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013c24:	4408      	add	r0, r1
 8013c26:	b200      	sxth	r0, r0
 8013c28:	4283      	cmp	r3, r0
 8013c2a:	900d      	str	r0, [sp, #52]	; 0x34
 8013c2c:	f280 80dd 	bge.w	8013dea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013c30:	428b      	cmp	r3, r1
 8013c32:	da08      	bge.n	8013c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013c34:	2a00      	cmp	r2, #0
 8013c36:	dd06      	ble.n	8013c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013c38:	1acb      	subs	r3, r1, r3
 8013c3a:	429a      	cmp	r2, r3
 8013c3c:	f2c0 80e4 	blt.w	8013e08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013c40:	2b00      	cmp	r3, #0
 8013c42:	f300 80e2 	bgt.w	8013e0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013c46:	6967      	ldr	r7, [r4, #20]
 8013c48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c4a:	443b      	add	r3, r7
 8013c4c:	461f      	mov	r7, r3
 8013c4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c50:	1bdf      	subs	r7, r3, r7
 8013c52:	4297      	cmp	r7, r2
 8013c54:	bfa8      	it	ge
 8013c56:	4617      	movge	r7, r2
 8013c58:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013c5c:	2f00      	cmp	r7, #0
 8013c5e:	f340 8166 	ble.w	8013f2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013c62:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c64:	6829      	ldr	r1, [r5, #0]
 8013c66:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c6a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013c6e:	6820      	ldr	r0, [r4, #0]
 8013c70:	4411      	add	r1, r2
 8013c72:	4299      	cmp	r1, r3
 8013c74:	dd1a      	ble.n	8013cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013c76:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013c7a:	440b      	add	r3, r1
 8013c7c:	4402      	add	r2, r0
 8013c7e:	b21b      	sxth	r3, r3
 8013c80:	429a      	cmp	r2, r3
 8013c82:	dc13      	bgt.n	8013cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013c84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013c88:	681b      	ldr	r3, [r3, #0]
 8013c8a:	9206      	str	r2, [sp, #24]
 8013c8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013c8e:	9205      	str	r2, [sp, #20]
 8013c90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c92:	9500      	str	r5, [sp, #0]
 8013c94:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013c98:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013c9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013c9c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013ca0:	a912      	add	r1, sp, #72	; 0x48
 8013ca2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013ca6:	aa49      	add	r2, sp, #292	; 0x124
 8013ca8:	4623      	mov	r3, r4
 8013caa:	47c8      	blx	r9
 8013cac:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013cb0:	441a      	add	r2, r3
 8013cb2:	6963      	ldr	r3, [r4, #20]
 8013cb4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013cb8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013cbc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013cc0:	68a1      	ldr	r1, [r4, #8]
 8013cc2:	ed94 6a08 	vldr	s12, [r4, #32]
 8013cc6:	6022      	str	r2, [r4, #0]
 8013cc8:	3301      	adds	r3, #1
 8013cca:	6163      	str	r3, [r4, #20]
 8013ccc:	69a3      	ldr	r3, [r4, #24]
 8013cce:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013cd2:	3b01      	subs	r3, #1
 8013cd4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013cd8:	61a3      	str	r3, [r4, #24]
 8013cda:	6923      	ldr	r3, [r4, #16]
 8013cdc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013ce0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ce4:	edd4 6a07 	vldr	s13, [r4, #28]
 8013ce8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013cec:	440b      	add	r3, r1
 8013cee:	68e1      	ldr	r1, [r4, #12]
 8013cf0:	6123      	str	r3, [r4, #16]
 8013cf2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013cf6:	428b      	cmp	r3, r1
 8013cf8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013cfc:	db15      	blt.n	8013d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013cfe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013d02:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d06:	3201      	adds	r2, #1
 8013d08:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d0c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013d10:	6022      	str	r2, [r4, #0]
 8013d12:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d16:	1a5b      	subs	r3, r3, r1
 8013d18:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d1c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013d20:	6123      	str	r3, [r4, #16]
 8013d22:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d26:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d2a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013d2e:	441a      	add	r2, r3
 8013d30:	696b      	ldr	r3, [r5, #20]
 8013d32:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013d36:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013d3a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013d3e:	68a9      	ldr	r1, [r5, #8]
 8013d40:	ed95 6a08 	vldr	s12, [r5, #32]
 8013d44:	602a      	str	r2, [r5, #0]
 8013d46:	3301      	adds	r3, #1
 8013d48:	616b      	str	r3, [r5, #20]
 8013d4a:	69ab      	ldr	r3, [r5, #24]
 8013d4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d50:	3b01      	subs	r3, #1
 8013d52:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013d56:	61ab      	str	r3, [r5, #24]
 8013d58:	692b      	ldr	r3, [r5, #16]
 8013d5a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d62:	edd5 6a07 	vldr	s13, [r5, #28]
 8013d66:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d6a:	440b      	add	r3, r1
 8013d6c:	68e9      	ldr	r1, [r5, #12]
 8013d6e:	612b      	str	r3, [r5, #16]
 8013d70:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d74:	428b      	cmp	r3, r1
 8013d76:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d7a:	db15      	blt.n	8013da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013d7c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013d80:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d84:	3201      	adds	r2, #1
 8013d86:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d8a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013d8e:	602a      	str	r2, [r5, #0]
 8013d90:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d94:	1a5b      	subs	r3, r3, r1
 8013d96:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d9a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013d9e:	612b      	str	r3, [r5, #16]
 8013da0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013da4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013da8:	3f01      	subs	r7, #1
 8013daa:	e757      	b.n	8013c5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013dac:	4299      	cmp	r1, r3
 8013dae:	dc13      	bgt.n	8013dd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013db0:	429a      	cmp	r2, r3
 8013db2:	da14      	bge.n	8013dde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013db4:	2502      	movs	r5, #2
 8013db6:	2703      	movs	r7, #3
 8013db8:	46a9      	mov	r9, r5
 8013dba:	f04f 0800 	mov.w	r8, #0
 8013dbe:	f04f 0a01 	mov.w	sl, #1
 8013dc2:	e6ef      	b.n	8013ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013dc4:	2501      	movs	r5, #1
 8013dc6:	2700      	movs	r7, #0
 8013dc8:	46a9      	mov	r9, r5
 8013dca:	46b8      	mov	r8, r7
 8013dcc:	f04f 0a02 	mov.w	sl, #2
 8013dd0:	e6e8      	b.n	8013ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013dd2:	2501      	movs	r5, #1
 8013dd4:	2702      	movs	r7, #2
 8013dd6:	e6e1      	b.n	8013b9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013dd8:	2500      	movs	r5, #0
 8013dda:	2701      	movs	r7, #1
 8013ddc:	e7f4      	b.n	8013dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013dde:	2702      	movs	r7, #2
 8013de0:	2503      	movs	r5, #3
 8013de2:	f04f 0900 	mov.w	r9, #0
 8013de6:	46b8      	mov	r8, r7
 8013de8:	e7e9      	b.n	8013dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013dea:	4613      	mov	r3, r2
 8013dec:	e728      	b.n	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013dee:	bf00      	nop
 8013df0:	20002c84 	.word	0x20002c84
 8013df4:	fffd8f01 	.word	0xfffd8f01
 8013df8:	00027100 	.word	0x00027100
 8013dfc:	0004e1ff 	.word	0x0004e1ff
 8013e00:	0004e1fe 	.word	0x0004e1fe
 8013e04:	20002c8c 	.word	0x20002c8c
 8013e08:	4613      	mov	r3, r2
 8013e0a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013e0c:	9111      	str	r1, [sp, #68]	; 0x44
 8013e0e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013e12:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013e16:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013e18:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013e1c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013e20:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013e24:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013e28:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013e2c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013e30:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013e34:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013e38:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013e3c:	469e      	mov	lr, r3
 8013e3e:	469c      	mov	ip, r3
 8013e40:	f04f 0900 	mov.w	r9, #0
 8013e44:	f1bc 0f00 	cmp.w	ip, #0
 8013e48:	d147      	bne.n	8013eda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013e4a:	eb03 0c07 	add.w	ip, r3, r7
 8013e4e:	1ad7      	subs	r7, r2, r3
 8013e50:	f1b9 0f00 	cmp.w	r9, #0
 8013e54:	d009      	beq.n	8013e6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013e56:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013e5a:	9029      	str	r0, [sp, #164]	; 0xa4
 8013e5c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013e60:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013e64:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013e68:	912d      	str	r1, [sp, #180]	; 0xb4
 8013e6a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e6c:	9111      	str	r1, [sp, #68]	; 0x44
 8013e6e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e72:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013e76:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013e7a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013e7e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013e82:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013e86:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013e8a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013e8e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013e92:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013e96:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013e9a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013e9e:	f04f 0800 	mov.w	r8, #0
 8013ea2:	f1be 0f00 	cmp.w	lr, #0
 8013ea6:	d031      	beq.n	8013f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013ea8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013eaa:	4431      	add	r1, r6
 8013eac:	4549      	cmp	r1, r9
 8013eae:	4450      	add	r0, sl
 8013eb0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013eb4:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013eb8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013ebc:	db08      	blt.n	8013ed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013ebe:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013ec2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013ec6:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013eca:	3001      	adds	r0, #1
 8013ecc:	eba1 0109 	sub.w	r1, r1, r9
 8013ed0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013ed4:	f04f 0801 	mov.w	r8, #1
 8013ed8:	e7e3      	b.n	8013ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013eda:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013edc:	4431      	add	r1, r6
 8013ede:	4541      	cmp	r1, r8
 8013ee0:	4450      	add	r0, sl
 8013ee2:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013ee6:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013eea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013eee:	db08      	blt.n	8013f02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013ef0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013ef4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013ef8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013efc:	3001      	adds	r0, #1
 8013efe:	eba1 0108 	sub.w	r1, r1, r8
 8013f02:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013f06:	f04f 0901 	mov.w	r9, #1
 8013f0a:	e79b      	b.n	8013e44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013f0c:	449c      	add	ip, r3
 8013f0e:	1aff      	subs	r7, r7, r3
 8013f10:	f1b8 0f00 	cmp.w	r8, #0
 8013f14:	d009      	beq.n	8013f2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013f16:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013f1a:	9019      	str	r0, [sp, #100]	; 0x64
 8013f1c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013f20:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013f24:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013f28:	911d      	str	r1, [sp, #116]	; 0x74
 8013f2a:	1ad2      	subs	r2, r2, r3
 8013f2c:	e68b      	b.n	8013c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013f2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f30:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013f32:	2b00      	cmp	r3, #0
 8013f34:	f000 80d1 	beq.w	80140da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013f38:	ad19      	add	r5, sp, #100	; 0x64
 8013f3a:	ac39      	add	r4, sp, #228	; 0xe4
 8013f3c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f3e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013f42:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013f46:	930c      	str	r3, [sp, #48]	; 0x30
 8013f48:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f4a:	6963      	ldr	r3, [r4, #20]
 8013f4c:	440b      	add	r3, r1
 8013f4e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013f52:	4408      	add	r0, r1
 8013f54:	b200      	sxth	r0, r0
 8013f56:	4283      	cmp	r3, r0
 8013f58:	900d      	str	r0, [sp, #52]	; 0x34
 8013f5a:	f280 80c1 	bge.w	80140e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013f5e:	428b      	cmp	r3, r1
 8013f60:	da08      	bge.n	8013f74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f62:	2a00      	cmp	r2, #0
 8013f64:	dd06      	ble.n	8013f74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f66:	1acb      	subs	r3, r1, r3
 8013f68:	429a      	cmp	r2, r3
 8013f6a:	f2c0 80bb 	blt.w	80140e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013f6e:	2b00      	cmp	r3, #0
 8013f70:	f300 80b9 	bgt.w	80140e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013f74:	6967      	ldr	r7, [r4, #20]
 8013f76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f78:	443b      	add	r3, r7
 8013f7a:	461f      	mov	r7, r3
 8013f7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f7e:	1bdf      	subs	r7, r3, r7
 8013f80:	4297      	cmp	r7, r2
 8013f82:	bfa8      	it	ge
 8013f84:	4617      	movge	r7, r2
 8013f86:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013f8a:	2f00      	cmp	r7, #0
 8013f8c:	f340 813c 	ble.w	8014208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013f90:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f92:	6829      	ldr	r1, [r5, #0]
 8013f94:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f98:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013f9c:	6820      	ldr	r0, [r4, #0]
 8013f9e:	4411      	add	r1, r2
 8013fa0:	4299      	cmp	r1, r3
 8013fa2:	dd1a      	ble.n	8013fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013fa4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013fa8:	440b      	add	r3, r1
 8013faa:	4402      	add	r2, r0
 8013fac:	b21b      	sxth	r3, r3
 8013fae:	429a      	cmp	r2, r3
 8013fb0:	dc13      	bgt.n	8013fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fb4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013fb6:	681b      	ldr	r3, [r3, #0]
 8013fb8:	9206      	str	r2, [sp, #24]
 8013fba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013fbc:	9205      	str	r2, [sp, #20]
 8013fbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013fc0:	9500      	str	r5, [sp, #0]
 8013fc2:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013fc6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013fc8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013fca:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013fce:	a912      	add	r1, sp, #72	; 0x48
 8013fd0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013fd4:	aa49      	add	r2, sp, #292	; 0x124
 8013fd6:	4623      	mov	r3, r4
 8013fd8:	47c8      	blx	r9
 8013fda:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013fde:	441a      	add	r2, r3
 8013fe0:	6963      	ldr	r3, [r4, #20]
 8013fe2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013fe6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013fea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013fee:	68a1      	ldr	r1, [r4, #8]
 8013ff0:	ed94 6a08 	vldr	s12, [r4, #32]
 8013ff4:	6022      	str	r2, [r4, #0]
 8013ff6:	3301      	adds	r3, #1
 8013ff8:	6163      	str	r3, [r4, #20]
 8013ffa:	69a3      	ldr	r3, [r4, #24]
 8013ffc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014000:	3b01      	subs	r3, #1
 8014002:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014006:	61a3      	str	r3, [r4, #24]
 8014008:	6923      	ldr	r3, [r4, #16]
 801400a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801400e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014012:	edd4 6a07 	vldr	s13, [r4, #28]
 8014016:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801401a:	440b      	add	r3, r1
 801401c:	68e1      	ldr	r1, [r4, #12]
 801401e:	6123      	str	r3, [r4, #16]
 8014020:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014024:	428b      	cmp	r3, r1
 8014026:	edc4 6a07 	vstr	s13, [r4, #28]
 801402a:	db15      	blt.n	8014058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801402c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014030:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014034:	3201      	adds	r2, #1
 8014036:	edc4 6a07 	vstr	s13, [r4, #28]
 801403a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801403e:	6022      	str	r2, [r4, #0]
 8014040:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014044:	1a5b      	subs	r3, r3, r1
 8014046:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801404a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801404e:	6123      	str	r3, [r4, #16]
 8014050:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014054:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014058:	e9d5 2300 	ldrd	r2, r3, [r5]
 801405c:	441a      	add	r2, r3
 801405e:	696b      	ldr	r3, [r5, #20]
 8014060:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014064:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014068:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801406c:	68a9      	ldr	r1, [r5, #8]
 801406e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014072:	602a      	str	r2, [r5, #0]
 8014074:	3301      	adds	r3, #1
 8014076:	616b      	str	r3, [r5, #20]
 8014078:	69ab      	ldr	r3, [r5, #24]
 801407a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801407e:	3b01      	subs	r3, #1
 8014080:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014084:	61ab      	str	r3, [r5, #24]
 8014086:	692b      	ldr	r3, [r5, #16]
 8014088:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801408c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014090:	edd5 6a07 	vldr	s13, [r5, #28]
 8014094:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014098:	440b      	add	r3, r1
 801409a:	68e9      	ldr	r1, [r5, #12]
 801409c:	612b      	str	r3, [r5, #16]
 801409e:	ee76 6a86 	vadd.f32	s13, s13, s12
 80140a2:	428b      	cmp	r3, r1
 80140a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80140a8:	db15      	blt.n	80140d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80140aa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80140ae:	ee76 6a26 	vadd.f32	s13, s12, s13
 80140b2:	3201      	adds	r2, #1
 80140b4:	edc5 6a07 	vstr	s13, [r5, #28]
 80140b8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80140bc:	602a      	str	r2, [r5, #0]
 80140be:	ee36 7a87 	vadd.f32	s14, s13, s14
 80140c2:	1a5b      	subs	r3, r3, r1
 80140c4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80140c8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80140cc:	612b      	str	r3, [r5, #16]
 80140ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80140d2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80140d6:	3f01      	subs	r7, #1
 80140d8:	e757      	b.n	8013f8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80140da:	ad39      	add	r5, sp, #228	; 0xe4
 80140dc:	ac19      	add	r4, sp, #100	; 0x64
 80140de:	e72d      	b.n	8013f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80140e0:	4613      	mov	r3, r2
 80140e2:	e744      	b.n	8013f6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80140e4:	4613      	mov	r3, r2
 80140e6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80140ea:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80140ec:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80140f0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80140f4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80140f8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80140fc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014100:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014104:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014108:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801410a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801410e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014112:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014116:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801411a:	960e      	str	r6, [sp, #56]	; 0x38
 801411c:	469e      	mov	lr, r3
 801411e:	461f      	mov	r7, r3
 8014120:	f04f 0900 	mov.w	r9, #0
 8014124:	2f00      	cmp	r7, #0
 8014126:	d146      	bne.n	80141b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014128:	449c      	add	ip, r3
 801412a:	1ad7      	subs	r7, r2, r3
 801412c:	f1b9 0f00 	cmp.w	r9, #0
 8014130:	d009      	beq.n	8014146 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014132:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014136:	9039      	str	r0, [sp, #228]	; 0xe4
 8014138:	913d      	str	r1, [sp, #244]	; 0xf4
 801413a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801413e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014142:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014146:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014148:	910e      	str	r1, [sp, #56]	; 0x38
 801414a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801414e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014152:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014156:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801415a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801415e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014162:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014166:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801416a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801416e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014172:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014176:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801417a:	f04f 0800 	mov.w	r8, #0
 801417e:	f1be 0f00 	cmp.w	lr, #0
 8014182:	d030      	beq.n	80141e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014184:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014186:	4431      	add	r1, r6
 8014188:	4549      	cmp	r1, r9
 801418a:	4450      	add	r0, sl
 801418c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014190:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014194:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014198:	db08      	blt.n	80141ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801419a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801419e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80141a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80141a6:	3001      	adds	r0, #1
 80141a8:	eba1 0109 	sub.w	r1, r1, r9
 80141ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80141b0:	f04f 0801 	mov.w	r8, #1
 80141b4:	e7e3      	b.n	801417e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80141b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80141b8:	4431      	add	r1, r6
 80141ba:	4541      	cmp	r1, r8
 80141bc:	4450      	add	r0, sl
 80141be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80141c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80141c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80141ca:	db08      	blt.n	80141de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80141cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80141d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80141d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80141d8:	3001      	adds	r0, #1
 80141da:	eba1 0108 	sub.w	r1, r1, r8
 80141de:	3f01      	subs	r7, #1
 80141e0:	f04f 0901 	mov.w	r9, #1
 80141e4:	e79e      	b.n	8014124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80141e6:	449c      	add	ip, r3
 80141e8:	1aff      	subs	r7, r7, r3
 80141ea:	f1b8 0f00 	cmp.w	r8, #0
 80141ee:	d009      	beq.n	8014204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80141f0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80141f4:	9019      	str	r0, [sp, #100]	; 0x64
 80141f6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80141fa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80141fe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014202:	911d      	str	r1, [sp, #116]	; 0x74
 8014204:	1ad2      	subs	r2, r2, r3
 8014206:	e6b5      	b.n	8013f74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014208:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801420a:	681b      	ldr	r3, [r3, #0]
 801420c:	b923      	cbnz	r3, 8014218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801420e:	4b04      	ldr	r3, [pc, #16]	; (8014220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014210:	6818      	ldr	r0, [r3, #0]
 8014212:	6803      	ldr	r3, [r0, #0]
 8014214:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014216:	4798      	blx	r3
 8014218:	b05b      	add	sp, #364	; 0x16c
 801421a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801421e:	bf00      	nop
 8014220:	20002c8c 	.word	0x20002c8c

08014224 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8014224:	b570      	push	{r4, r5, r6, lr}
 8014226:	4604      	mov	r4, r0
 8014228:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801422c:	9804      	ldr	r0, [sp, #16]
 801422e:	6061      	str	r1, [r4, #4]
 8014230:	2500      	movs	r5, #0
 8014232:	8025      	strh	r5, [r4, #0]
 8014234:	7223      	strb	r3, [r4, #8]
 8014236:	7266      	strb	r6, [r4, #9]
 8014238:	60e0      	str	r0, [r4, #12]
 801423a:	8222      	strh	r2, [r4, #16]
 801423c:	8265      	strh	r5, [r4, #18]
 801423e:	82a5      	strh	r5, [r4, #20]
 8014240:	82e5      	strh	r5, [r4, #22]
 8014242:	8325      	strh	r5, [r4, #24]
 8014244:	8365      	strh	r5, [r4, #26]
 8014246:	83a5      	strh	r5, [r4, #28]
 8014248:	77a5      	strb	r5, [r4, #30]
 801424a:	b32e      	cbz	r6, 8014298 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801424c:	6803      	ldr	r3, [r0, #0]
 801424e:	695b      	ldr	r3, [r3, #20]
 8014250:	4798      	blx	r3
 8014252:	4606      	mov	r6, r0
 8014254:	b300      	cbz	r0, 8014298 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8014256:	68e0      	ldr	r0, [r4, #12]
 8014258:	6803      	ldr	r3, [r0, #0]
 801425a:	4631      	mov	r1, r6
 801425c:	68db      	ldr	r3, [r3, #12]
 801425e:	4798      	blx	r3
 8014260:	4605      	mov	r5, r0
 8014262:	b1c8      	cbz	r0, 8014298 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8014264:	7b43      	ldrb	r3, [r0, #13]
 8014266:	7a82      	ldrb	r2, [r0, #10]
 8014268:	005b      	lsls	r3, r3, #1
 801426a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801426e:	4313      	orrs	r3, r2
 8014270:	83a3      	strh	r3, [r4, #28]
 8014272:	7a63      	ldrb	r3, [r4, #9]
 8014274:	2b04      	cmp	r3, #4
 8014276:	d10f      	bne.n	8014298 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8014278:	68e0      	ldr	r0, [r4, #12]
 801427a:	6803      	ldr	r3, [r0, #0]
 801427c:	462a      	mov	r2, r5
 801427e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014280:	4631      	mov	r1, r6
 8014282:	4798      	blx	r3
 8014284:	7b6b      	ldrb	r3, [r5, #13]
 8014286:	005b      	lsls	r3, r3, #1
 8014288:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801428c:	7aab      	ldrb	r3, [r5, #10]
 801428e:	4313      	orrs	r3, r2
 8014290:	4418      	add	r0, r3
 8014292:	8ba3      	ldrh	r3, [r4, #28]
 8014294:	4418      	add	r0, r3
 8014296:	83a0      	strh	r0, [r4, #28]
 8014298:	4620      	mov	r0, r4
 801429a:	bd70      	pop	{r4, r5, r6, pc}

0801429c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801429c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142a0:	2400      	movs	r4, #0
 80142a2:	b085      	sub	sp, #20
 80142a4:	4681      	mov	r9, r0
 80142a6:	4688      	mov	r8, r1
 80142a8:	4692      	mov	sl, r2
 80142aa:	469b      	mov	fp, r3
 80142ac:	4627      	mov	r7, r4
 80142ae:	4625      	mov	r5, r4
 80142b0:	4626      	mov	r6, r4
 80142b2:	4554      	cmp	r4, sl
 80142b4:	da2a      	bge.n	801430c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80142b6:	2300      	movs	r3, #0
 80142b8:	9303      	str	r3, [sp, #12]
 80142ba:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80142be:	429d      	cmp	r5, r3
 80142c0:	d004      	beq.n	80142cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80142c2:	f242 030b 	movw	r3, #8203	; 0x200b
 80142c6:	429d      	cmp	r5, r3
 80142c8:	bf18      	it	ne
 80142ca:	462f      	movne	r7, r5
 80142cc:	ab03      	add	r3, sp, #12
 80142ce:	4642      	mov	r2, r8
 80142d0:	4659      	mov	r1, fp
 80142d2:	4648      	mov	r0, r9
 80142d4:	f003 f830 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80142d8:	4605      	mov	r5, r0
 80142da:	b1b8      	cbz	r0, 801430c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80142dc:	280a      	cmp	r0, #10
 80142de:	d015      	beq.n	801430c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80142e0:	9a03      	ldr	r2, [sp, #12]
 80142e2:	b18a      	cbz	r2, 8014308 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80142e4:	7b50      	ldrb	r0, [r2, #13]
 80142e6:	7a93      	ldrb	r3, [r2, #10]
 80142e8:	8895      	ldrh	r5, [r2, #4]
 80142ea:	0040      	lsls	r0, r0, #1
 80142ec:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80142f0:	4303      	orrs	r3, r0
 80142f2:	9301      	str	r3, [sp, #4]
 80142f4:	f8d8 3000 	ldr.w	r3, [r8]
 80142f8:	4639      	mov	r1, r7
 80142fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142fc:	4640      	mov	r0, r8
 80142fe:	4798      	blx	r3
 8014300:	9b01      	ldr	r3, [sp, #4]
 8014302:	4418      	add	r0, r3
 8014304:	4406      	add	r6, r0
 8014306:	b2b6      	uxth	r6, r6
 8014308:	3401      	adds	r4, #1
 801430a:	e7d2      	b.n	80142b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801430c:	4630      	mov	r0, r6
 801430e:	b005      	add	sp, #20
 8014310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014314:	2a02      	cmp	r2, #2
 8014316:	b530      	push	{r4, r5, lr}
 8014318:	d011      	beq.n	801433e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801431a:	2a03      	cmp	r2, #3
 801431c:	d01c      	beq.n	8014358 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801431e:	2a01      	cmp	r2, #1
 8014320:	d10c      	bne.n	801433c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014322:	888b      	ldrh	r3, [r1, #4]
 8014324:	8801      	ldrh	r1, [r0, #0]
 8014326:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801432a:	8844      	ldrh	r4, [r0, #2]
 801432c:	8004      	strh	r4, [r0, #0]
 801432e:	1a5b      	subs	r3, r3, r1
 8014330:	1a9b      	subs	r3, r3, r2
 8014332:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014336:	8043      	strh	r3, [r0, #2]
 8014338:	8081      	strh	r1, [r0, #4]
 801433a:	80c2      	strh	r2, [r0, #6]
 801433c:	bd30      	pop	{r4, r5, pc}
 801433e:	88cb      	ldrh	r3, [r1, #6]
 8014340:	8842      	ldrh	r2, [r0, #2]
 8014342:	1a9b      	subs	r3, r3, r2
 8014344:	88c2      	ldrh	r2, [r0, #6]
 8014346:	1a9b      	subs	r3, r3, r2
 8014348:	888a      	ldrh	r2, [r1, #4]
 801434a:	8801      	ldrh	r1, [r0, #0]
 801434c:	8043      	strh	r3, [r0, #2]
 801434e:	1a52      	subs	r2, r2, r1
 8014350:	8881      	ldrh	r1, [r0, #4]
 8014352:	1a52      	subs	r2, r2, r1
 8014354:	8002      	strh	r2, [r0, #0]
 8014356:	e7f1      	b.n	801433c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014358:	88cb      	ldrh	r3, [r1, #6]
 801435a:	8841      	ldrh	r1, [r0, #2]
 801435c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014360:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014364:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014368:	8045      	strh	r5, [r0, #2]
 801436a:	1a5b      	subs	r3, r3, r1
 801436c:	1a9b      	subs	r3, r3, r2
 801436e:	8003      	strh	r3, [r0, #0]
 8014370:	8082      	strh	r2, [r0, #4]
 8014372:	80c4      	strh	r4, [r0, #6]
 8014374:	e7e2      	b.n	801433c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014376 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014376:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801437a:	b09f      	sub	sp, #124	; 0x7c
 801437c:	9116      	str	r1, [sp, #88]	; 0x58
 801437e:	9317      	str	r3, [sp, #92]	; 0x5c
 8014380:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014382:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014384:	8809      	ldrh	r1, [r1, #0]
 8014386:	889b      	ldrh	r3, [r3, #4]
 8014388:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801438c:	9212      	str	r2, [sp, #72]	; 0x48
 801438e:	440b      	add	r3, r1
 8014390:	b21b      	sxth	r3, r3
 8014392:	9310      	str	r3, [sp, #64]	; 0x40
 8014394:	f8d8 3000 	ldr.w	r3, [r8]
 8014398:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801439c:	7a59      	ldrb	r1, [r3, #9]
 801439e:	7a1b      	ldrb	r3, [r3, #8]
 80143a0:	9011      	str	r0, [sp, #68]	; 0x44
 80143a2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80143a6:	9114      	str	r1, [sp, #80]	; 0x50
 80143a8:	9315      	str	r3, [sp, #84]	; 0x54
 80143aa:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80143ae:	2a00      	cmp	r2, #0
 80143b0:	d06a      	beq.n	8014488 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80143b2:	f898 3010 	ldrb.w	r3, [r8, #16]
 80143b6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80143b8:	2b04      	cmp	r3, #4
 80143ba:	bf14      	ite	ne
 80143bc:	2301      	movne	r3, #1
 80143be:	2302      	moveq	r3, #2
 80143c0:	4413      	add	r3, r2
 80143c2:	f04f 0900 	mov.w	r9, #0
 80143c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80143c8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80143cc:	464c      	mov	r4, r9
 80143ce:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80143d2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80143d6:	4293      	cmp	r3, r2
 80143d8:	f280 808f 	bge.w	80144fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80143dc:	2300      	movs	r3, #0
 80143de:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80143e2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80143e6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80143ea:	429c      	cmp	r4, r3
 80143ec:	d006      	beq.n	80143fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80143ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80143f0:	f242 020b 	movw	r2, #8203	; 0x200b
 80143f4:	4294      	cmp	r4, r2
 80143f6:	bf18      	it	ne
 80143f8:	4623      	movne	r3, r4
 80143fa:	930d      	str	r3, [sp, #52]	; 0x34
 80143fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80143fe:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014400:	f8d8 2000 	ldr.w	r2, [r8]
 8014404:	428b      	cmp	r3, r1
 8014406:	db41      	blt.n	801448c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014408:	6813      	ldr	r3, [r2, #0]
 801440a:	4610      	mov	r0, r2
 801440c:	695b      	ldr	r3, [r3, #20]
 801440e:	4798      	blx	r3
 8014410:	4604      	mov	r4, r0
 8014412:	f8d8 0000 	ldr.w	r0, [r8]
 8014416:	6803      	ldr	r3, [r0, #0]
 8014418:	aa1d      	add	r2, sp, #116	; 0x74
 801441a:	689e      	ldr	r6, [r3, #8]
 801441c:	4621      	mov	r1, r4
 801441e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014422:	47b0      	blx	r6
 8014424:	901c      	str	r0, [sp, #112]	; 0x70
 8014426:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801442a:	429c      	cmp	r4, r3
 801442c:	f000 80e9 	beq.w	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8014430:	f242 030b 	movw	r3, #8203	; 0x200b
 8014434:	429c      	cmp	r4, r3
 8014436:	f000 80e4 	beq.w	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801443a:	2c00      	cmp	r4, #0
 801443c:	f000 80f6 	beq.w	801462c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8014440:	2c0a      	cmp	r4, #10
 8014442:	d060      	beq.n	8014506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014444:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014446:	b36a      	cbz	r2, 80144a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014448:	8894      	ldrh	r4, [r2, #4]
 801444a:	f1bb 0f00 	cmp.w	fp, #0
 801444e:	d03b      	beq.n	80144c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014450:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014454:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014458:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801445c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014460:	f1bb 0f01 	cmp.w	fp, #1
 8014464:	ea49 0903 	orr.w	r9, r9, r3
 8014468:	d134      	bne.n	80144d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801446a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801446c:	eba5 0509 	sub.w	r5, r5, r9
 8014470:	2b00      	cmp	r3, #0
 8014472:	d14f      	bne.n	8014514 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014474:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014476:	eb09 0305 	add.w	r3, r9, r5
 801447a:	4413      	add	r3, r2
 801447c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801447e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014482:	4293      	cmp	r3, r2
 8014484:	da51      	bge.n	801452a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014486:	e038      	b.n	80144fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014488:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801448a:	e79a      	b.n	80143c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801448c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014490:	9301      	str	r3, [sp, #4]
 8014492:	ab1d      	add	r3, sp, #116	; 0x74
 8014494:	9300      	str	r3, [sp, #0]
 8014496:	4659      	mov	r1, fp
 8014498:	ab1c      	add	r3, sp, #112	; 0x70
 801449a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801449c:	f002 ff95 	bl	80173ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80144a0:	4604      	mov	r4, r0
 80144a2:	e7c0      	b.n	8014426 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80144a4:	f8d8 0000 	ldr.w	r0, [r8]
 80144a8:	6803      	ldr	r3, [r0, #0]
 80144aa:	691b      	ldr	r3, [r3, #16]
 80144ac:	4798      	blx	r3
 80144ae:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144b2:	4298      	cmp	r0, r3
 80144b4:	f000 80a5 	beq.w	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80144b8:	f242 030b 	movw	r3, #8203	; 0x200b
 80144bc:	4298      	cmp	r0, r3
 80144be:	f000 80a0 	beq.w	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80144c2:	f1bb 0f00 	cmp.w	fp, #0
 80144c6:	d100      	bne.n	80144ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80144c8:	444d      	add	r5, r9
 80144ca:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80144cc:	2a00      	cmp	r2, #0
 80144ce:	d1bf      	bne.n	8014450 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80144d0:	4691      	mov	r9, r2
 80144d2:	e096      	b.n	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80144d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80144d6:	2b00      	cmp	r3, #0
 80144d8:	f000 80aa 	beq.w	8014630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80144dc:	f1bb 0f00 	cmp.w	fp, #0
 80144e0:	d118      	bne.n	8014514 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80144e2:	f8d8 0000 	ldr.w	r0, [r8]
 80144e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80144e8:	6803      	ldr	r3, [r0, #0]
 80144ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80144ec:	4798      	blx	r3
 80144ee:	4405      	add	r5, r0
 80144f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80144f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144f4:	1aeb      	subs	r3, r5, r3
 80144f6:	4293      	cmp	r3, r2
 80144f8:	dd17      	ble.n	801452a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80144fa:	2c00      	cmp	r4, #0
 80144fc:	f000 8096 	beq.w	801462c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8014500:	2c0a      	cmp	r4, #10
 8014502:	f040 8084 	bne.w	801460e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014506:	240a      	movs	r4, #10
 8014508:	fab4 f084 	clz	r0, r4
 801450c:	0940      	lsrs	r0, r0, #5
 801450e:	b01f      	add	sp, #124	; 0x7c
 8014510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014514:	f8d8 0000 	ldr.w	r0, [r8]
 8014518:	990d      	ldr	r1, [sp, #52]	; 0x34
 801451a:	6803      	ldr	r3, [r0, #0]
 801451c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801451e:	4798      	blx	r3
 8014520:	f1bb 0f01 	cmp.w	fp, #1
 8014524:	eba5 0500 	sub.w	r5, r5, r0
 8014528:	d0a4      	beq.n	8014474 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801452a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801452c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801452e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014532:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014536:	7b43      	ldrb	r3, [r0, #13]
 8014538:	015b      	lsls	r3, r3, #5
 801453a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801453e:	7983      	ldrb	r3, [r0, #6]
 8014540:	4429      	add	r1, r5
 8014542:	4313      	orrs	r3, r2
 8014544:	440b      	add	r3, r1
 8014546:	42b3      	cmp	r3, r6
 8014548:	db5b      	blt.n	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801454a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801454c:	4299      	cmp	r1, r3
 801454e:	da58      	bge.n	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8014550:	f8d8 0000 	ldr.w	r0, [r8]
 8014554:	6803      	ldr	r3, [r0, #0]
 8014556:	42ae      	cmp	r6, r5
 8014558:	bfc8      	it	gt
 801455a:	1b76      	subgt	r6, r6, r5
 801455c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801455e:	bfcc      	ite	gt
 8014560:	b2b6      	uxthgt	r6, r6
 8014562:	2600      	movle	r6, #0
 8014564:	4798      	blx	r3
 8014566:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014568:	7b5a      	ldrb	r2, [r3, #13]
 801456a:	00d1      	lsls	r1, r2, #3
 801456c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8014570:	7a19      	ldrb	r1, [r3, #8]
 8014572:	4339      	orrs	r1, r7
 8014574:	0657      	lsls	r7, r2, #25
 8014576:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8014578:	bf44      	itt	mi
 801457a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801457e:	b209      	sxthmi	r1, r1
 8014580:	19c7      	adds	r7, r0, r7
 8014582:	1a7f      	subs	r7, r7, r1
 8014584:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014586:	b2bf      	uxth	r7, r7
 8014588:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801458c:	fa0f fa87 	sxth.w	sl, r7
 8014590:	4551      	cmp	r1, sl
 8014592:	dd3a      	ble.n	801460a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8014594:	0112      	lsls	r2, r2, #4
 8014596:	79d8      	ldrb	r0, [r3, #7]
 8014598:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801459c:	4302      	orrs	r2, r0
 801459e:	4492      	add	sl, r2
 80145a0:	4551      	cmp	r1, sl
 80145a2:	dc2e      	bgt.n	8014602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80145a4:	1bcf      	subs	r7, r1, r7
 80145a6:	b2bf      	uxth	r7, r7
 80145a8:	468a      	mov	sl, r1
 80145aa:	9319      	str	r3, [sp, #100]	; 0x64
 80145ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80145ae:	f8d8 0000 	ldr.w	r0, [r8]
 80145b2:	681a      	ldr	r2, [r3, #0]
 80145b4:	6801      	ldr	r1, [r0, #0]
 80145b6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80145b8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80145ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80145bc:	9218      	str	r2, [sp, #96]	; 0x60
 80145be:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80145c0:	4788      	blx	r1
 80145c2:	f898 1006 	ldrb.w	r1, [r8, #6]
 80145c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80145c8:	f898 100e 	ldrb.w	r1, [r8, #14]
 80145cc:	910a      	str	r1, [sp, #40]	; 0x28
 80145ce:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80145d2:	9109      	str	r1, [sp, #36]	; 0x24
 80145d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80145d6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80145da:	9305      	str	r3, [sp, #20]
 80145dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80145de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80145e0:	9206      	str	r2, [sp, #24]
 80145e2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80145e6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80145ea:	e9cd a601 	strd	sl, r6, [sp, #4]
 80145ee:	442e      	add	r6, r5
 80145f0:	b236      	sxth	r6, r6
 80145f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80145f4:	9600      	str	r6, [sp, #0]
 80145f6:	681a      	ldr	r2, [r3, #0]
 80145f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80145fa:	685b      	ldr	r3, [r3, #4]
 80145fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80145fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014600:	47b0      	blx	r6
 8014602:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014604:	3301      	adds	r3, #1
 8014606:	930e      	str	r3, [sp, #56]	; 0x38
 8014608:	e6e3      	b.n	80143d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801460a:	2700      	movs	r7, #0
 801460c:	e7cd      	b.n	80145aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801460e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014610:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014612:	3501      	adds	r5, #1
 8014614:	429d      	cmp	r5, r3
 8014616:	f6bf af77 	bge.w	8014508 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801461a:	4659      	mov	r1, fp
 801461c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801461e:	f7f2 f911 	bl	8006844 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014622:	4604      	mov	r4, r0
 8014624:	b110      	cbz	r0, 801462c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8014626:	280a      	cmp	r0, #10
 8014628:	d1f2      	bne.n	8014610 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801462a:	e76c      	b.n	8014506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801462c:	2400      	movs	r4, #0
 801462e:	e76b      	b.n	8014508 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014630:	f1bb 0f00 	cmp.w	fp, #0
 8014634:	f43f af5c 	beq.w	80144f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014638:	e777      	b.n	801452a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801463a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801463a:	b530      	push	{r4, r5, lr}
 801463c:	8a44      	ldrh	r4, [r0, #18]
 801463e:	8ac5      	ldrh	r5, [r0, #22]
 8014640:	82c3      	strh	r3, [r0, #22]
 8014642:	442c      	add	r4, r5
 8014644:	1ae4      	subs	r4, r4, r3
 8014646:	8244      	strh	r4, [r0, #18]
 8014648:	8b03      	ldrh	r3, [r0, #24]
 801464a:	8a84      	ldrh	r4, [r0, #20]
 801464c:	4422      	add	r2, r4
 801464e:	440c      	add	r4, r1
 8014650:	1a59      	subs	r1, r3, r1
 8014652:	8342      	strh	r2, [r0, #26]
 8014654:	8284      	strh	r4, [r0, #20]
 8014656:	8301      	strh	r1, [r0, #24]
 8014658:	bd30      	pop	{r4, r5, pc}

0801465a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801465a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801465e:	7a43      	ldrb	r3, [r0, #9]
 8014660:	1eda      	subs	r2, r3, #3
 8014662:	b087      	sub	sp, #28
 8014664:	4604      	mov	r4, r0
 8014666:	b2d2      	uxtb	r2, r2
 8014668:	460f      	mov	r7, r1
 801466a:	2900      	cmp	r1, #0
 801466c:	d036      	beq.n	80146dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801466e:	2a01      	cmp	r2, #1
 8014670:	d932      	bls.n	80146d8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8014672:	1e58      	subs	r0, r3, #1
 8014674:	f1d0 0b00 	rsbs	fp, r0, #0
 8014678:	eb4b 0b00 	adc.w	fp, fp, r0
 801467c:	1e99      	subs	r1, r3, #2
 801467e:	424b      	negs	r3, r1
 8014680:	414b      	adcs	r3, r1
 8014682:	9303      	str	r3, [sp, #12]
 8014684:	2300      	movs	r3, #0
 8014686:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801468a:	2500      	movs	r5, #0
 801468c:	8265      	strh	r5, [r4, #18]
 801468e:	82a5      	strh	r5, [r4, #20]
 8014690:	46a9      	mov	r9, r5
 8014692:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8014696:	2300      	movs	r3, #0
 8014698:	9305      	str	r3, [sp, #20]
 801469a:	8823      	ldrh	r3, [r4, #0]
 801469c:	2b20      	cmp	r3, #32
 801469e:	d02b      	beq.n	80146f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80146a0:	eba3 020a 	sub.w	r2, r3, sl
 80146a4:	4256      	negs	r6, r2
 80146a6:	4156      	adcs	r6, r2
 80146a8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80146ac:	4293      	cmp	r3, r2
 80146ae:	d004      	beq.n	80146ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80146b0:	4553      	cmp	r3, sl
 80146b2:	bf16      	itet	ne
 80146b4:	4699      	movne	r9, r3
 80146b6:	2601      	moveq	r6, #1
 80146b8:	2600      	movne	r6, #0
 80146ba:	ab05      	add	r3, sp, #20
 80146bc:	68e2      	ldr	r2, [r4, #12]
 80146be:	7a21      	ldrb	r1, [r4, #8]
 80146c0:	6860      	ldr	r0, [r4, #4]
 80146c2:	f002 fe39 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80146c6:	8020      	strh	r0, [r4, #0]
 80146c8:	b9c8      	cbnz	r0, 80146fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80146ca:	8b22      	ldrh	r2, [r4, #24]
 80146cc:	2300      	movs	r3, #0
 80146ce:	4611      	mov	r1, r2
 80146d0:	4620      	mov	r0, r4
 80146d2:	f7ff ffb2 	bl	801463a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80146d6:	e066      	b.n	80147a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80146d8:	468b      	mov	fp, r1
 80146da:	e7cf      	b.n	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80146dc:	3b01      	subs	r3, #1
 80146de:	2a01      	cmp	r2, #1
 80146e0:	bf8c      	ite	hi
 80146e2:	2200      	movhi	r2, #0
 80146e4:	2201      	movls	r2, #1
 80146e6:	2b01      	cmp	r3, #1
 80146e8:	bf8c      	ite	hi
 80146ea:	2300      	movhi	r3, #0
 80146ec:	2301      	movls	r3, #1
 80146ee:	9202      	str	r2, [sp, #8]
 80146f0:	9301      	str	r3, [sp, #4]
 80146f2:	9103      	str	r1, [sp, #12]
 80146f4:	468b      	mov	fp, r1
 80146f6:	e7c8      	b.n	801468a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 80146f8:	4699      	mov	r9, r3
 80146fa:	2601      	movs	r6, #1
 80146fc:	e7dd      	b.n	80146ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80146fe:	8ae3      	ldrh	r3, [r4, #22]
 8014700:	280a      	cmp	r0, #10
 8014702:	f103 0301 	add.w	r3, r3, #1
 8014706:	82e3      	strh	r3, [r4, #22]
 8014708:	d0df      	beq.n	80146ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801470a:	9a05      	ldr	r2, [sp, #20]
 801470c:	bb42      	cbnz	r2, 8014760 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 801470e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014712:	4298      	cmp	r0, r3
 8014714:	d001      	beq.n	801471a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8014716:	4550      	cmp	r0, sl
 8014718:	d1bd      	bne.n	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801471a:	8823      	ldrh	r3, [r4, #0]
 801471c:	8b21      	ldrh	r1, [r4, #24]
 801471e:	2b20      	cmp	r3, #32
 8014720:	d001      	beq.n	8014726 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8014722:	4553      	cmp	r3, sl
 8014724:	d131      	bne.n	801478a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8014726:	2e00      	cmp	r6, #0
 8014728:	bf0a      	itet	eq
 801472a:	460d      	moveq	r5, r1
 801472c:	4630      	movne	r0, r6
 801472e:	2001      	moveq	r0, #1
 8014730:	440a      	add	r2, r1
 8014732:	8aa3      	ldrh	r3, [r4, #20]
 8014734:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014738:	b292      	uxth	r2, r2
 801473a:	8322      	strh	r2, [r4, #24]
 801473c:	4413      	add	r3, r2
 801473e:	2f00      	cmp	r7, #0
 8014740:	d03a      	beq.n	80147b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8014742:	f1bb 0f00 	cmp.w	fp, #0
 8014746:	d102      	bne.n	801474e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8014748:	9903      	ldr	r1, [sp, #12]
 801474a:	b301      	cbz	r1, 801478e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801474c:	b1f8      	cbz	r0, 801478e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801474e:	8ba1      	ldrh	r1, [r4, #28]
 8014750:	4419      	add	r1, r3
 8014752:	458c      	cmp	ip, r1
 8014754:	da2a      	bge.n	80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8014756:	8a61      	ldrh	r1, [r4, #18]
 8014758:	b341      	cbz	r1, 80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801475a:	4563      	cmp	r3, ip
 801475c:	dd9b      	ble.n	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801475e:	e01c      	b.n	801479a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8014760:	8893      	ldrh	r3, [r2, #4]
 8014762:	8023      	strh	r3, [r4, #0]
 8014764:	f892 800d 	ldrb.w	r8, [r2, #13]
 8014768:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801476c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8014770:	f892 800a 	ldrb.w	r8, [r2, #10]
 8014774:	ea48 0800 	orr.w	r8, r8, r0
 8014778:	68e0      	ldr	r0, [r4, #12]
 801477a:	6803      	ldr	r3, [r0, #0]
 801477c:	4649      	mov	r1, r9
 801477e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014780:	4798      	blx	r3
 8014782:	eb08 0200 	add.w	r2, r8, r0
 8014786:	b292      	uxth	r2, r2
 8014788:	e7c7      	b.n	801471a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801478a:	2000      	movs	r0, #0
 801478c:	e7d0      	b.n	8014730 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801478e:	4563      	cmp	r3, ip
 8014790:	dd81      	ble.n	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8014792:	8a63      	ldrh	r3, [r4, #18]
 8014794:	2b00      	cmp	r3, #0
 8014796:	f43f af7e 	beq.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801479a:	2301      	movs	r3, #1
 801479c:	77a3      	strb	r3, [r4, #30]
 801479e:	8ba2      	ldrh	r2, [r4, #28]
 80147a0:	8b63      	ldrh	r3, [r4, #26]
 80147a2:	4413      	add	r3, r2
 80147a4:	8363      	strh	r3, [r4, #26]
 80147a6:	b007      	add	sp, #28
 80147a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147ac:	2300      	movs	r3, #0
 80147ae:	4611      	mov	r1, r2
 80147b0:	4620      	mov	r0, r4
 80147b2:	f7ff ff42 	bl	801463a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80147b6:	e76e      	b.n	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147b8:	4563      	cmp	r3, ip
 80147ba:	dd14      	ble.n	80147e6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80147bc:	9b02      	ldr	r3, [sp, #8]
 80147be:	b113      	cbz	r3, 80147c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80147c0:	2301      	movs	r3, #1
 80147c2:	460a      	mov	r2, r1
 80147c4:	e783      	b.n	80146ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80147c6:	9b01      	ldr	r3, [sp, #4]
 80147c8:	2b00      	cmp	r3, #0
 80147ca:	f43f af64 	beq.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147ce:	2800      	cmp	r0, #0
 80147d0:	f47f af61 	bne.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147d4:	b116      	cbz	r6, 80147dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80147d6:	2301      	movs	r3, #1
 80147d8:	462a      	mov	r2, r5
 80147da:	e779      	b.n	80146d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80147dc:	8a63      	ldrh	r3, [r4, #18]
 80147de:	2b00      	cmp	r3, #0
 80147e0:	f43f af59 	beq.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147e4:	e7df      	b.n	80147a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80147e6:	2800      	cmp	r0, #0
 80147e8:	f47f af55 	bne.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147ec:	2e00      	cmp	r6, #0
 80147ee:	f43f af52 	beq.w	8014696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80147f2:	2301      	movs	r3, #1
 80147f4:	462a      	mov	r2, r5
 80147f6:	e7db      	b.n	80147b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

080147f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80147f8:	b530      	push	{r4, r5, lr}
 80147fa:	4605      	mov	r5, r0
 80147fc:	b08b      	sub	sp, #44	; 0x2c
 80147fe:	b191      	cbz	r1, 8014826 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8014800:	e9cd 3100 	strd	r3, r1, [sp]
 8014804:	4613      	mov	r3, r2
 8014806:	4601      	mov	r1, r0
 8014808:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 801480c:	a802      	add	r0, sp, #8
 801480e:	f7ff fd09 	bl	8014224 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8014812:	2401      	movs	r4, #1
 8014814:	2100      	movs	r1, #0
 8014816:	a802      	add	r0, sp, #8
 8014818:	f7ff ff1f 	bl	801465a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801481c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014820:	b163      	cbz	r3, 801483c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014822:	3401      	adds	r4, #1
 8014824:	e7f6      	b.n	8014814 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8014826:	f002 fe55 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801482a:	2401      	movs	r4, #1
 801482c:	280a      	cmp	r0, #10
 801482e:	4628      	mov	r0, r5
 8014830:	bf08      	it	eq
 8014832:	3401      	addeq	r4, #1
 8014834:	f002 fe4e 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014838:	2800      	cmp	r0, #0
 801483a:	d1f7      	bne.n	801482c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801483c:	b2a0      	uxth	r0, r4
 801483e:	b00b      	add	sp, #44	; 0x2c
 8014840:	bd30      	pop	{r4, r5, pc}

08014842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014846:	b0e5      	sub	sp, #404	; 0x194
 8014848:	4689      	mov	r9, r1
 801484a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 801484e:	900a      	str	r0, [sp, #40]	; 0x28
 8014850:	461c      	mov	r4, r3
 8014852:	f1ba 0f00 	cmp.w	sl, #0
 8014856:	f000 80b4 	beq.w	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801485a:	681b      	ldr	r3, [r3, #0]
 801485c:	2b00      	cmp	r3, #0
 801485e:	f000 80b0 	beq.w	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8014862:	7ba3      	ldrb	r3, [r4, #14]
 8014864:	2b00      	cmp	r3, #0
 8014866:	f000 80ac 	beq.w	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801486a:	6810      	ldr	r0, [r2, #0]
 801486c:	6851      	ldr	r1, [r2, #4]
 801486e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8014872:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8014876:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801487a:	4643      	mov	r3, r8
 801487c:	c303      	stmia	r3!, {r0, r1}
 801487e:	2500      	movs	r5, #0
 8014880:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8014884:	79a2      	ldrb	r2, [r4, #6]
 8014886:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801488a:	a90f      	add	r1, sp, #60	; 0x3c
 801488c:	4640      	mov	r0, r8
 801488e:	950f      	str	r5, [sp, #60]	; 0x3c
 8014890:	f7ff fd40 	bl	8014314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014894:	a90f      	add	r1, sp, #60	; 0x3c
 8014896:	4608      	mov	r0, r1
 8014898:	79a2      	ldrb	r2, [r4, #6]
 801489a:	af19      	add	r7, sp, #100	; 0x64
 801489c:	f7ff fd3a 	bl	8014314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80148a0:	4638      	mov	r0, r7
 80148a2:	f002 f9eb 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 80148a6:	6820      	ldr	r0, [r4, #0]
 80148a8:	6803      	ldr	r3, [r0, #0]
 80148aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80148ac:	4798      	blx	r3
 80148ae:	4606      	mov	r6, r0
 80148b0:	6820      	ldr	r0, [r4, #0]
 80148b2:	6803      	ldr	r3, [r0, #0]
 80148b4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80148b6:	4798      	blx	r3
 80148b8:	4633      	mov	r3, r6
 80148ba:	9000      	str	r0, [sp, #0]
 80148bc:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80148be:	4651      	mov	r1, sl
 80148c0:	4638      	mov	r0, r7
 80148c2:	f002 fa36 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80148c6:	6820      	ldr	r0, [r4, #0]
 80148c8:	7923      	ldrb	r3, [r4, #4]
 80148ca:	9308      	str	r3, [sp, #32]
 80148cc:	6803      	ldr	r3, [r0, #0]
 80148ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80148d0:	4798      	blx	r3
 80148d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80148d6:	181e      	adds	r6, r3, r0
 80148d8:	42ae      	cmp	r6, r5
 80148da:	dd06      	ble.n	80148ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 80148dc:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 80148e0:	4282      	cmp	r2, r0
 80148e2:	bfa4      	itt	ge
 80148e4:	189d      	addge	r5, r3, r2
 80148e6:	fb95 f5f6 	sdivge	r5, r5, r6
 80148ea:	a832      	add	r0, sp, #200	; 0xc8
 80148ec:	f002 f9c6 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 80148f0:	7c23      	ldrb	r3, [r4, #16]
 80148f2:	b17b      	cbz	r3, 8014914 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 80148f4:	6820      	ldr	r0, [r4, #0]
 80148f6:	6803      	ldr	r3, [r0, #0]
 80148f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80148fa:	4798      	blx	r3
 80148fc:	4683      	mov	fp, r0
 80148fe:	6820      	ldr	r0, [r4, #0]
 8014900:	6803      	ldr	r3, [r0, #0]
 8014902:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014904:	4798      	blx	r3
 8014906:	465b      	mov	r3, fp
 8014908:	9000      	str	r0, [sp, #0]
 801490a:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 801490c:	4651      	mov	r1, sl
 801490e:	a832      	add	r0, sp, #200	; 0xc8
 8014910:	f002 fa0f 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014914:	7be1      	ldrb	r1, [r4, #15]
 8014916:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801491a:	7963      	ldrb	r3, [r4, #5]
 801491c:	1a52      	subs	r2, r2, r1
 801491e:	7c21      	ldrb	r1, [r4, #16]
 8014920:	9101      	str	r1, [sp, #4]
 8014922:	6821      	ldr	r1, [r4, #0]
 8014924:	9100      	str	r1, [sp, #0]
 8014926:	b292      	uxth	r2, r2
 8014928:	a932      	add	r1, sp, #200	; 0xc8
 801492a:	a811      	add	r0, sp, #68	; 0x44
 801492c:	f7ff fc7a 	bl	8014224 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8014930:	7c23      	ldrb	r3, [r4, #16]
 8014932:	b9bb      	cbnz	r3, 8014964 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8014934:	fa1f fa86 	uxth.w	sl, r6
 8014938:	2d00      	cmp	r5, #0
 801493a:	dd45      	ble.n	80149c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801493c:	4638      	mov	r0, r7
 801493e:	f002 fdc9 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014942:	2800      	cmp	r0, #0
 8014944:	d03d      	beq.n	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8014946:	280a      	cmp	r0, #10
 8014948:	d1f6      	bne.n	8014938 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801494a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801494e:	4453      	add	r3, sl
 8014950:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8014954:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8014958:	eba3 030a 	sub.w	r3, r3, sl
 801495c:	3d01      	subs	r5, #1
 801495e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8014962:	e7e9      	b.n	8014938 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8014964:	0073      	lsls	r3, r6, #1
 8014966:	9309      	str	r3, [sp, #36]	; 0x24
 8014968:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801496c:	fa1f fa86 	uxth.w	sl, r6
 8014970:	2d00      	cmp	r5, #0
 8014972:	dd29      	ble.n	80149c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8014974:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8014978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801497a:	428b      	cmp	r3, r1
 801497c:	bfd4      	ite	le
 801497e:	2100      	movle	r1, #0
 8014980:	2101      	movgt	r1, #1
 8014982:	a811      	add	r0, sp, #68	; 0x44
 8014984:	f7ff fe69 	bl	801465a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8014988:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801498c:	3b01      	subs	r3, #1
 801498e:	b29b      	uxth	r3, r3
 8014990:	455b      	cmp	r3, fp
 8014992:	930b      	str	r3, [sp, #44]	; 0x2c
 8014994:	d005      	beq.n	80149a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8014996:	7961      	ldrb	r1, [r4, #5]
 8014998:	4638      	mov	r0, r7
 801499a:	f7f1 ff53 	bl	8006844 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801499e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80149a0:	e7f4      	b.n	801498c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80149a2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80149a6:	4453      	add	r3, sl
 80149a8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80149ac:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80149b0:	eba3 030a 	sub.w	r3, r3, sl
 80149b4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80149b8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80149bc:	3d01      	subs	r5, #1
 80149be:	2b00      	cmp	r3, #0
 80149c0:	d1d6      	bne.n	8014970 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80149c2:	b065      	add	sp, #404	; 0x194
 80149c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149c8:	0075      	lsls	r5, r6, #1
 80149ca:	f04f 0a00 	mov.w	sl, #0
 80149ce:	7c23      	ldrb	r3, [r4, #16]
 80149d0:	2b00      	cmp	r3, #0
 80149d2:	d066      	beq.n	8014aa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80149d4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80149d8:	428d      	cmp	r5, r1
 80149da:	bfd4      	ite	le
 80149dc:	2100      	movle	r1, #0
 80149de:	2101      	movgt	r1, #1
 80149e0:	a811      	add	r0, sp, #68	; 0x44
 80149e2:	f7ff fe3a 	bl	801465a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80149e6:	9b08      	ldr	r3, [sp, #32]
 80149e8:	2b00      	cmp	r3, #0
 80149ea:	d055      	beq.n	8014a98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80149ec:	f894 b010 	ldrb.w	fp, [r4, #16]
 80149f0:	2264      	movs	r2, #100	; 0x64
 80149f2:	4639      	mov	r1, r7
 80149f4:	a84b      	add	r0, sp, #300	; 0x12c
 80149f6:	f010 fa9f 	bl	8024f38 <memcpy>
 80149fa:	f1bb 0f00 	cmp.w	fp, #0
 80149fe:	d058      	beq.n	8014ab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8014a00:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8014a04:	7922      	ldrb	r2, [r4, #4]
 8014a06:	2a01      	cmp	r2, #1
 8014a08:	d13c      	bne.n	8014a84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8014a0a:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8014a0e:	1ac0      	subs	r0, r0, r3
 8014a10:	2302      	movs	r3, #2
 8014a12:	fb90 f0f3 	sdiv	r0, r0, r3
 8014a16:	b200      	sxth	r0, r0
 8014a18:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8014a1c:	4418      	add	r0, r3
 8014a1e:	7c23      	ldrb	r3, [r4, #16]
 8014a20:	b200      	sxth	r0, r0
 8014a22:	2b00      	cmp	r3, #0
 8014a24:	d03a      	beq.n	8014a9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8014a26:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8014a2a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8014a2e:	9000      	str	r0, [sp, #0]
 8014a30:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014a34:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8014a38:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014a3a:	e9cd a703 	strd	sl, r7, [sp, #12]
 8014a3e:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8014a42:	464a      	mov	r2, r9
 8014a44:	2100      	movs	r1, #0
 8014a46:	f7ff fc96 	bl	8014376 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014a4a:	2800      	cmp	r0, #0
 8014a4c:	d1b9      	bne.n	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8014a4e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8014a52:	b2b2      	uxth	r2, r6
 8014a54:	4611      	mov	r1, r2
 8014a56:	4413      	add	r3, r2
 8014a58:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8014a5c:	1a52      	subs	r2, r2, r1
 8014a5e:	7c21      	ldrb	r1, [r4, #16]
 8014a60:	b21b      	sxth	r3, r3
 8014a62:	b212      	sxth	r2, r2
 8014a64:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8014a68:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8014a6c:	b109      	cbz	r1, 8014a72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8014a6e:	42b2      	cmp	r2, r6
 8014a70:	dba7      	blt.n	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8014a72:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8014a76:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8014a7a:	440a      	add	r2, r1
 8014a7c:	b212      	sxth	r2, r2
 8014a7e:	4293      	cmp	r3, r2
 8014a80:	dda5      	ble.n	80149ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8014a82:	e79e      	b.n	80149c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8014a84:	2a02      	cmp	r2, #2
 8014a86:	d105      	bne.n	8014a94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014a88:	7be2      	ldrb	r2, [r4, #15]
 8014a8a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8014a8e:	1a80      	subs	r0, r0, r2
 8014a90:	1ac0      	subs	r0, r0, r3
 8014a92:	e7c0      	b.n	8014a16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8014a94:	2000      	movs	r0, #0
 8014a96:	e7bf      	b.n	8014a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8014a98:	7be0      	ldrb	r0, [r4, #15]
 8014a9a:	e7bd      	b.n	8014a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8014a9c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014aa0:	e7c3      	b.n	8014a2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8014aa2:	9b08      	ldr	r3, [sp, #32]
 8014aa4:	2b00      	cmp	r3, #0
 8014aa6:	d0f7      	beq.n	8014a98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014aa8:	2264      	movs	r2, #100	; 0x64
 8014aaa:	4639      	mov	r1, r7
 8014aac:	a84b      	add	r0, sp, #300	; 0x12c
 8014aae:	f010 fa43 	bl	8024f38 <memcpy>
 8014ab2:	2300      	movs	r3, #0
 8014ab4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014ab8:	6821      	ldr	r1, [r4, #0]
 8014aba:	a84b      	add	r0, sp, #300	; 0x12c
 8014abc:	f7ff fbee 	bl	801429c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014ac0:	b203      	sxth	r3, r0
 8014ac2:	e79f      	b.n	8014a04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08014ac4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014ac4:	2b03      	cmp	r3, #3
 8014ac6:	d818      	bhi.n	8014afa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014ac8:	e8df f003 	tbb	[pc, r3]
 8014acc:	130d0602 	.word	0x130d0602
 8014ad0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ad4:	1850      	adds	r0, r2, r1
 8014ad6:	4770      	bx	lr
 8014ad8:	8803      	ldrh	r3, [r0, #0]
 8014ada:	8880      	ldrh	r0, [r0, #4]
 8014adc:	4418      	add	r0, r3
 8014ade:	b200      	sxth	r0, r0
 8014ae0:	1a80      	subs	r0, r0, r2
 8014ae2:	3801      	subs	r0, #1
 8014ae4:	4770      	bx	lr
 8014ae6:	8803      	ldrh	r3, [r0, #0]
 8014ae8:	8880      	ldrh	r0, [r0, #4]
 8014aea:	4418      	add	r0, r3
 8014aec:	b200      	sxth	r0, r0
 8014aee:	1a40      	subs	r0, r0, r1
 8014af0:	e7f7      	b.n	8014ae2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014af2:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014af6:	4410      	add	r0, r2
 8014af8:	4770      	bx	lr
 8014afa:	2000      	movs	r0, #0
 8014afc:	4770      	bx	lr

08014afe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014afe:	2b03      	cmp	r3, #3
 8014b00:	d817      	bhi.n	8014b32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014b02:	e8df f003 	tbb	[pc, r3]
 8014b06:	0602      	.short	0x0602
 8014b08:	1009      	.short	0x1009
 8014b0a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014b0e:	1850      	adds	r0, r2, r1
 8014b10:	4770      	bx	lr
 8014b12:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014b16:	e7fa      	b.n	8014b0e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014b18:	8843      	ldrh	r3, [r0, #2]
 8014b1a:	88c0      	ldrh	r0, [r0, #6]
 8014b1c:	4418      	add	r0, r3
 8014b1e:	b200      	sxth	r0, r0
 8014b20:	1a80      	subs	r0, r0, r2
 8014b22:	3801      	subs	r0, #1
 8014b24:	4770      	bx	lr
 8014b26:	8843      	ldrh	r3, [r0, #2]
 8014b28:	88c0      	ldrh	r0, [r0, #6]
 8014b2a:	4418      	add	r0, r3
 8014b2c:	b200      	sxth	r0, r0
 8014b2e:	1a40      	subs	r0, r0, r1
 8014b30:	e7f7      	b.n	8014b22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014b32:	2000      	movs	r0, #0
 8014b34:	4770      	bx	lr
	...

08014b38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014b38:	4b01      	ldr	r3, [pc, #4]	; (8014b40 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014b3a:	2200      	movs	r2, #0
 8014b3c:	601a      	str	r2, [r3, #0]
 8014b3e:	4770      	bx	lr
 8014b40:	20002c94 	.word	0x20002c94

08014b44 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014b44:	4603      	mov	r3, r0
 8014b46:	b1c8      	cbz	r0, 8014b7c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014b48:	0c02      	lsrs	r2, r0, #16
 8014b4a:	0412      	lsls	r2, r2, #16
 8014b4c:	b9a2      	cbnz	r2, 8014b78 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014b4e:	0403      	lsls	r3, r0, #16
 8014b50:	2010      	movs	r0, #16
 8014b52:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014b56:	bf04      	itt	eq
 8014b58:	021b      	lsleq	r3, r3, #8
 8014b5a:	3008      	addeq	r0, #8
 8014b5c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014b60:	bf04      	itt	eq
 8014b62:	011b      	lsleq	r3, r3, #4
 8014b64:	3004      	addeq	r0, #4
 8014b66:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014b6a:	bf04      	itt	eq
 8014b6c:	009b      	lsleq	r3, r3, #2
 8014b6e:	3002      	addeq	r0, #2
 8014b70:	2b00      	cmp	r3, #0
 8014b72:	db04      	blt.n	8014b7e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014b74:	3001      	adds	r0, #1
 8014b76:	4770      	bx	lr
 8014b78:	2000      	movs	r0, #0
 8014b7a:	e7ea      	b.n	8014b52 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014b7c:	2020      	movs	r0, #32
 8014b7e:	4770      	bx	lr

08014b80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b84:	b087      	sub	sp, #28
 8014b86:	4681      	mov	r9, r0
 8014b88:	4698      	mov	r8, r3
 8014b8a:	4610      	mov	r0, r2
 8014b8c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014b90:	460d      	mov	r5, r1
 8014b92:	b981      	cbnz	r1, 8014bb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8014b94:	b14b      	cbz	r3, 8014baa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8014b96:	460b      	mov	r3, r1
 8014b98:	e9cd 4700 	strd	r4, r7, [sp]
 8014b9c:	464a      	mov	r2, r9
 8014b9e:	4641      	mov	r1, r8
 8014ba0:	f7ff ffee 	bl	8014b80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014ba4:	b007      	add	sp, #28
 8014ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014baa:	f04f 33ff 	mov.w	r3, #4294967295
 8014bae:	603b      	str	r3, [r7, #0]
 8014bb0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014bb4:	e7f6      	b.n	8014ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8014bb6:	fa32 fa01 	lsrs.w	sl, r2, r1
 8014bba:	d107      	bne.n	8014bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8014bbc:	fb09 f602 	mul.w	r6, r9, r2
 8014bc0:	fbb6 f0f4 	udiv	r0, r6, r4
 8014bc4:	fb04 6610 	mls	r6, r4, r0, r6
 8014bc8:	603e      	str	r6, [r7, #0]
 8014bca:	e7eb      	b.n	8014ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8014bcc:	2601      	movs	r6, #1
 8014bce:	408e      	lsls	r6, r1
 8014bd0:	3e01      	subs	r6, #1
 8014bd2:	4016      	ands	r6, r2
 8014bd4:	fa09 fb01 	lsl.w	fp, r9, r1
 8014bd8:	4630      	mov	r0, r6
 8014bda:	fbbb f3f4 	udiv	r3, fp, r4
 8014bde:	9302      	str	r3, [sp, #8]
 8014be0:	fb0a f303 	mul.w	r3, sl, r3
 8014be4:	9303      	str	r3, [sp, #12]
 8014be6:	f7ff ffad 	bl	8014b44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014bea:	464a      	mov	r2, r9
 8014bec:	460b      	mov	r3, r1
 8014bee:	e9cd 4700 	strd	r4, r7, [sp]
 8014bf2:	4601      	mov	r1, r0
 8014bf4:	4630      	mov	r0, r6
 8014bf6:	f7ff ffc3 	bl	8014b80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014bfa:	9b02      	ldr	r3, [sp, #8]
 8014bfc:	fb04 bb13 	mls	fp, r4, r3, fp
 8014c00:	4606      	mov	r6, r0
 8014c02:	4658      	mov	r0, fp
 8014c04:	eb05 0108 	add.w	r1, r5, r8
 8014c08:	f7ff ff9c 	bl	8014b44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014c0c:	ab05      	add	r3, sp, #20
 8014c0e:	e9cd 4300 	strd	r4, r3, [sp]
 8014c12:	465a      	mov	r2, fp
 8014c14:	4603      	mov	r3, r0
 8014c16:	4650      	mov	r0, sl
 8014c18:	f7ff ffb2 	bl	8014b80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014c1c:	6839      	ldr	r1, [r7, #0]
 8014c1e:	9a05      	ldr	r2, [sp, #20]
 8014c20:	9b03      	ldr	r3, [sp, #12]
 8014c22:	4411      	add	r1, r2
 8014c24:	fbb1 f2f4 	udiv	r2, r1, r4
 8014c28:	18d3      	adds	r3, r2, r3
 8014c2a:	441e      	add	r6, r3
 8014c2c:	fb04 1412 	mls	r4, r4, r2, r1
 8014c30:	4430      	add	r0, r6
 8014c32:	603c      	str	r4, [r7, #0]
 8014c34:	e7b6      	b.n	8014ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08014c36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014c36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014c3a:	b085      	sub	sp, #20
 8014c3c:	f1b0 0900 	subs.w	r9, r0, #0
 8014c40:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014c42:	461d      	mov	r5, r3
 8014c44:	bfbf      	itttt	lt
 8014c46:	6823      	ldrlt	r3, [r4, #0]
 8014c48:	425b      	neglt	r3, r3
 8014c4a:	f1c9 0900 	rsblt	r9, r9, #0
 8014c4e:	6023      	strlt	r3, [r4, #0]
 8014c50:	bfb4      	ite	lt
 8014c52:	f04f 36ff 	movlt.w	r6, #4294967295
 8014c56:	2601      	movge	r6, #1
 8014c58:	2a00      	cmp	r2, #0
 8014c5a:	4617      	mov	r7, r2
 8014c5c:	da04      	bge.n	8014c68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014c5e:	6823      	ldr	r3, [r4, #0]
 8014c60:	425b      	negs	r3, r3
 8014c62:	4257      	negs	r7, r2
 8014c64:	4276      	negs	r6, r6
 8014c66:	6023      	str	r3, [r4, #0]
 8014c68:	2d00      	cmp	r5, #0
 8014c6a:	4638      	mov	r0, r7
 8014c6c:	bfba      	itte	lt
 8014c6e:	426d      	neglt	r5, r5
 8014c70:	f04f 38ff 	movlt.w	r8, #4294967295
 8014c74:	f04f 0801 	movge.w	r8, #1
 8014c78:	f7ff ff64 	bl	8014b44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014c7c:	ab03      	add	r3, sp, #12
 8014c7e:	e9cd 5300 	strd	r5, r3, [sp]
 8014c82:	463a      	mov	r2, r7
 8014c84:	4603      	mov	r3, r0
 8014c86:	4648      	mov	r0, r9
 8014c88:	f7ff ff7a 	bl	8014b80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014c8c:	6823      	ldr	r3, [r4, #0]
 8014c8e:	9a03      	ldr	r2, [sp, #12]
 8014c90:	4546      	cmp	r6, r8
 8014c92:	441a      	add	r2, r3
 8014c94:	fb92 f3f5 	sdiv	r3, r2, r5
 8014c98:	4418      	add	r0, r3
 8014c9a:	bf18      	it	ne
 8014c9c:	4240      	negne	r0, r0
 8014c9e:	fb05 2313 	mls	r3, r5, r3, r2
 8014ca2:	1c72      	adds	r2, r6, #1
 8014ca4:	6023      	str	r3, [r4, #0]
 8014ca6:	d105      	bne.n	8014cb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014ca8:	2b00      	cmp	r3, #0
 8014caa:	f1c3 0200 	rsb	r2, r3, #0
 8014cae:	db0b      	blt.n	8014cc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014cb0:	6022      	str	r2, [r4, #0]
 8014cb2:	e006      	b.n	8014cc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cb4:	2e01      	cmp	r6, #1
 8014cb6:	d104      	bne.n	8014cc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cb8:	2b00      	cmp	r3, #0
 8014cba:	da02      	bge.n	8014cc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cbc:	442b      	add	r3, r5
 8014cbe:	3801      	subs	r0, #1
 8014cc0:	6023      	str	r3, [r4, #0]
 8014cc2:	b005      	add	sp, #20
 8014cc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014cc8:	3801      	subs	r0, #1
 8014cca:	1b52      	subs	r2, r2, r5
 8014ccc:	e7f0      	b.n	8014cb0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08014cd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014cd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014cd4:	4c1c      	ldr	r4, [pc, #112]	; (8014d48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014cd6:	6807      	ldr	r7, [r0, #0]
 8014cd8:	69a3      	ldr	r3, [r4, #24]
 8014cda:	4605      	mov	r5, r0
 8014cdc:	b92b      	cbnz	r3, 8014cea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014cde:	6840      	ldr	r0, [r0, #4]
 8014ce0:	e9c5 7000 	strd	r7, r0, [r5]
 8014ce4:	b004      	add	sp, #16
 8014ce6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014cea:	68a2      	ldr	r2, [r4, #8]
 8014cec:	6820      	ldr	r0, [r4, #0]
 8014cee:	ae04      	add	r6, sp, #16
 8014cf0:	f04f 0802 	mov.w	r8, #2
 8014cf4:	fb93 f1f8 	sdiv	r1, r3, r8
 8014cf8:	440a      	add	r2, r1
 8014cfa:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014cfe:	69e1      	ldr	r1, [r4, #28]
 8014d00:	9600      	str	r6, [sp, #0]
 8014d02:	463a      	mov	r2, r7
 8014d04:	f7ff ff97 	bl	8014c36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d08:	69a3      	ldr	r3, [r4, #24]
 8014d0a:	686a      	ldr	r2, [r5, #4]
 8014d0c:	6a21      	ldr	r1, [r4, #32]
 8014d0e:	9600      	str	r6, [sp, #0]
 8014d10:	4607      	mov	r7, r0
 8014d12:	6860      	ldr	r0, [r4, #4]
 8014d14:	f7ff ff8f 	bl	8014c36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d18:	6962      	ldr	r2, [r4, #20]
 8014d1a:	69a3      	ldr	r3, [r4, #24]
 8014d1c:	fb93 f8f8 	sdiv	r8, r3, r8
 8014d20:	4442      	add	r2, r8
 8014d22:	9203      	str	r2, [sp, #12]
 8014d24:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014d26:	682a      	ldr	r2, [r5, #0]
 8014d28:	9600      	str	r6, [sp, #0]
 8014d2a:	4407      	add	r7, r0
 8014d2c:	68e0      	ldr	r0, [r4, #12]
 8014d2e:	f7ff ff82 	bl	8014c36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d32:	9600      	str	r6, [sp, #0]
 8014d34:	4680      	mov	r8, r0
 8014d36:	69a3      	ldr	r3, [r4, #24]
 8014d38:	686a      	ldr	r2, [r5, #4]
 8014d3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014d3c:	6920      	ldr	r0, [r4, #16]
 8014d3e:	f7ff ff7a 	bl	8014c36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d42:	4440      	add	r0, r8
 8014d44:	e7cc      	b.n	8014ce0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014d46:	bf00      	nop
 8014d48:	20002c98 	.word	0x20002c98

08014d4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014d4c:	4b07      	ldr	r3, [pc, #28]	; (8014d6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014d4e:	781b      	ldrb	r3, [r3, #0]
 8014d50:	2b01      	cmp	r3, #1
 8014d52:	d109      	bne.n	8014d68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014d54:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014d58:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014d5c:	8003      	strh	r3, [r0, #0]
 8014d5e:	4b04      	ldr	r3, [pc, #16]	; (8014d70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014d60:	881b      	ldrh	r3, [r3, #0]
 8014d62:	3b01      	subs	r3, #1
 8014d64:	1a9b      	subs	r3, r3, r2
 8014d66:	800b      	strh	r3, [r1, #0]
 8014d68:	4770      	bx	lr
 8014d6a:	bf00      	nop
 8014d6c:	20002c84 	.word	0x20002c84
 8014d70:	20002c80 	.word	0x20002c80

08014d74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014d74:	b510      	push	{r4, lr}
 8014d76:	4b07      	ldr	r3, [pc, #28]	; (8014d94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014d78:	781b      	ldrb	r3, [r3, #0]
 8014d7a:	2b01      	cmp	r3, #1
 8014d7c:	d108      	bne.n	8014d90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014d7e:	4b06      	ldr	r3, [pc, #24]	; (8014d98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014d80:	880c      	ldrh	r4, [r1, #0]
 8014d82:	881b      	ldrh	r3, [r3, #0]
 8014d84:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014d88:	3b01      	subs	r3, #1
 8014d8a:	1b1b      	subs	r3, r3, r4
 8014d8c:	8003      	strh	r3, [r0, #0]
 8014d8e:	800a      	strh	r2, [r1, #0]
 8014d90:	bd10      	pop	{r4, pc}
 8014d92:	bf00      	nop
 8014d94:	20002c84 	.word	0x20002c84
 8014d98:	20002c80 	.word	0x20002c80

08014d9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014d9c:	b510      	push	{r4, lr}
 8014d9e:	4b0a      	ldr	r3, [pc, #40]	; (8014dc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014da0:	781b      	ldrb	r3, [r3, #0]
 8014da2:	2b01      	cmp	r3, #1
 8014da4:	d10e      	bne.n	8014dc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014da6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014daa:	8843      	ldrh	r3, [r0, #2]
 8014dac:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014db0:	8044      	strh	r4, [r0, #2]
 8014db2:	18ca      	adds	r2, r1, r3
 8014db4:	4b05      	ldr	r3, [pc, #20]	; (8014dcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014db6:	881b      	ldrh	r3, [r3, #0]
 8014db8:	1a9b      	subs	r3, r3, r2
 8014dba:	8003      	strh	r3, [r0, #0]
 8014dbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014dc0:	80c3      	strh	r3, [r0, #6]
 8014dc2:	8081      	strh	r1, [r0, #4]
 8014dc4:	bd10      	pop	{r4, pc}
 8014dc6:	bf00      	nop
 8014dc8:	20002c84 	.word	0x20002c84
 8014dcc:	20002c80 	.word	0x20002c80

08014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014dd0:	4b08      	ldr	r3, [pc, #32]	; (8014df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014dd2:	781b      	ldrb	r3, [r3, #0]
 8014dd4:	2b01      	cmp	r3, #1
 8014dd6:	d10c      	bne.n	8014df2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014dd8:	8803      	ldrh	r3, [r0, #0]
 8014dda:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014dde:	8842      	ldrh	r2, [r0, #2]
 8014de0:	8002      	strh	r2, [r0, #0]
 8014de2:	185a      	adds	r2, r3, r1
 8014de4:	4b04      	ldr	r3, [pc, #16]	; (8014df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014de6:	881b      	ldrh	r3, [r3, #0]
 8014de8:	1a9b      	subs	r3, r3, r2
 8014dea:	8043      	strh	r3, [r0, #2]
 8014dec:	88c3      	ldrh	r3, [r0, #6]
 8014dee:	8083      	strh	r3, [r0, #4]
 8014df0:	80c1      	strh	r1, [r0, #6]
 8014df2:	4770      	bx	lr
 8014df4:	20002c84 	.word	0x20002c84
 8014df8:	20002c80 	.word	0x20002c80

08014dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014dfc:	b510      	push	{r4, lr}
 8014dfe:	4b07      	ldr	r3, [pc, #28]	; (8014e1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014e00:	781b      	ldrb	r3, [r3, #0]
 8014e02:	2b01      	cmp	r3, #1
 8014e04:	d108      	bne.n	8014e18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014e06:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014e0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014e0e:	8003      	strh	r3, [r0, #0]
 8014e10:	8893      	ldrh	r3, [r2, #4]
 8014e12:	3b01      	subs	r3, #1
 8014e14:	1b1b      	subs	r3, r3, r4
 8014e16:	800b      	strh	r3, [r1, #0]
 8014e18:	bd10      	pop	{r4, pc}
 8014e1a:	bf00      	nop
 8014e1c:	20002c84 	.word	0x20002c84

08014e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014e20:	4b0b      	ldr	r3, [pc, #44]	; (8014e50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014e22:	781b      	ldrb	r3, [r3, #0]
 8014e24:	2b01      	cmp	r3, #1
 8014e26:	d111      	bne.n	8014e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014e28:	680b      	ldr	r3, [r1, #0]
 8014e2a:	ed90 7a00 	vldr	s14, [r0]
 8014e2e:	6003      	str	r3, [r0, #0]
 8014e30:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014e34:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014e54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014e38:	ee07 3a90 	vmov	s15, r3
 8014e3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014e40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014e44:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e48:	edc1 7a00 	vstr	s15, [r1]
 8014e4c:	4770      	bx	lr
 8014e4e:	bf00      	nop
 8014e50:	20002c84 	.word	0x20002c84
 8014e54:	38d1b717 	.word	0x38d1b717

08014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014e58:	b510      	push	{r4, lr}
 8014e5a:	4b0a      	ldr	r3, [pc, #40]	; (8014e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014e5c:	781b      	ldrb	r3, [r3, #0]
 8014e5e:	2b01      	cmp	r3, #1
 8014e60:	460a      	mov	r2, r1
 8014e62:	d10d      	bne.n	8014e80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014e64:	8881      	ldrh	r1, [r0, #4]
 8014e66:	8803      	ldrh	r3, [r0, #0]
 8014e68:	440b      	add	r3, r1
 8014e6a:	4601      	mov	r1, r0
 8014e6c:	3b01      	subs	r3, #1
 8014e6e:	f821 3b02 	strh.w	r3, [r1], #2
 8014e72:	f7ff ffc3 	bl	8014dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014e76:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014e7a:	88c2      	ldrh	r2, [r0, #6]
 8014e7c:	8082      	strh	r2, [r0, #4]
 8014e7e:	80c3      	strh	r3, [r0, #6]
 8014e80:	bd10      	pop	{r4, pc}
 8014e82:	bf00      	nop
 8014e84:	20002c84 	.word	0x20002c84

08014e88 <_ZN8touchgfx11Application19changeToStartScreenEv>:
 8014e88:	4770      	bx	lr
	...

08014e8c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014e8c:	b570      	push	{r4, r5, r6, lr}
 8014e8e:	4c0b      	ldr	r4, [pc, #44]	; (8014ebc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014e90:	2300      	movs	r3, #0
 8014e92:	4605      	mov	r5, r0
 8014e94:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8014e98:	6820      	ldr	r0, [r4, #0]
 8014e9a:	460e      	mov	r6, r1
 8014e9c:	b110      	cbz	r0, 8014ea4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8014e9e:	6803      	ldr	r3, [r0, #0]
 8014ea0:	695b      	ldr	r3, [r3, #20]
 8014ea2:	4798      	blx	r3
 8014ea4:	6026      	str	r6, [r4, #0]
 8014ea6:	6833      	ldr	r3, [r6, #0]
 8014ea8:	4630      	mov	r0, r6
 8014eaa:	68db      	ldr	r3, [r3, #12]
 8014eac:	4798      	blx	r3
 8014eae:	682b      	ldr	r3, [r5, #0]
 8014eb0:	4628      	mov	r0, r5
 8014eb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014eb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014eb8:	4718      	bx	r3
 8014eba:	bf00      	nop
 8014ebc:	20002cc8 	.word	0x20002cc8

08014ec0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014ec0:	4b06      	ldr	r3, [pc, #24]	; (8014edc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014ec2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ec6:	4b06      	ldr	r3, [pc, #24]	; (8014ee0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014ec8:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8014ecc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014ed0:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8014ed4:	2100      	movs	r1, #0
 8014ed6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8014eda:	4770      	bx	lr
 8014edc:	20002c80 	.word	0x20002c80
 8014ee0:	20002c82 	.word	0x20002c82

08014ee4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014ee4:	4b03      	ldr	r3, [pc, #12]	; (8014ef4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014ee6:	6818      	ldr	r0, [r3, #0]
 8014ee8:	b110      	cbz	r0, 8014ef0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014eea:	6803      	ldr	r3, [r0, #0]
 8014eec:	699b      	ldr	r3, [r3, #24]
 8014eee:	4718      	bx	r3
 8014ef0:	4770      	bx	lr
 8014ef2:	bf00      	nop
 8014ef4:	20002cc8 	.word	0x20002cc8

08014ef8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014ef8:	4770      	bx	lr
	...

08014efc <_ZN8touchgfx11Application4drawEv>:
 8014efc:	b507      	push	{r0, r1, r2, lr}
 8014efe:	4b09      	ldr	r3, [pc, #36]	; (8014f24 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014f00:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f04:	4b08      	ldr	r3, [pc, #32]	; (8014f28 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014f06:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014f0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014f0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014f12:	6803      	ldr	r3, [r0, #0]
 8014f14:	2100      	movs	r1, #0
 8014f16:	9100      	str	r1, [sp, #0]
 8014f18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014f1a:	4669      	mov	r1, sp
 8014f1c:	4798      	blx	r3
 8014f1e:	b003      	add	sp, #12
 8014f20:	f85d fb04 	ldr.w	pc, [sp], #4
 8014f24:	20002c80 	.word	0x20002c80
 8014f28:	20002c82 	.word	0x20002c82

08014f2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014f2c:	4b03      	ldr	r3, [pc, #12]	; (8014f3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014f2e:	6818      	ldr	r0, [r3, #0]
 8014f30:	b110      	cbz	r0, 8014f38 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014f32:	6803      	ldr	r3, [r0, #0]
 8014f34:	69db      	ldr	r3, [r3, #28]
 8014f36:	4718      	bx	r3
 8014f38:	4770      	bx	lr
 8014f3a:	bf00      	nop
 8014f3c:	20002cc8 	.word	0x20002cc8

08014f40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014f40:	4b03      	ldr	r3, [pc, #12]	; (8014f50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014f42:	6818      	ldr	r0, [r3, #0]
 8014f44:	b110      	cbz	r0, 8014f4c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014f46:	6803      	ldr	r3, [r0, #0]
 8014f48:	6a1b      	ldr	r3, [r3, #32]
 8014f4a:	4718      	bx	r3
 8014f4c:	4770      	bx	lr
 8014f4e:	bf00      	nop
 8014f50:	20002cc8 	.word	0x20002cc8

08014f54 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014f54:	2300      	movs	r3, #0
 8014f56:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8014f5a:	4770      	bx	lr

08014f5c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014f5c:	4b03      	ldr	r3, [pc, #12]	; (8014f6c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014f5e:	6818      	ldr	r0, [r3, #0]
 8014f60:	b110      	cbz	r0, 8014f68 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014f62:	6803      	ldr	r3, [r0, #0]
 8014f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014f66:	4718      	bx	r3
 8014f68:	4770      	bx	lr
 8014f6a:	bf00      	nop
 8014f6c:	20002cc8 	.word	0x20002cc8

08014f70 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014f70:	b570      	push	{r4, r5, r6, lr}
 8014f72:	4d32      	ldr	r5, [pc, #200]	; (801503c <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8014f74:	4604      	mov	r4, r0
 8014f76:	6828      	ldr	r0, [r5, #0]
 8014f78:	b140      	cbz	r0, 8014f8c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014f7a:	7a03      	ldrb	r3, [r0, #8]
 8014f7c:	b933      	cbnz	r3, 8014f8c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014f7e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8014f82:	6803      	ldr	r3, [r0, #0]
 8014f84:	689b      	ldr	r3, [r3, #8]
 8014f86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014f8a:	4718      	bx	r3
 8014f8c:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8014f90:	b97b      	cbnz	r3, 8014fb2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014f92:	b170      	cbz	r0, 8014fb2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014f94:	7a03      	ldrb	r3, [r0, #8]
 8014f96:	b163      	cbz	r3, 8014fb2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014f98:	4b29      	ldr	r3, [pc, #164]	; (8015040 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8014f9a:	6818      	ldr	r0, [r3, #0]
 8014f9c:	b110      	cbz	r0, 8014fa4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014f9e:	6803      	ldr	r3, [r0, #0]
 8014fa0:	691b      	ldr	r3, [r3, #16]
 8014fa2:	4798      	blx	r3
 8014fa4:	6828      	ldr	r0, [r5, #0]
 8014fa6:	6803      	ldr	r3, [r0, #0]
 8014fa8:	68db      	ldr	r3, [r3, #12]
 8014faa:	4798      	blx	r3
 8014fac:	2301      	movs	r3, #1
 8014fae:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8014fb2:	2500      	movs	r5, #0
 8014fb4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8014fb8:	42a8      	cmp	r0, r5
 8014fba:	dd0c      	ble.n	8014fd6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8014fbc:	1963      	adds	r3, r4, r5
 8014fbe:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8014fc2:	b132      	cbz	r2, 8014fd2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8014fc4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8014fc8:	4413      	add	r3, r2
 8014fca:	6858      	ldr	r0, [r3, #4]
 8014fcc:	6803      	ldr	r3, [r0, #0]
 8014fce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014fd0:	4798      	blx	r3
 8014fd2:	3501      	adds	r5, #1
 8014fd4:	e7ee      	b.n	8014fb4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8014fd6:	2300      	movs	r3, #0
 8014fd8:	461a      	mov	r2, r3
 8014fda:	4298      	cmp	r0, r3
 8014fdc:	d015      	beq.n	801500a <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8014fde:	18e1      	adds	r1, r4, r3
 8014fe0:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8014fe4:	b16d      	cbz	r5, 8015002 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8014fe6:	429a      	cmp	r2, r3
 8014fe8:	d00a      	beq.n	8015000 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8014fea:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8014fee:	4431      	add	r1, r6
 8014ff0:	684e      	ldr	r6, [r1, #4]
 8014ff2:	b291      	uxth	r1, r2
 8014ff4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8014ff8:	604e      	str	r6, [r1, #4]
 8014ffa:	18a1      	adds	r1, r4, r2
 8014ffc:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8015000:	3201      	adds	r2, #1
 8015002:	3301      	adds	r3, #1
 8015004:	e7e9      	b.n	8014fda <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8015006:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 801500a:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 801500e:	4295      	cmp	r5, r2
 8015010:	dd0d      	ble.n	801502e <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8015012:	1e6b      	subs	r3, r5, #1
 8015014:	b29b      	uxth	r3, r3
 8015016:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 801501a:	4618      	mov	r0, r3
 801501c:	3104      	adds	r1, #4
 801501e:	4285      	cmp	r5, r0
 8015020:	ddf1      	ble.n	8015006 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8015022:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8015026:	f841 6c04 	str.w	r6, [r1, #-4]
 801502a:	3001      	adds	r0, #1
 801502c:	e7f7      	b.n	801501e <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 801502e:	4b04      	ldr	r3, [pc, #16]	; (8015040 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8015030:	6818      	ldr	r0, [r3, #0]
 8015032:	b110      	cbz	r0, 801503a <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8015034:	6803      	ldr	r3, [r0, #0]
 8015036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015038:	e7a5      	b.n	8014f86 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801503a:	bd70      	pop	{r4, r5, r6, pc}
 801503c:	20002ccc 	.word	0x20002ccc
 8015040:	20002cc8 	.word	0x20002cc8

08015044 <_ZN8touchgfx11ApplicationD1Ev>:
 8015044:	4770      	bx	lr

08015046 <_ZN8touchgfx11ApplicationD0Ev>:
 8015046:	b510      	push	{r4, lr}
 8015048:	f44f 719c 	mov.w	r1, #312	; 0x138
 801504c:	4604      	mov	r4, r0
 801504e:	f00f f8d6 	bl	80241fe <_ZdlPvj>
 8015052:	4620      	mov	r0, r4
 8015054:	bd10      	pop	{r4, pc}

08015056 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015056:	b510      	push	{r4, lr}
 8015058:	f9b1 4000 	ldrsh.w	r4, [r1]
 801505c:	888a      	ldrh	r2, [r1, #4]
 801505e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015062:	4422      	add	r2, r4
 8015064:	b212      	sxth	r2, r2
 8015066:	4293      	cmp	r3, r2
 8015068:	da15      	bge.n	8015096 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801506a:	8882      	ldrh	r2, [r0, #4]
 801506c:	4413      	add	r3, r2
 801506e:	b21b      	sxth	r3, r3
 8015070:	429c      	cmp	r4, r3
 8015072:	da10      	bge.n	8015096 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015074:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015078:	88c9      	ldrh	r1, [r1, #6]
 801507a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801507e:	4419      	add	r1, r3
 8015080:	b209      	sxth	r1, r1
 8015082:	428a      	cmp	r2, r1
 8015084:	da07      	bge.n	8015096 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015086:	88c0      	ldrh	r0, [r0, #6]
 8015088:	4410      	add	r0, r2
 801508a:	b200      	sxth	r0, r0
 801508c:	4283      	cmp	r3, r0
 801508e:	bfac      	ite	ge
 8015090:	2000      	movge	r0, #0
 8015092:	2001      	movlt	r0, #1
 8015094:	bd10      	pop	{r4, pc}
 8015096:	2000      	movs	r0, #0
 8015098:	e7fc      	b.n	8015094 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801509a <_ZN8touchgfx4Rect10restrictToEss>:
 801509a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801509e:	2b00      	cmp	r3, #0
 80150a0:	b510      	push	{r4, lr}
 80150a2:	da04      	bge.n	80150ae <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80150a4:	8884      	ldrh	r4, [r0, #4]
 80150a6:	4423      	add	r3, r4
 80150a8:	8083      	strh	r3, [r0, #4]
 80150aa:	2300      	movs	r3, #0
 80150ac:	8003      	strh	r3, [r0, #0]
 80150ae:	f9b0 4000 	ldrsh.w	r4, [r0]
 80150b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80150b6:	1b09      	subs	r1, r1, r4
 80150b8:	428b      	cmp	r3, r1
 80150ba:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80150be:	bfc8      	it	gt
 80150c0:	8081      	strhgt	r1, [r0, #4]
 80150c2:	2b00      	cmp	r3, #0
 80150c4:	da04      	bge.n	80150d0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80150c6:	88c1      	ldrh	r1, [r0, #6]
 80150c8:	440b      	add	r3, r1
 80150ca:	80c3      	strh	r3, [r0, #6]
 80150cc:	2300      	movs	r3, #0
 80150ce:	8043      	strh	r3, [r0, #2]
 80150d0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80150d4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80150d8:	1a52      	subs	r2, r2, r1
 80150da:	4293      	cmp	r3, r2
 80150dc:	bfc8      	it	gt
 80150de:	80c2      	strhgt	r2, [r0, #6]
 80150e0:	bd10      	pop	{r4, pc}
	...

080150e4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80150e4:	b510      	push	{r4, lr}
 80150e6:	4b10      	ldr	r3, [pc, #64]	; (8015128 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80150e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80150ec:	4b0f      	ldr	r3, [pc, #60]	; (801512c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80150ee:	460c      	mov	r4, r1
 80150f0:	4620      	mov	r0, r4
 80150f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80150f6:	f7ff ffd0 	bl	801509a <_ZN8touchgfx4Rect10restrictToEss>
 80150fa:	4b0d      	ldr	r3, [pc, #52]	; (8015130 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80150fc:	6818      	ldr	r0, [r3, #0]
 80150fe:	b190      	cbz	r0, 8015126 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015100:	6803      	ldr	r3, [r0, #0]
 8015102:	4621      	mov	r1, r4
 8015104:	689b      	ldr	r3, [r3, #8]
 8015106:	4798      	blx	r3
 8015108:	4b0a      	ldr	r3, [pc, #40]	; (8015134 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801510a:	6818      	ldr	r0, [r3, #0]
 801510c:	b118      	cbz	r0, 8015116 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801510e:	6803      	ldr	r3, [r0, #0]
 8015110:	4621      	mov	r1, r4
 8015112:	689b      	ldr	r3, [r3, #8]
 8015114:	4798      	blx	r3
 8015116:	4b08      	ldr	r3, [pc, #32]	; (8015138 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015118:	6818      	ldr	r0, [r3, #0]
 801511a:	6803      	ldr	r3, [r0, #0]
 801511c:	4621      	mov	r1, r4
 801511e:	69db      	ldr	r3, [r3, #28]
 8015120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015124:	4718      	bx	r3
 8015126:	bd10      	pop	{r4, pc}
 8015128:	20002c82 	.word	0x20002c82
 801512c:	20002c80 	.word	0x20002c80
 8015130:	20002cc8 	.word	0x20002cc8
 8015134:	20002cc4 	.word	0x20002cc4
 8015138:	20002c8c 	.word	0x20002c8c

0801513c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801513c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801513e:	4606      	mov	r6, r0
 8015140:	4608      	mov	r0, r1
 8015142:	460f      	mov	r7, r1
 8015144:	f7fb fb15 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015148:	b9e8      	cbnz	r0, 8015186 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801514a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801514e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015152:	42a5      	cmp	r5, r4
 8015154:	db17      	blt.n	8015186 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015156:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801515a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801515e:	429a      	cmp	r2, r3
 8015160:	db11      	blt.n	8015186 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015162:	88b9      	ldrh	r1, [r7, #4]
 8015164:	440d      	add	r5, r1
 8015166:	88b1      	ldrh	r1, [r6, #4]
 8015168:	440c      	add	r4, r1
 801516a:	b22d      	sxth	r5, r5
 801516c:	b224      	sxth	r4, r4
 801516e:	42a5      	cmp	r5, r4
 8015170:	dc09      	bgt.n	8015186 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015172:	88f8      	ldrh	r0, [r7, #6]
 8015174:	4410      	add	r0, r2
 8015176:	88f2      	ldrh	r2, [r6, #6]
 8015178:	4413      	add	r3, r2
 801517a:	b200      	sxth	r0, r0
 801517c:	b21b      	sxth	r3, r3
 801517e:	4298      	cmp	r0, r3
 8015180:	bfcc      	ite	gt
 8015182:	2000      	movgt	r0, #0
 8015184:	2001      	movle	r0, #1
 8015186:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015188 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801518a:	4604      	mov	r4, r0
 801518c:	4608      	mov	r0, r1
 801518e:	460d      	mov	r5, r1
 8015190:	f7fb faef 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015194:	b978      	cbnz	r0, 80151b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015196:	4620      	mov	r0, r4
 8015198:	f7fb faeb 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801519c:	f9b5 6000 	ldrsh.w	r6, [r5]
 80151a0:	b150      	cbz	r0, 80151b8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80151a2:	8026      	strh	r6, [r4, #0]
 80151a4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80151a8:	8063      	strh	r3, [r4, #2]
 80151aa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80151ae:	80a3      	strh	r3, [r4, #4]
 80151b0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80151b4:	80e3      	strh	r3, [r4, #6]
 80151b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80151b8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80151bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80151c0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80151c4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80151c8:	88ed      	ldrh	r5, [r5, #6]
 80151ca:	42b1      	cmp	r1, r6
 80151cc:	460f      	mov	r7, r1
 80151ce:	bfa8      	it	ge
 80151d0:	4637      	movge	r7, r6
 80151d2:	4293      	cmp	r3, r2
 80151d4:	4618      	mov	r0, r3
 80151d6:	4466      	add	r6, ip
 80151d8:	bfa8      	it	ge
 80151da:	4610      	movge	r0, r2
 80151dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80151e0:	8027      	strh	r7, [r4, #0]
 80151e2:	442a      	add	r2, r5
 80151e4:	88e5      	ldrh	r5, [r4, #6]
 80151e6:	8060      	strh	r0, [r4, #2]
 80151e8:	4461      	add	r1, ip
 80151ea:	442b      	add	r3, r5
 80151ec:	b236      	sxth	r6, r6
 80151ee:	b209      	sxth	r1, r1
 80151f0:	b212      	sxth	r2, r2
 80151f2:	b21b      	sxth	r3, r3
 80151f4:	428e      	cmp	r6, r1
 80151f6:	bfac      	ite	ge
 80151f8:	ebc7 0106 	rsbge	r1, r7, r6
 80151fc:	ebc7 0101 	rsblt	r1, r7, r1
 8015200:	429a      	cmp	r2, r3
 8015202:	bfac      	ite	ge
 8015204:	ebc0 0202 	rsbge	r2, r0, r2
 8015208:	ebc0 0203 	rsblt	r2, r0, r3
 801520c:	80a1      	strh	r1, [r4, #4]
 801520e:	80e2      	strh	r2, [r4, #6]
 8015210:	e7d1      	b.n	80151b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015214 <_ZN8touchgfx11Application11getInstanceEv>:
 8015214:	4b01      	ldr	r3, [pc, #4]	; (801521c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015216:	6818      	ldr	r0, [r3, #0]
 8015218:	4770      	bx	lr
 801521a:	bf00      	nop
 801521c:	20002cd8 	.word	0x20002cd8

08015220 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8015220:	b570      	push	{r4, r5, r6, lr}
 8015222:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 8015226:	1d04      	adds	r4, r0, #4
 8015228:	2200      	movs	r2, #0
 801522a:	b295      	uxth	r5, r2
 801522c:	429d      	cmp	r5, r3
 801522e:	d20f      	bcs.n	8015250 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8015230:	f854 6b04 	ldr.w	r6, [r4], #4
 8015234:	428e      	cmp	r6, r1
 8015236:	4615      	mov	r5, r2
 8015238:	f102 0201 	add.w	r2, r2, #1
 801523c:	d1f5      	bne.n	801522a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 801523e:	4428      	add	r0, r5
 8015240:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8015244:	2bff      	cmp	r3, #255	; 0xff
 8015246:	d002      	beq.n	801524e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8015248:	3301      	adds	r3, #1
 801524a:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 801524e:	bd70      	pop	{r4, r5, r6, pc}
 8015250:	18c2      	adds	r2, r0, r3
 8015252:	2b20      	cmp	r3, #32
 8015254:	f04f 0401 	mov.w	r4, #1
 8015258:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 801525c:	bf1f      	itttt	ne
 801525e:	191a      	addne	r2, r3, r4
 8015260:	f8a0 2084 	strhne.w	r2, [r0, #132]	; 0x84
 8015264:	eb00 0083 	addne.w	r0, r0, r3, lsl #2
 8015268:	6041      	strne	r1, [r0, #4]
 801526a:	e7f0      	b.n	801524e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>

0801526c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 801526c:	b570      	push	{r4, r5, r6, lr}
 801526e:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 8015272:	1d04      	adds	r4, r0, #4
 8015274:	2300      	movs	r3, #0
 8015276:	b29a      	uxth	r2, r3
 8015278:	4296      	cmp	r6, r2
 801527a:	d90a      	bls.n	8015292 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 801527c:	f854 2b04 	ldr.w	r2, [r4], #4
 8015280:	428a      	cmp	r2, r1
 8015282:	d107      	bne.n	8015294 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8015284:	18c5      	adds	r5, r0, r3
 8015286:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 801528a:	b11a      	cbz	r2, 8015294 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 801528c:	3a01      	subs	r2, #1
 801528e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8015292:	bd70      	pop	{r4, r5, r6, pc}
 8015294:	3301      	adds	r3, #1
 8015296:	e7ee      	b.n	8015276 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8015298:	2300      	movs	r3, #0
 801529a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801529e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80152a2:	30a8      	adds	r0, #168	; 0xa8
 80152a4:	f802 3b01 	strb.w	r3, [r2], #1
 80152a8:	4282      	cmp	r2, r0
 80152aa:	d1fb      	bne.n	80152a4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80152ac:	4770      	bx	lr

080152ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80152ae:	4603      	mov	r3, r0
 80152b0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80152b4:	2200      	movs	r2, #0
 80152b6:	801a      	strh	r2, [r3, #0]
 80152b8:	805a      	strh	r2, [r3, #2]
 80152ba:	809a      	strh	r2, [r3, #4]
 80152bc:	80da      	strh	r2, [r3, #6]
 80152be:	3308      	adds	r3, #8
 80152c0:	428b      	cmp	r3, r1
 80152c2:	d1f8      	bne.n	80152b6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80152c4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80152c8:	4770      	bx	lr
	...

080152cc <_ZN8touchgfx11ApplicationC1Ev>:
 80152cc:	b570      	push	{r4, r5, r6, lr}
 80152ce:	4b19      	ldr	r3, [pc, #100]	; (8015334 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80152d0:	6003      	str	r3, [r0, #0]
 80152d2:	2500      	movs	r5, #0
 80152d4:	4604      	mov	r4, r0
 80152d6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80152da:	30a8      	adds	r0, #168	; 0xa8
 80152dc:	f7ff ffe7 	bl	80152ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80152e0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80152e4:	f7ff ffe3 	bl	80152ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80152e8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80152ec:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80152f0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80152f4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80152f8:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80152fc:	490e      	ldr	r1, [pc, #56]	; (8015338 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80152fe:	480f      	ldr	r0, [pc, #60]	; (801533c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8015300:	4e0f      	ldr	r6, [pc, #60]	; (8015340 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8015302:	f00e fe73 	bl	8023fec <CRC_Lock>
 8015306:	4b0f      	ldr	r3, [pc, #60]	; (8015344 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015308:	b158      	cbz	r0, 8015322 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801530a:	801d      	strh	r5, [r3, #0]
 801530c:	4a0e      	ldr	r2, [pc, #56]	; (8015348 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801530e:	2300      	movs	r3, #0
 8015310:	6013      	str	r3, [r2, #0]
 8015312:	4a0e      	ldr	r2, [pc, #56]	; (801534c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015314:	6033      	str	r3, [r6, #0]
 8015316:	4620      	mov	r0, r4
 8015318:	6013      	str	r3, [r2, #0]
 801531a:	f7ff ffbd 	bl	8015298 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801531e:	4620      	mov	r0, r4
 8015320:	bd70      	pop	{r4, r5, r6, pc}
 8015322:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015326:	2002      	movs	r0, #2
 8015328:	801a      	strh	r2, [r3, #0]
 801532a:	6030      	str	r0, [r6, #0]
 801532c:	f001 faca 	bl	80168c4 <_ZN8touchgfx6Screen4drawEv>
 8015330:	e7ec      	b.n	801530c <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8015332:	bf00      	nop
 8015334:	080289b4 	.word	0x080289b4
 8015338:	b5e8b5cd 	.word	0xb5e8b5cd
 801533c:	f407a5c2 	.word	0xf407a5c2
 8015340:	20002cc8 	.word	0x20002cc8
 8015344:	20000174 	.word	0x20000174
 8015348:	20002cd8 	.word	0x20002cd8
 801534c:	20002ccc 	.word	0x20002ccc

08015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015350:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015354:	3b01      	subs	r3, #1
 8015356:	b29b      	uxth	r3, r3
 8015358:	428b      	cmp	r3, r1
 801535a:	b510      	push	{r4, lr}
 801535c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015360:	d908      	bls.n	8015374 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015362:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015366:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801536a:	681a      	ldr	r2, [r3, #0]
 801536c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015370:	685a      	ldr	r2, [r3, #4]
 8015372:	6062      	str	r2, [r4, #4]
 8015374:	bd10      	pop	{r4, pc}
	...

08015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801537c:	4b94      	ldr	r3, [pc, #592]	; (80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801537e:	b08f      	sub	sp, #60	; 0x3c
 8015380:	ac0a      	add	r4, sp, #40	; 0x28
 8015382:	e884 0006 	stmia.w	r4, {r1, r2}
 8015386:	f9b3 2000 	ldrsh.w	r2, [r3]
 801538a:	4b92      	ldr	r3, [pc, #584]	; (80155d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 801538c:	4683      	mov	fp, r0
 801538e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015392:	4620      	mov	r0, r4
 8015394:	f7ff fe81 	bl	801509a <_ZN8touchgfx4Rect10restrictToEss>
 8015398:	4620      	mov	r0, r4
 801539a:	f7fb f9ea 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801539e:	2800      	cmp	r0, #0
 80153a0:	d16a      	bne.n	8015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80153a2:	9403      	str	r4, [sp, #12]
 80153a4:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80153a8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80153ac:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80153b0:	2400      	movs	r4, #0
 80153b2:	9301      	str	r3, [sp, #4]
 80153b4:	36a0      	adds	r6, #160	; 0xa0
 80153b6:	42a5      	cmp	r5, r4
 80153b8:	d00d      	beq.n	80153d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80153ba:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80153be:	9803      	ldr	r0, [sp, #12]
 80153c0:	f7ff febc 	bl	801513c <_ZNK8touchgfx4Rect8includesERKS0_>
 80153c4:	b128      	cbz	r0, 80153d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80153c6:	1e69      	subs	r1, r5, #1
 80153c8:	1b09      	subs	r1, r1, r4
 80153ca:	b289      	uxth	r1, r1
 80153cc:	9801      	ldr	r0, [sp, #4]
 80153ce:	f7ff ffbf 	bl	8015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80153d2:	3401      	adds	r4, #1
 80153d4:	e7ef      	b.n	80153b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80153d6:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80153da:	9704      	str	r7, [sp, #16]
 80153dc:	1e7b      	subs	r3, r7, #1
 80153de:	9302      	str	r3, [sp, #8]
 80153e0:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80153e4:	2400      	movs	r4, #0
 80153e6:	4655      	mov	r5, sl
 80153e8:	9705      	str	r7, [sp, #20]
 80153ea:	4626      	mov	r6, r4
 80153ec:	9b05      	ldr	r3, [sp, #20]
 80153ee:	2b00      	cmp	r3, #0
 80153f0:	d078      	beq.n	80154e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80153f2:	9903      	ldr	r1, [sp, #12]
 80153f4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80153f8:	f7ff fe2d 	bl	8015056 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80153fc:	b360      	cbz	r0, 8015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80153fe:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015402:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8015406:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801540a:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801540e:	45e6      	cmp	lr, ip
 8015410:	db35      	blt.n	801547e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015412:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015416:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801541a:	4472      	add	r2, lr
 801541c:	4463      	add	r3, ip
 801541e:	b212      	sxth	r2, r2
 8015420:	b21b      	sxth	r3, r3
 8015422:	429a      	cmp	r2, r3
 8015424:	dc2b      	bgt.n	801547e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015426:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801542a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801542e:	fa1f f288 	uxth.w	r2, r8
 8015432:	4413      	add	r3, r2
 8015434:	b29b      	uxth	r3, r3
 8015436:	45c1      	cmp	r9, r8
 8015438:	fa0f fe83 	sxth.w	lr, r3
 801543c:	fa1f fc89 	uxth.w	ip, r9
 8015440:	db0f      	blt.n	8015462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015442:	eba3 030c 	sub.w	r3, r3, ip
 8015446:	1ac9      	subs	r1, r1, r3
 8015448:	b209      	sxth	r1, r1
 801544a:	2900      	cmp	r1, #0
 801544c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015450:	dd12      	ble.n	8015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015452:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015456:	4604      	mov	r4, r0
 8015458:	9b05      	ldr	r3, [sp, #20]
 801545a:	3b01      	subs	r3, #1
 801545c:	9305      	str	r3, [sp, #20]
 801545e:	3d08      	subs	r5, #8
 8015460:	e7c4      	b.n	80153ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8015462:	4461      	add	r1, ip
 8015464:	b209      	sxth	r1, r1
 8015466:	4571      	cmp	r1, lr
 8015468:	dc3a      	bgt.n	80154e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801546a:	eba2 020c 	sub.w	r2, r2, ip
 801546e:	b212      	sxth	r2, r2
 8015470:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015474:	2a00      	cmp	r2, #0
 8015476:	dcee      	bgt.n	8015456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015478:	b00f      	add	sp, #60	; 0x3c
 801547a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801547e:	45c1      	cmp	r9, r8
 8015480:	db2e      	blt.n	80154e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015482:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015486:	4499      	add	r9, r3
 8015488:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801548c:	4498      	add	r8, r3
 801548e:	fa0f f989 	sxth.w	r9, r9
 8015492:	fa0f f888 	sxth.w	r8, r8
 8015496:	45c1      	cmp	r9, r8
 8015498:	dc22      	bgt.n	80154e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801549a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801549e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80154a2:	fa1f f28c 	uxth.w	r2, ip
 80154a6:	4413      	add	r3, r2
 80154a8:	b29b      	uxth	r3, r3
 80154aa:	45e6      	cmp	lr, ip
 80154ac:	fa1f f88e 	uxth.w	r8, lr
 80154b0:	fa0f f983 	sxth.w	r9, r3
 80154b4:	db0a      	blt.n	80154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80154b6:	eba3 0308 	sub.w	r3, r3, r8
 80154ba:	1ac9      	subs	r1, r1, r3
 80154bc:	b209      	sxth	r1, r1
 80154be:	2900      	cmp	r1, #0
 80154c0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80154c4:	ddd8      	ble.n	8015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80154c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80154ca:	e7c4      	b.n	8015456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80154cc:	4441      	add	r1, r8
 80154ce:	b209      	sxth	r1, r1
 80154d0:	4549      	cmp	r1, r9
 80154d2:	dc05      	bgt.n	80154e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80154d4:	eba2 0208 	sub.w	r2, r2, r8
 80154d8:	b212      	sxth	r2, r2
 80154da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80154de:	e7c9      	b.n	8015474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80154e0:	4606      	mov	r6, r0
 80154e2:	e7b9      	b.n	8015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80154e4:	2c00      	cmp	r4, #0
 80154e6:	f47f af7d 	bne.w	80153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80154ea:	2e00      	cmp	r6, #0
 80154ec:	f000 81e1 	beq.w	80158b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80154f0:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80154f4:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80154f8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80154fc:	b2b9      	uxth	r1, r7
 80154fe:	9105      	str	r1, [sp, #20]
 8015500:	9805      	ldr	r0, [sp, #20]
 8015502:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015506:	4401      	add	r1, r0
 8015508:	b2b3      	uxth	r3, r6
 801550a:	b289      	uxth	r1, r1
 801550c:	441a      	add	r2, r3
 801550e:	9106      	str	r1, [sp, #24]
 8015510:	b292      	uxth	r2, r2
 8015512:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 8015516:	fa0f f882 	sxth.w	r8, r2
 801551a:	4655      	mov	r5, sl
 801551c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015520:	9b04      	ldr	r3, [sp, #16]
 8015522:	2b00      	cmp	r3, #0
 8015524:	d058      	beq.n	80155d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8015526:	9903      	ldr	r1, [sp, #12]
 8015528:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801552c:	f7ff fd93 	bl	8015056 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015530:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015534:	b1d8      	cbz	r0, 801556e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8015536:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801553a:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801553e:	4576      	cmp	r6, lr
 8015540:	dc26      	bgt.n	8015590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8015542:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8015546:	44f4      	add	ip, lr
 8015548:	fa0f fc8c 	sxth.w	ip, ip
 801554c:	45e0      	cmp	r8, ip
 801554e:	db1f      	blt.n	8015590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8015550:	428f      	cmp	r7, r1
 8015552:	fa1f fc81 	uxth.w	ip, r1
 8015556:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801555a:	dc0f      	bgt.n	801557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 801555c:	9806      	ldr	r0, [sp, #24]
 801555e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8015562:	eba0 0c0c 	sub.w	ip, r0, ip
 8015566:	eba1 010c 	sub.w	r1, r1, ip
 801556a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801556e:	4620      	mov	r0, r4
 8015570:	9904      	ldr	r1, [sp, #16]
 8015572:	3901      	subs	r1, #1
 8015574:	9104      	str	r1, [sp, #16]
 8015576:	3d08      	subs	r5, #8
 8015578:	4604      	mov	r4, r0
 801557a:	e7cf      	b.n	801551c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801557c:	4461      	add	r1, ip
 801557e:	b209      	sxth	r1, r1
 8015580:	4549      	cmp	r1, r9
 8015582:	dcf5      	bgt.n	8015570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8015584:	9905      	ldr	r1, [sp, #20]
 8015586:	eba1 0c0c 	sub.w	ip, r1, ip
 801558a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801558e:	e7ee      	b.n	801556e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8015590:	428f      	cmp	r7, r1
 8015592:	dced      	bgt.n	8015570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8015594:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8015598:	4461      	add	r1, ip
 801559a:	b209      	sxth	r1, r1
 801559c:	4589      	cmp	r9, r1
 801559e:	dbe7      	blt.n	8015570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80155a0:	4576      	cmp	r6, lr
 80155a2:	fa1f fc8e 	uxth.w	ip, lr
 80155a6:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80155aa:	dc08      	bgt.n	80155be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80155ac:	eba2 0c0c 	sub.w	ip, r2, ip
 80155b0:	eba1 010c 	sub.w	r1, r1, ip
 80155b4:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80155b8:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80155bc:	e7d7      	b.n	801556e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80155be:	4461      	add	r1, ip
 80155c0:	b209      	sxth	r1, r1
 80155c2:	4588      	cmp	r8, r1
 80155c4:	dbd4      	blt.n	8015570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80155c6:	eba3 0c0c 	sub.w	ip, r3, ip
 80155ca:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80155ce:	e7ce      	b.n	801556e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80155d0:	20002c82 	.word	0x20002c82
 80155d4:	20002c80 	.word	0x20002c80
 80155d8:	2c00      	cmp	r4, #0
 80155da:	f000 816a 	beq.w	80158b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80155de:	9b02      	ldr	r3, [sp, #8]
 80155e0:	3301      	adds	r3, #1
 80155e2:	f000 8166 	beq.w	80158b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80155e6:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80155ea:	4621      	mov	r1, r4
 80155ec:	9803      	ldr	r0, [sp, #12]
 80155ee:	f7ff fda5 	bl	801513c <_ZNK8touchgfx4Rect8includesERKS0_>
 80155f2:	b120      	cbz	r0, 80155fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80155f4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80155f8:	9801      	ldr	r0, [sp, #4]
 80155fa:	f7ff fea9 	bl	8015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80155fe:	9903      	ldr	r1, [sp, #12]
 8015600:	4620      	mov	r0, r4
 8015602:	f7ff fd28 	bl	8015056 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015606:	2800      	cmp	r0, #0
 8015608:	f000 809b 	beq.w	8015742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 801560c:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8015610:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8015614:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8015618:	9309      	str	r3, [sp, #36]	; 0x24
 801561a:	b281      	uxth	r1, r0
 801561c:	eb01 0c03 	add.w	ip, r1, r3
 8015620:	fa1f f98c 	uxth.w	r9, ip
 8015624:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015628:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801562c:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8015630:	b2ab      	uxth	r3, r5
 8015632:	eb03 040c 	add.w	r4, r3, ip
 8015636:	b2a4      	uxth	r4, r4
 8015638:	9405      	str	r4, [sp, #20]
 801563a:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 801563e:	9404      	str	r4, [sp, #16]
 8015640:	4285      	cmp	r5, r0
 8015642:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 8015646:	f340 809a 	ble.w	801577e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801564a:	1a5b      	subs	r3, r3, r1
 801564c:	b29b      	uxth	r3, r3
 801564e:	4596      	cmp	lr, r2
 8015650:	fa0f f589 	sxth.w	r5, r9
 8015654:	b21e      	sxth	r6, r3
 8015656:	dd2e      	ble.n	80156b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8015658:	9f02      	ldr	r7, [sp, #8]
 801565a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801565e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015662:	9f04      	ldr	r7, [sp, #16]
 8015664:	1b7f      	subs	r7, r7, r5
 8015666:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801566a:	fa1f fe8e 	uxth.w	lr, lr
 801566e:	b292      	uxth	r2, r2
 8015670:	ebae 0102 	sub.w	r1, lr, r2
 8015674:	4486      	add	lr, r0
 8015676:	442a      	add	r2, r5
 8015678:	b289      	uxth	r1, r1
 801567a:	fa0f fe8e 	sxth.w	lr, lr
 801567e:	b212      	sxth	r2, r2
 8015680:	b20c      	sxth	r4, r1
 8015682:	ebae 0202 	sub.w	r2, lr, r2
 8015686:	4367      	muls	r7, r4
 8015688:	4372      	muls	r2, r6
 801568a:	4297      	cmp	r7, r2
 801568c:	db09      	blt.n	80156a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 801568e:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8015692:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8015696:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801569a:	449c      	add	ip, r3
 801569c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80156a0:	e680      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156a2:	4401      	add	r1, r0
 80156a4:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80156a8:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80156ac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80156b0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80156b4:	e676      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156b6:	9f04      	ldr	r7, [sp, #16]
 80156b8:	42bd      	cmp	r5, r7
 80156ba:	da27      	bge.n	801570c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80156bc:	9902      	ldr	r1, [sp, #8]
 80156be:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80156c2:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80156c6:	eb04 010e 	add.w	r1, r4, lr
 80156ca:	fa1f f881 	uxth.w	r8, r1
 80156ce:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80156d2:	4411      	add	r1, r2
 80156d4:	eba1 0108 	sub.w	r1, r1, r8
 80156d8:	b289      	uxth	r1, r1
 80156da:	fa0f f988 	sxth.w	r9, r8
 80156de:	eba2 020e 	sub.w	r2, r2, lr
 80156e2:	fa0f f881 	sxth.w	r8, r1
 80156e6:	1b7f      	subs	r7, r7, r5
 80156e8:	4372      	muls	r2, r6
 80156ea:	fb08 f707 	mul.w	r7, r8, r7
 80156ee:	42ba      	cmp	r2, r7
 80156f0:	dc06      	bgt.n	8015700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80156f2:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80156f6:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80156fa:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80156fe:	e7ca      	b.n	8015696 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8015700:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8015704:	4421      	add	r1, r4
 8015706:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801570a:	e64b      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801570c:	9d05      	ldr	r5, [sp, #20]
 801570e:	eba9 0505 	sub.w	r5, r9, r5
 8015712:	b2ad      	uxth	r5, r5
 8015714:	2c06      	cmp	r4, #6
 8015716:	fa0f fe85 	sxth.w	lr, r5
 801571a:	d818      	bhi.n	801574e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 801571c:	9b04      	ldr	r3, [sp, #16]
 801571e:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8015722:	1c63      	adds	r3, r4, #1
 8015724:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8015728:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 801572c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8015730:	9b01      	ldr	r3, [sp, #4]
 8015732:	9d01      	ldr	r5, [sp, #4]
 8015734:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8015738:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 801573c:	805a      	strh	r2, [r3, #2]
 801573e:	809e      	strh	r6, [r3, #4]
 8015740:	80d9      	strh	r1, [r3, #6]
 8015742:	9b02      	ldr	r3, [sp, #8]
 8015744:	3b01      	subs	r3, #1
 8015746:	9302      	str	r3, [sp, #8]
 8015748:	f1aa 0a08 	sub.w	sl, sl, #8
 801574c:	e747      	b.n	80155de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801574e:	9a02      	ldr	r2, [sp, #8]
 8015750:	45b6      	cmp	lr, r6
 8015752:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015756:	db0d      	blt.n	8015774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8015758:	449c      	add	ip, r3
 801575a:	fa1f fc8c 	uxth.w	ip, ip
 801575e:	445a      	add	r2, fp
 8015760:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015764:	448c      	add	ip, r1
 8015766:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801576a:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801576e:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8015772:	e617      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015774:	445a      	add	r2, fp
 8015776:	44ac      	add	ip, r5
 8015778:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 801577c:	e78e      	b.n	801569c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801577e:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015782:	fa1f f18e 	uxth.w	r1, lr
 8015786:	eb01 0806 	add.w	r8, r1, r6
 801578a:	b293      	uxth	r3, r2
 801578c:	fa1f f888 	uxth.w	r8, r8
 8015790:	9306      	str	r3, [sp, #24]
 8015792:	fa0f f388 	sxth.w	r3, r8
 8015796:	9307      	str	r3, [sp, #28]
 8015798:	9f06      	ldr	r7, [sp, #24]
 801579a:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 801579e:	443b      	add	r3, r7
 80157a0:	b29b      	uxth	r3, r3
 80157a2:	4596      	cmp	lr, r2
 80157a4:	9308      	str	r3, [sp, #32]
 80157a6:	da25      	bge.n	80157f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80157a8:	9905      	ldr	r1, [sp, #20]
 80157aa:	eba3 0308 	sub.w	r3, r3, r8
 80157ae:	eba9 0401 	sub.w	r4, r9, r1
 80157b2:	b2a4      	uxth	r4, r4
 80157b4:	b29b      	uxth	r3, r3
 80157b6:	fa0f f984 	sxth.w	r9, r4
 80157ba:	b219      	sxth	r1, r3
 80157bc:	eba2 020e 	sub.w	r2, r2, lr
 80157c0:	1b40      	subs	r0, r0, r5
 80157c2:	fb09 f202 	mul.w	r2, r9, r2
 80157c6:	4348      	muls	r0, r1
 80157c8:	4282      	cmp	r2, r0
 80157ca:	9a02      	ldr	r2, [sp, #8]
 80157cc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80157d0:	445a      	add	r2, fp
 80157d2:	dc06      	bgt.n	80157e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80157d4:	9b07      	ldr	r3, [sp, #28]
 80157d6:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80157da:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80157de:	44a4      	add	ip, r4
 80157e0:	e75c      	b.n	801569c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80157e2:	9904      	ldr	r1, [sp, #16]
 80157e4:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80157e8:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80157ec:	4433      	add	r3, r6
 80157ee:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80157f2:	e5d7      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80157f4:	9f06      	ldr	r7, [sp, #24]
 80157f6:	9b04      	ldr	r3, [sp, #16]
 80157f8:	1bc9      	subs	r1, r1, r7
 80157fa:	fa0f f789 	sxth.w	r7, r9
 80157fe:	b289      	uxth	r1, r1
 8015800:	429f      	cmp	r7, r3
 8015802:	fa0f fe81 	sxth.w	lr, r1
 8015806:	dd22      	ble.n	801584e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8015808:	9a05      	ldr	r2, [sp, #20]
 801580a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801580e:	1b40      	subs	r0, r0, r5
 8015810:	eba9 0202 	sub.w	r2, r9, r2
 8015814:	9d07      	ldr	r5, [sp, #28]
 8015816:	b292      	uxth	r2, r2
 8015818:	eba5 0a03 	sub.w	sl, r5, r3
 801581c:	b214      	sxth	r4, r2
 801581e:	9b02      	ldr	r3, [sp, #8]
 8015820:	fb0e f000 	mul.w	r0, lr, r0
 8015824:	fb04 fa0a 	mul.w	sl, r4, sl
 8015828:	00db      	lsls	r3, r3, #3
 801582a:	4550      	cmp	r0, sl
 801582c:	445b      	add	r3, fp
 801582e:	db03      	blt.n	8015838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8015830:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8015834:	4494      	add	ip, r2
 8015836:	e731      	b.n	801569c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8015838:	9a04      	ldr	r2, [sp, #16]
 801583a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801583e:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8015842:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8015846:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801584a:	4431      	add	r1, r6
 801584c:	e75b      	b.n	8015706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 801584e:	9b08      	ldr	r3, [sp, #32]
 8015850:	eba3 0308 	sub.w	r3, r3, r8
 8015854:	b29b      	uxth	r3, r3
 8015856:	2c06      	cmp	r4, #6
 8015858:	b21d      	sxth	r5, r3
 801585a:	d813      	bhi.n	8015884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 801585c:	9b07      	ldr	r3, [sp, #28]
 801585e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8015862:	1c63      	adds	r3, r4, #1
 8015864:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8015868:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801586c:	9b01      	ldr	r3, [sp, #4]
 801586e:	9901      	ldr	r1, [sp, #4]
 8015870:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8015874:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8015878:	805a      	strh	r2, [r3, #2]
 801587a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801587c:	809a      	strh	r2, [r3, #4]
 801587e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015882:	e75e      	b.n	8015742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8015884:	9802      	ldr	r0, [sp, #8]
 8015886:	4575      	cmp	r5, lr
 8015888:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801588c:	db0d      	blt.n	80158aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 801588e:	4431      	add	r1, r6
 8015890:	9b06      	ldr	r3, [sp, #24]
 8015892:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015896:	b289      	uxth	r1, r1
 8015898:	4458      	add	r0, fp
 801589a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801589e:	4419      	add	r1, r3
 80158a0:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80158a4:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80158a8:	e57c      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80158aa:	4458      	add	r0, fp
 80158ac:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80158b0:	e79c      	b.n	80157ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80158b2:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80158b6:	2e07      	cmp	r6, #7
 80158b8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80158bc:	d812      	bhi.n	80158e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80158be:	1c75      	adds	r5, r6, #1
 80158c0:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80158c4:	9d01      	ldr	r5, [sp, #4]
 80158c6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80158ca:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80158ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80158d2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80158d6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80158da:	442c      	add	r4, r5
 80158dc:	8061      	strh	r1, [r4, #2]
 80158de:	80a2      	strh	r2, [r4, #4]
 80158e0:	80e3      	strh	r3, [r4, #6]
 80158e2:	e5c9      	b.n	8015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80158e4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80158e8:	3e01      	subs	r6, #1
 80158ea:	445c      	add	r4, fp
 80158ec:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80158f0:	f04f 37ff 	mov.w	r7, #4294967295
 80158f4:	2500      	movs	r5, #0
 80158f6:	9305      	str	r3, [sp, #20]
 80158f8:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80158fc:	9302      	str	r3, [sp, #8]
 80158fe:	1e72      	subs	r2, r6, #1
 8015900:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8015904:	9304      	str	r3, [sp, #16]
 8015906:	4691      	mov	r9, r2
 8015908:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 801590c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015910:	bf14      	ite	ne
 8015912:	9905      	ldrne	r1, [sp, #20]
 8015914:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015918:	6818      	ldr	r0, [r3, #0]
 801591a:	9207      	str	r2, [sp, #28]
 801591c:	bf18      	it	ne
 801591e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015922:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015926:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801592a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801592e:	9306      	str	r3, [sp, #24]
 8015930:	fb18 f801 	smulbb	r8, r8, r1
 8015934:	6859      	ldr	r1, [r3, #4]
 8015936:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801593a:	4671      	mov	r1, lr
 801593c:	a80c      	add	r0, sp, #48	; 0x30
 801593e:	f7ff fc23 	bl	8015188 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015942:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015946:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801594a:	9b04      	ldr	r3, [sp, #16]
 801594c:	9a02      	ldr	r2, [sp, #8]
 801594e:	fb10 f001 	smulbb	r0, r0, r1
 8015952:	fb02 8803 	mla	r8, r2, r3, r8
 8015956:	eba0 0108 	sub.w	r1, r0, r8
 801595a:	f04f 0c08 	mov.w	ip, #8
 801595e:	fb90 f0fc 	sdiv	r0, r0, ip
 8015962:	4288      	cmp	r0, r1
 8015964:	dc20      	bgt.n	80159a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8015966:	4551      	cmp	r1, sl
 8015968:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801596c:	da03      	bge.n	8015976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 801596e:	b1d9      	cbz	r1, 80159a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8015970:	468a      	mov	sl, r1
 8015972:	464f      	mov	r7, r9
 8015974:	4635      	mov	r5, r6
 8015976:	f109 39ff 	add.w	r9, r9, #4294967295
 801597a:	f119 0f02 	cmn.w	r9, #2
 801597e:	d1c5      	bne.n	801590c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015980:	4616      	mov	r6, r2
 8015982:	3201      	adds	r2, #1
 8015984:	f1a4 0408 	sub.w	r4, r4, #8
 8015988:	d1b6      	bne.n	80158f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801598a:	9b01      	ldr	r3, [sp, #4]
 801598c:	b2ac      	uxth	r4, r5
 801598e:	00ed      	lsls	r5, r5, #3
 8015990:	1958      	adds	r0, r3, r5
 8015992:	1c7b      	adds	r3, r7, #1
 8015994:	d10b      	bne.n	80159ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8015996:	4601      	mov	r1, r0
 8015998:	9803      	ldr	r0, [sp, #12]
 801599a:	f7ff fbf5 	bl	8015188 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801599e:	4621      	mov	r1, r4
 80159a0:	9801      	ldr	r0, [sp, #4]
 80159a2:	f7ff fcd5 	bl	8015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80159a6:	e4fd      	b.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80159a8:	464f      	mov	r7, r9
 80159aa:	4635      	mov	r5, r6
 80159ac:	e7ed      	b.n	801598a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80159ae:	9b01      	ldr	r3, [sp, #4]
 80159b0:	00ff      	lsls	r7, r7, #3
 80159b2:	19d9      	adds	r1, r3, r7
 80159b4:	f7ff fbe8 	bl	8015188 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80159b8:	9b03      	ldr	r3, [sp, #12]
 80159ba:	cb03      	ldmia	r3!, {r0, r1}
 80159bc:	445f      	add	r7, fp
 80159be:	445d      	add	r5, fp
 80159c0:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80159c4:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80159c8:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80159cc:	9b03      	ldr	r3, [sp, #12]
 80159ce:	6869      	ldr	r1, [r5, #4]
 80159d0:	c303      	stmia	r3!, {r0, r1}
 80159d2:	e7e4      	b.n	801599e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080159d4 <_ZN8touchgfx11Application10invalidateEv>:
 80159d4:	4b09      	ldr	r3, [pc, #36]	; (80159fc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80159d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80159da:	4b09      	ldr	r3, [pc, #36]	; (8015a00 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80159dc:	b082      	sub	sp, #8
 80159de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80159e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80159e6:	2100      	movs	r1, #0
 80159e8:	9100      	str	r1, [sp, #0]
 80159ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80159ee:	ab02      	add	r3, sp, #8
 80159f0:	e913 0006 	ldmdb	r3, {r1, r2}
 80159f4:	b002      	add	sp, #8
 80159f6:	f7ff bcbf 	b.w	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80159fa:	bf00      	nop
 80159fc:	20002c80 	.word	0x20002c80
 8015a00:	20002c82 	.word	0x20002c82

08015a04 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a08:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8015a0c:	b09b      	sub	sp, #108	; 0x6c
 8015a0e:	4604      	mov	r4, r0
 8015a10:	4630      	mov	r0, r6
 8015a12:	f7fa feae 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a16:	4605      	mov	r5, r0
 8015a18:	b940      	cbnz	r0, 8015a2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8015a1a:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015a1e:	4620      	mov	r0, r4
 8015a20:	f7ff fcaa 	bl	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8015a24:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8015a28:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015a2c:	4bc9      	ldr	r3, [pc, #804]	; (8015d54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015a2e:	681b      	ldr	r3, [r3, #0]
 8015a30:	2b00      	cmp	r3, #0
 8015a32:	d03e      	beq.n	8015ab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8015a34:	4dc8      	ldr	r5, [pc, #800]	; (8015d58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015a36:	4628      	mov	r0, r5
 8015a38:	f7fa fe9b 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a3c:	4606      	mov	r6, r0
 8015a3e:	2800      	cmp	r0, #0
 8015a40:	d137      	bne.n	8015ab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8015a42:	4628      	mov	r0, r5
 8015a44:	f7ff f9aa 	bl	8014d9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015a48:	6829      	ldr	r1, [r5, #0]
 8015a4a:	686a      	ldr	r2, [r5, #4]
 8015a4c:	4620      	mov	r0, r4
 8015a4e:	f7ff fc93 	bl	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8015a52:	802e      	strh	r6, [r5, #0]
 8015a54:	806e      	strh	r6, [r5, #2]
 8015a56:	80ae      	strh	r6, [r5, #4]
 8015a58:	80ee      	strh	r6, [r5, #6]
 8015a5a:	ae09      	add	r6, sp, #36	; 0x24
 8015a5c:	4630      	mov	r0, r6
 8015a5e:	f7ff fc26 	bl	80152ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015a62:	4abe      	ldr	r2, [pc, #760]	; (8015d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015a64:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8015a68:	8815      	ldrh	r5, [r2, #0]
 8015a6a:	9202      	str	r2, [sp, #8]
 8015a6c:	462b      	mov	r3, r5
 8015a6e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8015a72:	429f      	cmp	r7, r3
 8015a74:	d924      	bls.n	8015ac0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8015a76:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015a7a:	2907      	cmp	r1, #7
 8015a7c:	d816      	bhi.n	8015aac <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8015a7e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015a82:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8015a86:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8015a8a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015a8e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015a92:	1c4a      	adds	r2, r1, #1
 8015a94:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015a98:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8015a9c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8015aa0:	f8a2 9002 	strh.w	r9, [r2, #2]
 8015aa4:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015aa8:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015aac:	3301      	adds	r3, #1
 8015aae:	b29b      	uxth	r3, r3
 8015ab0:	e7df      	b.n	8015a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8015ab2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8015ab6:	2b00      	cmp	r3, #0
 8015ab8:	d1cf      	bne.n	8015a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8015aba:	b01b      	add	sp, #108	; 0x6c
 8015abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ac0:	462f      	mov	r7, r5
 8015ac2:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8015ac6:	42bb      	cmp	r3, r7
 8015ac8:	d90b      	bls.n	8015ae2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8015aca:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8015ace:	4620      	mov	r0, r4
 8015ad0:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8015ad4:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8015ad8:	3701      	adds	r7, #1
 8015ada:	f7ff fc4d 	bl	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8015ade:	b2bf      	uxth	r7, r7
 8015ae0:	e7ef      	b.n	8015ac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8015ae2:	4a9f      	ldr	r2, [pc, #636]	; (8015d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015ae4:	6813      	ldr	r3, [r2, #0]
 8015ae6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015aea:	2b01      	cmp	r3, #1
 8015aec:	4690      	mov	r8, r2
 8015aee:	f040 80e6 	bne.w	8015cbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8015af2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8015af6:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8015afa:	4629      	mov	r1, r5
 8015afc:	33aa      	adds	r3, #170	; 0xaa
 8015afe:	2500      	movs	r5, #0
 8015b00:	428f      	cmp	r7, r1
 8015b02:	f103 0308 	add.w	r3, r3, #8
 8015b06:	dd0a      	ble.n	8015b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8015b08:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8015b0c:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8015b10:	4402      	add	r2, r0
 8015b12:	b212      	sxth	r2, r2
 8015b14:	4295      	cmp	r5, r2
 8015b16:	bfb8      	it	lt
 8015b18:	4615      	movlt	r5, r2
 8015b1a:	3101      	adds	r1, #1
 8015b1c:	e7f0      	b.n	8015b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8015b1e:	4b91      	ldr	r3, [pc, #580]	; (8015d64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015b20:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8015d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8015b24:	881b      	ldrh	r3, [r3, #0]
 8015b26:	2b0f      	cmp	r3, #15
 8015b28:	bf88      	it	hi
 8015b2a:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8015b2e:	f04f 0300 	mov.w	r3, #0
 8015b32:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015b36:	bf98      	it	ls
 8015b38:	f04f 0a01 	movls.w	sl, #1
 8015b3c:	46d8      	mov	r8, fp
 8015b3e:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8015b42:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8015b46:	4438      	add	r0, r7
 8015b48:	b207      	sxth	r7, r0
 8015b4a:	f8db 0000 	ldr.w	r0, [fp]
 8015b4e:	42bd      	cmp	r5, r7
 8015b50:	6803      	ldr	r3, [r0, #0]
 8015b52:	f340 8084 	ble.w	8015c5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015b56:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015b5a:	4798      	blx	r3
 8015b5c:	eb07 030a 	add.w	r3, r7, sl
 8015b60:	4298      	cmp	r0, r3
 8015b62:	da07      	bge.n	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8015b64:	4285      	cmp	r5, r0
 8015b66:	dd05      	ble.n	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8015b68:	4287      	cmp	r7, r0
 8015b6a:	dd6d      	ble.n	8015c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015b6c:	2f00      	cmp	r7, #0
 8015b6e:	dd6b      	ble.n	8015c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015b70:	4628      	mov	r0, r5
 8015b72:	e004      	b.n	8015b7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8015b74:	4287      	cmp	r7, r0
 8015b76:	dcfb      	bgt.n	8015b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8015b78:	42a8      	cmp	r0, r5
 8015b7a:	bfa8      	it	ge
 8015b7c:	4628      	movge	r0, r5
 8015b7e:	4b7a      	ldr	r3, [pc, #488]	; (8015d68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8015b80:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015b84:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015b88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015b8c:	9b02      	ldr	r3, [sp, #8]
 8015b8e:	1bc0      	subs	r0, r0, r7
 8015b90:	2200      	movs	r2, #0
 8015b92:	881f      	ldrh	r7, [r3, #0]
 8015b94:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015b98:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015b9c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8015ba0:	42bb      	cmp	r3, r7
 8015ba2:	d9cc      	bls.n	8015b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8015ba4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015ba8:	ab07      	add	r3, sp, #28
 8015baa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8015bae:	6851      	ldr	r1, [r2, #4]
 8015bb0:	c303      	stmia	r3!, {r0, r1}
 8015bb2:	a905      	add	r1, sp, #20
 8015bb4:	a807      	add	r0, sp, #28
 8015bb6:	f7ff fa4e 	bl	8015056 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015bba:	2800      	cmp	r0, #0
 8015bbc:	d04c      	beq.n	8015c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015bbe:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015bc2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015bc6:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8015bca:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015bce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015bd2:	9303      	str	r3, [sp, #12]
 8015bd4:	4686      	mov	lr, r0
 8015bd6:	4290      	cmp	r0, r2
 8015bd8:	4448      	add	r0, r9
 8015bda:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8015bde:	bfb8      	it	lt
 8015be0:	4696      	movlt	lr, r2
 8015be2:	444a      	add	r2, r9
 8015be4:	4299      	cmp	r1, r3
 8015be6:	b280      	uxth	r0, r0
 8015be8:	b292      	uxth	r2, r2
 8015bea:	468c      	mov	ip, r1
 8015bec:	fa0f f982 	sxth.w	r9, r2
 8015bf0:	bfb8      	it	lt
 8015bf2:	469c      	movlt	ip, r3
 8015bf4:	b203      	sxth	r3, r0
 8015bf6:	454b      	cmp	r3, r9
 8015bf8:	bfb8      	it	lt
 8015bfa:	4602      	movlt	r2, r0
 8015bfc:	eba2 020e 	sub.w	r2, r2, lr
 8015c00:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015c04:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015c08:	9b03      	ldr	r3, [sp, #12]
 8015c0a:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015c0e:	4411      	add	r1, r2
 8015c10:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015c14:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015c18:	4413      	add	r3, r2
 8015c1a:	b289      	uxth	r1, r1
 8015c1c:	b29b      	uxth	r3, r3
 8015c1e:	b208      	sxth	r0, r1
 8015c20:	b21a      	sxth	r2, r3
 8015c22:	4290      	cmp	r0, r2
 8015c24:	bfb8      	it	lt
 8015c26:	460b      	movlt	r3, r1
 8015c28:	eba3 030c 	sub.w	r3, r3, ip
 8015c2c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015c30:	a807      	add	r0, sp, #28
 8015c32:	f7fa fd9e 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c36:	b920      	cbnz	r0, 8015c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015c38:	6823      	ldr	r3, [r4, #0]
 8015c3a:	a907      	add	r1, sp, #28
 8015c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015c3e:	4620      	mov	r0, r4
 8015c40:	4798      	blx	r3
 8015c42:	3701      	adds	r7, #1
 8015c44:	b2bf      	uxth	r7, r7
 8015c46:	e7a9      	b.n	8015b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015c48:	f8d8 0000 	ldr.w	r0, [r8]
 8015c4c:	6803      	ldr	r3, [r0, #0]
 8015c4e:	2101      	movs	r1, #1
 8015c50:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015c54:	4798      	blx	r3
 8015c56:	e772      	b.n	8015b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8015c58:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015c5c:	e7e8      	b.n	8015c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015c5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015c60:	4798      	blx	r3
 8015c62:	4b42      	ldr	r3, [pc, #264]	; (8015d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8015c64:	781b      	ldrb	r3, [r3, #0]
 8015c66:	2b00      	cmp	r3, #0
 8015c68:	f43f af27 	beq.w	8015aba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8015c6c:	2300      	movs	r3, #0
 8015c6e:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8015c72:	9b02      	ldr	r3, [sp, #8]
 8015c74:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015c78:	881b      	ldrh	r3, [r3, #0]
 8015c7a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8015c7e:	429d      	cmp	r5, r3
 8015c80:	f67f af1b 	bls.w	8015aba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8015c84:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8015c88:	2907      	cmp	r1, #7
 8015c8a:	d815      	bhi.n	8015cb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8015c8c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8015c90:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8015c94:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8015c98:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8015c9c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8015ca0:	1c4a      	adds	r2, r1, #1
 8015ca2:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8015ca6:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015caa:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8015cae:	f8a2 e002 	strh.w	lr, [r2, #2]
 8015cb2:	f8a2 c004 	strh.w	ip, [r2, #4]
 8015cb6:	80d7      	strh	r7, [r2, #6]
 8015cb8:	3301      	adds	r3, #1
 8015cba:	b29b      	uxth	r3, r3
 8015cbc:	e7df      	b.n	8015c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8015cbe:	2b02      	cmp	r3, #2
 8015cc0:	f040 8136 	bne.w	8015f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8015cc4:	4b2a      	ldr	r3, [pc, #168]	; (8015d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8015cc6:	781b      	ldrb	r3, [r3, #0]
 8015cc8:	2b01      	cmp	r3, #1
 8015cca:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8015cce:	f000 809c 	beq.w	8015e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8015cd2:	9b02      	ldr	r3, [sp, #8]
 8015cd4:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8015cd8:	f8b3 b000 	ldrh.w	fp, [r3]
 8015cdc:	f10b 0b01 	add.w	fp, fp, #1
 8015ce0:	fa1f fb8b 	uxth.w	fp, fp
 8015ce4:	2a00      	cmp	r2, #0
 8015ce6:	d0bc      	beq.n	8015c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015ce8:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8015cec:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8015cf0:	441d      	add	r5, r3
 8015cf2:	b22d      	sxth	r5, r5
 8015cf4:	4659      	mov	r1, fp
 8015cf6:	f04f 0800 	mov.w	r8, #0
 8015cfa:	b28b      	uxth	r3, r1
 8015cfc:	429a      	cmp	r2, r3
 8015cfe:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8015d02:	f240 80c1 	bls.w	8015e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8015d06:	4427      	add	r7, r4
 8015d08:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8015d0c:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8015d10:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8015d14:	4563      	cmp	r3, ip
 8015d16:	4608      	mov	r0, r1
 8015d18:	f340 80a3 	ble.w	8015e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8015d1c:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8015d20:	4465      	add	r5, ip
 8015d22:	b22d      	sxth	r5, r5
 8015d24:	429d      	cmp	r5, r3
 8015d26:	bfa8      	it	ge
 8015d28:	461d      	movge	r5, r3
 8015d2a:	3101      	adds	r1, #1
 8015d2c:	4680      	mov	r8, r0
 8015d2e:	e7e4      	b.n	8015cfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8015d30:	d10b      	bne.n	8015d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8015d32:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8015d36:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8015d3a:	458c      	cmp	ip, r1
 8015d3c:	bfb4      	ite	lt
 8015d3e:	469c      	movlt	ip, r3
 8015d40:	46bc      	movge	ip, r7
 8015d42:	4572      	cmp	r2, lr
 8015d44:	bfb8      	it	lt
 8015d46:	4672      	movlt	r2, lr
 8015d48:	e088      	b.n	8015e5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8015d4a:	428a      	cmp	r2, r1
 8015d4c:	bfb8      	it	lt
 8015d4e:	460a      	movlt	r2, r1
 8015d50:	46bc      	mov	ip, r7
 8015d52:	e083      	b.n	8015e5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8015d54:	20002cc4 	.word	0x20002cc4
 8015d58:	20002cd0 	.word	0x20002cd0
 8015d5c:	20000174 	.word	0x20000174
 8015d60:	20002c8c 	.word	0x20002c8c
 8015d64:	20002c82 	.word	0x20002c82
 8015d68:	20002c80 	.word	0x20002c80
 8015d6c:	20002c8a 	.word	0x20002c8a
 8015d70:	20002c84 	.word	0x20002c84
 8015d74:	1961      	adds	r1, r4, r5
 8015d76:	ab07      	add	r3, sp, #28
 8015d78:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8015d7c:	6849      	ldr	r1, [r1, #4]
 8015d7e:	c303      	stmia	r3!, {r0, r1}
 8015d80:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015d84:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015d88:	2b13      	cmp	r3, #19
 8015d8a:	bfd8      	it	le
 8015d8c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015d90:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015d94:	440b      	add	r3, r1
 8015d96:	1a9b      	subs	r3, r3, r2
 8015d98:	a807      	add	r0, sp, #28
 8015d9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015d9e:	f7ff f817 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015da2:	a807      	add	r0, sp, #28
 8015da4:	f7fa fce5 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015da8:	bb78      	cbnz	r0, 8015e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8015daa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015dae:	f8d8 0000 	ldr.w	r0, [r8]
 8015db2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015db6:	f8d0 e000 	ldr.w	lr, [r0]
 8015dba:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015dbe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015dc2:	f1bc 0f14 	cmp.w	ip, #20
 8015dc6:	bfa8      	it	ge
 8015dc8:	f04f 0c14 	movge.w	ip, #20
 8015dcc:	fa1f fc8c 	uxth.w	ip, ip
 8015dd0:	f8cd c000 	str.w	ip, [sp]
 8015dd4:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8015dd8:	47d0      	blx	sl
 8015dda:	4682      	mov	sl, r0
 8015ddc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015de0:	a807      	add	r0, sp, #28
 8015de2:	f7fe ffdb 	bl	8014d9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015de6:	6823      	ldr	r3, [r4, #0]
 8015de8:	4425      	add	r5, r4
 8015dea:	4620      	mov	r0, r4
 8015dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015dee:	a907      	add	r1, sp, #28
 8015df0:	4798      	blx	r3
 8015df2:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8015df6:	eba0 000a 	sub.w	r0, r0, sl
 8015dfa:	b200      	sxth	r0, r0
 8015dfc:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8015e00:	b918      	cbnz	r0, 8015e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8015e02:	b2b9      	uxth	r1, r7
 8015e04:	4648      	mov	r0, r9
 8015e06:	f7ff faa3 	bl	8015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e0a:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8015e0e:	f1bb 0f00 	cmp.w	fp, #0
 8015e12:	f43f af26 	beq.w	8015c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015e16:	9b02      	ldr	r3, [sp, #8]
 8015e18:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8015e1c:	881b      	ldrh	r3, [r3, #0]
 8015e1e:	3301      	adds	r3, #1
 8015e20:	b29b      	uxth	r3, r3
 8015e22:	2700      	movs	r7, #0
 8015e24:	b299      	uxth	r1, r3
 8015e26:	458b      	cmp	fp, r1
 8015e28:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8015e2c:	d9a2      	bls.n	8015d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8015e2e:	4425      	add	r5, r4
 8015e30:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8015e34:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8015e38:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8015e3c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8015e40:	4408      	add	r0, r1
 8015e42:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8015e46:	4471      	add	r1, lr
 8015e48:	b200      	sxth	r0, r0
 8015e4a:	b209      	sxth	r1, r1
 8015e4c:	4288      	cmp	r0, r1
 8015e4e:	469c      	mov	ip, r3
 8015e50:	f6bf af6e 	bge.w	8015d30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8015e54:	4586      	cmp	lr, r0
 8015e56:	4672      	mov	r2, lr
 8015e58:	bfb8      	it	lt
 8015e5a:	4602      	movlt	r2, r0
 8015e5c:	3301      	adds	r3, #1
 8015e5e:	4667      	mov	r7, ip
 8015e60:	e7e0      	b.n	8015e24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8015e62:	d10c      	bne.n	8015e7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8015e64:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8015e68:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8015e6c:	4287      	cmp	r7, r0
 8015e6e:	bfb4      	ite	lt
 8015e70:	4608      	movlt	r0, r1
 8015e72:	4640      	movge	r0, r8
 8015e74:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8015e78:	443b      	add	r3, r7
 8015e7a:	b21b      	sxth	r3, r3
 8015e7c:	e752      	b.n	8015d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8015e7e:	4565      	cmp	r5, ip
 8015e80:	bfa8      	it	ge
 8015e82:	4665      	movge	r5, ip
 8015e84:	4640      	mov	r0, r8
 8015e86:	e750      	b.n	8015d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8015e88:	eb09 0007 	add.w	r0, r9, r7
 8015e8c:	4427      	add	r7, r4
 8015e8e:	9203      	str	r2, [sp, #12]
 8015e90:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8015e94:	f1ba 0f13 	cmp.w	sl, #19
 8015e98:	bfde      	ittt	le
 8015e9a:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8015e9e:	4455      	addle	r5, sl
 8015ea0:	b22d      	sxthle	r5, r5
 8015ea2:	f7fa fc66 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ea6:	9a03      	ldr	r2, [sp, #12]
 8015ea8:	2800      	cmp	r0, #0
 8015eaa:	f47f af1b 	bne.w	8015ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8015eae:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8015eb2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015eb6:	482a      	ldr	r0, [pc, #168]	; (8015f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8015eb8:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8015ebc:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8015ec0:	6800      	ldr	r0, [r0, #0]
 8015ec2:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015ec6:	1aad      	subs	r5, r5, r2
 8015ec8:	2d14      	cmp	r5, #20
 8015eca:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015ece:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015ed2:	bfa8      	it	ge
 8015ed4:	2514      	movge	r5, #20
 8015ed6:	f8d0 c000 	ldr.w	ip, [r0]
 8015eda:	b2ad      	uxth	r5, r5
 8015edc:	fa1f fa8a 	uxth.w	sl, sl
 8015ee0:	4555      	cmp	r5, sl
 8015ee2:	bf94      	ite	ls
 8015ee4:	9500      	strls	r5, [sp, #0]
 8015ee6:	f8cd a000 	strhi.w	sl, [sp]
 8015eea:	b292      	uxth	r2, r2
 8015eec:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8015ef0:	b29b      	uxth	r3, r3
 8015ef2:	b289      	uxth	r1, r1
 8015ef4:	47a8      	blx	r5
 8015ef6:	6823      	ldr	r3, [r4, #0]
 8015ef8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015efe:	a907      	add	r1, sp, #28
 8015f00:	4620      	mov	r0, r4
 8015f02:	4798      	blx	r3
 8015f04:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015f08:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8015f0c:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8015f10:	1a5b      	subs	r3, r3, r1
 8015f12:	440a      	add	r2, r1
 8015f14:	b21b      	sxth	r3, r3
 8015f16:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8015f1a:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8015f1e:	2b00      	cmp	r3, #0
 8015f20:	f47f aed7 	bne.w	8015cd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8015f24:	fa1f f188 	uxth.w	r1, r8
 8015f28:	4648      	mov	r0, r9
 8015f2a:	f7ff fa11 	bl	8015350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015f2e:	e6d0      	b.n	8015cd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8015f30:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8015f34:	42ab      	cmp	r3, r5
 8015f36:	f67f ae94 	bls.w	8015c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015f3a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8015f3e:	ab07      	add	r3, sp, #28
 8015f40:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8015f44:	6851      	ldr	r1, [r2, #4]
 8015f46:	c303      	stmia	r3!, {r0, r1}
 8015f48:	a807      	add	r0, sp, #28
 8015f4a:	f7fa fc12 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f4e:	b920      	cbnz	r0, 8015f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8015f50:	6823      	ldr	r3, [r4, #0]
 8015f52:	a907      	add	r1, sp, #28
 8015f54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015f56:	4620      	mov	r0, r4
 8015f58:	4798      	blx	r3
 8015f5a:	3501      	adds	r5, #1
 8015f5c:	b2ad      	uxth	r5, r5
 8015f5e:	e7e7      	b.n	8015f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8015f60:	20002c8c 	.word	0x20002c8c

08015f64 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015f64:	4b03      	ldr	r3, [pc, #12]	; (8015f74 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015f66:	2200      	movs	r2, #0
 8015f68:	801a      	strh	r2, [r3, #0]
 8015f6a:	805a      	strh	r2, [r3, #2]
 8015f6c:	809a      	strh	r2, [r3, #4]
 8015f6e:	80da      	strh	r2, [r3, #6]
 8015f70:	4770      	bx	lr
 8015f72:	bf00      	nop
 8015f74:	20002cd0 	.word	0x20002cd0

08015f78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f7c:	4606      	mov	r6, r0
 8015f7e:	b09d      	sub	sp, #116	; 0x74
 8015f80:	a803      	add	r0, sp, #12
 8015f82:	4614      	mov	r4, r2
 8015f84:	468a      	mov	sl, r1
 8015f86:	461d      	mov	r5, r3
 8015f88:	f000 fe78 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 8015f8c:	6833      	ldr	r3, [r6, #0]
 8015f8e:	4630      	mov	r0, r6
 8015f90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f92:	4798      	blx	r3
 8015f94:	6833      	ldr	r3, [r6, #0]
 8015f96:	4607      	mov	r7, r0
 8015f98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015f9a:	4630      	mov	r0, r6
 8015f9c:	4798      	blx	r3
 8015f9e:	462a      	mov	r2, r5
 8015fa0:	9000      	str	r0, [sp, #0]
 8015fa2:	4621      	mov	r1, r4
 8015fa4:	463b      	mov	r3, r7
 8015fa6:	a803      	add	r0, sp, #12
 8015fa8:	f000 fec3 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015fac:	2500      	movs	r5, #0
 8015fae:	462c      	mov	r4, r5
 8015fb0:	46a9      	mov	r9, r5
 8015fb2:	46a8      	mov	r8, r5
 8015fb4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015fb8:	2300      	movs	r3, #0
 8015fba:	9302      	str	r3, [sp, #8]
 8015fbc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015fc0:	429c      	cmp	r4, r3
 8015fc2:	d002      	beq.n	8015fca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015fc4:	455c      	cmp	r4, fp
 8015fc6:	bf18      	it	ne
 8015fc8:	4625      	movne	r5, r4
 8015fca:	ab02      	add	r3, sp, #8
 8015fcc:	4632      	mov	r2, r6
 8015fce:	4651      	mov	r1, sl
 8015fd0:	a803      	add	r0, sp, #12
 8015fd2:	f001 f9b1 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015fd6:	4604      	mov	r4, r0
 8015fd8:	b108      	cbz	r0, 8015fde <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015fda:	280a      	cmp	r0, #10
 8015fdc:	d10a      	bne.n	8015ff4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015fde:	45c1      	cmp	r9, r8
 8015fe0:	bf38      	it	cc
 8015fe2:	46c1      	movcc	r9, r8
 8015fe4:	f04f 0800 	mov.w	r8, #0
 8015fe8:	2c00      	cmp	r4, #0
 8015fea:	d1e5      	bne.n	8015fb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015fec:	4648      	mov	r0, r9
 8015fee:	b01d      	add	sp, #116	; 0x74
 8015ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ff4:	9a02      	ldr	r2, [sp, #8]
 8015ff6:	2a00      	cmp	r2, #0
 8015ff8:	d0de      	beq.n	8015fb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015ffa:	7b57      	ldrb	r7, [r2, #13]
 8015ffc:	6833      	ldr	r3, [r6, #0]
 8015ffe:	8894      	ldrh	r4, [r2, #4]
 8016000:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016002:	007f      	lsls	r7, r7, #1
 8016004:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016008:	7a97      	ldrb	r7, [r2, #10]
 801600a:	4629      	mov	r1, r5
 801600c:	4307      	orrs	r7, r0
 801600e:	4630      	mov	r0, r6
 8016010:	4798      	blx	r3
 8016012:	4438      	add	r0, r7
 8016014:	4480      	add	r8, r0
 8016016:	fa1f f888 	uxth.w	r8, r8
 801601a:	e7e5      	b.n	8015fe8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801601c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801601c:	b508      	push	{r3, lr}
 801601e:	6803      	ldr	r3, [r0, #0]
 8016020:	68db      	ldr	r3, [r3, #12]
 8016022:	4798      	blx	r3
 8016024:	b128      	cbz	r0, 8016032 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016026:	7b43      	ldrb	r3, [r0, #13]
 8016028:	7a80      	ldrb	r0, [r0, #10]
 801602a:	005b      	lsls	r3, r3, #1
 801602c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016030:	4318      	orrs	r0, r3
 8016032:	bd08      	pop	{r3, pc}

08016034 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016034:	b40e      	push	{r1, r2, r3}
 8016036:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016038:	b09e      	sub	sp, #120	; 0x78
 801603a:	ab23      	add	r3, sp, #140	; 0x8c
 801603c:	4605      	mov	r5, r0
 801603e:	f853 4b04 	ldr.w	r4, [r3], #4
 8016042:	9303      	str	r3, [sp, #12]
 8016044:	a805      	add	r0, sp, #20
 8016046:	f000 fe19 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 801604a:	682b      	ldr	r3, [r5, #0]
 801604c:	4628      	mov	r0, r5
 801604e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016050:	4798      	blx	r3
 8016052:	682b      	ldr	r3, [r5, #0]
 8016054:	4606      	mov	r6, r0
 8016056:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016058:	4628      	mov	r0, r5
 801605a:	4798      	blx	r3
 801605c:	4633      	mov	r3, r6
 801605e:	ae1e      	add	r6, sp, #120	; 0x78
 8016060:	4621      	mov	r1, r4
 8016062:	9000      	str	r0, [sp, #0]
 8016064:	9a03      	ldr	r2, [sp, #12]
 8016066:	2400      	movs	r4, #0
 8016068:	a805      	add	r0, sp, #20
 801606a:	f000 fe62 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801606e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016072:	462a      	mov	r2, r5
 8016074:	4633      	mov	r3, r6
 8016076:	4621      	mov	r1, r4
 8016078:	a805      	add	r0, sp, #20
 801607a:	f001 f95d 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801607e:	b1f0      	cbz	r0, 80160be <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016080:	280a      	cmp	r0, #10
 8016082:	d018      	beq.n	80160b6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016084:	9f04      	ldr	r7, [sp, #16]
 8016086:	b1b7      	cbz	r7, 80160b6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016088:	7b78      	ldrb	r0, [r7, #13]
 801608a:	7a3b      	ldrb	r3, [r7, #8]
 801608c:	88aa      	ldrh	r2, [r5, #4]
 801608e:	00c1      	lsls	r1, r0, #3
 8016090:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016094:	4319      	orrs	r1, r3
 8016096:	0643      	lsls	r3, r0, #25
 8016098:	bf44      	itt	mi
 801609a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801609e:	b219      	sxthmi	r1, r3
 80160a0:	0100      	lsls	r0, r0, #4
 80160a2:	79fb      	ldrb	r3, [r7, #7]
 80160a4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80160a8:	4303      	orrs	r3, r0
 80160aa:	4413      	add	r3, r2
 80160ac:	1a5b      	subs	r3, r3, r1
 80160ae:	b29b      	uxth	r3, r3
 80160b0:	42a3      	cmp	r3, r4
 80160b2:	bfc8      	it	gt
 80160b4:	b21c      	sxthgt	r4, r3
 80160b6:	4633      	mov	r3, r6
 80160b8:	462a      	mov	r2, r5
 80160ba:	2100      	movs	r1, #0
 80160bc:	e7dc      	b.n	8016078 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80160be:	b2a0      	uxth	r0, r4
 80160c0:	b01e      	add	sp, #120	; 0x78
 80160c2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80160c6:	b003      	add	sp, #12
 80160c8:	4770      	bx	lr

080160ca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80160ca:	b40e      	push	{r1, r2, r3}
 80160cc:	b570      	push	{r4, r5, r6, lr}
 80160ce:	b09d      	sub	sp, #116	; 0x74
 80160d0:	ab21      	add	r3, sp, #132	; 0x84
 80160d2:	4604      	mov	r4, r0
 80160d4:	f853 5b04 	ldr.w	r5, [r3], #4
 80160d8:	9302      	str	r3, [sp, #8]
 80160da:	a803      	add	r0, sp, #12
 80160dc:	f000 fdce 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 80160e0:	6823      	ldr	r3, [r4, #0]
 80160e2:	4620      	mov	r0, r4
 80160e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80160e6:	4798      	blx	r3
 80160e8:	6823      	ldr	r3, [r4, #0]
 80160ea:	4606      	mov	r6, r0
 80160ec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80160ee:	4620      	mov	r0, r4
 80160f0:	4798      	blx	r3
 80160f2:	4633      	mov	r3, r6
 80160f4:	9000      	str	r0, [sp, #0]
 80160f6:	9a02      	ldr	r2, [sp, #8]
 80160f8:	4629      	mov	r1, r5
 80160fa:	a803      	add	r0, sp, #12
 80160fc:	f000 fe19 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016100:	a803      	add	r0, sp, #12
 8016102:	f001 f9e7 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016106:	2401      	movs	r4, #1
 8016108:	b2a3      	uxth	r3, r4
 801610a:	b140      	cbz	r0, 801611e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801610c:	280a      	cmp	r0, #10
 801610e:	bf08      	it	eq
 8016110:	3301      	addeq	r3, #1
 8016112:	a803      	add	r0, sp, #12
 8016114:	bf08      	it	eq
 8016116:	b21c      	sxtheq	r4, r3
 8016118:	f001 f9dc 	bl	80174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801611c:	e7f4      	b.n	8016108 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801611e:	4618      	mov	r0, r3
 8016120:	b01d      	add	sp, #116	; 0x74
 8016122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016126:	b003      	add	sp, #12
 8016128:	4770      	bx	lr

0801612a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801612a:	b40e      	push	{r1, r2, r3}
 801612c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801612e:	b09e      	sub	sp, #120	; 0x78
 8016130:	ab23      	add	r3, sp, #140	; 0x8c
 8016132:	4604      	mov	r4, r0
 8016134:	f853 5b04 	ldr.w	r5, [r3], #4
 8016138:	9303      	str	r3, [sp, #12]
 801613a:	a805      	add	r0, sp, #20
 801613c:	f000 fd9e 	bl	8016c7c <_ZN8touchgfx12TextProviderC1Ev>
 8016140:	6823      	ldr	r3, [r4, #0]
 8016142:	4620      	mov	r0, r4
 8016144:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016146:	4798      	blx	r3
 8016148:	6823      	ldr	r3, [r4, #0]
 801614a:	4606      	mov	r6, r0
 801614c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801614e:	4620      	mov	r0, r4
 8016150:	4798      	blx	r3
 8016152:	4633      	mov	r3, r6
 8016154:	4629      	mov	r1, r5
 8016156:	9000      	str	r0, [sp, #0]
 8016158:	9a03      	ldr	r2, [sp, #12]
 801615a:	a805      	add	r0, sp, #20
 801615c:	ad1e      	add	r5, sp, #120	; 0x78
 801615e:	f000 fde8 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016162:	2100      	movs	r1, #0
 8016164:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016168:	4622      	mov	r2, r4
 801616a:	462b      	mov	r3, r5
 801616c:	a805      	add	r0, sp, #20
 801616e:	f001 f8e3 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016172:	26ff      	movs	r6, #255	; 0xff
 8016174:	b1d8      	cbz	r0, 80161ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8016176:	280a      	cmp	r0, #10
 8016178:	d012      	beq.n	80161a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801617a:	9804      	ldr	r0, [sp, #16]
 801617c:	b180      	cbz	r0, 80161a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801617e:	7b47      	ldrb	r7, [r0, #13]
 8016180:	7922      	ldrb	r2, [r4, #4]
 8016182:	00fb      	lsls	r3, r7, #3
 8016184:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016188:	7a03      	ldrb	r3, [r0, #8]
 801618a:	430b      	orrs	r3, r1
 801618c:	0679      	lsls	r1, r7, #25
 801618e:	bf44      	itt	mi
 8016190:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016194:	b21b      	sxthmi	r3, r3
 8016196:	1ad3      	subs	r3, r2, r3
 8016198:	b2db      	uxtb	r3, r3
 801619a:	429e      	cmp	r6, r3
 801619c:	bf28      	it	cs
 801619e:	461e      	movcs	r6, r3
 80161a0:	462b      	mov	r3, r5
 80161a2:	4622      	mov	r2, r4
 80161a4:	2100      	movs	r1, #0
 80161a6:	a805      	add	r0, sp, #20
 80161a8:	f001 f8c6 	bl	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80161ac:	e7e2      	b.n	8016174 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80161ae:	4630      	mov	r0, r6
 80161b0:	b01e      	add	sp, #120	; 0x78
 80161b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80161b6:	b003      	add	sp, #12
 80161b8:	4770      	bx	lr

080161ba <_ZNK8touchgfx8Drawable10invalidateEv>:
 80161ba:	b513      	push	{r0, r1, r4, lr}
 80161bc:	6803      	ldr	r3, [r0, #0]
 80161be:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80161c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80161c6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80161ca:	2400      	movs	r4, #0
 80161cc:	9400      	str	r4, [sp, #0]
 80161ce:	f8ad 2006 	strh.w	r2, [sp, #6]
 80161d2:	691b      	ldr	r3, [r3, #16]
 80161d4:	4669      	mov	r1, sp
 80161d6:	4798      	blx	r3
 80161d8:	b002      	add	sp, #8
 80161da:	bd10      	pop	{r4, pc}

080161dc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80161dc:	b538      	push	{r3, r4, r5, lr}
 80161de:	680b      	ldr	r3, [r1, #0]
 80161e0:	460c      	mov	r4, r1
 80161e2:	68db      	ldr	r3, [r3, #12]
 80161e4:	4605      	mov	r5, r0
 80161e6:	4798      	blx	r3
 80161e8:	6823      	ldr	r3, [r4, #0]
 80161ea:	4620      	mov	r0, r4
 80161ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80161ee:	4629      	mov	r1, r5
 80161f0:	4798      	blx	r3
 80161f2:	4628      	mov	r0, r5
 80161f4:	bd38      	pop	{r3, r4, r5, pc}

080161f6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80161f6:	b410      	push	{r4}
 80161f8:	880a      	ldrh	r2, [r1, #0]
 80161fa:	8884      	ldrh	r4, [r0, #4]
 80161fc:	4422      	add	r2, r4
 80161fe:	800a      	strh	r2, [r1, #0]
 8016200:	88c4      	ldrh	r4, [r0, #6]
 8016202:	884a      	ldrh	r2, [r1, #2]
 8016204:	4422      	add	r2, r4
 8016206:	804a      	strh	r2, [r1, #2]
 8016208:	6940      	ldr	r0, [r0, #20]
 801620a:	b120      	cbz	r0, 8016216 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801620c:	6803      	ldr	r3, [r0, #0]
 801620e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016214:	4718      	bx	r3
 8016216:	f85d 4b04 	ldr.w	r4, [sp], #4
 801621a:	4770      	bx	lr

0801621c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801621c:	b570      	push	{r4, r5, r6, lr}
 801621e:	8882      	ldrh	r2, [r0, #4]
 8016220:	880b      	ldrh	r3, [r1, #0]
 8016222:	4413      	add	r3, r2
 8016224:	800b      	strh	r3, [r1, #0]
 8016226:	88c2      	ldrh	r2, [r0, #6]
 8016228:	884b      	ldrh	r3, [r1, #2]
 801622a:	460c      	mov	r4, r1
 801622c:	4413      	add	r3, r2
 801622e:	804b      	strh	r3, [r1, #2]
 8016230:	4605      	mov	r5, r0
 8016232:	1d01      	adds	r1, r0, #4
 8016234:	4620      	mov	r0, r4
 8016236:	f7fa fa59 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801623a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801623e:	2b00      	cmp	r3, #0
 8016240:	dd0b      	ble.n	801625a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016242:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016246:	2b00      	cmp	r3, #0
 8016248:	dd07      	ble.n	801625a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801624a:	6968      	ldr	r0, [r5, #20]
 801624c:	b128      	cbz	r0, 801625a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801624e:	6803      	ldr	r3, [r0, #0]
 8016250:	4621      	mov	r1, r4
 8016252:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016258:	4718      	bx	r3
 801625a:	bd70      	pop	{r4, r5, r6, pc}

0801625c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801625c:	b570      	push	{r4, r5, r6, lr}
 801625e:	8882      	ldrh	r2, [r0, #4]
 8016260:	880b      	ldrh	r3, [r1, #0]
 8016262:	4413      	add	r3, r2
 8016264:	800b      	strh	r3, [r1, #0]
 8016266:	88c2      	ldrh	r2, [r0, #6]
 8016268:	884b      	ldrh	r3, [r1, #2]
 801626a:	460c      	mov	r4, r1
 801626c:	4413      	add	r3, r2
 801626e:	804b      	strh	r3, [r1, #2]
 8016270:	4605      	mov	r5, r0
 8016272:	1d01      	adds	r1, r0, #4
 8016274:	4620      	mov	r0, r4
 8016276:	f7fa fa39 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801627a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801627e:	2b00      	cmp	r3, #0
 8016280:	dd18      	ble.n	80162b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8016282:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016286:	2b00      	cmp	r3, #0
 8016288:	dd14      	ble.n	80162b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801628a:	6968      	ldr	r0, [r5, #20]
 801628c:	b128      	cbz	r0, 801629a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801628e:	6803      	ldr	r3, [r0, #0]
 8016290:	4621      	mov	r1, r4
 8016292:	691b      	ldr	r3, [r3, #16]
 8016294:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016298:	4718      	bx	r3
 801629a:	4b07      	ldr	r3, [pc, #28]	; (80162b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801629c:	681b      	ldr	r3, [r3, #0]
 801629e:	3304      	adds	r3, #4
 80162a0:	429d      	cmp	r5, r3
 80162a2:	d107      	bne.n	80162b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80162a4:	f7fe ffb6 	bl	8015214 <_ZN8touchgfx11Application11getInstanceEv>
 80162a8:	6821      	ldr	r1, [r4, #0]
 80162aa:	6862      	ldr	r2, [r4, #4]
 80162ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80162b0:	f7ff b862 	b.w	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80162b4:	bd70      	pop	{r4, r5, r6, pc}
 80162b6:	bf00      	nop
 80162b8:	20002cc8 	.word	0x20002cc8

080162bc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80162bc:	b570      	push	{r4, r5, r6, lr}
 80162be:	4604      	mov	r4, r0
 80162c0:	4616      	mov	r6, r2
 80162c2:	460d      	mov	r5, r1
 80162c4:	b901      	cbnz	r1, 80162c8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80162c6:	b192      	cbz	r2, 80162ee <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80162c8:	6823      	ldr	r3, [r4, #0]
 80162ca:	4620      	mov	r0, r4
 80162cc:	699b      	ldr	r3, [r3, #24]
 80162ce:	4798      	blx	r3
 80162d0:	88e2      	ldrh	r2, [r4, #6]
 80162d2:	88a1      	ldrh	r1, [r4, #4]
 80162d4:	4432      	add	r2, r6
 80162d6:	4429      	add	r1, r5
 80162d8:	4620      	mov	r0, r4
 80162da:	b212      	sxth	r2, r2
 80162dc:	b209      	sxth	r1, r1
 80162de:	f7fa fc09 	bl	8010af4 <_ZN8touchgfx8Drawable5setXYEss>
 80162e2:	6823      	ldr	r3, [r4, #0]
 80162e4:	4620      	mov	r0, r4
 80162e6:	699b      	ldr	r3, [r3, #24]
 80162e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80162ec:	4718      	bx	r3
 80162ee:	bd70      	pop	{r4, r5, r6, pc}

080162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80162f0:	b510      	push	{r4, lr}
 80162f2:	4604      	mov	r4, r0
 80162f4:	4608      	mov	r0, r1
 80162f6:	2300      	movs	r3, #0
 80162f8:	8023      	strh	r3, [r4, #0]
 80162fa:	8063      	strh	r3, [r4, #2]
 80162fc:	6803      	ldr	r3, [r0, #0]
 80162fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016302:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016306:	80a1      	strh	r1, [r4, #4]
 8016308:	80e2      	strh	r2, [r4, #6]
 801630a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801630c:	4621      	mov	r1, r4
 801630e:	4798      	blx	r3
 8016310:	4620      	mov	r0, r4
 8016312:	bd10      	pop	{r4, pc}

08016314 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8016314:	b530      	push	{r4, r5, lr}
 8016316:	8083      	strh	r3, [r0, #4]
 8016318:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801631c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8016320:	7183      	strb	r3, [r0, #6]
 8016322:	79c3      	ldrb	r3, [r0, #7]
 8016324:	6101      	str	r1, [r0, #16]
 8016326:	f365 0306 	bfi	r3, r5, #0, #7
 801632a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801632e:	8282      	strh	r2, [r0, #20]
 8016330:	f365 13c7 	bfi	r3, r5, #7, #1
 8016334:	71c3      	strb	r3, [r0, #7]
 8016336:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801633a:	7203      	strb	r3, [r0, #8]
 801633c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8016340:	7243      	strb	r3, [r0, #9]
 8016342:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016346:	8143      	strh	r3, [r0, #10]
 8016348:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801634c:	8183      	strh	r3, [r0, #12]
 801634e:	4b01      	ldr	r3, [pc, #4]	; (8016354 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8016350:	6003      	str	r3, [r0, #0]
 8016352:	bd30      	pop	{r4, r5, pc}
 8016354:	08028a68 	.word	0x08028a68

08016358 <_ZNK8touchgfx9ConstFont4findEt>:
 8016358:	b5f0      	push	{r4, r5, r6, r7, lr}
 801635a:	6904      	ldr	r4, [r0, #16]
 801635c:	b3bc      	cbz	r4, 80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801635e:	88a3      	ldrh	r3, [r4, #4]
 8016360:	8a82      	ldrh	r2, [r0, #20]
 8016362:	1acb      	subs	r3, r1, r3
 8016364:	f102 32ff 	add.w	r2, r2, #4294967295
 8016368:	d431      	bmi.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801636a:	4293      	cmp	r3, r2
 801636c:	dd0c      	ble.n	8016388 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801636e:	230e      	movs	r3, #14
 8016370:	fb03 4302 	mla	r3, r3, r2, r4
 8016374:	889b      	ldrh	r3, [r3, #4]
 8016376:	1a5b      	subs	r3, r3, r1
 8016378:	1ad3      	subs	r3, r2, r3
 801637a:	429a      	cmp	r2, r3
 801637c:	db27      	blt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801637e:	2b00      	cmp	r3, #0
 8016380:	bfbc      	itt	lt
 8016382:	2302      	movlt	r3, #2
 8016384:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016388:	2500      	movs	r5, #0
 801638a:	260e      	movs	r6, #14
 801638c:	4295      	cmp	r5, r2
 801638e:	dc1e      	bgt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016390:	fb06 4003 	mla	r0, r6, r3, r4
 8016394:	8887      	ldrh	r7, [r0, #4]
 8016396:	42b9      	cmp	r1, r7
 8016398:	d01a      	beq.n	80163d0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801639a:	d20d      	bcs.n	80163b8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801639c:	1e5a      	subs	r2, r3, #1
 801639e:	4295      	cmp	r5, r2
 80163a0:	dc15      	bgt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80163a2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80163a6:	1a5b      	subs	r3, r3, r1
 80163a8:	1ad3      	subs	r3, r2, r3
 80163aa:	429a      	cmp	r2, r3
 80163ac:	db0f      	blt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80163ae:	429d      	cmp	r5, r3
 80163b0:	ddec      	ble.n	801638c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80163b2:	1953      	adds	r3, r2, r5
 80163b4:	105b      	asrs	r3, r3, #1
 80163b6:	e7e9      	b.n	801638c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80163b8:	1c5d      	adds	r5, r3, #1
 80163ba:	42aa      	cmp	r2, r5
 80163bc:	db07      	blt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80163be:	8a43      	ldrh	r3, [r0, #18]
 80163c0:	1acb      	subs	r3, r1, r3
 80163c2:	442b      	add	r3, r5
 80163c4:	429d      	cmp	r5, r3
 80163c6:	dc02      	bgt.n	80163ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80163c8:	429a      	cmp	r2, r3
 80163ca:	dadf      	bge.n	801638c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80163cc:	e7f1      	b.n	80163b2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80163ce:	2000      	movs	r0, #0
 80163d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080163d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80163d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163d4:	4604      	mov	r4, r0
 80163d6:	4617      	mov	r7, r2
 80163d8:	461e      	mov	r6, r3
 80163da:	b911      	cbnz	r1, 80163e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80163dc:	2500      	movs	r5, #0
 80163de:	4628      	mov	r0, r5
 80163e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80163e2:	290a      	cmp	r1, #10
 80163e4:	d0fa      	beq.n	80163dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80163e6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80163ea:	4291      	cmp	r1, r2
 80163ec:	d0f6      	beq.n	80163dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80163ee:	f242 020b 	movw	r2, #8203	; 0x200b
 80163f2:	4291      	cmp	r1, r2
 80163f4:	d0f2      	beq.n	80163dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80163f6:	f7ff ffaf 	bl	8016358 <_ZNK8touchgfx9ConstFont4findEt>
 80163fa:	4605      	mov	r5, r0
 80163fc:	b950      	cbnz	r0, 8016414 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80163fe:	6823      	ldr	r3, [r4, #0]
 8016400:	4620      	mov	r0, r4
 8016402:	691b      	ldr	r3, [r3, #16]
 8016404:	4798      	blx	r3
 8016406:	4601      	mov	r1, r0
 8016408:	4620      	mov	r0, r4
 801640a:	f7ff ffa5 	bl	8016358 <_ZNK8touchgfx9ConstFont4findEt>
 801640e:	4605      	mov	r5, r0
 8016410:	2800      	cmp	r0, #0
 8016412:	d0e3      	beq.n	80163dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016414:	6823      	ldr	r3, [r4, #0]
 8016416:	4629      	mov	r1, r5
 8016418:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801641a:	4620      	mov	r0, r4
 801641c:	4798      	blx	r3
 801641e:	6038      	str	r0, [r7, #0]
 8016420:	6823      	ldr	r3, [r4, #0]
 8016422:	4620      	mov	r0, r4
 8016424:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016426:	4798      	blx	r3
 8016428:	7030      	strb	r0, [r6, #0]
 801642a:	e7d8      	b.n	80163de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801642c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801642c:	b538      	push	{r3, r4, r5, lr}
 801642e:	4605      	mov	r5, r0
 8016430:	f002 fa7c 	bl	801892c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016434:	4604      	mov	r4, r0
 8016436:	4628      	mov	r0, r5
 8016438:	f002 f9bc 	bl	80187b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801643c:	2800      	cmp	r0, #0
 801643e:	bf14      	ite	ne
 8016440:	2002      	movne	r0, #2
 8016442:	2000      	moveq	r0, #0
 8016444:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016448:	b280      	uxth	r0, r0
 801644a:	bd38      	pop	{r3, r4, r5, pc}

0801644c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801644c:	b538      	push	{r3, r4, r5, lr}
 801644e:	4605      	mov	r5, r0
 8016450:	f002 fa6c 	bl	801892c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016454:	4604      	mov	r4, r0
 8016456:	4628      	mov	r0, r5
 8016458:	f002 f9ac 	bl	80187b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801645c:	2800      	cmp	r0, #0
 801645e:	bf14      	ite	ne
 8016460:	2002      	movne	r0, #2
 8016462:	2000      	moveq	r0, #0
 8016464:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016468:	f040 0001 	orr.w	r0, r0, #1
 801646c:	b280      	uxth	r0, r0
 801646e:	bd38      	pop	{r3, r4, r5, pc}

08016470 <_ZN8touchgfx4clzuEm>:
 8016470:	4603      	mov	r3, r0
 8016472:	b1c8      	cbz	r0, 80164a8 <_ZN8touchgfx4clzuEm+0x38>
 8016474:	0c02      	lsrs	r2, r0, #16
 8016476:	0412      	lsls	r2, r2, #16
 8016478:	b9a2      	cbnz	r2, 80164a4 <_ZN8touchgfx4clzuEm+0x34>
 801647a:	0403      	lsls	r3, r0, #16
 801647c:	2010      	movs	r0, #16
 801647e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016482:	bf04      	itt	eq
 8016484:	021b      	lsleq	r3, r3, #8
 8016486:	3008      	addeq	r0, #8
 8016488:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801648c:	bf04      	itt	eq
 801648e:	011b      	lsleq	r3, r3, #4
 8016490:	3004      	addeq	r0, #4
 8016492:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016496:	bf04      	itt	eq
 8016498:	009b      	lsleq	r3, r3, #2
 801649a:	3002      	addeq	r0, #2
 801649c:	2b00      	cmp	r3, #0
 801649e:	db04      	blt.n	80164aa <_ZN8touchgfx4clzuEm+0x3a>
 80164a0:	3001      	adds	r0, #1
 80164a2:	4770      	bx	lr
 80164a4:	2000      	movs	r0, #0
 80164a6:	e7ea      	b.n	801647e <_ZN8touchgfx4clzuEm+0xe>
 80164a8:	2020      	movs	r0, #32
 80164aa:	4770      	bx	lr

080164ac <_ZN8touchgfx7muldivuEmmmRm>:
 80164ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164b0:	4680      	mov	r8, r0
 80164b2:	460f      	mov	r7, r1
 80164b4:	4615      	mov	r5, r2
 80164b6:	461e      	mov	r6, r3
 80164b8:	f7ff ffda 	bl	8016470 <_ZN8touchgfx4clzuEm>
 80164bc:	b998      	cbnz	r0, 80164e6 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80164be:	4608      	mov	r0, r1
 80164c0:	f7ff ffd6 	bl	8016470 <_ZN8touchgfx4clzuEm>
 80164c4:	2800      	cmp	r0, #0
 80164c6:	dd08      	ble.n	80164da <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80164c8:	4633      	mov	r3, r6
 80164ca:	462a      	mov	r2, r5
 80164cc:	4641      	mov	r1, r8
 80164ce:	4638      	mov	r0, r7
 80164d0:	f7ff ffec 	bl	80164ac <_ZN8touchgfx7muldivuEmmmRm>
 80164d4:	b003      	add	sp, #12
 80164d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164da:	f04f 33ff 	mov.w	r3, #4294967295
 80164de:	6033      	str	r3, [r6, #0]
 80164e0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80164e4:	e7f6      	b.n	80164d4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80164e6:	fa31 f900 	lsrs.w	r9, r1, r0
 80164ea:	fb01 f308 	mul.w	r3, r1, r8
 80164ee:	d105      	bne.n	80164fc <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80164f0:	fbb3 f0f5 	udiv	r0, r3, r5
 80164f4:	fb05 3510 	mls	r5, r5, r0, r3
 80164f8:	6035      	str	r5, [r6, #0]
 80164fa:	e7eb      	b.n	80164d4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80164fc:	2301      	movs	r3, #1
 80164fe:	fa08 fb00 	lsl.w	fp, r8, r0
 8016502:	fa03 f000 	lsl.w	r0, r3, r0
 8016506:	3801      	subs	r0, #1
 8016508:	462a      	mov	r2, r5
 801650a:	4633      	mov	r3, r6
 801650c:	4641      	mov	r1, r8
 801650e:	4038      	ands	r0, r7
 8016510:	f7ff ffcc 	bl	80164ac <_ZN8touchgfx7muldivuEmmmRm>
 8016514:	fbbb faf5 	udiv	sl, fp, r5
 8016518:	462a      	mov	r2, r5
 801651a:	4607      	mov	r7, r0
 801651c:	ab01      	add	r3, sp, #4
 801651e:	fb05 b11a 	mls	r1, r5, sl, fp
 8016522:	4648      	mov	r0, r9
 8016524:	f7ff ffc2 	bl	80164ac <_ZN8touchgfx7muldivuEmmmRm>
 8016528:	9b01      	ldr	r3, [sp, #4]
 801652a:	6832      	ldr	r2, [r6, #0]
 801652c:	fb09 f40a 	mul.w	r4, r9, sl
 8016530:	441a      	add	r2, r3
 8016532:	fbb2 f3f5 	udiv	r3, r2, r5
 8016536:	441c      	add	r4, r3
 8016538:	443c      	add	r4, r7
 801653a:	4420      	add	r0, r4
 801653c:	fb05 2513 	mls	r5, r5, r3, r2
 8016540:	e7da      	b.n	80164f8 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08016542 <_ZN8touchgfx6muldivElllRl>:
 8016542:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016544:	2800      	cmp	r0, #0
 8016546:	bfba      	itte	lt
 8016548:	4240      	neglt	r0, r0
 801654a:	f04f 34ff 	movlt.w	r4, #4294967295
 801654e:	2401      	movge	r4, #1
 8016550:	2900      	cmp	r1, #0
 8016552:	bfbc      	itt	lt
 8016554:	4249      	neglt	r1, r1
 8016556:	4264      	neglt	r4, r4
 8016558:	2a00      	cmp	r2, #0
 801655a:	bfb6      	itet	lt
 801655c:	4265      	neglt	r5, r4
 801655e:	4625      	movge	r5, r4
 8016560:	4252      	neglt	r2, r2
 8016562:	4288      	cmp	r0, r1
 8016564:	461e      	mov	r6, r3
 8016566:	bfc2      	ittt	gt
 8016568:	4603      	movgt	r3, r0
 801656a:	4608      	movgt	r0, r1
 801656c:	4619      	movgt	r1, r3
 801656e:	ab01      	add	r3, sp, #4
 8016570:	f7ff ff9c 	bl	80164ac <_ZN8touchgfx7muldivuEmmmRm>
 8016574:	9b01      	ldr	r3, [sp, #4]
 8016576:	4368      	muls	r0, r5
 8016578:	435c      	muls	r4, r3
 801657a:	6034      	str	r4, [r6, #0]
 801657c:	b002      	add	sp, #8
 801657e:	bd70      	pop	{r4, r5, r6, pc}

08016580 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8016580:	2000      	movs	r0, #0
 8016582:	4770      	bx	lr

08016584 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016584:	2001      	movs	r0, #1
 8016586:	4770      	bx	lr

08016588 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016588:	2002      	movs	r0, #2
 801658a:	4770      	bx	lr

0801658c <_ZN8touchgfx6ScreenD1Ev>:
 801658c:	4770      	bx	lr

0801658e <_ZN8touchgfx6Screen11setupScreenEv>:
 801658e:	4770      	bx	lr

08016590 <_ZN8touchgfx6Screen15handleTickEventEv>:
 8016590:	4770      	bx	lr

08016592 <_ZN8touchgfx12GestureEventD1Ev>:
 8016592:	4770      	bx	lr

08016594 <_ZN8touchgfx9DragEventD1Ev>:
 8016594:	4770      	bx	lr

08016596 <_ZN8touchgfx10ClickEventD1Ev>:
 8016596:	4770      	bx	lr

08016598 <_ZN8touchgfx10ClickEventD0Ev>:
 8016598:	b510      	push	{r4, lr}
 801659a:	210c      	movs	r1, #12
 801659c:	4604      	mov	r4, r0
 801659e:	f00d fe2e 	bl	80241fe <_ZdlPvj>
 80165a2:	4620      	mov	r0, r4
 80165a4:	bd10      	pop	{r4, pc}

080165a6 <_ZN8touchgfx9DragEventD0Ev>:
 80165a6:	b510      	push	{r4, lr}
 80165a8:	2110      	movs	r1, #16
 80165aa:	4604      	mov	r4, r0
 80165ac:	f00d fe27 	bl	80241fe <_ZdlPvj>
 80165b0:	4620      	mov	r0, r4
 80165b2:	bd10      	pop	{r4, pc}

080165b4 <_ZN8touchgfx12GestureEventD0Ev>:
 80165b4:	b510      	push	{r4, lr}
 80165b6:	210c      	movs	r1, #12
 80165b8:	4604      	mov	r4, r0
 80165ba:	f00d fe20 	bl	80241fe <_ZdlPvj>
 80165be:	4620      	mov	r0, r4
 80165c0:	bd10      	pop	{r4, pc}

080165c2 <_ZN8touchgfx6ScreenD0Ev>:
 80165c2:	b510      	push	{r4, lr}
 80165c4:	213c      	movs	r1, #60	; 0x3c
 80165c6:	4604      	mov	r4, r0
 80165c8:	f00d fe19 	bl	80241fe <_ZdlPvj>
 80165cc:	4620      	mov	r0, r4
 80165ce:	bd10      	pop	{r4, pc}

080165d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80165d0:	b530      	push	{r4, r5, lr}
 80165d2:	460d      	mov	r5, r1
 80165d4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80165d6:	b087      	sub	sp, #28
 80165d8:	4604      	mov	r4, r0
 80165da:	b301      	cbz	r1, 801661e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80165dc:	a801      	add	r0, sp, #4
 80165de:	f7ff fe87 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165e2:	892a      	ldrh	r2, [r5, #8]
 80165e4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80165e8:	7928      	ldrb	r0, [r5, #4]
 80165ea:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80165ee:	f88d 0010 	strb.w	r0, [sp, #16]
 80165f2:	1ad2      	subs	r2, r2, r3
 80165f4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80165f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165f8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80165fc:	441a      	add	r2, r3
 80165fe:	896b      	ldrh	r3, [r5, #10]
 8016600:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016604:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016608:	1b5b      	subs	r3, r3, r5
 801660a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801660c:	442b      	add	r3, r5
 801660e:	4d05      	ldr	r5, [pc, #20]	; (8016624 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016610:	9503      	str	r5, [sp, #12]
 8016612:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016616:	6803      	ldr	r3, [r0, #0]
 8016618:	a903      	add	r1, sp, #12
 801661a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801661c:	4798      	blx	r3
 801661e:	b007      	add	sp, #28
 8016620:	bd30      	pop	{r4, r5, pc}
 8016622:	bf00      	nop
 8016624:	08028ae8 	.word	0x08028ae8

08016628 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801662c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801662e:	b08a      	sub	sp, #40	; 0x28
 8016630:	4604      	mov	r4, r0
 8016632:	460d      	mov	r5, r1
 8016634:	b113      	cbz	r3, 801663c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016636:	790b      	ldrb	r3, [r1, #4]
 8016638:	2b00      	cmp	r3, #0
 801663a:	d044      	beq.n	80166c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801663c:	f104 0804 	add.w	r8, r4, #4
 8016640:	4641      	mov	r1, r8
 8016642:	a803      	add	r0, sp, #12
 8016644:	f7ff fe54 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016648:	792b      	ldrb	r3, [r5, #4]
 801664a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801664e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016652:	b983      	cbnz	r3, 8016676 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016654:	892a      	ldrh	r2, [r5, #8]
 8016656:	88e9      	ldrh	r1, [r5, #6]
 8016658:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801665c:	1b92      	subs	r2, r2, r6
 801665e:	1bc9      	subs	r1, r1, r7
 8016660:	9301      	str	r3, [sp, #4]
 8016662:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016666:	9300      	str	r3, [sp, #0]
 8016668:	b212      	sxth	r2, r2
 801666a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801666e:	b209      	sxth	r1, r1
 8016670:	4640      	mov	r0, r8
 8016672:	f7f9 ff57 	bl	8010524 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016676:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016678:	b329      	cbz	r1, 80166c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801667a:	a805      	add	r0, sp, #20
 801667c:	f7ff fe38 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016680:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016684:	792b      	ldrb	r3, [r5, #4]
 8016686:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016688:	f88d 3020 	strb.w	r3, [sp, #32]
 801668c:	1abf      	subs	r7, r7, r2
 801668e:	88ea      	ldrh	r2, [r5, #6]
 8016690:	4417      	add	r7, r2
 8016692:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016694:	4417      	add	r7, r2
 8016696:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801669a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801669e:	1ab6      	subs	r6, r6, r2
 80166a0:	892a      	ldrh	r2, [r5, #8]
 80166a2:	4416      	add	r6, r2
 80166a4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80166a6:	4416      	add	r6, r2
 80166a8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80166ac:	4a07      	ldr	r2, [pc, #28]	; (80166cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80166ae:	9207      	str	r2, [sp, #28]
 80166b0:	2600      	movs	r6, #0
 80166b2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80166b6:	6803      	ldr	r3, [r0, #0]
 80166b8:	a907      	add	r1, sp, #28
 80166ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80166bc:	4798      	blx	r3
 80166be:	792b      	ldrb	r3, [r5, #4]
 80166c0:	b10b      	cbz	r3, 80166c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80166c2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80166c6:	b00a      	add	sp, #40	; 0x28
 80166c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80166cc:	08028ac0 	.word	0x08028ac0

080166d0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80166d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80166d4:	460c      	mov	r4, r1
 80166d6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80166d8:	b088      	sub	sp, #32
 80166da:	4605      	mov	r5, r0
 80166dc:	2900      	cmp	r1, #0
 80166de:	d06d      	beq.n	80167bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80166e0:	4668      	mov	r0, sp
 80166e2:	f7ff fe05 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166e6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80166e8:	88e3      	ldrh	r3, [r4, #6]
 80166ea:	f9bd 8000 	ldrsh.w	r8, [sp]
 80166ee:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80166f2:	440b      	add	r3, r1
 80166f4:	b21b      	sxth	r3, r3
 80166f6:	4543      	cmp	r3, r8
 80166f8:	db31      	blt.n	801675e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166fa:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80166fe:	44c4      	add	ip, r8
 8016700:	fa0f fc8c 	sxth.w	ip, ip
 8016704:	4563      	cmp	r3, ip
 8016706:	da2a      	bge.n	801675e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016708:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801670a:	8926      	ldrh	r6, [r4, #8]
 801670c:	4416      	add	r6, r2
 801670e:	b236      	sxth	r6, r6
 8016710:	42be      	cmp	r6, r7
 8016712:	db24      	blt.n	801675e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016714:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016718:	4438      	add	r0, r7
 801671a:	b200      	sxth	r0, r0
 801671c:	4286      	cmp	r6, r0
 801671e:	da1e      	bge.n	801675e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016720:	8963      	ldrh	r3, [r4, #10]
 8016722:	4419      	add	r1, r3
 8016724:	b209      	sxth	r1, r1
 8016726:	4541      	cmp	r1, r8
 8016728:	db08      	blt.n	801673c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801672a:	4561      	cmp	r1, ip
 801672c:	da06      	bge.n	801673c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801672e:	89a3      	ldrh	r3, [r4, #12]
 8016730:	441a      	add	r2, r3
 8016732:	b212      	sxth	r2, r2
 8016734:	42ba      	cmp	r2, r7
 8016736:	db01      	blt.n	801673c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016738:	4282      	cmp	r2, r0
 801673a:	db10      	blt.n	801675e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801673c:	4b21      	ldr	r3, [pc, #132]	; (80167c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801673e:	9304      	str	r3, [sp, #16]
 8016740:	2302      	movs	r3, #2
 8016742:	f88d 3014 	strb.w	r3, [sp, #20]
 8016746:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016748:	2300      	movs	r3, #0
 801674a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801674e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016752:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016756:	6803      	ldr	r3, [r0, #0]
 8016758:	a904      	add	r1, sp, #16
 801675a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801675c:	4798      	blx	r3
 801675e:	1d29      	adds	r1, r5, #4
 8016760:	a802      	add	r0, sp, #8
 8016762:	f7ff fdc5 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016766:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801676a:	88e0      	ldrh	r0, [r4, #6]
 801676c:	7921      	ldrb	r1, [r4, #4]
 801676e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016772:	8922      	ldrh	r2, [r4, #8]
 8016774:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016776:	f88d 1014 	strb.w	r1, [sp, #20]
 801677a:	eba3 0808 	sub.w	r8, r3, r8
 801677e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016782:	1bdf      	subs	r7, r3, r7
 8016784:	b2bb      	uxth	r3, r7
 8016786:	fa1f f888 	uxth.w	r8, r8
 801678a:	8967      	ldrh	r7, [r4, #10]
 801678c:	89a4      	ldrh	r4, [r4, #12]
 801678e:	4440      	add	r0, r8
 8016790:	4460      	add	r0, ip
 8016792:	441a      	add	r2, r3
 8016794:	44b8      	add	r8, r7
 8016796:	4423      	add	r3, r4
 8016798:	f8ad 0016 	strh.w	r0, [sp, #22]
 801679c:	4433      	add	r3, r6
 801679e:	4432      	add	r2, r6
 80167a0:	44e0      	add	r8, ip
 80167a2:	4c09      	ldr	r4, [pc, #36]	; (80167c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80167a4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80167a6:	9404      	str	r4, [sp, #16]
 80167a8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80167ac:	f8ad 801a 	strh.w	r8, [sp, #26]
 80167b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80167b4:	6803      	ldr	r3, [r0, #0]
 80167b6:	a904      	add	r1, sp, #16
 80167b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80167ba:	4798      	blx	r3
 80167bc:	b008      	add	sp, #32
 80167be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80167c2:	bf00      	nop
 80167c4:	08028ac0 	.word	0x08028ac0
 80167c8:	08028ad4 	.word	0x08028ad4

080167cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80167cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80167ce:	4604      	mov	r4, r0
 80167d0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80167d4:	3201      	adds	r2, #1
 80167d6:	d112      	bne.n	80167fe <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80167d8:	6803      	ldr	r3, [r0, #0]
 80167da:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80167de:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80167e2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80167e6:	2500      	movs	r5, #0
 80167e8:	9500      	str	r5, [sp, #0]
 80167ea:	466d      	mov	r5, sp
 80167ec:	4629      	mov	r1, r5
 80167ee:	f8ad 2006 	strh.w	r2, [sp, #6]
 80167f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80167f4:	4798      	blx	r3
 80167f6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80167fa:	e884 0003 	stmia.w	r4, {r0, r1}
 80167fe:	4620      	mov	r0, r4
 8016800:	b003      	add	sp, #12
 8016802:	bd30      	pop	{r4, r5, pc}

08016804 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016804:	b513      	push	{r0, r1, r4, lr}
 8016806:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801680a:	3301      	adds	r3, #1
 801680c:	4604      	mov	r4, r0
 801680e:	d109      	bne.n	8016824 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016810:	4601      	mov	r1, r0
 8016812:	4668      	mov	r0, sp
 8016814:	f7ff fd6c 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016818:	f8bd 3000 	ldrh.w	r3, [sp]
 801681c:	8423      	strh	r3, [r4, #32]
 801681e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016822:	8463      	strh	r3, [r4, #34]	; 0x22
 8016824:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016828:	b002      	add	sp, #8
 801682a:	bd10      	pop	{r4, pc}

0801682c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801682c:	b513      	push	{r0, r1, r4, lr}
 801682e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016832:	3301      	adds	r3, #1
 8016834:	4604      	mov	r4, r0
 8016836:	d109      	bne.n	801684c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016838:	4601      	mov	r1, r0
 801683a:	4668      	mov	r0, sp
 801683c:	f7ff fd58 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016840:	f8bd 3000 	ldrh.w	r3, [sp]
 8016844:	8423      	strh	r3, [r4, #32]
 8016846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801684a:	8463      	strh	r3, [r4, #34]	; 0x22
 801684c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016850:	b002      	add	sp, #8
 8016852:	bd10      	pop	{r4, pc}

08016854 <_ZN8touchgfx6ScreenC1Ev>:
 8016854:	b570      	push	{r4, r5, r6, lr}
 8016856:	4605      	mov	r5, r0
 8016858:	4b16      	ldr	r3, [pc, #88]	; (80168b4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801685a:	f845 3b04 	str.w	r3, [r5], #4
 801685e:	2300      	movs	r3, #0
 8016860:	8103      	strh	r3, [r0, #8]
 8016862:	8143      	strh	r3, [r0, #10]
 8016864:	8183      	strh	r3, [r0, #12]
 8016866:	81c3      	strh	r3, [r0, #14]
 8016868:	8203      	strh	r3, [r0, #16]
 801686a:	8243      	strh	r3, [r0, #18]
 801686c:	8283      	strh	r3, [r0, #20]
 801686e:	82c3      	strh	r3, [r0, #22]
 8016870:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016874:	6203      	str	r3, [r0, #32]
 8016876:	8483      	strh	r3, [r0, #36]	; 0x24
 8016878:	84c3      	strh	r3, [r0, #38]	; 0x26
 801687a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801687e:	4a0e      	ldr	r2, [pc, #56]	; (80168b8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016880:	6343      	str	r3, [r0, #52]	; 0x34
 8016882:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016886:	4b0d      	ldr	r3, [pc, #52]	; (80168bc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016888:	6042      	str	r2, [r0, #4]
 801688a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801688e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016890:	4a0b      	ldr	r2, [pc, #44]	; (80168c0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016892:	4604      	mov	r4, r0
 8016894:	2101      	movs	r1, #1
 8016896:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801689a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801689e:	f9b2 1000 	ldrsh.w	r1, [r2]
 80168a2:	4628      	mov	r0, r5
 80168a4:	4798      	blx	r3
 80168a6:	6863      	ldr	r3, [r4, #4]
 80168a8:	4628      	mov	r0, r5
 80168aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80168ac:	4631      	mov	r1, r6
 80168ae:	4798      	blx	r3
 80168b0:	4620      	mov	r0, r4
 80168b2:	bd70      	pop	{r4, r5, r6, pc}
 80168b4:	08028afc 	.word	0x08028afc
 80168b8:	0802832c 	.word	0x0802832c
 80168bc:	20002c82 	.word	0x20002c82
 80168c0:	20002c80 	.word	0x20002c80

080168c4 <_ZN8touchgfx6Screen4drawEv>:
 80168c4:	b507      	push	{r0, r1, r2, lr}
 80168c6:	4b09      	ldr	r3, [pc, #36]	; (80168ec <_ZN8touchgfx6Screen4drawEv+0x28>)
 80168c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80168cc:	4b08      	ldr	r3, [pc, #32]	; (80168f0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80168ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80168d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80168d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80168da:	6803      	ldr	r3, [r0, #0]
 80168dc:	2100      	movs	r1, #0
 80168de:	9100      	str	r1, [sp, #0]
 80168e0:	689b      	ldr	r3, [r3, #8]
 80168e2:	4669      	mov	r1, sp
 80168e4:	4798      	blx	r3
 80168e6:	b003      	add	sp, #12
 80168e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80168ec:	20002c80 	.word	0x20002c80
 80168f0:	20002c82 	.word	0x20002c82

080168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80168f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168f8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80168fc:	2b00      	cmp	r3, #0
 80168fe:	b089      	sub	sp, #36	; 0x24
 8016900:	4680      	mov	r8, r0
 8016902:	460c      	mov	r4, r1
 8016904:	4615      	mov	r5, r2
 8016906:	dd0e      	ble.n	8016926 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016908:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801690c:	2b00      	cmp	r3, #0
 801690e:	dd0a      	ble.n	8016926 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016910:	4628      	mov	r0, r5
 8016912:	f7ff ff5b 	bl	80167cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016916:	4621      	mov	r1, r4
 8016918:	f7fe fb9d 	bl	8015056 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801691c:	69eb      	ldr	r3, [r5, #28]
 801691e:	b928      	cbnz	r0, 801692c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016920:	461d      	mov	r5, r3
 8016922:	2b00      	cmp	r3, #0
 8016924:	d1f4      	bne.n	8016910 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016926:	b009      	add	sp, #36	; 0x24
 8016928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801692c:	ae04      	add	r6, sp, #16
 801692e:	2b00      	cmp	r3, #0
 8016930:	f000 80b5 	beq.w	8016a9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016934:	682b      	ldr	r3, [r5, #0]
 8016936:	4629      	mov	r1, r5
 8016938:	68db      	ldr	r3, [r3, #12]
 801693a:	a802      	add	r0, sp, #8
 801693c:	4798      	blx	r3
 801693e:	4628      	mov	r0, r5
 8016940:	f7ff ff60 	bl	8016804 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016944:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016948:	4407      	add	r7, r0
 801694a:	4628      	mov	r0, r5
 801694c:	f7ff ff6e 	bl	801682c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016950:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016954:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016958:	f8ad 2014 	strh.w	r2, [sp, #20]
 801695c:	4418      	add	r0, r3
 801695e:	4621      	mov	r1, r4
 8016960:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016964:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016968:	b23f      	sxth	r7, r7
 801696a:	4630      	mov	r0, r6
 801696c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016970:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016974:	f7f9 feba 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8016978:	4628      	mov	r0, r5
 801697a:	f7ff ff27 	bl	80167cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801697e:	4602      	mov	r2, r0
 8016980:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016984:	ab06      	add	r3, sp, #24
 8016986:	e883 0003 	stmia.w	r3, {r0, r1}
 801698a:	4611      	mov	r1, r2
 801698c:	4618      	mov	r0, r3
 801698e:	f7f9 fead 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8016992:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016996:	f9b4 1000 	ldrsh.w	r1, [r4]
 801699a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801699e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80169a2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80169a6:	4299      	cmp	r1, r3
 80169a8:	d10b      	bne.n	80169c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80169ae:	4552      	cmp	r2, sl
 80169b0:	d107      	bne.n	80169c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169b2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80169b6:	455a      	cmp	r2, fp
 80169b8:	d103      	bne.n	80169c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169ba:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80169be:	454a      	cmp	r2, r9
 80169c0:	d06d      	beq.n	8016a9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80169c2:	f1bb 0f00 	cmp.w	fp, #0
 80169c6:	dd65      	ble.n	8016a94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80169c8:	f1b9 0f00 	cmp.w	r9, #0
 80169cc:	dd62      	ble.n	8016a94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80169ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80169d2:	fa1f f08a 	uxth.w	r0, sl
 80169d6:	4552      	cmp	r2, sl
 80169d8:	9000      	str	r0, [sp, #0]
 80169da:	da12      	bge.n	8016a02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80169dc:	9301      	str	r3, [sp, #4]
 80169de:	9b00      	ldr	r3, [sp, #0]
 80169e0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80169e4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169e8:	1a9a      	subs	r2, r3, r2
 80169ea:	f8ad 1010 	strh.w	r1, [sp, #16]
 80169ee:	f8ad 0014 	strh.w	r0, [sp, #20]
 80169f2:	f8ad 2016 	strh.w	r2, [sp, #22]
 80169f6:	69ea      	ldr	r2, [r5, #28]
 80169f8:	4631      	mov	r1, r6
 80169fa:	4640      	mov	r0, r8
 80169fc:	f7ff ff7a 	bl	80168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a00:	9b01      	ldr	r3, [sp, #4]
 8016a02:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016a06:	429a      	cmp	r2, r3
 8016a08:	b29f      	uxth	r7, r3
 8016a0a:	da0d      	bge.n	8016a28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016a0c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a10:	1aba      	subs	r2, r7, r2
 8016a12:	f8ad a012 	strh.w	sl, [sp, #18]
 8016a16:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016a1a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016a1e:	69ea      	ldr	r2, [r5, #28]
 8016a20:	4631      	mov	r1, r6
 8016a22:	4640      	mov	r0, r8
 8016a24:	f7ff ff66 	bl	80168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a28:	8822      	ldrh	r2, [r4, #0]
 8016a2a:	88a3      	ldrh	r3, [r4, #4]
 8016a2c:	445f      	add	r7, fp
 8016a2e:	4413      	add	r3, r2
 8016a30:	b29b      	uxth	r3, r3
 8016a32:	b2bf      	uxth	r7, r7
 8016a34:	b23a      	sxth	r2, r7
 8016a36:	b219      	sxth	r1, r3
 8016a38:	4291      	cmp	r1, r2
 8016a3a:	dd0d      	ble.n	8016a58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016a3c:	1bdb      	subs	r3, r3, r7
 8016a3e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a42:	f8ad a012 	strh.w	sl, [sp, #18]
 8016a46:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016a4a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016a4e:	69ea      	ldr	r2, [r5, #28]
 8016a50:	4631      	mov	r1, r6
 8016a52:	4640      	mov	r0, r8
 8016a54:	f7ff ff4e 	bl	80168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a58:	88e2      	ldrh	r2, [r4, #6]
 8016a5a:	8863      	ldrh	r3, [r4, #2]
 8016a5c:	4413      	add	r3, r2
 8016a5e:	9a00      	ldr	r2, [sp, #0]
 8016a60:	444a      	add	r2, r9
 8016a62:	b29b      	uxth	r3, r3
 8016a64:	fa1f f982 	uxth.w	r9, r2
 8016a68:	fa0f f289 	sxth.w	r2, r9
 8016a6c:	b219      	sxth	r1, r3
 8016a6e:	428a      	cmp	r2, r1
 8016a70:	da15      	bge.n	8016a9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016a72:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016a76:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016a7a:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016a7e:	eba3 0309 	sub.w	r3, r3, r9
 8016a82:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a86:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016a8a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a8e:	69ea      	ldr	r2, [r5, #28]
 8016a90:	4631      	mov	r1, r6
 8016a92:	e001      	b.n	8016a98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016a94:	69ea      	ldr	r2, [r5, #28]
 8016a96:	4621      	mov	r1, r4
 8016a98:	4640      	mov	r0, r8
 8016a9a:	f7ff ff2b 	bl	80168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a9e:	4628      	mov	r0, r5
 8016aa0:	f7ff fe94 	bl	80167cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016aa4:	6861      	ldr	r1, [r4, #4]
 8016aa6:	4602      	mov	r2, r0
 8016aa8:	6820      	ldr	r0, [r4, #0]
 8016aaa:	4633      	mov	r3, r6
 8016aac:	c303      	stmia	r3!, {r0, r1}
 8016aae:	4611      	mov	r1, r2
 8016ab0:	4630      	mov	r0, r6
 8016ab2:	f7f9 fe1b 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8016ab6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016aba:	2b00      	cmp	r3, #0
 8016abc:	f77f af33 	ble.w	8016926 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ac0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016ac4:	2b00      	cmp	r3, #0
 8016ac6:	f77f af2e 	ble.w	8016926 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016aca:	4628      	mov	r0, r5
 8016acc:	f7ff fe9a 	bl	8016804 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016ad0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016ad4:	1a18      	subs	r0, r3, r0
 8016ad6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016ada:	4628      	mov	r0, r5
 8016adc:	f7ff fea6 	bl	801682c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016ae0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016ae4:	1a18      	subs	r0, r3, r0
 8016ae6:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016aea:	682b      	ldr	r3, [r5, #0]
 8016aec:	4631      	mov	r1, r6
 8016aee:	689b      	ldr	r3, [r3, #8]
 8016af0:	4628      	mov	r0, r5
 8016af2:	4798      	blx	r3
 8016af4:	e717      	b.n	8016926 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016af6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016af6:	b570      	push	{r4, r5, r6, lr}
 8016af8:	460c      	mov	r4, r1
 8016afa:	b086      	sub	sp, #24
 8016afc:	1d06      	adds	r6, r0, #4
 8016afe:	2300      	movs	r3, #0
 8016b00:	4631      	mov	r1, r6
 8016b02:	4605      	mov	r5, r0
 8016b04:	a802      	add	r0, sp, #8
 8016b06:	9301      	str	r3, [sp, #4]
 8016b08:	f7ff fbf2 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b0c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016b10:	8822      	ldrh	r2, [r4, #0]
 8016b12:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016b16:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016b1a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016b1e:	1ad2      	subs	r2, r2, r3
 8016b20:	8863      	ldrh	r3, [r4, #2]
 8016b22:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016b26:	1a5b      	subs	r3, r3, r1
 8016b28:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016b2c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016b30:	aa01      	add	r2, sp, #4
 8016b32:	a904      	add	r1, sp, #16
 8016b34:	4630      	mov	r0, r6
 8016b36:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016b3a:	f7f9 feaf 	bl	801089c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016b3e:	9a01      	ldr	r2, [sp, #4]
 8016b40:	b11a      	cbz	r2, 8016b4a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016b42:	4621      	mov	r1, r4
 8016b44:	4628      	mov	r0, r5
 8016b46:	f7ff fed5 	bl	80168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016b4a:	b006      	add	sp, #24
 8016b4c:	bd70      	pop	{r4, r5, r6, pc}

08016b4e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016b4e:	b530      	push	{r4, r5, lr}
 8016b50:	4602      	mov	r2, r0
 8016b52:	4604      	mov	r4, r0
 8016b54:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016b58:	b085      	sub	sp, #20
 8016b5a:	460d      	mov	r5, r1
 8016b5c:	6851      	ldr	r1, [r2, #4]
 8016b5e:	466b      	mov	r3, sp
 8016b60:	c303      	stmia	r3!, {r0, r1}
 8016b62:	4629      	mov	r1, r5
 8016b64:	4668      	mov	r0, sp
 8016b66:	f7f9 fdc1 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 8016b6a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016b6e:	b12b      	cbz	r3, 8016b7c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016b70:	4669      	mov	r1, sp
 8016b72:	4620      	mov	r0, r4
 8016b74:	f7ff ffbf 	bl	8016af6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016b78:	b005      	add	sp, #20
 8016b7a:	bd30      	pop	{r4, r5, pc}
 8016b7c:	3404      	adds	r4, #4
 8016b7e:	4621      	mov	r1, r4
 8016b80:	a802      	add	r0, sp, #8
 8016b82:	f7ff fbb5 	bl	80162f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b86:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b8a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016b8e:	1a9b      	subs	r3, r3, r2
 8016b90:	f8ad 3000 	strh.w	r3, [sp]
 8016b94:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016b98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b9c:	4669      	mov	r1, sp
 8016b9e:	1a9b      	subs	r3, r3, r2
 8016ba0:	4620      	mov	r0, r4
 8016ba2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016ba6:	f7f9 fe40 	bl	801082a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016baa:	e7e5      	b.n	8016b78 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016bac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016bac:	680a      	ldr	r2, [r1, #0]
 8016bae:	460b      	mov	r3, r1
 8016bb0:	6992      	ldr	r2, [r2, #24]
 8016bb2:	1d01      	adds	r1, r0, #4
 8016bb4:	4618      	mov	r0, r3
 8016bb6:	4710      	bx	r2

08016bb8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016bb8:	4298      	cmp	r0, r3
 8016bba:	d200      	bcs.n	8016bbe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016bbc:	b913      	cbnz	r3, 8016bc4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016bbe:	440a      	add	r2, r1
 8016bc0:	b210      	sxth	r0, r2
 8016bc2:	4770      	bx	lr
 8016bc4:	ee07 0a90 	vmov	s15, r0
 8016bc8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016bcc:	ee07 3a90 	vmov	s15, r3
 8016bd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016bd4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016bd8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bdc:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016be0:	ee07 2a90 	vmov	s15, r2
 8016be4:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016be8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016bec:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016bf0:	ee07 1a90 	vmov	s15, r1
 8016bf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016bf8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016bfc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016c00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c08:	bfcc      	ite	gt
 8016c0a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016c0e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016c12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c16:	ee17 3a90 	vmov	r3, s15
 8016c1a:	b218      	sxth	r0, r3
 8016c1c:	4770      	bx	lr

08016c1e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016c1e:	4298      	cmp	r0, r3
 8016c20:	d200      	bcs.n	8016c24 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016c22:	b913      	cbnz	r3, 8016c2a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016c24:	440a      	add	r2, r1
 8016c26:	b210      	sxth	r0, r2
 8016c28:	4770      	bx	lr
 8016c2a:	ee07 2a90 	vmov	s15, r2
 8016c2e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016c32:	ee07 0a90 	vmov	s15, r0
 8016c36:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016c3a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016c3e:	ee07 3a10 	vmov	s14, r3
 8016c42:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016c46:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016c4a:	ee07 1a90 	vmov	s15, r1
 8016c4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016c52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016c56:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016c5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c62:	bfcc      	ite	gt
 8016c64:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016c68:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016c6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c70:	ee17 3a90 	vmov	r3, s15
 8016c74:	b218      	sxth	r0, r3
 8016c76:	4770      	bx	lr

08016c78 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8016c78:	f7ff bfd1 	b.w	8016c1e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08016c7c <_ZN8touchgfx12TextProviderC1Ev>:
 8016c7c:	b538      	push	{r3, r4, r5, lr}
 8016c7e:	2500      	movs	r5, #0
 8016c80:	2302      	movs	r3, #2
 8016c82:	4604      	mov	r4, r0
 8016c84:	e9c0 5500 	strd	r5, r5, [r0]
 8016c88:	7403      	strb	r3, [r0, #16]
 8016c8a:	6145      	str	r5, [r0, #20]
 8016c8c:	7605      	strb	r5, [r0, #24]
 8016c8e:	83c5      	strh	r5, [r0, #30]
 8016c90:	8405      	strh	r5, [r0, #32]
 8016c92:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016c94:	8705      	strh	r5, [r0, #56]	; 0x38
 8016c96:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016c98:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016c9c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016ca0:	220e      	movs	r2, #14
 8016ca2:	4629      	mov	r1, r5
 8016ca4:	304c      	adds	r0, #76	; 0x4c
 8016ca6:	f00e f955 	bl	8024f54 <memset>
 8016caa:	2301      	movs	r3, #1
 8016cac:	4620      	mov	r0, r4
 8016cae:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016cb2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016cb6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016cba:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016cbe:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016cc2:	f7ef fe0f 	bl	80068e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016cc6:	4620      	mov	r0, r4
 8016cc8:	bd38      	pop	{r3, r4, r5, pc}

08016cca <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016cca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016ccc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cd0:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016cd2:	fab0 f080 	clz	r0, r0
 8016cd6:	0940      	lsrs	r0, r0, #5
 8016cd8:	4770      	bx	lr

08016cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016cda:	b530      	push	{r4, r5, lr}
 8016cdc:	2500      	movs	r5, #0
 8016cde:	2401      	movs	r4, #1
 8016ce0:	6843      	ldr	r3, [r0, #4]
 8016ce2:	b913      	cbnz	r3, 8016cea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016ce4:	6803      	ldr	r3, [r0, #0]
 8016ce6:	b313      	cbz	r3, 8016d2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016ce8:	6043      	str	r3, [r0, #4]
 8016cea:	7e03      	ldrb	r3, [r0, #24]
 8016cec:	b143      	cbz	r3, 8016d00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016cee:	6943      	ldr	r3, [r0, #20]
 8016cf0:	b12b      	cbz	r3, 8016cfe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cf2:	881a      	ldrh	r2, [r3, #0]
 8016cf4:	b11a      	cbz	r2, 8016cfe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cf6:	1c9a      	adds	r2, r3, #2
 8016cf8:	6142      	str	r2, [r0, #20]
 8016cfa:	8818      	ldrh	r0, [r3, #0]
 8016cfc:	bd30      	pop	{r4, r5, pc}
 8016cfe:	7605      	strb	r5, [r0, #24]
 8016d00:	6843      	ldr	r3, [r0, #4]
 8016d02:	8819      	ldrh	r1, [r3, #0]
 8016d04:	b199      	cbz	r1, 8016d2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016d06:	1c9a      	adds	r2, r3, #2
 8016d08:	2902      	cmp	r1, #2
 8016d0a:	6042      	str	r2, [r0, #4]
 8016d0c:	d1f5      	bne.n	8016cfa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016d0e:	7c03      	ldrb	r3, [r0, #16]
 8016d10:	2b01      	cmp	r3, #1
 8016d12:	d8e5      	bhi.n	8016ce0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d14:	1c5a      	adds	r2, r3, #1
 8016d16:	3302      	adds	r3, #2
 8016d18:	7402      	strb	r2, [r0, #16]
 8016d1a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016d1e:	6143      	str	r3, [r0, #20]
 8016d20:	2b00      	cmp	r3, #0
 8016d22:	d0dd      	beq.n	8016ce0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d24:	881b      	ldrh	r3, [r3, #0]
 8016d26:	2b00      	cmp	r3, #0
 8016d28:	d0da      	beq.n	8016ce0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d2a:	7604      	strb	r4, [r0, #24]
 8016d2c:	e7d8      	b.n	8016ce0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d2e:	2000      	movs	r0, #0
 8016d30:	e7e4      	b.n	8016cfc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016d32:	b430      	push	{r4, r5}
 8016d34:	6001      	str	r1, [r0, #0]
 8016d36:	2100      	movs	r1, #0
 8016d38:	6041      	str	r1, [r0, #4]
 8016d3a:	6815      	ldr	r5, [r2, #0]
 8016d3c:	6085      	str	r5, [r0, #8]
 8016d3e:	6852      	ldr	r2, [r2, #4]
 8016d40:	6443      	str	r3, [r0, #68]	; 0x44
 8016d42:	9b02      	ldr	r3, [sp, #8]
 8016d44:	60c2      	str	r2, [r0, #12]
 8016d46:	7401      	strb	r1, [r0, #16]
 8016d48:	6141      	str	r1, [r0, #20]
 8016d4a:	7601      	strb	r1, [r0, #24]
 8016d4c:	8701      	strh	r1, [r0, #56]	; 0x38
 8016d4e:	8401      	strh	r1, [r0, #32]
 8016d50:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016d54:	6483      	str	r3, [r0, #72]	; 0x48
 8016d56:	bc30      	pop	{r4, r5}
 8016d58:	f7ef bdc4 	b.w	80068e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016d5c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016d5c:	b408      	push	{r3}
 8016d5e:	b510      	push	{r4, lr}
 8016d60:	b085      	sub	sp, #20
 8016d62:	ac07      	add	r4, sp, #28
 8016d64:	f854 3b04 	ldr.w	r3, [r4], #4
 8016d68:	9300      	str	r3, [sp, #0]
 8016d6a:	4613      	mov	r3, r2
 8016d6c:	4622      	mov	r2, r4
 8016d6e:	9403      	str	r4, [sp, #12]
 8016d70:	f7ff ffdf 	bl	8016d32 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d74:	b005      	add	sp, #20
 8016d76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016d7a:	b001      	add	sp, #4
 8016d7c:	4770      	bx	lr

08016d7e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016d7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d80:	4605      	mov	r5, r0
 8016d82:	4608      	mov	r0, r1
 8016d84:	b1e9      	cbz	r1, 8016dc2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016d86:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016d8a:	460b      	mov	r3, r1
 8016d8c:	f101 0708 	add.w	r7, r1, #8
 8016d90:	4622      	mov	r2, r4
 8016d92:	6818      	ldr	r0, [r3, #0]
 8016d94:	6859      	ldr	r1, [r3, #4]
 8016d96:	4626      	mov	r6, r4
 8016d98:	c603      	stmia	r6!, {r0, r1}
 8016d9a:	3308      	adds	r3, #8
 8016d9c:	42bb      	cmp	r3, r7
 8016d9e:	4634      	mov	r4, r6
 8016da0:	d1f7      	bne.n	8016d92 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016da2:	6818      	ldr	r0, [r3, #0]
 8016da4:	6030      	str	r0, [r6, #0]
 8016da6:	889b      	ldrh	r3, [r3, #4]
 8016da8:	80b3      	strh	r3, [r6, #4]
 8016daa:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016dae:	015b      	lsls	r3, r3, #5
 8016db0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016db4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016db8:	430b      	orrs	r3, r1
 8016dba:	425b      	negs	r3, r3
 8016dbc:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016dc0:	4610      	mov	r0, r2
 8016dc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016dc4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016dc4:	b538      	push	{r3, r4, r5, lr}
 8016dc6:	460c      	mov	r4, r1
 8016dc8:	6811      	ldr	r1, [r2, #0]
 8016dca:	4610      	mov	r0, r2
 8016dcc:	68cd      	ldr	r5, [r1, #12]
 8016dce:	4619      	mov	r1, r3
 8016dd0:	47a8      	blx	r5
 8016dd2:	2800      	cmp	r0, #0
 8016dd4:	bf08      	it	eq
 8016dd6:	4620      	moveq	r0, r4
 8016dd8:	bd38      	pop	{r3, r4, r5, pc}
	...

08016ddc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016dde:	4604      	mov	r4, r0
 8016de0:	4615      	mov	r5, r2
 8016de2:	4608      	mov	r0, r1
 8016de4:	b93a      	cbnz	r2, 8016df6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016de6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016dea:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016dee:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016df2:	4628      	mov	r0, r5
 8016df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016df6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016dfa:	8893      	ldrh	r3, [r2, #4]
 8016dfc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016e00:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016e04:	79ee      	ldrb	r6, [r5, #7]
 8016e06:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016e0a:	4316      	orrs	r6, r2
 8016e0c:	19da      	adds	r2, r3, r7
 8016e0e:	b291      	uxth	r1, r2
 8016e10:	291d      	cmp	r1, #29
 8016e12:	b2b7      	uxth	r7, r6
 8016e14:	d87a      	bhi.n	8016f0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016e16:	2201      	movs	r2, #1
 8016e18:	408a      	lsls	r2, r1
 8016e1a:	4975      	ldr	r1, [pc, #468]	; (8016ff0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016e1c:	420a      	tst	r2, r1
 8016e1e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016e22:	d12d      	bne.n	8016e80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016e24:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016e28:	d070      	beq.n	8016f0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016e2a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016e2e:	462b      	mov	r3, r5
 8016e30:	f105 0e08 	add.w	lr, r5, #8
 8016e34:	4615      	mov	r5, r2
 8016e36:	6818      	ldr	r0, [r3, #0]
 8016e38:	6859      	ldr	r1, [r3, #4]
 8016e3a:	4694      	mov	ip, r2
 8016e3c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016e40:	3308      	adds	r3, #8
 8016e42:	4573      	cmp	r3, lr
 8016e44:	4662      	mov	r2, ip
 8016e46:	d1f6      	bne.n	8016e36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016e48:	6818      	ldr	r0, [r3, #0]
 8016e4a:	f8cc 0000 	str.w	r0, [ip]
 8016e4e:	889b      	ldrh	r3, [r3, #4]
 8016e50:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016e54:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016e58:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016e5c:	b2b3      	uxth	r3, r6
 8016e5e:	1aca      	subs	r2, r1, r3
 8016e60:	b292      	uxth	r2, r2
 8016e62:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016e66:	10d2      	asrs	r2, r2, #3
 8016e68:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016e6c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016e70:	4302      	orrs	r2, r0
 8016e72:	1bcf      	subs	r7, r1, r7
 8016e74:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016e78:	1afb      	subs	r3, r7, r3
 8016e7a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016e7e:	e7b8      	b.n	8016df2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016e82:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016e86:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016e88:	f640 6333 	movw	r3, #3635	; 0xe33
 8016e8c:	4299      	cmp	r1, r3
 8016e8e:	d110      	bne.n	8016eb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016e90:	6803      	ldr	r3, [r0, #0]
 8016e92:	68db      	ldr	r3, [r3, #12]
 8016e94:	4798      	blx	r3
 8016e96:	7b41      	ldrb	r1, [r0, #13]
 8016e98:	00cb      	lsls	r3, r1, #3
 8016e9a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e9e:	7a03      	ldrb	r3, [r0, #8]
 8016ea0:	0648      	lsls	r0, r1, #25
 8016ea2:	ea43 0302 	orr.w	r3, r3, r2
 8016ea6:	bf44      	itt	mi
 8016ea8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016eac:	b21b      	sxthmi	r3, r3
 8016eae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016eb2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016eb6:	443b      	add	r3, r7
 8016eb8:	4433      	add	r3, r6
 8016eba:	b29b      	uxth	r3, r3
 8016ebc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016ec0:	462a      	mov	r2, r5
 8016ec2:	f105 0c08 	add.w	ip, r5, #8
 8016ec6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016eca:	4635      	mov	r5, r6
 8016ecc:	6810      	ldr	r0, [r2, #0]
 8016ece:	6851      	ldr	r1, [r2, #4]
 8016ed0:	4637      	mov	r7, r6
 8016ed2:	c703      	stmia	r7!, {r0, r1}
 8016ed4:	3208      	adds	r2, #8
 8016ed6:	4562      	cmp	r2, ip
 8016ed8:	463e      	mov	r6, r7
 8016eda:	d1f7      	bne.n	8016ecc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016edc:	6810      	ldr	r0, [r2, #0]
 8016ede:	6038      	str	r0, [r7, #0]
 8016ee0:	8892      	ldrh	r2, [r2, #4]
 8016ee2:	80ba      	strh	r2, [r7, #4]
 8016ee4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016ee8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016eec:	10db      	asrs	r3, r3, #3
 8016eee:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016ef2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016ef6:	4313      	orrs	r3, r2
 8016ef8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016efc:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016f00:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016f04:	1a9b      	subs	r3, r3, r2
 8016f06:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016f0a:	e772      	b.n	8016df2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016f0c:	f023 0204 	bic.w	r2, r3, #4
 8016f10:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016f14:	428a      	cmp	r2, r1
 8016f16:	d003      	beq.n	8016f20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016f18:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016f1c:	4293      	cmp	r3, r2
 8016f1e:	d120      	bne.n	8016f62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016f20:	3b01      	subs	r3, #1
 8016f22:	4602      	mov	r2, r0
 8016f24:	b29b      	uxth	r3, r3
 8016f26:	4629      	mov	r1, r5
 8016f28:	4620      	mov	r0, r4
 8016f2a:	f7ff ff4b 	bl	8016dc4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016f2e:	7b41      	ldrb	r1, [r0, #13]
 8016f30:	00cb      	lsls	r3, r1, #3
 8016f32:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f36:	7a03      	ldrb	r3, [r0, #8]
 8016f38:	0649      	lsls	r1, r1, #25
 8016f3a:	ea43 0302 	orr.w	r3, r3, r2
 8016f3e:	bf44      	itt	mi
 8016f40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f44:	b21b      	sxthmi	r3, r3
 8016f46:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f4a:	7b6b      	ldrb	r3, [r5, #13]
 8016f4c:	7aaa      	ldrb	r2, [r5, #10]
 8016f4e:	005b      	lsls	r3, r3, #1
 8016f50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f54:	4313      	orrs	r3, r2
 8016f56:	115a      	asrs	r2, r3, #5
 8016f58:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016f5c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f60:	e036      	b.n	8016fd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016f62:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016f66:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016f6a:	7a2a      	ldrb	r2, [r5, #8]
 8016f6c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016f70:	ea42 0201 	orr.w	r2, r2, r1
 8016f74:	bf1c      	itt	ne
 8016f76:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016f7a:	b212      	sxthne	r2, r2
 8016f7c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016f80:	f640 6109 	movw	r1, #3593	; 0xe09
 8016f84:	f023 0210 	bic.w	r2, r3, #16
 8016f88:	428a      	cmp	r2, r1
 8016f8a:	d003      	beq.n	8016f94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016f8c:	f640 6213 	movw	r2, #3603	; 0xe13
 8016f90:	4293      	cmp	r3, r2
 8016f92:	d12a      	bne.n	8016fea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016f94:	7b6e      	ldrb	r6, [r5, #13]
 8016f96:	0076      	lsls	r6, r6, #1
 8016f98:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016f9c:	7aae      	ldrb	r6, [r5, #10]
 8016f9e:	4316      	orrs	r6, r2
 8016fa0:	f640 6213 	movw	r2, #3603	; 0xe13
 8016fa4:	4293      	cmp	r3, r2
 8016fa6:	bf18      	it	ne
 8016fa8:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016fac:	4602      	mov	r2, r0
 8016fae:	bf14      	ite	ne
 8016fb0:	b29b      	uxthne	r3, r3
 8016fb2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016fb6:	4629      	mov	r1, r5
 8016fb8:	4620      	mov	r0, r4
 8016fba:	f7ff ff03 	bl	8016dc4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016fbe:	7b43      	ldrb	r3, [r0, #13]
 8016fc0:	7a82      	ldrb	r2, [r0, #10]
 8016fc2:	005b      	lsls	r3, r3, #1
 8016fc4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016fc8:	4313      	orrs	r3, r2
 8016fca:	1af6      	subs	r6, r6, r3
 8016fcc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016fd0:	7b69      	ldrb	r1, [r5, #13]
 8016fd2:	00cb      	lsls	r3, r1, #3
 8016fd4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016fd8:	7a2b      	ldrb	r3, [r5, #8]
 8016fda:	4313      	orrs	r3, r2
 8016fdc:	064a      	lsls	r2, r1, #25
 8016fde:	bf44      	itt	mi
 8016fe0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fe4:	b21b      	sxthmi	r3, r3
 8016fe6:	1bdb      	subs	r3, r3, r7
 8016fe8:	e747      	b.n	8016e7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016fea:	2300      	movs	r3, #0
 8016fec:	e7b6      	b.n	8016f5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016fee:	bf00      	nop
 8016ff0:	3fc00079 	.word	0x3fc00079

08016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ff8:	4604      	mov	r4, r0
 8016ffa:	b942      	cbnz	r2, 801700e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016ffc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017000:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017004:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017008:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801700c:	e047      	b.n	801709e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801700e:	7b51      	ldrb	r1, [r2, #13]
 8017010:	8893      	ldrh	r3, [r2, #4]
 8017012:	010d      	lsls	r5, r1, #4
 8017014:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017018:	79d5      	ldrb	r5, [r2, #7]
 801701a:	4305      	orrs	r5, r0
 801701c:	2d04      	cmp	r5, #4
 801701e:	bfcc      	ite	gt
 8017020:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017024:	f04f 0e01 	movle.w	lr, #1
 8017028:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801702c:	f200 80ab 	bhi.w	8017186 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017030:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017034:	4283      	cmp	r3, r0
 8017036:	d216      	bcs.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017038:	f240 605b 	movw	r0, #1627	; 0x65b
 801703c:	4283      	cmp	r3, r0
 801703e:	d859      	bhi.n	80170f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017040:	f240 6057 	movw	r0, #1623	; 0x657
 8017044:	4283      	cmp	r3, r0
 8017046:	d20e      	bcs.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017048:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801704c:	d24a      	bcs.n	80170e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801704e:	f240 604e 	movw	r0, #1614	; 0x64e
 8017052:	4283      	cmp	r3, r0
 8017054:	d207      	bcs.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017056:	f240 601a 	movw	r0, #1562	; 0x61a
 801705a:	4283      	cmp	r3, r0
 801705c:	d02a      	beq.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801705e:	d821      	bhi.n	80170a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017060:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017064:	d35b      	bcc.n	801711e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017066:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801706a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801706e:	f040 80d0 	bne.w	8017212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017072:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017076:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801707a:	f040 80ca 	bne.w	8017212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801707e:	00cb      	lsls	r3, r1, #3
 8017080:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017084:	7a13      	ldrb	r3, [r2, #8]
 8017086:	0649      	lsls	r1, r1, #25
 8017088:	ea43 0300 	orr.w	r3, r3, r0
 801708c:	bf44      	itt	mi
 801708e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017092:	b21b      	sxthmi	r3, r3
 8017094:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017098:	1b5d      	subs	r5, r3, r5
 801709a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801709e:	4610      	mov	r0, r2
 80170a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80170a4:	f240 604b 	movw	r0, #1611	; 0x64b
 80170a8:	4283      	cmp	r3, r0
 80170aa:	d338      	bcc.n	801711e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170ac:	f240 604c 	movw	r0, #1612	; 0x64c
 80170b0:	4283      	cmp	r3, r0
 80170b2:	d9d8      	bls.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170b4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80170b8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80170bc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80170c0:	f040 80f2 	bne.w	80172a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80170c4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80170c8:	f040 80ee 	bne.w	80172a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80170cc:	00cb      	lsls	r3, r1, #3
 80170ce:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80170d2:	7a13      	ldrb	r3, [r2, #8]
 80170d4:	064e      	lsls	r6, r1, #25
 80170d6:	ea43 0300 	orr.w	r3, r3, r0
 80170da:	bf44      	itt	mi
 80170dc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80170e0:	b21b      	sxthmi	r3, r3
 80170e2:	e7d9      	b.n	8017098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80170e4:	f240 6054 	movw	r0, #1620	; 0x654
 80170e8:	4283      	cmp	r3, r0
 80170ea:	d8e3      	bhi.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170ec:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80170f0:	d9e0      	bls.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170f2:	e7b8      	b.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170f4:	f240 6074 	movw	r0, #1652	; 0x674
 80170f8:	4283      	cmp	r3, r0
 80170fa:	d0b4      	beq.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170fc:	d82d      	bhi.n	801715a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80170fe:	f240 605e 	movw	r0, #1630	; 0x65e
 8017102:	4283      	cmp	r3, r0
 8017104:	d804      	bhi.n	8017110 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017106:	f240 605d 	movw	r0, #1629	; 0x65d
 801710a:	4283      	cmp	r3, r0
 801710c:	d3d2      	bcc.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801710e:	e7aa      	b.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017110:	f240 605f 	movw	r0, #1631	; 0x65f
 8017114:	4283      	cmp	r3, r0
 8017116:	d0cd      	beq.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017118:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801711c:	d0a3      	beq.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801711e:	00cb      	lsls	r3, r1, #3
 8017120:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017124:	7a13      	ldrb	r3, [r2, #8]
 8017126:	0649      	lsls	r1, r1, #25
 8017128:	ea43 0300 	orr.w	r3, r3, r0
 801712c:	bf44      	itt	mi
 801712e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017132:	b21b      	sxthmi	r3, r3
 8017134:	1b5d      	subs	r5, r3, r5
 8017136:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801713a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801713e:	7b53      	ldrb	r3, [r2, #13]
 8017140:	015b      	lsls	r3, r3, #5
 8017142:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017146:	7993      	ldrb	r3, [r2, #6]
 8017148:	430b      	orrs	r3, r1
 801714a:	005b      	lsls	r3, r3, #1
 801714c:	2105      	movs	r1, #5
 801714e:	fb93 f3f1 	sdiv	r3, r3, r1
 8017152:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017156:	440b      	add	r3, r1
 8017158:	e756      	b.n	8017008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801715a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801715e:	4283      	cmp	r3, r0
 8017160:	d809      	bhi.n	8017176 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017162:	f240 60df 	movw	r0, #1759	; 0x6df
 8017166:	4283      	cmp	r3, r0
 8017168:	f4bf af7d 	bcs.w	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801716c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017170:	2b05      	cmp	r3, #5
 8017172:	d8d4      	bhi.n	801711e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017174:	e777      	b.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017176:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801717a:	4283      	cmp	r3, r0
 801717c:	d09a      	beq.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801717e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017182:	4283      	cmp	r3, r0
 8017184:	e7ca      	b.n	801711c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017186:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801718a:	d22b      	bcs.n	80171e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801718c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017190:	4283      	cmp	r3, r0
 8017192:	d28f      	bcs.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017194:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017198:	4283      	cmp	r3, r0
 801719a:	d816      	bhi.n	80171ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801719c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80171a0:	4283      	cmp	r3, r0
 80171a2:	f4bf af60 	bcs.w	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171a6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80171aa:	4283      	cmp	r3, r0
 80171ac:	d80a      	bhi.n	80171c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80171ae:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80171b2:	4283      	cmp	r3, r0
 80171b4:	f4bf af57 	bcs.w	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171b8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80171bc:	4283      	cmp	r3, r0
 80171be:	f43f af79 	beq.w	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171c2:	e7ac      	b.n	801711e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80171c4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80171c8:	e7f8      	b.n	80171bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80171ca:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80171ce:	4283      	cmp	r3, r0
 80171d0:	d802      	bhi.n	80171d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80171d2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80171d6:	e798      	b.n	801710a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80171d8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80171dc:	4283      	cmp	r3, r0
 80171de:	f47f af42 	bne.w	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171e2:	e767      	b.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171e4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80171e8:	4283      	cmp	r3, r0
 80171ea:	f43f af63 	beq.w	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171ee:	d802      	bhi.n	80171f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80171f0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80171f4:	e7f2      	b.n	80171dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80171f6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80171fa:	4283      	cmp	r3, r0
 80171fc:	d805      	bhi.n	801720a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80171fe:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017202:	4283      	cmp	r3, r0
 8017204:	f4ff af2f 	bcc.w	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017208:	e754      	b.n	80170b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801720a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801720e:	4283      	cmp	r3, r0
 8017210:	e7af      	b.n	8017172 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017212:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017216:	4617      	mov	r7, r2
 8017218:	f102 0808 	add.w	r8, r2, #8
 801721c:	4666      	mov	r6, ip
 801721e:	6838      	ldr	r0, [r7, #0]
 8017220:	6879      	ldr	r1, [r7, #4]
 8017222:	46e6      	mov	lr, ip
 8017224:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017228:	3708      	adds	r7, #8
 801722a:	4547      	cmp	r7, r8
 801722c:	46f4      	mov	ip, lr
 801722e:	d1f6      	bne.n	801721e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017230:	6838      	ldr	r0, [r7, #0]
 8017232:	f8ce 0000 	str.w	r0, [lr]
 8017236:	88b9      	ldrh	r1, [r7, #4]
 8017238:	f8ae 1004 	strh.w	r1, [lr, #4]
 801723c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017240:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017244:	d009      	beq.n	801725a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017246:	7b51      	ldrb	r1, [r2, #13]
 8017248:	7992      	ldrb	r2, [r2, #6]
 801724a:	0149      	lsls	r1, r1, #5
 801724c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017250:	4311      	orrs	r1, r2
 8017252:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017256:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801725a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801725e:	b2ad      	uxth	r5, r5
 8017260:	d00d      	beq.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8017262:	442b      	add	r3, r5
 8017264:	b29b      	uxth	r3, r3
 8017266:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801726a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801726e:	10db      	asrs	r3, r3, #3
 8017270:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017274:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017278:	4313      	orrs	r3, r2
 801727a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801727e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017282:	00cb      	lsls	r3, r1, #3
 8017284:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017288:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801728c:	064f      	lsls	r7, r1, #25
 801728e:	ea43 0302 	orr.w	r3, r3, r2
 8017292:	bf44      	itt	mi
 8017294:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017298:	b21b      	sxthmi	r3, r3
 801729a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801729e:	1b5b      	subs	r3, r3, r5
 80172a0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80172a4:	4632      	mov	r2, r6
 80172a6:	e6fa      	b.n	801709e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80172a8:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80172ac:	4617      	mov	r7, r2
 80172ae:	f102 0908 	add.w	r9, r2, #8
 80172b2:	4666      	mov	r6, ip
 80172b4:	6838      	ldr	r0, [r7, #0]
 80172b6:	6879      	ldr	r1, [r7, #4]
 80172b8:	46e0      	mov	r8, ip
 80172ba:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80172be:	3708      	adds	r7, #8
 80172c0:	454f      	cmp	r7, r9
 80172c2:	46c4      	mov	ip, r8
 80172c4:	d1f6      	bne.n	80172b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80172c6:	6838      	ldr	r0, [r7, #0]
 80172c8:	f8c8 0000 	str.w	r0, [r8]
 80172cc:	88b9      	ldrh	r1, [r7, #4]
 80172ce:	f8a8 1004 	strh.w	r1, [r8, #4]
 80172d2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80172d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80172da:	d009      	beq.n	80172f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80172dc:	7b51      	ldrb	r1, [r2, #13]
 80172de:	7992      	ldrb	r2, [r2, #6]
 80172e0:	0149      	lsls	r1, r1, #5
 80172e2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80172e6:	4311      	orrs	r1, r2
 80172e8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80172ec:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80172f0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80172f4:	d00e      	beq.n	8017314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80172f6:	eba3 030e 	sub.w	r3, r3, lr
 80172fa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80172fe:	b29b      	uxth	r3, r3
 8017300:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017304:	10db      	asrs	r3, r3, #3
 8017306:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801730a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801730e:	4313      	orrs	r3, r2
 8017310:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017314:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017318:	00cb      	lsls	r3, r1, #3
 801731a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801731e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017322:	0648      	lsls	r0, r1, #25
 8017324:	ea43 0302 	orr.w	r3, r3, r2
 8017328:	bf44      	itt	mi
 801732a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801732e:	b21b      	sxthmi	r3, r3
 8017330:	1b5d      	subs	r5, r3, r5
 8017332:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017336:	e7b5      	b.n	80172a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017338:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801733c:	461e      	mov	r6, r3
 801733e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017340:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017344:	4604      	mov	r4, r0
 8017346:	4617      	mov	r7, r2
 8017348:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801734c:	f7ef fa7a 	bl	8006844 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017350:	4605      	mov	r5, r0
 8017352:	b918      	cbnz	r0, 801735c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017354:	6030      	str	r0, [r6, #0]
 8017356:	4628      	mov	r0, r5
 8017358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801735c:	683b      	ldr	r3, [r7, #0]
 801735e:	4601      	mov	r1, r0
 8017360:	68db      	ldr	r3, [r3, #12]
 8017362:	4638      	mov	r0, r7
 8017364:	4798      	blx	r3
 8017366:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801736a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801736e:	4602      	mov	r2, r0
 8017370:	6030      	str	r0, [r6, #0]
 8017372:	d213      	bcs.n	801739c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8017374:	4643      	mov	r3, r8
 8017376:	4639      	mov	r1, r7
 8017378:	4620      	mov	r0, r4
 801737a:	f7ff fe3b 	bl	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801737e:	6030      	str	r0, [r6, #0]
 8017380:	6833      	ldr	r3, [r6, #0]
 8017382:	b143      	cbz	r3, 8017396 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8017384:	7b5a      	ldrb	r2, [r3, #13]
 8017386:	7a9b      	ldrb	r3, [r3, #10]
 8017388:	0052      	lsls	r2, r2, #1
 801738a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801738e:	4313      	orrs	r3, r2
 8017390:	bf0c      	ite	eq
 8017392:	2301      	moveq	r3, #1
 8017394:	2300      	movne	r3, #0
 8017396:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801739a:	e7dc      	b.n	8017356 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801739c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80173a0:	b29b      	uxth	r3, r3
 80173a2:	2b7f      	cmp	r3, #127	; 0x7f
 80173a4:	d804      	bhi.n	80173b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80173a6:	4639      	mov	r1, r7
 80173a8:	4620      	mov	r0, r4
 80173aa:	f7ff fd17 	bl	8016ddc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80173ae:	e7e6      	b.n	801737e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80173b0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80173b4:	2b00      	cmp	r3, #0
 80173b6:	d0e3      	beq.n	8017380 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80173b8:	f640 1302 	movw	r3, #2306	; 0x902
 80173bc:	429d      	cmp	r5, r3
 80173be:	d1df      	bne.n	8017380 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80173c0:	4601      	mov	r1, r0
 80173c2:	4620      	mov	r0, r4
 80173c4:	f7ff fcdb 	bl	8016d7e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80173c8:	e7d9      	b.n	801737e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080173ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80173ca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80173ce:	461e      	mov	r6, r3
 80173d0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80173d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80173d6:	4604      	mov	r4, r0
 80173d8:	4617      	mov	r7, r2
 80173da:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80173de:	f7ef fa31 	bl	8006844 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80173e2:	4605      	mov	r5, r0
 80173e4:	b918      	cbnz	r0, 80173ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80173e6:	6030      	str	r0, [r6, #0]
 80173e8:	4628      	mov	r0, r5
 80173ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80173ee:	683b      	ldr	r3, [r7, #0]
 80173f0:	4601      	mov	r1, r0
 80173f2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80173f6:	4638      	mov	r0, r7
 80173f8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80173fc:	47c8      	blx	r9
 80173fe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017402:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017406:	4602      	mov	r2, r0
 8017408:	6030      	str	r0, [r6, #0]
 801740a:	d213      	bcs.n	8017434 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801740c:	4643      	mov	r3, r8
 801740e:	4639      	mov	r1, r7
 8017410:	4620      	mov	r0, r4
 8017412:	f7ff fdef 	bl	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017416:	6030      	str	r0, [r6, #0]
 8017418:	6833      	ldr	r3, [r6, #0]
 801741a:	b143      	cbz	r3, 801742e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801741c:	7b5a      	ldrb	r2, [r3, #13]
 801741e:	7a9b      	ldrb	r3, [r3, #10]
 8017420:	0052      	lsls	r2, r2, #1
 8017422:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017426:	4313      	orrs	r3, r2
 8017428:	bf0c      	ite	eq
 801742a:	2301      	moveq	r3, #1
 801742c:	2300      	movne	r3, #0
 801742e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017432:	e7d9      	b.n	80173e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8017434:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017438:	b29b      	uxth	r3, r3
 801743a:	2b7f      	cmp	r3, #127	; 0x7f
 801743c:	d804      	bhi.n	8017448 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801743e:	4639      	mov	r1, r7
 8017440:	4620      	mov	r0, r4
 8017442:	f7ff fccb 	bl	8016ddc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017446:	e7e6      	b.n	8017416 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017448:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801744c:	2b00      	cmp	r3, #0
 801744e:	d0e3      	beq.n	8017418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017450:	f640 1302 	movw	r3, #2306	; 0x902
 8017454:	429d      	cmp	r5, r3
 8017456:	d1df      	bne.n	8017418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017458:	4601      	mov	r1, r0
 801745a:	4620      	mov	r0, r4
 801745c:	f7ff fc8f 	bl	8016d7e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017460:	e7d9      	b.n	8017416 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08017462 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8017462:	b510      	push	{r4, lr}
 8017464:	4604      	mov	r4, r0
 8017466:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801746a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801746c:	b1f1      	cbz	r1, 80174ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801746e:	2b0a      	cmp	r3, #10
 8017470:	d02f      	beq.n	80174d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017472:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8017474:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017478:	3901      	subs	r1, #1
 801747a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801747c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017480:	1c51      	adds	r1, r2, #1
 8017482:	b289      	uxth	r1, r1
 8017484:	2901      	cmp	r1, #1
 8017486:	bf84      	itt	hi
 8017488:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801748c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801748e:	f103 0201 	add.w	r2, r3, #1
 8017492:	8722      	strh	r2, [r4, #56]	; 0x38
 8017494:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017496:	bf98      	it	ls
 8017498:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801749a:	4413      	add	r3, r2
 801749c:	b29b      	uxth	r3, r3
 801749e:	2b09      	cmp	r3, #9
 80174a0:	bf88      	it	hi
 80174a2:	3b0a      	subhi	r3, #10
 80174a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80174a8:	8458      	strh	r0, [r3, #34]	; 0x22
 80174aa:	e7dc      	b.n	8017466 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80174ac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80174ae:	2b0a      	cmp	r3, #10
 80174b0:	d00f      	beq.n	80174d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80174b2:	4620      	mov	r0, r4
 80174b4:	f7ff fc11 	bl	8016cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80174b8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80174ba:	1c5a      	adds	r2, r3, #1
 80174bc:	8722      	strh	r2, [r4, #56]	; 0x38
 80174be:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80174c0:	4413      	add	r3, r2
 80174c2:	b29b      	uxth	r3, r3
 80174c4:	2b09      	cmp	r3, #9
 80174c6:	bf88      	it	hi
 80174c8:	3b0a      	subhi	r3, #10
 80174ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80174ce:	8458      	strh	r0, [r3, #34]	; 0x22
 80174d0:	e7ec      	b.n	80174ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80174d2:	bd10      	pop	{r4, pc}

080174d4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80174d4:	b538      	push	{r3, r4, r5, lr}
 80174d6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80174d8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80174dc:	4604      	mov	r4, r0
 80174de:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80174e0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80174e2:	3a01      	subs	r2, #1
 80174e4:	8702      	strh	r2, [r0, #56]	; 0x38
 80174e6:	1c5a      	adds	r2, r3, #1
 80174e8:	b292      	uxth	r2, r2
 80174ea:	2a09      	cmp	r2, #9
 80174ec:	bf86      	itte	hi
 80174ee:	3b09      	subhi	r3, #9
 80174f0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80174f2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80174f4:	f7ff ffb5 	bl	8017462 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80174f8:	8c23      	ldrh	r3, [r4, #32]
 80174fa:	2b01      	cmp	r3, #1
 80174fc:	bf9c      	itt	ls
 80174fe:	3301      	addls	r3, #1
 8017500:	8423      	strhls	r3, [r4, #32]
 8017502:	8be3      	ldrh	r3, [r4, #30]
 8017504:	b90b      	cbnz	r3, 801750a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8017506:	2302      	movs	r3, #2
 8017508:	83e3      	strh	r3, [r4, #30]
 801750a:	8be3      	ldrh	r3, [r4, #30]
 801750c:	3b01      	subs	r3, #1
 801750e:	b29b      	uxth	r3, r3
 8017510:	83e3      	strh	r3, [r4, #30]
 8017512:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017516:	4628      	mov	r0, r5
 8017518:	8365      	strh	r5, [r4, #26]
 801751a:	bd38      	pop	{r3, r4, r5, pc}

0801751c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801751c:	428a      	cmp	r2, r1
 801751e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017522:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8017524:	d931      	bls.n	801758a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8017526:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017528:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801752c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017530:	19ee      	adds	r6, r5, r7
 8017532:	1a54      	subs	r4, r2, r1
 8017534:	3e01      	subs	r6, #1
 8017536:	fa1f fe84 	uxth.w	lr, r4
 801753a:	b2b4      	uxth	r4, r6
 801753c:	eba4 090e 	sub.w	r9, r4, lr
 8017540:	fa1f f989 	uxth.w	r9, r9
 8017544:	2c09      	cmp	r4, #9
 8017546:	4626      	mov	r6, r4
 8017548:	bf88      	it	hi
 801754a:	f1a4 060a 	subhi.w	r6, r4, #10
 801754e:	f1bc 0f00 	cmp.w	ip, #0
 8017552:	bf08      	it	eq
 8017554:	f04f 0c02 	moveq.w	ip, #2
 8017558:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801755c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017560:	fa1f fc8c 	uxth.w	ip, ip
 8017564:	3c01      	subs	r4, #1
 8017566:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801756a:	b2a4      	uxth	r4, r4
 801756c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017570:	454c      	cmp	r4, r9
 8017572:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8017576:	d1e5      	bne.n	8017544 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017578:	eba5 050e 	sub.w	r5, r5, lr
 801757c:	eb0e 0408 	add.w	r4, lr, r8
 8017580:	8705      	strh	r5, [r0, #56]	; 0x38
 8017582:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8017586:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801758a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801758c:	1a64      	subs	r4, r4, r1
 801758e:	4439      	add	r1, r7
 8017590:	b289      	uxth	r1, r1
 8017592:	2909      	cmp	r1, #9
 8017594:	bf88      	it	hi
 8017596:	390a      	subhi	r1, #10
 8017598:	8704      	strh	r4, [r0, #56]	; 0x38
 801759a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801759c:	250a      	movs	r5, #10
 801759e:	b18a      	cbz	r2, 80175c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80175a0:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80175a2:	3a01      	subs	r2, #1
 80175a4:	b292      	uxth	r2, r2
 80175a6:	3101      	adds	r1, #1
 80175a8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80175ac:	8701      	strh	r1, [r0, #56]	; 0x38
 80175ae:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80175b0:	b901      	cbnz	r1, 80175b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80175b2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80175b4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80175b6:	3901      	subs	r1, #1
 80175b8:	b289      	uxth	r1, r1
 80175ba:	86c1      	strh	r1, [r0, #54]	; 0x36
 80175bc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80175c0:	844c      	strh	r4, [r1, #34]	; 0x22
 80175c2:	e7ec      	b.n	801759e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80175c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80175c8:	f7ff bf4b 	b.w	8017462 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080175cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80175cc:	b570      	push	{r4, r5, r6, lr}
 80175ce:	2500      	movs	r5, #0
 80175d0:	4295      	cmp	r5, r2
 80175d2:	d011      	beq.n	80175f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80175d4:	8bc4      	ldrh	r4, [r0, #30]
 80175d6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80175da:	4414      	add	r4, r2
 80175dc:	3c01      	subs	r4, #1
 80175de:	1b64      	subs	r4, r4, r5
 80175e0:	b2a4      	uxth	r4, r4
 80175e2:	2c01      	cmp	r4, #1
 80175e4:	bf88      	it	hi
 80175e6:	3c02      	subhi	r4, #2
 80175e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80175ec:	8b64      	ldrh	r4, [r4, #26]
 80175ee:	42b4      	cmp	r4, r6
 80175f0:	d117      	bne.n	8017622 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80175f2:	3501      	adds	r5, #1
 80175f4:	b2ad      	uxth	r5, r5
 80175f6:	e7eb      	b.n	80175d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80175f8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80175fc:	2400      	movs	r4, #0
 80175fe:	4413      	add	r3, r2
 8017600:	b2a2      	uxth	r2, r4
 8017602:	429a      	cmp	r2, r3
 8017604:	da0f      	bge.n	8017626 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8017606:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017608:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801760c:	4432      	add	r2, r6
 801760e:	b292      	uxth	r2, r2
 8017610:	2a09      	cmp	r2, #9
 8017612:	bf88      	it	hi
 8017614:	3a0a      	subhi	r2, #10
 8017616:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801761a:	3401      	adds	r4, #1
 801761c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801761e:	42aa      	cmp	r2, r5
 8017620:	d0ee      	beq.n	8017600 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017622:	2000      	movs	r0, #0
 8017624:	bd70      	pop	{r4, r5, r6, pc}
 8017626:	2001      	movs	r0, #1
 8017628:	e7fc      	b.n	8017624 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801762a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801762a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801762e:	4605      	mov	r5, r0
 8017630:	4616      	mov	r6, r2
 8017632:	1c8c      	adds	r4, r1, #2
 8017634:	8809      	ldrh	r1, [r1, #0]
 8017636:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801763a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801763e:	42b3      	cmp	r3, r6
 8017640:	d124      	bne.n	801768c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017642:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017646:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801764a:	f001 070f 	and.w	r7, r1, #15
 801764e:	f8cd 8000 	str.w	r8, [sp]
 8017652:	464b      	mov	r3, r9
 8017654:	4652      	mov	r2, sl
 8017656:	4621      	mov	r1, r4
 8017658:	4628      	mov	r0, r5
 801765a:	f7ff ffb7 	bl	80175cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801765e:	4683      	mov	fp, r0
 8017660:	b168      	cbz	r0, 801767e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017662:	eb0a 0109 	add.w	r1, sl, r9
 8017666:	4441      	add	r1, r8
 8017668:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801766c:	463a      	mov	r2, r7
 801766e:	4649      	mov	r1, r9
 8017670:	4628      	mov	r0, r5
 8017672:	f7ff ff53 	bl	801751c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017676:	4658      	mov	r0, fp
 8017678:	b003      	add	sp, #12
 801767a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801767e:	eb07 010a 	add.w	r1, r7, sl
 8017682:	4449      	add	r1, r9
 8017684:	4441      	add	r1, r8
 8017686:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801768a:	e7d2      	b.n	8017632 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801768c:	f04f 0b00 	mov.w	fp, #0
 8017690:	e7f1      	b.n	8017676 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017692:	b570      	push	{r4, r5, r6, lr}
 8017694:	8810      	ldrh	r0, [r2, #0]
 8017696:	4298      	cmp	r0, r3
 8017698:	d817      	bhi.n	80176ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801769a:	1e48      	subs	r0, r1, #1
 801769c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80176a0:	4298      	cmp	r0, r3
 80176a2:	d312      	bcc.n	80176ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80176a4:	2400      	movs	r4, #0
 80176a6:	428c      	cmp	r4, r1
 80176a8:	d20f      	bcs.n	80176ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80176aa:	1860      	adds	r0, r4, r1
 80176ac:	1040      	asrs	r0, r0, #1
 80176ae:	0085      	lsls	r5, r0, #2
 80176b0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80176b4:	42b3      	cmp	r3, r6
 80176b6:	d902      	bls.n	80176be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80176b8:	3001      	adds	r0, #1
 80176ba:	b284      	uxth	r4, r0
 80176bc:	e7f3      	b.n	80176a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80176be:	d201      	bcs.n	80176c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80176c0:	b281      	uxth	r1, r0
 80176c2:	e7f0      	b.n	80176a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80176c4:	442a      	add	r2, r5
 80176c6:	8850      	ldrh	r0, [r2, #2]
 80176c8:	bd70      	pop	{r4, r5, r6, pc}
 80176ca:	2000      	movs	r0, #0
 80176cc:	e7fc      	b.n	80176c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080176ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80176ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80176d2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80176d4:	886f      	ldrh	r7, [r5, #2]
 80176d6:	4604      	mov	r4, r0
 80176d8:	087f      	lsrs	r7, r7, #1
 80176da:	260b      	movs	r6, #11
 80176dc:	3e01      	subs	r6, #1
 80176de:	d013      	beq.n	8017708 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80176e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176e6:	462a      	mov	r2, r5
 80176e8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80176ec:	4639      	mov	r1, r7
 80176ee:	4643      	mov	r3, r8
 80176f0:	4620      	mov	r0, r4
 80176f2:	f7ff ffce 	bl	8017692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80176f6:	b138      	cbz	r0, 8017708 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176f8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80176fc:	4642      	mov	r2, r8
 80176fe:	4620      	mov	r0, r4
 8017700:	f7ff ff93 	bl	801762a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017704:	2800      	cmp	r0, #0
 8017706:	d1e9      	bne.n	80176dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801770c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801770c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801770e:	b08d      	sub	sp, #52	; 0x34
 8017710:	2300      	movs	r3, #0
 8017712:	9304      	str	r3, [sp, #16]
 8017714:	9305      	str	r3, [sp, #20]
 8017716:	9306      	str	r3, [sp, #24]
 8017718:	aa04      	add	r2, sp, #16
 801771a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801771e:	9307      	str	r3, [sp, #28]
 8017720:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8017724:	4613      	mov	r3, r2
 8017726:	f101 0710 	add.w	r7, r1, #16
 801772a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8017768 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801772e:	460c      	mov	r4, r1
 8017730:	4605      	mov	r5, r0
 8017732:	ecb4 7a01 	vldmia	r4!, {s14}
 8017736:	ecf5 6a01 	vldmia	r5!, {s13}
 801773a:	42bc      	cmp	r4, r7
 801773c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017740:	d1f7      	bne.n	8017732 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8017742:	3010      	adds	r0, #16
 8017744:	42b0      	cmp	r0, r6
 8017746:	ece2 7a01 	vstmia	r2!, {s15}
 801774a:	d1ee      	bne.n	801772a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801774c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801774e:	ac0c      	add	r4, sp, #48	; 0x30
 8017750:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8017754:	ed9d 0a08 	vldr	s0, [sp, #32]
 8017758:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801775c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8017760:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8017764:	b00d      	add	sp, #52	; 0x34
 8017766:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017768:	00000000 	.word	0x00000000

0801776c <_ZN8touchgfx9Matrix4x4C1Ev>:
 801776c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 801779c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8017770:	2300      	movs	r3, #0
 8017772:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017776:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801777a:	2200      	movs	r2, #0
 801777c:	4293      	cmp	r3, r2
 801777e:	f102 0201 	add.w	r2, r2, #1
 8017782:	bf14      	ite	ne
 8017784:	eef0 6a47 	vmovne.f32	s13, s14
 8017788:	eef0 6a67 	vmoveq.f32	s13, s15
 801778c:	2a04      	cmp	r2, #4
 801778e:	ece1 6a01 	vstmia	r1!, {s13}
 8017792:	d1f3      	bne.n	801777c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8017794:	3301      	adds	r3, #1
 8017796:	2b04      	cmp	r3, #4
 8017798:	d1ed      	bne.n	8017776 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801779a:	4770      	bx	lr
 801779c:	00000000 	.word	0x00000000

080177a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80177a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80177a4:	460c      	mov	r4, r1
 80177a6:	4605      	mov	r5, r0
 80177a8:	4690      	mov	r8, r2
 80177aa:	f7ff ffdf 	bl	801776c <_ZN8touchgfx9Matrix4x4C1Ev>
 80177ae:	4628      	mov	r0, r5
 80177b0:	4621      	mov	r1, r4
 80177b2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80177b6:	2300      	movs	r3, #0
 80177b8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80177f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80177bc:	eb08 0603 	add.w	r6, r8, r3
 80177c0:	460f      	mov	r7, r1
 80177c2:	2400      	movs	r4, #0
 80177c4:	4632      	mov	r2, r6
 80177c6:	ecf7 6a01 	vldmia	r7!, {s13}
 80177ca:	ed92 7a00 	vldr	s14, [r2]
 80177ce:	3401      	adds	r4, #1
 80177d0:	2c04      	cmp	r4, #4
 80177d2:	f106 0610 	add.w	r6, r6, #16
 80177d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80177da:	d1f3      	bne.n	80177c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80177dc:	18c2      	adds	r2, r0, r3
 80177de:	3304      	adds	r3, #4
 80177e0:	2b10      	cmp	r3, #16
 80177e2:	edc2 7a00 	vstr	s15, [r2]
 80177e6:	d1e7      	bne.n	80177b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80177e8:	3110      	adds	r1, #16
 80177ea:	4561      	cmp	r1, ip
 80177ec:	f100 0010 	add.w	r0, r0, #16
 80177f0:	d1e1      	bne.n	80177b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80177f2:	4628      	mov	r0, r5
 80177f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80177f8:	00000000 	.word	0x00000000

080177fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80177fc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017800:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8017804:	f100 0320 	add.w	r3, r0, #32
 8017808:	3030      	adds	r0, #48	; 0x30
 801780a:	ecf3 7a01 	vldmia	r3!, {s15}
 801780e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8017812:	4283      	cmp	r3, r0
 8017814:	edc3 7a03 	vstr	s15, [r3, #12]
 8017818:	d1f7      	bne.n	801780a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801781a:	4770      	bx	lr

0801781c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801781c:	b510      	push	{r4, lr}
 801781e:	ed2d 8b02 	vpush	{d8}
 8017822:	4604      	mov	r4, r0
 8017824:	eef0 8a40 	vmov.f32	s17, s0
 8017828:	f00c fdd6 	bl	80243d8 <sinf>
 801782c:	eeb0 8a40 	vmov.f32	s16, s0
 8017830:	eeb0 0a68 	vmov.f32	s0, s17
 8017834:	f00c fd4e 	bl	80242d4 <cosf>
 8017838:	f104 0310 	add.w	r3, r4, #16
 801783c:	f104 0220 	add.w	r2, r4, #32
 8017840:	eeb1 6a48 	vneg.f32	s12, s16
 8017844:	edd3 7a04 	vldr	s15, [r3, #16]
 8017848:	edd3 6a00 	vldr	s13, [r3]
 801784c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8017850:	ee67 7a80 	vmul.f32	s15, s15, s0
 8017854:	eea6 7a80 	vfma.f32	s14, s13, s0
 8017858:	eee6 7a88 	vfma.f32	s15, s13, s16
 801785c:	eca3 7a01 	vstmia	r3!, {s14}
 8017860:	429a      	cmp	r2, r3
 8017862:	edc3 7a03 	vstr	s15, [r3, #12]
 8017866:	d1ed      	bne.n	8017844 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8017868:	ecbd 8b02 	vpop	{d8}
 801786c:	4620      	mov	r0, r4
 801786e:	bd10      	pop	{r4, pc}

08017870 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8017870:	b510      	push	{r4, lr}
 8017872:	ed2d 8b02 	vpush	{d8}
 8017876:	4604      	mov	r4, r0
 8017878:	eef0 8a40 	vmov.f32	s17, s0
 801787c:	f00c fdac 	bl	80243d8 <sinf>
 8017880:	eeb0 8a40 	vmov.f32	s16, s0
 8017884:	eeb0 0a68 	vmov.f32	s0, s17
 8017888:	f00c fd24 	bl	80242d4 <cosf>
 801788c:	4623      	mov	r3, r4
 801788e:	f104 0210 	add.w	r2, r4, #16
 8017892:	eeb1 6a48 	vneg.f32	s12, s16
 8017896:	edd3 7a08 	vldr	s15, [r3, #32]
 801789a:	edd3 6a00 	vldr	s13, [r3]
 801789e:	ee27 7a88 	vmul.f32	s14, s15, s16
 80178a2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80178a6:	eea6 7a80 	vfma.f32	s14, s13, s0
 80178aa:	eee6 7a26 	vfma.f32	s15, s12, s13
 80178ae:	eca3 7a01 	vstmia	r3!, {s14}
 80178b2:	429a      	cmp	r2, r3
 80178b4:	edc3 7a07 	vstr	s15, [r3, #28]
 80178b8:	d1ed      	bne.n	8017896 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80178ba:	ecbd 8b02 	vpop	{d8}
 80178be:	4620      	mov	r0, r4
 80178c0:	bd10      	pop	{r4, pc}

080178c2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80178c2:	b510      	push	{r4, lr}
 80178c4:	ed2d 8b02 	vpush	{d8}
 80178c8:	4604      	mov	r4, r0
 80178ca:	eef0 8a40 	vmov.f32	s17, s0
 80178ce:	f00c fd83 	bl	80243d8 <sinf>
 80178d2:	eeb0 8a40 	vmov.f32	s16, s0
 80178d6:	eeb0 0a68 	vmov.f32	s0, s17
 80178da:	f00c fcfb 	bl	80242d4 <cosf>
 80178de:	4623      	mov	r3, r4
 80178e0:	f104 0210 	add.w	r2, r4, #16
 80178e4:	eeb1 6a48 	vneg.f32	s12, s16
 80178e8:	edd3 7a04 	vldr	s15, [r3, #16]
 80178ec:	edd3 6a00 	vldr	s13, [r3]
 80178f0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80178f4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80178f8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80178fc:	eee6 7a88 	vfma.f32	s15, s13, s16
 8017900:	eca3 7a01 	vstmia	r3!, {s14}
 8017904:	429a      	cmp	r2, r3
 8017906:	edc3 7a03 	vstr	s15, [r3, #12]
 801790a:	d1ed      	bne.n	80178e8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801790c:	ecbd 8b02 	vpop	{d8}
 8017910:	4620      	mov	r0, r4
 8017912:	bd10      	pop	{r4, pc}

08017914 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8017914:	4603      	mov	r3, r0
 8017916:	f100 0210 	add.w	r2, r0, #16
 801791a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801791e:	edd3 7a00 	vldr	s15, [r3]
 8017922:	eee7 7a00 	vfma.f32	s15, s14, s0
 8017926:	ece3 7a01 	vstmia	r3!, {s15}
 801792a:	4293      	cmp	r3, r2
 801792c:	d1f5      	bne.n	801791a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801792e:	4770      	bx	lr

08017930 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8017930:	f100 0310 	add.w	r3, r0, #16
 8017934:	f100 0220 	add.w	r2, r0, #32
 8017938:	ed93 7a08 	vldr	s14, [r3, #32]
 801793c:	edd3 7a00 	vldr	s15, [r3]
 8017940:	eee7 7a00 	vfma.f32	s15, s14, s0
 8017944:	ece3 7a01 	vstmia	r3!, {s15}
 8017948:	4293      	cmp	r3, r2
 801794a:	d1f5      	bne.n	8017938 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801794c:	4770      	bx	lr

0801794e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801794e:	f100 0320 	add.w	r3, r0, #32
 8017952:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8017956:	ed93 7a04 	vldr	s14, [r3, #16]
 801795a:	edd3 7a00 	vldr	s15, [r3]
 801795e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8017962:	ece3 7a01 	vstmia	r3!, {s15}
 8017966:	4293      	cmp	r3, r2
 8017968:	d1f5      	bne.n	8017956 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801796a:	4770      	bx	lr

0801796c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801796c:	4603      	mov	r3, r0
 801796e:	f100 0210 	add.w	r2, r0, #16
 8017972:	edd3 7a00 	vldr	s15, [r3]
 8017976:	ee67 7a80 	vmul.f32	s15, s15, s0
 801797a:	ece3 7a01 	vstmia	r3!, {s15}
 801797e:	4293      	cmp	r3, r2
 8017980:	d1f7      	bne.n	8017972 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8017982:	4770      	bx	lr

08017984 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8017984:	f100 0310 	add.w	r3, r0, #16
 8017988:	f100 0220 	add.w	r2, r0, #32
 801798c:	edd3 7a00 	vldr	s15, [r3]
 8017990:	ee67 7a80 	vmul.f32	s15, s15, s0
 8017994:	ece3 7a01 	vstmia	r3!, {s15}
 8017998:	4293      	cmp	r3, r2
 801799a:	d1f7      	bne.n	801798c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801799c:	4770      	bx	lr

0801799e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801799e:	f100 0320 	add.w	r3, r0, #32
 80179a2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80179a6:	edd3 7a00 	vldr	s15, [r3]
 80179aa:	ee67 7a80 	vmul.f32	s15, s15, s0
 80179ae:	ece3 7a01 	vstmia	r3!, {s15}
 80179b2:	4293      	cmp	r3, r2
 80179b4:	d1f7      	bne.n	80179a6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80179b6:	4770      	bx	lr

080179b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80179b8:	b570      	push	{r4, r5, r6, lr}
 80179ba:	694a      	ldr	r2, [r1, #20]
 80179bc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80179be:	684b      	ldr	r3, [r1, #4]
 80179c0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80179c2:	1b54      	subs	r4, r2, r5
 80179c4:	f000 8106 	beq.w	8017bd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80179c8:	1b9b      	subs	r3, r3, r6
 80179ca:	d003      	beq.n	80179d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80179cc:	4363      	muls	r3, r4
 80179ce:	2210      	movs	r2, #16
 80179d0:	fb93 f3f2 	sdiv	r3, r3, r2
 80179d4:	680c      	ldr	r4, [r1, #0]
 80179d6:	698a      	ldr	r2, [r1, #24]
 80179d8:	1b65      	subs	r5, r4, r5
 80179da:	f000 80fd 	beq.w	8017bd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80179de:	1b92      	subs	r2, r2, r6
 80179e0:	d003      	beq.n	80179ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80179e2:	436a      	muls	r2, r5
 80179e4:	2410      	movs	r4, #16
 80179e6:	fb92 f2f4 	sdiv	r2, r2, r4
 80179ea:	1a9b      	subs	r3, r3, r2
 80179ec:	ee07 3a90 	vmov	s15, r3
 80179f0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017c14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80179f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80179fc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017a00:	460a      	mov	r2, r1
 8017a02:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017a06:	4603      	mov	r3, r0
 8017a08:	f100 040c 	add.w	r4, r0, #12
 8017a0c:	eeb1 6a43 	vneg.f32	s12, s6
 8017a10:	edd2 7a02 	vldr	s15, [r2, #8]
 8017a14:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017a18:	3214      	adds	r2, #20
 8017a1a:	ece3 6a01 	vstmia	r3!, {s13}
 8017a1e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017a22:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017a26:	429c      	cmp	r4, r3
 8017a28:	edc3 7a02 	vstr	s15, [r3, #8]
 8017a2c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017a30:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017a34:	edc3 7a05 	vstr	s15, [r3, #20]
 8017a38:	d1ea      	bne.n	8017a10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017a3a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a3c:	698b      	ldr	r3, [r1, #24]
 8017a3e:	edd0 4a02 	vldr	s9, [r0, #8]
 8017a42:	edd0 3a00 	vldr	s7, [r0]
 8017a46:	edd0 6a01 	vldr	s13, [r0, #4]
 8017a4a:	ed90 5a05 	vldr	s10, [r0, #20]
 8017a4e:	ed90 2a03 	vldr	s4, [r0, #12]
 8017a52:	edd0 5a04 	vldr	s11, [r0, #16]
 8017a56:	ed90 1a07 	vldr	s2, [r0, #28]
 8017a5a:	edd0 2a06 	vldr	s5, [r0, #24]
 8017a5e:	1a9b      	subs	r3, r3, r2
 8017a60:	ee07 3a90 	vmov	s15, r3
 8017a64:	684b      	ldr	r3, [r1, #4]
 8017a66:	1a9b      	subs	r3, r3, r2
 8017a68:	ee07 3a10 	vmov	s14, r3
 8017a6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a70:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017a74:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017a78:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017a7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a80:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017a84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a88:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017a8c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017a90:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017a94:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017a98:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017a9c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017a9e:	694a      	ldr	r2, [r1, #20]
 8017aa0:	1b13      	subs	r3, r2, r4
 8017aa2:	ee07 3a10 	vmov	s14, r3
 8017aa6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017aaa:	680b      	ldr	r3, [r1, #0]
 8017aac:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017ab0:	1b1b      	subs	r3, r3, r4
 8017ab2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017ab6:	ee07 3a10 	vmov	s14, r3
 8017aba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017abe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017ac2:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017ac6:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017aca:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017ace:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017ad0:	698b      	ldr	r3, [r1, #24]
 8017ad2:	1a9b      	subs	r3, r3, r2
 8017ad4:	ee06 3a90 	vmov	s13, r3
 8017ad8:	684b      	ldr	r3, [r1, #4]
 8017ada:	1a9b      	subs	r3, r3, r2
 8017adc:	ee07 3a10 	vmov	s14, r3
 8017ae0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017ae4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017ae8:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017aec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017af0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017af4:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017af8:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017afc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017b00:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017b02:	694a      	ldr	r2, [r1, #20]
 8017b04:	1b13      	subs	r3, r2, r4
 8017b06:	ee07 3a10 	vmov	s14, r3
 8017b0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b0e:	680b      	ldr	r3, [r1, #0]
 8017b10:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b14:	1b1b      	subs	r3, r3, r4
 8017b16:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017b1a:	ee07 3a10 	vmov	s14, r3
 8017b1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b22:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b26:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017b2a:	edd0 5a08 	vldr	s11, [r0, #32]
 8017b2e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017b32:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017b36:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017b3a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017b3c:	698b      	ldr	r3, [r1, #24]
 8017b3e:	1a9b      	subs	r3, r3, r2
 8017b40:	ee07 3a10 	vmov	s14, r3
 8017b44:	684b      	ldr	r3, [r1, #4]
 8017b46:	1a9b      	subs	r3, r3, r2
 8017b48:	ee01 3a90 	vmov	s3, r3
 8017b4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b50:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017b54:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b58:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017b5c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017b60:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017b64:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017b68:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017b6c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017b70:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017b72:	694a      	ldr	r2, [r1, #20]
 8017b74:	1b13      	subs	r3, r2, r4
 8017b76:	ee03 3a10 	vmov	s6, r3
 8017b7a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017b7e:	680b      	ldr	r3, [r1, #0]
 8017b80:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017b84:	1b1b      	subs	r3, r3, r4
 8017b86:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017b8a:	ee03 3a10 	vmov	s6, r3
 8017b8e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017b92:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017b96:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017b9a:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017b9e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017ba2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017ba6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017baa:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bb2:	dd13      	ble.n	8017bdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017bb4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017bb8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017bbc:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017bbe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017bc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bca:	dd15      	ble.n	8017bf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017bcc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017bd0:	6403      	str	r3, [r0, #64]	; 0x40
 8017bd2:	bd70      	pop	{r4, r5, r6, pc}
 8017bd4:	4623      	mov	r3, r4
 8017bd6:	e6fd      	b.n	80179d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017bd8:	462a      	mov	r2, r5
 8017bda:	e706      	b.n	80179ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017bdc:	d502      	bpl.n	8017be4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017bde:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017be2:	e7e9      	b.n	8017bb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017be4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017be8:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017bec:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bf4:	dade      	bge.n	8017bb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017bf6:	e7f2      	b.n	8017bde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017bf8:	d502      	bpl.n	8017c00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017bfa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017bfe:	e7e7      	b.n	8017bd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017c00:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017c04:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017c08:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c10:	dadc      	bge.n	8017bcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017c12:	e7f2      	b.n	8017bfa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017c14:	3d800000 	.word	0x3d800000

08017c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017c18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017c1c:	2714      	movs	r7, #20
 8017c1e:	435f      	muls	r7, r3
 8017c20:	eb02 0c07 	add.w	ip, r2, r7
 8017c24:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017c28:	f115 0e0f 	adds.w	lr, r5, #15
 8017c2c:	f100 80a2 	bmi.w	8017d74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017c30:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017c34:	9c08      	ldr	r4, [sp, #32]
 8017c36:	f8c0 e014 	str.w	lr, [r0, #20]
 8017c3a:	2614      	movs	r6, #20
 8017c3c:	4366      	muls	r6, r4
 8017c3e:	eb02 0806 	add.w	r8, r2, r6
 8017c42:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017c46:	f115 040f 	adds.w	r4, r5, #15
 8017c4a:	f100 809f 	bmi.w	8017d8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017c4e:	1124      	asrs	r4, r4, #4
 8017c50:	eba4 040e 	sub.w	r4, r4, lr
 8017c54:	6184      	str	r4, [r0, #24]
 8017c56:	2c00      	cmp	r4, #0
 8017c58:	f000 808a 	beq.w	8017d70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017c5c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017c60:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017c64:	5995      	ldr	r5, [r2, r6]
 8017c66:	eba4 0809 	sub.w	r8, r4, r9
 8017c6a:	59d4      	ldr	r4, [r2, r7]
 8017c6c:	eba5 0a04 	sub.w	sl, r5, r4
 8017c70:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017c74:	fb0e fe05 	mul.w	lr, lr, r5
 8017c78:	fb0a ee19 	mls	lr, sl, r9, lr
 8017c7c:	fb08 e404 	mla	r4, r8, r4, lr
 8017c80:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017c84:	3c01      	subs	r4, #1
 8017c86:	19a4      	adds	r4, r4, r6
 8017c88:	f100 808c 	bmi.w	8017da4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017c8c:	fb94 fef6 	sdiv	lr, r4, r6
 8017c90:	f8c0 e000 	str.w	lr, [r0]
 8017c94:	fb06 441e 	mls	r4, r6, lr, r4
 8017c98:	6104      	str	r4, [r0, #16]
 8017c9a:	2d00      	cmp	r5, #0
 8017c9c:	f2c0 8095 	blt.w	8017dca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017ca0:	fb95 f4f6 	sdiv	r4, r5, r6
 8017ca4:	6044      	str	r4, [r0, #4]
 8017ca6:	fb06 5514 	mls	r5, r6, r4, r5
 8017caa:	6085      	str	r5, [r0, #8]
 8017cac:	60c6      	str	r6, [r0, #12]
 8017cae:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017cb2:	6945      	ldr	r5, [r0, #20]
 8017cb4:	59d2      	ldr	r2, [r2, r7]
 8017cb6:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017dec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017cba:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017cbe:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017cc2:	ee07 4a10 	vmov	s14, r4
 8017cc6:	6804      	ldr	r4, [r0, #0]
 8017cc8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017ccc:	ee07 2a90 	vmov	s15, r2
 8017cd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017cd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017cd8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017cdc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017ce0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017ce4:	edd3 6a00 	vldr	s13, [r3]
 8017ce8:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017cec:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017cf0:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017cf4:	edc0 6a07 	vstr	s13, [r0, #28]
 8017cf8:	edd0 6a01 	vldr	s13, [r0, #4]
 8017cfc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017d00:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017d04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017d08:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017d0c:	ed80 6a08 	vstr	s12, [r0, #32]
 8017d10:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017d12:	6242      	str	r2, [r0, #36]	; 0x24
 8017d14:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017d18:	ed93 6a03 	vldr	s12, [r3, #12]
 8017d1c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017d20:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017d24:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017d28:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017d2c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017d30:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017d34:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017d38:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017d3c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017d3e:	6302      	str	r2, [r0, #48]	; 0x30
 8017d40:	ed93 6a06 	vldr	s12, [r3, #24]
 8017d44:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017d48:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017d4c:	eeb0 7a46 	vmov.f32	s14, s12
 8017d50:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017d54:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017d58:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017d5c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017d60:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017d64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017d68:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017d6c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017d6e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017d74:	f1c5 0501 	rsb	r5, r5, #1
 8017d78:	f015 050f 	ands.w	r5, r5, #15
 8017d7c:	bf18      	it	ne
 8017d7e:	2501      	movne	r5, #1
 8017d80:	2410      	movs	r4, #16
 8017d82:	fb9e fef4 	sdiv	lr, lr, r4
 8017d86:	ebae 0e05 	sub.w	lr, lr, r5
 8017d8a:	e753      	b.n	8017c34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017d8c:	f1c5 0501 	rsb	r5, r5, #1
 8017d90:	f015 050f 	ands.w	r5, r5, #15
 8017d94:	bf18      	it	ne
 8017d96:	2501      	movne	r5, #1
 8017d98:	f04f 0910 	mov.w	r9, #16
 8017d9c:	fb94 f4f9 	sdiv	r4, r4, r9
 8017da0:	1b64      	subs	r4, r4, r5
 8017da2:	e755      	b.n	8017c50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017da4:	4264      	negs	r4, r4
 8017da6:	fb94 fef6 	sdiv	lr, r4, r6
 8017daa:	f1ce 0800 	rsb	r8, lr, #0
 8017dae:	fb06 441e 	mls	r4, r6, lr, r4
 8017db2:	f8c0 8000 	str.w	r8, [r0]
 8017db6:	6104      	str	r4, [r0, #16]
 8017db8:	2c00      	cmp	r4, #0
 8017dba:	f43f af6e 	beq.w	8017c9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017dbe:	ea6f 0e0e 	mvn.w	lr, lr
 8017dc2:	f8c0 e000 	str.w	lr, [r0]
 8017dc6:	1b34      	subs	r4, r6, r4
 8017dc8:	e766      	b.n	8017c98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017dca:	426d      	negs	r5, r5
 8017dcc:	fb95 f4f6 	sdiv	r4, r5, r6
 8017dd0:	f1c4 0e00 	rsb	lr, r4, #0
 8017dd4:	fb06 5514 	mls	r5, r6, r4, r5
 8017dd8:	f8c0 e004 	str.w	lr, [r0, #4]
 8017ddc:	6085      	str	r5, [r0, #8]
 8017dde:	2d00      	cmp	r5, #0
 8017de0:	f43f af64 	beq.w	8017cac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017de4:	43e4      	mvns	r4, r4
 8017de6:	6044      	str	r4, [r0, #4]
 8017de8:	1b75      	subs	r5, r6, r5
 8017dea:	e75e      	b.n	8017caa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017dec:	3d800000 	.word	0x3d800000

08017df0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017df0:	4602      	mov	r2, r0
 8017df2:	b148      	cbz	r0, 8017e08 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017df4:	2300      	movs	r3, #0
 8017df6:	b298      	uxth	r0, r3
 8017df8:	3301      	adds	r3, #1
 8017dfa:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017dfe:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017e02:	2900      	cmp	r1, #0
 8017e04:	d1f7      	bne.n	8017df6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017e06:	4770      	bx	lr
 8017e08:	4770      	bx	lr

08017e0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017e0a:	b530      	push	{r4, r5, lr}
 8017e0c:	4604      	mov	r4, r0
 8017e0e:	b159      	cbz	r1, 8017e28 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017e10:	b148      	cbz	r0, 8017e26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017e12:	2300      	movs	r3, #0
 8017e14:	b298      	uxth	r0, r3
 8017e16:	4282      	cmp	r2, r0
 8017e18:	d905      	bls.n	8017e26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017e1a:	5ccd      	ldrb	r5, [r1, r3]
 8017e1c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017e20:	3301      	adds	r3, #1
 8017e22:	2d00      	cmp	r5, #0
 8017e24:	d1f6      	bne.n	8017e14 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017e26:	bd30      	pop	{r4, r5, pc}
 8017e28:	4608      	mov	r0, r1
 8017e2a:	e7fc      	b.n	8017e26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017e2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8017e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e2e:	b08b      	sub	sp, #44	; 0x2c
 8017e30:	468c      	mov	ip, r1
 8017e32:	2100      	movs	r1, #0
 8017e34:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017e38:	ae01      	add	r6, sp, #4
 8017e3a:	211f      	movs	r1, #31
 8017e3c:	fbb0 f7f3 	udiv	r7, r0, r3
 8017e40:	fb03 0517 	mls	r5, r3, r7, r0
 8017e44:	b2ec      	uxtb	r4, r5
 8017e46:	2d09      	cmp	r5, #9
 8017e48:	bfd4      	ite	le
 8017e4a:	3430      	addle	r4, #48	; 0x30
 8017e4c:	3457      	addgt	r4, #87	; 0x57
 8017e4e:	b2e4      	uxtb	r4, r4
 8017e50:	558c      	strb	r4, [r1, r6]
 8017e52:	4638      	mov	r0, r7
 8017e54:	1e4c      	subs	r4, r1, #1
 8017e56:	b92f      	cbnz	r7, 8017e64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8017e58:	4431      	add	r1, r6
 8017e5a:	4660      	mov	r0, ip
 8017e5c:	f7ff ffd5 	bl	8017e0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017e60:	b00b      	add	sp, #44	; 0x2c
 8017e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e64:	4621      	mov	r1, r4
 8017e66:	e7e9      	b.n	8017e3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08017e68 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e6a:	4607      	mov	r7, r0
 8017e6c:	b08b      	sub	sp, #44	; 0x2c
 8017e6e:	4608      	mov	r0, r1
 8017e70:	b341      	cbz	r1, 8017ec4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8017e72:	1e99      	subs	r1, r3, #2
 8017e74:	2922      	cmp	r1, #34	; 0x22
 8017e76:	d825      	bhi.n	8017ec4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8017e78:	2100      	movs	r1, #0
 8017e7a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017e7e:	463c      	mov	r4, r7
 8017e80:	261f      	movs	r6, #31
 8017e82:	f10d 0c04 	add.w	ip, sp, #4
 8017e86:	fb94 fef3 	sdiv	lr, r4, r3
 8017e8a:	fb03 441e 	mls	r4, r3, lr, r4
 8017e8e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017e92:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017e96:	b2ec      	uxtb	r4, r5
 8017e98:	2d09      	cmp	r5, #9
 8017e9a:	bfd4      	ite	le
 8017e9c:	3430      	addle	r4, #48	; 0x30
 8017e9e:	3457      	addgt	r4, #87	; 0x57
 8017ea0:	b2e4      	uxtb	r4, r4
 8017ea2:	f80c 4006 	strb.w	r4, [ip, r6]
 8017ea6:	4674      	mov	r4, lr
 8017ea8:	1e71      	subs	r1, r6, #1
 8017eaa:	b96c      	cbnz	r4, 8017ec8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8017eac:	2f00      	cmp	r7, #0
 8017eae:	da05      	bge.n	8017ebc <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8017eb0:	ab0a      	add	r3, sp, #40	; 0x28
 8017eb2:	4419      	add	r1, r3
 8017eb4:	232d      	movs	r3, #45	; 0x2d
 8017eb6:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017eba:	1eb1      	subs	r1, r6, #2
 8017ebc:	3101      	adds	r1, #1
 8017ebe:	4461      	add	r1, ip
 8017ec0:	f7ff ffa3 	bl	8017e0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017ec4:	b00b      	add	sp, #44	; 0x2c
 8017ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017ec8:	460e      	mov	r6, r1
 8017eca:	e7dc      	b.n	8017e86 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08017ecc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ed0:	4691      	mov	r9, r2
 8017ed2:	b085      	sub	sp, #20
 8017ed4:	6802      	ldr	r2, [r0, #0]
 8017ed6:	9201      	str	r2, [sp, #4]
 8017ed8:	4688      	mov	r8, r1
 8017eda:	4683      	mov	fp, r0
 8017edc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017ee0:	9103      	str	r1, [sp, #12]
 8017ee2:	4610      	mov	r0, r2
 8017ee4:	461c      	mov	r4, r3
 8017ee6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017eea:	9302      	str	r3, [sp, #8]
 8017eec:	f7ff ff80 	bl	8017df0 <_ZN8touchgfx7Unicode6strlenEPKt>
 8017ef0:	f1b8 0f00 	cmp.w	r8, #0
 8017ef4:	bf0c      	ite	eq
 8017ef6:	4684      	moveq	ip, r0
 8017ef8:	f100 0c01 	addne.w	ip, r0, #1
 8017efc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017f00:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017f04:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017f06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017f08:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017f0c:	9903      	ldr	r1, [sp, #12]
 8017f0e:	fa1f fc8c 	uxth.w	ip, ip
 8017f12:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017f16:	d041      	beq.n	8017f9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017f18:	d834      	bhi.n	8017f84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017f1a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017f1e:	d059      	beq.n	8017fd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017f20:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017f24:	d03a      	beq.n	8017f9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017f26:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017f2a:	d034      	beq.n	8017f96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017f2c:	2400      	movs	r4, #0
 8017f2e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017f32:	3a01      	subs	r2, #1
 8017f34:	b169      	cbz	r1, 8017f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f36:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017f38:	458c      	cmp	ip, r1
 8017f3a:	da09      	bge.n	8017f50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017f3c:	eba1 010c 	sub.w	r1, r1, ip
 8017f40:	b289      	uxth	r1, r1
 8017f42:	b933      	cbnz	r3, 8017f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f44:	2e00      	cmp	r6, #0
 8017f46:	d051      	beq.n	8017fec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017f48:	2800      	cmp	r0, #0
 8017f4a:	d04f      	beq.n	8017fec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017f4c:	440c      	add	r4, r1
 8017f4e:	b2a4      	uxth	r4, r4
 8017f50:	2100      	movs	r1, #0
 8017f52:	682b      	ldr	r3, [r5, #0]
 8017f54:	4293      	cmp	r3, r2
 8017f56:	da07      	bge.n	8017f68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017f58:	f1b8 0f00 	cmp.w	r8, #0
 8017f5c:	d004      	beq.n	8017f68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017f5e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017f62:	682b      	ldr	r3, [r5, #0]
 8017f64:	3301      	adds	r3, #1
 8017f66:	602b      	str	r3, [r5, #0]
 8017f68:	2730      	movs	r7, #48	; 0x30
 8017f6a:	2c00      	cmp	r4, #0
 8017f6c:	d04e      	beq.n	801800c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017f6e:	682e      	ldr	r6, [r5, #0]
 8017f70:	3c01      	subs	r4, #1
 8017f72:	42b2      	cmp	r2, r6
 8017f74:	b2a4      	uxth	r4, r4
 8017f76:	dd49      	ble.n	801800c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017f78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017f7c:	682b      	ldr	r3, [r5, #0]
 8017f7e:	3301      	adds	r3, #1
 8017f80:	602b      	str	r3, [r5, #0]
 8017f82:	e7f2      	b.n	8017f6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017f84:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017f88:	d01d      	beq.n	8017fc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017f8a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017f8e:	d002      	beq.n	8017f96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017f90:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017f94:	e7c9      	b.n	8017f2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017f96:	4684      	mov	ip, r0
 8017f98:	f04f 0800 	mov.w	r8, #0
 8017f9c:	2c00      	cmp	r4, #0
 8017f9e:	d0c6      	beq.n	8017f2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017fa0:	b947      	cbnz	r7, 8017fb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017fa2:	2801      	cmp	r0, #1
 8017fa4:	d106      	bne.n	8017fb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017fa6:	8814      	ldrh	r4, [r2, #0]
 8017fa8:	2c30      	cmp	r4, #48	; 0x30
 8017faa:	bf02      	ittt	eq
 8017fac:	3202      	addeq	r2, #2
 8017fae:	f8cb 2000 	streq.w	r2, [fp]
 8017fb2:	4638      	moveq	r0, r7
 8017fb4:	45bc      	cmp	ip, r7
 8017fb6:	da14      	bge.n	8017fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017fb8:	b2bf      	uxth	r7, r7
 8017fba:	eba7 040c 	sub.w	r4, r7, ip
 8017fbe:	b2a4      	uxth	r4, r4
 8017fc0:	46bc      	mov	ip, r7
 8017fc2:	2600      	movs	r6, #0
 8017fc4:	e7b3      	b.n	8017f2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017fc6:	4684      	mov	ip, r0
 8017fc8:	b16c      	cbz	r4, 8017fe6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017fca:	42b8      	cmp	r0, r7
 8017fcc:	dd00      	ble.n	8017fd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017fce:	b2b8      	uxth	r0, r7
 8017fd0:	2400      	movs	r4, #0
 8017fd2:	e003      	b.n	8017fdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017fd4:	f04f 0c01 	mov.w	ip, #1
 8017fd8:	2400      	movs	r4, #0
 8017fda:	4660      	mov	r0, ip
 8017fdc:	4626      	mov	r6, r4
 8017fde:	46a0      	mov	r8, r4
 8017fe0:	e7a5      	b.n	8017f2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017fe2:	2400      	movs	r4, #0
 8017fe4:	e7ed      	b.n	8017fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017fe6:	4626      	mov	r6, r4
 8017fe8:	46a0      	mov	r8, r4
 8017fea:	e7a0      	b.n	8017f2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017fec:	2900      	cmp	r1, #0
 8017fee:	d0b0      	beq.n	8017f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017ff0:	2720      	movs	r7, #32
 8017ff2:	682e      	ldr	r6, [r5, #0]
 8017ff4:	2900      	cmp	r1, #0
 8017ff6:	d0ac      	beq.n	8017f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017ff8:	3901      	subs	r1, #1
 8017ffa:	4296      	cmp	r6, r2
 8017ffc:	b289      	uxth	r1, r1
 8017ffe:	daa7      	bge.n	8017f50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018000:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018004:	682b      	ldr	r3, [r5, #0]
 8018006:	3301      	adds	r3, #1
 8018008:	602b      	str	r3, [r5, #0]
 801800a:	e7f2      	b.n	8017ff2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801800c:	b188      	cbz	r0, 8018032 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801800e:	682b      	ldr	r3, [r5, #0]
 8018010:	3801      	subs	r0, #1
 8018012:	429a      	cmp	r2, r3
 8018014:	b280      	uxth	r0, r0
 8018016:	dd0c      	ble.n	8018032 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018018:	f8db 3000 	ldr.w	r3, [fp]
 801801c:	1c9c      	adds	r4, r3, #2
 801801e:	f8cb 4000 	str.w	r4, [fp]
 8018022:	881c      	ldrh	r4, [r3, #0]
 8018024:	682b      	ldr	r3, [r5, #0]
 8018026:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801802a:	682b      	ldr	r3, [r5, #0]
 801802c:	3301      	adds	r3, #1
 801802e:	602b      	str	r3, [r5, #0]
 8018030:	e7ec      	b.n	801800c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018032:	2620      	movs	r6, #32
 8018034:	b151      	cbz	r1, 801804c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018036:	6828      	ldr	r0, [r5, #0]
 8018038:	3901      	subs	r1, #1
 801803a:	4282      	cmp	r2, r0
 801803c:	b289      	uxth	r1, r1
 801803e:	dd05      	ble.n	801804c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018040:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018044:	682b      	ldr	r3, [r5, #0]
 8018046:	3301      	adds	r3, #1
 8018048:	602b      	str	r3, [r5, #0]
 801804a:	e7f3      	b.n	8018034 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801804c:	b005      	add	sp, #20
 801804e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018052 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018052:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018056:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801805a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801805e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018062:	2400      	movs	r4, #0
 8018064:	8014      	strh	r4, [r2, #0]
 8018066:	701c      	strb	r4, [r3, #0]
 8018068:	f888 4000 	strb.w	r4, [r8]
 801806c:	f88c 4000 	strb.w	r4, [ip]
 8018070:	f88e 4000 	strb.w	r4, [lr]
 8018074:	703c      	strb	r4, [r7, #0]
 8018076:	6804      	ldr	r4, [r0, #0]
 8018078:	b1a4      	cbz	r4, 80180a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801807a:	8824      	ldrh	r4, [r4, #0]
 801807c:	f04f 0901 	mov.w	r9, #1
 8018080:	b314      	cbz	r4, 80180c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018082:	2c2b      	cmp	r4, #43	; 0x2b
 8018084:	d001      	beq.n	801808a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018086:	2c20      	cmp	r4, #32
 8018088:	d110      	bne.n	80180ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801808a:	8014      	strh	r4, [r2, #0]
 801808c:	6804      	ldr	r4, [r0, #0]
 801808e:	b10c      	cbz	r4, 8018094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018090:	3402      	adds	r4, #2
 8018092:	6004      	str	r4, [r0, #0]
 8018094:	680c      	ldr	r4, [r1, #0]
 8018096:	b10c      	cbz	r4, 801809c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018098:	3401      	adds	r4, #1
 801809a:	600c      	str	r4, [r1, #0]
 801809c:	6804      	ldr	r4, [r0, #0]
 801809e:	b17c      	cbz	r4, 80180c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80180a0:	8824      	ldrh	r4, [r4, #0]
 80180a2:	e7ed      	b.n	8018080 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80180a4:	680c      	ldr	r4, [r1, #0]
 80180a6:	b17c      	cbz	r4, 80180c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80180a8:	7824      	ldrb	r4, [r4, #0]
 80180aa:	e7e7      	b.n	801807c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80180ac:	2c2d      	cmp	r4, #45	; 0x2d
 80180ae:	d102      	bne.n	80180b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80180b0:	f883 9000 	strb.w	r9, [r3]
 80180b4:	e7ea      	b.n	801808c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80180b6:	2c23      	cmp	r4, #35	; 0x23
 80180b8:	d107      	bne.n	80180ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80180ba:	f888 9000 	strb.w	r9, [r8]
 80180be:	e7e5      	b.n	801808c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80180c0:	680c      	ldr	r4, [r1, #0]
 80180c2:	b10c      	cbz	r4, 80180c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80180c4:	7824      	ldrb	r4, [r4, #0]
 80180c6:	e7db      	b.n	8018080 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80180c8:	2400      	movs	r4, #0
 80180ca:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80180ce:	2b09      	cmp	r3, #9
 80180d0:	d901      	bls.n	80180d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80180d2:	2c2a      	cmp	r4, #42	; 0x2a
 80180d4:	d122      	bne.n	801811c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80180d6:	2301      	movs	r3, #1
 80180d8:	2c30      	cmp	r4, #48	; 0x30
 80180da:	f88e 3000 	strb.w	r3, [lr]
 80180de:	d10d      	bne.n	80180fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80180e0:	f88c 3000 	strb.w	r3, [ip]
 80180e4:	6803      	ldr	r3, [r0, #0]
 80180e6:	b10b      	cbz	r3, 80180ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80180e8:	3302      	adds	r3, #2
 80180ea:	6003      	str	r3, [r0, #0]
 80180ec:	680b      	ldr	r3, [r1, #0]
 80180ee:	b10b      	cbz	r3, 80180f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80180f0:	3301      	adds	r3, #1
 80180f2:	600b      	str	r3, [r1, #0]
 80180f4:	6803      	ldr	r3, [r0, #0]
 80180f6:	2b00      	cmp	r3, #0
 80180f8:	d02f      	beq.n	801815a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80180fa:	881c      	ldrh	r4, [r3, #0]
 80180fc:	2c2a      	cmp	r4, #42	; 0x2a
 80180fe:	d135      	bne.n	801816c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018100:	f04f 33ff 	mov.w	r3, #4294967295
 8018104:	6033      	str	r3, [r6, #0]
 8018106:	6803      	ldr	r3, [r0, #0]
 8018108:	b10b      	cbz	r3, 801810e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801810a:	3302      	adds	r3, #2
 801810c:	6003      	str	r3, [r0, #0]
 801810e:	680b      	ldr	r3, [r1, #0]
 8018110:	b10b      	cbz	r3, 8018116 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018112:	3301      	adds	r3, #1
 8018114:	600b      	str	r3, [r1, #0]
 8018116:	6803      	ldr	r3, [r0, #0]
 8018118:	b31b      	cbz	r3, 8018162 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801811a:	881c      	ldrh	r4, [r3, #0]
 801811c:	2c2e      	cmp	r4, #46	; 0x2e
 801811e:	d11a      	bne.n	8018156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018120:	2301      	movs	r3, #1
 8018122:	703b      	strb	r3, [r7, #0]
 8018124:	6803      	ldr	r3, [r0, #0]
 8018126:	b10b      	cbz	r3, 801812c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018128:	3302      	adds	r3, #2
 801812a:	6003      	str	r3, [r0, #0]
 801812c:	680b      	ldr	r3, [r1, #0]
 801812e:	b10b      	cbz	r3, 8018134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018130:	3301      	adds	r3, #1
 8018132:	600b      	str	r3, [r1, #0]
 8018134:	6803      	ldr	r3, [r0, #0]
 8018136:	2b00      	cmp	r3, #0
 8018138:	d036      	beq.n	80181a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801813a:	881b      	ldrh	r3, [r3, #0]
 801813c:	2b2a      	cmp	r3, #42	; 0x2a
 801813e:	d137      	bne.n	80181b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018140:	f04f 33ff 	mov.w	r3, #4294967295
 8018144:	602b      	str	r3, [r5, #0]
 8018146:	6803      	ldr	r3, [r0, #0]
 8018148:	b10b      	cbz	r3, 801814e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801814a:	3302      	adds	r3, #2
 801814c:	6003      	str	r3, [r0, #0]
 801814e:	680b      	ldr	r3, [r1, #0]
 8018150:	b10b      	cbz	r3, 8018156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018152:	3301      	adds	r3, #1
 8018154:	600b      	str	r3, [r1, #0]
 8018156:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801815a:	680c      	ldr	r4, [r1, #0]
 801815c:	b134      	cbz	r4, 801816c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801815e:	7824      	ldrb	r4, [r4, #0]
 8018160:	e7cc      	b.n	80180fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018162:	680b      	ldr	r3, [r1, #0]
 8018164:	2b00      	cmp	r3, #0
 8018166:	d0f6      	beq.n	8018156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018168:	781c      	ldrb	r4, [r3, #0]
 801816a:	e7d7      	b.n	801811c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801816c:	2300      	movs	r3, #0
 801816e:	6033      	str	r3, [r6, #0]
 8018170:	220a      	movs	r2, #10
 8018172:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018176:	fa1f f38c 	uxth.w	r3, ip
 801817a:	2b09      	cmp	r3, #9
 801817c:	d8ce      	bhi.n	801811c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801817e:	6833      	ldr	r3, [r6, #0]
 8018180:	fb02 c303 	mla	r3, r2, r3, ip
 8018184:	6033      	str	r3, [r6, #0]
 8018186:	6803      	ldr	r3, [r0, #0]
 8018188:	b10b      	cbz	r3, 801818e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801818a:	3302      	adds	r3, #2
 801818c:	6003      	str	r3, [r0, #0]
 801818e:	680b      	ldr	r3, [r1, #0]
 8018190:	b10b      	cbz	r3, 8018196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018192:	3301      	adds	r3, #1
 8018194:	600b      	str	r3, [r1, #0]
 8018196:	6803      	ldr	r3, [r0, #0]
 8018198:	b10b      	cbz	r3, 801819e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801819a:	881c      	ldrh	r4, [r3, #0]
 801819c:	e7e9      	b.n	8018172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801819e:	680c      	ldr	r4, [r1, #0]
 80181a0:	2c00      	cmp	r4, #0
 80181a2:	d0e6      	beq.n	8018172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80181a4:	7824      	ldrb	r4, [r4, #0]
 80181a6:	e7e4      	b.n	8018172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80181a8:	680b      	ldr	r3, [r1, #0]
 80181aa:	b10b      	cbz	r3, 80181b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80181ac:	781b      	ldrb	r3, [r3, #0]
 80181ae:	e7c5      	b.n	801813c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80181b0:	2200      	movs	r2, #0
 80181b2:	602a      	str	r2, [r5, #0]
 80181b4:	240a      	movs	r4, #10
 80181b6:	3b30      	subs	r3, #48	; 0x30
 80181b8:	b29e      	uxth	r6, r3
 80181ba:	2e09      	cmp	r6, #9
 80181bc:	682a      	ldr	r2, [r5, #0]
 80181be:	d813      	bhi.n	80181e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80181c0:	fb04 3302 	mla	r3, r4, r2, r3
 80181c4:	602b      	str	r3, [r5, #0]
 80181c6:	6803      	ldr	r3, [r0, #0]
 80181c8:	b10b      	cbz	r3, 80181ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80181ca:	3302      	adds	r3, #2
 80181cc:	6003      	str	r3, [r0, #0]
 80181ce:	680b      	ldr	r3, [r1, #0]
 80181d0:	b10b      	cbz	r3, 80181d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80181d2:	3301      	adds	r3, #1
 80181d4:	600b      	str	r3, [r1, #0]
 80181d6:	6803      	ldr	r3, [r0, #0]
 80181d8:	b10b      	cbz	r3, 80181de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80181da:	881b      	ldrh	r3, [r3, #0]
 80181dc:	e7eb      	b.n	80181b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80181de:	680b      	ldr	r3, [r1, #0]
 80181e0:	2b00      	cmp	r3, #0
 80181e2:	d0e8      	beq.n	80181b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80181e4:	781b      	ldrb	r3, [r3, #0]
 80181e6:	e7e6      	b.n	80181b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80181e8:	2a06      	cmp	r2, #6
 80181ea:	bfa8      	it	ge
 80181ec:	2206      	movge	r2, #6
 80181ee:	602a      	str	r2, [r5, #0]
 80181f0:	e7b1      	b.n	8018156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080181f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80181f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181f6:	b0a3      	sub	sp, #140	; 0x8c
 80181f8:	2600      	movs	r6, #0
 80181fa:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80181fe:	4607      	mov	r7, r0
 8018200:	4688      	mov	r8, r1
 8018202:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018206:	4631      	mov	r1, r6
 8018208:	2242      	movs	r2, #66	; 0x42
 801820a:	4648      	mov	r0, r9
 801820c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801820e:	960d      	str	r6, [sp, #52]	; 0x34
 8018210:	f00c fea0 	bl	8024f54 <memset>
 8018214:	b15f      	cbz	r7, 801822e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018216:	f108 3aff 	add.w	sl, r8, #4294967295
 801821a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801821c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801821e:	b152      	cbz	r2, 8018236 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018220:	8812      	ldrh	r2, [r2, #0]
 8018222:	b10a      	cbz	r2, 8018228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018224:	459a      	cmp	sl, r3
 8018226:	dc2e      	bgt.n	8018286 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018228:	2200      	movs	r2, #0
 801822a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801822e:	4638      	mov	r0, r7
 8018230:	b023      	add	sp, #140	; 0x8c
 8018232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018236:	9a08      	ldr	r2, [sp, #32]
 8018238:	2a00      	cmp	r2, #0
 801823a:	d0f5      	beq.n	8018228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801823c:	7812      	ldrb	r2, [r2, #0]
 801823e:	e7f0      	b.n	8018222 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018240:	2d00      	cmp	r5, #0
 8018242:	d0ea      	beq.n	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018244:	782a      	ldrb	r2, [r5, #0]
 8018246:	b142      	cbz	r2, 801825a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018248:	2a25      	cmp	r2, #37	; 0x25
 801824a:	d001      	beq.n	8018250 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801824c:	459a      	cmp	sl, r3
 801824e:	dc08      	bgt.n	8018262 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018250:	f1bb 0f00 	cmp.w	fp, #0
 8018254:	d121      	bne.n	801829a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018256:	2d00      	cmp	r5, #0
 8018258:	d0df      	beq.n	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801825a:	782a      	ldrb	r2, [r5, #0]
 801825c:	f04f 0b00 	mov.w	fp, #0
 8018260:	e01d      	b.n	801829e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018262:	f1bb 0f00 	cmp.w	fp, #0
 8018266:	d078      	beq.n	801835a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018268:	f8bb 2000 	ldrh.w	r2, [fp]
 801826c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018270:	f1bb 0f00 	cmp.w	fp, #0
 8018274:	d002      	beq.n	801827c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018276:	f10b 0202 	add.w	r2, fp, #2
 801827a:	9209      	str	r2, [sp, #36]	; 0x24
 801827c:	b10d      	cbz	r5, 8018282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801827e:	3501      	adds	r5, #1
 8018280:	9508      	str	r5, [sp, #32]
 8018282:	3301      	adds	r3, #1
 8018284:	930d      	str	r3, [sp, #52]	; 0x34
 8018286:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801828a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801828c:	f1bb 0f00 	cmp.w	fp, #0
 8018290:	d0d6      	beq.n	8018240 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018292:	f8bb 2000 	ldrh.w	r2, [fp]
 8018296:	2a00      	cmp	r2, #0
 8018298:	d1d6      	bne.n	8018248 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801829a:	f8bb 2000 	ldrh.w	r2, [fp]
 801829e:	2a00      	cmp	r2, #0
 80182a0:	d0bb      	beq.n	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182a2:	459a      	cmp	sl, r3
 80182a4:	ddb9      	ble.n	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182a6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80182aa:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80182ae:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80182b2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80182b6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80182ba:	960e      	str	r6, [sp, #56]	; 0x38
 80182bc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80182c0:	960f      	str	r6, [sp, #60]	; 0x3c
 80182c2:	f1bb 0f00 	cmp.w	fp, #0
 80182c6:	d002      	beq.n	80182ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80182c8:	f10b 0302 	add.w	r3, fp, #2
 80182cc:	9309      	str	r3, [sp, #36]	; 0x24
 80182ce:	b10d      	cbz	r5, 80182d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80182d0:	1c6b      	adds	r3, r5, #1
 80182d2:	9308      	str	r3, [sp, #32]
 80182d4:	ab0f      	add	r3, sp, #60	; 0x3c
 80182d6:	9305      	str	r3, [sp, #20]
 80182d8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80182dc:	9304      	str	r3, [sp, #16]
 80182de:	ab0e      	add	r3, sp, #56	; 0x38
 80182e0:	9303      	str	r3, [sp, #12]
 80182e2:	ab0c      	add	r3, sp, #48	; 0x30
 80182e4:	9302      	str	r3, [sp, #8]
 80182e6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80182ea:	9301      	str	r3, [sp, #4]
 80182ec:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80182f0:	9300      	str	r3, [sp, #0]
 80182f2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80182f6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80182fa:	a908      	add	r1, sp, #32
 80182fc:	a809      	add	r0, sp, #36	; 0x24
 80182fe:	f7ff fea8 	bl	8018052 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018302:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018304:	2b00      	cmp	r3, #0
 8018306:	bfbe      	ittt	lt
 8018308:	6823      	ldrlt	r3, [r4, #0]
 801830a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801830e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018310:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018312:	bfb8      	it	lt
 8018314:	3404      	addlt	r4, #4
 8018316:	2b00      	cmp	r3, #0
 8018318:	bfb8      	it	lt
 801831a:	6823      	ldrlt	r3, [r4, #0]
 801831c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018320:	bfbe      	ittt	lt
 8018322:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018326:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018328:	3404      	addlt	r4, #4
 801832a:	b1d9      	cbz	r1, 8018364 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801832c:	880b      	ldrh	r3, [r1, #0]
 801832e:	2b69      	cmp	r3, #105	; 0x69
 8018330:	d01f      	beq.n	8018372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018332:	d82f      	bhi.n	8018394 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018334:	2b58      	cmp	r3, #88	; 0x58
 8018336:	d01c      	beq.n	8018372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018338:	d818      	bhi.n	801836c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801833a:	2b25      	cmp	r3, #37	; 0x25
 801833c:	d034      	beq.n	80183a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801833e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018342:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018344:	f1bb 0f00 	cmp.w	fp, #0
 8018348:	f000 80b8 	beq.w	80184bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801834c:	f8bb 5000 	ldrh.w	r5, [fp]
 8018350:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018354:	3301      	adds	r3, #1
 8018356:	930d      	str	r3, [sp, #52]	; 0x34
 8018358:	e029      	b.n	80183ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801835a:	b10d      	cbz	r5, 8018360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801835c:	782a      	ldrb	r2, [r5, #0]
 801835e:	e785      	b.n	801826c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018360:	462a      	mov	r2, r5
 8018362:	e783      	b.n	801826c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018364:	2a00      	cmp	r2, #0
 8018366:	d0ea      	beq.n	801833e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018368:	7813      	ldrb	r3, [r2, #0]
 801836a:	e7e0      	b.n	801832e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801836c:	3b63      	subs	r3, #99	; 0x63
 801836e:	2b01      	cmp	r3, #1
 8018370:	d8e5      	bhi.n	801833e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018372:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018376:	b329      	cbz	r1, 80183c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018378:	880b      	ldrh	r3, [r1, #0]
 801837a:	2b69      	cmp	r3, #105	; 0x69
 801837c:	d063      	beq.n	8018446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801837e:	d825      	bhi.n	80183cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018380:	2b63      	cmp	r3, #99	; 0x63
 8018382:	d038      	beq.n	80183f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018384:	2b64      	cmp	r3, #100	; 0x64
 8018386:	d05e      	beq.n	8018446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018388:	2b58      	cmp	r3, #88	; 0x58
 801838a:	d07b      	beq.n	8018484 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801838c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018390:	4625      	mov	r5, r4
 8018392:	e036      	b.n	8018402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018394:	2b73      	cmp	r3, #115	; 0x73
 8018396:	d0ec      	beq.n	8018372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018398:	d802      	bhi.n	80183a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801839a:	2b6f      	cmp	r3, #111	; 0x6f
 801839c:	d1cf      	bne.n	801833e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801839e:	e7e8      	b.n	8018372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80183a0:	2b75      	cmp	r3, #117	; 0x75
 80183a2:	d0e6      	beq.n	8018372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80183a4:	2b78      	cmp	r3, #120	; 0x78
 80183a6:	e7f9      	b.n	801839c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80183a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183aa:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80183ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183b0:	b10b      	cbz	r3, 80183b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80183b2:	3302      	adds	r3, #2
 80183b4:	9309      	str	r3, [sp, #36]	; 0x24
 80183b6:	9b08      	ldr	r3, [sp, #32]
 80183b8:	2b00      	cmp	r3, #0
 80183ba:	f43f af2e 	beq.w	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80183be:	3301      	adds	r3, #1
 80183c0:	9308      	str	r3, [sp, #32]
 80183c2:	e72a      	b.n	801821a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80183c4:	2a00      	cmp	r2, #0
 80183c6:	d0e1      	beq.n	801838c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80183c8:	7813      	ldrb	r3, [r2, #0]
 80183ca:	e7d6      	b.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80183cc:	2b73      	cmp	r3, #115	; 0x73
 80183ce:	d036      	beq.n	801843e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80183d0:	d807      	bhi.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80183d2:	2b6f      	cmp	r3, #111	; 0x6f
 80183d4:	d1da      	bne.n	801838c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80183d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183d8:	1d25      	adds	r5, r4, #4
 80183da:	eba8 0202 	sub.w	r2, r8, r2
 80183de:	2308      	movs	r3, #8
 80183e0:	e04a      	b.n	8018478 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80183e2:	2b75      	cmp	r3, #117	; 0x75
 80183e4:	d043      	beq.n	801846e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80183e6:	2b78      	cmp	r3, #120	; 0x78
 80183e8:	d1d0      	bne.n	801838c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80183ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183ec:	1d25      	adds	r5, r4, #4
 80183ee:	eba8 0202 	sub.w	r2, r8, r2
 80183f2:	2310      	movs	r3, #16
 80183f4:	e040      	b.n	8018478 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80183f6:	6823      	ldr	r3, [r4, #0]
 80183f8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80183fc:	1d25      	adds	r5, r4, #4
 80183fe:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018402:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018404:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018408:	2b00      	cmp	r3, #0
 801840a:	d052      	beq.n	80184b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801840c:	881a      	ldrh	r2, [r3, #0]
 801840e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018412:	a80d      	add	r0, sp, #52	; 0x34
 8018414:	9005      	str	r0, [sp, #20]
 8018416:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801841a:	9004      	str	r0, [sp, #16]
 801841c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801841e:	9003      	str	r0, [sp, #12]
 8018420:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018424:	9002      	str	r0, [sp, #8]
 8018426:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018428:	9001      	str	r0, [sp, #4]
 801842a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801842e:	9000      	str	r0, [sp, #0]
 8018430:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018434:	a810      	add	r0, sp, #64	; 0x40
 8018436:	f7ff fd49 	bl	8017ecc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801843a:	462c      	mov	r4, r5
 801843c:	e7b7      	b.n	80183ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801843e:	6823      	ldr	r3, [r4, #0]
 8018440:	1d25      	adds	r5, r4, #4
 8018442:	9310      	str	r3, [sp, #64]	; 0x40
 8018444:	e7dd      	b.n	8018402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018446:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018448:	6820      	ldr	r0, [r4, #0]
 801844a:	eba8 0202 	sub.w	r2, r8, r2
 801844e:	230a      	movs	r3, #10
 8018450:	b292      	uxth	r2, r2
 8018452:	4649      	mov	r1, r9
 8018454:	f7ff fd08 	bl	8017e68 <_ZN8touchgfx7Unicode4itoaElPtti>
 8018458:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801845c:	2b2d      	cmp	r3, #45	; 0x2d
 801845e:	f104 0504 	add.w	r5, r4, #4
 8018462:	d1ce      	bne.n	8018402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018464:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018468:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801846a:	3302      	adds	r3, #2
 801846c:	e7e9      	b.n	8018442 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801846e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018470:	1d25      	adds	r5, r4, #4
 8018472:	eba8 0202 	sub.w	r2, r8, r2
 8018476:	230a      	movs	r3, #10
 8018478:	b292      	uxth	r2, r2
 801847a:	4649      	mov	r1, r9
 801847c:	6820      	ldr	r0, [r4, #0]
 801847e:	f7ff fcd5 	bl	8017e2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8018482:	e7be      	b.n	8018402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018484:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018486:	6820      	ldr	r0, [r4, #0]
 8018488:	eba8 0202 	sub.w	r2, r8, r2
 801848c:	b292      	uxth	r2, r2
 801848e:	2310      	movs	r3, #16
 8018490:	4649      	mov	r1, r9
 8018492:	f7ff fccb 	bl	8017e2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8018496:	1d25      	adds	r5, r4, #4
 8018498:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801849c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80184a0:	2b00      	cmp	r3, #0
 80184a2:	d0ae      	beq.n	8018402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80184a4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80184a8:	2919      	cmp	r1, #25
 80184aa:	d8f7      	bhi.n	801849c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80184ac:	3b20      	subs	r3, #32
 80184ae:	8013      	strh	r3, [r2, #0]
 80184b0:	e7f4      	b.n	801849c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80184b2:	9a08      	ldr	r2, [sp, #32]
 80184b4:	2a00      	cmp	r2, #0
 80184b6:	d0aa      	beq.n	801840e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80184b8:	7812      	ldrb	r2, [r2, #0]
 80184ba:	e7a8      	b.n	801840e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80184bc:	2d00      	cmp	r5, #0
 80184be:	f43f af47 	beq.w	8018350 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80184c2:	782d      	ldrb	r5, [r5, #0]
 80184c4:	e744      	b.n	8018350 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080184c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80184c6:	b507      	push	{r0, r1, r2, lr}
 80184c8:	9300      	str	r3, [sp, #0]
 80184ca:	4613      	mov	r3, r2
 80184cc:	2200      	movs	r2, #0
 80184ce:	f7ff fe90 	bl	80181f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80184d2:	b003      	add	sp, #12
 80184d4:	f85d fb04 	ldr.w	pc, [sp], #4

080184d8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80184d8:	b40c      	push	{r2, r3}
 80184da:	b507      	push	{r0, r1, r2, lr}
 80184dc:	ab04      	add	r3, sp, #16
 80184de:	f853 2b04 	ldr.w	r2, [r3], #4
 80184e2:	9301      	str	r3, [sp, #4]
 80184e4:	f7ff ffef 	bl	80184c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80184e8:	b003      	add	sp, #12
 80184ea:	f85d eb04 	ldr.w	lr, [sp], #4
 80184ee:	b002      	add	sp, #8
 80184f0:	4770      	bx	lr
	...

080184f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80184f4:	4b01      	ldr	r3, [pc, #4]	; (80184fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80184f6:	6018      	str	r0, [r3, #0]
 80184f8:	4770      	bx	lr
 80184fa:	bf00      	nop
 80184fc:	20002cec 	.word	0x20002cec

08018500 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018500:	4b06      	ldr	r3, [pc, #24]	; (801851c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018502:	881a      	ldrh	r2, [r3, #0]
 8018504:	4282      	cmp	r2, r0
 8018506:	d807      	bhi.n	8018518 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018508:	4b05      	ldr	r3, [pc, #20]	; (8018520 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801850a:	881b      	ldrh	r3, [r3, #0]
 801850c:	4413      	add	r3, r2
 801850e:	4298      	cmp	r0, r3
 8018510:	bfac      	ite	ge
 8018512:	2000      	movge	r0, #0
 8018514:	2001      	movlt	r0, #1
 8018516:	4770      	bx	lr
 8018518:	2000      	movs	r0, #0
 801851a:	4770      	bx	lr
 801851c:	20002d0c 	.word	0x20002d0c
 8018520:	20002d10 	.word	0x20002d10

08018524 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018524:	b508      	push	{r3, lr}
 8018526:	4601      	mov	r1, r0
 8018528:	f7ff ffea 	bl	8018500 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801852c:	b118      	cbz	r0, 8018536 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801852e:	4b02      	ldr	r3, [pc, #8]	; (8018538 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018530:	681b      	ldr	r3, [r3, #0]
 8018532:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018536:	bd08      	pop	{r3, pc}
 8018538:	20002cf0 	.word	0x20002cf0

0801853c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801853c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801853e:	4c24      	ldr	r4, [pc, #144]	; (80185d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018540:	6823      	ldr	r3, [r4, #0]
 8018542:	2b00      	cmp	r3, #0
 8018544:	d042      	beq.n	80185cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018546:	4a23      	ldr	r2, [pc, #140]	; (80185d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018548:	4d23      	ldr	r5, [pc, #140]	; (80185d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801854a:	8811      	ldrh	r1, [r2, #0]
 801854c:	f8b5 c000 	ldrh.w	ip, [r5]
 8018550:	4822      	ldr	r0, [pc, #136]	; (80185dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018552:	4461      	add	r1, ip
 8018554:	1c4a      	adds	r2, r1, #1
 8018556:	f022 0201 	bic.w	r2, r2, #1
 801855a:	008f      	lsls	r7, r1, #2
 801855c:	0412      	lsls	r2, r2, #16
 801855e:	19de      	adds	r6, r3, r7
 8018560:	0c12      	lsrs	r2, r2, #16
 8018562:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018566:	6006      	str	r6, [r0, #0]
 8018568:	4e1d      	ldr	r6, [pc, #116]	; (80185e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801856a:	19da      	adds	r2, r3, r7
 801856c:	6032      	str	r2, [r6, #0]
 801856e:	220e      	movs	r2, #14
 8018570:	fb02 f20c 	mul.w	r2, r2, ip
 8018574:	3203      	adds	r2, #3
 8018576:	f022 0203 	bic.w	r2, r2, #3
 801857a:	443a      	add	r2, r7
 801857c:	4f19      	ldr	r7, [pc, #100]	; (80185e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801857e:	4413      	add	r3, r2
 8018580:	603b      	str	r3, [r7, #0]
 8018582:	4f19      	ldr	r7, [pc, #100]	; (80185e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018584:	2300      	movs	r3, #0
 8018586:	803b      	strh	r3, [r7, #0]
 8018588:	4f18      	ldr	r7, [pc, #96]	; (80185ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801858a:	683f      	ldr	r7, [r7, #0]
 801858c:	1aba      	subs	r2, r7, r2
 801858e:	4f18      	ldr	r7, [pc, #96]	; (80185f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018590:	603a      	str	r2, [r7, #0]
 8018592:	4a18      	ldr	r2, [pc, #96]	; (80185f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018594:	469c      	mov	ip, r3
 8018596:	8013      	strh	r3, [r2, #0]
 8018598:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801859c:	428b      	cmp	r3, r1
 801859e:	d10d      	bne.n	80185bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80185a0:	882d      	ldrh	r5, [r5, #0]
 80185a2:	6830      	ldr	r0, [r6, #0]
 80185a4:	2300      	movs	r3, #0
 80185a6:	240e      	movs	r4, #14
 80185a8:	429d      	cmp	r5, r3
 80185aa:	d90f      	bls.n	80185cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80185ac:	fb04 0203 	mla	r2, r4, r3, r0
 80185b0:	3301      	adds	r3, #1
 80185b2:	7b11      	ldrb	r1, [r2, #12]
 80185b4:	f36f 1145 	bfc	r1, #5, #1
 80185b8:	7311      	strb	r1, [r2, #12]
 80185ba:	e7f5      	b.n	80185a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80185bc:	6822      	ldr	r2, [r4, #0]
 80185be:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80185c2:	6802      	ldr	r2, [r0, #0]
 80185c4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80185c8:	3301      	adds	r3, #1
 80185ca:	e7e7      	b.n	801859c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80185cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80185ce:	bf00      	nop
 80185d0:	20002cf0 	.word	0x20002cf0
 80185d4:	20002d0c 	.word	0x20002d0c
 80185d8:	20002d10 	.word	0x20002d10
 80185dc:	20002d04 	.word	0x20002d04
 80185e0:	20002cf4 	.word	0x20002cf4
 80185e4:	20002cfc 	.word	0x20002cfc
 80185e8:	20002d0e 	.word	0x20002d0e
 80185ec:	20002cf8 	.word	0x20002cf8
 80185f0:	20002d08 	.word	0x20002d08
 80185f4:	20002d00 	.word	0x20002d00

080185f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80185f8:	4b06      	ldr	r3, [pc, #24]	; (8018614 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80185fa:	681b      	ldr	r3, [r3, #0]
 80185fc:	b943      	cbnz	r3, 8018610 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80185fe:	b139      	cbz	r1, 8018610 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018600:	4b05      	ldr	r3, [pc, #20]	; (8018618 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018602:	801a      	strh	r2, [r3, #0]
 8018604:	4b05      	ldr	r3, [pc, #20]	; (801861c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018606:	6019      	str	r1, [r3, #0]
 8018608:	4b05      	ldr	r3, [pc, #20]	; (8018620 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801860a:	6018      	str	r0, [r3, #0]
 801860c:	f7ff bf96 	b.w	801853c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018610:	4770      	bx	lr
 8018612:	bf00      	nop
 8018614:	20002cfc 	.word	0x20002cfc
 8018618:	20002d10 	.word	0x20002d10
 801861c:	20002cf8 	.word	0x20002cf8
 8018620:	20002cf0 	.word	0x20002cf0

08018624 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018624:	b470      	push	{r4, r5, r6}
 8018626:	4c07      	ldr	r4, [pc, #28]	; (8018644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018628:	6826      	ldr	r6, [r4, #0]
 801862a:	4605      	mov	r5, r0
 801862c:	4610      	mov	r0, r2
 801862e:	9a03      	ldr	r2, [sp, #12]
 8018630:	b936      	cbnz	r6, 8018640 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018632:	6025      	str	r5, [r4, #0]
 8018634:	4c04      	ldr	r4, [pc, #16]	; (8018648 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018636:	8021      	strh	r1, [r4, #0]
 8018638:	bc70      	pop	{r4, r5, r6}
 801863a:	4619      	mov	r1, r3
 801863c:	f7ff bfdc 	b.w	80185f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018640:	bc70      	pop	{r4, r5, r6}
 8018642:	4770      	bx	lr
 8018644:	20002d14 	.word	0x20002d14
 8018648:	20002d0c 	.word	0x20002d0c

0801864c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801864c:	4a12      	ldr	r2, [pc, #72]	; (8018698 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801864e:	8803      	ldrh	r3, [r0, #0]
 8018650:	8812      	ldrh	r2, [r2, #0]
 8018652:	4293      	cmp	r3, r2
 8018654:	d207      	bcs.n	8018666 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018656:	4a11      	ldr	r2, [pc, #68]	; (801869c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018658:	6812      	ldr	r2, [r2, #0]
 801865a:	2114      	movs	r1, #20
 801865c:	fb01 2303 	mla	r3, r1, r3, r2
 8018660:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018664:	4770      	bx	lr
 8018666:	490e      	ldr	r1, [pc, #56]	; (80186a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018668:	8809      	ldrh	r1, [r1, #0]
 801866a:	4411      	add	r1, r2
 801866c:	428b      	cmp	r3, r1
 801866e:	da04      	bge.n	801867a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018670:	1a9b      	subs	r3, r3, r2
 8018672:	4a0c      	ldr	r2, [pc, #48]	; (80186a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018674:	210e      	movs	r1, #14
 8018676:	6812      	ldr	r2, [r2, #0]
 8018678:	e7f0      	b.n	801865c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801867a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801867e:	4293      	cmp	r3, r2
 8018680:	d108      	bne.n	8018694 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018682:	4b09      	ldr	r3, [pc, #36]	; (80186a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018684:	781b      	ldrb	r3, [r3, #0]
 8018686:	b91b      	cbnz	r3, 8018690 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018688:	4b08      	ldr	r3, [pc, #32]	; (80186ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801868a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801868e:	4770      	bx	lr
 8018690:	4b07      	ldr	r3, [pc, #28]	; (80186b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018692:	e7fa      	b.n	801868a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018694:	2000      	movs	r0, #0
 8018696:	4770      	bx	lr
 8018698:	20002d0c 	.word	0x20002d0c
 801869c:	20002d14 	.word	0x20002d14
 80186a0:	20002d10 	.word	0x20002d10
 80186a4:	20002cf4 	.word	0x20002cf4
 80186a8:	20002c84 	.word	0x20002c84
 80186ac:	20002c86 	.word	0x20002c86
 80186b0:	20002c88 	.word	0x20002c88

080186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80186b4:	4a12      	ldr	r2, [pc, #72]	; (8018700 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80186b6:	8803      	ldrh	r3, [r0, #0]
 80186b8:	8812      	ldrh	r2, [r2, #0]
 80186ba:	4293      	cmp	r3, r2
 80186bc:	d207      	bcs.n	80186ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80186be:	4a11      	ldr	r2, [pc, #68]	; (8018704 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80186c0:	6812      	ldr	r2, [r2, #0]
 80186c2:	2114      	movs	r1, #20
 80186c4:	fb01 2303 	mla	r3, r1, r3, r2
 80186c8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80186cc:	4770      	bx	lr
 80186ce:	490e      	ldr	r1, [pc, #56]	; (8018708 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80186d0:	8809      	ldrh	r1, [r1, #0]
 80186d2:	4411      	add	r1, r2
 80186d4:	428b      	cmp	r3, r1
 80186d6:	da04      	bge.n	80186e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80186d8:	1a9b      	subs	r3, r3, r2
 80186da:	4a0c      	ldr	r2, [pc, #48]	; (801870c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80186dc:	210e      	movs	r1, #14
 80186de:	6812      	ldr	r2, [r2, #0]
 80186e0:	e7f0      	b.n	80186c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80186e2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186e6:	4293      	cmp	r3, r2
 80186e8:	d108      	bne.n	80186fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80186ea:	4b09      	ldr	r3, [pc, #36]	; (8018710 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80186ec:	781b      	ldrb	r3, [r3, #0]
 80186ee:	b91b      	cbnz	r3, 80186f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80186f0:	4b08      	ldr	r3, [pc, #32]	; (8018714 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80186f2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80186f6:	4770      	bx	lr
 80186f8:	4b07      	ldr	r3, [pc, #28]	; (8018718 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80186fa:	e7fa      	b.n	80186f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80186fc:	2000      	movs	r0, #0
 80186fe:	4770      	bx	lr
 8018700:	20002d0c 	.word	0x20002d0c
 8018704:	20002d14 	.word	0x20002d14
 8018708:	20002d10 	.word	0x20002d10
 801870c:	20002cf4 	.word	0x20002cf4
 8018710:	20002c84 	.word	0x20002c84
 8018714:	20002c88 	.word	0x20002c88
 8018718:	20002c86 	.word	0x20002c86

0801871c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801871c:	b510      	push	{r4, lr}
 801871e:	4a1f      	ldr	r2, [pc, #124]	; (801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018720:	880b      	ldrh	r3, [r1, #0]
 8018722:	8812      	ldrh	r2, [r2, #0]
 8018724:	4293      	cmp	r3, r2
 8018726:	d213      	bcs.n	8018750 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018728:	4a1d      	ldr	r2, [pc, #116]	; (80187a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801872a:	6812      	ldr	r2, [r2, #0]
 801872c:	2114      	movs	r1, #20
 801872e:	fb01 2303 	mla	r3, r1, r3, r2
 8018732:	8a1a      	ldrh	r2, [r3, #16]
 8018734:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018738:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801873c:	8a5b      	ldrh	r3, [r3, #18]
 801873e:	8004      	strh	r4, [r0, #0]
 8018740:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018744:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018748:	8041      	strh	r1, [r0, #2]
 801874a:	8082      	strh	r2, [r0, #4]
 801874c:	80c3      	strh	r3, [r0, #6]
 801874e:	e00e      	b.n	801876e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018750:	4914      	ldr	r1, [pc, #80]	; (80187a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018752:	8809      	ldrh	r1, [r1, #0]
 8018754:	4411      	add	r1, r2
 8018756:	428b      	cmp	r3, r1
 8018758:	da0a      	bge.n	8018770 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801875a:	1a9b      	subs	r3, r3, r2
 801875c:	4a12      	ldr	r2, [pc, #72]	; (80187a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801875e:	6812      	ldr	r2, [r2, #0]
 8018760:	210e      	movs	r1, #14
 8018762:	fb01 2303 	mla	r3, r1, r3, r2
 8018766:	681a      	ldr	r2, [r3, #0]
 8018768:	6002      	str	r2, [r0, #0]
 801876a:	685a      	ldr	r2, [r3, #4]
 801876c:	6042      	str	r2, [r0, #4]
 801876e:	bd10      	pop	{r4, pc}
 8018770:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018774:	4293      	cmp	r3, r2
 8018776:	d10b      	bne.n	8018790 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018778:	4b0c      	ldr	r3, [pc, #48]	; (80187ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801877a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801877e:	4b0c      	ldr	r3, [pc, #48]	; (80187b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018780:	8081      	strh	r1, [r0, #4]
 8018782:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018786:	80c2      	strh	r2, [r0, #6]
 8018788:	2300      	movs	r3, #0
 801878a:	8003      	strh	r3, [r0, #0]
 801878c:	8043      	strh	r3, [r0, #2]
 801878e:	e7ee      	b.n	801876e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018790:	2300      	movs	r3, #0
 8018792:	8003      	strh	r3, [r0, #0]
 8018794:	8043      	strh	r3, [r0, #2]
 8018796:	8083      	strh	r3, [r0, #4]
 8018798:	e7d8      	b.n	801874c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801879a:	bf00      	nop
 801879c:	20002d0c 	.word	0x20002d0c
 80187a0:	20002d14 	.word	0x20002d14
 80187a4:	20002d10 	.word	0x20002d10
 80187a8:	20002cf4 	.word	0x20002cf4
 80187ac:	20002c80 	.word	0x20002c80
 80187b0:	20002c82 	.word	0x20002c82

080187b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80187b4:	4a17      	ldr	r2, [pc, #92]	; (8018814 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80187b6:	8803      	ldrh	r3, [r0, #0]
 80187b8:	8812      	ldrh	r2, [r2, #0]
 80187ba:	4293      	cmp	r3, r2
 80187bc:	d213      	bcs.n	80187e6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80187be:	4a16      	ldr	r2, [pc, #88]	; (8018818 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80187c0:	6812      	ldr	r2, [r2, #0]
 80187c2:	2114      	movs	r1, #20
 80187c4:	fb01 2303 	mla	r3, r1, r3, r2
 80187c8:	8a1a      	ldrh	r2, [r3, #16]
 80187ca:	8919      	ldrh	r1, [r3, #8]
 80187cc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80187d0:	428a      	cmp	r2, r1
 80187d2:	db1d      	blt.n	8018810 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80187d4:	8a58      	ldrh	r0, [r3, #18]
 80187d6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80187da:	895b      	ldrh	r3, [r3, #10]
 80187dc:	4298      	cmp	r0, r3
 80187de:	bfac      	ite	ge
 80187e0:	2000      	movge	r0, #0
 80187e2:	2001      	movlt	r0, #1
 80187e4:	4770      	bx	lr
 80187e6:	490d      	ldr	r1, [pc, #52]	; (801881c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80187e8:	8809      	ldrh	r1, [r1, #0]
 80187ea:	4411      	add	r1, r2
 80187ec:	428b      	cmp	r3, r1
 80187ee:	da0d      	bge.n	801880c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80187f0:	1a9b      	subs	r3, r3, r2
 80187f2:	4a0b      	ldr	r2, [pc, #44]	; (8018820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80187f4:	6812      	ldr	r2, [r2, #0]
 80187f6:	210e      	movs	r1, #14
 80187f8:	fb01 2303 	mla	r3, r1, r3, r2
 80187fc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018800:	891a      	ldrh	r2, [r3, #8]
 8018802:	4291      	cmp	r1, r2
 8018804:	db04      	blt.n	8018810 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018806:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801880a:	e7e6      	b.n	80187da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801880c:	2000      	movs	r0, #0
 801880e:	4770      	bx	lr
 8018810:	2001      	movs	r0, #1
 8018812:	4770      	bx	lr
 8018814:	20002d0c 	.word	0x20002d0c
 8018818:	20002d14 	.word	0x20002d14
 801881c:	20002d10 	.word	0x20002d10
 8018820:	20002cf4 	.word	0x20002cf4

08018824 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018824:	4a12      	ldr	r2, [pc, #72]	; (8018870 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018826:	8803      	ldrh	r3, [r0, #0]
 8018828:	8811      	ldrh	r1, [r2, #0]
 801882a:	428b      	cmp	r3, r1
 801882c:	d20b      	bcs.n	8018846 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801882e:	4a11      	ldr	r2, [pc, #68]	; (8018874 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018830:	6812      	ldr	r2, [r2, #0]
 8018832:	b112      	cbz	r2, 801883a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018834:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018838:	b9c0      	cbnz	r0, 801886c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801883a:	4a0f      	ldr	r2, [pc, #60]	; (8018878 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801883c:	6811      	ldr	r1, [r2, #0]
 801883e:	2214      	movs	r2, #20
 8018840:	4353      	muls	r3, r2
 8018842:	58c8      	ldr	r0, [r1, r3]
 8018844:	4770      	bx	lr
 8018846:	4a0d      	ldr	r2, [pc, #52]	; (801887c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018848:	8812      	ldrh	r2, [r2, #0]
 801884a:	440a      	add	r2, r1
 801884c:	4293      	cmp	r3, r2
 801884e:	da04      	bge.n	801885a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018850:	4a08      	ldr	r2, [pc, #32]	; (8018874 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018852:	6812      	ldr	r2, [r2, #0]
 8018854:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018858:	4770      	bx	lr
 801885a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801885e:	4293      	cmp	r3, r2
 8018860:	d103      	bne.n	801886a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018862:	4b07      	ldr	r3, [pc, #28]	; (8018880 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018864:	681b      	ldr	r3, [r3, #0]
 8018866:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018868:	4770      	bx	lr
 801886a:	2000      	movs	r0, #0
 801886c:	4770      	bx	lr
 801886e:	bf00      	nop
 8018870:	20002d0c 	.word	0x20002d0c
 8018874:	20002cf0 	.word	0x20002cf0
 8018878:	20002d14 	.word	0x20002d14
 801887c:	20002d10 	.word	0x20002d10
 8018880:	20002c8c 	.word	0x20002c8c

08018884 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018884:	4b24      	ldr	r3, [pc, #144]	; (8018918 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018886:	8802      	ldrh	r2, [r0, #0]
 8018888:	8818      	ldrh	r0, [r3, #0]
 801888a:	4282      	cmp	r2, r0
 801888c:	d221      	bcs.n	80188d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801888e:	4b23      	ldr	r3, [pc, #140]	; (801891c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018890:	6819      	ldr	r1, [r3, #0]
 8018892:	2314      	movs	r3, #20
 8018894:	fb03 1302 	mla	r3, r3, r2, r1
 8018898:	6858      	ldr	r0, [r3, #4]
 801889a:	2800      	cmp	r0, #0
 801889c:	d03a      	beq.n	8018914 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801889e:	4920      	ldr	r1, [pc, #128]	; (8018920 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80188a0:	6809      	ldr	r1, [r1, #0]
 80188a2:	2900      	cmp	r1, #0
 80188a4:	d036      	beq.n	8018914 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80188a6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80188aa:	2900      	cmp	r1, #0
 80188ac:	d032      	beq.n	8018914 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80188ae:	891a      	ldrh	r2, [r3, #8]
 80188b0:	8958      	ldrh	r0, [r3, #10]
 80188b2:	4350      	muls	r0, r2
 80188b4:	7c5a      	ldrb	r2, [r3, #17]
 80188b6:	7cdb      	ldrb	r3, [r3, #19]
 80188b8:	0952      	lsrs	r2, r2, #5
 80188ba:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80188be:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80188c2:	2b0b      	cmp	r3, #11
 80188c4:	bf18      	it	ne
 80188c6:	0040      	lslne	r0, r0, #1
 80188c8:	3003      	adds	r0, #3
 80188ca:	f020 0003 	bic.w	r0, r0, #3
 80188ce:	4408      	add	r0, r1
 80188d0:	4770      	bx	lr
 80188d2:	4b14      	ldr	r3, [pc, #80]	; (8018924 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80188d4:	881b      	ldrh	r3, [r3, #0]
 80188d6:	4403      	add	r3, r0
 80188d8:	429a      	cmp	r2, r3
 80188da:	da1a      	bge.n	8018912 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80188dc:	4b12      	ldr	r3, [pc, #72]	; (8018928 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80188de:	681b      	ldr	r3, [r3, #0]
 80188e0:	1a10      	subs	r0, r2, r0
 80188e2:	210e      	movs	r1, #14
 80188e4:	fb01 3000 	mla	r0, r1, r0, r3
 80188e8:	7b03      	ldrb	r3, [r0, #12]
 80188ea:	f003 031f 	and.w	r3, r3, #31
 80188ee:	2b0b      	cmp	r3, #11
 80188f0:	d10b      	bne.n	801890a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80188f2:	8903      	ldrh	r3, [r0, #8]
 80188f4:	8940      	ldrh	r0, [r0, #10]
 80188f6:	4358      	muls	r0, r3
 80188f8:	4b09      	ldr	r3, [pc, #36]	; (8018920 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80188fa:	6819      	ldr	r1, [r3, #0]
 80188fc:	3003      	adds	r0, #3
 80188fe:	f020 0303 	bic.w	r3, r0, #3
 8018902:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018906:	4418      	add	r0, r3
 8018908:	4770      	bx	lr
 801890a:	2b0d      	cmp	r3, #13
 801890c:	d101      	bne.n	8018912 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801890e:	300d      	adds	r0, #13
 8018910:	4770      	bx	lr
 8018912:	2000      	movs	r0, #0
 8018914:	4770      	bx	lr
 8018916:	bf00      	nop
 8018918:	20002d0c 	.word	0x20002d0c
 801891c:	20002d14 	.word	0x20002d14
 8018920:	20002cf0 	.word	0x20002cf0
 8018924:	20002d10 	.word	0x20002d10
 8018928:	20002cf4 	.word	0x20002cf4

0801892c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801892c:	b510      	push	{r4, lr}
 801892e:	4a17      	ldr	r2, [pc, #92]	; (801898c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018930:	8803      	ldrh	r3, [r0, #0]
 8018932:	8812      	ldrh	r2, [r2, #0]
 8018934:	4293      	cmp	r3, r2
 8018936:	d20c      	bcs.n	8018952 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018938:	4a15      	ldr	r2, [pc, #84]	; (8018990 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801893a:	6812      	ldr	r2, [r2, #0]
 801893c:	2114      	movs	r1, #20
 801893e:	fb01 2303 	mla	r3, r1, r3, r2
 8018942:	7c58      	ldrb	r0, [r3, #17]
 8018944:	0942      	lsrs	r2, r0, #5
 8018946:	7cd8      	ldrb	r0, [r3, #19]
 8018948:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801894c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018950:	bd10      	pop	{r4, pc}
 8018952:	4910      	ldr	r1, [pc, #64]	; (8018994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018954:	8809      	ldrh	r1, [r1, #0]
 8018956:	4411      	add	r1, r2
 8018958:	428b      	cmp	r3, r1
 801895a:	da09      	bge.n	8018970 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801895c:	1a9b      	subs	r3, r3, r2
 801895e:	4a0e      	ldr	r2, [pc, #56]	; (8018998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018960:	6812      	ldr	r2, [r2, #0]
 8018962:	210e      	movs	r1, #14
 8018964:	fb01 2303 	mla	r3, r1, r3, r2
 8018968:	7b18      	ldrb	r0, [r3, #12]
 801896a:	f000 001f 	and.w	r0, r0, #31
 801896e:	e7ef      	b.n	8018950 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018970:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018974:	4293      	cmp	r3, r2
 8018976:	d106      	bne.n	8018986 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018978:	f7f8 fc46 	bl	8011208 <_ZN8touchgfx3HAL3lcdEv>
 801897c:	6803      	ldr	r3, [r0, #0]
 801897e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018982:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018984:	4718      	bx	r3
 8018986:	2000      	movs	r0, #0
 8018988:	e7e2      	b.n	8018950 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801898a:	bf00      	nop
 801898c:	20002d0c 	.word	0x20002d0c
 8018990:	20002d14 	.word	0x20002d14
 8018994:	20002d10 	.word	0x20002d10
 8018998:	20002cf4 	.word	0x20002cf4

0801899c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801899c:	2010      	movs	r0, #16
 801899e:	4770      	bx	lr

080189a0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80189a0:	2000      	movs	r0, #0
 80189a2:	4770      	bx	lr

080189a4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80189a4:	4b02      	ldr	r3, [pc, #8]	; (80189b0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80189a6:	8818      	ldrh	r0, [r3, #0]
 80189a8:	0040      	lsls	r0, r0, #1
 80189aa:	b280      	uxth	r0, r0
 80189ac:	4770      	bx	lr
 80189ae:	bf00      	nop
 80189b0:	20002c86 	.word	0x20002c86

080189b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80189b4:	2bff      	cmp	r3, #255	; 0xff
 80189b6:	d050      	beq.n	8018a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80189b8:	2a0b      	cmp	r2, #11
 80189ba:	d04a      	beq.n	8018a52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80189bc:	d80e      	bhi.n	80189dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80189be:	2a03      	cmp	r2, #3
 80189c0:	d03f      	beq.n	8018a42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80189c2:	d804      	bhi.n	80189ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80189c4:	2a01      	cmp	r2, #1
 80189c6:	d03e      	beq.n	8018a46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80189c8:	d93f      	bls.n	8018a4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80189ca:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80189cc:	4770      	bx	lr
 80189ce:	2a09      	cmp	r2, #9
 80189d0:	d03f      	beq.n	8018a52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80189d2:	d83c      	bhi.n	8018a4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80189d4:	2a08      	cmp	r2, #8
 80189d6:	d03a      	beq.n	8018a4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80189d8:	2000      	movs	r0, #0
 80189da:	4770      	bx	lr
 80189dc:	2a2f      	cmp	r2, #47	; 0x2f
 80189de:	d024      	beq.n	8018a2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80189e0:	d80d      	bhi.n	80189fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80189e2:	2a2d      	cmp	r2, #45	; 0x2d
 80189e4:	d014      	beq.n	8018a10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80189e6:	d826      	bhi.n	8018a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80189e8:	2a2c      	cmp	r2, #44	; 0x2c
 80189ea:	d1f5      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189ec:	684b      	ldr	r3, [r1, #4]
 80189ee:	781b      	ldrb	r3, [r3, #0]
 80189f0:	2b01      	cmp	r3, #1
 80189f2:	d018      	beq.n	8018a26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80189f4:	d323      	bcc.n	8018a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80189f6:	2b02      	cmp	r3, #2
 80189f8:	d1ee      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189fa:	6880      	ldr	r0, [r0, #8]
 80189fc:	4770      	bx	lr
 80189fe:	2a31      	cmp	r2, #49	; 0x31
 8018a00:	d004      	beq.n	8018a0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018a02:	d328      	bcc.n	8018a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a04:	2a32      	cmp	r2, #50	; 0x32
 8018a06:	d026      	beq.n	8018a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a08:	2a33      	cmp	r2, #51	; 0x33
 8018a0a:	d1e5      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a0c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018a0e:	4770      	bx	lr
 8018a10:	684b      	ldr	r3, [r1, #4]
 8018a12:	781b      	ldrb	r3, [r3, #0]
 8018a14:	2b01      	cmp	r3, #1
 8018a16:	d004      	beq.n	8018a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018a18:	d30b      	bcc.n	8018a32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018a1a:	2b02      	cmp	r3, #2
 8018a1c:	d1dc      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a1e:	6900      	ldr	r0, [r0, #16]
 8018a20:	4770      	bx	lr
 8018a22:	6a00      	ldr	r0, [r0, #32]
 8018a24:	4770      	bx	lr
 8018a26:	6980      	ldr	r0, [r0, #24]
 8018a28:	4770      	bx	lr
 8018a2a:	684b      	ldr	r3, [r1, #4]
 8018a2c:	781b      	ldrb	r3, [r3, #0]
 8018a2e:	2b00      	cmp	r3, #0
 8018a30:	d1d2      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a32:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018a34:	4770      	bx	lr
 8018a36:	684b      	ldr	r3, [r1, #4]
 8018a38:	781b      	ldrb	r3, [r3, #0]
 8018a3a:	2b00      	cmp	r3, #0
 8018a3c:	d1cc      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a3e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018a40:	4770      	bx	lr
 8018a42:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018a44:	4770      	bx	lr
 8018a46:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018a48:	4770      	bx	lr
 8018a4a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018a4c:	4770      	bx	lr
 8018a4e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018a50:	4770      	bx	lr
 8018a52:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018a54:	4770      	bx	lr
 8018a56:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018a58:	4770      	bx	lr
 8018a5a:	2a0b      	cmp	r2, #11
 8018a5c:	d049      	beq.n	8018af2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018a5e:	d80e      	bhi.n	8018a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018a60:	2a03      	cmp	r2, #3
 8018a62:	d040      	beq.n	8018ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018a64:	d804      	bhi.n	8018a70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018a66:	2a01      	cmp	r2, #1
 8018a68:	d03f      	beq.n	8018aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018a6a:	d940      	bls.n	8018aee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018a6c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018a6e:	4770      	bx	lr
 8018a70:	2a09      	cmp	r2, #9
 8018a72:	d03e      	beq.n	8018af2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018a74:	d801      	bhi.n	8018a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018a76:	2a08      	cmp	r2, #8
 8018a78:	d1ae      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a7a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018a7c:	4770      	bx	lr
 8018a7e:	2a2f      	cmp	r2, #47	; 0x2f
 8018a80:	d024      	beq.n	8018acc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018a82:	d80d      	bhi.n	8018aa0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018a84:	2a2d      	cmp	r2, #45	; 0x2d
 8018a86:	d014      	beq.n	8018ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018a88:	d826      	bhi.n	8018ad8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018a8a:	2a2c      	cmp	r2, #44	; 0x2c
 8018a8c:	d1a4      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a8e:	684b      	ldr	r3, [r1, #4]
 8018a90:	781b      	ldrb	r3, [r3, #0]
 8018a92:	2b01      	cmp	r3, #1
 8018a94:	d018      	beq.n	8018ac8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018a96:	d324      	bcc.n	8018ae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018a98:	2b02      	cmp	r3, #2
 8018a9a:	d19d      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a9c:	68c0      	ldr	r0, [r0, #12]
 8018a9e:	4770      	bx	lr
 8018aa0:	2a31      	cmp	r2, #49	; 0x31
 8018aa2:	d004      	beq.n	8018aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018aa4:	d327      	bcc.n	8018af6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018aa6:	2a32      	cmp	r2, #50	; 0x32
 8018aa8:	d025      	beq.n	8018af6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018aaa:	2a33      	cmp	r2, #51	; 0x33
 8018aac:	d194      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aae:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018ab0:	4770      	bx	lr
 8018ab2:	684b      	ldr	r3, [r1, #4]
 8018ab4:	781b      	ldrb	r3, [r3, #0]
 8018ab6:	2b01      	cmp	r3, #1
 8018ab8:	d004      	beq.n	8018ac4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018aba:	d30b      	bcc.n	8018ad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018abc:	2b02      	cmp	r3, #2
 8018abe:	d18b      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ac0:	6940      	ldr	r0, [r0, #20]
 8018ac2:	4770      	bx	lr
 8018ac4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018ac6:	4770      	bx	lr
 8018ac8:	69c0      	ldr	r0, [r0, #28]
 8018aca:	4770      	bx	lr
 8018acc:	684b      	ldr	r3, [r1, #4]
 8018ace:	781b      	ldrb	r3, [r3, #0]
 8018ad0:	2b00      	cmp	r3, #0
 8018ad2:	d181      	bne.n	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ad4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018ad6:	4770      	bx	lr
 8018ad8:	684b      	ldr	r3, [r1, #4]
 8018ada:	781b      	ldrb	r3, [r3, #0]
 8018adc:	2b00      	cmp	r3, #0
 8018ade:	f47f af7b 	bne.w	80189d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ae2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018ae4:	4770      	bx	lr
 8018ae6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018ae8:	4770      	bx	lr
 8018aea:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018aec:	4770      	bx	lr
 8018aee:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018af0:	4770      	bx	lr
 8018af2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018af4:	4770      	bx	lr
 8018af6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018af8:	4770      	bx	lr

08018afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018afa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018afe:	b087      	sub	sp, #28
 8018b00:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018b02:	9205      	str	r2, [sp, #20]
 8018b04:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018b08:	9202      	str	r2, [sp, #8]
 8018b0a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018b0e:	9101      	str	r1, [sp, #4]
 8018b10:	6841      	ldr	r1, [r0, #4]
 8018b12:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018b16:	fb01 2404 	mla	r4, r1, r4, r2
 8018b1a:	6802      	ldr	r2, [r0, #0]
 8018b1c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b20:	f8de 2000 	ldr.w	r2, [lr]
 8018b24:	9203      	str	r2, [sp, #12]
 8018b26:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018b2a:	3204      	adds	r2, #4
 8018b2c:	9204      	str	r2, [sp, #16]
 8018b2e:	9a02      	ldr	r2, [sp, #8]
 8018b30:	43d6      	mvns	r6, r2
 8018b32:	b2f6      	uxtb	r6, r6
 8018b34:	9a01      	ldr	r2, [sp, #4]
 8018b36:	2a00      	cmp	r2, #0
 8018b38:	dc03      	bgt.n	8018b42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018b3a:	9a05      	ldr	r2, [sp, #20]
 8018b3c:	2a00      	cmp	r2, #0
 8018b3e:	f340 8129 	ble.w	8018d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018b42:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018b44:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018b48:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018b4c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018b50:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018b52:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	dd0e      	ble.n	8018b78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b5a:	1408      	asrs	r0, r1, #16
 8018b5c:	d405      	bmi.n	8018b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b5e:	4560      	cmp	r0, ip
 8018b60:	da03      	bge.n	8018b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b62:	1410      	asrs	r0, r2, #16
 8018b64:	d401      	bmi.n	8018b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b66:	42b8      	cmp	r0, r7
 8018b68:	db07      	blt.n	8018b7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018b6a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b6c:	4401      	add	r1, r0
 8018b6e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018b70:	3b01      	subs	r3, #1
 8018b72:	4402      	add	r2, r0
 8018b74:	3402      	adds	r4, #2
 8018b76:	e7ee      	b.n	8018b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018b78:	d071      	beq.n	8018c5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018b7c:	1e58      	subs	r0, r3, #1
 8018b7e:	fb05 1500 	mla	r5, r5, r0, r1
 8018b82:	142d      	asrs	r5, r5, #16
 8018b84:	d45f      	bmi.n	8018c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018b86:	4565      	cmp	r5, ip
 8018b88:	da5d      	bge.n	8018c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018b8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018b8c:	fb05 2000 	mla	r0, r5, r0, r2
 8018b90:	1400      	asrs	r0, r0, #16
 8018b92:	d458      	bmi.n	8018c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018b94:	42b8      	cmp	r0, r7
 8018b96:	da56      	bge.n	8018c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018b98:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018b9c:	4699      	mov	r9, r3
 8018b9e:	46a2      	mov	sl, r4
 8018ba0:	f1b9 0f00 	cmp.w	r9, #0
 8018ba4:	dd57      	ble.n	8018c56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018ba6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018baa:	9803      	ldr	r0, [sp, #12]
 8018bac:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018bb0:	140d      	asrs	r5, r1, #16
 8018bb2:	fb07 000c 	mla	r0, r7, ip, r0
 8018bb6:	f109 39ff 	add.w	r9, r9, #4294967295
 8018bba:	5d40      	ldrb	r0, [r0, r5]
 8018bbc:	9d04      	ldr	r5, [sp, #16]
 8018bbe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018bc2:	f8ba 5000 	ldrh.w	r5, [sl]
 8018bc6:	122f      	asrs	r7, r5, #8
 8018bc8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018bcc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018bd0:	fb17 f706 	smulbb	r7, r7, r6
 8018bd4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018bd8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018bdc:	00ed      	lsls	r5, r5, #3
 8018bde:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018be2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018be6:	10c7      	asrs	r7, r0, #3
 8018be8:	b2ed      	uxtb	r5, r5
 8018bea:	00c0      	lsls	r0, r0, #3
 8018bec:	fb18 f806 	smulbb	r8, r8, r6
 8018bf0:	fb15 f506 	smulbb	r5, r5, r6
 8018bf4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018bf8:	b2c0      	uxtb	r0, r0
 8018bfa:	fa1f fc8c 	uxth.w	ip, ip
 8018bfe:	fb07 870b 	mla	r7, r7, fp, r8
 8018c02:	fb00 500b 	mla	r0, r0, fp, r5
 8018c06:	b280      	uxth	r0, r0
 8018c08:	b2bf      	uxth	r7, r7
 8018c0a:	f10c 0501 	add.w	r5, ip, #1
 8018c0e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c12:	f107 0801 	add.w	r8, r7, #1
 8018c16:	1c45      	adds	r5, r0, #1
 8018c18:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c1c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018c20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018c22:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c26:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c2a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018c2e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018c32:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018c36:	4401      	add	r1, r0
 8018c38:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018c3a:	ea4c 0c08 	orr.w	ip, ip, r8
 8018c3e:	f82a cb02 	strh.w	ip, [sl], #2
 8018c42:	4402      	add	r2, r0
 8018c44:	e7ac      	b.n	8018ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018c46:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018c4a:	f04f 0800 	mov.w	r8, #0
 8018c4e:	eb03 0008 	add.w	r0, r3, r8
 8018c52:	2800      	cmp	r0, #0
 8018c54:	dc41      	bgt.n	8018cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018c56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c5e:	9b01      	ldr	r3, [sp, #4]
 8018c60:	2b00      	cmp	r3, #0
 8018c62:	f340 8097 	ble.w	8018d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018c66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c6a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018c6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018c74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c80:	eef0 6a62 	vmov.f32	s13, s5
 8018c84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c90:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018c94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c98:	eef0 6a43 	vmov.f32	s13, s6
 8018c9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ca0:	ee12 2a90 	vmov	r2, s5
 8018ca4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ca8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cac:	ee13 2a10 	vmov	r2, s6
 8018cb0:	9313      	str	r3, [sp, #76]	; 0x4c
 8018cb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cb8:	9314      	str	r3, [sp, #80]	; 0x50
 8018cba:	9b01      	ldr	r3, [sp, #4]
 8018cbc:	9a05      	ldr	r2, [sp, #20]
 8018cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cc2:	3b01      	subs	r3, #1
 8018cc4:	9301      	str	r3, [sp, #4]
 8018cc6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018cca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ccc:	eeb0 3a67 	vmov.f32	s6, s15
 8018cd0:	bf08      	it	eq
 8018cd2:	4613      	moveq	r3, r2
 8018cd4:	eef0 2a47 	vmov.f32	s5, s14
 8018cd8:	e72c      	b.n	8018b34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018cda:	140f      	asrs	r7, r1, #16
 8018cdc:	d453      	bmi.n	8018d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018cde:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018ce2:	42bd      	cmp	r5, r7
 8018ce4:	dd4f      	ble.n	8018d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018ce6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018cea:	d44c      	bmi.n	8018d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018cec:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018cf0:	4560      	cmp	r0, ip
 8018cf2:	dd48      	ble.n	8018d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018cf4:	9803      	ldr	r0, [sp, #12]
 8018cf6:	b22d      	sxth	r5, r5
 8018cf8:	fb0c 0505 	mla	r5, ip, r5, r0
 8018cfc:	5de8      	ldrb	r0, [r5, r7]
 8018cfe:	9d04      	ldr	r5, [sp, #16]
 8018d00:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018d04:	f06f 0501 	mvn.w	r5, #1
 8018d08:	fb05 fb08 	mul.w	fp, r5, r8
 8018d0c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018d10:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018d14:	122f      	asrs	r7, r5, #8
 8018d16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d1a:	fb17 f706 	smulbb	r7, r7, r6
 8018d1e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d26:	00ed      	lsls	r5, r5, #3
 8018d28:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018d2c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018d30:	10c7      	asrs	r7, r0, #3
 8018d32:	b2ed      	uxtb	r5, r5
 8018d34:	00c0      	lsls	r0, r0, #3
 8018d36:	fb19 f906 	smulbb	r9, r9, r6
 8018d3a:	fb15 f506 	smulbb	r5, r5, r6
 8018d3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d42:	b2c0      	uxtb	r0, r0
 8018d44:	fa1f fc8c 	uxth.w	ip, ip
 8018d48:	fb07 970a 	mla	r7, r7, sl, r9
 8018d4c:	fb00 500a 	mla	r0, r0, sl, r5
 8018d50:	b2bf      	uxth	r7, r7
 8018d52:	b280      	uxth	r0, r0
 8018d54:	f10c 0501 	add.w	r5, ip, #1
 8018d58:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018d5c:	f107 0901 	add.w	r9, r7, #1
 8018d60:	1c45      	adds	r5, r0, #1
 8018d62:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018d66:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018d6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018d6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018d72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018d76:	ea45 0c0c 	orr.w	ip, r5, ip
 8018d7a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018d7e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d82:	f824 c00b 	strh.w	ip, [r4, fp]
 8018d86:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018d88:	4401      	add	r1, r0
 8018d8a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018d8c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d90:	4402      	add	r2, r0
 8018d92:	e75c      	b.n	8018c4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018d94:	b007      	add	sp, #28
 8018d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d9e:	b085      	sub	sp, #20
 8018da0:	4693      	mov	fp, r2
 8018da2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018da4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018da6:	6870      	ldr	r0, [r6, #4]
 8018da8:	9100      	str	r1, [sp, #0]
 8018daa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018dae:	fb00 2404 	mla	r4, r0, r4, r2
 8018db2:	6832      	ldr	r2, [r6, #0]
 8018db4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018db8:	682a      	ldr	r2, [r5, #0]
 8018dba:	9201      	str	r2, [sp, #4]
 8018dbc:	686a      	ldr	r2, [r5, #4]
 8018dbe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018dc2:	3204      	adds	r2, #4
 8018dc4:	9202      	str	r2, [sp, #8]
 8018dc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018dca:	9a00      	ldr	r2, [sp, #0]
 8018dcc:	2a00      	cmp	r2, #0
 8018dce:	dc03      	bgt.n	8018dd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018dd0:	f1bb 0f00 	cmp.w	fp, #0
 8018dd4:	f340 80a0 	ble.w	8018f18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018dd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018dda:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018dde:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018de2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018de6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018de8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018dec:	2b00      	cmp	r3, #0
 8018dee:	dd0c      	ble.n	8018e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018df0:	1406      	asrs	r6, r0, #16
 8018df2:	d405      	bmi.n	8018e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018df4:	454e      	cmp	r6, r9
 8018df6:	da03      	bge.n	8018e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018df8:	1416      	asrs	r6, r2, #16
 8018dfa:	d401      	bmi.n	8018e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018dfc:	4546      	cmp	r6, r8
 8018dfe:	db05      	blt.n	8018e0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018e00:	4470      	add	r0, lr
 8018e02:	4462      	add	r2, ip
 8018e04:	3b01      	subs	r3, #1
 8018e06:	3402      	adds	r4, #2
 8018e08:	e7f0      	b.n	8018dec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018e0a:	d00f      	beq.n	8018e2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e0c:	1e5e      	subs	r6, r3, #1
 8018e0e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018e12:	143f      	asrs	r7, r7, #16
 8018e14:	d541      	bpl.n	8018e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018e16:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018e1a:	4698      	mov	r8, r3
 8018e1c:	9603      	str	r6, [sp, #12]
 8018e1e:	f1b8 0f00 	cmp.w	r8, #0
 8018e22:	dc59      	bgt.n	8018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e2c:	9b00      	ldr	r3, [sp, #0]
 8018e2e:	2b00      	cmp	r3, #0
 8018e30:	dd72      	ble.n	8018f18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018e32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e3a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e40:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e48:	eeb0 6a62 	vmov.f32	s12, s5
 8018e4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e54:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e58:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018e5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e60:	eeb0 6a43 	vmov.f32	s12, s6
 8018e64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e68:	ee12 2a90 	vmov	r2, s5
 8018e6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e70:	fb92 fef3 	sdiv	lr, r2, r3
 8018e74:	ee13 2a10 	vmov	r2, s6
 8018e78:	fb92 fcf3 	sdiv	ip, r2, r3
 8018e7c:	9b00      	ldr	r3, [sp, #0]
 8018e7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e82:	3b01      	subs	r3, #1
 8018e84:	9300      	str	r3, [sp, #0]
 8018e86:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018e8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e8c:	eeb0 3a67 	vmov.f32	s6, s15
 8018e90:	bf08      	it	eq
 8018e92:	465b      	moveq	r3, fp
 8018e94:	eef0 2a47 	vmov.f32	s5, s14
 8018e98:	e797      	b.n	8018dca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018e9a:	454f      	cmp	r7, r9
 8018e9c:	dabb      	bge.n	8018e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018e9e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018ea2:	1436      	asrs	r6, r6, #16
 8018ea4:	d4b7      	bmi.n	8018e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018ea6:	4546      	cmp	r6, r8
 8018ea8:	dab5      	bge.n	8018e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018eaa:	461e      	mov	r6, r3
 8018eac:	46a0      	mov	r8, r4
 8018eae:	2e00      	cmp	r6, #0
 8018eb0:	ddb8      	ble.n	8018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018eb2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018eb6:	9901      	ldr	r1, [sp, #4]
 8018eb8:	1417      	asrs	r7, r2, #16
 8018eba:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018ebe:	fb0a 1707 	mla	r7, sl, r7, r1
 8018ec2:	9902      	ldr	r1, [sp, #8]
 8018ec4:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018ec8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018ecc:	f828 7b02 	strh.w	r7, [r8], #2
 8018ed0:	4470      	add	r0, lr
 8018ed2:	4462      	add	r2, ip
 8018ed4:	3e01      	subs	r6, #1
 8018ed6:	e7ea      	b.n	8018eae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018ed8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018edc:	d417      	bmi.n	8018f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018ede:	68ae      	ldr	r6, [r5, #8]
 8018ee0:	454e      	cmp	r6, r9
 8018ee2:	dd14      	ble.n	8018f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018ee4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018ee8:	d411      	bmi.n	8018f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018eea:	68ef      	ldr	r7, [r5, #12]
 8018eec:	4557      	cmp	r7, sl
 8018eee:	dd0e      	ble.n	8018f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018ef0:	9f01      	ldr	r7, [sp, #4]
 8018ef2:	b236      	sxth	r6, r6
 8018ef4:	fb0a 7606 	mla	r6, sl, r6, r7
 8018ef8:	9f02      	ldr	r7, [sp, #8]
 8018efa:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018efe:	f06f 0101 	mvn.w	r1, #1
 8018f02:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018f06:	fb01 f608 	mul.w	r6, r1, r8
 8018f0a:	9903      	ldr	r1, [sp, #12]
 8018f0c:	538f      	strh	r7, [r1, r6]
 8018f0e:	4470      	add	r0, lr
 8018f10:	4462      	add	r2, ip
 8018f12:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f16:	e782      	b.n	8018e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018f18:	b005      	add	sp, #20
 8018f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f22:	b087      	sub	sp, #28
 8018f24:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018f26:	9205      	str	r2, [sp, #20]
 8018f28:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018f2c:	9203      	str	r2, [sp, #12]
 8018f2e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018f32:	9102      	str	r1, [sp, #8]
 8018f34:	6861      	ldr	r1, [r4, #4]
 8018f36:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018f3a:	fb01 2000 	mla	r0, r1, r0, r2
 8018f3e:	6822      	ldr	r2, [r4, #0]
 8018f40:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018f44:	9200      	str	r2, [sp, #0]
 8018f46:	f8dc 2000 	ldr.w	r2, [ip]
 8018f4a:	9204      	str	r2, [sp, #16]
 8018f4c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018f50:	3204      	adds	r2, #4
 8018f52:	9201      	str	r2, [sp, #4]
 8018f54:	9a03      	ldr	r2, [sp, #12]
 8018f56:	43d5      	mvns	r5, r2
 8018f58:	b2ed      	uxtb	r5, r5
 8018f5a:	9a02      	ldr	r2, [sp, #8]
 8018f5c:	2a00      	cmp	r2, #0
 8018f5e:	dc03      	bgt.n	8018f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018f60:	9a05      	ldr	r2, [sp, #20]
 8018f62:	2a00      	cmp	r2, #0
 8018f64:	f340 812c 	ble.w	80191c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018f68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018f6a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018f6e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018f72:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018f76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018f78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f7c:	2b00      	cmp	r3, #0
 8018f7e:	dd10      	ble.n	8018fa2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018f80:	140c      	asrs	r4, r1, #16
 8018f82:	d405      	bmi.n	8018f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f84:	4574      	cmp	r4, lr
 8018f86:	da03      	bge.n	8018f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f88:	1414      	asrs	r4, r2, #16
 8018f8a:	d401      	bmi.n	8018f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f8c:	42bc      	cmp	r4, r7
 8018f8e:	db09      	blt.n	8018fa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018f90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f92:	9800      	ldr	r0, [sp, #0]
 8018f94:	4421      	add	r1, r4
 8018f96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018f98:	3002      	adds	r0, #2
 8018f9a:	4422      	add	r2, r4
 8018f9c:	3b01      	subs	r3, #1
 8018f9e:	9000      	str	r0, [sp, #0]
 8018fa0:	e7ec      	b.n	8018f7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018fa2:	d071      	beq.n	8019088 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018fa4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018fa6:	1e5c      	subs	r4, r3, #1
 8018fa8:	fb06 1604 	mla	r6, r6, r4, r1
 8018fac:	1436      	asrs	r6, r6, #16
 8018fae:	d45d      	bmi.n	801906c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018fb0:	4576      	cmp	r6, lr
 8018fb2:	da5b      	bge.n	801906c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018fb4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018fb6:	fb06 2404 	mla	r4, r6, r4, r2
 8018fba:	1424      	asrs	r4, r4, #16
 8018fbc:	d456      	bmi.n	801906c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018fbe:	42bc      	cmp	r4, r7
 8018fc0:	da54      	bge.n	801906c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018fc2:	f8dd 9000 	ldr.w	r9, [sp]
 8018fc6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018fca:	4698      	mov	r8, r3
 8018fcc:	f1b8 0f00 	cmp.w	r8, #0
 8018fd0:	dd54      	ble.n	801907c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018fd2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018fd6:	9804      	ldr	r0, [sp, #16]
 8018fd8:	1414      	asrs	r4, r2, #16
 8018fda:	fb07 0404 	mla	r4, r7, r4, r0
 8018fde:	140e      	asrs	r6, r1, #16
 8018fe0:	9801      	ldr	r0, [sp, #4]
 8018fe2:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018fe6:	f8b9 4000 	ldrh.w	r4, [r9]
 8018fea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018fee:	eb00 0b0e 	add.w	fp, r0, lr
 8018ff2:	1227      	asrs	r7, r4, #8
 8018ff4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018ff8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018ffc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019000:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019002:	fb16 f60a 	smulbb	r6, r6, sl
 8019006:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801900a:	fb07 6705 	mla	r7, r7, r5, r6
 801900e:	10e6      	asrs	r6, r4, #3
 8019010:	00e4      	lsls	r4, r4, #3
 8019012:	b2e4      	uxtb	r4, r4
 8019014:	fb1b fb0a 	smulbb	fp, fp, sl
 8019018:	fb14 f405 	smulbb	r4, r4, r5
 801901c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019020:	b2bf      	uxth	r7, r7
 8019022:	fb06 b605 	mla	r6, r6, r5, fp
 8019026:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801902a:	b2b6      	uxth	r6, r6
 801902c:	fa1f fe8e 	uxth.w	lr, lr
 8019030:	1c7c      	adds	r4, r7, #1
 8019032:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019036:	f106 0b01 	add.w	fp, r6, #1
 801903a:	f10e 0401 	add.w	r4, lr, #1
 801903e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019042:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019046:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801904a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801904e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019052:	4327      	orrs	r7, r4
 8019054:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019058:	4401      	add	r1, r0
 801905a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801905c:	ea47 070b 	orr.w	r7, r7, fp
 8019060:	f829 7b02 	strh.w	r7, [r9], #2
 8019064:	4402      	add	r2, r0
 8019066:	f108 38ff 	add.w	r8, r8, #4294967295
 801906a:	e7af      	b.n	8018fcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801906c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019070:	f04f 0e00 	mov.w	lr, #0
 8019074:	eb03 040e 	add.w	r4, r3, lr
 8019078:	2c00      	cmp	r4, #0
 801907a:	dc43      	bgt.n	8019104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801907c:	9a00      	ldr	r2, [sp, #0]
 801907e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019082:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019086:	9300      	str	r3, [sp, #0]
 8019088:	9b02      	ldr	r3, [sp, #8]
 801908a:	2b00      	cmp	r3, #0
 801908c:	f340 8098 	ble.w	80191c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019090:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019094:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019098:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801909c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801909e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80190a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80190a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80190aa:	eef0 6a62 	vmov.f32	s13, s5
 80190ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80190b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190ba:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80190be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190c2:	eef0 6a43 	vmov.f32	s13, s6
 80190c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190ca:	ee12 2a90 	vmov	r2, s5
 80190ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80190d6:	ee13 2a10 	vmov	r2, s6
 80190da:	9313      	str	r3, [sp, #76]	; 0x4c
 80190dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80190de:	fb92 f3f3 	sdiv	r3, r2, r3
 80190e2:	9314      	str	r3, [sp, #80]	; 0x50
 80190e4:	9b02      	ldr	r3, [sp, #8]
 80190e6:	9a05      	ldr	r2, [sp, #20]
 80190e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190ec:	3b01      	subs	r3, #1
 80190ee:	9302      	str	r3, [sp, #8]
 80190f0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80190f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80190f6:	eeb0 3a67 	vmov.f32	s6, s15
 80190fa:	bf08      	it	eq
 80190fc:	4613      	moveq	r3, r2
 80190fe:	eef0 2a47 	vmov.f32	s5, s14
 8019102:	e72a      	b.n	8018f5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019104:	140f      	asrs	r7, r1, #16
 8019106:	d454      	bmi.n	80191b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019108:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801910c:	42be      	cmp	r6, r7
 801910e:	dd50      	ble.n	80191b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019110:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019114:	d44d      	bmi.n	80191b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019116:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801911a:	4544      	cmp	r4, r8
 801911c:	dd49      	ble.n	80191b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801911e:	9c04      	ldr	r4, [sp, #16]
 8019120:	b236      	sxth	r6, r6
 8019122:	fb08 4606 	mla	r6, r8, r6, r4
 8019126:	f06f 0001 	mvn.w	r0, #1
 801912a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801912e:	9c01      	ldr	r4, [sp, #4]
 8019130:	fb00 fa0e 	mul.w	sl, r0, lr
 8019134:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019138:	9800      	ldr	r0, [sp, #0]
 801913a:	eb04 0b08 	add.w	fp, r4, r8
 801913e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019142:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019146:	9801      	ldr	r0, [sp, #4]
 8019148:	f89b b001 	ldrb.w	fp, [fp, #1]
 801914c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019150:	9800      	ldr	r0, [sp, #0]
 8019152:	1227      	asrs	r7, r4, #8
 8019154:	fb16 f609 	smulbb	r6, r6, r9
 8019158:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801915c:	fb07 6705 	mla	r7, r7, r5, r6
 8019160:	10e6      	asrs	r6, r4, #3
 8019162:	00e4      	lsls	r4, r4, #3
 8019164:	b2e4      	uxtb	r4, r4
 8019166:	fb1b fb09 	smulbb	fp, fp, r9
 801916a:	fb14 f405 	smulbb	r4, r4, r5
 801916e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019172:	b2bf      	uxth	r7, r7
 8019174:	fb06 b605 	mla	r6, r6, r5, fp
 8019178:	fb08 4809 	mla	r8, r8, r9, r4
 801917c:	b2b6      	uxth	r6, r6
 801917e:	fa1f f888 	uxth.w	r8, r8
 8019182:	1c7c      	adds	r4, r7, #1
 8019184:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019188:	f106 0b01 	add.w	fp, r6, #1
 801918c:	f108 0401 	add.w	r4, r8, #1
 8019190:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019194:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019198:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801919c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80191a0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80191a4:	4327      	orrs	r7, r4
 80191a6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80191aa:	ea47 070b 	orr.w	r7, r7, fp
 80191ae:	f820 700a 	strh.w	r7, [r0, sl]
 80191b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80191b4:	4401      	add	r1, r0
 80191b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80191b8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80191bc:	4402      	add	r2, r0
 80191be:	e759      	b.n	8019074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80191c0:	b007      	add	sp, #28
 80191c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080191c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191cc:	b085      	sub	sp, #20
 80191ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80191d2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80191d4:	9203      	str	r2, [sp, #12]
 80191d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80191da:	6870      	ldr	r0, [r6, #4]
 80191dc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80191de:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80191e2:	686f      	ldr	r7, [r5, #4]
 80191e4:	9101      	str	r1, [sp, #4]
 80191e6:	fb00 2404 	mla	r4, r0, r4, r2
 80191ea:	6832      	ldr	r2, [r6, #0]
 80191ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80191f0:	682a      	ldr	r2, [r5, #0]
 80191f2:	9202      	str	r2, [sp, #8]
 80191f4:	3704      	adds	r7, #4
 80191f6:	9a01      	ldr	r2, [sp, #4]
 80191f8:	2a00      	cmp	r2, #0
 80191fa:	dc03      	bgt.n	8019204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80191fc:	9a03      	ldr	r2, [sp, #12]
 80191fe:	2a00      	cmp	r2, #0
 8019200:	f340 80cc 	ble.w	801939c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019204:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019206:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801920a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801920e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019212:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019214:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019218:	2b00      	cmp	r3, #0
 801921a:	dd0d      	ble.n	8019238 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801921c:	1406      	asrs	r6, r0, #16
 801921e:	d405      	bmi.n	801922c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019220:	454e      	cmp	r6, r9
 8019222:	da03      	bge.n	801922c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019224:	1416      	asrs	r6, r2, #16
 8019226:	d401      	bmi.n	801922c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019228:	4546      	cmp	r6, r8
 801922a:	db06      	blt.n	801923a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801922c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801922e:	4460      	add	r0, ip
 8019230:	4432      	add	r2, r6
 8019232:	3b01      	subs	r3, #1
 8019234:	3402      	adds	r4, #2
 8019236:	e7ef      	b.n	8019218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019238:	d00f      	beq.n	801925a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801923a:	1e5e      	subs	r6, r3, #1
 801923c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019240:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019244:	d543      	bpl.n	80192ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019246:	4698      	mov	r8, r3
 8019248:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801924c:	f1b8 0f00 	cmp.w	r8, #0
 8019250:	dc71      	bgt.n	8019336 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019252:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019256:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801925a:	9b01      	ldr	r3, [sp, #4]
 801925c:	2b00      	cmp	r3, #0
 801925e:	f340 809d 	ble.w	801939c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019262:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019266:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801926a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801926e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019270:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019274:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019278:	eeb0 6a62 	vmov.f32	s12, s5
 801927c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019280:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019284:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019288:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801928c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019290:	eeb0 6a43 	vmov.f32	s12, s6
 8019294:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019298:	ee12 2a90 	vmov	r2, s5
 801929c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80192a4:	ee13 2a10 	vmov	r2, s6
 80192a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80192ac:	9312      	str	r3, [sp, #72]	; 0x48
 80192ae:	9b01      	ldr	r3, [sp, #4]
 80192b0:	9a03      	ldr	r2, [sp, #12]
 80192b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192b6:	3b01      	subs	r3, #1
 80192b8:	9301      	str	r3, [sp, #4]
 80192ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80192be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192c0:	eeb0 3a67 	vmov.f32	s6, s15
 80192c4:	bf08      	it	eq
 80192c6:	4613      	moveq	r3, r2
 80192c8:	eef0 2a47 	vmov.f32	s5, s14
 80192cc:	e793      	b.n	80191f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80192ce:	45ce      	cmp	lr, r9
 80192d0:	dab9      	bge.n	8019246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80192d2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80192d4:	fb01 2606 	mla	r6, r1, r6, r2
 80192d8:	1436      	asrs	r6, r6, #16
 80192da:	d4b4      	bmi.n	8019246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80192dc:	4546      	cmp	r6, r8
 80192de:	dab2      	bge.n	8019246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80192e0:	4698      	mov	r8, r3
 80192e2:	46a2      	mov	sl, r4
 80192e4:	f1b8 0f00 	cmp.w	r8, #0
 80192e8:	ddb3      	ble.n	8019252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80192ea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80192ee:	9902      	ldr	r1, [sp, #8]
 80192f0:	1416      	asrs	r6, r2, #16
 80192f2:	fb09 1606 	mla	r6, r9, r6, r1
 80192f6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80192fa:	492a      	ldr	r1, [pc, #168]	; (80193a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80192fc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019300:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019304:	eb07 0b0e 	add.w	fp, r7, lr
 8019308:	4460      	add	r0, ip
 801930a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801930e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019312:	00f6      	lsls	r6, r6, #3
 8019314:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019318:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801931c:	ea49 0606 	orr.w	r6, r9, r6
 8019320:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019324:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019326:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801932a:	f82a 6b02 	strh.w	r6, [sl], #2
 801932e:	440a      	add	r2, r1
 8019330:	f108 38ff 	add.w	r8, r8, #4294967295
 8019334:	e7d6      	b.n	80192e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019336:	ea5f 4920 	movs.w	r9, r0, asr #16
 801933a:	d429      	bmi.n	8019390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801933c:	68ae      	ldr	r6, [r5, #8]
 801933e:	454e      	cmp	r6, r9
 8019340:	dd26      	ble.n	8019390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019342:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8019346:	d423      	bmi.n	8019390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019348:	68e9      	ldr	r1, [r5, #12]
 801934a:	4559      	cmp	r1, fp
 801934c:	dd20      	ble.n	8019390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801934e:	9902      	ldr	r1, [sp, #8]
 8019350:	fa0f fe86 	sxth.w	lr, r6
 8019354:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019358:	f06f 0101 	mvn.w	r1, #1
 801935c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019360:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019364:	eb07 060e 	add.w	r6, r7, lr
 8019368:	fb01 f908 	mul.w	r9, r1, r8
 801936c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019370:	7876      	ldrb	r6, [r6, #1]
 8019372:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8019376:	00f6      	lsls	r6, r6, #3
 8019378:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801937c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019380:	ea4b 0606 	orr.w	r6, fp, r6
 8019384:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019388:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801938c:	f82a 6009 	strh.w	r6, [sl, r9]
 8019390:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019392:	4460      	add	r0, ip
 8019394:	440a      	add	r2, r1
 8019396:	f108 38ff 	add.w	r8, r8, #4294967295
 801939a:	e757      	b.n	801924c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801939c:	b005      	add	sp, #20
 801939e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193a2:	bf00      	nop
 80193a4:	fffff800 	.word	0xfffff800

080193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193ac:	b087      	sub	sp, #28
 80193ae:	468b      	mov	fp, r1
 80193b0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80193b2:	9204      	str	r2, [sp, #16]
 80193b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80193b8:	9205      	str	r2, [sp, #20]
 80193ba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80193be:	6841      	ldr	r1, [r0, #4]
 80193c0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80193c4:	fb01 2404 	mla	r4, r1, r4, r2
 80193c8:	6802      	ldr	r2, [r0, #0]
 80193ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80193ce:	f8dc 2000 	ldr.w	r2, [ip]
 80193d2:	9201      	str	r2, [sp, #4]
 80193d4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80193d8:	3204      	adds	r2, #4
 80193da:	9202      	str	r2, [sp, #8]
 80193dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80193e0:	f1bb 0f00 	cmp.w	fp, #0
 80193e4:	dc03      	bgt.n	80193ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80193e6:	9a04      	ldr	r2, [sp, #16]
 80193e8:	2a00      	cmp	r2, #0
 80193ea:	f340 8138 	ble.w	801965e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80193ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80193f0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80193f4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80193f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80193fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80193fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019402:	2b00      	cmp	r3, #0
 8019404:	dd0e      	ble.n	8019424 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019406:	1402      	asrs	r2, r0, #16
 8019408:	d405      	bmi.n	8019416 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801940a:	42ba      	cmp	r2, r7
 801940c:	da03      	bge.n	8019416 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801940e:	140a      	asrs	r2, r1, #16
 8019410:	d401      	bmi.n	8019416 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019412:	42b2      	cmp	r2, r6
 8019414:	db07      	blt.n	8019426 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019416:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019418:	4410      	add	r0, r2
 801941a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801941c:	3b01      	subs	r3, #1
 801941e:	4411      	add	r1, r2
 8019420:	3402      	adds	r4, #2
 8019422:	e7ee      	b.n	8019402 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019424:	d019      	beq.n	801945a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019426:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019428:	1e5a      	subs	r2, r3, #1
 801942a:	fb05 0502 	mla	r5, r5, r2, r0
 801942e:	142d      	asrs	r5, r5, #16
 8019430:	d409      	bmi.n	8019446 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019432:	42bd      	cmp	r5, r7
 8019434:	da07      	bge.n	8019446 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019436:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019438:	fb05 1202 	mla	r2, r5, r2, r1
 801943c:	1412      	asrs	r2, r2, #16
 801943e:	d402      	bmi.n	8019446 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019440:	42b2      	cmp	r2, r6
 8019442:	f2c0 80ac 	blt.w	801959e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019446:	f04f 0e00 	mov.w	lr, #0
 801944a:	eb03 020e 	add.w	r2, r3, lr
 801944e:	2a00      	cmp	r2, #0
 8019450:	dc3e      	bgt.n	80194d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019452:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019456:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801945a:	f1bb 0f00 	cmp.w	fp, #0
 801945e:	f340 80fe 	ble.w	801965e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019462:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019466:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801946a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801946e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019470:	f1bb 0b01 	subs.w	fp, fp, #1
 8019474:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019478:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801947c:	eeb0 6a62 	vmov.f32	s12, s5
 8019480:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019484:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019488:	ee77 2a62 	vsub.f32	s5, s14, s5
 801948c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019490:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019494:	eeb0 6a43 	vmov.f32	s12, s6
 8019498:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801949c:	ee12 2a90 	vmov	r2, s5
 80194a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80194a8:	ee13 2a10 	vmov	r2, s6
 80194ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80194b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80194b8:	9a04      	ldr	r2, [sp, #16]
 80194ba:	9314      	str	r3, [sp, #80]	; 0x50
 80194bc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80194c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194c2:	eeb0 3a67 	vmov.f32	s6, s15
 80194c6:	bf08      	it	eq
 80194c8:	4613      	moveq	r3, r2
 80194ca:	eef0 2a47 	vmov.f32	s5, s14
 80194ce:	e787      	b.n	80193e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80194d0:	1406      	asrs	r6, r0, #16
 80194d2:	d45d      	bmi.n	8019590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80194d4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80194d8:	42b5      	cmp	r5, r6
 80194da:	dd59      	ble.n	8019590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80194dc:	140f      	asrs	r7, r1, #16
 80194de:	d457      	bmi.n	8019590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80194e0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80194e4:	42ba      	cmp	r2, r7
 80194e6:	dd53      	ble.n	8019590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80194e8:	9a01      	ldr	r2, [sp, #4]
 80194ea:	b22d      	sxth	r5, r5
 80194ec:	fb07 2505 	mla	r5, r7, r5, r2
 80194f0:	5daa      	ldrb	r2, [r5, r6]
 80194f2:	9d02      	ldr	r5, [sp, #8]
 80194f4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80194f8:	0e2e      	lsrs	r6, r5, #24
 80194fa:	d049      	beq.n	8019590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80194fc:	f06f 0201 	mvn.w	r2, #1
 8019500:	fb02 f20e 	mul.w	r2, r2, lr
 8019504:	9203      	str	r2, [sp, #12]
 8019506:	f834 8002 	ldrh.w	r8, [r4, r2]
 801950a:	9a05      	ldr	r2, [sp, #20]
 801950c:	4356      	muls	r6, r2
 801950e:	1c72      	adds	r2, r6, #1
 8019510:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019514:	1212      	asrs	r2, r2, #8
 8019516:	fa1f f982 	uxth.w	r9, r2
 801951a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801951e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019522:	43d2      	mvns	r2, r2
 8019524:	b2d2      	uxtb	r2, r2
 8019526:	fb16 f609 	smulbb	r6, r6, r9
 801952a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801952e:	fb07 6702 	mla	r7, r7, r2, r6
 8019532:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019536:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801953a:	b2ed      	uxtb	r5, r5
 801953c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019540:	fa5f f888 	uxtb.w	r8, r8
 8019544:	fb15 f509 	smulbb	r5, r5, r9
 8019548:	fb08 5502 	mla	r5, r8, r2, r5
 801954c:	b2bf      	uxth	r7, r7
 801954e:	fb1a fa09 	smulbb	sl, sl, r9
 8019552:	b2ad      	uxth	r5, r5
 8019554:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019558:	fb06 a602 	mla	r6, r6, r2, sl
 801955c:	1c7a      	adds	r2, r7, #1
 801955e:	f105 0a01 	add.w	sl, r5, #1
 8019562:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019566:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801956a:	b2b6      	uxth	r6, r6
 801956c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019570:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019574:	ea4a 0707 	orr.w	r7, sl, r7
 8019578:	f106 0a01 	add.w	sl, r6, #1
 801957c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019580:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019584:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019588:	9a03      	ldr	r2, [sp, #12]
 801958a:	ea47 070a 	orr.w	r7, r7, sl
 801958e:	52a7      	strh	r7, [r4, r2]
 8019590:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019592:	4410      	add	r0, r2
 8019594:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019596:	f10e 3eff 	add.w	lr, lr, #4294967295
 801959a:	4411      	add	r1, r2
 801959c:	e755      	b.n	801944a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801959e:	f04f 0800 	mov.w	r8, #0
 80195a2:	eba3 0208 	sub.w	r2, r3, r8
 80195a6:	2a00      	cmp	r2, #0
 80195a8:	f77f af53 	ble.w	8019452 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80195ac:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80195b0:	9f01      	ldr	r7, [sp, #4]
 80195b2:	140a      	asrs	r2, r1, #16
 80195b4:	1405      	asrs	r5, r0, #16
 80195b6:	fb06 7202 	mla	r2, r6, r2, r7
 80195ba:	5d52      	ldrb	r2, [r2, r5]
 80195bc:	9d02      	ldr	r5, [sp, #8]
 80195be:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80195c2:	0e2e      	lsrs	r6, r5, #24
 80195c4:	d044      	beq.n	8019650 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80195c6:	9a05      	ldr	r2, [sp, #20]
 80195c8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80195cc:	4356      	muls	r6, r2
 80195ce:	1c72      	adds	r2, r6, #1
 80195d0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80195d4:	1212      	asrs	r2, r2, #8
 80195d6:	fa1f f982 	uxth.w	r9, r2
 80195da:	ea4f 272e 	mov.w	r7, lr, asr #8
 80195de:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80195e2:	43d2      	mvns	r2, r2
 80195e4:	b2d2      	uxtb	r2, r2
 80195e6:	fb16 f609 	smulbb	r6, r6, r9
 80195ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80195ee:	fb07 6702 	mla	r7, r7, r2, r6
 80195f2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80195f6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80195fa:	b2ed      	uxtb	r5, r5
 80195fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019600:	fa5f fe8e 	uxtb.w	lr, lr
 8019604:	fb15 f509 	smulbb	r5, r5, r9
 8019608:	fb0e 5502 	mla	r5, lr, r2, r5
 801960c:	b2bf      	uxth	r7, r7
 801960e:	fb1a fa09 	smulbb	sl, sl, r9
 8019612:	b2ad      	uxth	r5, r5
 8019614:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019618:	fb06 a602 	mla	r6, r6, r2, sl
 801961c:	1c7a      	adds	r2, r7, #1
 801961e:	f105 0a01 	add.w	sl, r5, #1
 8019622:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019626:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801962a:	b2b6      	uxth	r6, r6
 801962c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019630:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019634:	ea4a 0707 	orr.w	r7, sl, r7
 8019638:	f106 0a01 	add.w	sl, r6, #1
 801963c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019640:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019644:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019648:	ea47 070a 	orr.w	r7, r7, sl
 801964c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019650:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019652:	4410      	add	r0, r2
 8019654:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019656:	f108 0801 	add.w	r8, r8, #1
 801965a:	4411      	add	r1, r2
 801965c:	e7a1      	b.n	80195a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801965e:	b007      	add	sp, #28
 8019660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019668:	b085      	sub	sp, #20
 801966a:	468b      	mov	fp, r1
 801966c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801966e:	9203      	str	r2, [sp, #12]
 8019670:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019674:	6841      	ldr	r1, [r0, #4]
 8019676:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801967a:	fb01 2404 	mla	r4, r1, r4, r2
 801967e:	6802      	ldr	r2, [r0, #0]
 8019680:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019684:	f8de 2000 	ldr.w	r2, [lr]
 8019688:	9200      	str	r2, [sp, #0]
 801968a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801968e:	3204      	adds	r2, #4
 8019690:	9201      	str	r2, [sp, #4]
 8019692:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019696:	f1bb 0f00 	cmp.w	fp, #0
 801969a:	dc03      	bgt.n	80196a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801969c:	9a03      	ldr	r2, [sp, #12]
 801969e:	2a00      	cmp	r2, #0
 80196a0:	f340 8153 	ble.w	801994a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80196a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80196a6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80196aa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80196ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80196b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80196b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80196b8:	2b00      	cmp	r3, #0
 80196ba:	dd0e      	ble.n	80196da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80196bc:	1408      	asrs	r0, r1, #16
 80196be:	d405      	bmi.n	80196cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196c0:	42b8      	cmp	r0, r7
 80196c2:	da03      	bge.n	80196cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196c4:	1410      	asrs	r0, r2, #16
 80196c6:	d401      	bmi.n	80196cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196c8:	42b0      	cmp	r0, r6
 80196ca:	db07      	blt.n	80196dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80196cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80196ce:	4401      	add	r1, r0
 80196d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80196d2:	3b01      	subs	r3, #1
 80196d4:	4402      	add	r2, r0
 80196d6:	3402      	adds	r4, #2
 80196d8:	e7ee      	b.n	80196b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80196da:	d017      	beq.n	801970c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80196dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80196de:	1e58      	subs	r0, r3, #1
 80196e0:	fb05 1500 	mla	r5, r5, r0, r1
 80196e4:	142d      	asrs	r5, r5, #16
 80196e6:	d409      	bmi.n	80196fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80196e8:	42bd      	cmp	r5, r7
 80196ea:	da07      	bge.n	80196fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80196ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80196ee:	fb05 2000 	mla	r0, r5, r0, r2
 80196f2:	1400      	asrs	r0, r0, #16
 80196f4:	d402      	bmi.n	80196fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80196f6:	42b0      	cmp	r0, r6
 80196f8:	f2c0 80bc 	blt.w	8019874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80196fc:	2600      	movs	r6, #0
 80196fe:	1998      	adds	r0, r3, r6
 8019700:	2800      	cmp	r0, #0
 8019702:	dc3e      	bgt.n	8019782 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019704:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019708:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801970c:	f1bb 0f00 	cmp.w	fp, #0
 8019710:	f340 811b 	ble.w	801994a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019714:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801971c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019720:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019722:	f1bb 0b01 	subs.w	fp, fp, #1
 8019726:	ee31 1a05 	vadd.f32	s2, s2, s10
 801972a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801972e:	eeb0 6a62 	vmov.f32	s12, s5
 8019732:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019736:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801973a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801973e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019746:	eeb0 6a43 	vmov.f32	s12, s6
 801974a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801974e:	ee12 2a90 	vmov	r2, s5
 8019752:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019756:	fb92 f3f3 	sdiv	r3, r2, r3
 801975a:	ee13 2a10 	vmov	r2, s6
 801975e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019762:	9311      	str	r3, [sp, #68]	; 0x44
 8019764:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019766:	fb92 f3f3 	sdiv	r3, r2, r3
 801976a:	9a03      	ldr	r2, [sp, #12]
 801976c:	9312      	str	r3, [sp, #72]	; 0x48
 801976e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019774:	eeb0 3a67 	vmov.f32	s6, s15
 8019778:	bf08      	it	eq
 801977a:	4613      	moveq	r3, r2
 801977c:	eef0 2a47 	vmov.f32	s5, s14
 8019780:	e789      	b.n	8019696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019782:	140f      	asrs	r7, r1, #16
 8019784:	d426      	bmi.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019786:	f8de 5008 	ldr.w	r5, [lr, #8]
 801978a:	42bd      	cmp	r5, r7
 801978c:	dd22      	ble.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801978e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019792:	d41f      	bmi.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019794:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019798:	4560      	cmp	r0, ip
 801979a:	dd1b      	ble.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801979c:	9800      	ldr	r0, [sp, #0]
 801979e:	b22d      	sxth	r5, r5
 80197a0:	fb0c 0505 	mla	r5, ip, r5, r0
 80197a4:	5de8      	ldrb	r0, [r5, r7]
 80197a6:	9d01      	ldr	r5, [sp, #4]
 80197a8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80197ac:	0e07      	lsrs	r7, r0, #24
 80197ae:	2fff      	cmp	r7, #255	; 0xff
 80197b0:	d116      	bne.n	80197e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80197b2:	f06f 0501 	mvn.w	r5, #1
 80197b6:	fb05 f706 	mul.w	r7, r5, r6
 80197ba:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80197be:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80197c2:	0945      	lsrs	r5, r0, #5
 80197c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80197c8:	ea4c 0505 	orr.w	r5, ip, r5
 80197cc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80197d0:	4305      	orrs	r5, r0
 80197d2:	53e5      	strh	r5, [r4, r7]
 80197d4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80197d6:	4401      	add	r1, r0
 80197d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80197da:	3e01      	subs	r6, #1
 80197dc:	4402      	add	r2, r0
 80197de:	e78e      	b.n	80196fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80197e0:	b2fd      	uxtb	r5, r7
 80197e2:	2f00      	cmp	r7, #0
 80197e4:	d0f6      	beq.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197e6:	f06f 0701 	mvn.w	r7, #1
 80197ea:	4377      	muls	r7, r6
 80197ec:	fa1f f985 	uxth.w	r9, r5
 80197f0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80197f4:	9702      	str	r7, [sp, #8]
 80197f6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80197fa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80197fe:	43ed      	mvns	r5, r5
 8019800:	b2ed      	uxtb	r5, r5
 8019802:	fb17 f709 	smulbb	r7, r7, r9
 8019806:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801980a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801980e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019812:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019816:	b2c0      	uxtb	r0, r0
 8019818:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801981c:	fa5f f888 	uxtb.w	r8, r8
 8019820:	fb10 f009 	smulbb	r0, r0, r9
 8019824:	fb08 0005 	mla	r0, r8, r5, r0
 8019828:	b280      	uxth	r0, r0
 801982a:	fa1f fc8c 	uxth.w	ip, ip
 801982e:	fb1a fa09 	smulbb	sl, sl, r9
 8019832:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019836:	fb07 a705 	mla	r7, r7, r5, sl
 801983a:	f100 0a01 	add.w	sl, r0, #1
 801983e:	f10c 0501 	add.w	r5, ip, #1
 8019842:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019846:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801984a:	b2bf      	uxth	r7, r7
 801984c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019850:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019854:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019858:	f107 0a01 	add.w	sl, r7, #1
 801985c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019860:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019864:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019868:	9802      	ldr	r0, [sp, #8]
 801986a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801986e:	f824 c000 	strh.w	ip, [r4, r0]
 8019872:	e7af      	b.n	80197d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019874:	f04f 0800 	mov.w	r8, #0
 8019878:	eba3 0008 	sub.w	r0, r3, r8
 801987c:	2800      	cmp	r0, #0
 801987e:	f77f af41 	ble.w	8019704 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019882:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019886:	9f00      	ldr	r7, [sp, #0]
 8019888:	1410      	asrs	r0, r2, #16
 801988a:	140d      	asrs	r5, r1, #16
 801988c:	fb06 7000 	mla	r0, r6, r0, r7
 8019890:	5d40      	ldrb	r0, [r0, r5]
 8019892:	9d01      	ldr	r5, [sp, #4]
 8019894:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019898:	0e2e      	lsrs	r6, r5, #24
 801989a:	2eff      	cmp	r6, #255	; 0xff
 801989c:	d112      	bne.n	80198c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801989e:	482c      	ldr	r0, [pc, #176]	; (8019950 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80198a0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80198a4:	0968      	lsrs	r0, r5, #5
 80198a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80198aa:	4330      	orrs	r0, r6
 80198ac:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80198b0:	4328      	orrs	r0, r5
 80198b2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80198b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80198b8:	4401      	add	r1, r0
 80198ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 80198bc:	f108 0801 	add.w	r8, r8, #1
 80198c0:	4402      	add	r2, r0
 80198c2:	e7d9      	b.n	8019878 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80198c4:	b2f0      	uxtb	r0, r6
 80198c6:	2e00      	cmp	r6, #0
 80198c8:	d0f5      	beq.n	80198b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80198ca:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80198ce:	fa1f f980 	uxth.w	r9, r0
 80198d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80198d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80198da:	43c0      	mvns	r0, r0
 80198dc:	b2c0      	uxtb	r0, r0
 80198de:	fb16 f609 	smulbb	r6, r6, r9
 80198e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80198e6:	fb07 6700 	mla	r7, r7, r0, r6
 80198ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80198ee:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80198f2:	b2ed      	uxtb	r5, r5
 80198f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80198f8:	fa5f fc8c 	uxtb.w	ip, ip
 80198fc:	fb15 f509 	smulbb	r5, r5, r9
 8019900:	fb0c 5500 	mla	r5, ip, r0, r5
 8019904:	b2bf      	uxth	r7, r7
 8019906:	fb1a fa09 	smulbb	sl, sl, r9
 801990a:	b2ad      	uxth	r5, r5
 801990c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019910:	fb06 a600 	mla	r6, r6, r0, sl
 8019914:	1c78      	adds	r0, r7, #1
 8019916:	f105 0a01 	add.w	sl, r5, #1
 801991a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801991e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019922:	b2b6      	uxth	r6, r6
 8019924:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019928:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801992c:	ea4a 0707 	orr.w	r7, sl, r7
 8019930:	f106 0a01 	add.w	sl, r6, #1
 8019934:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019938:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801993c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019940:	ea47 070a 	orr.w	r7, r7, sl
 8019944:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019948:	e7b5      	b.n	80198b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801994a:	b005      	add	sp, #20
 801994c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019950:	fffff800 	.word	0xfffff800

08019954 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019958:	b087      	sub	sp, #28
 801995a:	468b      	mov	fp, r1
 801995c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801995e:	9204      	str	r2, [sp, #16]
 8019960:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019964:	9205      	str	r2, [sp, #20]
 8019966:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801996a:	6861      	ldr	r1, [r4, #4]
 801996c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019970:	fb01 2000 	mla	r0, r1, r0, r2
 8019974:	6822      	ldr	r2, [r4, #0]
 8019976:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801997a:	f8de 2000 	ldr.w	r2, [lr]
 801997e:	9201      	str	r2, [sp, #4]
 8019980:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019984:	9202      	str	r2, [sp, #8]
 8019986:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801998a:	f1bb 0f00 	cmp.w	fp, #0
 801998e:	dc03      	bgt.n	8019998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019990:	9a04      	ldr	r2, [sp, #16]
 8019992:	2a00      	cmp	r2, #0
 8019994:	f340 8142 	ble.w	8019c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019998:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801999a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801999e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80199a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80199a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80199a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80199ac:	2b00      	cmp	r3, #0
 80199ae:	dd0e      	ble.n	80199ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80199b0:	140c      	asrs	r4, r1, #16
 80199b2:	d405      	bmi.n	80199c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199b4:	42bc      	cmp	r4, r7
 80199b6:	da03      	bge.n	80199c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199b8:	1414      	asrs	r4, r2, #16
 80199ba:	d401      	bmi.n	80199c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199bc:	42b4      	cmp	r4, r6
 80199be:	db07      	blt.n	80199d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80199c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199c2:	4421      	add	r1, r4
 80199c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80199c6:	3b01      	subs	r3, #1
 80199c8:	4422      	add	r2, r4
 80199ca:	3002      	adds	r0, #2
 80199cc:	e7ee      	b.n	80199ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80199ce:	d019      	beq.n	8019a04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80199d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80199d2:	1e5c      	subs	r4, r3, #1
 80199d4:	fb05 1504 	mla	r5, r5, r4, r1
 80199d8:	142d      	asrs	r5, r5, #16
 80199da:	d409      	bmi.n	80199f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80199dc:	42bd      	cmp	r5, r7
 80199de:	da07      	bge.n	80199f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80199e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80199e2:	fb05 2404 	mla	r4, r5, r4, r2
 80199e6:	1424      	asrs	r4, r4, #16
 80199e8:	d402      	bmi.n	80199f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80199ea:	42b4      	cmp	r4, r6
 80199ec:	f2c0 80b1 	blt.w	8019b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80199f0:	f04f 0800 	mov.w	r8, #0
 80199f4:	eb03 0408 	add.w	r4, r3, r8
 80199f8:	2c00      	cmp	r4, #0
 80199fa:	dc3e      	bgt.n	8019a7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80199fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a04:	f1bb 0f00 	cmp.w	fp, #0
 8019a08:	f340 8108 	ble.w	8019c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a14:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a1a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a26:	eeb0 6a62 	vmov.f32	s12, s5
 8019a2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a36:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019a3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a3e:	eeb0 6a43 	vmov.f32	s12, s6
 8019a42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a46:	ee12 2a90 	vmov	r2, s5
 8019a4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a52:	ee13 2a10 	vmov	r2, s6
 8019a56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a5a:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a62:	9a04      	ldr	r2, [sp, #16]
 8019a64:	9314      	str	r3, [sp, #80]	; 0x50
 8019a66:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019a6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a6c:	eeb0 3a67 	vmov.f32	s6, s15
 8019a70:	bf08      	it	eq
 8019a72:	4613      	moveq	r3, r2
 8019a74:	eef0 2a47 	vmov.f32	s5, s14
 8019a78:	e787      	b.n	801998a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019a7a:	140e      	asrs	r6, r1, #16
 8019a7c:	d462      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019a7e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019a82:	42b5      	cmp	r5, r6
 8019a84:	dd5e      	ble.n	8019b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019a86:	1417      	asrs	r7, r2, #16
 8019a88:	d45c      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019a8a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019a8e:	42bc      	cmp	r4, r7
 8019a90:	dd58      	ble.n	8019b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019a92:	b22d      	sxth	r5, r5
 8019a94:	fb07 6505 	mla	r5, r7, r5, r6
 8019a98:	9c02      	ldr	r4, [sp, #8]
 8019a9a:	5d66      	ldrb	r6, [r4, r5]
 8019a9c:	2e00      	cmp	r6, #0
 8019a9e:	d051      	beq.n	8019b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019aa0:	9c01      	ldr	r4, [sp, #4]
 8019aa2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019aa6:	f06f 0401 	mvn.w	r4, #1
 8019aaa:	fb04 f408 	mul.w	r4, r4, r8
 8019aae:	9403      	str	r4, [sp, #12]
 8019ab0:	5b05      	ldrh	r5, [r0, r4]
 8019ab2:	9c05      	ldr	r4, [sp, #20]
 8019ab4:	4366      	muls	r6, r4
 8019ab6:	1c74      	adds	r4, r6, #1
 8019ab8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019abc:	1224      	asrs	r4, r4, #8
 8019abe:	b2a7      	uxth	r7, r4
 8019ac0:	122e      	asrs	r6, r5, #8
 8019ac2:	43e4      	mvns	r4, r4
 8019ac4:	b2e4      	uxtb	r4, r4
 8019ac6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019aca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ace:	fb16 f604 	smulbb	r6, r6, r4
 8019ad2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019ad6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ada:	00ed      	lsls	r5, r5, #3
 8019adc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ae0:	b2ed      	uxtb	r5, r5
 8019ae2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019ae6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019aea:	fb15 f504 	smulbb	r5, r5, r4
 8019aee:	fa5f f989 	uxtb.w	r9, r9
 8019af2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019af6:	fb09 5507 	mla	r5, r9, r7, r5
 8019afa:	fb1a fa04 	smulbb	sl, sl, r4
 8019afe:	fa1f fc8c 	uxth.w	ip, ip
 8019b02:	b2ad      	uxth	r5, r5
 8019b04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b08:	fb06 a607 	mla	r6, r6, r7, sl
 8019b0c:	f10c 0401 	add.w	r4, ip, #1
 8019b10:	f105 0a01 	add.w	sl, r5, #1
 8019b14:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b1c:	b2b6      	uxth	r6, r6
 8019b1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b22:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b26:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b2a:	f106 0a01 	add.w	sl, r6, #1
 8019b2e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019b32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b3a:	9c03      	ldr	r4, [sp, #12]
 8019b3c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019b40:	f820 c004 	strh.w	ip, [r0, r4]
 8019b44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019b46:	4421      	add	r1, r4
 8019b48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019b4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b4e:	4422      	add	r2, r4
 8019b50:	e750      	b.n	80199f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b52:	f04f 0900 	mov.w	r9, #0
 8019b56:	eba3 0409 	sub.w	r4, r3, r9
 8019b5a:	2c00      	cmp	r4, #0
 8019b5c:	f77f af4e 	ble.w	80199fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019b60:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019b64:	140d      	asrs	r5, r1, #16
 8019b66:	1414      	asrs	r4, r2, #16
 8019b68:	fb06 5404 	mla	r4, r6, r4, r5
 8019b6c:	9d02      	ldr	r5, [sp, #8]
 8019b6e:	5d2e      	ldrb	r6, [r5, r4]
 8019b70:	2e00      	cmp	r6, #0
 8019b72:	d04c      	beq.n	8019c0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019b74:	9d01      	ldr	r5, [sp, #4]
 8019b76:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019b7a:	9c05      	ldr	r4, [sp, #20]
 8019b7c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019b80:	4366      	muls	r6, r4
 8019b82:	1c74      	adds	r4, r6, #1
 8019b84:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019b88:	1224      	asrs	r4, r4, #8
 8019b8a:	b2a7      	uxth	r7, r4
 8019b8c:	122e      	asrs	r6, r5, #8
 8019b8e:	43e4      	mvns	r4, r4
 8019b90:	b2e4      	uxtb	r4, r4
 8019b92:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019b96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019b9a:	fb16 f604 	smulbb	r6, r6, r4
 8019b9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019ba2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ba6:	00ed      	lsls	r5, r5, #3
 8019ba8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019bac:	b2ed      	uxtb	r5, r5
 8019bae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019bb2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019bb6:	fb15 f504 	smulbb	r5, r5, r4
 8019bba:	fa5f f888 	uxtb.w	r8, r8
 8019bbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019bc2:	fb08 5507 	mla	r5, r8, r7, r5
 8019bc6:	fb1a fa04 	smulbb	sl, sl, r4
 8019bca:	fa1f fc8c 	uxth.w	ip, ip
 8019bce:	b2ad      	uxth	r5, r5
 8019bd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bd4:	fb06 a607 	mla	r6, r6, r7, sl
 8019bd8:	f10c 0401 	add.w	r4, ip, #1
 8019bdc:	f105 0a01 	add.w	sl, r5, #1
 8019be0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019be4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019be8:	b2b6      	uxth	r6, r6
 8019bea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019bf2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019bf6:	f106 0a01 	add.w	sl, r6, #1
 8019bfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c06:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c0a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c0e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c10:	4421      	add	r1, r4
 8019c12:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c14:	f109 0901 	add.w	r9, r9, #1
 8019c18:	4422      	add	r2, r4
 8019c1a:	e79c      	b.n	8019b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019c1c:	b007      	add	sp, #28
 8019c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c26:	b085      	sub	sp, #20
 8019c28:	468b      	mov	fp, r1
 8019c2a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c2c:	9203      	str	r2, [sp, #12]
 8019c2e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019c32:	6861      	ldr	r1, [r4, #4]
 8019c34:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019c38:	fb01 2000 	mla	r0, r1, r0, r2
 8019c3c:	6822      	ldr	r2, [r4, #0]
 8019c3e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019c42:	f8d8 2000 	ldr.w	r2, [r8]
 8019c46:	9200      	str	r2, [sp, #0]
 8019c48:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019c4c:	9201      	str	r2, [sp, #4]
 8019c4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019c52:	f1bb 0f00 	cmp.w	fp, #0
 8019c56:	dc03      	bgt.n	8019c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019c58:	9a03      	ldr	r2, [sp, #12]
 8019c5a:	2a00      	cmp	r2, #0
 8019c5c:	f340 8146 	ble.w	8019eec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019c60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c62:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019c66:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019c6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c74:	2b00      	cmp	r3, #0
 8019c76:	dd0e      	ble.n	8019c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019c78:	140c      	asrs	r4, r1, #16
 8019c7a:	d405      	bmi.n	8019c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c7c:	42bc      	cmp	r4, r7
 8019c7e:	da03      	bge.n	8019c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c80:	1414      	asrs	r4, r2, #16
 8019c82:	d401      	bmi.n	8019c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c84:	42b4      	cmp	r4, r6
 8019c86:	db07      	blt.n	8019c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c88:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c8a:	4421      	add	r1, r4
 8019c8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c8e:	3b01      	subs	r3, #1
 8019c90:	4422      	add	r2, r4
 8019c92:	3002      	adds	r0, #2
 8019c94:	e7ee      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019c96:	d017      	beq.n	8019cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019c98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c9a:	1e5c      	subs	r4, r3, #1
 8019c9c:	fb05 1504 	mla	r5, r5, r4, r1
 8019ca0:	142d      	asrs	r5, r5, #16
 8019ca2:	d409      	bmi.n	8019cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ca4:	42bd      	cmp	r5, r7
 8019ca6:	da07      	bge.n	8019cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ca8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019caa:	fb05 2404 	mla	r4, r5, r4, r2
 8019cae:	1424      	asrs	r4, r4, #16
 8019cb0:	d402      	bmi.n	8019cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019cb2:	42b4      	cmp	r4, r6
 8019cb4:	f2c0 80b3 	blt.w	8019e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019cb8:	2600      	movs	r6, #0
 8019cba:	199c      	adds	r4, r3, r6
 8019cbc:	2c00      	cmp	r4, #0
 8019cbe:	dc3e      	bgt.n	8019d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019cc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019cc8:	f1bb 0f00 	cmp.w	fp, #0
 8019ccc:	f340 810e 	ble.w	8019eec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019cd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cd8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019cdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019cde:	f1bb 0b01 	subs.w	fp, fp, #1
 8019ce2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ce6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cea:	eeb0 6a62 	vmov.f32	s12, s5
 8019cee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019cf2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019cf6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cfa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019cfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d02:	eeb0 6a43 	vmov.f32	s12, s6
 8019d06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d0a:	ee12 2a90 	vmov	r2, s5
 8019d0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d12:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d16:	ee13 2a10 	vmov	r2, s6
 8019d1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d1e:	9311      	str	r3, [sp, #68]	; 0x44
 8019d20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d22:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d26:	9a03      	ldr	r2, [sp, #12]
 8019d28:	9312      	str	r3, [sp, #72]	; 0x48
 8019d2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d30:	eeb0 3a67 	vmov.f32	s6, s15
 8019d34:	bf08      	it	eq
 8019d36:	4613      	moveq	r3, r2
 8019d38:	eef0 2a47 	vmov.f32	s5, s14
 8019d3c:	e789      	b.n	8019c52 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019d3e:	140f      	asrs	r7, r1, #16
 8019d40:	d418      	bmi.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d42:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019d46:	42bd      	cmp	r5, r7
 8019d48:	dd14      	ble.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d4a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019d4e:	d411      	bmi.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d50:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019d54:	4564      	cmp	r4, ip
 8019d56:	dd0d      	ble.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d58:	b22d      	sxth	r5, r5
 8019d5a:	fb0c 7505 	mla	r5, ip, r5, r7
 8019d5e:	9c01      	ldr	r4, [sp, #4]
 8019d60:	5d64      	ldrb	r4, [r4, r5]
 8019d62:	2cff      	cmp	r4, #255	; 0xff
 8019d64:	d10c      	bne.n	8019d80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019d66:	9c00      	ldr	r4, [sp, #0]
 8019d68:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019d6c:	f06f 0401 	mvn.w	r4, #1
 8019d70:	4374      	muls	r4, r6
 8019d72:	5305      	strh	r5, [r0, r4]
 8019d74:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019d76:	4421      	add	r1, r4
 8019d78:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019d7a:	3e01      	subs	r6, #1
 8019d7c:	4422      	add	r2, r4
 8019d7e:	e79c      	b.n	8019cba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d80:	2c00      	cmp	r4, #0
 8019d82:	d0f7      	beq.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d84:	9f00      	ldr	r7, [sp, #0]
 8019d86:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019d8a:	f06f 0501 	mvn.w	r5, #1
 8019d8e:	4375      	muls	r5, r6
 8019d90:	9502      	str	r5, [sp, #8]
 8019d92:	5b45      	ldrh	r5, [r0, r5]
 8019d94:	fa1f fc84 	uxth.w	ip, r4
 8019d98:	122f      	asrs	r7, r5, #8
 8019d9a:	43e4      	mvns	r4, r4
 8019d9c:	b2e4      	uxtb	r4, r4
 8019d9e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019da2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019da6:	fb17 f704 	smulbb	r7, r7, r4
 8019daa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019dae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019db2:	00ed      	lsls	r5, r5, #3
 8019db4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019db8:	b2ed      	uxtb	r5, r5
 8019dba:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019dbe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019dc2:	fb15 f504 	smulbb	r5, r5, r4
 8019dc6:	fa5f f989 	uxtb.w	r9, r9
 8019dca:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019dce:	fb09 550c 	mla	r5, r9, ip, r5
 8019dd2:	fb1a fa04 	smulbb	sl, sl, r4
 8019dd6:	fa1f fe8e 	uxth.w	lr, lr
 8019dda:	b2ad      	uxth	r5, r5
 8019ddc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019de0:	fb07 a70c 	mla	r7, r7, ip, sl
 8019de4:	f10e 0401 	add.w	r4, lr, #1
 8019de8:	f105 0a01 	add.w	sl, r5, #1
 8019dec:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019df0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019df4:	b2bf      	uxth	r7, r7
 8019df6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019dfa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019dfe:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019e02:	f107 0a01 	add.w	sl, r7, #1
 8019e06:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019e0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e0e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e12:	9c02      	ldr	r4, [sp, #8]
 8019e14:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019e18:	f820 e004 	strh.w	lr, [r0, r4]
 8019e1c:	e7aa      	b.n	8019d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e1e:	f04f 0900 	mov.w	r9, #0
 8019e22:	eba3 0409 	sub.w	r4, r3, r9
 8019e26:	2c00      	cmp	r4, #0
 8019e28:	f77f af4a 	ble.w	8019cc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e2c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019e30:	1414      	asrs	r4, r2, #16
 8019e32:	140d      	asrs	r5, r1, #16
 8019e34:	fb06 5504 	mla	r5, r6, r4, r5
 8019e38:	9c01      	ldr	r4, [sp, #4]
 8019e3a:	5d64      	ldrb	r4, [r4, r5]
 8019e3c:	2cff      	cmp	r4, #255	; 0xff
 8019e3e:	d10b      	bne.n	8019e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019e40:	9c00      	ldr	r4, [sp, #0]
 8019e42:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019e46:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019e4a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019e4c:	4421      	add	r1, r4
 8019e4e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019e50:	f109 0901 	add.w	r9, r9, #1
 8019e54:	4422      	add	r2, r4
 8019e56:	e7e4      	b.n	8019e22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019e58:	2c00      	cmp	r4, #0
 8019e5a:	d0f6      	beq.n	8019e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019e5c:	9e00      	ldr	r6, [sp, #0]
 8019e5e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019e62:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019e66:	b2a7      	uxth	r7, r4
 8019e68:	122e      	asrs	r6, r5, #8
 8019e6a:	43e4      	mvns	r4, r4
 8019e6c:	b2e4      	uxtb	r4, r4
 8019e6e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019e72:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019e76:	fb16 f604 	smulbb	r6, r6, r4
 8019e7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019e7e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e82:	00ed      	lsls	r5, r5, #3
 8019e84:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019e88:	b2ed      	uxtb	r5, r5
 8019e8a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019e8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019e92:	fb15 f504 	smulbb	r5, r5, r4
 8019e96:	fa5f fe8e 	uxtb.w	lr, lr
 8019e9a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019e9e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019ea2:	fb1a fa04 	smulbb	sl, sl, r4
 8019ea6:	fa1f fc8c 	uxth.w	ip, ip
 8019eaa:	b2ad      	uxth	r5, r5
 8019eac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019eb0:	fb06 a607 	mla	r6, r6, r7, sl
 8019eb4:	f10c 0401 	add.w	r4, ip, #1
 8019eb8:	f105 0a01 	add.w	sl, r5, #1
 8019ebc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019ec0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019ec4:	b2b6      	uxth	r6, r6
 8019ec6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019eca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ece:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019ed2:	f106 0a01 	add.w	sl, r6, #1
 8019ed6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019eda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ede:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019ee2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019ee6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019eea:	e7ae      	b.n	8019e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019eec:	b005      	add	sp, #20
 8019eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ef2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef6:	b085      	sub	sp, #20
 8019ef8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019efa:	9203      	str	r2, [sp, #12]
 8019efc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019f00:	9201      	str	r2, [sp, #4]
 8019f02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f06:	9100      	str	r1, [sp, #0]
 8019f08:	6841      	ldr	r1, [r0, #4]
 8019f0a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019f0e:	fb01 2404 	mla	r4, r1, r4, r2
 8019f12:	6802      	ldr	r2, [r0, #0]
 8019f14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f18:	f8de 2000 	ldr.w	r2, [lr]
 8019f1c:	9202      	str	r2, [sp, #8]
 8019f1e:	9a01      	ldr	r2, [sp, #4]
 8019f20:	43d6      	mvns	r6, r2
 8019f22:	b2f6      	uxtb	r6, r6
 8019f24:	9a00      	ldr	r2, [sp, #0]
 8019f26:	2a00      	cmp	r2, #0
 8019f28:	dc03      	bgt.n	8019f32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019f2a:	9a03      	ldr	r2, [sp, #12]
 8019f2c:	2a00      	cmp	r2, #0
 8019f2e:	f340 8124 	ble.w	801a17a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019f32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f34:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019f38:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019f3c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019f40:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f42:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f46:	2b00      	cmp	r3, #0
 8019f48:	dd0e      	ble.n	8019f68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f4a:	1408      	asrs	r0, r1, #16
 8019f4c:	d405      	bmi.n	8019f5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019f4e:	4560      	cmp	r0, ip
 8019f50:	da03      	bge.n	8019f5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019f52:	1410      	asrs	r0, r2, #16
 8019f54:	d401      	bmi.n	8019f5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019f56:	42b8      	cmp	r0, r7
 8019f58:	db07      	blt.n	8019f6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019f5a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f5c:	4401      	add	r1, r0
 8019f5e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019f60:	3b01      	subs	r3, #1
 8019f62:	4402      	add	r2, r0
 8019f64:	3402      	adds	r4, #2
 8019f66:	e7ee      	b.n	8019f46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019f68:	d06e      	beq.n	801a048 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019f6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019f6c:	1e58      	subs	r0, r3, #1
 8019f6e:	fb05 1500 	mla	r5, r5, r0, r1
 8019f72:	142d      	asrs	r5, r5, #16
 8019f74:	d45c      	bmi.n	801a030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f76:	4565      	cmp	r5, ip
 8019f78:	da5a      	bge.n	801a030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f7c:	fb05 2000 	mla	r0, r5, r0, r2
 8019f80:	1400      	asrs	r0, r0, #16
 8019f82:	d455      	bmi.n	801a030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f84:	42b8      	cmp	r0, r7
 8019f86:	da53      	bge.n	801a030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f88:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019f8c:	4699      	mov	r9, r3
 8019f8e:	46a2      	mov	sl, r4
 8019f90:	f1b9 0f00 	cmp.w	r9, #0
 8019f94:	dd54      	ble.n	801a040 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f96:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019f9a:	140d      	asrs	r5, r1, #16
 8019f9c:	1410      	asrs	r0, r2, #16
 8019f9e:	fb07 5000 	mla	r0, r7, r0, r5
 8019fa2:	9d02      	ldr	r5, [sp, #8]
 8019fa4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019fa8:	f8ba 5000 	ldrh.w	r5, [sl]
 8019fac:	122f      	asrs	r7, r5, #8
 8019fae:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019fb2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019fb6:	fb17 f706 	smulbb	r7, r7, r6
 8019fba:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019fbe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019fc2:	00ed      	lsls	r5, r5, #3
 8019fc4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019fc8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019fcc:	10c7      	asrs	r7, r0, #3
 8019fce:	b2ed      	uxtb	r5, r5
 8019fd0:	00c0      	lsls	r0, r0, #3
 8019fd2:	fb18 f806 	smulbb	r8, r8, r6
 8019fd6:	fb15 f506 	smulbb	r5, r5, r6
 8019fda:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019fde:	b2c0      	uxtb	r0, r0
 8019fe0:	fa1f fc8c 	uxth.w	ip, ip
 8019fe4:	fb07 870b 	mla	r7, r7, fp, r8
 8019fe8:	fb00 500b 	mla	r0, r0, fp, r5
 8019fec:	b280      	uxth	r0, r0
 8019fee:	b2bf      	uxth	r7, r7
 8019ff0:	f10c 0501 	add.w	r5, ip, #1
 8019ff4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ff8:	f107 0801 	add.w	r8, r7, #1
 8019ffc:	1c45      	adds	r5, r0, #1
 8019ffe:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a002:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a006:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a008:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a00c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a010:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a014:	ea45 0c0c 	orr.w	ip, r5, ip
 801a018:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a01c:	4401      	add	r1, r0
 801a01e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a020:	ea4c 0c08 	orr.w	ip, ip, r8
 801a024:	f82a cb02 	strh.w	ip, [sl], #2
 801a028:	4402      	add	r2, r0
 801a02a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a02e:	e7af      	b.n	8019f90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a030:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a034:	f04f 0800 	mov.w	r8, #0
 801a038:	eb03 0008 	add.w	r0, r3, r8
 801a03c:	2800      	cmp	r0, #0
 801a03e:	dc41      	bgt.n	801a0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a044:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a048:	9b00      	ldr	r3, [sp, #0]
 801a04a:	2b00      	cmp	r3, #0
 801a04c:	f340 8095 	ble.w	801a17a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a050:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a054:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a058:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a05c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a05e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a062:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a066:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a06a:	eef0 6a62 	vmov.f32	s13, s5
 801a06e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a076:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a07a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a07e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a082:	eef0 6a43 	vmov.f32	s13, s6
 801a086:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a08a:	ee12 2a90 	vmov	r2, s5
 801a08e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a092:	fb92 f3f3 	sdiv	r3, r2, r3
 801a096:	ee13 2a10 	vmov	r2, s6
 801a09a:	9311      	str	r3, [sp, #68]	; 0x44
 801a09c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a09e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0a2:	9312      	str	r3, [sp, #72]	; 0x48
 801a0a4:	9b00      	ldr	r3, [sp, #0]
 801a0a6:	9a03      	ldr	r2, [sp, #12]
 801a0a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0ac:	3b01      	subs	r3, #1
 801a0ae:	9300      	str	r3, [sp, #0]
 801a0b0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a0b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0b6:	eeb0 3a67 	vmov.f32	s6, s15
 801a0ba:	bf08      	it	eq
 801a0bc:	4613      	moveq	r3, r2
 801a0be:	eef0 2a47 	vmov.f32	s5, s14
 801a0c2:	e72f      	b.n	8019f24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a0c4:	140f      	asrs	r7, r1, #16
 801a0c6:	d451      	bmi.n	801a16c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a0c8:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a0cc:	42bd      	cmp	r5, r7
 801a0ce:	dd4d      	ble.n	801a16c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a0d0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a0d4:	d44a      	bmi.n	801a16c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a0d6:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a0da:	4560      	cmp	r0, ip
 801a0dc:	dd46      	ble.n	801a16c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a0de:	b22d      	sxth	r5, r5
 801a0e0:	fb0c 7505 	mla	r5, ip, r5, r7
 801a0e4:	9802      	ldr	r0, [sp, #8]
 801a0e6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a0ea:	f06f 0501 	mvn.w	r5, #1
 801a0ee:	fb05 fb08 	mul.w	fp, r5, r8
 801a0f2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a0f6:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a0fa:	122f      	asrs	r7, r5, #8
 801a0fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a100:	fb17 f706 	smulbb	r7, r7, r6
 801a104:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a108:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a10c:	00ed      	lsls	r5, r5, #3
 801a10e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a112:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a116:	10c7      	asrs	r7, r0, #3
 801a118:	b2ed      	uxtb	r5, r5
 801a11a:	00c0      	lsls	r0, r0, #3
 801a11c:	fb19 f906 	smulbb	r9, r9, r6
 801a120:	fb15 f506 	smulbb	r5, r5, r6
 801a124:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a128:	b2c0      	uxtb	r0, r0
 801a12a:	fa1f fc8c 	uxth.w	ip, ip
 801a12e:	fb07 970a 	mla	r7, r7, sl, r9
 801a132:	fb00 500a 	mla	r0, r0, sl, r5
 801a136:	b2bf      	uxth	r7, r7
 801a138:	b280      	uxth	r0, r0
 801a13a:	f10c 0501 	add.w	r5, ip, #1
 801a13e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a142:	f107 0901 	add.w	r9, r7, #1
 801a146:	1c45      	adds	r5, r0, #1
 801a148:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a14c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a150:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a154:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a158:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a15c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a160:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a164:	ea4c 0c09 	orr.w	ip, ip, r9
 801a168:	f824 c00b 	strh.w	ip, [r4, fp]
 801a16c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a16e:	4401      	add	r1, r0
 801a170:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a172:	f108 38ff 	add.w	r8, r8, #4294967295
 801a176:	4402      	add	r2, r0
 801a178:	e75e      	b.n	801a038 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a17a:	b005      	add	sp, #20
 801a17c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a180 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a184:	b085      	sub	sp, #20
 801a186:	4693      	mov	fp, r2
 801a188:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a18a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a18c:	6870      	ldr	r0, [r6, #4]
 801a18e:	9101      	str	r1, [sp, #4]
 801a190:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a194:	fb00 2404 	mla	r4, r0, r4, r2
 801a198:	6832      	ldr	r2, [r6, #0]
 801a19a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a19e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a1a2:	682a      	ldr	r2, [r5, #0]
 801a1a4:	9202      	str	r2, [sp, #8]
 801a1a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a1aa:	9a01      	ldr	r2, [sp, #4]
 801a1ac:	2a00      	cmp	r2, #0
 801a1ae:	dc03      	bgt.n	801a1b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a1b0:	f1bb 0f00 	cmp.w	fp, #0
 801a1b4:	f340 809a 	ble.w	801a2ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a1b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a1ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a1be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a1c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a1c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a1c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a1cc:	2b00      	cmp	r3, #0
 801a1ce:	dd0c      	ble.n	801a1ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a1d0:	1406      	asrs	r6, r0, #16
 801a1d2:	d405      	bmi.n	801a1e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a1d4:	454e      	cmp	r6, r9
 801a1d6:	da03      	bge.n	801a1e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a1d8:	1416      	asrs	r6, r2, #16
 801a1da:	d401      	bmi.n	801a1e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a1dc:	4546      	cmp	r6, r8
 801a1de:	db05      	blt.n	801a1ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a1e0:	4470      	add	r0, lr
 801a1e2:	4462      	add	r2, ip
 801a1e4:	3b01      	subs	r3, #1
 801a1e6:	3402      	adds	r4, #2
 801a1e8:	e7f0      	b.n	801a1cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a1ea:	d00f      	beq.n	801a20c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a1ec:	1e5e      	subs	r6, r3, #1
 801a1ee:	fb0e 0706 	mla	r7, lr, r6, r0
 801a1f2:	143f      	asrs	r7, r7, #16
 801a1f4:	d541      	bpl.n	801a27a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a1f6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a1fa:	4698      	mov	r8, r3
 801a1fc:	9603      	str	r6, [sp, #12]
 801a1fe:	f1b8 0f00 	cmp.w	r8, #0
 801a202:	dc56      	bgt.n	801a2b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a204:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a208:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a20c:	9b01      	ldr	r3, [sp, #4]
 801a20e:	2b00      	cmp	r3, #0
 801a210:	dd6c      	ble.n	801a2ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a212:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a216:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a21a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a21e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a220:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a224:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a228:	eeb0 6a62 	vmov.f32	s12, s5
 801a22c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a230:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a234:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a238:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a23c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a240:	eeb0 6a43 	vmov.f32	s12, s6
 801a244:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a248:	ee12 2a90 	vmov	r2, s5
 801a24c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a250:	fb92 fef3 	sdiv	lr, r2, r3
 801a254:	ee13 2a10 	vmov	r2, s6
 801a258:	fb92 fcf3 	sdiv	ip, r2, r3
 801a25c:	9b01      	ldr	r3, [sp, #4]
 801a25e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a262:	3b01      	subs	r3, #1
 801a264:	9301      	str	r3, [sp, #4]
 801a266:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a26a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a26c:	eeb0 3a67 	vmov.f32	s6, s15
 801a270:	bf08      	it	eq
 801a272:	465b      	moveq	r3, fp
 801a274:	eef0 2a47 	vmov.f32	s5, s14
 801a278:	e797      	b.n	801a1aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a27a:	454f      	cmp	r7, r9
 801a27c:	dabb      	bge.n	801a1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a27e:	fb0c 2606 	mla	r6, ip, r6, r2
 801a282:	1436      	asrs	r6, r6, #16
 801a284:	d4b7      	bmi.n	801a1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a286:	4546      	cmp	r6, r8
 801a288:	dab5      	bge.n	801a1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a28a:	461e      	mov	r6, r3
 801a28c:	46a0      	mov	r8, r4
 801a28e:	2e00      	cmp	r6, #0
 801a290:	ddb8      	ble.n	801a204 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a292:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a296:	9902      	ldr	r1, [sp, #8]
 801a298:	1417      	asrs	r7, r2, #16
 801a29a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a29e:	fb0a 9707 	mla	r7, sl, r7, r9
 801a2a2:	4470      	add	r0, lr
 801a2a4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a2a8:	f828 7b02 	strh.w	r7, [r8], #2
 801a2ac:	4462      	add	r2, ip
 801a2ae:	3e01      	subs	r6, #1
 801a2b0:	e7ed      	b.n	801a28e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a2b2:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a2b6:	d414      	bmi.n	801a2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a2b8:	68ae      	ldr	r6, [r5, #8]
 801a2ba:	454e      	cmp	r6, r9
 801a2bc:	dd11      	ble.n	801a2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a2be:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a2c2:	d40e      	bmi.n	801a2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a2c4:	68ef      	ldr	r7, [r5, #12]
 801a2c6:	4557      	cmp	r7, sl
 801a2c8:	dd0b      	ble.n	801a2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a2ca:	b236      	sxth	r6, r6
 801a2cc:	fb0a 9606 	mla	r6, sl, r6, r9
 801a2d0:	9f02      	ldr	r7, [sp, #8]
 801a2d2:	f06f 0101 	mvn.w	r1, #1
 801a2d6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a2da:	fb01 f608 	mul.w	r6, r1, r8
 801a2de:	9903      	ldr	r1, [sp, #12]
 801a2e0:	538f      	strh	r7, [r1, r6]
 801a2e2:	4470      	add	r0, lr
 801a2e4:	4462      	add	r2, ip
 801a2e6:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2ea:	e788      	b.n	801a1fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a2ec:	b005      	add	sp, #20
 801a2ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2f6:	b087      	sub	sp, #28
 801a2f8:	468b      	mov	fp, r1
 801a2fa:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a2fc:	9203      	str	r2, [sp, #12]
 801a2fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a302:	9204      	str	r2, [sp, #16]
 801a304:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a308:	6841      	ldr	r1, [r0, #4]
 801a30a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a30e:	fb01 2505 	mla	r5, r1, r5, r2
 801a312:	6802      	ldr	r2, [r0, #0]
 801a314:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a318:	f8d9 2000 	ldr.w	r2, [r9]
 801a31c:	9201      	str	r2, [sp, #4]
 801a31e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a322:	f1bb 0f00 	cmp.w	fp, #0
 801a326:	dc03      	bgt.n	801a330 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a328:	9a03      	ldr	r2, [sp, #12]
 801a32a:	2a00      	cmp	r2, #0
 801a32c:	f340 8159 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a330:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a332:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a336:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a33a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a33e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a340:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a344:	2b00      	cmp	r3, #0
 801a346:	dd0e      	ble.n	801a366 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a348:	1402      	asrs	r2, r0, #16
 801a34a:	d405      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a34c:	42ba      	cmp	r2, r7
 801a34e:	da03      	bge.n	801a358 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a350:	140a      	asrs	r2, r1, #16
 801a352:	d401      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a354:	42b2      	cmp	r2, r6
 801a356:	db07      	blt.n	801a368 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a358:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a35a:	4410      	add	r0, r2
 801a35c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a35e:	3b01      	subs	r3, #1
 801a360:	4411      	add	r1, r2
 801a362:	3502      	adds	r5, #2
 801a364:	e7ee      	b.n	801a344 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a366:	d017      	beq.n	801a398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a368:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a36a:	1e5a      	subs	r2, r3, #1
 801a36c:	fb04 0402 	mla	r4, r4, r2, r0
 801a370:	1424      	asrs	r4, r4, #16
 801a372:	d409      	bmi.n	801a388 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a374:	42bc      	cmp	r4, r7
 801a376:	da07      	bge.n	801a388 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a378:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a37a:	fb04 1202 	mla	r2, r4, r2, r1
 801a37e:	1412      	asrs	r2, r2, #16
 801a380:	d402      	bmi.n	801a388 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a382:	42b2      	cmp	r2, r6
 801a384:	f2c0 80bf 	blt.w	801a506 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a388:	2700      	movs	r7, #0
 801a38a:	19da      	adds	r2, r3, r7
 801a38c:	2a00      	cmp	r2, #0
 801a38e:	dc3e      	bgt.n	801a40e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a390:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a394:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a398:	f1bb 0f00 	cmp.w	fp, #0
 801a39c:	f340 8121 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a3a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3ae:	f1bb 0b01 	subs.w	fp, fp, #1
 801a3b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3ba:	eeb0 6a62 	vmov.f32	s12, s5
 801a3be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3ca:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a3ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3d2:	eeb0 6a43 	vmov.f32	s12, s6
 801a3d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3da:	ee12 2a90 	vmov	r2, s5
 801a3de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3e6:	ee13 2a10 	vmov	r2, s6
 801a3ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3ee:	9313      	str	r3, [sp, #76]	; 0x4c
 801a3f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3f6:	9a03      	ldr	r2, [sp, #12]
 801a3f8:	9314      	str	r3, [sp, #80]	; 0x50
 801a3fa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a3fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a400:	eeb0 3a67 	vmov.f32	s6, s15
 801a404:	bf08      	it	eq
 801a406:	4613      	moveq	r3, r2
 801a408:	eef0 2a47 	vmov.f32	s5, s14
 801a40c:	e789      	b.n	801a322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a40e:	1406      	asrs	r6, r0, #16
 801a410:	d42d      	bmi.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a412:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a416:	42b4      	cmp	r4, r6
 801a418:	dd29      	ble.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a41a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a41e:	d426      	bmi.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a420:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a424:	4562      	cmp	r2, ip
 801a426:	dd22      	ble.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a428:	b224      	sxth	r4, r4
 801a42a:	9a01      	ldr	r2, [sp, #4]
 801a42c:	fb0c 6404 	mla	r4, ip, r4, r6
 801a430:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a434:	0e22      	lsrs	r2, r4, #24
 801a436:	d01a      	beq.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a438:	9e04      	ldr	r6, [sp, #16]
 801a43a:	4372      	muls	r2, r6
 801a43c:	1c56      	adds	r6, r2, #1
 801a43e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a442:	1212      	asrs	r2, r2, #8
 801a444:	0a26      	lsrs	r6, r4, #8
 801a446:	2aff      	cmp	r2, #255	; 0xff
 801a448:	9605      	str	r6, [sp, #20]
 801a44a:	d116      	bne.n	801a47a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a44c:	f06f 0201 	mvn.w	r2, #1
 801a450:	fb02 fc07 	mul.w	ip, r2, r7
 801a454:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a458:	0962      	lsrs	r2, r4, #5
 801a45a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a45e:	f026 0607 	bic.w	r6, r6, #7
 801a462:	4316      	orrs	r6, r2
 801a464:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a468:	4326      	orrs	r6, r4
 801a46a:	f825 600c 	strh.w	r6, [r5, ip]
 801a46e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a470:	4410      	add	r0, r2
 801a472:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a474:	3f01      	subs	r7, #1
 801a476:	4411      	add	r1, r2
 801a478:	e787      	b.n	801a38a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a47a:	f06f 0601 	mvn.w	r6, #1
 801a47e:	437e      	muls	r6, r7
 801a480:	fa1f fa82 	uxth.w	sl, r2
 801a484:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a488:	9602      	str	r6, [sp, #8]
 801a48a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a48e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a492:	43d2      	mvns	r2, r2
 801a494:	b2d2      	uxtb	r2, r2
 801a496:	fb1c fc0a 	smulbb	ip, ip, sl
 801a49a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a49e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a4a2:	b2e4      	uxtb	r4, r4
 801a4a4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a4a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a4ac:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a4b0:	fa5f f888 	uxtb.w	r8, r8
 801a4b4:	fb14 f40a 	smulbb	r4, r4, sl
 801a4b8:	fb08 4402 	mla	r4, r8, r2, r4
 801a4bc:	fa1f fe8e 	uxth.w	lr, lr
 801a4c0:	fb16 f60a 	smulbb	r6, r6, sl
 801a4c4:	b2a4      	uxth	r4, r4
 801a4c6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a4ca:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a4ce:	f10e 0201 	add.w	r2, lr, #1
 801a4d2:	1c66      	adds	r6, r4, #1
 801a4d4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a4d8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a4dc:	fa1f fc8c 	uxth.w	ip, ip
 801a4e0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a4e4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a4e8:	ea46 0e0e 	orr.w	lr, r6, lr
 801a4ec:	f10c 0601 	add.w	r6, ip, #1
 801a4f0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a4f4:	0976      	lsrs	r6, r6, #5
 801a4f6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a4fa:	9a02      	ldr	r2, [sp, #8]
 801a4fc:	ea4e 0e06 	orr.w	lr, lr, r6
 801a500:	f825 e002 	strh.w	lr, [r5, r2]
 801a504:	e7b3      	b.n	801a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a506:	f04f 0800 	mov.w	r8, #0
 801a50a:	eba3 0208 	sub.w	r2, r3, r8
 801a50e:	2a00      	cmp	r2, #0
 801a510:	f77f af3e 	ble.w	801a390 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a514:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a518:	1404      	asrs	r4, r0, #16
 801a51a:	140a      	asrs	r2, r1, #16
 801a51c:	fb06 4202 	mla	r2, r6, r2, r4
 801a520:	9c01      	ldr	r4, [sp, #4]
 801a522:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a526:	0e22      	lsrs	r2, r4, #24
 801a528:	d016      	beq.n	801a558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a52a:	9e04      	ldr	r6, [sp, #16]
 801a52c:	4372      	muls	r2, r6
 801a52e:	1c56      	adds	r6, r2, #1
 801a530:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a534:	1212      	asrs	r2, r2, #8
 801a536:	2aff      	cmp	r2, #255	; 0xff
 801a538:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a53c:	d113      	bne.n	801a566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a53e:	0962      	lsrs	r2, r4, #5
 801a540:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a544:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a548:	f026 0607 	bic.w	r6, r6, #7
 801a54c:	4316      	orrs	r6, r2
 801a54e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a552:	4326      	orrs	r6, r4
 801a554:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a558:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a55a:	4410      	add	r0, r2
 801a55c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a55e:	f108 0801 	add.w	r8, r8, #1
 801a562:	4411      	add	r1, r2
 801a564:	e7d1      	b.n	801a50a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a566:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a56a:	fa1f fa82 	uxth.w	sl, r2
 801a56e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a572:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a576:	43d2      	mvns	r2, r2
 801a578:	b2d2      	uxtb	r2, r2
 801a57a:	fb17 f70a 	smulbb	r7, r7, sl
 801a57e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a582:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a586:	b2e4      	uxtb	r4, r4
 801a588:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a58c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a590:	fa5f fe8e 	uxtb.w	lr, lr
 801a594:	fb14 f40a 	smulbb	r4, r4, sl
 801a598:	fb0e 4402 	mla	r4, lr, r2, r4
 801a59c:	b2f6      	uxtb	r6, r6
 801a59e:	fa1f fc8c 	uxth.w	ip, ip
 801a5a2:	fb16 f60a 	smulbb	r6, r6, sl
 801a5a6:	b2a4      	uxth	r4, r4
 801a5a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a5ac:	fb07 6702 	mla	r7, r7, r2, r6
 801a5b0:	f10c 0201 	add.w	r2, ip, #1
 801a5b4:	1c66      	adds	r6, r4, #1
 801a5b6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a5ba:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a5be:	b2bf      	uxth	r7, r7
 801a5c0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a5c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a5c8:	ea46 0c0c 	orr.w	ip, r6, ip
 801a5cc:	1c7e      	adds	r6, r7, #1
 801a5ce:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a5d2:	0976      	lsrs	r6, r6, #5
 801a5d4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a5d8:	ea4c 0c06 	orr.w	ip, ip, r6
 801a5dc:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a5e0:	e7ba      	b.n	801a558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a5e2:	b007      	add	sp, #28
 801a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a5e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5ec:	b085      	sub	sp, #20
 801a5ee:	468b      	mov	fp, r1
 801a5f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5f2:	9203      	str	r2, [sp, #12]
 801a5f4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a5f8:	6841      	ldr	r1, [r0, #4]
 801a5fa:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a5fe:	fb01 2404 	mla	r4, r1, r4, r2
 801a602:	6802      	ldr	r2, [r0, #0]
 801a604:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a608:	f8d8 2000 	ldr.w	r2, [r8]
 801a60c:	9201      	str	r2, [sp, #4]
 801a60e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a612:	f1bb 0f00 	cmp.w	fp, #0
 801a616:	dc03      	bgt.n	801a620 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a618:	9a03      	ldr	r2, [sp, #12]
 801a61a:	2a00      	cmp	r2, #0
 801a61c:	f340 814f 	ble.w	801a8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a620:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a622:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a626:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a62a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a62e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a630:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a634:	2b00      	cmp	r3, #0
 801a636:	dd0e      	ble.n	801a656 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a638:	1408      	asrs	r0, r1, #16
 801a63a:	d405      	bmi.n	801a648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a63c:	42b8      	cmp	r0, r7
 801a63e:	da03      	bge.n	801a648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a640:	1410      	asrs	r0, r2, #16
 801a642:	d401      	bmi.n	801a648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a644:	42b0      	cmp	r0, r6
 801a646:	db07      	blt.n	801a658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a648:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a64a:	4401      	add	r1, r0
 801a64c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a64e:	3b01      	subs	r3, #1
 801a650:	4402      	add	r2, r0
 801a652:	3402      	adds	r4, #2
 801a654:	e7ee      	b.n	801a634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a656:	d017      	beq.n	801a688 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a658:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a65a:	1e58      	subs	r0, r3, #1
 801a65c:	fb05 1500 	mla	r5, r5, r0, r1
 801a660:	142d      	asrs	r5, r5, #16
 801a662:	d409      	bmi.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a664:	42bd      	cmp	r5, r7
 801a666:	da07      	bge.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a668:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a66a:	fb05 2000 	mla	r0, r5, r0, r2
 801a66e:	1400      	asrs	r0, r0, #16
 801a670:	d402      	bmi.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a672:	42b0      	cmp	r0, r6
 801a674:	f2c0 80ba 	blt.w	801a7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a678:	2600      	movs	r6, #0
 801a67a:	1998      	adds	r0, r3, r6
 801a67c:	2800      	cmp	r0, #0
 801a67e:	dc3e      	bgt.n	801a6fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a680:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a684:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a688:	f1bb 0f00 	cmp.w	fp, #0
 801a68c:	f340 8117 	ble.w	801a8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a690:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a694:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a698:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a69c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a69e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a6a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6aa:	eeb0 6a62 	vmov.f32	s12, s5
 801a6ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a6be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6c2:	eeb0 6a43 	vmov.f32	s12, s6
 801a6c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6ca:	ee12 2a90 	vmov	r2, s5
 801a6ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6d6:	ee13 2a10 	vmov	r2, s6
 801a6da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6de:	9311      	str	r3, [sp, #68]	; 0x44
 801a6e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6e6:	9a03      	ldr	r2, [sp, #12]
 801a6e8:	9312      	str	r3, [sp, #72]	; 0x48
 801a6ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a6ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6f0:	eeb0 3a67 	vmov.f32	s6, s15
 801a6f4:	bf08      	it	eq
 801a6f6:	4613      	moveq	r3, r2
 801a6f8:	eef0 2a47 	vmov.f32	s5, s14
 801a6fc:	e789      	b.n	801a612 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a6fe:	140f      	asrs	r7, r1, #16
 801a700:	d424      	bmi.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a702:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a706:	42bd      	cmp	r5, r7
 801a708:	dd20      	ble.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a70a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a70e:	d41d      	bmi.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a710:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a714:	4560      	cmp	r0, ip
 801a716:	dd19      	ble.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a718:	b22d      	sxth	r5, r5
 801a71a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a71e:	9801      	ldr	r0, [sp, #4]
 801a720:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a724:	0e07      	lsrs	r7, r0, #24
 801a726:	2fff      	cmp	r7, #255	; 0xff
 801a728:	d116      	bne.n	801a758 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a72a:	f06f 0501 	mvn.w	r5, #1
 801a72e:	fb05 f706 	mul.w	r7, r5, r6
 801a732:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a736:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a73a:	0945      	lsrs	r5, r0, #5
 801a73c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a740:	ea4c 0505 	orr.w	r5, ip, r5
 801a744:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a748:	4305      	orrs	r5, r0
 801a74a:	53e5      	strh	r5, [r4, r7]
 801a74c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a74e:	4401      	add	r1, r0
 801a750:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a752:	3e01      	subs	r6, #1
 801a754:	4402      	add	r2, r0
 801a756:	e790      	b.n	801a67a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a758:	b2fd      	uxtb	r5, r7
 801a75a:	2f00      	cmp	r7, #0
 801a75c:	d0f6      	beq.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a75e:	f06f 0701 	mvn.w	r7, #1
 801a762:	4377      	muls	r7, r6
 801a764:	fa1f f985 	uxth.w	r9, r5
 801a768:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a76c:	9702      	str	r7, [sp, #8]
 801a76e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a772:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a776:	43ed      	mvns	r5, r5
 801a778:	b2ed      	uxtb	r5, r5
 801a77a:	fb17 f709 	smulbb	r7, r7, r9
 801a77e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a782:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a786:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a78a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a78e:	b2c0      	uxtb	r0, r0
 801a790:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a794:	fa5f fe8e 	uxtb.w	lr, lr
 801a798:	fb10 f009 	smulbb	r0, r0, r9
 801a79c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a7a0:	b280      	uxth	r0, r0
 801a7a2:	fa1f fc8c 	uxth.w	ip, ip
 801a7a6:	fb1a fa09 	smulbb	sl, sl, r9
 801a7aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a7ae:	fb07 a705 	mla	r7, r7, r5, sl
 801a7b2:	f100 0a01 	add.w	sl, r0, #1
 801a7b6:	f10c 0501 	add.w	r5, ip, #1
 801a7ba:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a7be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a7c2:	b2bf      	uxth	r7, r7
 801a7c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a7cc:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a7d0:	f107 0a01 	add.w	sl, r7, #1
 801a7d4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a7d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7e0:	9802      	ldr	r0, [sp, #8]
 801a7e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a7e6:	f824 c000 	strh.w	ip, [r4, r0]
 801a7ea:	e7af      	b.n	801a74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a7ec:	f04f 0e00 	mov.w	lr, #0
 801a7f0:	eba3 000e 	sub.w	r0, r3, lr
 801a7f4:	2800      	cmp	r0, #0
 801a7f6:	f77f af43 	ble.w	801a680 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a7fa:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a7fe:	140d      	asrs	r5, r1, #16
 801a800:	1410      	asrs	r0, r2, #16
 801a802:	fb06 5000 	mla	r0, r6, r0, r5
 801a806:	9d01      	ldr	r5, [sp, #4]
 801a808:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a80c:	0e2e      	lsrs	r6, r5, #24
 801a80e:	2eff      	cmp	r6, #255	; 0xff
 801a810:	d112      	bne.n	801a838 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a812:	482c      	ldr	r0, [pc, #176]	; (801a8c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a814:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a818:	0968      	lsrs	r0, r5, #5
 801a81a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a81e:	4330      	orrs	r0, r6
 801a820:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a824:	4328      	orrs	r0, r5
 801a826:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a82a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a82c:	4401      	add	r1, r0
 801a82e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a830:	f10e 0e01 	add.w	lr, lr, #1
 801a834:	4402      	add	r2, r0
 801a836:	e7db      	b.n	801a7f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a838:	b2f0      	uxtb	r0, r6
 801a83a:	2e00      	cmp	r6, #0
 801a83c:	d0f5      	beq.n	801a82a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a83e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a842:	fa1f f980 	uxth.w	r9, r0
 801a846:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a84a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a84e:	43c0      	mvns	r0, r0
 801a850:	b2c0      	uxtb	r0, r0
 801a852:	fb16 f609 	smulbb	r6, r6, r9
 801a856:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a85a:	fb07 6700 	mla	r7, r7, r0, r6
 801a85e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a862:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a866:	b2ed      	uxtb	r5, r5
 801a868:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a86c:	fa5f fc8c 	uxtb.w	ip, ip
 801a870:	fb15 f509 	smulbb	r5, r5, r9
 801a874:	fb0c 5500 	mla	r5, ip, r0, r5
 801a878:	b2bf      	uxth	r7, r7
 801a87a:	fb1a fa09 	smulbb	sl, sl, r9
 801a87e:	b2ad      	uxth	r5, r5
 801a880:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a884:	fb06 a600 	mla	r6, r6, r0, sl
 801a888:	1c78      	adds	r0, r7, #1
 801a88a:	f105 0a01 	add.w	sl, r5, #1
 801a88e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a892:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a896:	b2b6      	uxth	r6, r6
 801a898:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a89c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a8a0:	ea4a 0707 	orr.w	r7, sl, r7
 801a8a4:	f106 0a01 	add.w	sl, r6, #1
 801a8a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a8ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8b4:	ea47 070a 	orr.w	r7, r7, sl
 801a8b8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a8bc:	e7b5      	b.n	801a82a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a8be:	b005      	add	sp, #20
 801a8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8c4:	fffff800 	.word	0xfffff800

0801a8c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a8c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8cc:	b087      	sub	sp, #28
 801a8ce:	468b      	mov	fp, r1
 801a8d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a8d2:	9203      	str	r2, [sp, #12]
 801a8d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a8d8:	9204      	str	r2, [sp, #16]
 801a8da:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a8de:	6841      	ldr	r1, [r0, #4]
 801a8e0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a8e4:	fb01 2404 	mla	r4, r1, r4, r2
 801a8e8:	6802      	ldr	r2, [r0, #0]
 801a8ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a8ee:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a8f2:	3201      	adds	r2, #1
 801a8f4:	f022 0201 	bic.w	r2, r2, #1
 801a8f8:	9200      	str	r2, [sp, #0]
 801a8fa:	f8d9 2000 	ldr.w	r2, [r9]
 801a8fe:	9201      	str	r2, [sp, #4]
 801a900:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a904:	f1bb 0f00 	cmp.w	fp, #0
 801a908:	dc03      	bgt.n	801a912 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a90a:	9a03      	ldr	r2, [sp, #12]
 801a90c:	2a00      	cmp	r2, #0
 801a90e:	f340 8169 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a912:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a914:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a918:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a91c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a920:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a922:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a926:	2b00      	cmp	r3, #0
 801a928:	dd0e      	ble.n	801a948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a92a:	1402      	asrs	r2, r0, #16
 801a92c:	d405      	bmi.n	801a93a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a92e:	42ba      	cmp	r2, r7
 801a930:	da03      	bge.n	801a93a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a932:	140a      	asrs	r2, r1, #16
 801a934:	d401      	bmi.n	801a93a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a936:	42b2      	cmp	r2, r6
 801a938:	db07      	blt.n	801a94a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a93a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a93c:	4410      	add	r0, r2
 801a93e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a940:	3b01      	subs	r3, #1
 801a942:	4411      	add	r1, r2
 801a944:	3402      	adds	r4, #2
 801a946:	e7ee      	b.n	801a926 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a948:	d017      	beq.n	801a97a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a94a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a94c:	1e5a      	subs	r2, r3, #1
 801a94e:	fb05 0502 	mla	r5, r5, r2, r0
 801a952:	142d      	asrs	r5, r5, #16
 801a954:	d409      	bmi.n	801a96a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a956:	42bd      	cmp	r5, r7
 801a958:	da07      	bge.n	801a96a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a95a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a95c:	fb05 1202 	mla	r2, r5, r2, r1
 801a960:	1412      	asrs	r2, r2, #16
 801a962:	d402      	bmi.n	801a96a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a964:	42b2      	cmp	r2, r6
 801a966:	f2c0 80c7 	blt.w	801aaf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a96a:	2700      	movs	r7, #0
 801a96c:	19da      	adds	r2, r3, r7
 801a96e:	2a00      	cmp	r2, #0
 801a970:	dc3e      	bgt.n	801a9f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a972:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a976:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a97a:	f1bb 0f00 	cmp.w	fp, #0
 801a97e:	f340 8131 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a982:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a986:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a98a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a98e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a990:	f1bb 0b01 	subs.w	fp, fp, #1
 801a994:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a998:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a99c:	eeb0 6a62 	vmov.f32	s12, s5
 801a9a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9ac:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a9b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9b4:	eeb0 6a43 	vmov.f32	s12, s6
 801a9b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9bc:	ee12 2a90 	vmov	r2, s5
 801a9c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9c8:	ee13 2a10 	vmov	r2, s6
 801a9cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9d0:	9313      	str	r3, [sp, #76]	; 0x4c
 801a9d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9d8:	9a03      	ldr	r2, [sp, #12]
 801a9da:	9314      	str	r3, [sp, #80]	; 0x50
 801a9dc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a9e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9e2:	eeb0 3a67 	vmov.f32	s6, s15
 801a9e6:	bf08      	it	eq
 801a9e8:	4613      	moveq	r3, r2
 801a9ea:	eef0 2a47 	vmov.f32	s5, s14
 801a9ee:	e789      	b.n	801a904 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a9f0:	1405      	asrs	r5, r0, #16
 801a9f2:	d435      	bmi.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9f4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a9f8:	42aa      	cmp	r2, r5
 801a9fa:	dd31      	ble.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9fc:	140e      	asrs	r6, r1, #16
 801a9fe:	d42f      	bmi.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa00:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801aa04:	42b2      	cmp	r2, r6
 801aa06:	dd2b      	ble.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa08:	9a00      	ldr	r2, [sp, #0]
 801aa0a:	fb06 5502 	mla	r5, r6, r2, r5
 801aa0e:	086a      	lsrs	r2, r5, #1
 801aa10:	9e01      	ldr	r6, [sp, #4]
 801aa12:	5cb2      	ldrb	r2, [r6, r2]
 801aa14:	07ee      	lsls	r6, r5, #31
 801aa16:	bf54      	ite	pl
 801aa18:	f002 020f 	andpl.w	r2, r2, #15
 801aa1c:	1112      	asrmi	r2, r2, #4
 801aa1e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa22:	b2d2      	uxtb	r2, r2
 801aa24:	b1e2      	cbz	r2, 801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa26:	9d04      	ldr	r5, [sp, #16]
 801aa28:	436a      	muls	r2, r5
 801aa2a:	1c55      	adds	r5, r2, #1
 801aa2c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aa30:	4d6e      	ldr	r5, [pc, #440]	; (801abec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aa32:	682d      	ldr	r5, [r5, #0]
 801aa34:	1212      	asrs	r2, r2, #8
 801aa36:	0a2e      	lsrs	r6, r5, #8
 801aa38:	2aff      	cmp	r2, #255	; 0xff
 801aa3a:	9605      	str	r6, [sp, #20]
 801aa3c:	d116      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aa3e:	f06f 0201 	mvn.w	r2, #1
 801aa42:	fb02 fc07 	mul.w	ip, r2, r7
 801aa46:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aa4a:	096a      	lsrs	r2, r5, #5
 801aa4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa50:	f026 0607 	bic.w	r6, r6, #7
 801aa54:	4316      	orrs	r6, r2
 801aa56:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aa5a:	432e      	orrs	r6, r5
 801aa5c:	f824 600c 	strh.w	r6, [r4, ip]
 801aa60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa62:	4410      	add	r0, r2
 801aa64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa66:	3f01      	subs	r7, #1
 801aa68:	4411      	add	r1, r2
 801aa6a:	e77f      	b.n	801a96c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801aa6c:	f06f 0601 	mvn.w	r6, #1
 801aa70:	437e      	muls	r6, r7
 801aa72:	fa1f fa82 	uxth.w	sl, r2
 801aa76:	f834 8006 	ldrh.w	r8, [r4, r6]
 801aa7a:	9602      	str	r6, [sp, #8]
 801aa7c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aa80:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801aa84:	43d2      	mvns	r2, r2
 801aa86:	b2d2      	uxtb	r2, r2
 801aa88:	fb1c fc0a 	smulbb	ip, ip, sl
 801aa8c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801aa90:	fb0e ce02 	mla	lr, lr, r2, ip
 801aa94:	b2ed      	uxtb	r5, r5
 801aa96:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801aa9a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aa9e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801aaa2:	fa5f f888 	uxtb.w	r8, r8
 801aaa6:	fb15 f50a 	smulbb	r5, r5, sl
 801aaaa:	fb08 5502 	mla	r5, r8, r2, r5
 801aaae:	fa1f fe8e 	uxth.w	lr, lr
 801aab2:	fb16 f60a 	smulbb	r6, r6, sl
 801aab6:	b2ad      	uxth	r5, r5
 801aab8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801aabc:	fb0c 6c02 	mla	ip, ip, r2, r6
 801aac0:	f10e 0201 	add.w	r2, lr, #1
 801aac4:	1c6e      	adds	r6, r5, #1
 801aac6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801aaca:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801aace:	fa1f fc8c 	uxth.w	ip, ip
 801aad2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aad6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801aada:	ea46 0e0e 	orr.w	lr, r6, lr
 801aade:	f10c 0601 	add.w	r6, ip, #1
 801aae2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801aae6:	0976      	lsrs	r6, r6, #5
 801aae8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aaec:	9a02      	ldr	r2, [sp, #8]
 801aaee:	ea4e 0e06 	orr.w	lr, lr, r6
 801aaf2:	f824 e002 	strh.w	lr, [r4, r2]
 801aaf6:	e7b3      	b.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aaf8:	f04f 0800 	mov.w	r8, #0
 801aafc:	eba3 0208 	sub.w	r2, r3, r8
 801ab00:	2a00      	cmp	r2, #0
 801ab02:	f77f af36 	ble.w	801a972 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab06:	9e00      	ldr	r6, [sp, #0]
 801ab08:	1402      	asrs	r2, r0, #16
 801ab0a:	140d      	asrs	r5, r1, #16
 801ab0c:	fb06 2505 	mla	r5, r6, r5, r2
 801ab10:	086a      	lsrs	r2, r5, #1
 801ab12:	9e01      	ldr	r6, [sp, #4]
 801ab14:	5cb2      	ldrb	r2, [r6, r2]
 801ab16:	07ed      	lsls	r5, r5, #31
 801ab18:	bf54      	ite	pl
 801ab1a:	f002 020f 	andpl.w	r2, r2, #15
 801ab1e:	1112      	asrmi	r2, r2, #4
 801ab20:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab24:	b2d2      	uxtb	r2, r2
 801ab26:	b1c2      	cbz	r2, 801ab5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ab28:	9d04      	ldr	r5, [sp, #16]
 801ab2a:	436a      	muls	r2, r5
 801ab2c:	1c55      	adds	r5, r2, #1
 801ab2e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ab32:	4d2e      	ldr	r5, [pc, #184]	; (801abec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ab34:	1212      	asrs	r2, r2, #8
 801ab36:	682e      	ldr	r6, [r5, #0]
 801ab38:	2aff      	cmp	r2, #255	; 0xff
 801ab3a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ab3e:	d113      	bne.n	801ab68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ab40:	0972      	lsrs	r2, r6, #5
 801ab42:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ab46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab4a:	f025 0507 	bic.w	r5, r5, #7
 801ab4e:	4315      	orrs	r5, r2
 801ab50:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ab54:	4335      	orrs	r5, r6
 801ab56:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ab5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab5c:	4410      	add	r0, r2
 801ab5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab60:	f108 0801 	add.w	r8, r8, #1
 801ab64:	4411      	add	r1, r2
 801ab66:	e7c9      	b.n	801aafc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ab68:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ab6c:	fa1f fa82 	uxth.w	sl, r2
 801ab70:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ab74:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ab78:	43d2      	mvns	r2, r2
 801ab7a:	b2d2      	uxtb	r2, r2
 801ab7c:	fb17 f70a 	smulbb	r7, r7, sl
 801ab80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab84:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ab88:	b2f6      	uxtb	r6, r6
 801ab8a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ab8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab92:	fa5f fe8e 	uxtb.w	lr, lr
 801ab96:	fb16 f60a 	smulbb	r6, r6, sl
 801ab9a:	fb0e 6602 	mla	r6, lr, r2, r6
 801ab9e:	b2ed      	uxtb	r5, r5
 801aba0:	fa1f fc8c 	uxth.w	ip, ip
 801aba4:	fb15 f50a 	smulbb	r5, r5, sl
 801aba8:	b2b6      	uxth	r6, r6
 801abaa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801abae:	fb07 5702 	mla	r7, r7, r2, r5
 801abb2:	f10c 0201 	add.w	r2, ip, #1
 801abb6:	1c75      	adds	r5, r6, #1
 801abb8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801abbc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801abc0:	b2bf      	uxth	r7, r7
 801abc2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801abc6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801abca:	ea45 0c0c 	orr.w	ip, r5, ip
 801abce:	1c7d      	adds	r5, r7, #1
 801abd0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801abd4:	096d      	lsrs	r5, r5, #5
 801abd6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801abda:	ea4c 0c05 	orr.w	ip, ip, r5
 801abde:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801abe2:	e7ba      	b.n	801ab5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801abe4:	b007      	add	sp, #28
 801abe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abea:	bf00      	nop
 801abec:	20002c94 	.word	0x20002c94

0801abf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abf4:	b087      	sub	sp, #28
 801abf6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801af04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801abfa:	9815      	ldr	r0, [sp, #84]	; 0x54
 801abfc:	9205      	str	r2, [sp, #20]
 801abfe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ac02:	9101      	str	r1, [sp, #4]
 801ac04:	6841      	ldr	r1, [r0, #4]
 801ac06:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ac0a:	fb01 2404 	mla	r4, r1, r4, r2
 801ac0e:	6802      	ldr	r2, [r0, #0]
 801ac10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac14:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ac18:	3201      	adds	r2, #1
 801ac1a:	f022 0201 	bic.w	r2, r2, #1
 801ac1e:	9202      	str	r2, [sp, #8]
 801ac20:	f8db 2000 	ldr.w	r2, [fp]
 801ac24:	9203      	str	r2, [sp, #12]
 801ac26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac2a:	9a01      	ldr	r2, [sp, #4]
 801ac2c:	2a00      	cmp	r2, #0
 801ac2e:	dc03      	bgt.n	801ac38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ac30:	9a05      	ldr	r2, [sp, #20]
 801ac32:	2a00      	cmp	r2, #0
 801ac34:	f340 8162 	ble.w	801aefc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ac38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ac3a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ac3e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ac42:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ac46:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ac48:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac4c:	2b00      	cmp	r3, #0
 801ac4e:	dd0e      	ble.n	801ac6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac50:	1402      	asrs	r2, r0, #16
 801ac52:	d405      	bmi.n	801ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ac54:	42ba      	cmp	r2, r7
 801ac56:	da03      	bge.n	801ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ac58:	140a      	asrs	r2, r1, #16
 801ac5a:	d401      	bmi.n	801ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ac5c:	42b2      	cmp	r2, r6
 801ac5e:	db07      	blt.n	801ac70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ac60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac62:	4410      	add	r0, r2
 801ac64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac66:	3b01      	subs	r3, #1
 801ac68:	4411      	add	r1, r2
 801ac6a:	3402      	adds	r4, #2
 801ac6c:	e7ee      	b.n	801ac4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ac6e:	d017      	beq.n	801aca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ac70:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac72:	1e5a      	subs	r2, r3, #1
 801ac74:	fb05 0502 	mla	r5, r5, r2, r0
 801ac78:	142d      	asrs	r5, r5, #16
 801ac7a:	d409      	bmi.n	801ac90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ac7c:	42bd      	cmp	r5, r7
 801ac7e:	da07      	bge.n	801ac90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ac80:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac82:	fb05 1202 	mla	r2, r5, r2, r1
 801ac86:	1412      	asrs	r2, r2, #16
 801ac88:	d402      	bmi.n	801ac90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ac8a:	42b2      	cmp	r2, r6
 801ac8c:	f2c0 80c3 	blt.w	801ae16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ac90:	2500      	movs	r5, #0
 801ac92:	195a      	adds	r2, r3, r5
 801ac94:	2a00      	cmp	r2, #0
 801ac96:	dc3f      	bgt.n	801ad18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ac98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aca0:	9b01      	ldr	r3, [sp, #4]
 801aca2:	2b00      	cmp	r3, #0
 801aca4:	f340 812a 	ble.w	801aefc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aca8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801acb0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801acb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801acb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801acbe:	eeb0 6a62 	vmov.f32	s12, s5
 801acc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acce:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801acd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acd6:	eeb0 6a43 	vmov.f32	s12, s6
 801acda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acde:	ee12 2a90 	vmov	r2, s5
 801ace2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ace6:	fb92 f3f3 	sdiv	r3, r2, r3
 801acea:	ee13 2a10 	vmov	r2, s6
 801acee:	9313      	str	r3, [sp, #76]	; 0x4c
 801acf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801acf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801acf6:	9314      	str	r3, [sp, #80]	; 0x50
 801acf8:	9b01      	ldr	r3, [sp, #4]
 801acfa:	9a05      	ldr	r2, [sp, #20]
 801acfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad00:	3b01      	subs	r3, #1
 801ad02:	9301      	str	r3, [sp, #4]
 801ad04:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ad08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad0a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad0e:	bf08      	it	eq
 801ad10:	4613      	moveq	r3, r2
 801ad12:	eef0 2a47 	vmov.f32	s5, s14
 801ad16:	e788      	b.n	801ac2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ad18:	1406      	asrs	r6, r0, #16
 801ad1a:	d42c      	bmi.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad1c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ad20:	42b2      	cmp	r2, r6
 801ad22:	dd28      	ble.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad24:	140f      	asrs	r7, r1, #16
 801ad26:	d426      	bmi.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad28:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ad2c:	42ba      	cmp	r2, r7
 801ad2e:	dd22      	ble.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad30:	9a02      	ldr	r2, [sp, #8]
 801ad32:	fb07 6602 	mla	r6, r7, r2, r6
 801ad36:	0872      	lsrs	r2, r6, #1
 801ad38:	9f03      	ldr	r7, [sp, #12]
 801ad3a:	5cba      	ldrb	r2, [r7, r2]
 801ad3c:	07f6      	lsls	r6, r6, #31
 801ad3e:	bf54      	ite	pl
 801ad40:	f002 020f 	andpl.w	r2, r2, #15
 801ad44:	1112      	asrmi	r2, r2, #4
 801ad46:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ad4a:	b2d2      	uxtb	r2, r2
 801ad4c:	2aff      	cmp	r2, #255	; 0xff
 801ad4e:	d118      	bne.n	801ad82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ad50:	f8d8 2000 	ldr.w	r2, [r8]
 801ad54:	f06f 0601 	mvn.w	r6, #1
 801ad58:	fb06 f705 	mul.w	r7, r6, r5
 801ad5c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ad60:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ad64:	0956      	lsrs	r6, r2, #5
 801ad66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ad6a:	ea4c 0606 	orr.w	r6, ip, r6
 801ad6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ad72:	4316      	orrs	r6, r2
 801ad74:	53e6      	strh	r6, [r4, r7]
 801ad76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ad78:	4410      	add	r0, r2
 801ad7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ad7c:	3d01      	subs	r5, #1
 801ad7e:	4411      	add	r1, r2
 801ad80:	e787      	b.n	801ac92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ad82:	2a00      	cmp	r2, #0
 801ad84:	d0f7      	beq.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad86:	f06f 0601 	mvn.w	r6, #1
 801ad8a:	436e      	muls	r6, r5
 801ad8c:	f8d8 c000 	ldr.w	ip, [r8]
 801ad90:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ad94:	9604      	str	r6, [sp, #16]
 801ad96:	fa1f f982 	uxth.w	r9, r2
 801ad9a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ad9e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ada2:	43d2      	mvns	r2, r2
 801ada4:	b2d2      	uxtb	r2, r2
 801ada6:	fb16 f609 	smulbb	r6, r6, r9
 801adaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801adae:	fb07 6702 	mla	r7, r7, r2, r6
 801adb2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801adb6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801adba:	fa5f fc8c 	uxtb.w	ip, ip
 801adbe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801adc2:	fa5f fe8e 	uxtb.w	lr, lr
 801adc6:	fb1c fc09 	smulbb	ip, ip, r9
 801adca:	fb0e cc02 	mla	ip, lr, r2, ip
 801adce:	b2bf      	uxth	r7, r7
 801add0:	fb1a fa09 	smulbb	sl, sl, r9
 801add4:	fa1f fc8c 	uxth.w	ip, ip
 801add8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801addc:	fb06 a602 	mla	r6, r6, r2, sl
 801ade0:	1c7a      	adds	r2, r7, #1
 801ade2:	f10c 0a01 	add.w	sl, ip, #1
 801ade6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801adea:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801adee:	b2b6      	uxth	r6, r6
 801adf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801adf4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801adf8:	ea4a 0707 	orr.w	r7, sl, r7
 801adfc:	f106 0a01 	add.w	sl, r6, #1
 801ae00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae0c:	9a04      	ldr	r2, [sp, #16]
 801ae0e:	ea47 070a 	orr.w	r7, r7, sl
 801ae12:	52a7      	strh	r7, [r4, r2]
 801ae14:	e7af      	b.n	801ad76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae16:	f04f 0e00 	mov.w	lr, #0
 801ae1a:	eba3 020e 	sub.w	r2, r3, lr
 801ae1e:	2a00      	cmp	r2, #0
 801ae20:	f77f af3a 	ble.w	801ac98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ae24:	9e02      	ldr	r6, [sp, #8]
 801ae26:	1402      	asrs	r2, r0, #16
 801ae28:	140d      	asrs	r5, r1, #16
 801ae2a:	fb06 2505 	mla	r5, r6, r5, r2
 801ae2e:	086a      	lsrs	r2, r5, #1
 801ae30:	9e03      	ldr	r6, [sp, #12]
 801ae32:	5cb2      	ldrb	r2, [r6, r2]
 801ae34:	07ed      	lsls	r5, r5, #31
 801ae36:	bf54      	ite	pl
 801ae38:	f002 020f 	andpl.w	r2, r2, #15
 801ae3c:	1112      	asrmi	r2, r2, #4
 801ae3e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae42:	b2d2      	uxtb	r2, r2
 801ae44:	2aff      	cmp	r2, #255	; 0xff
 801ae46:	d115      	bne.n	801ae74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ae48:	f8d8 5000 	ldr.w	r5, [r8]
 801ae4c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ae50:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ae54:	096a      	lsrs	r2, r5, #5
 801ae56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae5a:	4332      	orrs	r2, r6
 801ae5c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ae60:	432a      	orrs	r2, r5
 801ae62:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ae66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ae68:	4410      	add	r0, r2
 801ae6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae6c:	f10e 0e01 	add.w	lr, lr, #1
 801ae70:	4411      	add	r1, r2
 801ae72:	e7d2      	b.n	801ae1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ae74:	2a00      	cmp	r2, #0
 801ae76:	d0f6      	beq.n	801ae66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ae78:	f8d8 7000 	ldr.w	r7, [r8]
 801ae7c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ae80:	fa1f f982 	uxth.w	r9, r2
 801ae84:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ae88:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ae8c:	43d2      	mvns	r2, r2
 801ae8e:	b2d2      	uxtb	r2, r2
 801ae90:	fb15 f509 	smulbb	r5, r5, r9
 801ae94:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ae98:	fb06 5602 	mla	r6, r6, r2, r5
 801ae9c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801aea0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801aea4:	b2ff      	uxtb	r7, r7
 801aea6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aeaa:	fa5f fc8c 	uxtb.w	ip, ip
 801aeae:	fb17 f709 	smulbb	r7, r7, r9
 801aeb2:	fb0c 7702 	mla	r7, ip, r2, r7
 801aeb6:	b2b6      	uxth	r6, r6
 801aeb8:	fb1a fa09 	smulbb	sl, sl, r9
 801aebc:	b2bf      	uxth	r7, r7
 801aebe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aec2:	fb05 a502 	mla	r5, r5, r2, sl
 801aec6:	1c72      	adds	r2, r6, #1
 801aec8:	f107 0a01 	add.w	sl, r7, #1
 801aecc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801aed0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801aed4:	b2ad      	uxth	r5, r5
 801aed6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aeda:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801aede:	ea4a 0606 	orr.w	r6, sl, r6
 801aee2:	f105 0a01 	add.w	sl, r5, #1
 801aee6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aeea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aeee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aef2:	ea46 060a 	orr.w	r6, r6, sl
 801aef6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801aefa:	e7b4      	b.n	801ae66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801aefc:	b007      	add	sp, #28
 801aefe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af02:	bf00      	nop
 801af04:	20002c94 	.word	0x20002c94

0801af08 <_ZN8touchgfx8LCD16bppD1Ev>:
 801af08:	4770      	bx	lr

0801af0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801af0a:	4770      	bx	lr

0801af0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801af0c:	4770      	bx	lr

0801af0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801af0e:	4770      	bx	lr

0801af10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801af10:	4770      	bx	lr

0801af12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af12:	4770      	bx	lr

0801af14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af14:	4770      	bx	lr

0801af16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af16:	4770      	bx	lr

0801af18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af18:	4770      	bx	lr

0801af1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801af1a:	4770      	bx	lr

0801af1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801af1c:	4770      	bx	lr

0801af1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af1e:	4770      	bx	lr

0801af20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af20:	4770      	bx	lr

0801af22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801af22:	4770      	bx	lr

0801af24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801af24:	4770      	bx	lr

0801af26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af26:	4770      	bx	lr

0801af28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af28:	4770      	bx	lr

0801af2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af2a:	4770      	bx	lr

0801af2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af2c:	4770      	bx	lr

0801af2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af2e:	4770      	bx	lr

0801af30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af30:	4770      	bx	lr

0801af32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801af32:	4770      	bx	lr

0801af34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801af34:	4770      	bx	lr

0801af36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801af36:	4770      	bx	lr

0801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801af38:	4770      	bx	lr

0801af3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801af3a:	4770      	bx	lr

0801af3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801af3c:	4770      	bx	lr

0801af3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801af3e:	4770      	bx	lr

0801af40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801af40:	4770      	bx	lr

0801af42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801af42:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801af46:	b088      	sub	sp, #32
 801af48:	ac08      	add	r4, sp, #32
 801af4a:	4606      	mov	r6, r0
 801af4c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801af50:	4620      	mov	r0, r4
 801af52:	4688      	mov	r8, r1
 801af54:	4691      	mov	r9, r2
 801af56:	f7fd fc65 	bl	8018824 <_ZNK8touchgfx6Bitmap7getDataEv>
 801af5a:	6833      	ldr	r3, [r6, #0]
 801af5c:	4605      	mov	r5, r0
 801af5e:	4620      	mov	r0, r4
 801af60:	699f      	ldr	r7, [r3, #24]
 801af62:	f7fd fb73 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801af66:	4682      	mov	sl, r0
 801af68:	4620      	mov	r0, r4
 801af6a:	f7fd fba3 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801af6e:	9500      	str	r5, [sp, #0]
 801af70:	e9cd a001 	strd	sl, r0, [sp, #4]
 801af74:	464b      	mov	r3, r9
 801af76:	a806      	add	r0, sp, #24
 801af78:	4642      	mov	r2, r8
 801af7a:	4631      	mov	r1, r6
 801af7c:	47b8      	blx	r7
 801af7e:	4628      	mov	r0, r5
 801af80:	b008      	add	sp, #32
 801af82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801af88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801af88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801af8c:	2300      	movs	r3, #0
 801af8e:	9300      	str	r3, [sp, #0]
 801af90:	4b3d      	ldr	r3, [pc, #244]	; (801b088 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801af92:	781b      	ldrb	r3, [r3, #0]
 801af94:	2b00      	cmp	r3, #0
 801af96:	d137      	bne.n	801b008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801af98:	4a3c      	ldr	r2, [pc, #240]	; (801b08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801af9a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801af9e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801afa2:	2b00      	cmp	r3, #0
 801afa4:	d132      	bne.n	801b00c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801afa6:	4b3a      	ldr	r3, [pc, #232]	; (801b090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801afa8:	f9b3 3000 	ldrsh.w	r3, [r3]
 801afac:	6808      	ldr	r0, [r1, #0]
 801afae:	6849      	ldr	r1, [r1, #4]
 801afb0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801afb4:	ac02      	add	r4, sp, #8
 801afb6:	ab02      	add	r3, sp, #8
 801afb8:	c303      	stmia	r3!, {r0, r1}
 801afba:	4669      	mov	r1, sp
 801afbc:	4620      	mov	r0, r4
 801afbe:	f7f9 ff4b 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801afc2:	4668      	mov	r0, sp
 801afc4:	f7f9 ff04 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801afc8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801afcc:	f8bd 2000 	ldrh.w	r2, [sp]
 801afd0:	4d30      	ldr	r5, [pc, #192]	; (801b094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801afd2:	4413      	add	r3, r2
 801afd4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801afd8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801afdc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801afe0:	6828      	ldr	r0, [r5, #0]
 801afe2:	4413      	add	r3, r2
 801afe4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801afe8:	6803      	ldr	r3, [r0, #0]
 801afea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801afec:	4798      	blx	r3
 801afee:	f010 0f01 	tst.w	r0, #1
 801aff2:	462f      	mov	r7, r5
 801aff4:	d00c      	beq.n	801b010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801aff6:	6828      	ldr	r0, [r5, #0]
 801aff8:	6803      	ldr	r3, [r0, #0]
 801affa:	e894 0006 	ldmia.w	r4, {r1, r2}
 801affe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b000:	4798      	blx	r3
 801b002:	b004      	add	sp, #16
 801b004:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b008:	4a21      	ldr	r2, [pc, #132]	; (801b090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b00a:	e7c6      	b.n	801af9a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b00c:	4b1f      	ldr	r3, [pc, #124]	; (801b08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b00e:	e7cb      	b.n	801afa8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b010:	6838      	ldr	r0, [r7, #0]
 801b012:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b016:	6803      	ldr	r3, [r0, #0]
 801b018:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b01c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b01e:	4798      	blx	r3
 801b020:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b024:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b028:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b02c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b030:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b034:	6838      	ldr	r0, [r7, #0]
 801b036:	6803      	ldr	r3, [r0, #0]
 801b038:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b03a:	4798      	blx	r3
 801b03c:	4a13      	ldr	r2, [pc, #76]	; (801b08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b03e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b042:	8813      	ldrh	r3, [r2, #0]
 801b044:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b048:	fb03 1404 	mla	r4, r3, r4, r1
 801b04c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b050:	435d      	muls	r5, r3
 801b052:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b056:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b05a:	4691      	mov	r9, r2
 801b05c:	6838      	ldr	r0, [r7, #0]
 801b05e:	42ac      	cmp	r4, r5
 801b060:	6803      	ldr	r3, [r0, #0]
 801b062:	d20e      	bcs.n	801b082 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b064:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b068:	4632      	mov	r2, r6
 801b06a:	4643      	mov	r3, r8
 801b06c:	4621      	mov	r1, r4
 801b06e:	47d0      	blx	sl
 801b070:	f8b9 3000 	ldrh.w	r3, [r9]
 801b074:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b078:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b07c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b080:	e7ec      	b.n	801b05c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b084:	4798      	blx	r3
 801b086:	e7bc      	b.n	801b002 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b088:	20002c84 	.word	0x20002c84
 801b08c:	20002c86 	.word	0x20002c86
 801b090:	20002c88 	.word	0x20002c88
 801b094:	20002c8c 	.word	0x20002c8c

0801b098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b09c:	b08b      	sub	sp, #44	; 0x2c
 801b09e:	460f      	mov	r7, r1
 801b0a0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b0a4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b0a8:	4616      	mov	r6, r2
 801b0aa:	f1bb 0f00 	cmp.w	fp, #0
 801b0ae:	d049      	beq.n	801b144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801b0b0:	6810      	ldr	r0, [r2, #0]
 801b0b2:	6851      	ldr	r1, [r2, #4]
 801b0b4:	ad06      	add	r5, sp, #24
 801b0b6:	c503      	stmia	r5!, {r0, r1}
 801b0b8:	6818      	ldr	r0, [r3, #0]
 801b0ba:	6859      	ldr	r1, [r3, #4]
 801b0bc:	ad08      	add	r5, sp, #32
 801b0be:	c503      	stmia	r5!, {r0, r1}
 801b0c0:	a806      	add	r0, sp, #24
 801b0c2:	f7f9 fe85 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b0c6:	4631      	mov	r1, r6
 801b0c8:	a808      	add	r0, sp, #32
 801b0ca:	f7f9 fec5 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b0ce:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b0d2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b0d6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b0da:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b0de:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b0e2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b0e6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b0ea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b0ee:	4f5f      	ldr	r7, [pc, #380]	; (801b26c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b0f0:	440a      	add	r2, r1
 801b0f2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b0f6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b0fa:	6838      	ldr	r0, [r7, #0]
 801b0fc:	4413      	add	r3, r2
 801b0fe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b102:	6803      	ldr	r3, [r0, #0]
 801b104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b106:	4798      	blx	r3
 801b108:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b10c:	46b9      	mov	r9, r7
 801b10e:	d01c      	beq.n	801b14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801b110:	f010 0f04 	tst.w	r0, #4
 801b114:	d01d      	beq.n	801b152 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b116:	f8d9 0000 	ldr.w	r0, [r9]
 801b11a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b11e:	6801      	ldr	r1, [r0, #0]
 801b120:	f8cd b00c 	str.w	fp, [sp, #12]
 801b124:	2700      	movs	r7, #0
 801b126:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b12a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b12e:	9402      	str	r4, [sp, #8]
 801b130:	b2ad      	uxth	r5, r5
 801b132:	fa1f f488 	uxth.w	r4, r8
 801b136:	9501      	str	r5, [sp, #4]
 801b138:	9400      	str	r4, [sp, #0]
 801b13a:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b13c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b140:	4631      	mov	r1, r6
 801b142:	47a0      	blx	r4
 801b144:	b00b      	add	sp, #44	; 0x2c
 801b146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b14a:	b914      	cbnz	r4, 801b152 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b14c:	f010 0f01 	tst.w	r0, #1
 801b150:	e7e0      	b.n	801b114 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801b152:	f8d9 0000 	ldr.w	r0, [r9]
 801b156:	6803      	ldr	r3, [r0, #0]
 801b158:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b15a:	4798      	blx	r3
 801b15c:	4b44      	ldr	r3, [pc, #272]	; (801b270 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b15e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b162:	881a      	ldrh	r2, [r3, #0]
 801b164:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b168:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b16c:	fb02 1404 	mla	r4, r2, r4, r1
 801b170:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b174:	469a      	mov	sl, r3
 801b176:	fb05 f502 	mul.w	r5, r5, r2
 801b17a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b17e:	d059      	beq.n	801b234 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b180:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b184:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b188:	fa1f f28b 	uxth.w	r2, fp
 801b18c:	fa1f f989 	uxth.w	r9, r9
 801b190:	469e      	mov	lr, r3
 801b192:	42ac      	cmp	r4, r5
 801b194:	d264      	bcs.n	801b260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b196:	eb04 0a07 	add.w	sl, r4, r7
 801b19a:	4554      	cmp	r4, sl
 801b19c:	d23d      	bcs.n	801b21a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b19e:	8821      	ldrh	r1, [r4, #0]
 801b1a0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b1a4:	1208      	asrs	r0, r1, #8
 801b1a6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b1aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b1ae:	fb10 f009 	smulbb	r0, r0, r9
 801b1b2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b1b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b1ba:	00c9      	lsls	r1, r1, #3
 801b1bc:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b1c0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b1c4:	10d8      	asrs	r0, r3, #3
 801b1c6:	b2c9      	uxtb	r1, r1
 801b1c8:	00db      	lsls	r3, r3, #3
 801b1ca:	fa1f fc8c 	uxth.w	ip, ip
 801b1ce:	fb1b fb09 	smulbb	fp, fp, r9
 801b1d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b1d6:	b2db      	uxtb	r3, r3
 801b1d8:	fb11 f109 	smulbb	r1, r1, r9
 801b1dc:	fb00 b002 	mla	r0, r0, r2, fp
 801b1e0:	fb03 1302 	mla	r3, r3, r2, r1
 801b1e4:	f10c 0b01 	add.w	fp, ip, #1
 801b1e8:	b29b      	uxth	r3, r3
 801b1ea:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b1ee:	b280      	uxth	r0, r0
 801b1f0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b1f4:	f103 0c01 	add.w	ip, r3, #1
 801b1f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b1fc:	1c43      	adds	r3, r0, #1
 801b1fe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b202:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b206:	0940      	lsrs	r0, r0, #5
 801b208:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b20c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b210:	ea4c 0c00 	orr.w	ip, ip, r0
 801b214:	f824 cb02 	strh.w	ip, [r4], #2
 801b218:	e7bf      	b.n	801b19a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b21a:	f8be 3000 	ldrh.w	r3, [lr]
 801b21e:	eba3 0308 	sub.w	r3, r3, r8
 801b222:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b226:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b22a:	eba3 0308 	sub.w	r3, r3, r8
 801b22e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b232:	e7ae      	b.n	801b192 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b234:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b238:	f8d9 0000 	ldr.w	r0, [r9]
 801b23c:	42ac      	cmp	r4, r5
 801b23e:	6803      	ldr	r3, [r0, #0]
 801b240:	d20e      	bcs.n	801b260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b242:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b246:	4632      	mov	r2, r6
 801b248:	463b      	mov	r3, r7
 801b24a:	4621      	mov	r1, r4
 801b24c:	47c0      	blx	r8
 801b24e:	f8ba 3000 	ldrh.w	r3, [sl]
 801b252:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b256:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b25a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b25e:	e7eb      	b.n	801b238 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b260:	4b02      	ldr	r3, [pc, #8]	; (801b26c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b262:	6818      	ldr	r0, [r3, #0]
 801b264:	6803      	ldr	r3, [r0, #0]
 801b266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b268:	4798      	blx	r3
 801b26a:	e76b      	b.n	801b144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801b26c:	20002c8c 	.word	0x20002c8c
 801b270:	20002c86 	.word	0x20002c86

0801b274 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b274:	b510      	push	{r4, lr}
 801b276:	2178      	movs	r1, #120	; 0x78
 801b278:	4604      	mov	r4, r0
 801b27a:	f008 ffc0 	bl	80241fe <_ZdlPvj>
 801b27e:	4620      	mov	r0, r4
 801b280:	bd10      	pop	{r4, pc}

0801b282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b282:	b510      	push	{r4, lr}
 801b284:	2104      	movs	r1, #4
 801b286:	4604      	mov	r4, r0
 801b288:	f008 ffb9 	bl	80241fe <_ZdlPvj>
 801b28c:	4620      	mov	r0, r4
 801b28e:	bd10      	pop	{r4, pc}

0801b290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b290:	b510      	push	{r4, lr}
 801b292:	2104      	movs	r1, #4
 801b294:	4604      	mov	r4, r0
 801b296:	f008 ffb2 	bl	80241fe <_ZdlPvj>
 801b29a:	4620      	mov	r0, r4
 801b29c:	bd10      	pop	{r4, pc}

0801b29e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b29e:	b510      	push	{r4, lr}
 801b2a0:	2104      	movs	r1, #4
 801b2a2:	4604      	mov	r4, r0
 801b2a4:	f008 ffab 	bl	80241fe <_ZdlPvj>
 801b2a8:	4620      	mov	r0, r4
 801b2aa:	bd10      	pop	{r4, pc}

0801b2ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b2ac:	b510      	push	{r4, lr}
 801b2ae:	2104      	movs	r1, #4
 801b2b0:	4604      	mov	r4, r0
 801b2b2:	f008 ffa4 	bl	80241fe <_ZdlPvj>
 801b2b6:	4620      	mov	r0, r4
 801b2b8:	bd10      	pop	{r4, pc}

0801b2ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b2ba:	b510      	push	{r4, lr}
 801b2bc:	2104      	movs	r1, #4
 801b2be:	4604      	mov	r4, r0
 801b2c0:	f008 ff9d 	bl	80241fe <_ZdlPvj>
 801b2c4:	4620      	mov	r0, r4
 801b2c6:	bd10      	pop	{r4, pc}

0801b2c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b2c8:	b510      	push	{r4, lr}
 801b2ca:	2104      	movs	r1, #4
 801b2cc:	4604      	mov	r4, r0
 801b2ce:	f008 ff96 	bl	80241fe <_ZdlPvj>
 801b2d2:	4620      	mov	r0, r4
 801b2d4:	bd10      	pop	{r4, pc}

0801b2d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b2d6:	b510      	push	{r4, lr}
 801b2d8:	2104      	movs	r1, #4
 801b2da:	4604      	mov	r4, r0
 801b2dc:	f008 ff8f 	bl	80241fe <_ZdlPvj>
 801b2e0:	4620      	mov	r0, r4
 801b2e2:	bd10      	pop	{r4, pc}

0801b2e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b2e4:	b510      	push	{r4, lr}
 801b2e6:	2104      	movs	r1, #4
 801b2e8:	4604      	mov	r4, r0
 801b2ea:	f008 ff88 	bl	80241fe <_ZdlPvj>
 801b2ee:	4620      	mov	r0, r4
 801b2f0:	bd10      	pop	{r4, pc}

0801b2f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b2f2:	b510      	push	{r4, lr}
 801b2f4:	2104      	movs	r1, #4
 801b2f6:	4604      	mov	r4, r0
 801b2f8:	f008 ff81 	bl	80241fe <_ZdlPvj>
 801b2fc:	4620      	mov	r0, r4
 801b2fe:	bd10      	pop	{r4, pc}

0801b300 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b300:	b510      	push	{r4, lr}
 801b302:	2104      	movs	r1, #4
 801b304:	4604      	mov	r4, r0
 801b306:	f008 ff7a 	bl	80241fe <_ZdlPvj>
 801b30a:	4620      	mov	r0, r4
 801b30c:	bd10      	pop	{r4, pc}

0801b30e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b30e:	b510      	push	{r4, lr}
 801b310:	2104      	movs	r1, #4
 801b312:	4604      	mov	r4, r0
 801b314:	f008 ff73 	bl	80241fe <_ZdlPvj>
 801b318:	4620      	mov	r0, r4
 801b31a:	bd10      	pop	{r4, pc}

0801b31c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b31c:	b510      	push	{r4, lr}
 801b31e:	2104      	movs	r1, #4
 801b320:	4604      	mov	r4, r0
 801b322:	f008 ff6c 	bl	80241fe <_ZdlPvj>
 801b326:	4620      	mov	r0, r4
 801b328:	bd10      	pop	{r4, pc}

0801b32a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b32a:	b510      	push	{r4, lr}
 801b32c:	2104      	movs	r1, #4
 801b32e:	4604      	mov	r4, r0
 801b330:	f008 ff65 	bl	80241fe <_ZdlPvj>
 801b334:	4620      	mov	r0, r4
 801b336:	bd10      	pop	{r4, pc}

0801b338 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b338:	b510      	push	{r4, lr}
 801b33a:	2104      	movs	r1, #4
 801b33c:	4604      	mov	r4, r0
 801b33e:	f008 ff5e 	bl	80241fe <_ZdlPvj>
 801b342:	4620      	mov	r0, r4
 801b344:	bd10      	pop	{r4, pc}

0801b346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b346:	b510      	push	{r4, lr}
 801b348:	2104      	movs	r1, #4
 801b34a:	4604      	mov	r4, r0
 801b34c:	f008 ff57 	bl	80241fe <_ZdlPvj>
 801b350:	4620      	mov	r0, r4
 801b352:	bd10      	pop	{r4, pc}

0801b354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b354:	b510      	push	{r4, lr}
 801b356:	2104      	movs	r1, #4
 801b358:	4604      	mov	r4, r0
 801b35a:	f008 ff50 	bl	80241fe <_ZdlPvj>
 801b35e:	4620      	mov	r0, r4
 801b360:	bd10      	pop	{r4, pc}

0801b362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b362:	b510      	push	{r4, lr}
 801b364:	2104      	movs	r1, #4
 801b366:	4604      	mov	r4, r0
 801b368:	f008 ff49 	bl	80241fe <_ZdlPvj>
 801b36c:	4620      	mov	r0, r4
 801b36e:	bd10      	pop	{r4, pc}

0801b370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b370:	b510      	push	{r4, lr}
 801b372:	2104      	movs	r1, #4
 801b374:	4604      	mov	r4, r0
 801b376:	f008 ff42 	bl	80241fe <_ZdlPvj>
 801b37a:	4620      	mov	r0, r4
 801b37c:	bd10      	pop	{r4, pc}

0801b37e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b37e:	b510      	push	{r4, lr}
 801b380:	2104      	movs	r1, #4
 801b382:	4604      	mov	r4, r0
 801b384:	f008 ff3b 	bl	80241fe <_ZdlPvj>
 801b388:	4620      	mov	r0, r4
 801b38a:	bd10      	pop	{r4, pc}

0801b38c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b38c:	b510      	push	{r4, lr}
 801b38e:	2104      	movs	r1, #4
 801b390:	4604      	mov	r4, r0
 801b392:	f008 ff34 	bl	80241fe <_ZdlPvj>
 801b396:	4620      	mov	r0, r4
 801b398:	bd10      	pop	{r4, pc}

0801b39a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b39a:	b510      	push	{r4, lr}
 801b39c:	2104      	movs	r1, #4
 801b39e:	4604      	mov	r4, r0
 801b3a0:	f008 ff2d 	bl	80241fe <_ZdlPvj>
 801b3a4:	4620      	mov	r0, r4
 801b3a6:	bd10      	pop	{r4, pc}

0801b3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3a8:	b510      	push	{r4, lr}
 801b3aa:	2104      	movs	r1, #4
 801b3ac:	4604      	mov	r4, r0
 801b3ae:	f008 ff26 	bl	80241fe <_ZdlPvj>
 801b3b2:	4620      	mov	r0, r4
 801b3b4:	bd10      	pop	{r4, pc}

0801b3b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b3b6:	b510      	push	{r4, lr}
 801b3b8:	2104      	movs	r1, #4
 801b3ba:	4604      	mov	r4, r0
 801b3bc:	f008 ff1f 	bl	80241fe <_ZdlPvj>
 801b3c0:	4620      	mov	r0, r4
 801b3c2:	bd10      	pop	{r4, pc}

0801b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b3c4:	b510      	push	{r4, lr}
 801b3c6:	2104      	movs	r1, #4
 801b3c8:	4604      	mov	r4, r0
 801b3ca:	f008 ff18 	bl	80241fe <_ZdlPvj>
 801b3ce:	4620      	mov	r0, r4
 801b3d0:	bd10      	pop	{r4, pc}

0801b3d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b3d2:	b510      	push	{r4, lr}
 801b3d4:	2104      	movs	r1, #4
 801b3d6:	4604      	mov	r4, r0
 801b3d8:	f008 ff11 	bl	80241fe <_ZdlPvj>
 801b3dc:	4620      	mov	r0, r4
 801b3de:	bd10      	pop	{r4, pc}

0801b3e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b3e0:	b510      	push	{r4, lr}
 801b3e2:	2104      	movs	r1, #4
 801b3e4:	4604      	mov	r4, r0
 801b3e6:	f008 ff0a 	bl	80241fe <_ZdlPvj>
 801b3ea:	4620      	mov	r0, r4
 801b3ec:	bd10      	pop	{r4, pc}

0801b3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b3ee:	b510      	push	{r4, lr}
 801b3f0:	2104      	movs	r1, #4
 801b3f2:	4604      	mov	r4, r0
 801b3f4:	f008 ff03 	bl	80241fe <_ZdlPvj>
 801b3f8:	4620      	mov	r0, r4
 801b3fa:	bd10      	pop	{r4, pc}

0801b3fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b3fc:	b510      	push	{r4, lr}
 801b3fe:	2104      	movs	r1, #4
 801b400:	4604      	mov	r4, r0
 801b402:	f008 fefc 	bl	80241fe <_ZdlPvj>
 801b406:	4620      	mov	r0, r4
 801b408:	bd10      	pop	{r4, pc}
	...

0801b40c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801b40c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b410:	b091      	sub	sp, #68	; 0x44
 801b412:	469b      	mov	fp, r3
 801b414:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801b418:	4616      	mov	r6, r2
 801b41a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801b41e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b422:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b426:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801b42a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b42e:	4604      	mov	r4, r0
 801b430:	460d      	mov	r5, r1
 801b432:	4640      	mov	r0, r8
 801b434:	4659      	mov	r1, fp
 801b436:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b43a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801b43e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801b442:	f7f5 f953 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801b446:	4631      	mov	r1, r6
 801b448:	4640      	mov	r0, r8
 801b44a:	f7f5 f94f 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801b44e:	4b74      	ldr	r3, [pc, #464]	; (801b620 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801b450:	8818      	ldrh	r0, [r3, #0]
 801b452:	4b74      	ldr	r3, [pc, #464]	; (801b624 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801b454:	8819      	ldrh	r1, [r3, #0]
 801b456:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b45a:	2b00      	cmp	r3, #0
 801b45c:	b202      	sxth	r2, r0
 801b45e:	b20e      	sxth	r6, r1
 801b460:	da07      	bge.n	801b472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801b462:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801b466:	4463      	add	r3, ip
 801b468:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801b46c:	2300      	movs	r3, #0
 801b46e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801b472:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b476:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801b47a:	1ad2      	subs	r2, r2, r3
 801b47c:	4594      	cmp	ip, r2
 801b47e:	bfc4      	itt	gt
 801b480:	1ac2      	subgt	r2, r0, r3
 801b482:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801b486:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b48a:	2a00      	cmp	r2, #0
 801b48c:	da07      	bge.n	801b49e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801b48e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801b492:	4462      	add	r2, ip
 801b494:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801b498:	2200      	movs	r2, #0
 801b49a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801b49e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801b4a2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b4a6:	eba6 060a 	sub.w	r6, r6, sl
 801b4aa:	42b2      	cmp	r2, r6
 801b4ac:	bfc4      	itt	gt
 801b4ae:	eba1 020a 	subgt.w	r2, r1, sl
 801b4b2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801b4b6:	4a5c      	ldr	r2, [pc, #368]	; (801b628 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801b4b8:	7812      	ldrb	r2, [r2, #0]
 801b4ba:	b9a2      	cbnz	r2, 801b4e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801b4bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b4c0:	4286      	cmp	r6, r0
 801b4c2:	4640      	mov	r0, r8
 801b4c4:	9303      	str	r3, [sp, #12]
 801b4c6:	bf14      	ite	ne
 801b4c8:	2600      	movne	r6, #0
 801b4ca:	2601      	moveq	r6, #1
 801b4cc:	f7f5 f951 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b4d0:	9b03      	ldr	r3, [sp, #12]
 801b4d2:	b160      	cbz	r0, 801b4ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801b4d4:	2300      	movs	r3, #0
 801b4d6:	8023      	strh	r3, [r4, #0]
 801b4d8:	8063      	strh	r3, [r4, #2]
 801b4da:	80a3      	strh	r3, [r4, #4]
 801b4dc:	4620      	mov	r0, r4
 801b4de:	80e3      	strh	r3, [r4, #6]
 801b4e0:	b011      	add	sp, #68	; 0x44
 801b4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4e6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b4ea:	428e      	cmp	r6, r1
 801b4ec:	e7e9      	b.n	801b4c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801b4ee:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801b4f2:	9205      	str	r2, [sp, #20]
 801b4f4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b4f8:	9206      	str	r2, [sp, #24]
 801b4fa:	f8bb 2000 	ldrh.w	r2, [fp]
 801b4fe:	900e      	str	r0, [sp, #56]	; 0x38
 801b500:	1a9b      	subs	r3, r3, r2
 801b502:	b21b      	sxth	r3, r3
 801b504:	9303      	str	r3, [sp, #12]
 801b506:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b50a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801b50e:	ebaa 0a03 	sub.w	sl, sl, r3
 801b512:	fa0f f38a 	sxth.w	r3, sl
 801b516:	9304      	str	r3, [sp, #16]
 801b518:	9b03      	ldr	r3, [sp, #12]
 801b51a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801b51e:	9b04      	ldr	r3, [sp, #16]
 801b520:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b524:	9b05      	ldr	r3, [sp, #20]
 801b526:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801b52a:	a90e      	add	r1, sp, #56	; 0x38
 801b52c:	9b06      	ldr	r3, [sp, #24]
 801b52e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b532:	a80c      	add	r0, sp, #48	; 0x30
 801b534:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801b538:	f7f9 fc8e 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b53c:	4640      	mov	r0, r8
 801b53e:	f7f9 fc47 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b542:	a80e      	add	r0, sp, #56	; 0x38
 801b544:	f7f9 fc44 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b548:	4b38      	ldr	r3, [pc, #224]	; (801b62c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801b54a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801b54e:	881b      	ldrh	r3, [r3, #0]
 801b550:	9307      	str	r3, [sp, #28]
 801b552:	682b      	ldr	r3, [r5, #0]
 801b554:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801b630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b558:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b55a:	4628      	mov	r0, r5
 801b55c:	4798      	blx	r3
 801b55e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801b562:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b566:	4681      	mov	r9, r0
 801b568:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801b56c:	f8db 0000 	ldr.w	r0, [fp]
 801b570:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b572:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b576:	6803      	ldr	r3, [r0, #0]
 801b578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b57a:	4798      	blx	r3
 801b57c:	4607      	mov	r7, r0
 801b57e:	f8db 0000 	ldr.w	r0, [fp]
 801b582:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801b586:	6803      	ldr	r3, [r0, #0]
 801b588:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b58c:	9109      	str	r1, [sp, #36]	; 0x24
 801b58e:	9208      	str	r2, [sp, #32]
 801b590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b592:	4798      	blx	r3
 801b594:	f010 0f01 	tst.w	r0, #1
 801b598:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b59c:	d012      	beq.n	801b5c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801b59e:	f8db 0000 	ldr.w	r0, [fp]
 801b5a2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801b5a6:	6803      	ldr	r3, [r0, #0]
 801b5a8:	9200      	str	r2, [sp, #0]
 801b5aa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801b5ac:	e898 0006 	ldmia.w	r8, {r1, r2}
 801b5b0:	462b      	mov	r3, r5
 801b5b2:	47b0      	blx	r6
 801b5b4:	9b03      	ldr	r3, [sp, #12]
 801b5b6:	8023      	strh	r3, [r4, #0]
 801b5b8:	9b04      	ldr	r3, [sp, #16]
 801b5ba:	8063      	strh	r3, [r4, #2]
 801b5bc:	9b05      	ldr	r3, [sp, #20]
 801b5be:	80a3      	strh	r3, [r4, #4]
 801b5c0:	9b06      	ldr	r3, [sp, #24]
 801b5c2:	e78b      	b.n	801b4dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801b5c4:	fb09 f202 	mul.w	r2, r9, r2
 801b5c8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801b5cc:	440f      	add	r7, r1
 801b5ce:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801b5d2:	b166      	cbz	r6, 801b5ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b5d4:	9a07      	ldr	r2, [sp, #28]
 801b5d6:	4592      	cmp	sl, r2
 801b5d8:	d109      	bne.n	801b5ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b5da:	f8db 0000 	ldr.w	r0, [fp]
 801b5de:	6802      	ldr	r2, [r0, #0]
 801b5e0:	fb09 f303 	mul.w	r3, r9, r3
 801b5e4:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801b5e6:	4629      	mov	r1, r5
 801b5e8:	463a      	mov	r2, r7
 801b5ea:	47b0      	blx	r6
 801b5ec:	e7e2      	b.n	801b5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b5ee:	fb0a f303 	mul.w	r3, sl, r3
 801b5f2:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801b630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b5f6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801b5fa:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801b5fe:	4545      	cmp	r5, r8
 801b600:	d2d8      	bcs.n	801b5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b602:	f8db 0000 	ldr.w	r0, [fp]
 801b606:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b60a:	6802      	ldr	r2, [r0, #0]
 801b60c:	4629      	mov	r1, r5
 801b60e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801b612:	005b      	lsls	r3, r3, #1
 801b614:	463a      	mov	r2, r7
 801b616:	47d0      	blx	sl
 801b618:	444f      	add	r7, r9
 801b61a:	4435      	add	r5, r6
 801b61c:	e7ef      	b.n	801b5fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801b61e:	bf00      	nop
 801b620:	20002c80 	.word	0x20002c80
 801b624:	20002c82 	.word	0x20002c82
 801b628:	20002c84 	.word	0x20002c84
 801b62c:	20002c86 	.word	0x20002c86
 801b630:	20002c8c 	.word	0x20002c8c

0801b634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801b634:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b636:	4606      	mov	r6, r0
 801b638:	b087      	sub	sp, #28
 801b63a:	460c      	mov	r4, r1
 801b63c:	4617      	mov	r7, r2
 801b63e:	461d      	mov	r5, r3
 801b640:	b333      	cbz	r3, 801b690 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b642:	4608      	mov	r0, r1
 801b644:	f7f5 f895 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b648:	bb10      	cbnz	r0, 801b690 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b64a:	6820      	ldr	r0, [r4, #0]
 801b64c:	6861      	ldr	r1, [r4, #4]
 801b64e:	4c1c      	ldr	r4, [pc, #112]	; (801b6c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801b650:	ab04      	add	r3, sp, #16
 801b652:	c303      	stmia	r3!, {r0, r1}
 801b654:	a804      	add	r0, sp, #16
 801b656:	f7f9 fbbb 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b65a:	6820      	ldr	r0, [r4, #0]
 801b65c:	6803      	ldr	r3, [r0, #0]
 801b65e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b660:	4798      	blx	r3
 801b662:	2dff      	cmp	r5, #255	; 0xff
 801b664:	d016      	beq.n	801b694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801b666:	f010 0f08 	tst.w	r0, #8
 801b66a:	6820      	ldr	r0, [r4, #0]
 801b66c:	d015      	beq.n	801b69a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801b66e:	2400      	movs	r4, #0
 801b670:	6801      	ldr	r1, [r0, #0]
 801b672:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801b676:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b67a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801b67e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801b682:	9401      	str	r4, [sp, #4]
 801b684:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801b688:	9400      	str	r4, [sp, #0]
 801b68a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801b68c:	4639      	mov	r1, r7
 801b68e:	47a0      	blx	r4
 801b690:	b007      	add	sp, #28
 801b692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b694:	f010 0f02 	tst.w	r0, #2
 801b698:	e7e7      	b.n	801b66a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801b69a:	6803      	ldr	r3, [r0, #0]
 801b69c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b69e:	4798      	blx	r3
 801b6a0:	4b08      	ldr	r3, [pc, #32]	; (801b6c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801b6a2:	881a      	ldrh	r2, [r3, #0]
 801b6a4:	6833      	ldr	r3, [r6, #0]
 801b6a6:	e9cd 7500 	strd	r7, r5, [sp]
 801b6aa:	4601      	mov	r1, r0
 801b6ac:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801b6ae:	4630      	mov	r0, r6
 801b6b0:	ab04      	add	r3, sp, #16
 801b6b2:	47a8      	blx	r5
 801b6b4:	6820      	ldr	r0, [r4, #0]
 801b6b6:	6803      	ldr	r3, [r0, #0]
 801b6b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6ba:	4798      	blx	r3
 801b6bc:	e7e8      	b.n	801b690 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b6be:	bf00      	nop
 801b6c0:	20002c8c 	.word	0x20002c8c
 801b6c4:	20002c86 	.word	0x20002c86

0801b6c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801b6c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b6cc:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801b6d0:	9e08      	ldr	r6, [sp, #32]
 801b6d2:	4688      	mov	r8, r1
 801b6d4:	4614      	mov	r4, r2
 801b6d6:	461d      	mov	r5, r3
 801b6d8:	2f00      	cmp	r7, #0
 801b6da:	f000 80a9 	beq.w	801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b6de:	4618      	mov	r0, r3
 801b6e0:	f7f5 f847 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b6e4:	2800      	cmp	r0, #0
 801b6e6:	f040 80a3 	bne.w	801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b6ea:	f9b5 1000 	ldrsh.w	r1, [r5]
 801b6ee:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b6f2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801b6f6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801b6fa:	fb04 1303 	mla	r3, r4, r3, r1
 801b6fe:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801b702:	4365      	muls	r5, r4
 801b704:	2fff      	cmp	r7, #255	; 0xff
 801b706:	eba4 0200 	sub.w	r2, r4, r0
 801b70a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801b70e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801b712:	d04a      	beq.n	801b7aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801b714:	b2bc      	uxth	r4, r7
 801b716:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801b71a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801b71e:	fa5f f788 	uxtb.w	r7, r8
 801b722:	b2f3      	uxtb	r3, r6
 801b724:	0040      	lsls	r0, r0, #1
 801b726:	fb0e fe04 	mul.w	lr, lr, r4
 801b72a:	4367      	muls	r7, r4
 801b72c:	4363      	muls	r3, r4
 801b72e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801b732:	fa1f fc8c 	uxth.w	ip, ip
 801b736:	42a9      	cmp	r1, r5
 801b738:	d27a      	bcs.n	801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b73a:	eb01 0900 	add.w	r9, r1, r0
 801b73e:	4549      	cmp	r1, r9
 801b740:	d231      	bcs.n	801b7a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801b742:	880a      	ldrh	r2, [r1, #0]
 801b744:	1214      	asrs	r4, r2, #8
 801b746:	10d6      	asrs	r6, r2, #3
 801b748:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b74c:	00d2      	lsls	r2, r2, #3
 801b74e:	b2d2      	uxtb	r2, r2
 801b750:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b754:	fb14 f40c 	smulbb	r4, r4, ip
 801b758:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b75c:	4474      	add	r4, lr
 801b75e:	fb12 f20c 	smulbb	r2, r2, ip
 801b762:	b2a4      	uxth	r4, r4
 801b764:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b768:	441a      	add	r2, r3
 801b76a:	b292      	uxth	r2, r2
 801b76c:	f104 0a01 	add.w	sl, r4, #1
 801b770:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b774:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b778:	fb16 f60c 	smulbb	r6, r6, ip
 801b77c:	f102 0a01 	add.w	sl, r2, #1
 801b780:	443e      	add	r6, r7
 801b782:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801b786:	b2b6      	uxth	r6, r6
 801b788:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b78c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b790:	4322      	orrs	r2, r4
 801b792:	1c74      	adds	r4, r6, #1
 801b794:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801b798:	0976      	lsrs	r6, r6, #5
 801b79a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b79e:	4332      	orrs	r2, r6
 801b7a0:	f821 2b02 	strh.w	r2, [r1], #2
 801b7a4:	e7cb      	b.n	801b73e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801b7a6:	4441      	add	r1, r8
 801b7a8:	e7c5      	b.n	801b736 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801b7aa:	4f22      	ldr	r7, [pc, #136]	; (801b834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801b7ac:	0973      	lsrs	r3, r6, #5
 801b7ae:	ea08 0707 	and.w	r7, r8, r7
 801b7b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b7b6:	433b      	orrs	r3, r7
 801b7b8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b7bc:	4333      	orrs	r3, r6
 801b7be:	07e7      	lsls	r7, r4, #31
 801b7c0:	b29b      	uxth	r3, r3
 801b7c2:	d50b      	bpl.n	801b7dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801b7c4:	0040      	lsls	r0, r0, #1
 801b7c6:	0052      	lsls	r2, r2, #1
 801b7c8:	42a9      	cmp	r1, r5
 801b7ca:	d231      	bcs.n	801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b7cc:	180c      	adds	r4, r1, r0
 801b7ce:	42a1      	cmp	r1, r4
 801b7d0:	d202      	bcs.n	801b7d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801b7d2:	f821 3b02 	strh.w	r3, [r1], #2
 801b7d6:	e7fa      	b.n	801b7ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801b7d8:	4411      	add	r1, r2
 801b7da:	e7f5      	b.n	801b7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801b7dc:	078e      	lsls	r6, r1, #30
 801b7de:	d008      	beq.n	801b7f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801b7e0:	0066      	lsls	r6, r4, #1
 801b7e2:	460a      	mov	r2, r1
 801b7e4:	42aa      	cmp	r2, r5
 801b7e6:	d202      	bcs.n	801b7ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801b7e8:	8013      	strh	r3, [r2, #0]
 801b7ea:	4432      	add	r2, r6
 801b7ec:	e7fa      	b.n	801b7e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801b7ee:	3102      	adds	r1, #2
 801b7f0:	3801      	subs	r0, #1
 801b7f2:	07c2      	lsls	r2, r0, #31
 801b7f4:	d50b      	bpl.n	801b80e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801b7f6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801b7fa:	3a01      	subs	r2, #1
 801b7fc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801b800:	0066      	lsls	r6, r4, #1
 801b802:	42aa      	cmp	r2, r5
 801b804:	d202      	bcs.n	801b80c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801b806:	8013      	strh	r3, [r2, #0]
 801b808:	4432      	add	r2, r6
 801b80a:	e7fa      	b.n	801b802 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801b80c:	3801      	subs	r0, #1
 801b80e:	b178      	cbz	r0, 801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b810:	1040      	asrs	r0, r0, #1
 801b812:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801b816:	0080      	lsls	r0, r0, #2
 801b818:	0064      	lsls	r4, r4, #1
 801b81a:	42a9      	cmp	r1, r5
 801b81c:	d208      	bcs.n	801b830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b81e:	180e      	adds	r6, r1, r0
 801b820:	460a      	mov	r2, r1
 801b822:	42b2      	cmp	r2, r6
 801b824:	d202      	bcs.n	801b82c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801b826:	f842 3b04 	str.w	r3, [r2], #4
 801b82a:	e7fa      	b.n	801b822 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801b82c:	4421      	add	r1, r4
 801b82e:	e7f4      	b.n	801b81a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801b830:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b834:	00fff800 	.word	0x00fff800

0801b838 <_ZN8touchgfx8LCD16bppC1Ev>:
 801b838:	2200      	movs	r2, #0
 801b83a:	4910      	ldr	r1, [pc, #64]	; (801b87c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801b83c:	6042      	str	r2, [r0, #4]
 801b83e:	6001      	str	r1, [r0, #0]
 801b840:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801b844:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801b848:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801b84c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801b850:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801b854:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801b858:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801b85c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801b860:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801b864:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801b868:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801b86c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801b870:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801b874:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801b878:	4770      	bx	lr
 801b87a:	bf00      	nop
 801b87c:	08028d60 	.word	0x08028d60

0801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801b880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b884:	460d      	mov	r5, r1
 801b886:	b08d      	sub	sp, #52	; 0x34
 801b888:	4604      	mov	r4, r0
 801b88a:	6808      	ldr	r0, [r1, #0]
 801b88c:	6849      	ldr	r1, [r1, #4]
 801b88e:	4699      	mov	r9, r3
 801b890:	ab08      	add	r3, sp, #32
 801b892:	c303      	stmia	r3!, {r0, r1}
 801b894:	6810      	ldr	r0, [r2, #0]
 801b896:	6851      	ldr	r1, [r2, #4]
 801b898:	ab0a      	add	r3, sp, #40	; 0x28
 801b89a:	c303      	stmia	r3!, {r0, r1}
 801b89c:	a808      	add	r0, sp, #32
 801b89e:	f7f9 fa97 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b8a2:	4629      	mov	r1, r5
 801b8a4:	a80a      	add	r0, sp, #40	; 0x28
 801b8a6:	f7f9 fad7 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b8aa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801b8ae:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801b8b2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b8b6:	4d63      	ldr	r5, [pc, #396]	; (801ba44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b8b8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801b8bc:	6828      	ldr	r0, [r5, #0]
 801b8be:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b8c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b8c6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b8ca:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801b8ce:	440a      	add	r2, r1
 801b8d0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b8d4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801b8d8:	4413      	add	r3, r2
 801b8da:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b8de:	6803      	ldr	r3, [r0, #0]
 801b8e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b8e2:	4798      	blx	r3
 801b8e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b8e8:	d119      	bne.n	801b91e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801b8ea:	f010 0f20 	tst.w	r0, #32
 801b8ee:	6828      	ldr	r0, [r5, #0]
 801b8f0:	d018      	beq.n	801b924 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801b8f2:	2500      	movs	r5, #0
 801b8f4:	6801      	ldr	r1, [r0, #0]
 801b8f6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b8fa:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801b8fe:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801b902:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801b906:	9502      	str	r5, [sp, #8]
 801b908:	b2b6      	uxth	r6, r6
 801b90a:	fa1f f588 	uxth.w	r5, r8
 801b90e:	9601      	str	r6, [sp, #4]
 801b910:	9500      	str	r5, [sp, #0]
 801b912:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801b914:	4621      	mov	r1, r4
 801b916:	47a8      	blx	r5
 801b918:	b00d      	add	sp, #52	; 0x34
 801b91a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b91e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b922:	e7e4      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801b924:	6803      	ldr	r3, [r0, #0]
 801b926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b928:	4798      	blx	r3
 801b92a:	4947      	ldr	r1, [pc, #284]	; (801ba48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801b92c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b930:	880b      	ldrh	r3, [r1, #0]
 801b932:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801b936:	fb03 5202 	mla	r2, r3, r2, r5
 801b93a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b93e:	4373      	muls	r3, r6
 801b940:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b944:	9307      	str	r3, [sp, #28]
 801b946:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b94a:	9306      	str	r3, [sp, #24]
 801b94c:	468a      	mov	sl, r1
 801b94e:	9b07      	ldr	r3, [sp, #28]
 801b950:	4298      	cmp	r0, r3
 801b952:	d270      	bcs.n	801ba36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801b954:	9b06      	ldr	r3, [sp, #24]
 801b956:	4621      	mov	r1, r4
 801b958:	eb00 0b03 	add.w	fp, r0, r3
 801b95c:	4558      	cmp	r0, fp
 801b95e:	d25d      	bcs.n	801ba1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801b960:	f851 4b04 	ldr.w	r4, [r1], #4
 801b964:	0e23      	lsrs	r3, r4, #24
 801b966:	d014      	beq.n	801b992 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b968:	2bff      	cmp	r3, #255	; 0xff
 801b96a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801b96e:	d112      	bne.n	801b996 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b970:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b974:	d10f      	bne.n	801b996 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b976:	0963      	lsrs	r3, r4, #5
 801b978:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b97c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b980:	f02c 0c07 	bic.w	ip, ip, #7
 801b984:	ea43 0c0c 	orr.w	ip, r3, ip
 801b988:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b98c:	ea4c 0404 	orr.w	r4, ip, r4
 801b990:	8004      	strh	r4, [r0, #0]
 801b992:	3002      	adds	r0, #2
 801b994:	e7e2      	b.n	801b95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801b996:	fb09 f303 	mul.w	r3, r9, r3
 801b99a:	8807      	ldrh	r7, [r0, #0]
 801b99c:	1c5a      	adds	r2, r3, #1
 801b99e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801b9a2:	1212      	asrs	r2, r2, #8
 801b9a4:	123e      	asrs	r6, r7, #8
 801b9a6:	b293      	uxth	r3, r2
 801b9a8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801b9ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9b0:	43d2      	mvns	r2, r2
 801b9b2:	b2d2      	uxtb	r2, r2
 801b9b4:	10fd      	asrs	r5, r7, #3
 801b9b6:	fb1e fe03 	smulbb	lr, lr, r3
 801b9ba:	00ff      	lsls	r7, r7, #3
 801b9bc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b9c0:	fb06 e602 	mla	r6, r6, r2, lr
 801b9c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b9c8:	b2ff      	uxtb	r7, r7
 801b9ca:	fa5f fc8c 	uxtb.w	ip, ip
 801b9ce:	b2e4      	uxtb	r4, r4
 801b9d0:	b2b6      	uxth	r6, r6
 801b9d2:	fb1c fc03 	smulbb	ip, ip, r3
 801b9d6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b9da:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b9de:	fb14 f403 	smulbb	r4, r4, r3
 801b9e2:	fb05 c502 	mla	r5, r5, r2, ip
 801b9e6:	f106 0e01 	add.w	lr, r6, #1
 801b9ea:	fb07 4702 	mla	r7, r7, r2, r4
 801b9ee:	b2ad      	uxth	r5, r5
 801b9f0:	b2bf      	uxth	r7, r7
 801b9f2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b9f6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801b9fa:	f105 0c01 	add.w	ip, r5, #1
 801b9fe:	1c7e      	adds	r6, r7, #1
 801ba00:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ba04:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ba08:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ba0c:	096d      	lsrs	r5, r5, #5
 801ba0e:	ea46 060e 	orr.w	r6, r6, lr
 801ba12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba16:	432e      	orrs	r6, r5
 801ba18:	8006      	strh	r6, [r0, #0]
 801ba1a:	e7ba      	b.n	801b992 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ba1c:	f8ba 3000 	ldrh.w	r3, [sl]
 801ba20:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ba24:	eba3 0308 	sub.w	r3, r3, r8
 801ba28:	eba4 0408 	sub.w	r4, r4, r8
 801ba2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ba30:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ba34:	e78b      	b.n	801b94e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ba36:	4b03      	ldr	r3, [pc, #12]	; (801ba44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ba38:	6818      	ldr	r0, [r3, #0]
 801ba3a:	6803      	ldr	r3, [r0, #0]
 801ba3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba3e:	4798      	blx	r3
 801ba40:	e76a      	b.n	801b918 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ba42:	bf00      	nop
 801ba44:	20002c8c 	.word	0x20002c8c
 801ba48:	20002c86 	.word	0x20002c86

0801ba4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ba4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ba50:	460c      	mov	r4, r1
 801ba52:	b085      	sub	sp, #20
 801ba54:	6810      	ldr	r0, [r2, #0]
 801ba56:	6851      	ldr	r1, [r2, #4]
 801ba58:	466d      	mov	r5, sp
 801ba5a:	c503      	stmia	r5!, {r0, r1}
 801ba5c:	6818      	ldr	r0, [r3, #0]
 801ba5e:	6859      	ldr	r1, [r3, #4]
 801ba60:	4616      	mov	r6, r2
 801ba62:	c503      	stmia	r5!, {r0, r1}
 801ba64:	4668      	mov	r0, sp
 801ba66:	f7f9 f9b3 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba6a:	4631      	mov	r1, r6
 801ba6c:	a802      	add	r0, sp, #8
 801ba6e:	f7f9 f9f3 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba72:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ba76:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ba7a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ba7e:	4d28      	ldr	r5, [pc, #160]	; (801bb20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ba80:	4e28      	ldr	r6, [pc, #160]	; (801bb24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ba82:	6828      	ldr	r0, [r5, #0]
 801ba84:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ba88:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ba8c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ba90:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ba94:	f8bd 1000 	ldrh.w	r1, [sp]
 801ba98:	440a      	add	r2, r1
 801ba9a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ba9e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801baa2:	4413      	add	r3, r2
 801baa4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801baa8:	6803      	ldr	r3, [r0, #0]
 801baaa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801baac:	4798      	blx	r3
 801baae:	8833      	ldrh	r3, [r6, #0]
 801bab0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801bab4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bab8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801bb28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801babc:	fb03 1202 	mla	r2, r3, r2, r1
 801bac0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bac4:	fb08 f303 	mul.w	r3, r8, r3
 801bac8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bacc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801bad0:	4298      	cmp	r0, r3
 801bad2:	d21d      	bcs.n	801bb10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801bad4:	eb00 080c 	add.w	r8, r0, ip
 801bad8:	4540      	cmp	r0, r8
 801bada:	d20f      	bcs.n	801bafc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801badc:	f854 1b04 	ldr.w	r1, [r4], #4
 801bae0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801bae4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801bae8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801baec:	ea42 0209 	orr.w	r2, r2, r9
 801baf0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801baf4:	430a      	orrs	r2, r1
 801baf6:	f820 2b02 	strh.w	r2, [r0], #2
 801bafa:	e7ed      	b.n	801bad8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801bafc:	8832      	ldrh	r2, [r6, #0]
 801bafe:	1bd2      	subs	r2, r2, r7
 801bb00:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb04:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801bb08:	1bd2      	subs	r2, r2, r7
 801bb0a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801bb0e:	e7df      	b.n	801bad0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801bb10:	6828      	ldr	r0, [r5, #0]
 801bb12:	6803      	ldr	r3, [r0, #0]
 801bb14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bb16:	4798      	blx	r3
 801bb18:	b005      	add	sp, #20
 801bb1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bb1e:	bf00      	nop
 801bb20:	20002c8c 	.word	0x20002c8c
 801bb24:	20002c86 	.word	0x20002c86
 801bb28:	fffff800 	.word	0xfffff800

0801bb2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801bb2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bb30:	460e      	mov	r6, r1
 801bb32:	b08e      	sub	sp, #56	; 0x38
 801bb34:	4604      	mov	r4, r0
 801bb36:	6808      	ldr	r0, [r1, #0]
 801bb38:	6849      	ldr	r1, [r1, #4]
 801bb3a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801bd14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801bb3e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801bd18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801bb42:	461d      	mov	r5, r3
 801bb44:	ab0a      	add	r3, sp, #40	; 0x28
 801bb46:	c303      	stmia	r3!, {r0, r1}
 801bb48:	6810      	ldr	r0, [r2, #0]
 801bb4a:	6851      	ldr	r1, [r2, #4]
 801bb4c:	ab0c      	add	r3, sp, #48	; 0x30
 801bb4e:	c303      	stmia	r3!, {r0, r1}
 801bb50:	a80a      	add	r0, sp, #40	; 0x28
 801bb52:	f7f9 f93d 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb56:	4631      	mov	r1, r6
 801bb58:	a80c      	add	r0, sp, #48	; 0x30
 801bb5a:	f7f9 f97d 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb5e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801bb62:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801bb66:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bb6a:	f8d8 0000 	ldr.w	r0, [r8]
 801bb6e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801bb72:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bb76:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bb7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801bb7e:	440c      	add	r4, r1
 801bb80:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801bb84:	440a      	add	r2, r1
 801bb86:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801bb8a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801bb8e:	4413      	add	r3, r2
 801bb90:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bb94:	6803      	ldr	r3, [r0, #0]
 801bb96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bb98:	4798      	blx	r3
 801bb9a:	2dff      	cmp	r5, #255	; 0xff
 801bb9c:	d124      	bne.n	801bbe8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801bb9e:	f010 0f01 	tst.w	r0, #1
 801bba2:	f8d8 0000 	ldr.w	r0, [r8]
 801bba6:	d022      	beq.n	801bbee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801bba8:	2100      	movs	r1, #0
 801bbaa:	f8d0 c000 	ldr.w	ip, [r0]
 801bbae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801bbb2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801bbb6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801bbba:	f04f 0e01 	mov.w	lr, #1
 801bbbe:	f8cd e018 	str.w	lr, [sp, #24]
 801bbc2:	f8b9 e000 	ldrh.w	lr, [r9]
 801bbc6:	9503      	str	r5, [sp, #12]
 801bbc8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801bbcc:	b2b6      	uxth	r6, r6
 801bbce:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bbd2:	9102      	str	r1, [sp, #8]
 801bbd4:	b2bf      	uxth	r7, r7
 801bbd6:	9601      	str	r6, [sp, #4]
 801bbd8:	9700      	str	r7, [sp, #0]
 801bbda:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801bbde:	4621      	mov	r1, r4
 801bbe0:	47a8      	blx	r5
 801bbe2:	b00e      	add	sp, #56	; 0x38
 801bbe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bbe8:	f010 0f04 	tst.w	r0, #4
 801bbec:	e7d9      	b.n	801bba2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801bbee:	6803      	ldr	r3, [r0, #0]
 801bbf0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bbf2:	4798      	blx	r3
 801bbf4:	f8b9 3000 	ldrh.w	r3, [r9]
 801bbf8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bbfc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801bc00:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801bc04:	fb03 1202 	mla	r2, r3, r2, r1
 801bc08:	ebac 0c07 	sub.w	ip, ip, r7
 801bc0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bc10:	435e      	muls	r6, r3
 801bc12:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801bc16:	2dff      	cmp	r5, #255	; 0xff
 801bc18:	eba3 0707 	sub.w	r7, r3, r7
 801bc1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bc20:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801bc24:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801bc28:	d049      	beq.n	801bcbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801bc2a:	43eb      	mvns	r3, r5
 801bc2c:	fa1f f985 	uxth.w	r9, r5
 801bc30:	b2db      	uxtb	r3, r3
 801bc32:	42b0      	cmp	r0, r6
 801bc34:	d266      	bcs.n	801bd04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bc36:	eb00 0a0e 	add.w	sl, r0, lr
 801bc3a:	4550      	cmp	r0, sl
 801bc3c:	4621      	mov	r1, r4
 801bc3e:	f104 0403 	add.w	r4, r4, #3
 801bc42:	d25b      	bcs.n	801bcfc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801bc44:	8802      	ldrh	r2, [r0, #0]
 801bc46:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bc4a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801bc4e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bc52:	fb11 f109 	smulbb	r1, r1, r9
 801bc56:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801bc5a:	10d5      	asrs	r5, r2, #3
 801bc5c:	fb08 1803 	mla	r8, r8, r3, r1
 801bc60:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801bc64:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bc68:	fb11 f109 	smulbb	r1, r1, r9
 801bc6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bc70:	fb05 1503 	mla	r5, r5, r3, r1
 801bc74:	00d2      	lsls	r2, r2, #3
 801bc76:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bc7a:	b2d2      	uxtb	r2, r2
 801bc7c:	fb11 f109 	smulbb	r1, r1, r9
 801bc80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bc84:	fa1f f888 	uxth.w	r8, r8
 801bc88:	fb02 1203 	mla	r2, r2, r3, r1
 801bc8c:	b292      	uxth	r2, r2
 801bc8e:	f108 0101 	add.w	r1, r8, #1
 801bc92:	b2ad      	uxth	r5, r5
 801bc94:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801bc98:	1c51      	adds	r1, r2, #1
 801bc9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bc9e:	1c69      	adds	r1, r5, #1
 801bca0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801bca4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bca8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bcac:	096d      	lsrs	r5, r5, #5
 801bcae:	ea42 0208 	orr.w	r2, r2, r8
 801bcb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bcb6:	432a      	orrs	r2, r5
 801bcb8:	f820 2b02 	strh.w	r2, [r0], #2
 801bcbc:	e7bd      	b.n	801bc3a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801bcbe:	4a14      	ldr	r2, [pc, #80]	; (801bd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801bcc0:	42b0      	cmp	r0, r6
 801bcc2:	d21f      	bcs.n	801bd04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bcc4:	eb00 050e 	add.w	r5, r0, lr
 801bcc8:	42a8      	cmp	r0, r5
 801bcca:	4621      	mov	r1, r4
 801bccc:	f104 0403 	add.w	r4, r4, #3
 801bcd0:	d210      	bcs.n	801bcf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801bcd2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801bcd6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bcda:	00db      	lsls	r3, r3, #3
 801bcdc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801bce0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bce4:	430b      	orrs	r3, r1
 801bce6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bcea:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801bcee:	f820 3b02 	strh.w	r3, [r0], #2
 801bcf2:	e7e9      	b.n	801bcc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801bcf4:	4438      	add	r0, r7
 801bcf6:	eb01 040c 	add.w	r4, r1, ip
 801bcfa:	e7e1      	b.n	801bcc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801bcfc:	4438      	add	r0, r7
 801bcfe:	eb01 040c 	add.w	r4, r1, ip
 801bd02:	e796      	b.n	801bc32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801bd04:	4b03      	ldr	r3, [pc, #12]	; (801bd14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801bd06:	6818      	ldr	r0, [r3, #0]
 801bd08:	6803      	ldr	r3, [r0, #0]
 801bd0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd0c:	4798      	blx	r3
 801bd0e:	e768      	b.n	801bbe2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801bd10:	fffff800 	.word	0xfffff800
 801bd14:	20002c8c 	.word	0x20002c8c
 801bd18:	20002c86 	.word	0x20002c86

0801bd1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801bd1c:	b4f0      	push	{r4, r5, r6, r7}
 801bd1e:	4616      	mov	r6, r2
 801bd20:	2e01      	cmp	r6, #1
 801bd22:	461c      	mov	r4, r3
 801bd24:	460d      	mov	r5, r1
 801bd26:	9a04      	ldr	r2, [sp, #16]
 801bd28:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801bd2c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801bd30:	d012      	beq.n	801bd58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801bd32:	d303      	bcc.n	801bd3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801bd34:	2e02      	cmp	r6, #2
 801bd36:	d00a      	beq.n	801bd4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801bd38:	bcf0      	pop	{r4, r5, r6, r7}
 801bd3a:	4770      	bx	lr
 801bd3c:	6805      	ldr	r5, [r0, #0]
 801bd3e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801bd42:	68ed      	ldr	r5, [r5, #12]
 801bd44:	4613      	mov	r3, r2
 801bd46:	46ac      	mov	ip, r5
 801bd48:	4622      	mov	r2, r4
 801bd4a:	bcf0      	pop	{r4, r5, r6, r7}
 801bd4c:	4760      	bx	ip
 801bd4e:	4621      	mov	r1, r4
 801bd50:	4628      	mov	r0, r5
 801bd52:	bcf0      	pop	{r4, r5, r6, r7}
 801bd54:	f7ff bd94 	b.w	801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801bd58:	4621      	mov	r1, r4
 801bd5a:	4628      	mov	r0, r5
 801bd5c:	bcf0      	pop	{r4, r5, r6, r7}
 801bd5e:	f7ff bee5 	b.w	801bb2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801bd64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801bd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd68:	4681      	mov	r9, r0
 801bd6a:	b093      	sub	sp, #76	; 0x4c
 801bd6c:	6810      	ldr	r0, [r2, #0]
 801bd6e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801bd72:	4f6d      	ldr	r7, [pc, #436]	; (801bf28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801bd74:	4688      	mov	r8, r1
 801bd76:	6851      	ldr	r1, [r2, #4]
 801bd78:	ac0e      	add	r4, sp, #56	; 0x38
 801bd7a:	c403      	stmia	r4!, {r0, r1}
 801bd7c:	6818      	ldr	r0, [r3, #0]
 801bd7e:	6859      	ldr	r1, [r3, #4]
 801bd80:	ac10      	add	r4, sp, #64	; 0x40
 801bd82:	4616      	mov	r6, r2
 801bd84:	c403      	stmia	r4!, {r0, r1}
 801bd86:	a80e      	add	r0, sp, #56	; 0x38
 801bd88:	f7f9 f822 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd8c:	4631      	mov	r1, r6
 801bd8e:	a810      	add	r0, sp, #64	; 0x40
 801bd90:	f7f9 f862 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd94:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801bd98:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801bd9c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801bda0:	4e62      	ldr	r6, [pc, #392]	; (801bf2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801bda2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801bda6:	6830      	ldr	r0, [r6, #0]
 801bda8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801bdac:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bdb0:	4489      	add	r9, r1
 801bdb2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801bdb6:	440a      	add	r2, r1
 801bdb8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801bdbc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801bdc0:	4413      	add	r3, r2
 801bdc2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801bdc6:	6803      	ldr	r3, [r0, #0]
 801bdc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bdca:	4798      	blx	r3
 801bdcc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801bdd0:	6830      	ldr	r0, [r6, #0]
 801bdd2:	d01d      	beq.n	801be10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801bdd4:	2200      	movs	r2, #0
 801bdd6:	6801      	ldr	r1, [r0, #0]
 801bdd8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801bddc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801bde0:	220b      	movs	r2, #11
 801bde2:	9207      	str	r2, [sp, #28]
 801bde4:	883a      	ldrh	r2, [r7, #0]
 801bde6:	9206      	str	r2, [sp, #24]
 801bde8:	2201      	movs	r2, #1
 801bdea:	e9cd a204 	strd	sl, r2, [sp, #16]
 801bdee:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801bdf2:	9203      	str	r2, [sp, #12]
 801bdf4:	b2a4      	uxth	r4, r4
 801bdf6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801bdfa:	9200      	str	r2, [sp, #0]
 801bdfc:	b2ad      	uxth	r5, r5
 801bdfe:	9502      	str	r5, [sp, #8]
 801be00:	9401      	str	r4, [sp, #4]
 801be02:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801be04:	4642      	mov	r2, r8
 801be06:	4649      	mov	r1, r9
 801be08:	47a0      	blx	r4
 801be0a:	b013      	add	sp, #76	; 0x4c
 801be0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be10:	6803      	ldr	r3, [r0, #0]
 801be12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be14:	4798      	blx	r3
 801be16:	883b      	ldrh	r3, [r7, #0]
 801be18:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801be1c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801be20:	fb03 1202 	mla	r2, r3, r2, r1
 801be24:	435d      	muls	r5, r3
 801be26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801be2a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801be2e:	920c      	str	r2, [sp, #48]	; 0x30
 801be30:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801be34:	1b12      	subs	r2, r2, r4
 801be36:	920d      	str	r2, [sp, #52]	; 0x34
 801be38:	0062      	lsls	r2, r4, #1
 801be3a:	1b1c      	subs	r4, r3, r4
 801be3c:	0063      	lsls	r3, r4, #1
 801be3e:	920a      	str	r2, [sp, #40]	; 0x28
 801be40:	930b      	str	r3, [sp, #44]	; 0x2c
 801be42:	f04f 0e04 	mov.w	lr, #4
 801be46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801be48:	4298      	cmp	r0, r3
 801be4a:	d266      	bcs.n	801bf1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801be4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be4e:	eb00 0b03 	add.w	fp, r0, r3
 801be52:	4558      	cmp	r0, fp
 801be54:	d25c      	bcs.n	801bf10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801be56:	f819 3b01 	ldrb.w	r3, [r9], #1
 801be5a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801be5e:	f858 2003 	ldr.w	r2, [r8, r3]
 801be62:	0e11      	lsrs	r1, r2, #24
 801be64:	d012      	beq.n	801be8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801be66:	29ff      	cmp	r1, #255	; 0xff
 801be68:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801be6c:	d110      	bne.n	801be90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801be6e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801be72:	d10d      	bne.n	801be90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801be74:	0953      	lsrs	r3, r2, #5
 801be76:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801be7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be7e:	f027 0707 	bic.w	r7, r7, #7
 801be82:	431f      	orrs	r7, r3
 801be84:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be88:	433a      	orrs	r2, r7
 801be8a:	8002      	strh	r2, [r0, #0]
 801be8c:	3002      	adds	r0, #2
 801be8e:	e7e0      	b.n	801be52 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801be90:	fb0a f101 	mul.w	r1, sl, r1
 801be94:	8806      	ldrh	r6, [r0, #0]
 801be96:	1c4b      	adds	r3, r1, #1
 801be98:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801be9c:	1235      	asrs	r5, r6, #8
 801be9e:	10f4      	asrs	r4, r6, #3
 801bea0:	121b      	asrs	r3, r3, #8
 801bea2:	00f6      	lsls	r6, r6, #3
 801bea4:	b299      	uxth	r1, r3
 801bea6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801beaa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801beae:	b2f6      	uxtb	r6, r6
 801beb0:	43db      	mvns	r3, r3
 801beb2:	b2d2      	uxtb	r2, r2
 801beb4:	b2db      	uxtb	r3, r3
 801beb6:	fb1c fc01 	smulbb	ip, ip, r1
 801beba:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bebe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bec2:	fb12 f201 	smulbb	r2, r2, r1
 801bec6:	fb05 c503 	mla	r5, r5, r3, ip
 801beca:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bece:	b2ff      	uxtb	r7, r7
 801bed0:	fb06 2203 	mla	r2, r6, r3, r2
 801bed4:	b2ad      	uxth	r5, r5
 801bed6:	fb17 f701 	smulbb	r7, r7, r1
 801beda:	b292      	uxth	r2, r2
 801bedc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801bee0:	fb04 7403 	mla	r4, r4, r3, r7
 801bee4:	f105 0c01 	add.w	ip, r5, #1
 801bee8:	1c57      	adds	r7, r2, #1
 801beea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801beee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bef2:	b2a4      	uxth	r4, r4
 801bef4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bef8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801befc:	433d      	orrs	r5, r7
 801befe:	1c67      	adds	r7, r4, #1
 801bf00:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801bf04:	0964      	lsrs	r4, r4, #5
 801bf06:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bf0a:	4325      	orrs	r5, r4
 801bf0c:	8005      	strh	r5, [r0, #0]
 801bf0e:	e7bd      	b.n	801be8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801bf10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bf12:	4418      	add	r0, r3
 801bf14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf16:	4499      	add	r9, r3
 801bf18:	e795      	b.n	801be46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801bf1a:	4b04      	ldr	r3, [pc, #16]	; (801bf2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801bf1c:	6818      	ldr	r0, [r3, #0]
 801bf1e:	6803      	ldr	r3, [r0, #0]
 801bf20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf22:	4798      	blx	r3
 801bf24:	e771      	b.n	801be0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801bf26:	bf00      	nop
 801bf28:	20002c86 	.word	0x20002c86
 801bf2c:	20002c8c 	.word	0x20002c8c

0801bf30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801bf30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf34:	b087      	sub	sp, #28
 801bf36:	4680      	mov	r8, r0
 801bf38:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801bf3c:	460d      	mov	r5, r1
 801bf3e:	4614      	mov	r4, r2
 801bf40:	2e00      	cmp	r6, #0
 801bf42:	f000 80b9 	beq.w	801c0b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801bf46:	6810      	ldr	r0, [r2, #0]
 801bf48:	6851      	ldr	r1, [r2, #4]
 801bf4a:	af02      	add	r7, sp, #8
 801bf4c:	c703      	stmia	r7!, {r0, r1}
 801bf4e:	6818      	ldr	r0, [r3, #0]
 801bf50:	6859      	ldr	r1, [r3, #4]
 801bf52:	af04      	add	r7, sp, #16
 801bf54:	c703      	stmia	r7!, {r0, r1}
 801bf56:	a802      	add	r0, sp, #8
 801bf58:	f7f8 ff3a 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf5c:	4621      	mov	r1, r4
 801bf5e:	a804      	add	r0, sp, #16
 801bf60:	f7f8 ff7a 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf64:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bf68:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bf6c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801bf70:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801bf74:	fb14 2103 	smlabb	r1, r4, r3, r2
 801bf78:	eb08 0401 	add.w	r4, r8, r1
 801bf7c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bf80:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801bf84:	440a      	add	r2, r1
 801bf86:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bf8a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bf8e:	4413      	add	r3, r2
 801bf90:	f8ad 3012 	strh.w	r3, [sp, #18]
 801bf94:	4b4a      	ldr	r3, [pc, #296]	; (801c0c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801bf96:	6818      	ldr	r0, [r3, #0]
 801bf98:	6803      	ldr	r3, [r0, #0]
 801bf9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf9c:	4798      	blx	r3
 801bf9e:	4b49      	ldr	r3, [pc, #292]	; (801c0c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801bfa0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801bfa4:	881a      	ldrh	r2, [r3, #0]
 801bfa6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801bfaa:	2eff      	cmp	r6, #255	; 0xff
 801bfac:	fb02 c101 	mla	r1, r2, r1, ip
 801bfb0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bfb4:	fb02 f207 	mul.w	r2, r2, r7
 801bfb8:	f105 0104 	add.w	r1, r5, #4
 801bfbc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801bfc0:	461d      	mov	r5, r3
 801bfc2:	d05a      	beq.n	801c07a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801bfc4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801bfc8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bfcc:	b2b6      	uxth	r6, r6
 801bfce:	fa1f fe8e 	uxth.w	lr, lr
 801bfd2:	9301      	str	r3, [sp, #4]
 801bfd4:	4282      	cmp	r2, r0
 801bfd6:	d96a      	bls.n	801c0ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bfd8:	eb00 0b0a 	add.w	fp, r0, sl
 801bfdc:	4583      	cmp	fp, r0
 801bfde:	d940      	bls.n	801c062 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801bfe0:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bfe4:	8805      	ldrh	r5, [r0, #0]
 801bfe6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bfea:	122f      	asrs	r7, r5, #8
 801bfec:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bff0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bff4:	fb17 f70e 	smulbb	r7, r7, lr
 801bff8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bffc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c000:	00ed      	lsls	r5, r5, #3
 801c002:	fb0c 7c06 	mla	ip, ip, r6, r7
 801c006:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c00a:	10df      	asrs	r7, r3, #3
 801c00c:	b2ed      	uxtb	r5, r5
 801c00e:	00db      	lsls	r3, r3, #3
 801c010:	fa1f fc8c 	uxth.w	ip, ip
 801c014:	fb19 f90e 	smulbb	r9, r9, lr
 801c018:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c01c:	b2db      	uxtb	r3, r3
 801c01e:	fb15 f50e 	smulbb	r5, r5, lr
 801c022:	fb07 9706 	mla	r7, r7, r6, r9
 801c026:	fb03 5306 	mla	r3, r3, r6, r5
 801c02a:	f10c 0901 	add.w	r9, ip, #1
 801c02e:	b29b      	uxth	r3, r3
 801c030:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801c034:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801c038:	f103 0c01 	add.w	ip, r3, #1
 801c03c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c040:	b2bf      	uxth	r7, r7
 801c042:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c046:	ea4c 0c09 	orr.w	ip, ip, r9
 801c04a:	f107 0901 	add.w	r9, r7, #1
 801c04e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801c052:	097f      	lsrs	r7, r7, #5
 801c054:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c058:	ea4c 0c07 	orr.w	ip, ip, r7
 801c05c:	f820 cb02 	strh.w	ip, [r0], #2
 801c060:	e7bc      	b.n	801bfdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801c062:	9b01      	ldr	r3, [sp, #4]
 801c064:	881b      	ldrh	r3, [r3, #0]
 801c066:	eba3 0308 	sub.w	r3, r3, r8
 801c06a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c06e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c072:	eba3 0308 	sub.w	r3, r3, r8
 801c076:	441c      	add	r4, r3
 801c078:	e7ac      	b.n	801bfd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801c07a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801c07e:	4282      	cmp	r2, r0
 801c080:	d915      	bls.n	801c0ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801c082:	eb00 060a 	add.w	r6, r0, sl
 801c086:	4286      	cmp	r6, r0
 801c088:	d906      	bls.n	801c098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801c08a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801c08e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801c092:	f820 3b02 	strh.w	r3, [r0], #2
 801c096:	e7f6      	b.n	801c086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801c098:	882b      	ldrh	r3, [r5, #0]
 801c09a:	eba3 0308 	sub.w	r3, r3, r8
 801c09e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c0a2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c0a6:	eba3 0308 	sub.w	r3, r3, r8
 801c0aa:	441c      	add	r4, r3
 801c0ac:	e7e7      	b.n	801c07e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801c0ae:	4b04      	ldr	r3, [pc, #16]	; (801c0c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801c0b0:	6818      	ldr	r0, [r3, #0]
 801c0b2:	6803      	ldr	r3, [r0, #0]
 801c0b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c0b6:	4798      	blx	r3
 801c0b8:	b007      	add	sp, #28
 801c0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0be:	bf00      	nop
 801c0c0:	20002c8c 	.word	0x20002c8c
 801c0c4:	20002c86 	.word	0x20002c86

0801c0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801c0c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0cc:	b091      	sub	sp, #68	; 0x44
 801c0ce:	4680      	mov	r8, r0
 801c0d0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801c0d4:	460f      	mov	r7, r1
 801c0d6:	4614      	mov	r4, r2
 801c0d8:	2d00      	cmp	r5, #0
 801c0da:	d051      	beq.n	801c180 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c0dc:	6810      	ldr	r0, [r2, #0]
 801c0de:	6851      	ldr	r1, [r2, #4]
 801c0e0:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801c2e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801c0e4:	ae0c      	add	r6, sp, #48	; 0x30
 801c0e6:	c603      	stmia	r6!, {r0, r1}
 801c0e8:	6818      	ldr	r0, [r3, #0]
 801c0ea:	6859      	ldr	r1, [r3, #4]
 801c0ec:	ae0e      	add	r6, sp, #56	; 0x38
 801c0ee:	c603      	stmia	r6!, {r0, r1}
 801c0f0:	a80c      	add	r0, sp, #48	; 0x30
 801c0f2:	f7f8 fe6d 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0f6:	4621      	mov	r1, r4
 801c0f8:	a80e      	add	r0, sp, #56	; 0x38
 801c0fa:	f7f8 fead 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c0fe:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801c102:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c106:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801c10a:	f8d9 0000 	ldr.w	r0, [r9]
 801c10e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c112:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801c116:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c11a:	eb08 0401 	add.w	r4, r8, r1
 801c11e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801c122:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801c2e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801c126:	440a      	add	r2, r1
 801c128:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801c12c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801c130:	4413      	add	r3, r2
 801c132:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801c136:	6803      	ldr	r3, [r0, #0]
 801c138:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c13a:	4798      	blx	r3
 801c13c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c140:	f8d9 0000 	ldr.w	r0, [r9]
 801c144:	d01f      	beq.n	801c186 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801c146:	2200      	movs	r2, #0
 801c148:	6801      	ldr	r1, [r0, #0]
 801c14a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c14e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c152:	220b      	movs	r2, #11
 801c154:	9207      	str	r2, [sp, #28]
 801c156:	f8b8 2000 	ldrh.w	r2, [r8]
 801c15a:	9206      	str	r2, [sp, #24]
 801c15c:	2201      	movs	r2, #1
 801c15e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801c162:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801c166:	9203      	str	r2, [sp, #12]
 801c168:	fa1f f28a 	uxth.w	r2, sl
 801c16c:	9202      	str	r2, [sp, #8]
 801c16e:	b2b6      	uxth	r6, r6
 801c170:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c174:	9200      	str	r2, [sp, #0]
 801c176:	9601      	str	r6, [sp, #4]
 801c178:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801c17a:	463a      	mov	r2, r7
 801c17c:	4621      	mov	r1, r4
 801c17e:	47a8      	blx	r5
 801c180:	b011      	add	sp, #68	; 0x44
 801c182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c186:	6803      	ldr	r3, [r0, #0]
 801c188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c18a:	4798      	blx	r3
 801c18c:	f8b8 2000 	ldrh.w	r2, [r8]
 801c190:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c194:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801c198:	2dff      	cmp	r5, #255	; 0xff
 801c19a:	fb02 1303 	mla	r3, r2, r3, r1
 801c19e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c1a2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801c1a6:	fb0a fa02 	mul.w	sl, sl, r2
 801c1aa:	d062      	beq.n	801c272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801c1ac:	ea6f 0c05 	mvn.w	ip, r5
 801c1b0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801c1b4:	930a      	str	r3, [sp, #40]	; 0x28
 801c1b6:	b2ad      	uxth	r5, r5
 801c1b8:	fa5f fc8c 	uxtb.w	ip, ip
 801c1bc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801c1c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c1c2:	4298      	cmp	r0, r3
 801c1c4:	f080 8085 	bcs.w	801c2d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c1c8:	eb00 0b09 	add.w	fp, r0, r9
 801c1cc:	4558      	cmp	r0, fp
 801c1ce:	d246      	bcs.n	801c25e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801c1d0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801c1d4:	2303      	movs	r3, #3
 801c1d6:	2204      	movs	r2, #4
 801c1d8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801c1dc:	eb07 0a0e 	add.w	sl, r7, lr
 801c1e0:	8803      	ldrh	r3, [r0, #0]
 801c1e2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801c1e6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c1ea:	1219      	asrs	r1, r3, #8
 801c1ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c1f0:	fb18 f805 	smulbb	r8, r8, r5
 801c1f4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801c1f8:	10da      	asrs	r2, r3, #3
 801c1fa:	fb01 810c 	mla	r1, r1, ip, r8
 801c1fe:	00db      	lsls	r3, r3, #3
 801c200:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c204:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c208:	b2db      	uxtb	r3, r3
 801c20a:	fb18 f805 	smulbb	r8, r8, r5
 801c20e:	fb1e fe05 	smulbb	lr, lr, r5
 801c212:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801c216:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801c21a:	b289      	uxth	r1, r1
 801c21c:	fb02 820c 	mla	r2, r2, ip, r8
 801c220:	fb03 e30c 	mla	r3, r3, ip, lr
 801c224:	b292      	uxth	r2, r2
 801c226:	b29b      	uxth	r3, r3
 801c228:	f101 0801 	add.w	r8, r1, #1
 801c22c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801c230:	f103 0e01 	add.w	lr, r3, #1
 801c234:	f102 0801 	add.w	r8, r2, #1
 801c238:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801c23c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801c240:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c244:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c248:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c24c:	ea4e 0101 	orr.w	r1, lr, r1
 801c250:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c254:	ea41 0108 	orr.w	r1, r1, r8
 801c258:	f820 1b02 	strh.w	r1, [r0], #2
 801c25c:	e7b6      	b.n	801c1cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801c25e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c260:	881b      	ldrh	r3, [r3, #0]
 801c262:	1b9b      	subs	r3, r3, r6
 801c264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c268:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c26c:	1b9b      	subs	r3, r3, r6
 801c26e:	441c      	add	r4, r3
 801c270:	e7a6      	b.n	801c1c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801c272:	491b      	ldr	r1, [pc, #108]	; (801c2e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801c274:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801c278:	2203      	movs	r2, #3
 801c27a:	2504      	movs	r5, #4
 801c27c:	4550      	cmp	r0, sl
 801c27e:	d228      	bcs.n	801c2d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c280:	eb00 0c09 	add.w	ip, r0, r9
 801c284:	4560      	cmp	r0, ip
 801c286:	4623      	mov	r3, r4
 801c288:	d219      	bcs.n	801c2be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801c28a:	f893 e000 	ldrb.w	lr, [r3]
 801c28e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801c292:	eb07 0b0e 	add.w	fp, r7, lr
 801c296:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c29a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801c29e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c2a2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801c2a6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801c2aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c2ae:	ea43 030b 	orr.w	r3, r3, fp
 801c2b2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801c2b6:	3401      	adds	r4, #1
 801c2b8:	f820 3b02 	strh.w	r3, [r0], #2
 801c2bc:	e7e2      	b.n	801c284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801c2be:	f8b8 3000 	ldrh.w	r3, [r8]
 801c2c2:	1b9b      	subs	r3, r3, r6
 801c2c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c2c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c2cc:	1b9b      	subs	r3, r3, r6
 801c2ce:	441c      	add	r4, r3
 801c2d0:	e7d4      	b.n	801c27c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801c2d2:	4b04      	ldr	r3, [pc, #16]	; (801c2e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801c2d4:	6818      	ldr	r0, [r3, #0]
 801c2d6:	6803      	ldr	r3, [r0, #0]
 801c2d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c2da:	4798      	blx	r3
 801c2dc:	e750      	b.n	801c180 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c2de:	bf00      	nop
 801c2e0:	fffff800 	.word	0xfffff800
 801c2e4:	20002c8c 	.word	0x20002c8c
 801c2e8:	20002c86 	.word	0x20002c86

0801c2ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801c2ec:	b430      	push	{r4, r5}
 801c2ee:	780d      	ldrb	r5, [r1, #0]
 801c2f0:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801c2f4:	2d01      	cmp	r5, #1
 801c2f6:	d00a      	beq.n	801c30e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801c2f8:	d305      	bcc.n	801c306 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801c2fa:	2d02      	cmp	r5, #2
 801c2fc:	d10b      	bne.n	801c316 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801c2fe:	9402      	str	r4, [sp, #8]
 801c300:	bc30      	pop	{r4, r5}
 801c302:	f7ff be15 	b.w	801bf30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801c306:	9402      	str	r4, [sp, #8]
 801c308:	bc30      	pop	{r4, r5}
 801c30a:	f7ff bd2b 	b.w	801bd64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801c30e:	9402      	str	r4, [sp, #8]
 801c310:	bc30      	pop	{r4, r5}
 801c312:	f7ff bed9 	b.w	801c0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801c316:	bc30      	pop	{r4, r5}
 801c318:	4770      	bx	lr
	...

0801c31c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801c31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c320:	4604      	mov	r4, r0
 801c322:	b087      	sub	sp, #28
 801c324:	6810      	ldr	r0, [r2, #0]
 801c326:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801c32a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801c564 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801c32e:	460e      	mov	r6, r1
 801c330:	6851      	ldr	r1, [r2, #4]
 801c332:	ad02      	add	r5, sp, #8
 801c334:	c503      	stmia	r5!, {r0, r1}
 801c336:	6818      	ldr	r0, [r3, #0]
 801c338:	6859      	ldr	r1, [r3, #4]
 801c33a:	ad04      	add	r5, sp, #16
 801c33c:	4617      	mov	r7, r2
 801c33e:	c503      	stmia	r5!, {r0, r1}
 801c340:	a802      	add	r0, sp, #8
 801c342:	f7f8 fd45 	bl	8014dd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c346:	4639      	mov	r1, r7
 801c348:	a804      	add	r0, sp, #16
 801c34a:	f7f8 fd85 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c34e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c352:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c356:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801c35a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801c35e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801c362:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c366:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801c36a:	440e      	add	r6, r1
 801c36c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c370:	440a      	add	r2, r1
 801c372:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c376:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c37a:	4413      	add	r3, r2
 801c37c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c380:	4b77      	ldr	r3, [pc, #476]	; (801c560 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c382:	6818      	ldr	r0, [r3, #0]
 801c384:	6803      	ldr	r3, [r0, #0]
 801c386:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c388:	4798      	blx	r3
 801c38a:	f8b9 b000 	ldrh.w	fp, [r9]
 801c38e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c392:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c396:	fb0b 2303 	mla	r3, fp, r3, r2
 801c39a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c39e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c3a2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c3a6:	fb05 f50b 	mul.w	r5, r5, fp
 801c3aa:	9300      	str	r3, [sp, #0]
 801c3ac:	d069      	beq.n	801c482 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801c3ae:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801c3b2:	4558      	cmp	r0, fp
 801c3b4:	f080 80cc 	bcs.w	801c550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c3b8:	9b00      	ldr	r3, [sp, #0]
 801c3ba:	18c3      	adds	r3, r0, r3
 801c3bc:	9301      	str	r3, [sp, #4]
 801c3be:	4631      	mov	r1, r6
 801c3c0:	9b01      	ldr	r3, [sp, #4]
 801c3c2:	4298      	cmp	r0, r3
 801c3c4:	d24f      	bcs.n	801c466 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801c3c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c3ca:	2a00      	cmp	r2, #0
 801c3cc:	d048      	beq.n	801c460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c3ce:	fb0a f202 	mul.w	r2, sl, r2
 801c3d2:	1c53      	adds	r3, r2, #1
 801c3d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3d8:	121b      	asrs	r3, r3, #8
 801c3da:	d041      	beq.n	801c460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c3dc:	8802      	ldrh	r2, [r0, #0]
 801c3de:	f8b4 c000 	ldrh.w	ip, [r4]
 801c3e2:	b29e      	uxth	r6, r3
 801c3e4:	1215      	asrs	r5, r2, #8
 801c3e6:	43db      	mvns	r3, r3
 801c3e8:	b2db      	uxtb	r3, r3
 801c3ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c3ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c3f2:	fb15 f503 	smulbb	r5, r5, r3
 801c3f6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801c3fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c3fe:	00d2      	lsls	r2, r2, #3
 801c400:	fb07 5706 	mla	r7, r7, r6, r5
 801c404:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c408:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c40c:	b2d2      	uxtb	r2, r2
 801c40e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c412:	b2bf      	uxth	r7, r7
 801c414:	fb1e fe03 	smulbb	lr, lr, r3
 801c418:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c41c:	fa5f fc8c 	uxtb.w	ip, ip
 801c420:	fb12 f203 	smulbb	r2, r2, r3
 801c424:	fb05 e506 	mla	r5, r5, r6, lr
 801c428:	fb0c 2c06 	mla	ip, ip, r6, r2
 801c42c:	f107 0e01 	add.w	lr, r7, #1
 801c430:	fa1f fc8c 	uxth.w	ip, ip
 801c434:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801c438:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801c43c:	f10c 0701 	add.w	r7, ip, #1
 801c440:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c444:	b2ad      	uxth	r5, r5
 801c446:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c44a:	ea47 070e 	orr.w	r7, r7, lr
 801c44e:	f105 0e01 	add.w	lr, r5, #1
 801c452:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c456:	096d      	lsrs	r5, r5, #5
 801c458:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c45c:	432f      	orrs	r7, r5
 801c45e:	8007      	strh	r7, [r0, #0]
 801c460:	3002      	adds	r0, #2
 801c462:	3402      	adds	r4, #2
 801c464:	e7ac      	b.n	801c3c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801c466:	f8b9 3000 	ldrh.w	r3, [r9]
 801c46a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c46e:	eba3 0308 	sub.w	r3, r3, r8
 801c472:	eba6 0608 	sub.w	r6, r6, r8
 801c476:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c47a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c47e:	440e      	add	r6, r1
 801c480:	e797      	b.n	801c3b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801c482:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801c486:	42a8      	cmp	r0, r5
 801c488:	d262      	bcs.n	801c550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c48a:	9b00      	ldr	r3, [sp, #0]
 801c48c:	4631      	mov	r1, r6
 801c48e:	eb00 0b03 	add.w	fp, r0, r3
 801c492:	4558      	cmp	r0, fp
 801c494:	d24e      	bcs.n	801c534 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801c496:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c49a:	b12b      	cbz	r3, 801c4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c49c:	2bff      	cmp	r3, #255	; 0xff
 801c49e:	f8b4 e000 	ldrh.w	lr, [r4]
 801c4a2:	d104      	bne.n	801c4ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801c4a4:	f8a0 e000 	strh.w	lr, [r0]
 801c4a8:	3002      	adds	r0, #2
 801c4aa:	3402      	adds	r4, #2
 801c4ac:	e7f1      	b.n	801c492 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801c4ae:	8802      	ldrh	r2, [r0, #0]
 801c4b0:	b29f      	uxth	r7, r3
 801c4b2:	1216      	asrs	r6, r2, #8
 801c4b4:	43db      	mvns	r3, r3
 801c4b6:	b2db      	uxtb	r3, r3
 801c4b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c4bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4c0:	fb16 f603 	smulbb	r6, r6, r3
 801c4c4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801c4c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c4cc:	00d2      	lsls	r2, r2, #3
 801c4ce:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c4d2:	b2d2      	uxtb	r2, r2
 801c4d4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c4d8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c4dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c4e0:	fb1a fa03 	smulbb	sl, sl, r3
 801c4e4:	fa1f fc8c 	uxth.w	ip, ip
 801c4e8:	fb12 f303 	smulbb	r3, r2, r3
 801c4ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c4f0:	fa5f fe8e 	uxtb.w	lr, lr
 801c4f4:	fb06 a607 	mla	r6, r6, r7, sl
 801c4f8:	f10c 0201 	add.w	r2, ip, #1
 801c4fc:	fb0e 3307 	mla	r3, lr, r7, r3
 801c500:	b2b6      	uxth	r6, r6
 801c502:	b29b      	uxth	r3, r3
 801c504:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c508:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801c50c:	f106 0a01 	add.w	sl, r6, #1
 801c510:	f103 0c01 	add.w	ip, r3, #1
 801c514:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c518:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c51c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c520:	0976      	lsrs	r6, r6, #5
 801c522:	ea4c 0c02 	orr.w	ip, ip, r2
 801c526:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c52a:	ea4c 0c06 	orr.w	ip, ip, r6
 801c52e:	f8a0 c000 	strh.w	ip, [r0]
 801c532:	e7b9      	b.n	801c4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c534:	f8b9 3000 	ldrh.w	r3, [r9]
 801c538:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c53c:	eba3 0308 	sub.w	r3, r3, r8
 801c540:	eba6 0608 	sub.w	r6, r6, r8
 801c544:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c548:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c54c:	440e      	add	r6, r1
 801c54e:	e79a      	b.n	801c486 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801c550:	4b03      	ldr	r3, [pc, #12]	; (801c560 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c552:	6818      	ldr	r0, [r3, #0]
 801c554:	6803      	ldr	r3, [r0, #0]
 801c556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c558:	4798      	blx	r3
 801c55a:	b007      	add	sp, #28
 801c55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c560:	20002c8c 	.word	0x20002c8c
 801c564:	20002c86 	.word	0x20002c86

0801c568 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801c568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c56c:	b089      	sub	sp, #36	; 0x24
 801c56e:	4682      	mov	sl, r0
 801c570:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801c574:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c576:	460f      	mov	r7, r1
 801c578:	4691      	mov	r9, r2
 801c57a:	4698      	mov	r8, r3
 801c57c:	2e00      	cmp	r6, #0
 801c57e:	d036      	beq.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c580:	4608      	mov	r0, r1
 801c582:	f7fc f863 	bl	801864c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c586:	4605      	mov	r5, r0
 801c588:	4638      	mov	r0, r7
 801c58a:	f7fc f893 	bl	80186b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c58e:	f8ad 000e 	strh.w	r0, [sp, #14]
 801c592:	4638      	mov	r0, r7
 801c594:	f8ad 9008 	strh.w	r9, [sp, #8]
 801c598:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c59c:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c5a0:	f7fc f940 	bl	8018824 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c5a4:	4605      	mov	r5, r0
 801c5a6:	4638      	mov	r0, r7
 801c5a8:	f7fc f96c 	bl	8018884 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801c5ac:	4681      	mov	r9, r0
 801c5ae:	4638      	mov	r0, r7
 801c5b0:	f7fc f9bc 	bl	801892c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c5b4:	280b      	cmp	r0, #11
 801c5b6:	d81a      	bhi.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c5b8:	e8df f000 	tbb	[pc, r0]
 801c5bc:	1906aebd 	.word	0x1906aebd
 801c5c0:	19191919 	.word	0x19191919
 801c5c4:	b5191919 	.word	0xb5191919
 801c5c8:	4bb0      	ldr	r3, [pc, #704]	; (801c88c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801c5ca:	6818      	ldr	r0, [r3, #0]
 801c5cc:	6803      	ldr	r3, [r0, #0]
 801c5ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c5d0:	4798      	blx	r3
 801c5d2:	2eff      	cmp	r6, #255	; 0xff
 801c5d4:	d121      	bne.n	801c61a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801c5d6:	0683      	lsls	r3, r0, #26
 801c5d8:	d41f      	bmi.n	801c61a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801c5da:	4638      	mov	r0, r7
 801c5dc:	f7fc f8ea 	bl	80187b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c5e0:	b940      	cbnz	r0, 801c5f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801c5e2:	4623      	mov	r3, r4
 801c5e4:	aa02      	add	r2, sp, #8
 801c5e6:	4629      	mov	r1, r5
 801c5e8:	4650      	mov	r0, sl
 801c5ea:	f7ff fa2f 	bl	801ba4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c5ee:	b009      	add	sp, #36	; 0x24
 801c5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5f4:	f10d 0818 	add.w	r8, sp, #24
 801c5f8:	4639      	mov	r1, r7
 801c5fa:	4640      	mov	r0, r8
 801c5fc:	f7fc f88e 	bl	801871c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c600:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c604:	af04      	add	r7, sp, #16
 801c606:	e887 0003 	stmia.w	r7, {r0, r1}
 801c60a:	4638      	mov	r0, r7
 801c60c:	4621      	mov	r1, r4
 801c60e:	f7f4 f86d 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801c612:	4638      	mov	r0, r7
 801c614:	f7f4 f8ad 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c618:	b130      	cbz	r0, 801c628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801c61a:	4633      	mov	r3, r6
 801c61c:	4622      	mov	r2, r4
 801c61e:	a902      	add	r1, sp, #8
 801c620:	4628      	mov	r0, r5
 801c622:	f7ff f92d 	bl	801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c626:	e7e2      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c628:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c62c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c630:	4293      	cmp	r3, r2
 801c632:	dd12      	ble.n	801c65a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 801c634:	1a9b      	subs	r3, r3, r2
 801c636:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c63a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c63e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c642:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c646:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c64a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c64e:	4642      	mov	r2, r8
 801c650:	4633      	mov	r3, r6
 801c652:	a902      	add	r1, sp, #8
 801c654:	4628      	mov	r0, r5
 801c656:	f7ff f913 	bl	801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c65a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c65e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c662:	4293      	cmp	r3, r2
 801c664:	dd12      	ble.n	801c68c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801c666:	1a9b      	subs	r3, r3, r2
 801c668:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c66c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c670:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c674:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c678:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c67c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c680:	23ff      	movs	r3, #255	; 0xff
 801c682:	4642      	mov	r2, r8
 801c684:	a902      	add	r1, sp, #8
 801c686:	4628      	mov	r0, r5
 801c688:	f7ff f8fa 	bl	801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c68c:	463b      	mov	r3, r7
 801c68e:	aa02      	add	r2, sp, #8
 801c690:	4629      	mov	r1, r5
 801c692:	4650      	mov	r0, sl
 801c694:	f7ff f9da 	bl	801ba4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c698:	88a2      	ldrh	r2, [r4, #4]
 801c69a:	8823      	ldrh	r3, [r4, #0]
 801c69c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c6a0:	4413      	add	r3, r2
 801c6a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c6a6:	440a      	add	r2, r1
 801c6a8:	b29b      	uxth	r3, r3
 801c6aa:	b292      	uxth	r2, r2
 801c6ac:	b211      	sxth	r1, r2
 801c6ae:	b218      	sxth	r0, r3
 801c6b0:	4288      	cmp	r0, r1
 801c6b2:	dd12      	ble.n	801c6da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 801c6b4:	1a9b      	subs	r3, r3, r2
 801c6b6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c6ba:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801c6be:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c6c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c6c6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c6ca:	23ff      	movs	r3, #255	; 0xff
 801c6cc:	4642      	mov	r2, r8
 801c6ce:	a902      	add	r1, sp, #8
 801c6d0:	4628      	mov	r0, r5
 801c6d2:	f8ad 601a 	strh.w	r6, [sp, #26]
 801c6d6:	f7ff f8d3 	bl	801b880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c6da:	88e2      	ldrh	r2, [r4, #6]
 801c6dc:	8863      	ldrh	r3, [r4, #2]
 801c6de:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c6e2:	4413      	add	r3, r2
 801c6e4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c6e8:	440a      	add	r2, r1
 801c6ea:	b29b      	uxth	r3, r3
 801c6ec:	b292      	uxth	r2, r2
 801c6ee:	b211      	sxth	r1, r2
 801c6f0:	b218      	sxth	r0, r3
 801c6f2:	4288      	cmp	r0, r1
 801c6f4:	f77f af7b 	ble.w	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c6f8:	1a9b      	subs	r3, r3, r2
 801c6fa:	f9b4 6000 	ldrsh.w	r6, [r4]
 801c6fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c702:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c706:	f8ad 6018 	strh.w	r6, [sp, #24]
 801c70a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c70e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c712:	23ff      	movs	r3, #255	; 0xff
 801c714:	4642      	mov	r2, r8
 801c716:	e782      	b.n	801c61e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801c718:	4633      	mov	r3, r6
 801c71a:	4622      	mov	r2, r4
 801c71c:	a902      	add	r1, sp, #8
 801c71e:	4628      	mov	r0, r5
 801c720:	f7ff fa04 	bl	801bb2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801c724:	e763      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c726:	9600      	str	r6, [sp, #0]
 801c728:	4623      	mov	r3, r4
 801c72a:	aa02      	add	r2, sp, #8
 801c72c:	4649      	mov	r1, r9
 801c72e:	4628      	mov	r0, r5
 801c730:	f7ff fddc 	bl	801c2ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801c734:	e75b      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c736:	4638      	mov	r0, r7
 801c738:	f7fc f83c 	bl	80187b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c73c:	b950      	cbnz	r0, 801c754 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 801c73e:	e9cd 6000 	strd	r6, r0, [sp]
 801c742:	f8da 3000 	ldr.w	r3, [sl]
 801c746:	aa02      	add	r2, sp, #8
 801c748:	68de      	ldr	r6, [r3, #12]
 801c74a:	4629      	mov	r1, r5
 801c74c:	4623      	mov	r3, r4
 801c74e:	4650      	mov	r0, sl
 801c750:	47b0      	blx	r6
 801c752:	e74c      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c754:	f10d 0818 	add.w	r8, sp, #24
 801c758:	4639      	mov	r1, r7
 801c75a:	4640      	mov	r0, r8
 801c75c:	f7fb ffde 	bl	801871c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c760:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c764:	af04      	add	r7, sp, #16
 801c766:	e887 0003 	stmia.w	r7, {r0, r1}
 801c76a:	4638      	mov	r0, r7
 801c76c:	4621      	mov	r1, r4
 801c76e:	f7f3 ffbd 	bl	80106ec <_ZN8touchgfx4RectaNERKS0_>
 801c772:	4638      	mov	r0, r7
 801c774:	f7f3 fffd 	bl	8010772 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c778:	b138      	cbz	r0, 801c78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801c77a:	9600      	str	r6, [sp, #0]
 801c77c:	4623      	mov	r3, r4
 801c77e:	aa02      	add	r2, sp, #8
 801c780:	4649      	mov	r1, r9
 801c782:	4628      	mov	r0, r5
 801c784:	f7ff fdca 	bl	801c31c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c788:	e731      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c78a:	e9cd 6000 	strd	r6, r0, [sp]
 801c78e:	f8da 3000 	ldr.w	r3, [sl]
 801c792:	aa02      	add	r2, sp, #8
 801c794:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801c798:	4629      	mov	r1, r5
 801c79a:	463b      	mov	r3, r7
 801c79c:	4650      	mov	r0, sl
 801c79e:	47d8      	blx	fp
 801c7a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c7a4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c7a8:	4293      	cmp	r3, r2
 801c7aa:	dd13      	ble.n	801c7d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 801c7ac:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c7b0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c7b4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c7b8:	1a9b      	subs	r3, r3, r2
 801c7ba:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c7be:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c7c2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c7c6:	9600      	str	r6, [sp, #0]
 801c7c8:	4643      	mov	r3, r8
 801c7ca:	aa02      	add	r2, sp, #8
 801c7cc:	4649      	mov	r1, r9
 801c7ce:	4628      	mov	r0, r5
 801c7d0:	f7ff fda4 	bl	801c31c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c7d4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c7d8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c7dc:	4293      	cmp	r3, r2
 801c7de:	dd13      	ble.n	801c808 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 801c7e0:	1a9b      	subs	r3, r3, r2
 801c7e2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c7e6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c7ea:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c7ee:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c7f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c7f6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c7fa:	9600      	str	r6, [sp, #0]
 801c7fc:	4643      	mov	r3, r8
 801c7fe:	aa02      	add	r2, sp, #8
 801c800:	4649      	mov	r1, r9
 801c802:	4628      	mov	r0, r5
 801c804:	f7ff fd8a 	bl	801c31c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c808:	88a2      	ldrh	r2, [r4, #4]
 801c80a:	8823      	ldrh	r3, [r4, #0]
 801c80c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c810:	4413      	add	r3, r2
 801c812:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c816:	440a      	add	r2, r1
 801c818:	b29b      	uxth	r3, r3
 801c81a:	b292      	uxth	r2, r2
 801c81c:	b211      	sxth	r1, r2
 801c81e:	b218      	sxth	r0, r3
 801c820:	4288      	cmp	r0, r1
 801c822:	dd13      	ble.n	801c84c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 801c824:	1a9b      	subs	r3, r3, r2
 801c826:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c82a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801c82e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c832:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c836:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c83a:	9600      	str	r6, [sp, #0]
 801c83c:	4643      	mov	r3, r8
 801c83e:	aa02      	add	r2, sp, #8
 801c840:	4649      	mov	r1, r9
 801c842:	4628      	mov	r0, r5
 801c844:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c848:	f7ff fd68 	bl	801c31c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c84c:	88e2      	ldrh	r2, [r4, #6]
 801c84e:	8863      	ldrh	r3, [r4, #2]
 801c850:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c854:	4413      	add	r3, r2
 801c856:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c85a:	440a      	add	r2, r1
 801c85c:	b29b      	uxth	r3, r3
 801c85e:	b292      	uxth	r2, r2
 801c860:	b211      	sxth	r1, r2
 801c862:	b218      	sxth	r0, r3
 801c864:	4288      	cmp	r0, r1
 801c866:	f77f aec2 	ble.w	801c5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801c86a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801c86e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c872:	f8ad 7018 	strh.w	r7, [sp, #24]
 801c876:	1a9b      	subs	r3, r3, r2
 801c878:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c87c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c880:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c884:	9600      	str	r6, [sp, #0]
 801c886:	4643      	mov	r3, r8
 801c888:	e779      	b.n	801c77e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801c88a:	bf00      	nop
 801c88c:	20002c8c 	.word	0x20002c8c

0801c890 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801c890:	b180      	cbz	r0, 801c8b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801c892:	2903      	cmp	r1, #3
 801c894:	d81c      	bhi.n	801c8d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c896:	e8df f001 	tbb	[pc, r1]
 801c89a:	1d02      	.short	0x1d02
 801c89c:	1f08      	.short	0x1f08
 801c89e:	4b10      	ldr	r3, [pc, #64]	; (801c8e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c8a0:	8818      	ldrh	r0, [r3, #0]
 801c8a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8a6:	4240      	negs	r0, r0
 801c8a8:	4770      	bx	lr
 801c8aa:	4b0d      	ldr	r3, [pc, #52]	; (801c8e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c8ac:	8818      	ldrh	r0, [r3, #0]
 801c8ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8b2:	4770      	bx	lr
 801c8b4:	2903      	cmp	r1, #3
 801c8b6:	d80b      	bhi.n	801c8d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c8b8:	a301      	add	r3, pc, #4	; (adr r3, 801c8c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801c8ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c8be:	bf00      	nop
 801c8c0:	0801c8d5 	.word	0x0801c8d5
 801c8c4:	0801c8ab 	.word	0x0801c8ab
 801c8c8:	0801c8d9 	.word	0x0801c8d9
 801c8cc:	0801c89f 	.word	0x0801c89f
 801c8d0:	2000      	movs	r0, #0
 801c8d2:	4770      	bx	lr
 801c8d4:	2001      	movs	r0, #1
 801c8d6:	4770      	bx	lr
 801c8d8:	f04f 30ff 	mov.w	r0, #4294967295
 801c8dc:	4770      	bx	lr
 801c8de:	bf00      	nop
 801c8e0:	20002c86 	.word	0x20002c86

0801c8e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801c8e4:	b180      	cbz	r0, 801c908 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801c8e6:	2903      	cmp	r1, #3
 801c8e8:	d81c      	bhi.n	801c924 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c8ea:	e8df f001 	tbb	[pc, r1]
 801c8ee:	021d      	.short	0x021d
 801c8f0:	071f      	.short	0x071f
 801c8f2:	4b10      	ldr	r3, [pc, #64]	; (801c934 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c8f4:	8818      	ldrh	r0, [r3, #0]
 801c8f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8fa:	4770      	bx	lr
 801c8fc:	4b0d      	ldr	r3, [pc, #52]	; (801c934 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c8fe:	8818      	ldrh	r0, [r3, #0]
 801c900:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c904:	4240      	negs	r0, r0
 801c906:	4770      	bx	lr
 801c908:	2903      	cmp	r1, #3
 801c90a:	d80b      	bhi.n	801c924 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c90c:	a301      	add	r3, pc, #4	; (adr r3, 801c914 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801c90e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c912:	bf00      	nop
 801c914:	0801c8f3 	.word	0x0801c8f3
 801c918:	0801c92d 	.word	0x0801c92d
 801c91c:	0801c8fd 	.word	0x0801c8fd
 801c920:	0801c929 	.word	0x0801c929
 801c924:	2000      	movs	r0, #0
 801c926:	4770      	bx	lr
 801c928:	2001      	movs	r0, #1
 801c92a:	4770      	bx	lr
 801c92c:	f04f 30ff 	mov.w	r0, #4294967295
 801c930:	4770      	bx	lr
 801c932:	bf00      	nop
 801c934:	20002c86 	.word	0x20002c86

0801c938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c93c:	b099      	sub	sp, #100	; 0x64
 801c93e:	910b      	str	r1, [sp, #44]	; 0x2c
 801c940:	a914      	add	r1, sp, #80	; 0x50
 801c942:	e881 000c 	stmia.w	r1, {r2, r3}
 801c946:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801c94a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801c94e:	f891 900d 	ldrb.w	r9, [r1, #13]
 801c952:	9309      	str	r3, [sp, #36]	; 0x24
 801c954:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c958:	9310      	str	r3, [sp, #64]	; 0x40
 801c95a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801c95e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801c962:	930c      	str	r3, [sp, #48]	; 0x30
 801c964:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801c968:	798f      	ldrb	r7, [r1, #6]
 801c96a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801c96e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801c972:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801c976:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801c97a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801c97e:	431f      	orrs	r7, r3
 801c980:	f000 8195 	beq.w	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c984:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801c988:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801c98c:	f891 9007 	ldrb.w	r9, [r1, #7]
 801c990:	ea59 0903 	orrs.w	r9, r9, r3
 801c994:	f000 818b 	beq.w	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c998:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801c99c:	b29b      	uxth	r3, r3
 801c99e:	2d00      	cmp	r5, #0
 801c9a0:	f000 812e 	beq.w	801cc00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801c9a4:	1aed      	subs	r5, r5, r3
 801c9a6:	b2ad      	uxth	r5, r5
 801c9a8:	042b      	lsls	r3, r5, #16
 801c9aa:	d502      	bpl.n	801c9b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801c9ac:	1b64      	subs	r4, r4, r5
 801c9ae:	b224      	sxth	r4, r4
 801c9b0:	2500      	movs	r5, #0
 801c9b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 801c9b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801c9ba:	428c      	cmp	r4, r1
 801c9bc:	b28b      	uxth	r3, r1
 801c9be:	bfbf      	itttt	lt
 801c9c0:	18ed      	addlt	r5, r5, r3
 801c9c2:	1b2c      	sublt	r4, r5, r4
 801c9c4:	b2a5      	uxthlt	r5, r4
 801c9c6:	460c      	movlt	r4, r1
 801c9c8:	8891      	ldrh	r1, [r2, #4]
 801c9ca:	440b      	add	r3, r1
 801c9cc:	b21b      	sxth	r3, r3
 801c9ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801c9d0:	88d3      	ldrh	r3, [r2, #6]
 801c9d2:	8852      	ldrh	r2, [r2, #2]
 801c9d4:	4413      	add	r3, r2
 801c9d6:	b21b      	sxth	r3, r3
 801c9d8:	930d      	str	r3, [sp, #52]	; 0x34
 801c9da:	4bbe      	ldr	r3, [pc, #760]	; (801ccd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801c9dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c9de:	f893 b000 	ldrb.w	fp, [r3]
 801c9e2:	f10b 3cff 	add.w	ip, fp, #4294967295
 801c9e6:	f1dc 0300 	rsbs	r3, ip, #0
 801c9ea:	eb43 030c 	adc.w	r3, r3, ip
 801c9ee:	930e      	str	r3, [sp, #56]	; 0x38
 801c9f0:	4621      	mov	r1, r4
 801c9f2:	4653      	mov	r3, sl
 801c9f4:	a814      	add	r0, sp, #80	; 0x50
 801c9f6:	f7f8 f865 	bl	8014ac4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c9fa:	4621      	mov	r1, r4
 801c9fc:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ca00:	4653      	mov	r3, sl
 801ca02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ca04:	a814      	add	r0, sp, #80	; 0x50
 801ca06:	f7f8 f87a 	bl	8014afe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ca0a:	a918      	add	r1, sp, #96	; 0x60
 801ca0c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ca10:	a817      	add	r0, sp, #92	; 0x5c
 801ca12:	f7f8 f99b 	bl	8014d4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ca16:	f1ba 0f00 	cmp.w	sl, #0
 801ca1a:	f040 80f4 	bne.w	801cc06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ca1e:	f1bb 0f01 	cmp.w	fp, #1
 801ca22:	f040 80f8 	bne.w	801cc16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ca26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca28:	2b00      	cmp	r3, #0
 801ca2a:	f040 8145 	bne.w	801ccb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ca2e:	b2ba      	uxth	r2, r7
 801ca30:	b905      	cbnz	r5, 801ca34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ca32:	b16e      	cbz	r6, 801ca50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801ca34:	fb06 5302 	mla	r3, r6, r2, r5
 801ca38:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801ca3a:	fb08 f303 	mul.w	r3, r8, r3
 801ca3e:	4631      	mov	r1, r6
 801ca40:	f003 0607 	and.w	r6, r3, #7
 801ca44:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ca48:	9328      	str	r3, [sp, #160]	; 0xa0
 801ca4a:	eba9 0301 	sub.w	r3, r9, r1
 801ca4e:	930a      	str	r3, [sp, #40]	; 0x28
 801ca50:	4651      	mov	r1, sl
 801ca52:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ca54:	f7ff ff1c 	bl	801c890 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ca58:	4681      	mov	r9, r0
 801ca5a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ca5c:	f7ff ff42 	bl	801c8e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ca60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ca62:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ca64:	eba3 0a01 	sub.w	sl, r3, r1
 801ca68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca6a:	459a      	cmp	sl, r3
 801ca6c:	bfa8      	it	ge
 801ca6e:	469a      	movge	sl, r3
 801ca70:	f1ba 0f00 	cmp.w	sl, #0
 801ca74:	4683      	mov	fp, r0
 801ca76:	f340 811a 	ble.w	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ca7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ca7c:	1b64      	subs	r4, r4, r5
 801ca7e:	1b1c      	subs	r4, r3, r4
 801ca80:	42bc      	cmp	r4, r7
 801ca82:	bfd4      	ite	le
 801ca84:	ebc5 0504 	rsble	r5, r5, r4
 801ca88:	ebc5 0507 	rsbgt	r5, r5, r7
 801ca8c:	2d00      	cmp	r5, #0
 801ca8e:	f340 810e 	ble.w	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ca92:	1b52      	subs	r2, r2, r5
 801ca94:	fb08 f302 	mul.w	r3, r8, r2
 801ca98:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ca9c:	2b00      	cmp	r3, #0
 801ca9e:	f040 8116 	bne.w	801ccce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801caa2:	4b8d      	ldr	r3, [pc, #564]	; (801ccd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801caa4:	6818      	ldr	r0, [r3, #0]
 801caa6:	6803      	ldr	r3, [r0, #0]
 801caa8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caaa:	4798      	blx	r3
 801caac:	2301      	movs	r3, #1
 801caae:	fa03 f308 	lsl.w	r3, r3, r8
 801cab2:	4a8a      	ldr	r2, [pc, #552]	; (801ccdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801cab4:	3b01      	subs	r3, #1
 801cab6:	b2db      	uxtb	r3, r3
 801cab8:	8811      	ldrh	r1, [r2, #0]
 801caba:	930e      	str	r3, [sp, #56]	; 0x38
 801cabc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801cac0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801cac4:	fb01 2303 	mla	r3, r1, r3, r2
 801cac8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cacc:	930a      	str	r3, [sp, #40]	; 0x28
 801cace:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cad0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801cad4:	9313      	str	r3, [sp, #76]	; 0x4c
 801cad6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cad8:	0a19      	lsrs	r1, r3, #8
 801cada:	b2cb      	uxtb	r3, r1
 801cadc:	9312      	str	r3, [sp, #72]	; 0x48
 801cade:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cae0:	b2db      	uxtb	r3, r3
 801cae2:	9311      	str	r3, [sp, #68]	; 0x44
 801cae4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cae6:	095a      	lsrs	r2, r3, #5
 801cae8:	4b7d      	ldr	r3, [pc, #500]	; (801cce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801caea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801caee:	400b      	ands	r3, r1
 801caf0:	4313      	orrs	r3, r2
 801caf2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801caf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801caf8:	4313      	orrs	r3, r2
 801cafa:	b29b      	uxth	r3, r3
 801cafc:	9310      	str	r3, [sp, #64]	; 0x40
 801cafe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb00:	781a      	ldrb	r2, [r3, #0]
 801cb02:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801cb06:	4132      	asrs	r2, r6
 801cb08:	fb05 b919 	mls	r9, r5, r9, fp
 801cb0c:	fb03 fb05 	mul.w	fp, r3, r5
 801cb10:	b2d2      	uxtb	r2, r2
 801cb12:	930d      	str	r3, [sp, #52]	; 0x34
 801cb14:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801cb18:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801cb1c:	f0c0 80f5 	bcc.w	801cd0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801cb20:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801cb24:	46ae      	mov	lr, r5
 801cb26:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801cb2a:	f0c0 80dd 	bcc.w	801cce8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801cb2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb30:	4013      	ands	r3, r2
 801cb32:	d055      	beq.n	801cbe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801cb34:	20ff      	movs	r0, #255	; 0xff
 801cb36:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb38:	fb90 f1f1 	sdiv	r1, r0, r1
 801cb3c:	434b      	muls	r3, r1
 801cb3e:	2bfe      	cmp	r3, #254	; 0xfe
 801cb40:	dd03      	ble.n	801cb4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801cb42:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cb44:	4281      	cmp	r1, r0
 801cb46:	f000 80cd 	beq.w	801cce4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801cb4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cb4c:	f8bc 4000 	ldrh.w	r4, [ip]
 801cb50:	fb11 f303 	smulbb	r3, r1, r3
 801cb54:	b29b      	uxth	r3, r3
 801cb56:	1c59      	adds	r1, r3, #1
 801cb58:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cb5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb60:	b29f      	uxth	r7, r3
 801cb62:	43db      	mvns	r3, r3
 801cb64:	b2db      	uxtb	r3, r3
 801cb66:	9309      	str	r3, [sp, #36]	; 0x24
 801cb68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cb6a:	1220      	asrs	r0, r4, #8
 801cb6c:	fb13 f907 	smulbb	r9, r3, r7
 801cb70:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cb74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb76:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801cb7a:	fb00 9003 	mla	r0, r0, r3, r9
 801cb7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801cb80:	10e1      	asrs	r1, r4, #3
 801cb82:	fb13 f907 	smulbb	r9, r3, r7
 801cb86:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cb8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb8c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cb90:	fb01 9103 	mla	r1, r1, r3, r9
 801cb94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cb96:	00e4      	lsls	r4, r4, #3
 801cb98:	fb13 f707 	smulbb	r7, r3, r7
 801cb9c:	b2e4      	uxtb	r4, r4
 801cb9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cba0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cba4:	fb04 7403 	mla	r4, r4, r3, r7
 801cba8:	b280      	uxth	r0, r0
 801cbaa:	b2a4      	uxth	r4, r4
 801cbac:	1c43      	adds	r3, r0, #1
 801cbae:	f104 0901 	add.w	r9, r4, #1
 801cbb2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cbb6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801cbba:	b289      	uxth	r1, r1
 801cbbc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801cbc0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cbc4:	ea49 0000 	orr.w	r0, r9, r0
 801cbc8:	f101 0901 	add.w	r9, r1, #1
 801cbcc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801cbd0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cbd4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cbd8:	ea40 0009 	orr.w	r0, r0, r9
 801cbdc:	f8ac 0000 	strh.w	r0, [ip]
 801cbe0:	4446      	add	r6, r8
 801cbe2:	b2b6      	uxth	r6, r6
 801cbe4:	2e07      	cmp	r6, #7
 801cbe6:	bf81      	itttt	hi
 801cbe8:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801cbea:	785a      	ldrbhi	r2, [r3, #1]
 801cbec:	3301      	addhi	r3, #1
 801cbee:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801cbf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cbf2:	bf9a      	itte	ls
 801cbf4:	fa42 f208 	asrls.w	r2, r2, r8
 801cbf8:	b2d2      	uxtbls	r2, r2
 801cbfa:	2600      	movhi	r6, #0
 801cbfc:	449c      	add	ip, r3
 801cbfe:	e792      	b.n	801cb26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801cc00:	441c      	add	r4, r3
 801cc02:	b224      	sxth	r4, r4
 801cc04:	e6d5      	b.n	801c9b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801cc06:	f1ba 0f01 	cmp.w	sl, #1
 801cc0a:	f47f af0c 	bne.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc0e:	f1bb 0f01 	cmp.w	fp, #1
 801cc12:	f47f af08 	bne.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc16:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ccd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801cc1a:	f8db 0000 	ldr.w	r0, [fp]
 801cc1e:	6803      	ldr	r3, [r0, #0]
 801cc20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc22:	4798      	blx	r3
 801cc24:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801cc28:	465a      	mov	r2, fp
 801cc2a:	d006      	beq.n	801cc3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801cc2c:	f1b8 0f04 	cmp.w	r8, #4
 801cc30:	d140      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801cc32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc34:	3300      	adds	r3, #0
 801cc36:	bf18      	it	ne
 801cc38:	2301      	movne	r3, #1
 801cc3a:	0580      	lsls	r0, r0, #22
 801cc3c:	d56e      	bpl.n	801cd1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cc3e:	f1b8 0f08 	cmp.w	r8, #8
 801cc42:	d16b      	bne.n	801cd1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cc44:	2b00      	cmp	r3, #0
 801cc46:	bf0c      	ite	eq
 801cc48:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801cc4c:	f44f 7180 	movne.w	r1, #256	; 0x100
 801cc50:	2d00      	cmp	r5, #0
 801cc52:	f47f aee8 	bne.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc56:	2e00      	cmp	r6, #0
 801cc58:	f47f aee5 	bne.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc5c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cc5e:	19e3      	adds	r3, r4, r7
 801cc60:	4283      	cmp	r3, r0
 801cc62:	f73f aee0 	bgt.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc68:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cc6a:	444b      	add	r3, r9
 801cc6c:	4283      	cmp	r3, r0
 801cc6e:	f73f aeda 	bgt.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc72:	6810      	ldr	r0, [r2, #0]
 801cc74:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801cc78:	6804      	ldr	r4, [r0, #0]
 801cc7a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801cc7e:	b2bf      	uxth	r7, r7
 801cc80:	f1b8 0f08 	cmp.w	r8, #8
 801cc84:	f04f 0500 	mov.w	r5, #0
 801cc88:	bf18      	it	ne
 801cc8a:	3701      	addne	r7, #1
 801cc8c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801cc90:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cc92:	9104      	str	r1, [sp, #16]
 801cc94:	bf18      	it	ne
 801cc96:	f027 0701 	bicne.w	r7, r7, #1
 801cc9a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801cc9c:	bf18      	it	ne
 801cc9e:	b2bf      	uxthne	r7, r7
 801cca0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801cca4:	e9cd 7900 	strd	r7, r9, [sp]
 801cca8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ccaa:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ccac:	47a0      	blx	r4
 801ccae:	b019      	add	sp, #100	; 0x64
 801ccb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccb4:	2300      	movs	r3, #0
 801ccb6:	e7c0      	b.n	801cc3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ccb8:	2208      	movs	r2, #8
 801ccba:	fb92 f3f8 	sdiv	r3, r2, r8
 801ccbe:	1e5a      	subs	r2, r3, #1
 801ccc0:	443a      	add	r2, r7
 801ccc2:	fb92 f2f3 	sdiv	r2, r2, r3
 801ccc6:	fb12 f203 	smulbb	r2, r2, r3
 801ccca:	b292      	uxth	r2, r2
 801cccc:	e6b0      	b.n	801ca30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ccce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ccd0:	e6ec      	b.n	801caac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ccd2:	bf00      	nop
 801ccd4:	20002c84 	.word	0x20002c84
 801ccd8:	20002c8c 	.word	0x20002c8c
 801ccdc:	20002c86 	.word	0x20002c86
 801cce0:	00fff800 	.word	0x00fff800
 801cce4:	9810      	ldr	r0, [sp, #64]	; 0x40
 801cce6:	e779      	b.n	801cbdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801cce8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ccea:	b153      	cbz	r3, 801cd02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ccec:	441e      	add	r6, r3
 801ccee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ccf0:	b2b6      	uxth	r6, r6
 801ccf2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ccf6:	f006 0607 	and.w	r6, r6, #7
 801ccfa:	781a      	ldrb	r2, [r3, #0]
 801ccfc:	9328      	str	r3, [sp, #160]	; 0xa0
 801ccfe:	4132      	asrs	r2, r6
 801cd00:	b2d2      	uxtb	r2, r2
 801cd02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd04:	445b      	add	r3, fp
 801cd06:	930a      	str	r3, [sp, #40]	; 0x28
 801cd08:	e706      	b.n	801cb18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801cd0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cd0c:	2b00      	cmp	r3, #0
 801cd0e:	d1ce      	bne.n	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cd10:	4b05      	ldr	r3, [pc, #20]	; (801cd28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801cd12:	6818      	ldr	r0, [r3, #0]
 801cd14:	6803      	ldr	r3, [r0, #0]
 801cd16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd18:	4798      	blx	r3
 801cd1a:	e7c8      	b.n	801ccae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cd1c:	2b00      	cmp	r3, #0
 801cd1e:	f43f ae82 	beq.w	801ca26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cd22:	f44f 7180 	mov.w	r1, #256	; 0x100
 801cd26:	e793      	b.n	801cc50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801cd28:	20002c8c 	.word	0x20002c8c

0801cd2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801cd2c:	b538      	push	{r3, r4, r5, lr}
 801cd2e:	4c15      	ldr	r4, [pc, #84]	; (801cd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801cd30:	7823      	ldrb	r3, [r4, #0]
 801cd32:	f3bf 8f5b 	dmb	ish
 801cd36:	07da      	lsls	r2, r3, #31
 801cd38:	4605      	mov	r5, r0
 801cd3a:	d40b      	bmi.n	801cd54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801cd3c:	4620      	mov	r0, r4
 801cd3e:	f007 fa60 	bl	8024202 <__cxa_guard_acquire>
 801cd42:	b138      	cbz	r0, 801cd54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801cd44:	4620      	mov	r0, r4
 801cd46:	f007 fa68 	bl	802421a <__cxa_guard_release>
 801cd4a:	4a0f      	ldr	r2, [pc, #60]	; (801cd88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cd4c:	490f      	ldr	r1, [pc, #60]	; (801cd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801cd4e:	4810      	ldr	r0, [pc, #64]	; (801cd90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cd50:	f007 fa50 	bl	80241f4 <__aeabi_atexit>
 801cd54:	4c0f      	ldr	r4, [pc, #60]	; (801cd94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801cd56:	7823      	ldrb	r3, [r4, #0]
 801cd58:	f3bf 8f5b 	dmb	ish
 801cd5c:	07db      	lsls	r3, r3, #31
 801cd5e:	d40b      	bmi.n	801cd78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cd60:	4620      	mov	r0, r4
 801cd62:	f007 fa4e 	bl	8024202 <__cxa_guard_acquire>
 801cd66:	b138      	cbz	r0, 801cd78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cd68:	4620      	mov	r0, r4
 801cd6a:	f007 fa56 	bl	802421a <__cxa_guard_release>
 801cd6e:	4a06      	ldr	r2, [pc, #24]	; (801cd88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cd70:	4909      	ldr	r1, [pc, #36]	; (801cd98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801cd72:	480a      	ldr	r0, [pc, #40]	; (801cd9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cd74:	f007 fa3e 	bl	80241f4 <__aeabi_atexit>
 801cd78:	4b05      	ldr	r3, [pc, #20]	; (801cd90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cd7a:	612b      	str	r3, [r5, #16]
 801cd7c:	4b07      	ldr	r3, [pc, #28]	; (801cd9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cd7e:	616b      	str	r3, [r5, #20]
 801cd80:	bd38      	pop	{r3, r4, r5, pc}
 801cd82:	bf00      	nop
 801cd84:	20002d58 	.word	0x20002d58
 801cd88:	20000000 	.word	0x20000000
 801cd8c:	0801af3d 	.word	0x0801af3d
 801cd90:	200001b8 	.word	0x200001b8
 801cd94:	20002d5c 	.word	0x20002d5c
 801cd98:	0801af3b 	.word	0x0801af3b
 801cd9c:	200001bc 	.word	0x200001bc

0801cda0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801cda0:	b538      	push	{r3, r4, r5, lr}
 801cda2:	4c15      	ldr	r4, [pc, #84]	; (801cdf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801cda4:	7823      	ldrb	r3, [r4, #0]
 801cda6:	f3bf 8f5b 	dmb	ish
 801cdaa:	07da      	lsls	r2, r3, #31
 801cdac:	4605      	mov	r5, r0
 801cdae:	d40b      	bmi.n	801cdc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cdb0:	4620      	mov	r0, r4
 801cdb2:	f007 fa26 	bl	8024202 <__cxa_guard_acquire>
 801cdb6:	b138      	cbz	r0, 801cdc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cdb8:	4620      	mov	r0, r4
 801cdba:	f007 fa2e 	bl	802421a <__cxa_guard_release>
 801cdbe:	4a0f      	ldr	r2, [pc, #60]	; (801cdfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cdc0:	490f      	ldr	r1, [pc, #60]	; (801ce00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801cdc2:	4810      	ldr	r0, [pc, #64]	; (801ce04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cdc4:	f007 fa16 	bl	80241f4 <__aeabi_atexit>
 801cdc8:	4c0f      	ldr	r4, [pc, #60]	; (801ce08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801cdca:	7823      	ldrb	r3, [r4, #0]
 801cdcc:	f3bf 8f5b 	dmb	ish
 801cdd0:	07db      	lsls	r3, r3, #31
 801cdd2:	d40b      	bmi.n	801cdec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cdd4:	4620      	mov	r0, r4
 801cdd6:	f007 fa14 	bl	8024202 <__cxa_guard_acquire>
 801cdda:	b138      	cbz	r0, 801cdec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cddc:	4620      	mov	r0, r4
 801cdde:	f007 fa1c 	bl	802421a <__cxa_guard_release>
 801cde2:	4a06      	ldr	r2, [pc, #24]	; (801cdfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cde4:	4909      	ldr	r1, [pc, #36]	; (801ce0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801cde6:	480a      	ldr	r0, [pc, #40]	; (801ce10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cde8:	f007 fa04 	bl	80241f4 <__aeabi_atexit>
 801cdec:	4b05      	ldr	r3, [pc, #20]	; (801ce04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cdee:	60ab      	str	r3, [r5, #8]
 801cdf0:	4b07      	ldr	r3, [pc, #28]	; (801ce10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cdf2:	60eb      	str	r3, [r5, #12]
 801cdf4:	bd38      	pop	{r3, r4, r5, pc}
 801cdf6:	bf00      	nop
 801cdf8:	20002d30 	.word	0x20002d30
 801cdfc:	20000000 	.word	0x20000000
 801ce00:	0801af41 	.word	0x0801af41
 801ce04:	20000190 	.word	0x20000190
 801ce08:	20002d34 	.word	0x20002d34
 801ce0c:	0801af3f 	.word	0x0801af3f
 801ce10:	20000194 	.word	0x20000194

0801ce14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ce14:	b510      	push	{r4, lr}
 801ce16:	4604      	mov	r4, r0
 801ce18:	f7ff ff88 	bl	801cd2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ce1c:	4620      	mov	r0, r4
 801ce1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ce22:	f7ff bfbd 	b.w	801cda0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801ce28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801ce28:	b538      	push	{r3, r4, r5, lr}
 801ce2a:	4c15      	ldr	r4, [pc, #84]	; (801ce80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ce2c:	7823      	ldrb	r3, [r4, #0]
 801ce2e:	f3bf 8f5b 	dmb	ish
 801ce32:	07da      	lsls	r2, r3, #31
 801ce34:	4605      	mov	r5, r0
 801ce36:	d40b      	bmi.n	801ce50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ce38:	4620      	mov	r0, r4
 801ce3a:	f007 f9e2 	bl	8024202 <__cxa_guard_acquire>
 801ce3e:	b138      	cbz	r0, 801ce50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ce40:	4620      	mov	r0, r4
 801ce42:	f007 f9ea 	bl	802421a <__cxa_guard_release>
 801ce46:	4a0f      	ldr	r2, [pc, #60]	; (801ce84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ce48:	490f      	ldr	r1, [pc, #60]	; (801ce88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801ce4a:	4810      	ldr	r0, [pc, #64]	; (801ce8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ce4c:	f007 f9d2 	bl	80241f4 <__aeabi_atexit>
 801ce50:	4c0f      	ldr	r4, [pc, #60]	; (801ce90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ce52:	7823      	ldrb	r3, [r4, #0]
 801ce54:	f3bf 8f5b 	dmb	ish
 801ce58:	07db      	lsls	r3, r3, #31
 801ce5a:	d40b      	bmi.n	801ce74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ce5c:	4620      	mov	r0, r4
 801ce5e:	f007 f9d0 	bl	8024202 <__cxa_guard_acquire>
 801ce62:	b138      	cbz	r0, 801ce74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ce64:	4620      	mov	r0, r4
 801ce66:	f007 f9d8 	bl	802421a <__cxa_guard_release>
 801ce6a:	4a06      	ldr	r2, [pc, #24]	; (801ce84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ce6c:	4909      	ldr	r1, [pc, #36]	; (801ce94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ce6e:	480a      	ldr	r0, [pc, #40]	; (801ce98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ce70:	f007 f9c0 	bl	80241f4 <__aeabi_atexit>
 801ce74:	4b05      	ldr	r3, [pc, #20]	; (801ce8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ce76:	622b      	str	r3, [r5, #32]
 801ce78:	4b07      	ldr	r3, [pc, #28]	; (801ce98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ce7a:	626b      	str	r3, [r5, #36]	; 0x24
 801ce7c:	bd38      	pop	{r3, r4, r5, pc}
 801ce7e:	bf00      	nop
 801ce80:	20002d60 	.word	0x20002d60
 801ce84:	20000000 	.word	0x20000000
 801ce88:	0801af35 	.word	0x0801af35
 801ce8c:	200001c0 	.word	0x200001c0
 801ce90:	20002d64 	.word	0x20002d64
 801ce94:	0801af33 	.word	0x0801af33
 801ce98:	200001c4 	.word	0x200001c4

0801ce9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ce9c:	b538      	push	{r3, r4, r5, lr}
 801ce9e:	4c15      	ldr	r4, [pc, #84]	; (801cef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801cea0:	7823      	ldrb	r3, [r4, #0]
 801cea2:	f3bf 8f5b 	dmb	ish
 801cea6:	07da      	lsls	r2, r3, #31
 801cea8:	4605      	mov	r5, r0
 801ceaa:	d40b      	bmi.n	801cec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ceac:	4620      	mov	r0, r4
 801ceae:	f007 f9a8 	bl	8024202 <__cxa_guard_acquire>
 801ceb2:	b138      	cbz	r0, 801cec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ceb4:	4620      	mov	r0, r4
 801ceb6:	f007 f9b0 	bl	802421a <__cxa_guard_release>
 801ceba:	4a0f      	ldr	r2, [pc, #60]	; (801cef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cebc:	490f      	ldr	r1, [pc, #60]	; (801cefc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801cebe:	4810      	ldr	r0, [pc, #64]	; (801cf00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801cec0:	f007 f998 	bl	80241f4 <__aeabi_atexit>
 801cec4:	4c0f      	ldr	r4, [pc, #60]	; (801cf04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801cec6:	7823      	ldrb	r3, [r4, #0]
 801cec8:	f3bf 8f5b 	dmb	ish
 801cecc:	07db      	lsls	r3, r3, #31
 801cece:	d40b      	bmi.n	801cee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ced0:	4620      	mov	r0, r4
 801ced2:	f007 f996 	bl	8024202 <__cxa_guard_acquire>
 801ced6:	b138      	cbz	r0, 801cee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ced8:	4620      	mov	r0, r4
 801ceda:	f007 f99e 	bl	802421a <__cxa_guard_release>
 801cede:	4a06      	ldr	r2, [pc, #24]	; (801cef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cee0:	4909      	ldr	r1, [pc, #36]	; (801cf08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801cee2:	480a      	ldr	r0, [pc, #40]	; (801cf0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cee4:	f007 f986 	bl	80241f4 <__aeabi_atexit>
 801cee8:	4b05      	ldr	r3, [pc, #20]	; (801cf00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ceea:	61ab      	str	r3, [r5, #24]
 801ceec:	4b07      	ldr	r3, [pc, #28]	; (801cf0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ceee:	61eb      	str	r3, [r5, #28]
 801cef0:	bd38      	pop	{r3, r4, r5, pc}
 801cef2:	bf00      	nop
 801cef4:	20002d38 	.word	0x20002d38
 801cef8:	20000000 	.word	0x20000000
 801cefc:	0801af39 	.word	0x0801af39
 801cf00:	20000198 	.word	0x20000198
 801cf04:	20002d3c 	.word	0x20002d3c
 801cf08:	0801af37 	.word	0x0801af37
 801cf0c:	2000019c 	.word	0x2000019c

0801cf10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801cf10:	b510      	push	{r4, lr}
 801cf12:	4604      	mov	r4, r0
 801cf14:	f7ff ff88 	bl	801ce28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801cf18:	4620      	mov	r0, r4
 801cf1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cf1e:	f7ff bfbd 	b.w	801ce9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801cf24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801cf24:	b538      	push	{r3, r4, r5, lr}
 801cf26:	4c15      	ldr	r4, [pc, #84]	; (801cf7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801cf28:	7823      	ldrb	r3, [r4, #0]
 801cf2a:	f3bf 8f5b 	dmb	ish
 801cf2e:	07da      	lsls	r2, r3, #31
 801cf30:	4605      	mov	r5, r0
 801cf32:	d40b      	bmi.n	801cf4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cf34:	4620      	mov	r0, r4
 801cf36:	f007 f964 	bl	8024202 <__cxa_guard_acquire>
 801cf3a:	b138      	cbz	r0, 801cf4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cf3c:	4620      	mov	r0, r4
 801cf3e:	f007 f96c 	bl	802421a <__cxa_guard_release>
 801cf42:	4a0f      	ldr	r2, [pc, #60]	; (801cf80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cf44:	490f      	ldr	r1, [pc, #60]	; (801cf84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801cf46:	4810      	ldr	r0, [pc, #64]	; (801cf88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cf48:	f007 f954 	bl	80241f4 <__aeabi_atexit>
 801cf4c:	4c0f      	ldr	r4, [pc, #60]	; (801cf8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801cf4e:	7823      	ldrb	r3, [r4, #0]
 801cf50:	f3bf 8f5b 	dmb	ish
 801cf54:	07db      	lsls	r3, r3, #31
 801cf56:	d40b      	bmi.n	801cf70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cf58:	4620      	mov	r0, r4
 801cf5a:	f007 f952 	bl	8024202 <__cxa_guard_acquire>
 801cf5e:	b138      	cbz	r0, 801cf70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cf60:	4620      	mov	r0, r4
 801cf62:	f007 f95a 	bl	802421a <__cxa_guard_release>
 801cf66:	4a06      	ldr	r2, [pc, #24]	; (801cf80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cf68:	4909      	ldr	r1, [pc, #36]	; (801cf90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801cf6a:	480a      	ldr	r0, [pc, #40]	; (801cf94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cf6c:	f007 f942 	bl	80241f4 <__aeabi_atexit>
 801cf70:	4b05      	ldr	r3, [pc, #20]	; (801cf88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cf72:	632b      	str	r3, [r5, #48]	; 0x30
 801cf74:	4b07      	ldr	r3, [pc, #28]	; (801cf94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cf76:	636b      	str	r3, [r5, #52]	; 0x34
 801cf78:	bd38      	pop	{r3, r4, r5, pc}
 801cf7a:	bf00      	nop
 801cf7c:	20002d70 	.word	0x20002d70
 801cf80:	20000000 	.word	0x20000000
 801cf84:	0801af2d 	.word	0x0801af2d
 801cf88:	200001d0 	.word	0x200001d0
 801cf8c:	20002d74 	.word	0x20002d74
 801cf90:	0801af2b 	.word	0x0801af2b
 801cf94:	200001d4 	.word	0x200001d4

0801cf98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801cf98:	b538      	push	{r3, r4, r5, lr}
 801cf9a:	4c15      	ldr	r4, [pc, #84]	; (801cff0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801cf9c:	7823      	ldrb	r3, [r4, #0]
 801cf9e:	f3bf 8f5b 	dmb	ish
 801cfa2:	07da      	lsls	r2, r3, #31
 801cfa4:	4605      	mov	r5, r0
 801cfa6:	d40b      	bmi.n	801cfc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cfa8:	4620      	mov	r0, r4
 801cfaa:	f007 f92a 	bl	8024202 <__cxa_guard_acquire>
 801cfae:	b138      	cbz	r0, 801cfc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cfb0:	4620      	mov	r0, r4
 801cfb2:	f007 f932 	bl	802421a <__cxa_guard_release>
 801cfb6:	4a0f      	ldr	r2, [pc, #60]	; (801cff4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cfb8:	490f      	ldr	r1, [pc, #60]	; (801cff8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801cfba:	4810      	ldr	r0, [pc, #64]	; (801cffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cfbc:	f007 f91a 	bl	80241f4 <__aeabi_atexit>
 801cfc0:	4c0f      	ldr	r4, [pc, #60]	; (801d000 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801cfc2:	7823      	ldrb	r3, [r4, #0]
 801cfc4:	f3bf 8f5b 	dmb	ish
 801cfc8:	07db      	lsls	r3, r3, #31
 801cfca:	d40b      	bmi.n	801cfe4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cfcc:	4620      	mov	r0, r4
 801cfce:	f007 f918 	bl	8024202 <__cxa_guard_acquire>
 801cfd2:	b138      	cbz	r0, 801cfe4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cfd4:	4620      	mov	r0, r4
 801cfd6:	f007 f920 	bl	802421a <__cxa_guard_release>
 801cfda:	4a06      	ldr	r2, [pc, #24]	; (801cff4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cfdc:	4909      	ldr	r1, [pc, #36]	; (801d004 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801cfde:	480a      	ldr	r0, [pc, #40]	; (801d008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cfe0:	f007 f908 	bl	80241f4 <__aeabi_atexit>
 801cfe4:	4b05      	ldr	r3, [pc, #20]	; (801cffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cfe6:	62ab      	str	r3, [r5, #40]	; 0x28
 801cfe8:	4b07      	ldr	r3, [pc, #28]	; (801d008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cfea:	62eb      	str	r3, [r5, #44]	; 0x2c
 801cfec:	bd38      	pop	{r3, r4, r5, pc}
 801cfee:	bf00      	nop
 801cff0:	20002d40 	.word	0x20002d40
 801cff4:	20000000 	.word	0x20000000
 801cff8:	0801af31 	.word	0x0801af31
 801cffc:	200001a0 	.word	0x200001a0
 801d000:	20002d44 	.word	0x20002d44
 801d004:	0801af2f 	.word	0x0801af2f
 801d008:	200001a4 	.word	0x200001a4

0801d00c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801d00c:	b510      	push	{r4, lr}
 801d00e:	4604      	mov	r4, r0
 801d010:	f7ff ff88 	bl	801cf24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801d014:	4620      	mov	r0, r4
 801d016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d01a:	f7ff bfbd 	b.w	801cf98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801d020 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801d020:	b538      	push	{r3, r4, r5, lr}
 801d022:	4c15      	ldr	r4, [pc, #84]	; (801d078 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801d024:	7823      	ldrb	r3, [r4, #0]
 801d026:	f3bf 8f5b 	dmb	ish
 801d02a:	07da      	lsls	r2, r3, #31
 801d02c:	4605      	mov	r5, r0
 801d02e:	d40b      	bmi.n	801d048 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d030:	4620      	mov	r0, r4
 801d032:	f007 f8e6 	bl	8024202 <__cxa_guard_acquire>
 801d036:	b138      	cbz	r0, 801d048 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d038:	4620      	mov	r0, r4
 801d03a:	f007 f8ee 	bl	802421a <__cxa_guard_release>
 801d03e:	4a0f      	ldr	r2, [pc, #60]	; (801d07c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d040:	490f      	ldr	r1, [pc, #60]	; (801d080 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801d042:	4810      	ldr	r0, [pc, #64]	; (801d084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d044:	f007 f8d6 	bl	80241f4 <__aeabi_atexit>
 801d048:	4c0f      	ldr	r4, [pc, #60]	; (801d088 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801d04a:	7823      	ldrb	r3, [r4, #0]
 801d04c:	f3bf 8f5b 	dmb	ish
 801d050:	07db      	lsls	r3, r3, #31
 801d052:	d40b      	bmi.n	801d06c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d054:	4620      	mov	r0, r4
 801d056:	f007 f8d4 	bl	8024202 <__cxa_guard_acquire>
 801d05a:	b138      	cbz	r0, 801d06c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d05c:	4620      	mov	r0, r4
 801d05e:	f007 f8dc 	bl	802421a <__cxa_guard_release>
 801d062:	4a06      	ldr	r2, [pc, #24]	; (801d07c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d064:	4909      	ldr	r1, [pc, #36]	; (801d08c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801d066:	480a      	ldr	r0, [pc, #40]	; (801d090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d068:	f007 f8c4 	bl	80241f4 <__aeabi_atexit>
 801d06c:	4b05      	ldr	r3, [pc, #20]	; (801d084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d06e:	652b      	str	r3, [r5, #80]	; 0x50
 801d070:	4b07      	ldr	r3, [pc, #28]	; (801d090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d072:	656b      	str	r3, [r5, #84]	; 0x54
 801d074:	bd38      	pop	{r3, r4, r5, pc}
 801d076:	bf00      	nop
 801d078:	20002d78 	.word	0x20002d78
 801d07c:	20000000 	.word	0x20000000
 801d080:	0801af1d 	.word	0x0801af1d
 801d084:	200001d8 	.word	0x200001d8
 801d088:	20002d7c 	.word	0x20002d7c
 801d08c:	0801af1b 	.word	0x0801af1b
 801d090:	200001dc 	.word	0x200001dc

0801d094 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801d094:	b538      	push	{r3, r4, r5, lr}
 801d096:	4c15      	ldr	r4, [pc, #84]	; (801d0ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801d098:	7823      	ldrb	r3, [r4, #0]
 801d09a:	f3bf 8f5b 	dmb	ish
 801d09e:	07da      	lsls	r2, r3, #31
 801d0a0:	4605      	mov	r5, r0
 801d0a2:	d40b      	bmi.n	801d0bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d0a4:	4620      	mov	r0, r4
 801d0a6:	f007 f8ac 	bl	8024202 <__cxa_guard_acquire>
 801d0aa:	b138      	cbz	r0, 801d0bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d0ac:	4620      	mov	r0, r4
 801d0ae:	f007 f8b4 	bl	802421a <__cxa_guard_release>
 801d0b2:	4a0f      	ldr	r2, [pc, #60]	; (801d0f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d0b4:	490f      	ldr	r1, [pc, #60]	; (801d0f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801d0b6:	4810      	ldr	r0, [pc, #64]	; (801d0f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d0b8:	f007 f89c 	bl	80241f4 <__aeabi_atexit>
 801d0bc:	4c0f      	ldr	r4, [pc, #60]	; (801d0fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801d0be:	7823      	ldrb	r3, [r4, #0]
 801d0c0:	f3bf 8f5b 	dmb	ish
 801d0c4:	07db      	lsls	r3, r3, #31
 801d0c6:	d40b      	bmi.n	801d0e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d0c8:	4620      	mov	r0, r4
 801d0ca:	f007 f89a 	bl	8024202 <__cxa_guard_acquire>
 801d0ce:	b138      	cbz	r0, 801d0e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d0d0:	4620      	mov	r0, r4
 801d0d2:	f007 f8a2 	bl	802421a <__cxa_guard_release>
 801d0d6:	4a06      	ldr	r2, [pc, #24]	; (801d0f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d0d8:	4909      	ldr	r1, [pc, #36]	; (801d100 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801d0da:	480a      	ldr	r0, [pc, #40]	; (801d104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d0dc:	f007 f88a 	bl	80241f4 <__aeabi_atexit>
 801d0e0:	4b05      	ldr	r3, [pc, #20]	; (801d0f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d0e2:	64ab      	str	r3, [r5, #72]	; 0x48
 801d0e4:	4b07      	ldr	r3, [pc, #28]	; (801d104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d0e6:	64eb      	str	r3, [r5, #76]	; 0x4c
 801d0e8:	bd38      	pop	{r3, r4, r5, pc}
 801d0ea:	bf00      	nop
 801d0ec:	20002d80 	.word	0x20002d80
 801d0f0:	20000000 	.word	0x20000000
 801d0f4:	0801af21 	.word	0x0801af21
 801d0f8:	200001e0 	.word	0x200001e0
 801d0fc:	20002d84 	.word	0x20002d84
 801d100:	0801af1f 	.word	0x0801af1f
 801d104:	200001e4 	.word	0x200001e4

0801d108 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801d108:	b538      	push	{r3, r4, r5, lr}
 801d10a:	4c15      	ldr	r4, [pc, #84]	; (801d160 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801d10c:	7823      	ldrb	r3, [r4, #0]
 801d10e:	f3bf 8f5b 	dmb	ish
 801d112:	07da      	lsls	r2, r3, #31
 801d114:	4605      	mov	r5, r0
 801d116:	d40b      	bmi.n	801d130 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d118:	4620      	mov	r0, r4
 801d11a:	f007 f872 	bl	8024202 <__cxa_guard_acquire>
 801d11e:	b138      	cbz	r0, 801d130 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d120:	4620      	mov	r0, r4
 801d122:	f007 f87a 	bl	802421a <__cxa_guard_release>
 801d126:	4a0f      	ldr	r2, [pc, #60]	; (801d164 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d128:	490f      	ldr	r1, [pc, #60]	; (801d168 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801d12a:	4810      	ldr	r0, [pc, #64]	; (801d16c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d12c:	f007 f862 	bl	80241f4 <__aeabi_atexit>
 801d130:	4c0f      	ldr	r4, [pc, #60]	; (801d170 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801d132:	7823      	ldrb	r3, [r4, #0]
 801d134:	f3bf 8f5b 	dmb	ish
 801d138:	07db      	lsls	r3, r3, #31
 801d13a:	d40b      	bmi.n	801d154 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d13c:	4620      	mov	r0, r4
 801d13e:	f007 f860 	bl	8024202 <__cxa_guard_acquire>
 801d142:	b138      	cbz	r0, 801d154 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d144:	4620      	mov	r0, r4
 801d146:	f007 f868 	bl	802421a <__cxa_guard_release>
 801d14a:	4a06      	ldr	r2, [pc, #24]	; (801d164 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d14c:	4909      	ldr	r1, [pc, #36]	; (801d174 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801d14e:	480a      	ldr	r0, [pc, #40]	; (801d178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d150:	f007 f850 	bl	80241f4 <__aeabi_atexit>
 801d154:	4b05      	ldr	r3, [pc, #20]	; (801d16c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d156:	642b      	str	r3, [r5, #64]	; 0x40
 801d158:	4b07      	ldr	r3, [pc, #28]	; (801d178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d15a:	646b      	str	r3, [r5, #68]	; 0x44
 801d15c:	bd38      	pop	{r3, r4, r5, pc}
 801d15e:	bf00      	nop
 801d160:	20002d48 	.word	0x20002d48
 801d164:	20000000 	.word	0x20000000
 801d168:	0801af25 	.word	0x0801af25
 801d16c:	200001a8 	.word	0x200001a8
 801d170:	20002d4c 	.word	0x20002d4c
 801d174:	0801af23 	.word	0x0801af23
 801d178:	200001ac 	.word	0x200001ac

0801d17c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801d17c:	b538      	push	{r3, r4, r5, lr}
 801d17e:	4c15      	ldr	r4, [pc, #84]	; (801d1d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801d180:	7823      	ldrb	r3, [r4, #0]
 801d182:	f3bf 8f5b 	dmb	ish
 801d186:	07da      	lsls	r2, r3, #31
 801d188:	4605      	mov	r5, r0
 801d18a:	d40b      	bmi.n	801d1a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d18c:	4620      	mov	r0, r4
 801d18e:	f007 f838 	bl	8024202 <__cxa_guard_acquire>
 801d192:	b138      	cbz	r0, 801d1a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d194:	4620      	mov	r0, r4
 801d196:	f007 f840 	bl	802421a <__cxa_guard_release>
 801d19a:	4a0f      	ldr	r2, [pc, #60]	; (801d1d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d19c:	490f      	ldr	r1, [pc, #60]	; (801d1dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801d19e:	4810      	ldr	r0, [pc, #64]	; (801d1e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d1a0:	f007 f828 	bl	80241f4 <__aeabi_atexit>
 801d1a4:	4c0f      	ldr	r4, [pc, #60]	; (801d1e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801d1a6:	7823      	ldrb	r3, [r4, #0]
 801d1a8:	f3bf 8f5b 	dmb	ish
 801d1ac:	07db      	lsls	r3, r3, #31
 801d1ae:	d40b      	bmi.n	801d1c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d1b0:	4620      	mov	r0, r4
 801d1b2:	f007 f826 	bl	8024202 <__cxa_guard_acquire>
 801d1b6:	b138      	cbz	r0, 801d1c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d1b8:	4620      	mov	r0, r4
 801d1ba:	f007 f82e 	bl	802421a <__cxa_guard_release>
 801d1be:	4a06      	ldr	r2, [pc, #24]	; (801d1d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d1c0:	4909      	ldr	r1, [pc, #36]	; (801d1e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801d1c2:	480a      	ldr	r0, [pc, #40]	; (801d1ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d1c4:	f007 f816 	bl	80241f4 <__aeabi_atexit>
 801d1c8:	4b05      	ldr	r3, [pc, #20]	; (801d1e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d1ca:	63ab      	str	r3, [r5, #56]	; 0x38
 801d1cc:	4b07      	ldr	r3, [pc, #28]	; (801d1ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d1ce:	63eb      	str	r3, [r5, #60]	; 0x3c
 801d1d0:	bd38      	pop	{r3, r4, r5, pc}
 801d1d2:	bf00      	nop
 801d1d4:	20002d68 	.word	0x20002d68
 801d1d8:	20000000 	.word	0x20000000
 801d1dc:	0801af29 	.word	0x0801af29
 801d1e0:	200001c8 	.word	0x200001c8
 801d1e4:	20002d6c 	.word	0x20002d6c
 801d1e8:	0801af27 	.word	0x0801af27
 801d1ec:	200001cc 	.word	0x200001cc

0801d1f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801d1f0:	b510      	push	{r4, lr}
 801d1f2:	4604      	mov	r4, r0
 801d1f4:	f7ff ff14 	bl	801d020 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801d1f8:	4620      	mov	r0, r4
 801d1fa:	f7ff ff85 	bl	801d108 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801d1fe:	4620      	mov	r0, r4
 801d200:	f7ff ff48 	bl	801d094 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801d204:	4620      	mov	r0, r4
 801d206:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d20a:	f7ff bfb7 	b.w	801d17c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801d210 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801d210:	b538      	push	{r3, r4, r5, lr}
 801d212:	4c15      	ldr	r4, [pc, #84]	; (801d268 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801d214:	7823      	ldrb	r3, [r4, #0]
 801d216:	f3bf 8f5b 	dmb	ish
 801d21a:	07da      	lsls	r2, r3, #31
 801d21c:	4605      	mov	r5, r0
 801d21e:	d40b      	bmi.n	801d238 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d220:	4620      	mov	r0, r4
 801d222:	f006 ffee 	bl	8024202 <__cxa_guard_acquire>
 801d226:	b138      	cbz	r0, 801d238 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d228:	4620      	mov	r0, r4
 801d22a:	f006 fff6 	bl	802421a <__cxa_guard_release>
 801d22e:	4a0f      	ldr	r2, [pc, #60]	; (801d26c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d230:	490f      	ldr	r1, [pc, #60]	; (801d270 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801d232:	4810      	ldr	r0, [pc, #64]	; (801d274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d234:	f006 ffde 	bl	80241f4 <__aeabi_atexit>
 801d238:	4c0f      	ldr	r4, [pc, #60]	; (801d278 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801d23a:	7823      	ldrb	r3, [r4, #0]
 801d23c:	f3bf 8f5b 	dmb	ish
 801d240:	07db      	lsls	r3, r3, #31
 801d242:	d40b      	bmi.n	801d25c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d244:	4620      	mov	r0, r4
 801d246:	f006 ffdc 	bl	8024202 <__cxa_guard_acquire>
 801d24a:	b138      	cbz	r0, 801d25c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d24c:	4620      	mov	r0, r4
 801d24e:	f006 ffe4 	bl	802421a <__cxa_guard_release>
 801d252:	4a06      	ldr	r2, [pc, #24]	; (801d26c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d254:	4909      	ldr	r1, [pc, #36]	; (801d27c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801d256:	480a      	ldr	r0, [pc, #40]	; (801d280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d258:	f006 ffcc 	bl	80241f4 <__aeabi_atexit>
 801d25c:	4b05      	ldr	r3, [pc, #20]	; (801d274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d25e:	662b      	str	r3, [r5, #96]	; 0x60
 801d260:	4b07      	ldr	r3, [pc, #28]	; (801d280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d262:	666b      	str	r3, [r5, #100]	; 0x64
 801d264:	bd38      	pop	{r3, r4, r5, pc}
 801d266:	bf00      	nop
 801d268:	20002d50 	.word	0x20002d50
 801d26c:	20000000 	.word	0x20000000
 801d270:	0801af15 	.word	0x0801af15
 801d274:	200001b0 	.word	0x200001b0
 801d278:	20002d54 	.word	0x20002d54
 801d27c:	0801af13 	.word	0x0801af13
 801d280:	200001b4 	.word	0x200001b4

0801d284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801d284:	b538      	push	{r3, r4, r5, lr}
 801d286:	4c15      	ldr	r4, [pc, #84]	; (801d2dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801d288:	7823      	ldrb	r3, [r4, #0]
 801d28a:	f3bf 8f5b 	dmb	ish
 801d28e:	07da      	lsls	r2, r3, #31
 801d290:	4605      	mov	r5, r0
 801d292:	d40b      	bmi.n	801d2ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d294:	4620      	mov	r0, r4
 801d296:	f006 ffb4 	bl	8024202 <__cxa_guard_acquire>
 801d29a:	b138      	cbz	r0, 801d2ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d29c:	4620      	mov	r0, r4
 801d29e:	f006 ffbc 	bl	802421a <__cxa_guard_release>
 801d2a2:	4a0f      	ldr	r2, [pc, #60]	; (801d2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d2a4:	490f      	ldr	r1, [pc, #60]	; (801d2e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801d2a6:	4810      	ldr	r0, [pc, #64]	; (801d2e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d2a8:	f006 ffa4 	bl	80241f4 <__aeabi_atexit>
 801d2ac:	4c0f      	ldr	r4, [pc, #60]	; (801d2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801d2ae:	7823      	ldrb	r3, [r4, #0]
 801d2b0:	f3bf 8f5b 	dmb	ish
 801d2b4:	07db      	lsls	r3, r3, #31
 801d2b6:	d40b      	bmi.n	801d2d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d2b8:	4620      	mov	r0, r4
 801d2ba:	f006 ffa2 	bl	8024202 <__cxa_guard_acquire>
 801d2be:	b138      	cbz	r0, 801d2d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d2c0:	4620      	mov	r0, r4
 801d2c2:	f006 ffaa 	bl	802421a <__cxa_guard_release>
 801d2c6:	4a06      	ldr	r2, [pc, #24]	; (801d2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d2c8:	4909      	ldr	r1, [pc, #36]	; (801d2f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801d2ca:	480a      	ldr	r0, [pc, #40]	; (801d2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d2cc:	f006 ff92 	bl	80241f4 <__aeabi_atexit>
 801d2d0:	4b05      	ldr	r3, [pc, #20]	; (801d2e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d2d2:	65ab      	str	r3, [r5, #88]	; 0x58
 801d2d4:	4b07      	ldr	r3, [pc, #28]	; (801d2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d2d6:	65eb      	str	r3, [r5, #92]	; 0x5c
 801d2d8:	bd38      	pop	{r3, r4, r5, pc}
 801d2da:	bf00      	nop
 801d2dc:	20002d28 	.word	0x20002d28
 801d2e0:	20000000 	.word	0x20000000
 801d2e4:	0801af19 	.word	0x0801af19
 801d2e8:	20000188 	.word	0x20000188
 801d2ec:	20002d2c 	.word	0x20002d2c
 801d2f0:	0801af17 	.word	0x0801af17
 801d2f4:	2000018c 	.word	0x2000018c

0801d2f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801d2f8:	b510      	push	{r4, lr}
 801d2fa:	4604      	mov	r4, r0
 801d2fc:	f7ff ff88 	bl	801d210 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801d300:	4620      	mov	r0, r4
 801d302:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d306:	f7ff bfbd 	b.w	801d284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801d30c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801d30c:	b538      	push	{r3, r4, r5, lr}
 801d30e:	4c15      	ldr	r4, [pc, #84]	; (801d364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801d310:	7823      	ldrb	r3, [r4, #0]
 801d312:	f3bf 8f5b 	dmb	ish
 801d316:	07da      	lsls	r2, r3, #31
 801d318:	4605      	mov	r5, r0
 801d31a:	d40b      	bmi.n	801d334 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d31c:	4620      	mov	r0, r4
 801d31e:	f006 ff70 	bl	8024202 <__cxa_guard_acquire>
 801d322:	b138      	cbz	r0, 801d334 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d324:	4620      	mov	r0, r4
 801d326:	f006 ff78 	bl	802421a <__cxa_guard_release>
 801d32a:	4a0f      	ldr	r2, [pc, #60]	; (801d368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d32c:	490f      	ldr	r1, [pc, #60]	; (801d36c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801d32e:	4810      	ldr	r0, [pc, #64]	; (801d370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d330:	f006 ff60 	bl	80241f4 <__aeabi_atexit>
 801d334:	4c0f      	ldr	r4, [pc, #60]	; (801d374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801d336:	7823      	ldrb	r3, [r4, #0]
 801d338:	f3bf 8f5b 	dmb	ish
 801d33c:	07db      	lsls	r3, r3, #31
 801d33e:	d40b      	bmi.n	801d358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d340:	4620      	mov	r0, r4
 801d342:	f006 ff5e 	bl	8024202 <__cxa_guard_acquire>
 801d346:	b138      	cbz	r0, 801d358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d348:	4620      	mov	r0, r4
 801d34a:	f006 ff66 	bl	802421a <__cxa_guard_release>
 801d34e:	4a06      	ldr	r2, [pc, #24]	; (801d368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d350:	4909      	ldr	r1, [pc, #36]	; (801d378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801d352:	480a      	ldr	r0, [pc, #40]	; (801d37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d354:	f006 ff4e 	bl	80241f4 <__aeabi_atexit>
 801d358:	4b05      	ldr	r3, [pc, #20]	; (801d370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d35a:	672b      	str	r3, [r5, #112]	; 0x70
 801d35c:	4b07      	ldr	r3, [pc, #28]	; (801d37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d35e:	676b      	str	r3, [r5, #116]	; 0x74
 801d360:	bd38      	pop	{r3, r4, r5, pc}
 801d362:	bf00      	nop
 801d364:	20002d20 	.word	0x20002d20
 801d368:	20000000 	.word	0x20000000
 801d36c:	0801af0d 	.word	0x0801af0d
 801d370:	20000180 	.word	0x20000180
 801d374:	20002d24 	.word	0x20002d24
 801d378:	0801af0b 	.word	0x0801af0b
 801d37c:	20000184 	.word	0x20000184

0801d380 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801d380:	b538      	push	{r3, r4, r5, lr}
 801d382:	4c15      	ldr	r4, [pc, #84]	; (801d3d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801d384:	7823      	ldrb	r3, [r4, #0]
 801d386:	f3bf 8f5b 	dmb	ish
 801d38a:	07da      	lsls	r2, r3, #31
 801d38c:	4605      	mov	r5, r0
 801d38e:	d40b      	bmi.n	801d3a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d390:	4620      	mov	r0, r4
 801d392:	f006 ff36 	bl	8024202 <__cxa_guard_acquire>
 801d396:	b138      	cbz	r0, 801d3a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d398:	4620      	mov	r0, r4
 801d39a:	f006 ff3e 	bl	802421a <__cxa_guard_release>
 801d39e:	4a0f      	ldr	r2, [pc, #60]	; (801d3dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d3a0:	490f      	ldr	r1, [pc, #60]	; (801d3e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801d3a2:	4810      	ldr	r0, [pc, #64]	; (801d3e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d3a4:	f006 ff26 	bl	80241f4 <__aeabi_atexit>
 801d3a8:	4c0f      	ldr	r4, [pc, #60]	; (801d3e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801d3aa:	7823      	ldrb	r3, [r4, #0]
 801d3ac:	f3bf 8f5b 	dmb	ish
 801d3b0:	07db      	lsls	r3, r3, #31
 801d3b2:	d40b      	bmi.n	801d3cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d3b4:	4620      	mov	r0, r4
 801d3b6:	f006 ff24 	bl	8024202 <__cxa_guard_acquire>
 801d3ba:	b138      	cbz	r0, 801d3cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d3bc:	4620      	mov	r0, r4
 801d3be:	f006 ff2c 	bl	802421a <__cxa_guard_release>
 801d3c2:	4a06      	ldr	r2, [pc, #24]	; (801d3dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d3c4:	4909      	ldr	r1, [pc, #36]	; (801d3ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801d3c6:	480a      	ldr	r0, [pc, #40]	; (801d3f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d3c8:	f006 ff14 	bl	80241f4 <__aeabi_atexit>
 801d3cc:	4b05      	ldr	r3, [pc, #20]	; (801d3e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d3ce:	66ab      	str	r3, [r5, #104]	; 0x68
 801d3d0:	4b07      	ldr	r3, [pc, #28]	; (801d3f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d3d2:	66eb      	str	r3, [r5, #108]	; 0x6c
 801d3d4:	bd38      	pop	{r3, r4, r5, pc}
 801d3d6:	bf00      	nop
 801d3d8:	20002d18 	.word	0x20002d18
 801d3dc:	20000000 	.word	0x20000000
 801d3e0:	0801af11 	.word	0x0801af11
 801d3e4:	20000178 	.word	0x20000178
 801d3e8:	20002d1c 	.word	0x20002d1c
 801d3ec:	0801af0f 	.word	0x0801af0f
 801d3f0:	2000017c 	.word	0x2000017c

0801d3f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801d3f4:	b510      	push	{r4, lr}
 801d3f6:	4604      	mov	r4, r0
 801d3f8:	f7ff ff88 	bl	801d30c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801d3fc:	4620      	mov	r0, r4
 801d3fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d402:	f7ff bfbd 	b.w	801d380 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801d406 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801d406:	b510      	push	{r4, lr}
 801d408:	4604      	mov	r4, r0
 801d40a:	f7ff fff3 	bl	801d3f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801d40e:	4620      	mov	r0, r4
 801d410:	f7ff ff72 	bl	801d2f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801d414:	4620      	mov	r0, r4
 801d416:	f7ff fdf9 	bl	801d00c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801d41a:	4620      	mov	r0, r4
 801d41c:	f7ff fcfa 	bl	801ce14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801d420:	4620      	mov	r0, r4
 801d422:	f7ff fd75 	bl	801cf10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801d426:	4620      	mov	r0, r4
 801d428:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d42c:	f7ff bee0 	b.w	801d1f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801d430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801d430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d434:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801d438:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801d43c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801d440:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801d444:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801d448:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801d44c:	8808      	ldrh	r0, [r1, #0]
 801d44e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801d452:	2d00      	cmp	r5, #0
 801d454:	eb02 0a0c 	add.w	sl, r2, ip
 801d458:	f2c0 80b0 	blt.w	801d5bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d45c:	45ab      	cmp	fp, r5
 801d45e:	f340 80ad 	ble.w	801d5bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d462:	2c00      	cmp	r4, #0
 801d464:	f2c0 80a8 	blt.w	801d5b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d468:	45a6      	cmp	lr, r4
 801d46a:	f340 80a5 	ble.w	801d5b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d46e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801d472:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801d476:	1c62      	adds	r2, r4, #1
 801d478:	f100 80a3 	bmi.w	801d5c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d47c:	4596      	cmp	lr, r2
 801d47e:	f340 80a0 	ble.w	801d5c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d482:	f1b9 0f00 	cmp.w	r9, #0
 801d486:	f000 809c 	beq.w	801d5c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d48a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d48e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801d492:	3501      	adds	r5, #1
 801d494:	f100 8099 	bmi.w	801d5ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d498:	45ab      	cmp	fp, r5
 801d49a:	f340 8096 	ble.w	801d5ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d49e:	2f00      	cmp	r7, #0
 801d4a0:	f000 8093 	beq.w	801d5ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d4a4:	2c00      	cmp	r4, #0
 801d4a6:	f2c0 808e 	blt.w	801d5c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d4aa:	45a6      	cmp	lr, r4
 801d4ac:	f340 808b 	ble.w	801d5c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d4b0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801d4b4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801d4b8:	3401      	adds	r4, #1
 801d4ba:	f100 8089 	bmi.w	801d5d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d4be:	45a6      	cmp	lr, r4
 801d4c0:	f340 8086 	ble.w	801d5d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d4c4:	f1b9 0f00 	cmp.w	r9, #0
 801d4c8:	f000 8082 	beq.w	801d5d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d4cc:	44d6      	add	lr, sl
 801d4ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d4d2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801d4d6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d4da:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4de:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d4e2:	fb19 fe07 	smulbb	lr, r9, r7
 801d4e6:	ea44 0808 	orr.w	r8, r4, r8
 801d4ea:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d4ee:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d4f2:	f1c7 0210 	rsb	r2, r7, #16
 801d4f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4fa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d4fe:	ea44 0c0c 	orr.w	ip, r4, ip
 801d502:	eba2 0209 	sub.w	r2, r2, r9
 801d506:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d50a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d50e:	fb04 f40c 	mul.w	r4, r4, ip
 801d512:	fb02 4808 	mla	r8, r2, r8, r4
 801d516:	041a      	lsls	r2, r3, #16
 801d518:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d51c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d520:	4313      	orrs	r3, r2
 801d522:	042a      	lsls	r2, r5, #16
 801d524:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d528:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d52c:	fb0e 8303 	mla	r3, lr, r3, r8
 801d530:	432a      	orrs	r2, r5
 801d532:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d536:	fb07 3202 	mla	r2, r7, r2, r3
 801d53a:	0d53      	lsrs	r3, r2, #21
 801d53c:	0952      	lsrs	r2, r2, #5
 801d53e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d542:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d546:	431a      	orrs	r2, r3
 801d548:	b293      	uxth	r3, r2
 801d54a:	b2b4      	uxth	r4, r6
 801d54c:	1202      	asrs	r2, r0, #8
 801d54e:	43f6      	mvns	r6, r6
 801d550:	b2f6      	uxtb	r6, r6
 801d552:	121d      	asrs	r5, r3, #8
 801d554:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d558:	fb12 f206 	smulbb	r2, r2, r6
 801d55c:	10c7      	asrs	r7, r0, #3
 801d55e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d562:	00c0      	lsls	r0, r0, #3
 801d564:	fb05 2504 	mla	r5, r5, r4, r2
 801d568:	b2c0      	uxtb	r0, r0
 801d56a:	10da      	asrs	r2, r3, #3
 801d56c:	00db      	lsls	r3, r3, #3
 801d56e:	b2db      	uxtb	r3, r3
 801d570:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d574:	fb10 f006 	smulbb	r0, r0, r6
 801d578:	b2ad      	uxth	r5, r5
 801d57a:	fb03 0004 	mla	r0, r3, r4, r0
 801d57e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d582:	fb17 f706 	smulbb	r7, r7, r6
 801d586:	b280      	uxth	r0, r0
 801d588:	1c6b      	adds	r3, r5, #1
 801d58a:	fb02 7204 	mla	r2, r2, r4, r7
 801d58e:	b292      	uxth	r2, r2
 801d590:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d594:	1c43      	adds	r3, r0, #1
 801d596:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d59a:	1c50      	adds	r0, r2, #1
 801d59c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d5a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d5a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d5a8:	0952      	lsrs	r2, r2, #5
 801d5aa:	432b      	orrs	r3, r5
 801d5ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5b0:	4313      	orrs	r3, r2
 801d5b2:	800b      	strh	r3, [r1, #0]
 801d5b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5b8:	4680      	mov	r8, r0
 801d5ba:	e75c      	b.n	801d476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801d5bc:	4684      	mov	ip, r0
 801d5be:	4680      	mov	r8, r0
 801d5c0:	e767      	b.n	801d492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d5c2:	4684      	mov	ip, r0
 801d5c4:	e765      	b.n	801d492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d5c6:	4605      	mov	r5, r0
 801d5c8:	e776      	b.n	801d4b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801d5ca:	4603      	mov	r3, r0
 801d5cc:	4605      	mov	r5, r0
 801d5ce:	e782      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d5d0:	4603      	mov	r3, r0
 801d5d2:	e780      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d5d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5d8:	b099      	sub	sp, #100	; 0x64
 801d5da:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801d5de:	9215      	str	r2, [sp, #84]	; 0x54
 801d5e0:	9309      	str	r3, [sp, #36]	; 0x24
 801d5e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801d5e4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801d5e8:	930d      	str	r3, [sp, #52]	; 0x34
 801d5ea:	910c      	str	r1, [sp, #48]	; 0x30
 801d5ec:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801d5f0:	9016      	str	r0, [sp, #88]	; 0x58
 801d5f2:	6850      	ldr	r0, [r2, #4]
 801d5f4:	6812      	ldr	r2, [r2, #0]
 801d5f6:	fb00 1303 	mla	r3, r0, r3, r1
 801d5fa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801d5fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d600:	681b      	ldr	r3, [r3, #0]
 801d602:	930b      	str	r3, [sp, #44]	; 0x2c
 801d604:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d606:	685e      	ldr	r6, [r3, #4]
 801d608:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d60a:	43db      	mvns	r3, r3
 801d60c:	b2db      	uxtb	r3, r3
 801d60e:	3604      	adds	r6, #4
 801d610:	930a      	str	r3, [sp, #40]	; 0x28
 801d612:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d614:	2b00      	cmp	r3, #0
 801d616:	dc03      	bgt.n	801d620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d618:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801d61a:	2b00      	cmp	r3, #0
 801d61c:	f340 8225 	ble.w	801da6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d620:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d622:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d626:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d62a:	1e48      	subs	r0, r1, #1
 801d62c:	1e57      	subs	r7, r2, #1
 801d62e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d630:	2b00      	cmp	r3, #0
 801d632:	f340 80e3 	ble.w	801d7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d636:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801d63a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d63e:	d406      	bmi.n	801d64e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d640:	4584      	cmp	ip, r0
 801d642:	da04      	bge.n	801d64e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d644:	2b00      	cmp	r3, #0
 801d646:	db02      	blt.n	801d64e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d648:	42bb      	cmp	r3, r7
 801d64a:	f2c0 80d8 	blt.w	801d7fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d64e:	f11c 0c01 	adds.w	ip, ip, #1
 801d652:	f100 80c9 	bmi.w	801d7e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d656:	4561      	cmp	r1, ip
 801d658:	f2c0 80c6 	blt.w	801d7e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d65c:	3301      	adds	r3, #1
 801d65e:	f100 80c3 	bmi.w	801d7e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d662:	429a      	cmp	r2, r3
 801d664:	f2c0 80c0 	blt.w	801d7e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d668:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d66c:	4647      	mov	r7, r8
 801d66e:	f1bb 0f00 	cmp.w	fp, #0
 801d672:	f340 80e3 	ble.w	801d83c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801d676:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d678:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d67a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d67e:	689b      	ldr	r3, [r3, #8]
 801d680:	ea5f 422a 	movs.w	r2, sl, asr #16
 801d684:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d688:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801d68c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d690:	f100 8121 	bmi.w	801d8d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d694:	f103 39ff 	add.w	r9, r3, #4294967295
 801d698:	454a      	cmp	r2, r9
 801d69a:	f280 811c 	bge.w	801d8d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d69e:	f1bc 0f00 	cmp.w	ip, #0
 801d6a2:	f2c0 8118 	blt.w	801d8d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d6a6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801d6aa:	45cc      	cmp	ip, r9
 801d6ac:	f280 8113 	bge.w	801d8d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d6b0:	b21b      	sxth	r3, r3
 801d6b2:	fb0c 2203 	mla	r2, ip, r3, r2
 801d6b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d6b8:	eb04 0902 	add.w	r9, r4, r2
 801d6bc:	5ca2      	ldrb	r2, [r4, r2]
 801d6be:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801d6c2:	2800      	cmp	r0, #0
 801d6c4:	f000 80fe 	beq.w	801d8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d6c8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d6cc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d6d0:	9211      	str	r2, [sp, #68]	; 0x44
 801d6d2:	b151      	cbz	r1, 801d6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d6d4:	eb09 0203 	add.w	r2, r9, r3
 801d6d8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d6dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d6e0:	930f      	str	r3, [sp, #60]	; 0x3c
 801d6e2:	7853      	ldrb	r3, [r2, #1]
 801d6e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d6e8:	9312      	str	r3, [sp, #72]	; 0x48
 801d6ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d6ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d6ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d6f2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d6f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d6fa:	ea4c 0c03 	orr.w	ip, ip, r3
 801d6fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d700:	041b      	lsls	r3, r3, #16
 801d702:	fb10 f201 	smulbb	r2, r0, r1
 801d706:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d70a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d70e:	10d2      	asrs	r2, r2, #3
 801d710:	4323      	orrs	r3, r4
 801d712:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801d716:	4353      	muls	r3, r2
 801d718:	fb09 330c 	mla	r3, r9, ip, r3
 801d71c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d720:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d724:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d728:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d72c:	f1c1 0c10 	rsb	ip, r1, #16
 801d730:	ebac 0c00 	sub.w	ip, ip, r0
 801d734:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d738:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d73c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d73e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d740:	0418      	lsls	r0, r3, #16
 801d742:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d746:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d74a:	4318      	orrs	r0, r3
 801d74c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d750:	fb02 c200 	mla	r2, r2, r0, ip
 801d754:	0d53      	lsrs	r3, r2, #21
 801d756:	0952      	lsrs	r2, r2, #5
 801d758:	8838      	ldrh	r0, [r7, #0]
 801d75a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d75e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d762:	431a      	orrs	r2, r3
 801d764:	b292      	uxth	r2, r2
 801d766:	1201      	asrs	r1, r0, #8
 801d768:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801d76c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d770:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d774:	fb11 f104 	smulbb	r1, r1, r4
 801d778:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d77c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d780:	00c0      	lsls	r0, r0, #3
 801d782:	fb0c 1c03 	mla	ip, ip, r3, r1
 801d786:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d78a:	10d1      	asrs	r1, r2, #3
 801d78c:	b2c0      	uxtb	r0, r0
 801d78e:	00d2      	lsls	r2, r2, #3
 801d790:	b2d2      	uxtb	r2, r2
 801d792:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d796:	fb1e fe04 	smulbb	lr, lr, r4
 801d79a:	fb10 f004 	smulbb	r0, r0, r4
 801d79e:	fa1f fc8c 	uxth.w	ip, ip
 801d7a2:	fb01 e103 	mla	r1, r1, r3, lr
 801d7a6:	fb02 0303 	mla	r3, r2, r3, r0
 801d7aa:	b29a      	uxth	r2, r3
 801d7ac:	f10c 0301 	add.w	r3, ip, #1
 801d7b0:	b289      	uxth	r1, r1
 801d7b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d7b6:	1c53      	adds	r3, r2, #1
 801d7b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d7bc:	1c4a      	adds	r2, r1, #1
 801d7be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d7c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d7c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d7ca:	0949      	lsrs	r1, r1, #5
 801d7cc:	ea43 030c 	orr.w	r3, r3, ip
 801d7d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d7d4:	430b      	orrs	r3, r1
 801d7d6:	803b      	strh	r3, [r7, #0]
 801d7d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d7da:	449a      	add	sl, r3
 801d7dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d7de:	3702      	adds	r7, #2
 801d7e0:	441d      	add	r5, r3
 801d7e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d7e6:	e742      	b.n	801d66e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d7e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d7ea:	449a      	add	sl, r3
 801d7ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d7ee:	441d      	add	r5, r3
 801d7f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d7f2:	3b01      	subs	r3, #1
 801d7f4:	9309      	str	r3, [sp, #36]	; 0x24
 801d7f6:	f108 0802 	add.w	r8, r8, #2
 801d7fa:	e718      	b.n	801d62e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d7fc:	d023      	beq.n	801d846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801d7fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d800:	9825      	ldr	r0, [sp, #148]	; 0x94
 801d802:	3b01      	subs	r3, #1
 801d804:	fb00 a003 	mla	r0, r0, r3, sl
 801d808:	1400      	asrs	r0, r0, #16
 801d80a:	f53f af2d 	bmi.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d80e:	3901      	subs	r1, #1
 801d810:	4288      	cmp	r0, r1
 801d812:	f6bf af29 	bge.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d816:	9926      	ldr	r1, [sp, #152]	; 0x98
 801d818:	fb01 5303 	mla	r3, r1, r3, r5
 801d81c:	141b      	asrs	r3, r3, #16
 801d81e:	f53f af23 	bmi.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d822:	3a01      	subs	r2, #1
 801d824:	4293      	cmp	r3, r2
 801d826:	f6bf af1f 	bge.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d82a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d82e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801d832:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801d836:	f1be 0f00 	cmp.w	lr, #0
 801d83a:	dc6c      	bgt.n	801d916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d83c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d83e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d842:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d848:	2b00      	cmp	r3, #0
 801d84a:	f340 810e 	ble.w	801da6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d84e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d852:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d856:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d85a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d85c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d860:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d864:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d868:	eef0 6a62 	vmov.f32	s13, s5
 801d86c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d874:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d878:	ee16 aa90 	vmov	sl, s13
 801d87c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d880:	eef0 6a43 	vmov.f32	s13, s6
 801d884:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d888:	ee12 2a90 	vmov	r2, s5
 801d88c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d890:	fb92 f3f3 	sdiv	r3, r2, r3
 801d894:	ee13 2a10 	vmov	r2, s6
 801d898:	9325      	str	r3, [sp, #148]	; 0x94
 801d89a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d89c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8a0:	9326      	str	r3, [sp, #152]	; 0x98
 801d8a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d8a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801d8a6:	3b01      	subs	r3, #1
 801d8a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8ac:	930c      	str	r3, [sp, #48]	; 0x30
 801d8ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d8b0:	bf08      	it	eq
 801d8b2:	4613      	moveq	r3, r2
 801d8b4:	ee16 5a90 	vmov	r5, s13
 801d8b8:	9309      	str	r3, [sp, #36]	; 0x24
 801d8ba:	eeb0 3a67 	vmov.f32	s6, s15
 801d8be:	eef0 2a47 	vmov.f32	s5, s14
 801d8c2:	e6a6      	b.n	801d612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d8c4:	2900      	cmp	r1, #0
 801d8c6:	f43f af10 	beq.w	801d6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d8ca:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d8ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d8d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801d8d4:	e709      	b.n	801d6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d8d6:	f112 0901 	adds.w	r9, r2, #1
 801d8da:	f53f af7d 	bmi.w	801d7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d8de:	454b      	cmp	r3, r9
 801d8e0:	f6ff af7a 	blt.w	801d7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d8e4:	f11c 0901 	adds.w	r9, ip, #1
 801d8e8:	f53f af76 	bmi.w	801d7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d8ec:	45ce      	cmp	lr, r9
 801d8ee:	f6ff af73 	blt.w	801d7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d8f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d8f4:	9202      	str	r2, [sp, #8]
 801d8f6:	b21b      	sxth	r3, r3
 801d8f8:	fa0f f28e 	sxth.w	r2, lr
 801d8fc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d900:	e9cd c003 	strd	ip, r0, [sp, #12]
 801d904:	9201      	str	r2, [sp, #4]
 801d906:	9300      	str	r3, [sp, #0]
 801d908:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d90a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801d90c:	4633      	mov	r3, r6
 801d90e:	4639      	mov	r1, r7
 801d910:	f7ff fd8e 	bl	801d430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801d914:	e760      	b.n	801d7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d916:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d918:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d91a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d91e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801d922:	1429      	asrs	r1, r5, #16
 801d924:	fb03 2101 	mla	r1, r3, r1, r2
 801d928:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d92a:	440a      	add	r2, r1
 801d92c:	5c61      	ldrb	r1, [r4, r1]
 801d92e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801d932:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d936:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801d93a:	f1bc 0f00 	cmp.w	ip, #0
 801d93e:	f000 808c 	beq.w	801da5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801d942:	7857      	ldrb	r7, [r2, #1]
 801d944:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801d948:	9413      	str	r4, [sp, #76]	; 0x4c
 801d94a:	b140      	cbz	r0, 801d95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d94c:	18d7      	adds	r7, r2, r3
 801d94e:	5cd3      	ldrb	r3, [r2, r3]
 801d950:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d954:	9310      	str	r3, [sp, #64]	; 0x40
 801d956:	787b      	ldrb	r3, [r7, #1]
 801d958:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d95c:	9314      	str	r3, [sp, #80]	; 0x50
 801d95e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d960:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d962:	fb1c f200 	smulbb	r2, ip, r0
 801d966:	041f      	lsls	r7, r3, #16
 801d968:	10d2      	asrs	r2, r2, #3
 801d96a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d96e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801d972:	431f      	orrs	r7, r3
 801d974:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801d978:	9317      	str	r3, [sp, #92]	; 0x5c
 801d97a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d97c:	041b      	lsls	r3, r3, #16
 801d97e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801d982:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d986:	ea43 030b 	orr.w	r3, r3, fp
 801d98a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d98c:	4353      	muls	r3, r2
 801d98e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d992:	fb04 3707 	mla	r7, r4, r7, r3
 801d996:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d99a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801d99e:	ea43 0b01 	orr.w	fp, r3, r1
 801d9a2:	f1c0 0110 	rsb	r1, r0, #16
 801d9a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d9a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d9aa:	eba1 0c0c 	sub.w	ip, r1, ip
 801d9ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d9b2:	fb0c 770b 	mla	r7, ip, fp, r7
 801d9b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d9ba:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801d9be:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d9c2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d9c6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d9ca:	fb02 770c 	mla	r7, r2, ip, r7
 801d9ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d9d0:	0d79      	lsrs	r1, r7, #21
 801d9d2:	097f      	lsrs	r7, r7, #5
 801d9d4:	8812      	ldrh	r2, [r2, #0]
 801d9d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d9da:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d9de:	430f      	orrs	r7, r1
 801d9e0:	b2bb      	uxth	r3, r7
 801d9e2:	1211      	asrs	r1, r2, #8
 801d9e4:	1218      	asrs	r0, r3, #8
 801d9e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d9ea:	fb11 f104 	smulbb	r1, r1, r4
 801d9ee:	10d7      	asrs	r7, r2, #3
 801d9f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d9f4:	00d2      	lsls	r2, r2, #3
 801d9f6:	fb00 1009 	mla	r0, r0, r9, r1
 801d9fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d9fe:	10d9      	asrs	r1, r3, #3
 801da00:	b2d2      	uxtb	r2, r2
 801da02:	00db      	lsls	r3, r3, #3
 801da04:	fb17 f704 	smulbb	r7, r7, r4
 801da08:	fb12 f204 	smulbb	r2, r2, r4
 801da0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801da10:	b2db      	uxtb	r3, r3
 801da12:	b280      	uxth	r0, r0
 801da14:	fb01 7109 	mla	r1, r1, r9, r7
 801da18:	fb03 2309 	mla	r3, r3, r9, r2
 801da1c:	b29b      	uxth	r3, r3
 801da1e:	b289      	uxth	r1, r1
 801da20:	1c42      	adds	r2, r0, #1
 801da22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801da26:	1c4f      	adds	r7, r1, #1
 801da28:	1c5a      	adds	r2, r3, #1
 801da2a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801da2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801da32:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801da36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801da3a:	0949      	lsrs	r1, r1, #5
 801da3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da3e:	4310      	orrs	r0, r2
 801da40:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801da44:	4308      	orrs	r0, r1
 801da46:	f823 0b02 	strh.w	r0, [r3], #2
 801da4a:	930e      	str	r3, [sp, #56]	; 0x38
 801da4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801da4e:	449a      	add	sl, r3
 801da50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801da52:	f10e 3eff 	add.w	lr, lr, #4294967295
 801da56:	441d      	add	r5, r3
 801da58:	e6ed      	b.n	801d836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801da5a:	2800      	cmp	r0, #0
 801da5c:	f43f af7f 	beq.w	801d95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801da60:	5cd3      	ldrb	r3, [r2, r3]
 801da62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801da66:	9310      	str	r3, [sp, #64]	; 0x40
 801da68:	e779      	b.n	801d95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801da6a:	b019      	add	sp, #100	; 0x64
 801da6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801da70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801da70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da74:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801da78:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801da7c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801da80:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801da84:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801da88:	8808      	ldrh	r0, [r1, #0]
 801da8a:	fb08 470e 	mla	r7, r8, lr, r4
 801da8e:	f1b8 0f00 	cmp.w	r8, #0
 801da92:	eb02 0907 	add.w	r9, r2, r7
 801da96:	db67      	blt.n	801db68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801da98:	45c2      	cmp	sl, r8
 801da9a:	dd65      	ble.n	801db68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801da9c:	2c00      	cmp	r4, #0
 801da9e:	db61      	blt.n	801db64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801daa0:	45a6      	cmp	lr, r4
 801daa2:	dd5f      	ble.n	801db64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801daa4:	5dd2      	ldrb	r2, [r2, r7]
 801daa6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801daaa:	1c62      	adds	r2, r4, #1
 801daac:	d45f      	bmi.n	801db6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801daae:	4596      	cmp	lr, r2
 801dab0:	dd5d      	ble.n	801db6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801dab2:	2d00      	cmp	r5, #0
 801dab4:	d05b      	beq.n	801db6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801dab6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801daba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801dabe:	f118 0801 	adds.w	r8, r8, #1
 801dac2:	d458      	bmi.n	801db76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dac4:	45c2      	cmp	sl, r8
 801dac6:	dd56      	ble.n	801db76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dac8:	2e00      	cmp	r6, #0
 801daca:	d054      	beq.n	801db76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dacc:	2c00      	cmp	r4, #0
 801dace:	db50      	blt.n	801db72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801dad0:	45a6      	cmp	lr, r4
 801dad2:	dd4e      	ble.n	801db72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801dad4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801dad8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801dadc:	3401      	adds	r4, #1
 801dade:	d407      	bmi.n	801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dae0:	45a6      	cmp	lr, r4
 801dae2:	dd05      	ble.n	801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dae4:	b125      	cbz	r5, 801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dae6:	44ce      	add	lr, r9
 801dae8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801daec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801daf0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801daf4:	fb15 f406 	smulbb	r4, r5, r6
 801daf8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dafc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801db00:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801db04:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801db08:	ea43 0c0c 	orr.w	ip, r3, ip
 801db0c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801db10:	f1c6 0310 	rsb	r3, r6, #16
 801db14:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801db18:	1b5b      	subs	r3, r3, r5
 801db1a:	ea4e 0707 	orr.w	r7, lr, r7
 801db1e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801db22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801db26:	437d      	muls	r5, r7
 801db28:	fb03 5c0c 	mla	ip, r3, ip, r5
 801db2c:	0403      	lsls	r3, r0, #16
 801db2e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db36:	4318      	orrs	r0, r3
 801db38:	0413      	lsls	r3, r2, #16
 801db3a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801db42:	4313      	orrs	r3, r2
 801db44:	fb04 c000 	mla	r0, r4, r0, ip
 801db48:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801db4c:	fb06 0003 	mla	r0, r6, r3, r0
 801db50:	0d43      	lsrs	r3, r0, #21
 801db52:	0940      	lsrs	r0, r0, #5
 801db54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801db58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db5c:	4318      	orrs	r0, r3
 801db5e:	8008      	strh	r0, [r1, #0]
 801db60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801db64:	4684      	mov	ip, r0
 801db66:	e7a0      	b.n	801daaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801db68:	4607      	mov	r7, r0
 801db6a:	4684      	mov	ip, r0
 801db6c:	e7a7      	b.n	801dabe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801db6e:	4607      	mov	r7, r0
 801db70:	e7a5      	b.n	801dabe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801db72:	4602      	mov	r2, r0
 801db74:	e7b2      	b.n	801dadc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801db76:	4602      	mov	r2, r0
 801db78:	e7ba      	b.n	801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801db7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db7e:	b093      	sub	sp, #76	; 0x4c
 801db80:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801db84:	920f      	str	r2, [sp, #60]	; 0x3c
 801db86:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801db88:	9108      	str	r1, [sp, #32]
 801db8a:	9306      	str	r3, [sp, #24]
 801db8c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801db90:	9010      	str	r0, [sp, #64]	; 0x40
 801db92:	6850      	ldr	r0, [r2, #4]
 801db94:	6812      	ldr	r2, [r2, #0]
 801db96:	fb00 1303 	mla	r3, r0, r3, r1
 801db9a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801db9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dba0:	681b      	ldr	r3, [r3, #0]
 801dba2:	9307      	str	r3, [sp, #28]
 801dba4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dba6:	685f      	ldr	r7, [r3, #4]
 801dba8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dbac:	3704      	adds	r7, #4
 801dbae:	9b08      	ldr	r3, [sp, #32]
 801dbb0:	2b00      	cmp	r3, #0
 801dbb2:	dc03      	bgt.n	801dbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801dbb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dbb6:	2b00      	cmp	r3, #0
 801dbb8:	f340 81b2 	ble.w	801df20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801dbbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dbbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dbc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dbc6:	1e48      	subs	r0, r1, #1
 801dbc8:	f102 3cff 	add.w	ip, r2, #4294967295
 801dbcc:	9b06      	ldr	r3, [sp, #24]
 801dbce:	2b00      	cmp	r3, #0
 801dbd0:	f340 80a9 	ble.w	801dd26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801dbd4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dbd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dbdc:	d406      	bmi.n	801dbec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dbde:	4586      	cmp	lr, r0
 801dbe0:	da04      	bge.n	801dbec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dbe2:	2b00      	cmp	r3, #0
 801dbe4:	db02      	blt.n	801dbec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dbe6:	4563      	cmp	r3, ip
 801dbe8:	f2c0 809e 	blt.w	801dd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dbec:	f11e 0e01 	adds.w	lr, lr, #1
 801dbf0:	f100 808f 	bmi.w	801dd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dbf4:	4571      	cmp	r1, lr
 801dbf6:	f2c0 808c 	blt.w	801dd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dbfa:	3301      	adds	r3, #1
 801dbfc:	f100 8089 	bmi.w	801dd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc00:	429a      	cmp	r2, r3
 801dc02:	f2c0 8086 	blt.w	801dd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc06:	f8dd b018 	ldr.w	fp, [sp, #24]
 801dc0a:	46c8      	mov	r8, r9
 801dc0c:	f1bb 0f00 	cmp.w	fp, #0
 801dc10:	f340 80a6 	ble.w	801dd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801dc14:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801dc16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc18:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dc1c:	689b      	ldr	r3, [r3, #8]
 801dc1e:	1422      	asrs	r2, r4, #16
 801dc20:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dc24:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dc28:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dc2c:	f100 80e3 	bmi.w	801ddf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dc30:	f103 3aff 	add.w	sl, r3, #4294967295
 801dc34:	4552      	cmp	r2, sl
 801dc36:	f280 80de 	bge.w	801ddf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dc3a:	f1bc 0f00 	cmp.w	ip, #0
 801dc3e:	f2c0 80da 	blt.w	801ddf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dc42:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dc46:	45d4      	cmp	ip, sl
 801dc48:	f280 80d5 	bge.w	801ddf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dc4c:	b21b      	sxth	r3, r3
 801dc4e:	fb0c 2203 	mla	r2, ip, r3, r2
 801dc52:	9d07      	ldr	r5, [sp, #28]
 801dc54:	eb05 0a02 	add.w	sl, r5, r2
 801dc58:	5caa      	ldrb	r2, [r5, r2]
 801dc5a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801dc5e:	2800      	cmp	r0, #0
 801dc60:	f000 80c0 	beq.w	801dde4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801dc64:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801dc68:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801dc6c:	920b      	str	r2, [sp, #44]	; 0x2c
 801dc6e:	b151      	cbz	r1, 801dc86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801dc70:	eb0a 0203 	add.w	r2, sl, r3
 801dc74:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801dc78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dc7c:	9309      	str	r3, [sp, #36]	; 0x24
 801dc7e:	7853      	ldrb	r3, [r2, #1]
 801dc80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dc84:	930c      	str	r3, [sp, #48]	; 0x30
 801dc86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc88:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dc8a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801dc8e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dc92:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dc96:	ea4c 0c03 	orr.w	ip, ip, r3
 801dc9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dc9c:	041b      	lsls	r3, r3, #16
 801dc9e:	fb10 f201 	smulbb	r2, r0, r1
 801dca2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dca6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801dcaa:	10d2      	asrs	r2, r2, #3
 801dcac:	432b      	orrs	r3, r5
 801dcae:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801dcb2:	4353      	muls	r3, r2
 801dcb4:	fb0a 330c 	mla	r3, sl, ip, r3
 801dcb8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801dcbc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dcc0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801dcc4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801dcc8:	f1c1 0c10 	rsb	ip, r1, #16
 801dccc:	ebac 0c00 	sub.w	ip, ip, r0
 801dcd0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801dcd4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801dcd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dcda:	0418      	lsls	r0, r3, #16
 801dcdc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dce0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dce4:	4318      	orrs	r0, r3
 801dce6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801dcea:	fb02 c200 	mla	r2, r2, r0, ip
 801dcee:	0d53      	lsrs	r3, r2, #21
 801dcf0:	0952      	lsrs	r2, r2, #5
 801dcf2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dcf6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dcfa:	431a      	orrs	r2, r3
 801dcfc:	f8a8 2000 	strh.w	r2, [r8]
 801dd00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dd02:	441c      	add	r4, r3
 801dd04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd06:	f108 0802 	add.w	r8, r8, #2
 801dd0a:	441e      	add	r6, r3
 801dd0c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dd10:	e77c      	b.n	801dc0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801dd12:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dd14:	441c      	add	r4, r3
 801dd16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd18:	441e      	add	r6, r3
 801dd1a:	9b06      	ldr	r3, [sp, #24]
 801dd1c:	3b01      	subs	r3, #1
 801dd1e:	9306      	str	r3, [sp, #24]
 801dd20:	f109 0902 	add.w	r9, r9, #2
 801dd24:	e752      	b.n	801dbcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dd26:	d020      	beq.n	801dd6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd28:	9b06      	ldr	r3, [sp, #24]
 801dd2a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801dd2c:	3b01      	subs	r3, #1
 801dd2e:	fb00 4003 	mla	r0, r0, r3, r4
 801dd32:	1400      	asrs	r0, r0, #16
 801dd34:	f53f af67 	bmi.w	801dc06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd38:	3901      	subs	r1, #1
 801dd3a:	4288      	cmp	r0, r1
 801dd3c:	f6bf af63 	bge.w	801dc06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd40:	9920      	ldr	r1, [sp, #128]	; 0x80
 801dd42:	fb01 6303 	mla	r3, r1, r3, r6
 801dd46:	141b      	asrs	r3, r3, #16
 801dd48:	f53f af5d 	bmi.w	801dc06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd4c:	3a01      	subs	r2, #1
 801dd4e:	4293      	cmp	r3, r2
 801dd50:	f6bf af59 	bge.w	801dc06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd54:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801dd58:	46ca      	mov	sl, r9
 801dd5a:	f1b8 0f00 	cmp.w	r8, #0
 801dd5e:	dc67      	bgt.n	801de30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801dd60:	9b06      	ldr	r3, [sp, #24]
 801dd62:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801dd66:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801dd6a:	9b08      	ldr	r3, [sp, #32]
 801dd6c:	2b00      	cmp	r3, #0
 801dd6e:	f340 80d7 	ble.w	801df20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801dd72:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dd76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dd7a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dd7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd80:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd88:	eeb0 6a62 	vmov.f32	s12, s5
 801dd8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dd94:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd98:	ee16 4a10 	vmov	r4, s12
 801dd9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dda0:	eeb0 6a43 	vmov.f32	s12, s6
 801dda4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dda8:	ee12 2a90 	vmov	r2, s5
 801ddac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ddb0:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddb4:	ee13 2a10 	vmov	r2, s6
 801ddb8:	931f      	str	r3, [sp, #124]	; 0x7c
 801ddba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ddbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddc0:	9320      	str	r3, [sp, #128]	; 0x80
 801ddc2:	9b08      	ldr	r3, [sp, #32]
 801ddc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddc6:	3b01      	subs	r3, #1
 801ddc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ddcc:	9308      	str	r3, [sp, #32]
 801ddce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ddd0:	bf08      	it	eq
 801ddd2:	4613      	moveq	r3, r2
 801ddd4:	ee16 6a10 	vmov	r6, s12
 801ddd8:	9306      	str	r3, [sp, #24]
 801ddda:	eeb0 3a67 	vmov.f32	s6, s15
 801ddde:	eef0 2a47 	vmov.f32	s5, s14
 801dde2:	e6e4      	b.n	801dbae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801dde4:	2900      	cmp	r1, #0
 801dde6:	f43f af4e 	beq.w	801dc86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ddea:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ddee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ddf2:	9309      	str	r3, [sp, #36]	; 0x24
 801ddf4:	e747      	b.n	801dc86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ddf6:	f112 0a01 	adds.w	sl, r2, #1
 801ddfa:	d481      	bmi.n	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ddfc:	4553      	cmp	r3, sl
 801ddfe:	f6ff af7f 	blt.w	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de02:	f11c 0a01 	adds.w	sl, ip, #1
 801de06:	f53f af7b 	bmi.w	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de0a:	45d6      	cmp	lr, sl
 801de0c:	f6ff af78 	blt.w	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de10:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801de14:	b21b      	sxth	r3, r3
 801de16:	fa0f f28e 	sxth.w	r2, lr
 801de1a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801de1e:	9201      	str	r2, [sp, #4]
 801de20:	9300      	str	r3, [sp, #0]
 801de22:	9a07      	ldr	r2, [sp, #28]
 801de24:	9810      	ldr	r0, [sp, #64]	; 0x40
 801de26:	463b      	mov	r3, r7
 801de28:	4641      	mov	r1, r8
 801de2a:	f7ff fe21 	bl	801da70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801de2e:	e767      	b.n	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801de32:	9d07      	ldr	r5, [sp, #28]
 801de34:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801de38:	1422      	asrs	r2, r4, #16
 801de3a:	1431      	asrs	r1, r6, #16
 801de3c:	fb03 2101 	mla	r1, r3, r1, r2
 801de40:	9a07      	ldr	r2, [sp, #28]
 801de42:	440a      	add	r2, r1
 801de44:	5c69      	ldrb	r1, [r5, r1]
 801de46:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801de4a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801de4e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801de52:	f1be 0f00 	cmp.w	lr, #0
 801de56:	d05c      	beq.n	801df12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801de58:	f892 c001 	ldrb.w	ip, [r2, #1]
 801de5c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801de60:	950d      	str	r5, [sp, #52]	; 0x34
 801de62:	b150      	cbz	r0, 801de7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801de64:	eb02 0c03 	add.w	ip, r2, r3
 801de68:	5cd3      	ldrb	r3, [r2, r3]
 801de6a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801de6e:	930a      	str	r3, [sp, #40]	; 0x28
 801de70:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801de74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801de78:	930e      	str	r3, [sp, #56]	; 0x38
 801de7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de7c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801de7e:	fb1e f200 	smulbb	r2, lr, r0
 801de82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801de86:	10d2      	asrs	r2, r2, #3
 801de88:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801de8c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801de90:	ea4c 0c03 	orr.w	ip, ip, r3
 801de94:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801de98:	9311      	str	r3, [sp, #68]	; 0x44
 801de9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de9c:	041b      	lsls	r3, r3, #16
 801de9e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801dea2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dea6:	ea43 030b 	orr.w	r3, r3, fp
 801deaa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801deac:	4353      	muls	r3, r2
 801deae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801deb2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801deb6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801deba:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801debe:	ea43 0b01 	orr.w	fp, r3, r1
 801dec2:	f1c0 0110 	rsb	r1, r0, #16
 801dec6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dec8:	eba1 0e0e 	sub.w	lr, r1, lr
 801decc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ded0:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ded4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ded8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801dedc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dee0:	ea4b 0e0e 	orr.w	lr, fp, lr
 801dee4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801dee8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801deec:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801def0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801def4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801def8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801defc:	ea43 0c0c 	orr.w	ip, r3, ip
 801df00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801df02:	f82a cb02 	strh.w	ip, [sl], #2
 801df06:	441c      	add	r4, r3
 801df08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801df0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801df0e:	441e      	add	r6, r3
 801df10:	e723      	b.n	801dd5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801df12:	2800      	cmp	r0, #0
 801df14:	d0b1      	beq.n	801de7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801df16:	5cd3      	ldrb	r3, [r2, r3]
 801df18:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801df1c:	930a      	str	r3, [sp, #40]	; 0x28
 801df1e:	e7ac      	b.n	801de7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801df20:	b013      	add	sp, #76	; 0x4c
 801df22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801df26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df2a:	880d      	ldrh	r5, [r1, #0]
 801df2c:	b087      	sub	sp, #28
 801df2e:	10ef      	asrs	r7, r5, #3
 801df30:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801df34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801df38:	00ed      	lsls	r5, r5, #3
 801df3a:	9701      	str	r7, [sp, #4]
 801df3c:	b2ed      	uxtb	r5, r5
 801df3e:	9502      	str	r5, [sp, #8]
 801df40:	9d01      	ldr	r5, [sp, #4]
 801df42:	9103      	str	r1, [sp, #12]
 801df44:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801df48:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801df4c:	9902      	ldr	r1, [sp, #8]
 801df4e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801df52:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801df56:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801df5a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801df5e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801df62:	022d      	lsls	r5, r5, #8
 801df64:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801df68:	fb06 0709 	mla	r7, r6, r9, r0
 801df6c:	430d      	orrs	r5, r1
 801df6e:	2e00      	cmp	r6, #0
 801df70:	eb02 0c07 	add.w	ip, r2, r7
 801df74:	9505      	str	r5, [sp, #20]
 801df76:	f2c0 80b6 	blt.w	801e0e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801df7a:	45b3      	cmp	fp, r6
 801df7c:	f340 80b3 	ble.w	801e0e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801df80:	2800      	cmp	r0, #0
 801df82:	f2c0 80ae 	blt.w	801e0e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801df86:	4581      	cmp	r9, r0
 801df88:	f340 80ab 	ble.w	801e0e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801df8c:	5dd7      	ldrb	r7, [r2, r7]
 801df8e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801df92:	441f      	add	r7, r3
 801df94:	1c42      	adds	r2, r0, #1
 801df96:	f100 80a9 	bmi.w	801e0ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801df9a:	4591      	cmp	r9, r2
 801df9c:	f340 80a6 	ble.w	801e0ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801dfa0:	2c00      	cmp	r4, #0
 801dfa2:	f000 80a3 	beq.w	801e0ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801dfa6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801dfaa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dfae:	441d      	add	r5, r3
 801dfb0:	3601      	adds	r6, #1
 801dfb2:	f100 809f 	bmi.w	801e0f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dfb6:	45b3      	cmp	fp, r6
 801dfb8:	f340 809c 	ble.w	801e0f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dfbc:	f1be 0f00 	cmp.w	lr, #0
 801dfc0:	f000 8098 	beq.w	801e0f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dfc4:	2800      	cmp	r0, #0
 801dfc6:	f2c0 8093 	blt.w	801e0f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801dfca:	4581      	cmp	r9, r0
 801dfcc:	f340 8090 	ble.w	801e0f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801dfd0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801dfd4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801dfd8:	441e      	add	r6, r3
 801dfda:	3001      	adds	r0, #1
 801dfdc:	f100 808d 	bmi.w	801e0fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dfe0:	4581      	cmp	r9, r0
 801dfe2:	f340 808a 	ble.w	801e0fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dfe6:	2c00      	cmp	r4, #0
 801dfe8:	f000 8087 	beq.w	801e0fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dfec:	44e1      	add	r9, ip
 801dfee:	f899 2001 	ldrb.w	r2, [r9, #1]
 801dff2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dff6:	4413      	add	r3, r2
 801dff8:	b2a4      	uxth	r4, r4
 801dffa:	fa1f fe8e 	uxth.w	lr, lr
 801dffe:	fb04 fb0e 	mul.w	fp, r4, lr
 801e002:	0124      	lsls	r4, r4, #4
 801e004:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801e008:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801e00c:	eba4 040b 	sub.w	r4, r4, fp
 801e010:	fa1f f08e 	uxth.w	r0, lr
 801e014:	b2a2      	uxth	r2, r4
 801e016:	78ac      	ldrb	r4, [r5, #2]
 801e018:	f897 c002 	ldrb.w	ip, [r7, #2]
 801e01c:	9901      	ldr	r1, [sp, #4]
 801e01e:	eba9 0900 	sub.w	r9, r9, r0
 801e022:	fa1f f989 	uxth.w	r9, r9
 801e026:	4354      	muls	r4, r2
 801e028:	fb09 440c 	mla	r4, r9, ip, r4
 801e02c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801e030:	fb00 440c 	mla	r4, r0, ip, r4
 801e034:	f893 c002 	ldrb.w	ip, [r3, #2]
 801e038:	fa1f fe88 	uxth.w	lr, r8
 801e03c:	ea6f 0808 	mvn.w	r8, r8
 801e040:	fa5f f888 	uxtb.w	r8, r8
 801e044:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801e048:	fb1a fa08 	smulbb	sl, sl, r8
 801e04c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e050:	fb0c ac0e 	mla	ip, ip, lr, sl
 801e054:	f895 a001 	ldrb.w	sl, [r5, #1]
 801e058:	787c      	ldrb	r4, [r7, #1]
 801e05a:	782d      	ldrb	r5, [r5, #0]
 801e05c:	783f      	ldrb	r7, [r7, #0]
 801e05e:	fb02 fa0a 	mul.w	sl, r2, sl
 801e062:	fb09 aa04 	mla	sl, r9, r4, sl
 801e066:	7874      	ldrb	r4, [r6, #1]
 801e068:	436a      	muls	r2, r5
 801e06a:	7835      	ldrb	r5, [r6, #0]
 801e06c:	fb00 aa04 	mla	sl, r0, r4, sl
 801e070:	fb09 2207 	mla	r2, r9, r7, r2
 801e074:	785c      	ldrb	r4, [r3, #1]
 801e076:	781b      	ldrb	r3, [r3, #0]
 801e078:	fb00 2005 	mla	r0, r0, r5, r2
 801e07c:	fb0b a404 	mla	r4, fp, r4, sl
 801e080:	fb0b 0b03 	mla	fp, fp, r3, r0
 801e084:	9b02      	ldr	r3, [sp, #8]
 801e086:	fb11 fa08 	smulbb	sl, r1, r8
 801e08a:	fa1f fc8c 	uxth.w	ip, ip
 801e08e:	fb13 f808 	smulbb	r8, r3, r8
 801e092:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801e096:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801e09a:	fb04 a40e 	mla	r4, r4, lr, sl
 801e09e:	f10c 0301 	add.w	r3, ip, #1
 801e0a2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801e0a6:	fa1f fe8e 	uxth.w	lr, lr
 801e0aa:	b2a4      	uxth	r4, r4
 801e0ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e0b0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801e0b4:	f104 0a01 	add.w	sl, r4, #1
 801e0b8:	f10e 0c01 	add.w	ip, lr, #1
 801e0bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e0c0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e0c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e0c8:	0964      	lsrs	r4, r4, #5
 801e0ca:	ea4c 0c03 	orr.w	ip, ip, r3
 801e0ce:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e0d2:	9b03      	ldr	r3, [sp, #12]
 801e0d4:	ea4c 0c04 	orr.w	ip, ip, r4
 801e0d8:	f8a3 c000 	strh.w	ip, [r3]
 801e0dc:	b007      	add	sp, #28
 801e0de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e0e2:	af05      	add	r7, sp, #20
 801e0e4:	e756      	b.n	801df94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801e0e6:	ad05      	add	r5, sp, #20
 801e0e8:	462f      	mov	r7, r5
 801e0ea:	e761      	b.n	801dfb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e0ec:	ad05      	add	r5, sp, #20
 801e0ee:	e75f      	b.n	801dfb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e0f0:	ae05      	add	r6, sp, #20
 801e0f2:	e772      	b.n	801dfda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801e0f4:	ab05      	add	r3, sp, #20
 801e0f6:	461e      	mov	r6, r3
 801e0f8:	e77e      	b.n	801dff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801e0fa:	ab05      	add	r3, sp, #20
 801e0fc:	e77c      	b.n	801dff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801e0fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e0fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e102:	b095      	sub	sp, #84	; 0x54
 801e104:	9212      	str	r2, [sp, #72]	; 0x48
 801e106:	9309      	str	r3, [sp, #36]	; 0x24
 801e108:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e10a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801e10e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e110:	910e      	str	r1, [sp, #56]	; 0x38
 801e112:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801e116:	9013      	str	r0, [sp, #76]	; 0x4c
 801e118:	6850      	ldr	r0, [r2, #4]
 801e11a:	6812      	ldr	r2, [r2, #0]
 801e11c:	fb00 1303 	mla	r3, r0, r3, r1
 801e120:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e124:	930a      	str	r3, [sp, #40]	; 0x28
 801e126:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e128:	681b      	ldr	r3, [r3, #0]
 801e12a:	930d      	str	r3, [sp, #52]	; 0x34
 801e12c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e12e:	685c      	ldr	r4, [r3, #4]
 801e130:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e132:	43db      	mvns	r3, r3
 801e134:	b2db      	uxtb	r3, r3
 801e136:	3404      	adds	r4, #4
 801e138:	930b      	str	r3, [sp, #44]	; 0x2c
 801e13a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e13c:	2b00      	cmp	r3, #0
 801e13e:	dc03      	bgt.n	801e148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e140:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e142:	2b00      	cmp	r3, #0
 801e144:	f340 8255 	ble.w	801e5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e148:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e14a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e14e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e152:	1e48      	subs	r0, r1, #1
 801e154:	1e55      	subs	r5, r2, #1
 801e156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e158:	2b00      	cmp	r3, #0
 801e15a:	f340 80f9 	ble.w	801e350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801e15e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801e160:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e162:	1436      	asrs	r6, r6, #16
 801e164:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e168:	d406      	bmi.n	801e178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e16a:	4286      	cmp	r6, r0
 801e16c:	da04      	bge.n	801e178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e16e:	2b00      	cmp	r3, #0
 801e170:	db02      	blt.n	801e178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e172:	42ab      	cmp	r3, r5
 801e174:	f2c0 80ed 	blt.w	801e352 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801e178:	3601      	adds	r6, #1
 801e17a:	f100 80da 	bmi.w	801e332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e17e:	42b1      	cmp	r1, r6
 801e180:	f2c0 80d7 	blt.w	801e332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e184:	3301      	adds	r3, #1
 801e186:	f100 80d4 	bmi.w	801e332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e18a:	429a      	cmp	r2, r3
 801e18c:	f2c0 80d1 	blt.w	801e332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e190:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e192:	9311      	str	r3, [sp, #68]	; 0x44
 801e194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e196:	930c      	str	r3, [sp, #48]	; 0x30
 801e198:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e19a:	2b00      	cmp	r3, #0
 801e19c:	f340 80fa 	ble.w	801e394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e1a0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801e1a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e1a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e1a6:	68c6      	ldr	r6, [r0, #12]
 801e1a8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e1aa:	141d      	asrs	r5, r3, #16
 801e1ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e1b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e1b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e1b4:	1400      	asrs	r0, r0, #16
 801e1b6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e1ba:	6892      	ldr	r2, [r2, #8]
 801e1bc:	f100 813e 	bmi.w	801e43c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e1c0:	1e57      	subs	r7, r2, #1
 801e1c2:	42b8      	cmp	r0, r7
 801e1c4:	f280 813a 	bge.w	801e43c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e1c8:	2d00      	cmp	r5, #0
 801e1ca:	f2c0 8137 	blt.w	801e43c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e1ce:	1e77      	subs	r7, r6, #1
 801e1d0:	42bd      	cmp	r5, r7
 801e1d2:	f280 8133 	bge.w	801e43c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e1d6:	b212      	sxth	r2, r2
 801e1d8:	fb05 0002 	mla	r0, r5, r2, r0
 801e1dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1de:	f815 a000 	ldrb.w	sl, [r5, r0]
 801e1e2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801e1e6:	182e      	adds	r6, r5, r0
 801e1e8:	eb04 050a 	add.w	r5, r4, sl
 801e1ec:	2b00      	cmp	r3, #0
 801e1ee:	f000 8117 	beq.w	801e420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801e1f2:	f896 c001 	ldrb.w	ip, [r6, #1]
 801e1f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e1fa:	44a4      	add	ip, r4
 801e1fc:	2900      	cmp	r1, #0
 801e1fe:	f000 8117 	beq.w	801e430 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801e202:	18b0      	adds	r0, r6, r2
 801e204:	5cb2      	ldrb	r2, [r6, r2]
 801e206:	7840      	ldrb	r0, [r0, #1]
 801e208:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e20c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e210:	4422      	add	r2, r4
 801e212:	4420      	add	r0, r4
 801e214:	b29b      	uxth	r3, r3
 801e216:	b289      	uxth	r1, r1
 801e218:	fb03 f901 	mul.w	r9, r3, r1
 801e21c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e220:	011b      	lsls	r3, r3, #4
 801e222:	b289      	uxth	r1, r1
 801e224:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801e228:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e22c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e22e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801e232:	f8b6 e000 	ldrh.w	lr, [r6]
 801e236:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801e23a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801e23e:	eba3 0309 	sub.w	r3, r3, r9
 801e242:	b29b      	uxth	r3, r3
 801e244:	eba8 0801 	sub.w	r8, r8, r1
 801e248:	fa1f f888 	uxth.w	r8, r8
 801e24c:	435f      	muls	r7, r3
 801e24e:	fb08 770b 	mla	r7, r8, fp, r7
 801e252:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e256:	9310      	str	r3, [sp, #64]	; 0x40
 801e258:	fb01 770b 	mla	r7, r1, fp, r7
 801e25c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e260:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e262:	fb09 770b 	mla	r7, r9, fp, r7
 801e266:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801e26a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e26e:	fb1b fb03 	smulbb	fp, fp, r3
 801e272:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e276:	fb07 b706 	mla	r7, r7, r6, fp
 801e27a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e27c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e280:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e284:	f89c c000 	ldrb.w	ip, [ip]
 801e288:	435d      	muls	r5, r3
 801e28a:	fb08 550b 	mla	r5, r8, fp, r5
 801e28e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e292:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e294:	fb01 550b 	mla	r5, r1, fp, r5
 801e298:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e29c:	fb09 550b 	mla	r5, r9, fp, r5
 801e2a0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801e2a4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e2a8:	fb1b fb03 	smulbb	fp, fp, r3
 801e2ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e2ae:	fb03 f30c 	mul.w	r3, r3, ip
 801e2b2:	f892 c000 	ldrb.w	ip, [r2]
 801e2b6:	fb08 330a 	mla	r3, r8, sl, r3
 801e2ba:	fb01 330c 	mla	r3, r1, ip, r3
 801e2be:	f890 c000 	ldrb.w	ip, [r0]
 801e2c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e2c6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e2ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2cc:	fa5f fe8e 	uxtb.w	lr, lr
 801e2d0:	b2bf      	uxth	r7, r7
 801e2d2:	fb1e fe03 	smulbb	lr, lr, r3
 801e2d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e2da:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e2de:	fb05 b506 	mla	r5, r5, r6, fp
 801e2e2:	1c7b      	adds	r3, r7, #1
 801e2e4:	fb0c e606 	mla	r6, ip, r6, lr
 801e2e8:	b2ad      	uxth	r5, r5
 801e2ea:	b2b6      	uxth	r6, r6
 801e2ec:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e2f0:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801e2f4:	f105 0b01 	add.w	fp, r5, #1
 801e2f8:	1c77      	adds	r7, r6, #1
 801e2fa:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801e2fe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e302:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e306:	096d      	lsrs	r5, r5, #5
 801e308:	431f      	orrs	r7, r3
 801e30a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e30e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e310:	433d      	orrs	r5, r7
 801e312:	801d      	strh	r5, [r3, #0]
 801e314:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e316:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e318:	3302      	adds	r3, #2
 801e31a:	930c      	str	r3, [sp, #48]	; 0x30
 801e31c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e31e:	4413      	add	r3, r2
 801e320:	931f      	str	r3, [sp, #124]	; 0x7c
 801e322:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e324:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e326:	4413      	add	r3, r2
 801e328:	9320      	str	r3, [sp, #128]	; 0x80
 801e32a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e32c:	3b01      	subs	r3, #1
 801e32e:	9311      	str	r3, [sp, #68]	; 0x44
 801e330:	e732      	b.n	801e198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e332:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e334:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801e336:	4433      	add	r3, r6
 801e338:	931f      	str	r3, [sp, #124]	; 0x7c
 801e33a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801e33c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e33e:	4433      	add	r3, r6
 801e340:	9320      	str	r3, [sp, #128]	; 0x80
 801e342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e344:	3b01      	subs	r3, #1
 801e346:	9309      	str	r3, [sp, #36]	; 0x24
 801e348:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e34a:	3302      	adds	r3, #2
 801e34c:	930a      	str	r3, [sp, #40]	; 0x28
 801e34e:	e702      	b.n	801e156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e350:	d027      	beq.n	801e3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801e352:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e354:	9821      	ldr	r0, [sp, #132]	; 0x84
 801e356:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e358:	3b01      	subs	r3, #1
 801e35a:	fb00 5003 	mla	r0, r0, r3, r5
 801e35e:	1400      	asrs	r0, r0, #16
 801e360:	f53f af16 	bmi.w	801e190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e364:	3901      	subs	r1, #1
 801e366:	4288      	cmp	r0, r1
 801e368:	f6bf af12 	bge.w	801e190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e36c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801e36e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e370:	fb01 0303 	mla	r3, r1, r3, r0
 801e374:	141b      	asrs	r3, r3, #16
 801e376:	f53f af0b 	bmi.w	801e190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e37a:	3a01      	subs	r2, #1
 801e37c:	4293      	cmp	r3, r2
 801e37e:	f6bf af07 	bge.w	801e190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e382:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e384:	9311      	str	r3, [sp, #68]	; 0x44
 801e386:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801e38a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e38c:	930c      	str	r3, [sp, #48]	; 0x30
 801e38e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e390:	2b00      	cmp	r3, #0
 801e392:	dc70      	bgt.n	801e476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e396:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e39c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e3a0:	930a      	str	r3, [sp, #40]	; 0x28
 801e3a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3a4:	2b00      	cmp	r3, #0
 801e3a6:	f340 8124 	ble.w	801e5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e3aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e3b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e3b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e3b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3c4:	eef0 6a62 	vmov.f32	s13, s5
 801e3c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e3cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e3d4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e3d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e3dc:	eef0 6a43 	vmov.f32	s13, s6
 801e3e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e3e4:	ee12 2a90 	vmov	r2, s5
 801e3e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e3ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3f0:	ee13 2a10 	vmov	r2, s6
 801e3f4:	9321      	str	r3, [sp, #132]	; 0x84
 801e3f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e3f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3fc:	9322      	str	r3, [sp, #136]	; 0x88
 801e3fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e400:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e402:	3b01      	subs	r3, #1
 801e404:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e408:	930e      	str	r3, [sp, #56]	; 0x38
 801e40a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e40c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801e410:	bf08      	it	eq
 801e412:	4613      	moveq	r3, r2
 801e414:	9309      	str	r3, [sp, #36]	; 0x24
 801e416:	eeb0 3a67 	vmov.f32	s6, s15
 801e41a:	eef0 2a47 	vmov.f32	s5, s14
 801e41e:	e68c      	b.n	801e13a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e420:	b149      	cbz	r1, 801e436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801e422:	5cb2      	ldrb	r2, [r6, r2]
 801e424:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e428:	4422      	add	r2, r4
 801e42a:	4628      	mov	r0, r5
 801e42c:	46ac      	mov	ip, r5
 801e42e:	e6f1      	b.n	801e214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e430:	4628      	mov	r0, r5
 801e432:	462a      	mov	r2, r5
 801e434:	e6ee      	b.n	801e214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e436:	4628      	mov	r0, r5
 801e438:	462a      	mov	r2, r5
 801e43a:	e7f7      	b.n	801e42c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801e43c:	1c47      	adds	r7, r0, #1
 801e43e:	f53f af69 	bmi.w	801e314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e442:	42ba      	cmp	r2, r7
 801e444:	f6ff af66 	blt.w	801e314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e448:	1c6f      	adds	r7, r5, #1
 801e44a:	f53f af63 	bmi.w	801e314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e44e:	42be      	cmp	r6, r7
 801e450:	f6ff af60 	blt.w	801e314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e454:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e456:	9002      	str	r0, [sp, #8]
 801e458:	b236      	sxth	r6, r6
 801e45a:	b212      	sxth	r2, r2
 801e45c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801e460:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801e464:	9200      	str	r2, [sp, #0]
 801e466:	9601      	str	r6, [sp, #4]
 801e468:	4623      	mov	r3, r4
 801e46a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801e46e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e470:	f7ff fd59 	bl	801df26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801e474:	e74e      	b.n	801e314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e476:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e478:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e47a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e47c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e47e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e482:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e484:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e488:	142d      	asrs	r5, r5, #16
 801e48a:	1400      	asrs	r0, r0, #16
 801e48c:	fb02 5000 	mla	r0, r2, r0, r5
 801e490:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e492:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e496:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e49a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801e49e:	182e      	adds	r6, r5, r0
 801e4a0:	eb04 0509 	add.w	r5, r4, r9
 801e4a4:	2b00      	cmp	r3, #0
 801e4a6:	f000 8096 	beq.w	801e5d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e4aa:	7877      	ldrb	r7, [r6, #1]
 801e4ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e4b0:	4427      	add	r7, r4
 801e4b2:	2900      	cmp	r1, #0
 801e4b4:	f000 8097 	beq.w	801e5e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801e4b8:	18b0      	adds	r0, r6, r2
 801e4ba:	5cb2      	ldrb	r2, [r6, r2]
 801e4bc:	7840      	ldrb	r0, [r0, #1]
 801e4be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e4c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e4c6:	4422      	add	r2, r4
 801e4c8:	4420      	add	r0, r4
 801e4ca:	b29b      	uxth	r3, r3
 801e4cc:	b289      	uxth	r1, r1
 801e4ce:	fb03 f801 	mul.w	r8, r3, r1
 801e4d2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e4d4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e4d8:	f8b6 c000 	ldrh.w	ip, [r6]
 801e4dc:	78be      	ldrb	r6, [r7, #2]
 801e4de:	f814 9009 	ldrb.w	r9, [r4, r9]
 801e4e2:	011b      	lsls	r3, r3, #4
 801e4e4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801e4e8:	b289      	uxth	r1, r1
 801e4ea:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e4ee:	eba3 0308 	sub.w	r3, r3, r8
 801e4f2:	b29b      	uxth	r3, r3
 801e4f4:	ebae 0e01 	sub.w	lr, lr, r1
 801e4f8:	fa1f fe8e 	uxth.w	lr, lr
 801e4fc:	435e      	muls	r6, r3
 801e4fe:	fb0e 660b 	mla	r6, lr, fp, r6
 801e502:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e506:	9310      	str	r3, [sp, #64]	; 0x40
 801e508:	fb01 660b 	mla	r6, r1, fp, r6
 801e50c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e510:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e512:	fb08 660b 	mla	r6, r8, fp, r6
 801e516:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801e51a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e51e:	fb1b fb03 	smulbb	fp, fp, r3
 801e522:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e526:	fb06 b60a 	mla	r6, r6, sl, fp
 801e52a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e52c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e530:	787d      	ldrb	r5, [r7, #1]
 801e532:	783f      	ldrb	r7, [r7, #0]
 801e534:	435d      	muls	r5, r3
 801e536:	fb0e 550b 	mla	r5, lr, fp, r5
 801e53a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e53e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e540:	fb01 550b 	mla	r5, r1, fp, r5
 801e544:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e548:	fb08 550b 	mla	r5, r8, fp, r5
 801e54c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e550:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e554:	fb1b fb03 	smulbb	fp, fp, r3
 801e558:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e55a:	437b      	muls	r3, r7
 801e55c:	7817      	ldrb	r7, [r2, #0]
 801e55e:	fb0e 3309 	mla	r3, lr, r9, r3
 801e562:	fb01 3307 	mla	r3, r1, r7, r3
 801e566:	7807      	ldrb	r7, [r0, #0]
 801e568:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e56c:	fb08 3707 	mla	r7, r8, r7, r3
 801e570:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e572:	fa5f fc8c 	uxtb.w	ip, ip
 801e576:	fb1c fc03 	smulbb	ip, ip, r3
 801e57a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e57e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e582:	fb05 b50a 	mla	r5, r5, sl, fp
 801e586:	fb07 c70a 	mla	r7, r7, sl, ip
 801e58a:	b2b6      	uxth	r6, r6
 801e58c:	b2ad      	uxth	r5, r5
 801e58e:	b2bf      	uxth	r7, r7
 801e590:	1c73      	adds	r3, r6, #1
 801e592:	1c7a      	adds	r2, r7, #1
 801e594:	f105 0b01 	add.w	fp, r5, #1
 801e598:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e59c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e5a0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e5a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e5a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e5ac:	096d      	lsrs	r5, r5, #5
 801e5ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e5b0:	4316      	orrs	r6, r2
 801e5b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e5b6:	432e      	orrs	r6, r5
 801e5b8:	f823 6b02 	strh.w	r6, [r3], #2
 801e5bc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e5be:	930c      	str	r3, [sp, #48]	; 0x30
 801e5c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e5c2:	4413      	add	r3, r2
 801e5c4:	931f      	str	r3, [sp, #124]	; 0x7c
 801e5c6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e5c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e5ca:	4413      	add	r3, r2
 801e5cc:	9320      	str	r3, [sp, #128]	; 0x80
 801e5ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e5d0:	3b01      	subs	r3, #1
 801e5d2:	9311      	str	r3, [sp, #68]	; 0x44
 801e5d4:	e6db      	b.n	801e38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801e5d6:	b149      	cbz	r1, 801e5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e5d8:	5cb2      	ldrb	r2, [r6, r2]
 801e5da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e5de:	4422      	add	r2, r4
 801e5e0:	4628      	mov	r0, r5
 801e5e2:	462f      	mov	r7, r5
 801e5e4:	e771      	b.n	801e4ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e5e6:	4628      	mov	r0, r5
 801e5e8:	462a      	mov	r2, r5
 801e5ea:	e76e      	b.n	801e4ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e5ec:	4628      	mov	r0, r5
 801e5ee:	462a      	mov	r2, r5
 801e5f0:	e7f7      	b.n	801e5e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e5f2:	b015      	add	sp, #84	; 0x54
 801e5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801e5f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5fc:	880f      	ldrh	r7, [r1, #0]
 801e5fe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801e602:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801e606:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801e60a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e60e:	023c      	lsls	r4, r7, #8
 801e610:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801e614:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801e618:	017c      	lsls	r4, r7, #5
 801e61a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801e61e:	00ff      	lsls	r7, r7, #3
 801e620:	ea4b 0404 	orr.w	r4, fp, r4
 801e624:	b2ff      	uxtb	r7, r7
 801e626:	fb05 ca0e 	mla	sl, r5, lr, ip
 801e62a:	4327      	orrs	r7, r4
 801e62c:	2d00      	cmp	r5, #0
 801e62e:	eb02 080a 	add.w	r8, r2, sl
 801e632:	9701      	str	r7, [sp, #4]
 801e634:	db7e      	blt.n	801e734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e636:	45a9      	cmp	r9, r5
 801e638:	dd7c      	ble.n	801e734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e63a:	f1bc 0f00 	cmp.w	ip, #0
 801e63e:	db77      	blt.n	801e730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e640:	45e6      	cmp	lr, ip
 801e642:	dd75      	ble.n	801e730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e644:	f812 700a 	ldrb.w	r7, [r2, sl]
 801e648:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e64c:	441f      	add	r7, r3
 801e64e:	f11c 0201 	adds.w	r2, ip, #1
 801e652:	d472      	bmi.n	801e73a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e654:	4596      	cmp	lr, r2
 801e656:	dd70      	ble.n	801e73a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e658:	2800      	cmp	r0, #0
 801e65a:	d06e      	beq.n	801e73a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e65c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801e660:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801e664:	441c      	add	r4, r3
 801e666:	3501      	adds	r5, #1
 801e668:	d46b      	bmi.n	801e742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e66a:	45a9      	cmp	r9, r5
 801e66c:	dd69      	ble.n	801e742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e66e:	2e00      	cmp	r6, #0
 801e670:	d067      	beq.n	801e742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e672:	f1bc 0f00 	cmp.w	ip, #0
 801e676:	db62      	blt.n	801e73e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e678:	45e6      	cmp	lr, ip
 801e67a:	dd60      	ble.n	801e73e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e67c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801e680:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e684:	441d      	add	r5, r3
 801e686:	f11c 0201 	adds.w	r2, ip, #1
 801e68a:	d45d      	bmi.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e68c:	4596      	cmp	lr, r2
 801e68e:	dd5b      	ble.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e690:	2800      	cmp	r0, #0
 801e692:	d059      	beq.n	801e748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e694:	44c6      	add	lr, r8
 801e696:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e69a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e69e:	4413      	add	r3, r2
 801e6a0:	b280      	uxth	r0, r0
 801e6a2:	b2b2      	uxth	r2, r6
 801e6a4:	fb00 f602 	mul.w	r6, r0, r2
 801e6a8:	0100      	lsls	r0, r0, #4
 801e6aa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801e6ae:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801e6b2:	1b80      	subs	r0, r0, r6
 801e6b4:	fa1f fc82 	uxth.w	ip, r2
 801e6b8:	b282      	uxth	r2, r0
 801e6ba:	78a0      	ldrb	r0, [r4, #2]
 801e6bc:	f897 e002 	ldrb.w	lr, [r7, #2]
 801e6c0:	f897 9000 	ldrb.w	r9, [r7]
 801e6c4:	787f      	ldrb	r7, [r7, #1]
 801e6c6:	eba8 080c 	sub.w	r8, r8, ip
 801e6ca:	fa1f f888 	uxth.w	r8, r8
 801e6ce:	4350      	muls	r0, r2
 801e6d0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801e6d4:	78a8      	ldrb	r0, [r5, #2]
 801e6d6:	fb0c e000 	mla	r0, ip, r0, lr
 801e6da:	f893 e002 	ldrb.w	lr, [r3, #2]
 801e6de:	fb06 0e0e 	mla	lr, r6, lr, r0
 801e6e2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801e6e6:	f894 e000 	ldrb.w	lr, [r4]
 801e6ea:	fb02 fe0e 	mul.w	lr, r2, lr
 801e6ee:	fb08 e909 	mla	r9, r8, r9, lr
 801e6f2:	f895 e000 	ldrb.w	lr, [r5]
 801e6f6:	fb0c 990e 	mla	r9, ip, lr, r9
 801e6fa:	f893 e000 	ldrb.w	lr, [r3]
 801e6fe:	785b      	ldrb	r3, [r3, #1]
 801e700:	fb06 9e0e 	mla	lr, r6, lr, r9
 801e704:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e708:	ea4e 0e00 	orr.w	lr, lr, r0
 801e70c:	7860      	ldrb	r0, [r4, #1]
 801e70e:	4350      	muls	r0, r2
 801e710:	786a      	ldrb	r2, [r5, #1]
 801e712:	fb08 0007 	mla	r0, r8, r7, r0
 801e716:	fb0c 0202 	mla	r2, ip, r2, r0
 801e71a:	fb06 2303 	mla	r3, r6, r3, r2
 801e71e:	095b      	lsrs	r3, r3, #5
 801e720:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e724:	ea4e 0303 	orr.w	r3, lr, r3
 801e728:	800b      	strh	r3, [r1, #0]
 801e72a:	b003      	add	sp, #12
 801e72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e730:	af01      	add	r7, sp, #4
 801e732:	e78c      	b.n	801e64e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801e734:	ac01      	add	r4, sp, #4
 801e736:	4627      	mov	r7, r4
 801e738:	e795      	b.n	801e666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e73a:	ac01      	add	r4, sp, #4
 801e73c:	e793      	b.n	801e666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e73e:	ad01      	add	r5, sp, #4
 801e740:	e7a1      	b.n	801e686 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801e742:	ab01      	add	r3, sp, #4
 801e744:	461d      	mov	r5, r3
 801e746:	e7ab      	b.n	801e6a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801e748:	ab01      	add	r3, sp, #4
 801e74a:	e7a9      	b.n	801e6a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801e74c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e750:	b08f      	sub	sp, #60	; 0x3c
 801e752:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801e756:	920c      	str	r2, [sp, #48]	; 0x30
 801e758:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801e75a:	910a      	str	r1, [sp, #40]	; 0x28
 801e75c:	9306      	str	r3, [sp, #24]
 801e75e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801e762:	900d      	str	r0, [sp, #52]	; 0x34
 801e764:	6850      	ldr	r0, [r2, #4]
 801e766:	6812      	ldr	r2, [r2, #0]
 801e768:	fb00 1303 	mla	r3, r0, r3, r1
 801e76c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e770:	9307      	str	r3, [sp, #28]
 801e772:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e774:	681b      	ldr	r3, [r3, #0]
 801e776:	9308      	str	r3, [sp, #32]
 801e778:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e77a:	685c      	ldr	r4, [r3, #4]
 801e77c:	3404      	adds	r4, #4
 801e77e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e780:	2b00      	cmp	r3, #0
 801e782:	dc03      	bgt.n	801e78c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e784:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e786:	2b00      	cmp	r3, #0
 801e788:	f340 81d6 	ble.w	801eb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e78c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e78e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e792:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e796:	1e48      	subs	r0, r1, #1
 801e798:	1e56      	subs	r6, r2, #1
 801e79a:	9b06      	ldr	r3, [sp, #24]
 801e79c:	2b00      	cmp	r3, #0
 801e79e:	f340 80b7 	ble.w	801e910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801e7a2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801e7a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e7aa:	d406      	bmi.n	801e7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7ac:	4287      	cmp	r7, r0
 801e7ae:	da04      	bge.n	801e7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7b0:	2b00      	cmp	r3, #0
 801e7b2:	db02      	blt.n	801e7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7b4:	42b3      	cmp	r3, r6
 801e7b6:	f2c0 80ac 	blt.w	801e912 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e7ba:	3701      	adds	r7, #1
 801e7bc:	f100 809d 	bmi.w	801e8fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e7c0:	42b9      	cmp	r1, r7
 801e7c2:	f2c0 809a 	blt.w	801e8fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e7c6:	3301      	adds	r3, #1
 801e7c8:	f100 8097 	bmi.w	801e8fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e7cc:	429a      	cmp	r2, r3
 801e7ce:	f2c0 8094 	blt.w	801e8fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e7d2:	9b06      	ldr	r3, [sp, #24]
 801e7d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801e7d6:	9b07      	ldr	r3, [sp, #28]
 801e7d8:	9309      	str	r3, [sp, #36]	; 0x24
 801e7da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e7dc:	2b00      	cmp	r3, #0
 801e7de:	f340 80b5 	ble.w	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e7e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e7e4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e7e6:	68c7      	ldr	r7, [r0, #12]
 801e7e8:	6892      	ldr	r2, [r2, #8]
 801e7ea:	ea5f 402b 	movs.w	r0, fp, asr #16
 801e7ee:	ea4f 4625 	mov.w	r6, r5, asr #16
 801e7f2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e7f6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e7fa:	f100 80fb 	bmi.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e7fe:	f102 3cff 	add.w	ip, r2, #4294967295
 801e802:	4560      	cmp	r0, ip
 801e804:	f280 80f6 	bge.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e808:	2e00      	cmp	r6, #0
 801e80a:	f2c0 80f3 	blt.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e80e:	f107 3cff 	add.w	ip, r7, #4294967295
 801e812:	4566      	cmp	r6, ip
 801e814:	f280 80ee 	bge.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e818:	b212      	sxth	r2, r2
 801e81a:	fb06 0002 	mla	r0, r6, r2, r0
 801e81e:	9e08      	ldr	r6, [sp, #32]
 801e820:	1837      	adds	r7, r6, r0
 801e822:	5c30      	ldrb	r0, [r6, r0]
 801e824:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801e828:	eb04 0c08 	add.w	ip, r4, r8
 801e82c:	2b00      	cmp	r3, #0
 801e82e:	f000 80d3 	beq.w	801e9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e832:	787e      	ldrb	r6, [r7, #1]
 801e834:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e838:	4426      	add	r6, r4
 801e83a:	2900      	cmp	r1, #0
 801e83c:	f000 80d4 	beq.w	801e9e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801e840:	18b8      	adds	r0, r7, r2
 801e842:	5cba      	ldrb	r2, [r7, r2]
 801e844:	7840      	ldrb	r0, [r0, #1]
 801e846:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e84a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e84e:	4422      	add	r2, r4
 801e850:	4420      	add	r0, r4
 801e852:	b29b      	uxth	r3, r3
 801e854:	b289      	uxth	r1, r1
 801e856:	fb03 f901 	mul.w	r9, r3, r1
 801e85a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e85e:	011b      	lsls	r3, r3, #4
 801e860:	b289      	uxth	r1, r1
 801e862:	78b7      	ldrb	r7, [r6, #2]
 801e864:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e868:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e86c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e870:	eba3 0309 	sub.w	r3, r3, r9
 801e874:	b29b      	uxth	r3, r3
 801e876:	ebae 0e01 	sub.w	lr, lr, r1
 801e87a:	fa1f fe8e 	uxth.w	lr, lr
 801e87e:	435f      	muls	r7, r3
 801e880:	fb0e 770a 	mla	r7, lr, sl, r7
 801e884:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e888:	fb01 770a 	mla	r7, r1, sl, r7
 801e88c:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e890:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e894:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e898:	f896 8000 	ldrb.w	r8, [r6]
 801e89c:	7876      	ldrb	r6, [r6, #1]
 801e89e:	fb03 f808 	mul.w	r8, r3, r8
 801e8a2:	fb0e 8807 	mla	r8, lr, r7, r8
 801e8a6:	7817      	ldrb	r7, [r2, #0]
 801e8a8:	fb01 8807 	mla	r8, r1, r7, r8
 801e8ac:	7807      	ldrb	r7, [r0, #0]
 801e8ae:	fb09 8707 	mla	r7, r9, r7, r8
 801e8b2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e8b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e8ba:	ea47 070a 	orr.w	r7, r7, sl
 801e8be:	4373      	muls	r3, r6
 801e8c0:	f892 a001 	ldrb.w	sl, [r2, #1]
 801e8c4:	fb0e 330c 	mla	r3, lr, ip, r3
 801e8c8:	fb01 310a 	mla	r1, r1, sl, r3
 801e8cc:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e8d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8d2:	fb09 1a0a 	mla	sl, r9, sl, r1
 801e8d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e8da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e8de:	ea47 070a 	orr.w	r7, r7, sl
 801e8e2:	801f      	strh	r7, [r3, #0]
 801e8e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8e6:	3302      	adds	r3, #2
 801e8e8:	9309      	str	r3, [sp, #36]	; 0x24
 801e8ea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e8ec:	449b      	add	fp, r3
 801e8ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e8f0:	441d      	add	r5, r3
 801e8f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e8f4:	3b01      	subs	r3, #1
 801e8f6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e8f8:	e76f      	b.n	801e7da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e8fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e8fc:	449b      	add	fp, r3
 801e8fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e900:	441d      	add	r5, r3
 801e902:	9b06      	ldr	r3, [sp, #24]
 801e904:	3b01      	subs	r3, #1
 801e906:	9306      	str	r3, [sp, #24]
 801e908:	9b07      	ldr	r3, [sp, #28]
 801e90a:	3302      	adds	r3, #2
 801e90c:	9307      	str	r3, [sp, #28]
 801e90e:	e744      	b.n	801e79a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801e910:	d023      	beq.n	801e95a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e912:	9b06      	ldr	r3, [sp, #24]
 801e914:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e916:	3b01      	subs	r3, #1
 801e918:	fb00 b003 	mla	r0, r0, r3, fp
 801e91c:	1400      	asrs	r0, r0, #16
 801e91e:	f53f af58 	bmi.w	801e7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e922:	3901      	subs	r1, #1
 801e924:	4288      	cmp	r0, r1
 801e926:	f6bf af54 	bge.w	801e7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e92a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e92c:	fb01 5303 	mla	r3, r1, r3, r5
 801e930:	141b      	asrs	r3, r3, #16
 801e932:	f53f af4e 	bmi.w	801e7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e936:	3a01      	subs	r2, #1
 801e938:	4293      	cmp	r3, r2
 801e93a:	f6bf af4a 	bge.w	801e7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e93e:	9b06      	ldr	r3, [sp, #24]
 801e940:	9309      	str	r3, [sp, #36]	; 0x24
 801e942:	9b07      	ldr	r3, [sp, #28]
 801e944:	930b      	str	r3, [sp, #44]	; 0x2c
 801e946:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e948:	2b00      	cmp	r3, #0
 801e94a:	dc70      	bgt.n	801ea2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801e94c:	9b06      	ldr	r3, [sp, #24]
 801e94e:	9a07      	ldr	r2, [sp, #28]
 801e950:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e954:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e958:	9307      	str	r3, [sp, #28]
 801e95a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e95c:	2b00      	cmp	r3, #0
 801e95e:	f340 80eb 	ble.w	801eb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e962:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e966:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e96a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e96e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e970:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e974:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e978:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e97c:	eef0 6a62 	vmov.f32	s13, s5
 801e980:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e984:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e988:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e98c:	ee16 ba90 	vmov	fp, s13
 801e990:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e994:	eef0 6a43 	vmov.f32	s13, s6
 801e998:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e99c:	ee12 2a90 	vmov	r2, s5
 801e9a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9a8:	ee13 2a10 	vmov	r2, s6
 801e9ac:	931b      	str	r3, [sp, #108]	; 0x6c
 801e9ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e9b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9b4:	931c      	str	r3, [sp, #112]	; 0x70
 801e9b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e9ba:	3b01      	subs	r3, #1
 801e9bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9c0:	930a      	str	r3, [sp, #40]	; 0x28
 801e9c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e9c4:	bf08      	it	eq
 801e9c6:	4613      	moveq	r3, r2
 801e9c8:	ee16 5a90 	vmov	r5, s13
 801e9cc:	9306      	str	r3, [sp, #24]
 801e9ce:	eeb0 3a67 	vmov.f32	s6, s15
 801e9d2:	eef0 2a47 	vmov.f32	s5, s14
 801e9d6:	e6d2      	b.n	801e77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e9d8:	b149      	cbz	r1, 801e9ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801e9da:	5cba      	ldrb	r2, [r7, r2]
 801e9dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e9e0:	4422      	add	r2, r4
 801e9e2:	4660      	mov	r0, ip
 801e9e4:	4666      	mov	r6, ip
 801e9e6:	e734      	b.n	801e852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801e9e8:	4660      	mov	r0, ip
 801e9ea:	4662      	mov	r2, ip
 801e9ec:	e731      	b.n	801e852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801e9ee:	4660      	mov	r0, ip
 801e9f0:	4662      	mov	r2, ip
 801e9f2:	e7f7      	b.n	801e9e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801e9f4:	f110 0c01 	adds.w	ip, r0, #1
 801e9f8:	f53f af74 	bmi.w	801e8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9fc:	4562      	cmp	r2, ip
 801e9fe:	f6ff af71 	blt.w	801e8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea02:	f116 0c01 	adds.w	ip, r6, #1
 801ea06:	f53f af6d 	bmi.w	801e8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea0a:	4567      	cmp	r7, ip
 801ea0c:	f6ff af6a 	blt.w	801e8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea10:	b23f      	sxth	r7, r7
 801ea12:	b212      	sxth	r2, r2
 801ea14:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ea18:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ea1c:	9200      	str	r2, [sp, #0]
 801ea1e:	9701      	str	r7, [sp, #4]
 801ea20:	4623      	mov	r3, r4
 801ea22:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ea26:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ea28:	f7ff fde6 	bl	801e5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ea2c:	e75a      	b.n	801e8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea2e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ea30:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ea34:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ea38:	1428      	asrs	r0, r5, #16
 801ea3a:	fb02 6000 	mla	r0, r2, r0, r6
 801ea3e:	9e08      	ldr	r6, [sp, #32]
 801ea40:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ea44:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ea48:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ea4c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ea50:	1837      	adds	r7, r6, r0
 801ea52:	eb04 0c08 	add.w	ip, r4, r8
 801ea56:	2b00      	cmp	r3, #0
 801ea58:	d060      	beq.n	801eb1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ea5a:	787e      	ldrb	r6, [r7, #1]
 801ea5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ea60:	4426      	add	r6, r4
 801ea62:	2900      	cmp	r1, #0
 801ea64:	d062      	beq.n	801eb2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ea66:	18b8      	adds	r0, r7, r2
 801ea68:	5cba      	ldrb	r2, [r7, r2]
 801ea6a:	7840      	ldrb	r0, [r0, #1]
 801ea6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ea70:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ea74:	4422      	add	r2, r4
 801ea76:	4420      	add	r0, r4
 801ea78:	b29b      	uxth	r3, r3
 801ea7a:	b289      	uxth	r1, r1
 801ea7c:	fb03 f901 	mul.w	r9, r3, r1
 801ea80:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ea84:	011b      	lsls	r3, r3, #4
 801ea86:	b289      	uxth	r1, r1
 801ea88:	78b7      	ldrb	r7, [r6, #2]
 801ea8a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ea8e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ea92:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ea96:	eba3 0309 	sub.w	r3, r3, r9
 801ea9a:	b29b      	uxth	r3, r3
 801ea9c:	ebae 0e01 	sub.w	lr, lr, r1
 801eaa0:	fa1f fe8e 	uxth.w	lr, lr
 801eaa4:	435f      	muls	r7, r3
 801eaa6:	fb0e 770a 	mla	r7, lr, sl, r7
 801eaaa:	f892 a002 	ldrb.w	sl, [r2, #2]
 801eaae:	fb01 770a 	mla	r7, r1, sl, r7
 801eab2:	f890 a002 	ldrb.w	sl, [r0, #2]
 801eab6:	fb09 7a0a 	mla	sl, r9, sl, r7
 801eaba:	f814 7008 	ldrb.w	r7, [r4, r8]
 801eabe:	f896 8000 	ldrb.w	r8, [r6]
 801eac2:	7876      	ldrb	r6, [r6, #1]
 801eac4:	fb03 f808 	mul.w	r8, r3, r8
 801eac8:	fb0e 8807 	mla	r8, lr, r7, r8
 801eacc:	7817      	ldrb	r7, [r2, #0]
 801eace:	fb01 8807 	mla	r8, r1, r7, r8
 801ead2:	7807      	ldrb	r7, [r0, #0]
 801ead4:	fb09 8707 	mla	r7, r9, r7, r8
 801ead8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801eadc:	4373      	muls	r3, r6
 801eade:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eae2:	7856      	ldrb	r6, [r2, #1]
 801eae4:	ea47 070a 	orr.w	r7, r7, sl
 801eae8:	fb0e 330c 	mla	r3, lr, ip, r3
 801eaec:	f890 a001 	ldrb.w	sl, [r0, #1]
 801eaf0:	fb01 3306 	mla	r3, r1, r6, r3
 801eaf4:	fb09 3a0a 	mla	sl, r9, sl, r3
 801eaf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eafc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eafe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb02:	ea47 070a 	orr.w	r7, r7, sl
 801eb06:	f823 7b02 	strh.w	r7, [r3], #2
 801eb0a:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb0c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801eb0e:	449b      	add	fp, r3
 801eb10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb12:	441d      	add	r5, r3
 801eb14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb16:	3b01      	subs	r3, #1
 801eb18:	9309      	str	r3, [sp, #36]	; 0x24
 801eb1a:	e714      	b.n	801e946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801eb1c:	b149      	cbz	r1, 801eb32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801eb1e:	5cba      	ldrb	r2, [r7, r2]
 801eb20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eb24:	4422      	add	r2, r4
 801eb26:	4660      	mov	r0, ip
 801eb28:	4666      	mov	r6, ip
 801eb2a:	e7a5      	b.n	801ea78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801eb2c:	4660      	mov	r0, ip
 801eb2e:	4662      	mov	r2, ip
 801eb30:	e7a2      	b.n	801ea78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801eb32:	4660      	mov	r0, ip
 801eb34:	4662      	mov	r2, ip
 801eb36:	e7f7      	b.n	801eb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801eb38:	b00f      	add	sp, #60	; 0x3c
 801eb3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801eb3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb42:	b085      	sub	sp, #20
 801eb44:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801eb48:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801eb4c:	9102      	str	r1, [sp, #8]
 801eb4e:	2c00      	cmp	r4, #0
 801eb50:	fb04 710c 	mla	r1, r4, ip, r7
 801eb54:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801eb58:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801eb5c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801eb60:	eb02 0e01 	add.w	lr, r2, r1
 801eb64:	f2c0 8122 	blt.w	801edac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801eb68:	45a0      	cmp	r8, r4
 801eb6a:	f340 811f 	ble.w	801edac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801eb6e:	2f00      	cmp	r7, #0
 801eb70:	f2c0 811a 	blt.w	801eda8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801eb74:	45bc      	cmp	ip, r7
 801eb76:	f340 8117 	ble.w	801eda8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801eb7a:	5c52      	ldrb	r2, [r2, r1]
 801eb7c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801eb80:	1c7a      	adds	r2, r7, #1
 801eb82:	f100 8116 	bmi.w	801edb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801eb86:	4594      	cmp	ip, r2
 801eb88:	f340 8113 	ble.w	801edb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801eb8c:	2e00      	cmp	r6, #0
 801eb8e:	f000 8112 	beq.w	801edb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801eb92:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801eb96:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801eb9a:	3401      	adds	r4, #1
 801eb9c:	f100 810f 	bmi.w	801edbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801eba0:	45a0      	cmp	r8, r4
 801eba2:	f340 810c 	ble.w	801edbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801eba6:	2800      	cmp	r0, #0
 801eba8:	f000 810c 	beq.w	801edc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ebac:	2f00      	cmp	r7, #0
 801ebae:	f2c0 8104 	blt.w	801edba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ebb2:	45bc      	cmp	ip, r7
 801ebb4:	f340 8101 	ble.w	801edba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ebb8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ebbc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ebc0:	3701      	adds	r7, #1
 801ebc2:	f100 8102 	bmi.w	801edca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ebc6:	45bc      	cmp	ip, r7
 801ebc8:	f340 80ff 	ble.w	801edca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ebcc:	2e00      	cmp	r6, #0
 801ebce:	f000 80fe 	beq.w	801edce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ebd2:	44f4      	add	ip, lr
 801ebd4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ebd8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ebdc:	b2b6      	uxth	r6, r6
 801ebde:	b280      	uxth	r0, r0
 801ebe0:	fb00 fe06 	mul.w	lr, r0, r6
 801ebe4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ebe8:	0136      	lsls	r6, r6, #4
 801ebea:	eba6 070e 	sub.w	r7, r6, lr
 801ebee:	b280      	uxth	r0, r0
 801ebf0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ebf4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ebf8:	b2bf      	uxth	r7, r7
 801ebfa:	1a1b      	subs	r3, r3, r0
 801ebfc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ec00:	b29b      	uxth	r3, r3
 801ec02:	fb0a f607 	mul.w	r6, sl, r7
 801ec06:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ec0a:	fb0b 6603 	mla	r6, fp, r3, r6
 801ec0e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ec12:	fb00 6609 	mla	r6, r0, r9, r6
 801ec16:	fb0e 6608 	mla	r6, lr, r8, r6
 801ec1a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ec1e:	9600      	str	r6, [sp, #0]
 801ec20:	2e00      	cmp	r6, #0
 801ec22:	f000 80be 	beq.w	801eda2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ec26:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec2a:	fb0b fc0c 	mul.w	ip, fp, ip
 801ec2e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ec32:	fb0b f505 	mul.w	r5, fp, r5
 801ec36:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ec3a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ec3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec42:	44dc      	add	ip, fp
 801ec44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec48:	9501      	str	r5, [sp, #4]
 801ec4a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ec4e:	9503      	str	r5, [sp, #12]
 801ec50:	9d01      	ldr	r5, [sp, #4]
 801ec52:	9e02      	ldr	r6, [sp, #8]
 801ec54:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ec58:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ec5c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ec60:	fb0a fc0c 	mul.w	ip, sl, ip
 801ec64:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ec68:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ec6c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ec70:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec74:	4465      	add	r5, ip
 801ec76:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ec7a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ec7e:	fb09 fc0c 	mul.w	ip, r9, ip
 801ec82:	fb09 f904 	mul.w	r9, r9, r4
 801ec86:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ec8a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ec8e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ec92:	fb08 f404 	mul.w	r4, r8, r4
 801ec96:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ec9a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ec9e:	fb08 f802 	mul.w	r8, r8, r2
 801eca2:	fb0a fa01 	mul.w	sl, sl, r1
 801eca6:	0a22      	lsrs	r2, r4, #8
 801eca8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ecac:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ecb0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ecb4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ecb8:	4414      	add	r4, r2
 801ecba:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ecbe:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ecc2:	0a2d      	lsrs	r5, r5, #8
 801ecc4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ecc8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801eccc:	9a03      	ldr	r2, [sp, #12]
 801ecce:	8836      	ldrh	r6, [r6, #0]
 801ecd0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ecd4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ecd8:	437d      	muls	r5, r7
 801ecda:	4461      	add	r1, ip
 801ecdc:	0a24      	lsrs	r4, r4, #8
 801ecde:	fb02 5503 	mla	r5, r2, r3, r5
 801ece2:	0a09      	lsrs	r1, r1, #8
 801ece4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ece8:	fb04 540e 	mla	r4, r4, lr, r5
 801ecec:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ecf0:	fb01 4100 	mla	r1, r1, r0, r4
 801ecf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecf8:	0a09      	lsrs	r1, r1, #8
 801ecfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecfe:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ed02:	fb07 f70a 	mul.w	r7, r7, sl
 801ed06:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ed0a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ed0e:	fb03 7101 	mla	r1, r3, r1, r7
 801ed12:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed16:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ed1a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ed1e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ed22:	fb00 e101 	mla	r1, r0, r1, lr
 801ed26:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ed2a:	9a00      	ldr	r2, [sp, #0]
 801ed2c:	b287      	uxth	r7, r0
 801ed2e:	437a      	muls	r2, r7
 801ed30:	0a09      	lsrs	r1, r1, #8
 801ed32:	1c53      	adds	r3, r2, #1
 801ed34:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ed38:	4321      	orrs	r1, r4
 801ed3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed3e:	1235      	asrs	r5, r6, #8
 801ed40:	0c0a      	lsrs	r2, r1, #16
 801ed42:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ed46:	b2db      	uxtb	r3, r3
 801ed48:	fb12 f207 	smulbb	r2, r2, r7
 801ed4c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ed50:	fb05 2503 	mla	r5, r5, r3, r2
 801ed54:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ed58:	10f2      	asrs	r2, r6, #3
 801ed5a:	b2c8      	uxtb	r0, r1
 801ed5c:	00f6      	lsls	r6, r6, #3
 801ed5e:	fb14 f407 	smulbb	r4, r4, r7
 801ed62:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ed66:	b2f6      	uxtb	r6, r6
 801ed68:	fb10 f007 	smulbb	r0, r0, r7
 801ed6c:	fb02 4203 	mla	r2, r2, r3, r4
 801ed70:	b2ad      	uxth	r5, r5
 801ed72:	fb06 0303 	mla	r3, r6, r3, r0
 801ed76:	b299      	uxth	r1, r3
 801ed78:	b294      	uxth	r4, r2
 801ed7a:	1c6b      	adds	r3, r5, #1
 801ed7c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ed80:	1c62      	adds	r2, r4, #1
 801ed82:	1c4b      	adds	r3, r1, #1
 801ed84:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ed88:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ed8c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ed90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed94:	0952      	lsrs	r2, r2, #5
 801ed96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed9a:	432b      	orrs	r3, r5
 801ed9c:	4313      	orrs	r3, r2
 801ed9e:	9a02      	ldr	r2, [sp, #8]
 801eda0:	8013      	strh	r3, [r2, #0]
 801eda2:	b005      	add	sp, #20
 801eda4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eda8:	2500      	movs	r5, #0
 801edaa:	e6e9      	b.n	801eb80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801edac:	2100      	movs	r1, #0
 801edae:	460d      	mov	r5, r1
 801edb0:	e6f3      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801edb2:	2100      	movs	r1, #0
 801edb4:	e6f1      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801edb6:	4631      	mov	r1, r6
 801edb8:	e6ef      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801edba:	2400      	movs	r4, #0
 801edbc:	e700      	b.n	801ebc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801edbe:	2200      	movs	r2, #0
 801edc0:	4614      	mov	r4, r2
 801edc2:	e70b      	b.n	801ebdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801edc4:	4602      	mov	r2, r0
 801edc6:	4604      	mov	r4, r0
 801edc8:	e708      	b.n	801ebdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801edca:	2200      	movs	r2, #0
 801edcc:	e706      	b.n	801ebdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801edce:	4632      	mov	r2, r6
 801edd0:	e704      	b.n	801ebdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801edd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801edd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edd6:	b09f      	sub	sp, #124	; 0x7c
 801edd8:	921b      	str	r2, [sp, #108]	; 0x6c
 801edda:	9309      	str	r3, [sp, #36]	; 0x24
 801eddc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801edde:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ede2:	931c      	str	r3, [sp, #112]	; 0x70
 801ede4:	9119      	str	r1, [sp, #100]	; 0x64
 801ede6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801edea:	901d      	str	r0, [sp, #116]	; 0x74
 801edec:	6850      	ldr	r0, [r2, #4]
 801edee:	6812      	ldr	r2, [r2, #0]
 801edf0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801edf2:	fb00 1303 	mla	r3, r0, r3, r1
 801edf6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801edfa:	930c      	str	r3, [sp, #48]	; 0x30
 801edfc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801edfe:	681b      	ldr	r3, [r3, #0]
 801ee00:	9312      	str	r3, [sp, #72]	; 0x48
 801ee02:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee04:	685e      	ldr	r6, [r3, #4]
 801ee06:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ee0a:	930d      	str	r3, [sp, #52]	; 0x34
 801ee0c:	3604      	adds	r6, #4
 801ee0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ee10:	2b00      	cmp	r3, #0
 801ee12:	dc03      	bgt.n	801ee1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ee14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ee16:	2b00      	cmp	r3, #0
 801ee18:	f340 8388 	ble.w	801f52c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ee1c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee22:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee26:	1e48      	subs	r0, r1, #1
 801ee28:	1e57      	subs	r7, r2, #1
 801ee2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee2c:	2b00      	cmp	r3, #0
 801ee2e:	f340 8195 	ble.w	801f15c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ee32:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ee34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ee38:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ee3c:	d406      	bmi.n	801ee4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee3e:	4584      	cmp	ip, r0
 801ee40:	da04      	bge.n	801ee4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee42:	2b00      	cmp	r3, #0
 801ee44:	db02      	blt.n	801ee4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee46:	42bb      	cmp	r3, r7
 801ee48:	f2c0 8189 	blt.w	801f15e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ee4c:	f11c 0c01 	adds.w	ip, ip, #1
 801ee50:	f100 8177 	bmi.w	801f142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee54:	4561      	cmp	r1, ip
 801ee56:	f2c0 8174 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee5a:	3301      	adds	r3, #1
 801ee5c:	f100 8171 	bmi.w	801f142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee60:	429a      	cmp	r2, r3
 801ee62:	f2c0 816e 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee68:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ee6a:	931a      	str	r3, [sp, #104]	; 0x68
 801ee6c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ee6e:	2b00      	cmp	r3, #0
 801ee70:	f340 8193 	ble.w	801f19a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ee74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ee76:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ee7a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee7c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ee80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ee82:	141b      	asrs	r3, r3, #16
 801ee84:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ee88:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ee8c:	f100 81d6 	bmi.w	801f23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ee90:	f100 38ff 	add.w	r8, r0, #4294967295
 801ee94:	4543      	cmp	r3, r8
 801ee96:	f280 81d1 	bge.w	801f23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ee9a:	f1bc 0f00 	cmp.w	ip, #0
 801ee9e:	f2c0 81cd 	blt.w	801f23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eea2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eea6:	45c4      	cmp	ip, r8
 801eea8:	f280 81c8 	bge.w	801f23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eeac:	b200      	sxth	r0, r0
 801eeae:	fb0c 3300 	mla	r3, ip, r0, r3
 801eeb2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801eeb4:	eb04 0803 	add.w	r8, r4, r3
 801eeb8:	5ce3      	ldrb	r3, [r4, r3]
 801eeba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801eebe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801eec2:	2a00      	cmp	r2, #0
 801eec4:	f000 81af 	beq.w	801f226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801eec8:	f898 c001 	ldrb.w	ip, [r8, #1]
 801eecc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801eed0:	940e      	str	r4, [sp, #56]	; 0x38
 801eed2:	0e24      	lsrs	r4, r4, #24
 801eed4:	9415      	str	r4, [sp, #84]	; 0x54
 801eed6:	b179      	cbz	r1, 801eef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801eed8:	eb08 0c00 	add.w	ip, r8, r0
 801eedc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801eee0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801eee4:	900a      	str	r0, [sp, #40]	; 0x28
 801eee6:	0e00      	lsrs	r0, r0, #24
 801eee8:	9013      	str	r0, [sp, #76]	; 0x4c
 801eeea:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801eeee:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801eef2:	900f      	str	r0, [sp, #60]	; 0x3c
 801eef4:	0e00      	lsrs	r0, r0, #24
 801eef6:	9016      	str	r0, [sp, #88]	; 0x58
 801eef8:	b292      	uxth	r2, r2
 801eefa:	b289      	uxth	r1, r1
 801eefc:	fb02 f901 	mul.w	r9, r2, r1
 801ef00:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ef04:	0112      	lsls	r2, r2, #4
 801ef06:	eba2 0809 	sub.w	r8, r2, r9
 801ef0a:	b289      	uxth	r1, r1
 801ef0c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ef10:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ef12:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ef14:	fa1f f888 	uxth.w	r8, r8
 801ef18:	1a52      	subs	r2, r2, r1
 801ef1a:	b292      	uxth	r2, r2
 801ef1c:	fb08 f000 	mul.w	r0, r8, r0
 801ef20:	fb02 000e 	mla	r0, r2, lr, r0
 801ef24:	fb01 0004 	mla	r0, r1, r4, r0
 801ef28:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ef2a:	fb09 0004 	mla	r0, r9, r4, r0
 801ef2e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ef32:	2800      	cmp	r0, #0
 801ef34:	f000 80fa 	beq.w	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ef38:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ef3c:	d01b      	beq.n	801ef76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ef3e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ef42:	fb0e fa0a 	mul.w	sl, lr, sl
 801ef46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef4a:	fb0e fe03 	mul.w	lr, lr, r3
 801ef4e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ef52:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ef56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ef5a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ef5e:	4453      	add	r3, sl
 801ef60:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ef64:	0a1b      	lsrs	r3, r3, #8
 801ef66:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ef6e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ef72:	ea43 030c 	orr.w	r3, r3, ip
 801ef76:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ef78:	2cff      	cmp	r4, #255	; 0xff
 801ef7a:	d021      	beq.n	801efc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ef7c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ef7e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ef82:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ef84:	fb04 fb0b 	mul.w	fp, r4, fp
 801ef88:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ef8a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ef8e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ef90:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ef94:	fb04 fa0a 	mul.w	sl, r4, sl
 801ef98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef9c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801efa0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801efa4:	44de      	add	lr, fp
 801efa6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801efaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801efae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efb6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efba:	ea4e 040a 	orr.w	r4, lr, sl
 801efbe:	940e      	str	r4, [sp, #56]	; 0x38
 801efc0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801efc2:	2cff      	cmp	r4, #255	; 0xff
 801efc4:	d021      	beq.n	801f00a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801efc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801efc8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801efcc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801efce:	fb04 fb0b 	mul.w	fp, r4, fp
 801efd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801efd4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801efd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801efda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801efde:	fb04 fa0a 	mul.w	sl, r4, sl
 801efe2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efe6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801efea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801efee:	44de      	add	lr, fp
 801eff0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eff4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eff8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801effc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f000:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f004:	ea4e 040a 	orr.w	r4, lr, sl
 801f008:	940a      	str	r4, [sp, #40]	; 0x28
 801f00a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f00c:	2cff      	cmp	r4, #255	; 0xff
 801f00e:	d021      	beq.n	801f054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f010:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f012:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f016:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f018:	fb04 fb0b 	mul.w	fp, r4, fp
 801f01c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f01e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f022:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f024:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f028:	fb04 fa0a 	mul.w	sl, r4, sl
 801f02c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f030:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f034:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f038:	44de      	add	lr, fp
 801f03a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f03e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f042:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f046:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f04a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f04e:	ea4e 040a 	orr.w	r4, lr, sl
 801f052:	940f      	str	r4, [sp, #60]	; 0x3c
 801f054:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f056:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f05a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f05c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f060:	fb08 fc0c 	mul.w	ip, r8, ip
 801f064:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f068:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f06c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f06e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f072:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f076:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f078:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f07c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f080:	fb08 f80e 	mul.w	r8, r8, lr
 801f084:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f088:	fb02 8303 	mla	r3, r2, r3, r8
 801f08c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f08e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f090:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f094:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f096:	fb01 330a 	mla	r3, r1, sl, r3
 801f09a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801f09e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f0a0:	fb09 3901 	mla	r9, r9, r1, r3
 801f0a4:	4342      	muls	r2, r0
 801f0a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f0ae:	883b      	ldrh	r3, [r7, #0]
 801f0b0:	1c50      	adds	r0, r2, #1
 801f0b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0b6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f0ba:	ea4c 0c09 	orr.w	ip, ip, r9
 801f0be:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f0c2:	1219      	asrs	r1, r3, #8
 801f0c4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f0c8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f0cc:	b2c0      	uxtb	r0, r0
 801f0ce:	fb12 f204 	smulbb	r2, r2, r4
 801f0d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f0d6:	fb01 2100 	mla	r1, r1, r0, r2
 801f0da:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f0de:	10da      	asrs	r2, r3, #3
 801f0e0:	fa5f fc8c 	uxtb.w	ip, ip
 801f0e4:	00db      	lsls	r3, r3, #3
 801f0e6:	fb1c fc04 	smulbb	ip, ip, r4
 801f0ea:	b2db      	uxtb	r3, r3
 801f0ec:	b289      	uxth	r1, r1
 801f0ee:	fb03 c300 	mla	r3, r3, r0, ip
 801f0f2:	fa1f fc83 	uxth.w	ip, r3
 801f0f6:	1c4b      	adds	r3, r1, #1
 801f0f8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f0fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f100:	fb1e fe04 	smulbb	lr, lr, r4
 801f104:	f10c 0301 	add.w	r3, ip, #1
 801f108:	fb02 e200 	mla	r2, r2, r0, lr
 801f10c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f110:	b292      	uxth	r2, r2
 801f112:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f116:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f11a:	430b      	orrs	r3, r1
 801f11c:	1c51      	adds	r1, r2, #1
 801f11e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f122:	0952      	lsrs	r2, r2, #5
 801f124:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f128:	4313      	orrs	r3, r2
 801f12a:	803b      	strh	r3, [r7, #0]
 801f12c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f12e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f130:	441a      	add	r2, r3
 801f132:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f134:	9229      	str	r2, [sp, #164]	; 0xa4
 801f136:	441d      	add	r5, r3
 801f138:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f13a:	3b01      	subs	r3, #1
 801f13c:	3702      	adds	r7, #2
 801f13e:	931a      	str	r3, [sp, #104]	; 0x68
 801f140:	e694      	b.n	801ee6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f142:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f144:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f146:	441c      	add	r4, r3
 801f148:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f14a:	9429      	str	r4, [sp, #164]	; 0xa4
 801f14c:	441d      	add	r5, r3
 801f14e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f150:	3b01      	subs	r3, #1
 801f152:	9309      	str	r3, [sp, #36]	; 0x24
 801f154:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f156:	3302      	adds	r3, #2
 801f158:	930c      	str	r3, [sp, #48]	; 0x30
 801f15a:	e666      	b.n	801ee2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f15c:	d024      	beq.n	801f1a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801f15e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f160:	982b      	ldr	r0, [sp, #172]	; 0xac
 801f162:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f164:	3b01      	subs	r3, #1
 801f166:	fb00 4003 	mla	r0, r0, r3, r4
 801f16a:	1400      	asrs	r0, r0, #16
 801f16c:	f53f ae7b 	bmi.w	801ee66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f170:	3901      	subs	r1, #1
 801f172:	4288      	cmp	r0, r1
 801f174:	f6bf ae77 	bge.w	801ee66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f178:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801f17a:	fb01 5303 	mla	r3, r1, r3, r5
 801f17e:	141b      	asrs	r3, r3, #16
 801f180:	f53f ae71 	bmi.w	801ee66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f184:	3a01      	subs	r2, #1
 801f186:	4293      	cmp	r3, r2
 801f188:	f6bf ae6d 	bge.w	801ee66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f18c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f190:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801f194:	f1bb 0f00 	cmp.w	fp, #0
 801f198:	dc70      	bgt.n	801f27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801f19a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f19c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f1a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f1a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f1a6:	930c      	str	r3, [sp, #48]	; 0x30
 801f1a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f1aa:	2b00      	cmp	r3, #0
 801f1ac:	f340 81be 	ble.w	801f52c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801f1b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f1b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f1b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f1bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f1be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f1c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f1c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1ca:	eef0 6a62 	vmov.f32	s13, s5
 801f1ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1da:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801f1de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1e2:	eef0 6a43 	vmov.f32	s13, s6
 801f1e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1ea:	ee12 2a90 	vmov	r2, s5
 801f1ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1f6:	ee13 2a10 	vmov	r2, s6
 801f1fa:	932b      	str	r3, [sp, #172]	; 0xac
 801f1fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f1fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801f202:	932c      	str	r3, [sp, #176]	; 0xb0
 801f204:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f206:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801f208:	3b01      	subs	r3, #1
 801f20a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f20e:	9319      	str	r3, [sp, #100]	; 0x64
 801f210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f212:	bf08      	it	eq
 801f214:	4613      	moveq	r3, r2
 801f216:	ee16 5a90 	vmov	r5, s13
 801f21a:	9309      	str	r3, [sp, #36]	; 0x24
 801f21c:	eeb0 3a67 	vmov.f32	s6, s15
 801f220:	eef0 2a47 	vmov.f32	s5, s14
 801f224:	e5f3      	b.n	801ee0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f226:	2900      	cmp	r1, #0
 801f228:	f43f ae66 	beq.w	801eef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f22c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801f230:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f234:	900a      	str	r0, [sp, #40]	; 0x28
 801f236:	0e00      	lsrs	r0, r0, #24
 801f238:	9013      	str	r0, [sp, #76]	; 0x4c
 801f23a:	e65d      	b.n	801eef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f23c:	f113 0801 	adds.w	r8, r3, #1
 801f240:	f53f af74 	bmi.w	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f244:	4540      	cmp	r0, r8
 801f246:	f6ff af71 	blt.w	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f24a:	f11c 0801 	adds.w	r8, ip, #1
 801f24e:	f53f af6d 	bmi.w	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f252:	45c6      	cmp	lr, r8
 801f254:	f6ff af6a 	blt.w	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f258:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801f25a:	9302      	str	r3, [sp, #8]
 801f25c:	b200      	sxth	r0, r0
 801f25e:	fa0f f38e 	sxth.w	r3, lr
 801f262:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f266:	e9cd c203 	strd	ip, r2, [sp, #12]
 801f26a:	9301      	str	r3, [sp, #4]
 801f26c:	9000      	str	r0, [sp, #0]
 801f26e:	4633      	mov	r3, r6
 801f270:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f272:	981d      	ldr	r0, [sp, #116]	; 0x74
 801f274:	4639      	mov	r1, r7
 801f276:	f7ff fc62 	bl	801eb3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801f27a:	e757      	b.n	801f12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f27c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f27e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f280:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f284:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f28a:	1427      	asrs	r7, r4, #16
 801f28c:	142b      	asrs	r3, r5, #16
 801f28e:	fb01 7303 	mla	r3, r1, r3, r7
 801f292:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f294:	18e7      	adds	r7, r4, r3
 801f296:	5ce3      	ldrb	r3, [r4, r3]
 801f298:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f29c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f2a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f2a4:	2a00      	cmp	r2, #0
 801f2a6:	f000 8137 	beq.w	801f518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f2aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f2ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f2b2:	9410      	str	r4, [sp, #64]	; 0x40
 801f2b4:	0e24      	lsrs	r4, r4, #24
 801f2b6:	9417      	str	r4, [sp, #92]	; 0x5c
 801f2b8:	b170      	cbz	r0, 801f2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f2ba:	eb07 0e01 	add.w	lr, r7, r1
 801f2be:	5c79      	ldrb	r1, [r7, r1]
 801f2c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f2c4:	910b      	str	r1, [sp, #44]	; 0x2c
 801f2c6:	0e09      	lsrs	r1, r1, #24
 801f2c8:	9114      	str	r1, [sp, #80]	; 0x50
 801f2ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f2ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f2d2:	9111      	str	r1, [sp, #68]	; 0x44
 801f2d4:	0e09      	lsrs	r1, r1, #24
 801f2d6:	9118      	str	r1, [sp, #96]	; 0x60
 801f2d8:	b292      	uxth	r2, r2
 801f2da:	b280      	uxth	r0, r0
 801f2dc:	fb02 f800 	mul.w	r8, r2, r0
 801f2e0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f2e4:	0112      	lsls	r2, r2, #4
 801f2e6:	eba2 0e08 	sub.w	lr, r2, r8
 801f2ea:	b280      	uxth	r0, r0
 801f2ec:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f2f0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801f2f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f2f4:	fa1f fe8e 	uxth.w	lr, lr
 801f2f8:	1a12      	subs	r2, r2, r0
 801f2fa:	b292      	uxth	r2, r2
 801f2fc:	fb0e f101 	mul.w	r1, lr, r1
 801f300:	fb02 110c 	mla	r1, r2, ip, r1
 801f304:	fb00 1104 	mla	r1, r0, r4, r1
 801f308:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f30a:	fb08 1104 	mla	r1, r8, r4, r1
 801f30e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f312:	2900      	cmp	r1, #0
 801f314:	f000 80f5 	beq.w	801f502 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f318:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f31c:	d019      	beq.n	801f352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801f31e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f322:	fb0c fa0a 	mul.w	sl, ip, sl
 801f326:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f32a:	fb0c fc03 	mul.w	ip, ip, r3
 801f32e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f332:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f336:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f33a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f33e:	4453      	add	r3, sl
 801f340:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f344:	0a1b      	lsrs	r3, r3, #8
 801f346:	0a3f      	lsrs	r7, r7, #8
 801f348:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f34c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f350:	433b      	orrs	r3, r7
 801f352:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f354:	2cff      	cmp	r4, #255	; 0xff
 801f356:	d020      	beq.n	801f39a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801f358:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f35a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f35e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f360:	4367      	muls	r7, r4
 801f362:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f364:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f368:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f36a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f36e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f372:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f376:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f37a:	44bc      	add	ip, r7
 801f37c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f380:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f384:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f388:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f38c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f390:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f394:	ea4c 040a 	orr.w	r4, ip, sl
 801f398:	9410      	str	r4, [sp, #64]	; 0x40
 801f39a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f39c:	2cff      	cmp	r4, #255	; 0xff
 801f39e:	d020      	beq.n	801f3e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801f3a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f3a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f3a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f3a8:	4367      	muls	r7, r4
 801f3aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f3ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f3b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f3b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f3b6:	fb04 fa0a 	mul.w	sl, r4, sl
 801f3ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f3be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3c2:	44bc      	add	ip, r7
 801f3c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f3c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f3cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f3dc:	ea4c 040a 	orr.w	r4, ip, sl
 801f3e0:	940b      	str	r4, [sp, #44]	; 0x2c
 801f3e2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f3e4:	2cff      	cmp	r4, #255	; 0xff
 801f3e6:	d020      	beq.n	801f42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801f3e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f3ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f3ee:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f3f0:	4367      	muls	r7, r4
 801f3f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f3f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f3f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f3fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f3fe:	fb04 fa0a 	mul.w	sl, r4, sl
 801f402:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f40a:	44bc      	add	ip, r7
 801f40c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f410:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f414:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f418:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f41c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f420:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f424:	ea4c 040a 	orr.w	r4, ip, sl
 801f428:	9411      	str	r4, [sp, #68]	; 0x44
 801f42a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f42c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f430:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f432:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f436:	fb0e f707 	mul.w	r7, lr, r7
 801f43a:	fb02 770c 	mla	r7, r2, ip, r7
 801f43e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f442:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f444:	fb00 770c 	mla	r7, r0, ip, r7
 801f448:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f44c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f44e:	fb08 770c 	mla	r7, r8, ip, r7
 801f452:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801f456:	fb0e fe0c 	mul.w	lr, lr, ip
 801f45a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f45e:	fb02 e303 	mla	r3, r2, r3, lr
 801f462:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f464:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f466:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f46a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f46c:	fb00 330a 	mla	r3, r0, sl, r3
 801f470:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f474:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f478:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f47a:	f8b9 0000 	ldrh.w	r0, [r9]
 801f47e:	434b      	muls	r3, r1
 801f480:	0a3f      	lsrs	r7, r7, #8
 801f482:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f486:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f48a:	1c59      	adds	r1, r3, #1
 801f48c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f490:	ea47 070c 	orr.w	r7, r7, ip
 801f494:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f498:	1202      	asrs	r2, r0, #8
 801f49a:	0c3b      	lsrs	r3, r7, #16
 801f49c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f4a0:	b2c9      	uxtb	r1, r1
 801f4a2:	fb13 f304 	smulbb	r3, r3, r4
 801f4a6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f4aa:	fb02 3201 	mla	r2, r2, r1, r3
 801f4ae:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f4b2:	10c3      	asrs	r3, r0, #3
 801f4b4:	b2ff      	uxtb	r7, r7
 801f4b6:	00c0      	lsls	r0, r0, #3
 801f4b8:	b292      	uxth	r2, r2
 801f4ba:	fb1c fc04 	smulbb	ip, ip, r4
 801f4be:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f4c2:	b2c0      	uxtb	r0, r0
 801f4c4:	fb17 f704 	smulbb	r7, r7, r4
 801f4c8:	fb03 c301 	mla	r3, r3, r1, ip
 801f4cc:	fb00 7001 	mla	r0, r0, r1, r7
 801f4d0:	f102 0c01 	add.w	ip, r2, #1
 801f4d4:	b280      	uxth	r0, r0
 801f4d6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801f4da:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801f4de:	1c42      	adds	r2, r0, #1
 801f4e0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f4e4:	b29b      	uxth	r3, r3
 801f4e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f4ea:	ea42 020c 	orr.w	r2, r2, ip
 801f4ee:	f103 0c01 	add.w	ip, r3, #1
 801f4f2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f4f6:	095b      	lsrs	r3, r3, #5
 801f4f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4fc:	431a      	orrs	r2, r3
 801f4fe:	f8a9 2000 	strh.w	r2, [r9]
 801f502:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f504:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f506:	441a      	add	r2, r3
 801f508:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f50a:	9229      	str	r2, [sp, #164]	; 0xa4
 801f50c:	f109 0902 	add.w	r9, r9, #2
 801f510:	441d      	add	r5, r3
 801f512:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f516:	e63d      	b.n	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f518:	2800      	cmp	r0, #0
 801f51a:	f43f aedd 	beq.w	801f2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f51e:	5c79      	ldrb	r1, [r7, r1]
 801f520:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f524:	910b      	str	r1, [sp, #44]	; 0x2c
 801f526:	0e09      	lsrs	r1, r1, #24
 801f528:	9114      	str	r1, [sp, #80]	; 0x50
 801f52a:	e6d5      	b.n	801f2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f52c:	b01f      	add	sp, #124	; 0x7c
 801f52e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801f532:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f536:	b089      	sub	sp, #36	; 0x24
 801f538:	9101      	str	r1, [sp, #4]
 801f53a:	9801      	ldr	r0, [sp, #4]
 801f53c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801f540:	8800      	ldrh	r0, [r0, #0]
 801f542:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801f546:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801f54a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801f54e:	1206      	asrs	r6, r0, #8
 801f550:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801f554:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f558:	9602      	str	r6, [sp, #8]
 801f55a:	10c6      	asrs	r6, r0, #3
 801f55c:	00c0      	lsls	r0, r0, #3
 801f55e:	b2c0      	uxtb	r0, r0
 801f560:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f564:	9004      	str	r0, [sp, #16]
 801f566:	2f00      	cmp	r7, #0
 801f568:	fb07 100c 	mla	r0, r7, ip, r1
 801f56c:	9603      	str	r6, [sp, #12]
 801f56e:	eb02 0e00 	add.w	lr, r2, r0
 801f572:	f2c0 810a 	blt.w	801f78a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f576:	45b8      	cmp	r8, r7
 801f578:	f340 8107 	ble.w	801f78a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f57c:	2900      	cmp	r1, #0
 801f57e:	f2c0 8102 	blt.w	801f786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f582:	458c      	cmp	ip, r1
 801f584:	f340 80ff 	ble.w	801f786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f588:	5c12      	ldrb	r2, [r2, r0]
 801f58a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801f58e:	1c4a      	adds	r2, r1, #1
 801f590:	f100 80fe 	bmi.w	801f790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f594:	4594      	cmp	ip, r2
 801f596:	f340 80fb 	ble.w	801f790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f59a:	2d00      	cmp	r5, #0
 801f59c:	f000 80fa 	beq.w	801f794 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801f5a0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f5a4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801f5a8:	3701      	adds	r7, #1
 801f5aa:	f100 80f7 	bmi.w	801f79c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f5ae:	45b8      	cmp	r8, r7
 801f5b0:	f340 80f4 	ble.w	801f79c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f5b4:	2c00      	cmp	r4, #0
 801f5b6:	f000 80f4 	beq.w	801f7a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801f5ba:	2900      	cmp	r1, #0
 801f5bc:	eb0e 020c 	add.w	r2, lr, ip
 801f5c0:	f2c0 80ea 	blt.w	801f798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f5c4:	458c      	cmp	ip, r1
 801f5c6:	f340 80e7 	ble.w	801f798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f5ca:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801f5ce:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801f5d2:	3101      	adds	r1, #1
 801f5d4:	f100 80e8 	bmi.w	801f7a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f5d8:	458c      	cmp	ip, r1
 801f5da:	f340 80e5 	ble.w	801f7a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f5de:	2d00      	cmp	r5, #0
 801f5e0:	f000 80e4 	beq.w	801f7ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801f5e4:	7852      	ldrb	r2, [r2, #1]
 801f5e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f5ea:	0e0b      	lsrs	r3, r1, #24
 801f5ec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801f5f0:	9300      	str	r3, [sp, #0]
 801f5f2:	b2a4      	uxth	r4, r4
 801f5f4:	b2ab      	uxth	r3, r5
 801f5f6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801f5fa:	fb03 f904 	mul.w	r9, r3, r4
 801f5fe:	fb0a f505 	mul.w	r5, sl, r5
 801f602:	011b      	lsls	r3, r3, #4
 801f604:	eba3 0e09 	sub.w	lr, r3, r9
 801f608:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801f60c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801f610:	0a28      	lsrs	r0, r5, #8
 801f612:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f616:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801f61a:	4405      	add	r5, r0
 801f61c:	0a2d      	lsrs	r5, r5, #8
 801f61e:	fb0a f303 	mul.w	r3, sl, r3
 801f622:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801f626:	9005      	str	r0, [sp, #20]
 801f628:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801f62c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f630:	0a1b      	lsrs	r3, r3, #8
 801f632:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801f636:	9306      	str	r3, [sp, #24]
 801f638:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801f63c:	fb0b f303 	mul.w	r3, fp, r3
 801f640:	0a1d      	lsrs	r5, r3, #8
 801f642:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f646:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801f64a:	fb0b f606 	mul.w	r6, fp, r6
 801f64e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801f652:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801f656:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f65a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f65e:	fb08 f707 	mul.w	r7, r8, r7
 801f662:	441d      	add	r5, r3
 801f664:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801f668:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f66c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f670:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801f674:	fb08 fc0c 	mul.w	ip, r8, ip
 801f678:	0a1b      	lsrs	r3, r3, #8
 801f67a:	9307      	str	r3, [sp, #28]
 801f67c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801f680:	0e0b      	lsrs	r3, r1, #24
 801f682:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801f686:	435f      	muls	r7, r3
 801f688:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f68c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f690:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801f694:	4460      	add	r0, ip
 801f696:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f69a:	b2a4      	uxth	r4, r4
 801f69c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f6a0:	0a2d      	lsrs	r5, r5, #8
 801f6a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f6a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f6aa:	fa1f fe8e 	uxth.w	lr, lr
 801f6ae:	4359      	muls	r1, r3
 801f6b0:	1b12      	subs	r2, r2, r4
 801f6b2:	9b05      	ldr	r3, [sp, #20]
 801f6b4:	44bc      	add	ip, r7
 801f6b6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f6ba:	b292      	uxth	r2, r2
 801f6bc:	fb05 f50e 	mul.w	r5, r5, lr
 801f6c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6c4:	fb03 5502 	mla	r5, r3, r2, r5
 801f6c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f6cc:	9b06      	ldr	r3, [sp, #24]
 801f6ce:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801f6d2:	0a36      	lsrs	r6, r6, #8
 801f6d4:	0a00      	lsrs	r0, r0, #8
 801f6d6:	fb0c 5509 	mla	r5, ip, r9, r5
 801f6da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f6de:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f6e2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f6e6:	fb00 5504 	mla	r5, r0, r4, r5
 801f6ea:	fb0e f606 	mul.w	r6, lr, r6
 801f6ee:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801f6f2:	0a09      	lsrs	r1, r1, #8
 801f6f4:	9b07      	ldr	r3, [sp, #28]
 801f6f6:	fb02 6000 	mla	r0, r2, r0, r6
 801f6fa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f6fe:	fb09 0001 	mla	r0, r9, r1, r0
 801f702:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f706:	fb0e fe0b 	mul.w	lr, lr, fp
 801f70a:	fb04 0003 	mla	r0, r4, r3, r0
 801f70e:	fb02 e20a 	mla	r2, r2, sl, lr
 801f712:	9b00      	ldr	r3, [sp, #0]
 801f714:	fb04 2408 	mla	r4, r4, r8, r2
 801f718:	fb09 4903 	mla	r9, r9, r3, r4
 801f71c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801f720:	9b02      	ldr	r3, [sp, #8]
 801f722:	9a04      	ldr	r2, [sp, #16]
 801f724:	fa5f f989 	uxtb.w	r9, r9
 801f728:	fb03 f109 	mul.w	r1, r3, r9
 801f72c:	9b03      	ldr	r3, [sp, #12]
 801f72e:	0a2d      	lsrs	r5, r5, #8
 801f730:	0a00      	lsrs	r0, r0, #8
 801f732:	fb03 f309 	mul.w	r3, r3, r9
 801f736:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f73a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f73e:	4305      	orrs	r5, r0
 801f740:	fb02 f909 	mul.w	r9, r2, r9
 801f744:	1c58      	adds	r0, r3, #1
 801f746:	1c4a      	adds	r2, r1, #1
 801f748:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f74c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f750:	0a2b      	lsrs	r3, r5, #8
 801f752:	0c2a      	lsrs	r2, r5, #16
 801f754:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f758:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f75c:	00db      	lsls	r3, r3, #3
 801f75e:	0212      	lsls	r2, r2, #8
 801f760:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f764:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f768:	4313      	orrs	r3, r2
 801f76a:	f109 0201 	add.w	r2, r9, #1
 801f76e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801f772:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801f776:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f77a:	431d      	orrs	r5, r3
 801f77c:	9b01      	ldr	r3, [sp, #4]
 801f77e:	801d      	strh	r5, [r3, #0]
 801f780:	b009      	add	sp, #36	; 0x24
 801f782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f786:	2000      	movs	r0, #0
 801f788:	e701      	b.n	801f58e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801f78a:	2600      	movs	r6, #0
 801f78c:	4630      	mov	r0, r6
 801f78e:	e70b      	b.n	801f5a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f790:	2600      	movs	r6, #0
 801f792:	e709      	b.n	801f5a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f794:	462e      	mov	r6, r5
 801f796:	e707      	b.n	801f5a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f798:	2700      	movs	r7, #0
 801f79a:	e71a      	b.n	801f5d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801f79c:	2100      	movs	r1, #0
 801f79e:	460f      	mov	r7, r1
 801f7a0:	e723      	b.n	801f5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f7a2:	4621      	mov	r1, r4
 801f7a4:	4627      	mov	r7, r4
 801f7a6:	e720      	b.n	801f5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f7a8:	2100      	movs	r1, #0
 801f7aa:	e71e      	b.n	801f5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f7ac:	4629      	mov	r1, r5
 801f7ae:	e71c      	b.n	801f5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801f7b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7b4:	b09b      	sub	sp, #108	; 0x6c
 801f7b6:	9218      	str	r2, [sp, #96]	; 0x60
 801f7b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f7ba:	9116      	str	r1, [sp, #88]	; 0x58
 801f7bc:	9307      	str	r3, [sp, #28]
 801f7be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f7c2:	9019      	str	r0, [sp, #100]	; 0x64
 801f7c4:	6850      	ldr	r0, [r2, #4]
 801f7c6:	6812      	ldr	r2, [r2, #0]
 801f7c8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801f7ca:	fb00 1303 	mla	r3, r0, r3, r1
 801f7ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f7d2:	930a      	str	r3, [sp, #40]	; 0x28
 801f7d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f7d6:	681b      	ldr	r3, [r3, #0]
 801f7d8:	930f      	str	r3, [sp, #60]	; 0x3c
 801f7da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f7dc:	685e      	ldr	r6, [r3, #4]
 801f7de:	3604      	adds	r6, #4
 801f7e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f7e2:	2b00      	cmp	r3, #0
 801f7e4:	dc03      	bgt.n	801f7ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f7e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f7e8:	2b00      	cmp	r3, #0
 801f7ea:	f340 8373 	ble.w	801fed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f7ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f7f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f7f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f7f8:	1e48      	subs	r0, r1, #1
 801f7fa:	1e57      	subs	r7, r2, #1
 801f7fc:	9b07      	ldr	r3, [sp, #28]
 801f7fe:	2b00      	cmp	r3, #0
 801f800:	f340 8190 	ble.w	801fb24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801f804:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f806:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f80a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f80e:	d406      	bmi.n	801f81e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f810:	4584      	cmp	ip, r0
 801f812:	da04      	bge.n	801f81e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f814:	2b00      	cmp	r3, #0
 801f816:	db02      	blt.n	801f81e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f818:	42bb      	cmp	r3, r7
 801f81a:	f2c0 8184 	blt.w	801fb26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801f81e:	f11c 0c01 	adds.w	ip, ip, #1
 801f822:	f100 8172 	bmi.w	801fb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f826:	4561      	cmp	r1, ip
 801f828:	f2c0 816f 	blt.w	801fb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f82c:	3301      	adds	r3, #1
 801f82e:	f100 816c 	bmi.w	801fb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f832:	429a      	cmp	r2, r3
 801f834:	f2c0 8169 	blt.w	801fb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f838:	9b07      	ldr	r3, [sp, #28]
 801f83a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f83c:	9317      	str	r3, [sp, #92]	; 0x5c
 801f83e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f840:	2b00      	cmp	r3, #0
 801f842:	f340 818e 	ble.w	801fb62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801f846:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f848:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f84c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f84e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801f852:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f854:	141b      	asrs	r3, r3, #16
 801f856:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f85a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f85e:	f100 81d1 	bmi.w	801fc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f862:	f101 38ff 	add.w	r8, r1, #4294967295
 801f866:	4543      	cmp	r3, r8
 801f868:	f280 81cc 	bge.w	801fc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f86c:	f1bc 0f00 	cmp.w	ip, #0
 801f870:	f2c0 81c8 	blt.w	801fc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f874:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f878:	45c4      	cmp	ip, r8
 801f87a:	f280 81c3 	bge.w	801fc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f87e:	b209      	sxth	r1, r1
 801f880:	fb0c 3301 	mla	r3, ip, r1, r3
 801f884:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f886:	eb04 0803 	add.w	r8, r4, r3
 801f88a:	5ce3      	ldrb	r3, [r4, r3]
 801f88c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f890:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f894:	2a00      	cmp	r2, #0
 801f896:	f000 81aa 	beq.w	801fbee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801f89a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f89e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f8a2:	940b      	str	r4, [sp, #44]	; 0x2c
 801f8a4:	0e24      	lsrs	r4, r4, #24
 801f8a6:	9412      	str	r4, [sp, #72]	; 0x48
 801f8a8:	b178      	cbz	r0, 801f8ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f8aa:	eb08 0c01 	add.w	ip, r8, r1
 801f8ae:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f8b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f8b6:	9108      	str	r1, [sp, #32]
 801f8b8:	0e09      	lsrs	r1, r1, #24
 801f8ba:	9110      	str	r1, [sp, #64]	; 0x40
 801f8bc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801f8c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f8c4:	910c      	str	r1, [sp, #48]	; 0x30
 801f8c6:	0e09      	lsrs	r1, r1, #24
 801f8c8:	9113      	str	r1, [sp, #76]	; 0x4c
 801f8ca:	b292      	uxth	r2, r2
 801f8cc:	b280      	uxth	r0, r0
 801f8ce:	fb02 f900 	mul.w	r9, r2, r0
 801f8d2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f8d6:	0112      	lsls	r2, r2, #4
 801f8d8:	eba2 0809 	sub.w	r8, r2, r9
 801f8dc:	b280      	uxth	r0, r0
 801f8de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f8e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f8e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f8e6:	fa1f f888 	uxth.w	r8, r8
 801f8ea:	1a12      	subs	r2, r2, r0
 801f8ec:	b292      	uxth	r2, r2
 801f8ee:	fb08 f101 	mul.w	r1, r8, r1
 801f8f2:	fb02 110e 	mla	r1, r2, lr, r1
 801f8f6:	fb00 1104 	mla	r1, r0, r4, r1
 801f8fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f8fc:	fb09 1104 	mla	r1, r9, r4, r1
 801f900:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f904:	2900      	cmp	r1, #0
 801f906:	f000 80f5 	beq.w	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f90a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f90e:	d01b      	beq.n	801f948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f910:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f914:	fb0e fa0a 	mul.w	sl, lr, sl
 801f918:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f91c:	fb0e fe03 	mul.w	lr, lr, r3
 801f920:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f924:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f928:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f92c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f930:	4453      	add	r3, sl
 801f932:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f936:	0a1b      	lsrs	r3, r3, #8
 801f938:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f93c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f940:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f944:	ea43 030c 	orr.w	r3, r3, ip
 801f948:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f94a:	2cff      	cmp	r4, #255	; 0xff
 801f94c:	d021      	beq.n	801f992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801f94e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f950:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f954:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f956:	fb04 fb0b 	mul.w	fp, r4, fp
 801f95a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f95c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f960:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f962:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f966:	fb04 fa0a 	mul.w	sl, r4, sl
 801f96a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f96e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f972:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f976:	44de      	add	lr, fp
 801f978:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f97c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f980:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f984:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f988:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f98c:	ea4e 040a 	orr.w	r4, lr, sl
 801f990:	940b      	str	r4, [sp, #44]	; 0x2c
 801f992:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f994:	2cff      	cmp	r4, #255	; 0xff
 801f996:	d021      	beq.n	801f9dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f998:	9c08      	ldr	r4, [sp, #32]
 801f99a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f99e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f9a0:	fb04 fb0b 	mul.w	fp, r4, fp
 801f9a4:	9c08      	ldr	r4, [sp, #32]
 801f9a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f9aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f9ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f9b0:	fb04 fa0a 	mul.w	sl, r4, sl
 801f9b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f9b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f9bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f9c0:	44de      	add	lr, fp
 801f9c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f9c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f9ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f9d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f9d6:	ea4e 040a 	orr.w	r4, lr, sl
 801f9da:	9408      	str	r4, [sp, #32]
 801f9dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f9de:	2cff      	cmp	r4, #255	; 0xff
 801f9e0:	d021      	beq.n	801fa26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f9e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f9e4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f9e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f9ea:	fb04 fb0b 	mul.w	fp, r4, fp
 801f9ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f9f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f9f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f9f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f9fa:	fb04 fa0a 	mul.w	sl, r4, sl
 801f9fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa02:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fa06:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fa0a:	44de      	add	lr, fp
 801fa0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fa10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fa14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa20:	ea4e 040a 	orr.w	r4, lr, sl
 801fa24:	940c      	str	r4, [sp, #48]	; 0x30
 801fa26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa28:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fa2c:	9c08      	ldr	r4, [sp, #32]
 801fa2e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801fa32:	fb08 fc0c 	mul.w	ip, r8, ip
 801fa36:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fa3a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fa3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fa40:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fa44:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fa48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa4a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fa4e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801fa52:	fb08 f80e 	mul.w	r8, r8, lr
 801fa56:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fa5a:	fb02 8303 	mla	r3, r2, r3, r8
 801fa5e:	9a08      	ldr	r2, [sp, #32]
 801fa60:	f8b7 8000 	ldrh.w	r8, [r7]
 801fa64:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fa68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fa6a:	fb00 330a 	mla	r3, r0, sl, r3
 801fa6e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801fa72:	fb09 3900 	mla	r9, r9, r0, r3
 801fa76:	43c9      	mvns	r1, r1
 801fa78:	ea4f 2228 	mov.w	r2, r8, asr #8
 801fa7c:	fa5f fe81 	uxtb.w	lr, r1
 801fa80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa84:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fa88:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fa8c:	fb02 f20e 	mul.w	r2, r2, lr
 801fa90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa94:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fa98:	ea4c 0c09 	orr.w	ip, ip, r9
 801fa9c:	1c53      	adds	r3, r2, #1
 801fa9e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801faa2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801faa6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801faaa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801faae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fab2:	4a63      	ldr	r2, [pc, #396]	; (801fc40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801fab4:	fb00 f00e 	mul.w	r0, r0, lr
 801fab8:	b2db      	uxtb	r3, r3
 801faba:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801fabe:	1c43      	adds	r3, r0, #1
 801fac0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fac4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801fac8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801facc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fad0:	b2c9      	uxtb	r1, r1
 801fad2:	00db      	lsls	r3, r3, #3
 801fad4:	fb01 f10e 	mul.w	r1, r1, lr
 801fad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fadc:	4313      	orrs	r3, r2
 801fade:	1c4a      	adds	r2, r1, #1
 801fae0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fae4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fae8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801faec:	ea4c 0c03 	orr.w	ip, ip, r3
 801faf0:	f8a7 c000 	strh.w	ip, [r7]
 801faf4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801faf6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801faf8:	441a      	add	r2, r3
 801fafa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fafc:	9225      	str	r2, [sp, #148]	; 0x94
 801fafe:	441d      	add	r5, r3
 801fb00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fb02:	3b01      	subs	r3, #1
 801fb04:	3702      	adds	r7, #2
 801fb06:	9317      	str	r3, [sp, #92]	; 0x5c
 801fb08:	e699      	b.n	801f83e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fb0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fb0c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fb0e:	441c      	add	r4, r3
 801fb10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb12:	9425      	str	r4, [sp, #148]	; 0x94
 801fb14:	441d      	add	r5, r3
 801fb16:	9b07      	ldr	r3, [sp, #28]
 801fb18:	3b01      	subs	r3, #1
 801fb1a:	9307      	str	r3, [sp, #28]
 801fb1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb1e:	3302      	adds	r3, #2
 801fb20:	930a      	str	r3, [sp, #40]	; 0x28
 801fb22:	e66b      	b.n	801f7fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fb24:	d024      	beq.n	801fb70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801fb26:	9b07      	ldr	r3, [sp, #28]
 801fb28:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fb2a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fb2c:	3b01      	subs	r3, #1
 801fb2e:	fb00 4003 	mla	r0, r0, r3, r4
 801fb32:	1400      	asrs	r0, r0, #16
 801fb34:	f53f ae80 	bmi.w	801f838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fb38:	3901      	subs	r1, #1
 801fb3a:	4288      	cmp	r0, r1
 801fb3c:	f6bf ae7c 	bge.w	801f838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fb40:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fb42:	fb01 5303 	mla	r3, r1, r3, r5
 801fb46:	141b      	asrs	r3, r3, #16
 801fb48:	f53f ae76 	bmi.w	801f838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fb4c:	3a01      	subs	r2, #1
 801fb4e:	4293      	cmp	r3, r2
 801fb50:	f6bf ae72 	bge.w	801f838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fb54:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fb58:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801fb5c:	f1bb 0f00 	cmp.w	fp, #0
 801fb60:	dc70      	bgt.n	801fc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fb62:	9b07      	ldr	r3, [sp, #28]
 801fb64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fb68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fb6e:	930a      	str	r3, [sp, #40]	; 0x28
 801fb70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fb72:	2b00      	cmp	r3, #0
 801fb74:	f340 81ae 	ble.w	801fed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801fb78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb92:	eef0 6a62 	vmov.f32	s13, s5
 801fb96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fba2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801fba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbaa:	eef0 6a43 	vmov.f32	s13, s6
 801fbae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fbb2:	ee12 2a90 	vmov	r2, s5
 801fbb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbba:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbbe:	ee13 2a10 	vmov	r2, s6
 801fbc2:	9327      	str	r3, [sp, #156]	; 0x9c
 801fbc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbca:	9328      	str	r3, [sp, #160]	; 0xa0
 801fbcc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fbce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fbd0:	3b01      	subs	r3, #1
 801fbd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbd6:	9316      	str	r3, [sp, #88]	; 0x58
 801fbd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbda:	bf08      	it	eq
 801fbdc:	4613      	moveq	r3, r2
 801fbde:	ee16 5a90 	vmov	r5, s13
 801fbe2:	9307      	str	r3, [sp, #28]
 801fbe4:	eeb0 3a67 	vmov.f32	s6, s15
 801fbe8:	eef0 2a47 	vmov.f32	s5, s14
 801fbec:	e5f8      	b.n	801f7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801fbee:	2800      	cmp	r0, #0
 801fbf0:	f43f ae6b 	beq.w	801f8ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fbf4:	f818 1001 	ldrb.w	r1, [r8, r1]
 801fbf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fbfc:	9108      	str	r1, [sp, #32]
 801fbfe:	0e09      	lsrs	r1, r1, #24
 801fc00:	9110      	str	r1, [sp, #64]	; 0x40
 801fc02:	e662      	b.n	801f8ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fc04:	f113 0801 	adds.w	r8, r3, #1
 801fc08:	f53f af74 	bmi.w	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc0c:	4541      	cmp	r1, r8
 801fc0e:	f6ff af71 	blt.w	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc12:	f11c 0801 	adds.w	r8, ip, #1
 801fc16:	f53f af6d 	bmi.w	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc1a:	45c6      	cmp	lr, r8
 801fc1c:	f6ff af6a 	blt.w	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc20:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801fc24:	b209      	sxth	r1, r1
 801fc26:	fa0f f38e 	sxth.w	r3, lr
 801fc2a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801fc2e:	9301      	str	r3, [sp, #4]
 801fc30:	9100      	str	r1, [sp, #0]
 801fc32:	4633      	mov	r3, r6
 801fc34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc36:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fc38:	4639      	mov	r1, r7
 801fc3a:	f7ff fc7a 	bl	801f532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801fc3e:	e759      	b.n	801faf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc40:	fffff800 	.word	0xfffff800
 801fc44:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc46:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fc48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fc4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fc4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc52:	1427      	asrs	r7, r4, #16
 801fc54:	142b      	asrs	r3, r5, #16
 801fc56:	fb01 7303 	mla	r3, r1, r3, r7
 801fc5a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fc5c:	18e7      	adds	r7, r4, r3
 801fc5e:	5ce3      	ldrb	r3, [r4, r3]
 801fc60:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fc64:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fc68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fc6c:	2a00      	cmp	r2, #0
 801fc6e:	f000 8127 	beq.w	801fec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fc72:	f897 e001 	ldrb.w	lr, [r7, #1]
 801fc76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801fc7a:	940d      	str	r4, [sp, #52]	; 0x34
 801fc7c:	0e24      	lsrs	r4, r4, #24
 801fc7e:	9414      	str	r4, [sp, #80]	; 0x50
 801fc80:	b170      	cbz	r0, 801fca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fc82:	eb07 0e01 	add.w	lr, r7, r1
 801fc86:	5c79      	ldrb	r1, [r7, r1]
 801fc88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fc8c:	9109      	str	r1, [sp, #36]	; 0x24
 801fc8e:	0e09      	lsrs	r1, r1, #24
 801fc90:	9111      	str	r1, [sp, #68]	; 0x44
 801fc92:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801fc96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fc9a:	910e      	str	r1, [sp, #56]	; 0x38
 801fc9c:	0e09      	lsrs	r1, r1, #24
 801fc9e:	9115      	str	r1, [sp, #84]	; 0x54
 801fca0:	b292      	uxth	r2, r2
 801fca2:	b280      	uxth	r0, r0
 801fca4:	fb02 f800 	mul.w	r8, r2, r0
 801fca8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fcac:	0112      	lsls	r2, r2, #4
 801fcae:	eba2 0e08 	sub.w	lr, r2, r8
 801fcb2:	b280      	uxth	r0, r0
 801fcb4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801fcb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fcba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fcbc:	fa1f fe8e 	uxth.w	lr, lr
 801fcc0:	1a09      	subs	r1, r1, r0
 801fcc2:	b289      	uxth	r1, r1
 801fcc4:	fb0e f202 	mul.w	r2, lr, r2
 801fcc8:	fb01 220c 	mla	r2, r1, ip, r2
 801fccc:	fb00 2204 	mla	r2, r0, r4, r2
 801fcd0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fcd2:	fb08 2204 	mla	r2, r8, r4, r2
 801fcd6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801fcda:	2a00      	cmp	r2, #0
 801fcdc:	f000 80e5 	beq.w	801feaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801fce0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fce4:	d019      	beq.n	801fd1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801fce6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fcea:	fb0c fa0a 	mul.w	sl, ip, sl
 801fcee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fcf2:	fb0c fc03 	mul.w	ip, ip, r3
 801fcf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fcfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fcfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fd02:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fd06:	4453      	add	r3, sl
 801fd08:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fd0c:	0a1b      	lsrs	r3, r3, #8
 801fd0e:	0a3f      	lsrs	r7, r7, #8
 801fd10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fd14:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fd18:	433b      	orrs	r3, r7
 801fd1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd1c:	2cff      	cmp	r4, #255	; 0xff
 801fd1e:	d020      	beq.n	801fd62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801fd20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fd26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd28:	4367      	muls	r7, r4
 801fd2a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fd36:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fd3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd42:	44bc      	add	ip, r7
 801fd44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fd48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fd4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd5c:	ea4c 040a 	orr.w	r4, ip, sl
 801fd60:	940d      	str	r4, [sp, #52]	; 0x34
 801fd62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fd64:	2cff      	cmp	r4, #255	; 0xff
 801fd66:	d020      	beq.n	801fdaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801fd68:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fd6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fd6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fd70:	4367      	muls	r7, r4
 801fd72:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fd74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd78:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fd7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fd7e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd82:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fd86:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd8a:	44bc      	add	ip, r7
 801fd8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fd90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fd94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd9c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fda0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fda4:	ea4c 040a 	orr.w	r4, ip, sl
 801fda8:	9409      	str	r4, [sp, #36]	; 0x24
 801fdaa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fdac:	2cff      	cmp	r4, #255	; 0xff
 801fdae:	d020      	beq.n	801fdf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801fdb0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fdb2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fdb6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fdb8:	4367      	muls	r7, r4
 801fdba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fdbc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fdc0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fdc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fdc6:	fb04 fa0a 	mul.w	sl, r4, sl
 801fdca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fdce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fdd2:	44bc      	add	ip, r7
 801fdd4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fdd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fddc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fde0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fde4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fde8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdec:	ea4c 040a 	orr.w	r4, ip, sl
 801fdf0:	940e      	str	r4, [sp, #56]	; 0x38
 801fdf2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fdf4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fdf8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fdfa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fdfe:	fb0e f707 	mul.w	r7, lr, r7
 801fe02:	fb01 770c 	mla	r7, r1, ip, r7
 801fe06:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe0c:	fb00 770c 	mla	r7, r0, ip, r7
 801fe10:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe14:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe16:	fb08 770c 	mla	r7, r8, ip, r7
 801fe1a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801fe1e:	fb0e fe0c 	mul.w	lr, lr, ip
 801fe22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fe26:	fb01 e303 	mla	r3, r1, r3, lr
 801fe2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fe2c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fe30:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fe32:	fb00 330a 	mla	r3, r0, sl, r3
 801fe36:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801fe3a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801fe3e:	f8b9 3000 	ldrh.w	r3, [r9]
 801fe42:	43d2      	mvns	r2, r2
 801fe44:	1218      	asrs	r0, r3, #8
 801fe46:	b2d2      	uxtb	r2, r2
 801fe48:	10d9      	asrs	r1, r3, #3
 801fe4a:	0a3f      	lsrs	r7, r7, #8
 801fe4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe54:	00db      	lsls	r3, r3, #3
 801fe56:	4350      	muls	r0, r2
 801fe58:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fe5c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fe60:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fe64:	b2db      	uxtb	r3, r3
 801fe66:	ea47 070c 	orr.w	r7, r7, ip
 801fe6a:	4351      	muls	r1, r2
 801fe6c:	4353      	muls	r3, r2
 801fe6e:	1c42      	adds	r2, r0, #1
 801fe70:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe74:	0c3a      	lsrs	r2, r7, #16
 801fe76:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe7a:	4a18      	ldr	r2, [pc, #96]	; (801fedc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801fe7c:	b2c0      	uxtb	r0, r0
 801fe7e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801fe82:	1c4a      	adds	r2, r1, #1
 801fe84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fe88:	0a3a      	lsrs	r2, r7, #8
 801fe8a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fe8e:	00c9      	lsls	r1, r1, #3
 801fe90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe94:	4301      	orrs	r1, r0
 801fe96:	1c58      	adds	r0, r3, #1
 801fe98:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fe9c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fea0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801fea4:	4308      	orrs	r0, r1
 801fea6:	f8a9 0000 	strh.w	r0, [r9]
 801feaa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801feac:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801feae:	441a      	add	r2, r3
 801feb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801feb2:	9225      	str	r2, [sp, #148]	; 0x94
 801feb4:	f109 0902 	add.w	r9, r9, #2
 801feb8:	441d      	add	r5, r3
 801feba:	f10b 3bff 	add.w	fp, fp, #4294967295
 801febe:	e64d      	b.n	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801fec0:	2800      	cmp	r0, #0
 801fec2:	f43f aeed 	beq.w	801fca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fec6:	5c79      	ldrb	r1, [r7, r1]
 801fec8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fecc:	9109      	str	r1, [sp, #36]	; 0x24
 801fece:	0e09      	lsrs	r1, r1, #24
 801fed0:	9111      	str	r1, [sp, #68]	; 0x44
 801fed2:	e6e5      	b.n	801fca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fed4:	b01b      	add	sp, #108	; 0x6c
 801fed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801feda:	bf00      	nop
 801fedc:	fffff800 	.word	0xfffff800

0801fee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801fee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fee4:	b085      	sub	sp, #20
 801fee6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801feea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801feee:	9103      	str	r1, [sp, #12]
 801fef0:	fb00 7406 	mla	r4, r0, r6, r7
 801fef4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801fef8:	2800      	cmp	r0, #0
 801fefa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801fefe:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ff02:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ff06:	9501      	str	r5, [sp, #4]
 801ff08:	eb03 0904 	add.w	r9, r3, r4
 801ff0c:	f2c0 8150 	blt.w	80201b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ff10:	4583      	cmp	fp, r0
 801ff12:	f340 814d 	ble.w	80201b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ff16:	2f00      	cmp	r7, #0
 801ff18:	f2c0 8146 	blt.w	80201a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ff1c:	42be      	cmp	r6, r7
 801ff1e:	f340 8143 	ble.w	80201a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ff22:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ff26:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ff2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ff2e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ff32:	4355      	muls	r5, r2
 801ff34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff38:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ff3c:	fb0c f203 	mul.w	r2, ip, r3
 801ff40:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ff44:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ff48:	441d      	add	r5, r3
 801ff4a:	f102 0320 	add.w	r3, r2, #32
 801ff4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ff52:	0a1b      	lsrs	r3, r3, #8
 801ff54:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ff58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff5c:	431c      	orrs	r4, r3
 801ff5e:	1c7b      	adds	r3, r7, #1
 801ff60:	f100 812b 	bmi.w	80201ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ff64:	429e      	cmp	r6, r3
 801ff66:	f340 8128 	ble.w	80201ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ff6a:	2900      	cmp	r1, #0
 801ff6c:	f000 8128 	beq.w	80201c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ff70:	9a01      	ldr	r2, [sp, #4]
 801ff72:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ff76:	8855      	ldrh	r5, [r2, #2]
 801ff78:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ff7c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801ff80:	fb08 f802 	mul.w	r8, r8, r2
 801ff84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ff88:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ff8c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ff90:	435d      	muls	r5, r3
 801ff92:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ff96:	44d0      	add	r8, sl
 801ff98:	f105 0a20 	add.w	sl, r5, #32
 801ff9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ffa0:	0a2d      	lsrs	r5, r5, #8
 801ffa2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ffa6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ffaa:	432a      	orrs	r2, r5
 801ffac:	3001      	adds	r0, #1
 801ffae:	f100 810d 	bmi.w	80201cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ffb2:	4583      	cmp	fp, r0
 801ffb4:	f340 810a 	ble.w	80201cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ffb8:	f1be 0f00 	cmp.w	lr, #0
 801ffbc:	f000 810b 	beq.w	80201d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801ffc0:	2f00      	cmp	r7, #0
 801ffc2:	f2c0 8100 	blt.w	80201c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ffc6:	42be      	cmp	r6, r7
 801ffc8:	f340 80fd 	ble.w	80201c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ffcc:	9801      	ldr	r0, [sp, #4]
 801ffce:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ffd2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ffd6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ffda:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ffde:	fb0a fa00 	mul.w	sl, sl, r0
 801ffe2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ffe6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ffea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ffee:	fb05 f808 	mul.w	r8, r5, r8
 801fff2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801fff6:	4482      	add	sl, r0
 801fff8:	f108 0020 	add.w	r0, r8, #32
 801fffc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020000:	0a00      	lsrs	r0, r0, #8
 8020002:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020006:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802000a:	ea4b 0b00 	orr.w	fp, fp, r0
 802000e:	3701      	adds	r7, #1
 8020010:	f100 80e6 	bmi.w	80201e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020014:	42be      	cmp	r6, r7
 8020016:	f340 80e3 	ble.w	80201e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802001a:	2900      	cmp	r1, #0
 802001c:	f000 80e3 	beq.w	80201e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020020:	3601      	adds	r6, #1
 8020022:	9801      	ldr	r0, [sp, #4]
 8020024:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020028:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802002c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020030:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020034:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020038:	fb09 f906 	mul.w	r9, r9, r6
 802003c:	fb07 f800 	mul.w	r8, r7, r0
 8020040:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020044:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020048:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802004c:	44d1      	add	r9, sl
 802004e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020052:	f108 0020 	add.w	r0, r8, #32
 8020056:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802005a:	0a00      	lsrs	r0, r0, #8
 802005c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020060:	4330      	orrs	r0, r6
 8020062:	b28e      	uxth	r6, r1
 8020064:	fa1f f98e 	uxth.w	r9, lr
 8020068:	fb06 f809 	mul.w	r8, r6, r9
 802006c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020070:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020074:	0136      	lsls	r6, r6, #4
 8020076:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802007a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802007e:	9601      	str	r6, [sp, #4]
 8020080:	ea4a 0404 	orr.w	r4, sl, r4
 8020084:	fa1f f689 	uxth.w	r6, r9
 8020088:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802008c:	fb11 f90e 	smulbb	r9, r1, lr
 8020090:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020094:	9602      	str	r6, [sp, #8]
 8020096:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802009a:	4626      	mov	r6, r4
 802009c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80200a0:	f1ce 0410 	rsb	r4, lr, #16
 80200a4:	1a64      	subs	r4, r4, r1
 80200a6:	ea4a 0202 	orr.w	r2, sl, r2
 80200aa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80200ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80200b2:	434a      	muls	r2, r1
 80200b4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80200b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80200bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80200c0:	fb04 2406 	mla	r4, r4, r6, r2
 80200c4:	ea4a 0000 	orr.w	r0, sl, r0
 80200c8:	fb09 4200 	mla	r2, r9, r0, r4
 80200cc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80200d0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80200d4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80200d8:	ea44 0b0b 	orr.w	fp, r4, fp
 80200dc:	9c01      	ldr	r4, [sp, #4]
 80200de:	9e02      	ldr	r6, [sp, #8]
 80200e0:	9903      	ldr	r1, [sp, #12]
 80200e2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80200e6:	1ba4      	subs	r4, r4, r6
 80200e8:	9e01      	ldr	r6, [sp, #4]
 80200ea:	8808      	ldrh	r0, [r1, #0]
 80200ec:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80200f0:	eba6 0608 	sub.w	r6, r6, r8
 80200f4:	b2b6      	uxth	r6, r6
 80200f6:	b2a4      	uxth	r4, r4
 80200f8:	4373      	muls	r3, r6
 80200fa:	fb0c 3304 	mla	r3, ip, r4, r3
 80200fe:	9c02      	ldr	r4, [sp, #8]
 8020100:	fb04 3505 	mla	r5, r4, r5, r3
 8020104:	fb08 5707 	mla	r7, r8, r7, r5
 8020108:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802010c:	b289      	uxth	r1, r1
 802010e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020112:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020116:	434f      	muls	r7, r1
 8020118:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802011c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020120:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020124:	1c7b      	adds	r3, r7, #1
 8020126:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802012a:	ea42 0e0e 	orr.w	lr, r2, lr
 802012e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020132:	fa1f f28e 	uxth.w	r2, lr
 8020136:	1203      	asrs	r3, r0, #8
 8020138:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802013c:	b2ff      	uxtb	r7, r7
 802013e:	1215      	asrs	r5, r2, #8
 8020140:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020144:	fb13 f307 	smulbb	r3, r3, r7
 8020148:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802014c:	fb05 3501 	mla	r5, r5, r1, r3
 8020150:	10c3      	asrs	r3, r0, #3
 8020152:	10d4      	asrs	r4, r2, #3
 8020154:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020158:	fb13 f307 	smulbb	r3, r3, r7
 802015c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020160:	fb04 3401 	mla	r4, r4, r1, r3
 8020164:	00c3      	lsls	r3, r0, #3
 8020166:	00d2      	lsls	r2, r2, #3
 8020168:	b2db      	uxtb	r3, r3
 802016a:	fb13 f307 	smulbb	r3, r3, r7
 802016e:	b2d2      	uxtb	r2, r2
 8020170:	fb02 3101 	mla	r1, r2, r1, r3
 8020174:	b2ad      	uxth	r5, r5
 8020176:	b289      	uxth	r1, r1
 8020178:	b2a4      	uxth	r4, r4
 802017a:	1c6b      	adds	r3, r5, #1
 802017c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020180:	1c62      	adds	r2, r4, #1
 8020182:	1c4b      	adds	r3, r1, #1
 8020184:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020188:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802018c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020190:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020194:	0964      	lsrs	r4, r4, #5
 8020196:	432b      	orrs	r3, r5
 8020198:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802019c:	9a03      	ldr	r2, [sp, #12]
 802019e:	4323      	orrs	r3, r4
 80201a0:	8013      	strh	r3, [r2, #0]
 80201a2:	b005      	add	sp, #20
 80201a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201a8:	f04f 0c00 	mov.w	ip, #0
 80201ac:	4664      	mov	r4, ip
 80201ae:	e6d6      	b.n	801ff5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80201b0:	2300      	movs	r3, #0
 80201b2:	469c      	mov	ip, r3
 80201b4:	461a      	mov	r2, r3
 80201b6:	461c      	mov	r4, r3
 80201b8:	e6f8      	b.n	801ffac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80201ba:	2300      	movs	r3, #0
 80201bc:	461a      	mov	r2, r3
 80201be:	e6f5      	b.n	801ffac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80201c0:	460b      	mov	r3, r1
 80201c2:	460a      	mov	r2, r1
 80201c4:	e6f2      	b.n	801ffac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80201c6:	2500      	movs	r5, #0
 80201c8:	46ab      	mov	fp, r5
 80201ca:	e720      	b.n	802000e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80201cc:	2700      	movs	r7, #0
 80201ce:	463d      	mov	r5, r7
 80201d0:	4638      	mov	r0, r7
 80201d2:	46bb      	mov	fp, r7
 80201d4:	e745      	b.n	8020062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80201d6:	4677      	mov	r7, lr
 80201d8:	4675      	mov	r5, lr
 80201da:	4670      	mov	r0, lr
 80201dc:	46f3      	mov	fp, lr
 80201de:	e740      	b.n	8020062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80201e0:	2700      	movs	r7, #0
 80201e2:	4638      	mov	r0, r7
 80201e4:	e73d      	b.n	8020062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80201e6:	460f      	mov	r7, r1
 80201e8:	4608      	mov	r0, r1
 80201ea:	e73a      	b.n	8020062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080201ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80201ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201f0:	b097      	sub	sp, #92	; 0x5c
 80201f2:	9214      	str	r2, [sp, #80]	; 0x50
 80201f4:	9308      	str	r3, [sp, #32]
 80201f6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80201f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80201fc:	9312      	str	r3, [sp, #72]	; 0x48
 80201fe:	9111      	str	r1, [sp, #68]	; 0x44
 8020200:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8020204:	9015      	str	r0, [sp, #84]	; 0x54
 8020206:	6850      	ldr	r0, [r2, #4]
 8020208:	6812      	ldr	r2, [r2, #0]
 802020a:	fb00 1303 	mla	r3, r0, r3, r1
 802020e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020212:	9309      	str	r3, [sp, #36]	; 0x24
 8020214:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020216:	681b      	ldr	r3, [r3, #0]
 8020218:	930b      	str	r3, [sp, #44]	; 0x2c
 802021a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802021c:	685b      	ldr	r3, [r3, #4]
 802021e:	930c      	str	r3, [sp, #48]	; 0x30
 8020220:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8020224:	930a      	str	r3, [sp, #40]	; 0x28
 8020226:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020228:	2b00      	cmp	r3, #0
 802022a:	dc03      	bgt.n	8020234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802022c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802022e:	2b00      	cmp	r3, #0
 8020230:	f340 83cb 	ble.w	80209ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020234:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020236:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802023a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802023e:	1e48      	subs	r0, r1, #1
 8020240:	1e55      	subs	r5, r2, #1
 8020242:	9b08      	ldr	r3, [sp, #32]
 8020244:	2b00      	cmp	r3, #0
 8020246:	f340 81a3 	ble.w	8020590 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802024a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802024c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802024e:	1436      	asrs	r6, r6, #16
 8020250:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020254:	d406      	bmi.n	8020264 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020256:	4286      	cmp	r6, r0
 8020258:	da04      	bge.n	8020264 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802025a:	2b00      	cmp	r3, #0
 802025c:	db02      	blt.n	8020264 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802025e:	42ab      	cmp	r3, r5
 8020260:	f2c0 8197 	blt.w	8020592 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020264:	3601      	adds	r6, #1
 8020266:	f100 8184 	bmi.w	8020572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802026a:	42b1      	cmp	r1, r6
 802026c:	f2c0 8181 	blt.w	8020572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020270:	3301      	adds	r3, #1
 8020272:	f100 817e 	bmi.w	8020572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020276:	429a      	cmp	r2, r3
 8020278:	f2c0 817b 	blt.w	8020572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802027c:	9b08      	ldr	r3, [sp, #32]
 802027e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8020280:	9313      	str	r3, [sp, #76]	; 0x4c
 8020282:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020286:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020288:	2b00      	cmp	r3, #0
 802028a:	f340 81a4 	ble.w	80205d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802028e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020290:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020292:	1418      	asrs	r0, r3, #16
 8020294:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020296:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802029a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802029c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80202a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202a2:	142d      	asrs	r5, r5, #16
 80202a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80202a8:	f100 81f8 	bmi.w	802069c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80202ac:	f102 3eff 	add.w	lr, r2, #4294967295
 80202b0:	4575      	cmp	r5, lr
 80202b2:	f280 81f3 	bge.w	802069c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80202b6:	2800      	cmp	r0, #0
 80202b8:	f2c0 81f0 	blt.w	802069c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80202bc:	f103 3eff 	add.w	lr, r3, #4294967295
 80202c0:	4570      	cmp	r0, lr
 80202c2:	f280 81eb 	bge.w	802069c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80202c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80202c8:	b212      	sxth	r2, r2
 80202ca:	fb00 5002 	mla	r0, r0, r2, r5
 80202ce:	fa1f fe81 	uxth.w	lr, r1
 80202d2:	eb03 0a00 	add.w	sl, r3, r0
 80202d6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80202da:	f813 9000 	ldrb.w	r9, [r3, r0]
 80202de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80202e2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80202e6:	b29b      	uxth	r3, r3
 80202e8:	f1bc 0f00 	cmp.w	ip, #0
 80202ec:	f000 81b9 	beq.w	8020662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80202f0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80202f4:	940d      	str	r4, [sp, #52]	; 0x34
 80202f6:	eb0a 0b02 	add.w	fp, sl, r2
 80202fa:	fa1f fa8c 	uxth.w	sl, ip
 80202fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8020302:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020306:	fa1f fa8a 	uxth.w	sl, sl
 802030a:	eba5 050e 	sub.w	r5, r5, lr
 802030e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020312:	940e      	str	r4, [sp, #56]	; 0x38
 8020314:	eba3 030a 	sub.w	r3, r3, sl
 8020318:	b2ad      	uxth	r5, r5
 802031a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802031c:	b29b      	uxth	r3, r3
 802031e:	fb08 f505 	mul.w	r5, r8, r5
 8020322:	fb09 5303 	mla	r3, r9, r3, r5
 8020326:	fb0a 3304 	mla	r3, sl, r4, r3
 802032a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802032c:	fb0e 3304 	mla	r3, lr, r4, r3
 8020330:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020334:	2b00      	cmp	r3, #0
 8020336:	f000 810f 	beq.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802033a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802033c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020340:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020344:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020348:	f000 8190 	beq.w	802066c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802034c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020350:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020354:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020358:	fb09 f000 	mul.w	r0, r9, r0
 802035c:	fb0a fe0e 	mul.w	lr, sl, lr
 8020360:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020364:	f100 0b20 	add.w	fp, r0, #32
 8020368:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802036c:	44ce      	add	lr, r9
 802036e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020372:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020376:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802037a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802037e:	ea4e 0909 	orr.w	r9, lr, r9
 8020382:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020386:	8868      	ldrh	r0, [r5, #2]
 8020388:	d019      	beq.n	80203be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802038a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802038e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020392:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020396:	fb08 f800 	mul.w	r8, r8, r0
 802039a:	fb0a fe0e 	mul.w	lr, sl, lr
 802039e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80203a2:	f108 0b20 	add.w	fp, r8, #32
 80203a6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80203aa:	4486      	add	lr, r0
 80203ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80203b0:	0a00      	lsrs	r0, r0, #8
 80203b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80203b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80203ba:	ea4e 0000 	orr.w	r0, lr, r0
 80203be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80203c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80203c6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80203ca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80203ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80203d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80203d6:	ea4e 0909 	orr.w	r9, lr, r9
 80203da:	ea4a 0000 	orr.w	r0, sl, r0
 80203de:	f1bc 0f00 	cmp.w	ip, #0
 80203e2:	f000 8145 	beq.w	8020670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80203e6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80203ea:	3a01      	subs	r2, #1
 80203ec:	0052      	lsls	r2, r2, #1
 80203ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80203f0:	3202      	adds	r2, #2
 80203f2:	2cff      	cmp	r4, #255	; 0xff
 80203f4:	eb05 0e02 	add.w	lr, r5, r2
 80203f8:	5aaa      	ldrh	r2, [r5, r2]
 80203fa:	d018      	beq.n	802042e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80203fc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020400:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020404:	fb04 fa02 	mul.w	sl, r4, r2
 8020408:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802040c:	fb08 f805 	mul.w	r8, r8, r5
 8020410:	f10a 0520 	add.w	r5, sl, #32
 8020414:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020418:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802041c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020420:	4442      	add	r2, r8
 8020422:	0a2d      	lsrs	r5, r5, #8
 8020424:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020428:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802042c:	432a      	orrs	r2, r5
 802042e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020430:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020434:	2cff      	cmp	r4, #255	; 0xff
 8020436:	d01a      	beq.n	802046e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020438:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802043c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020440:	fb04 fa05 	mul.w	sl, r4, r5
 8020444:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020448:	fb08 f80e 	mul.w	r8, r8, lr
 802044c:	f10a 0e20 	add.w	lr, sl, #32
 8020450:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020454:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020458:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802045c:	4445      	add	r5, r8
 802045e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020462:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020466:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802046a:	ea45 050e 	orr.w	r5, r5, lr
 802046e:	fb1c fe01 	smulbb	lr, ip, r1
 8020472:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020476:	f1cc 0810 	rsb	r8, ip, #16
 802047a:	eba8 0801 	sub.w	r8, r8, r1
 802047e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020482:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020486:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802048a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802048e:	4341      	muls	r1, r0
 8020490:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020494:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020498:	ea4a 0202 	orr.w	r2, sl, r2
 802049c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80204a0:	fb09 1108 	mla	r1, r9, r8, r1
 80204a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80204a8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80204ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80204b0:	ea4b 0505 	orr.w	r5, fp, r5
 80204b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80204b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80204bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80204c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80204c4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80204c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80204cc:	fa1f f28e 	uxth.w	r2, lr
 80204d0:	2bff      	cmp	r3, #255	; 0xff
 80204d2:	d103      	bne.n	80204dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80204d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80204d6:	29ff      	cmp	r1, #255	; 0xff
 80204d8:	f000 80de 	beq.w	8020698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80204dc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80204de:	8838      	ldrh	r0, [r7, #0]
 80204e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80204e2:	434b      	muls	r3, r1
 80204e4:	f103 0c01 	add.w	ip, r3, #1
 80204e8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80204ec:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80204f0:	fa5f fc83 	uxtb.w	ip, r3
 80204f4:	1203      	asrs	r3, r0, #8
 80204f6:	1215      	asrs	r5, r2, #8
 80204f8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80204fc:	fb13 f30c 	smulbb	r3, r3, ip
 8020500:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020504:	fb05 3501 	mla	r5, r5, r1, r3
 8020508:	10c3      	asrs	r3, r0, #3
 802050a:	10d1      	asrs	r1, r2, #3
 802050c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020510:	fb13 f30c 	smulbb	r3, r3, ip
 8020514:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020518:	fb01 3104 	mla	r1, r1, r4, r3
 802051c:	00c3      	lsls	r3, r0, #3
 802051e:	00d2      	lsls	r2, r2, #3
 8020520:	b2db      	uxtb	r3, r3
 8020522:	b2d2      	uxtb	r2, r2
 8020524:	fb13 f30c 	smulbb	r3, r3, ip
 8020528:	b2ad      	uxth	r5, r5
 802052a:	fb02 3304 	mla	r3, r2, r4, r3
 802052e:	b29a      	uxth	r2, r3
 8020530:	1c6b      	adds	r3, r5, #1
 8020532:	b289      	uxth	r1, r1
 8020534:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020538:	1c53      	adds	r3, r2, #1
 802053a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802053e:	1c4a      	adds	r2, r1, #1
 8020540:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020544:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020548:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802054c:	0949      	lsrs	r1, r1, #5
 802054e:	432b      	orrs	r3, r5
 8020550:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020554:	430b      	orrs	r3, r1
 8020556:	803b      	strh	r3, [r7, #0]
 8020558:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802055a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802055c:	4413      	add	r3, r2
 802055e:	9321      	str	r3, [sp, #132]	; 0x84
 8020560:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020562:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020564:	441a      	add	r2, r3
 8020566:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020568:	9222      	str	r2, [sp, #136]	; 0x88
 802056a:	3b01      	subs	r3, #1
 802056c:	3702      	adds	r7, #2
 802056e:	9313      	str	r3, [sp, #76]	; 0x4c
 8020570:	e689      	b.n	8020286 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020572:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020574:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8020576:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8020578:	4433      	add	r3, r6
 802057a:	9321      	str	r3, [sp, #132]	; 0x84
 802057c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802057e:	441c      	add	r4, r3
 8020580:	9b08      	ldr	r3, [sp, #32]
 8020582:	9422      	str	r4, [sp, #136]	; 0x88
 8020584:	3b01      	subs	r3, #1
 8020586:	9308      	str	r3, [sp, #32]
 8020588:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802058a:	3302      	adds	r3, #2
 802058c:	9309      	str	r3, [sp, #36]	; 0x24
 802058e:	e658      	b.n	8020242 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8020590:	d028      	beq.n	80205e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020592:	9b08      	ldr	r3, [sp, #32]
 8020594:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8020596:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020598:	3b01      	subs	r3, #1
 802059a:	fb00 5003 	mla	r0, r0, r3, r5
 802059e:	1400      	asrs	r0, r0, #16
 80205a0:	f53f ae6c 	bmi.w	802027c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80205a4:	3901      	subs	r1, #1
 80205a6:	4288      	cmp	r0, r1
 80205a8:	f6bf ae68 	bge.w	802027c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80205ac:	9924      	ldr	r1, [sp, #144]	; 0x90
 80205ae:	9822      	ldr	r0, [sp, #136]	; 0x88
 80205b0:	fb01 0303 	mla	r3, r1, r3, r0
 80205b4:	141b      	asrs	r3, r3, #16
 80205b6:	f53f ae61 	bmi.w	802027c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80205ba:	3a01      	subs	r2, #1
 80205bc:	4293      	cmp	r3, r2
 80205be:	f6bf ae5d 	bge.w	802027c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80205c2:	9b08      	ldr	r3, [sp, #32]
 80205c4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80205c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80205ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80205ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80205d0:	2b00      	cmp	r3, #0
 80205d2:	f300 8082 	bgt.w	80206da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80205d6:	9b08      	ldr	r3, [sp, #32]
 80205d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80205dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80205e2:	9309      	str	r3, [sp, #36]	; 0x24
 80205e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80205e6:	2b00      	cmp	r3, #0
 80205e8:	f340 81ef 	ble.w	80209ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80205ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80205f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020602:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020606:	eef0 6a62 	vmov.f32	s13, s5
 802060a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802060e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020612:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020616:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802061a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802061e:	eef0 6a43 	vmov.f32	s13, s6
 8020622:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020626:	ee12 2a90 	vmov	r2, s5
 802062a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802062e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020632:	ee13 2a10 	vmov	r2, s6
 8020636:	9323      	str	r3, [sp, #140]	; 0x8c
 8020638:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802063a:	fb92 f3f3 	sdiv	r3, r2, r3
 802063e:	9324      	str	r3, [sp, #144]	; 0x90
 8020640:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020642:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020644:	3b01      	subs	r3, #1
 8020646:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802064a:	9311      	str	r3, [sp, #68]	; 0x44
 802064c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802064e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8020652:	bf08      	it	eq
 8020654:	4613      	moveq	r3, r2
 8020656:	9308      	str	r3, [sp, #32]
 8020658:	eeb0 3a67 	vmov.f32	s6, s15
 802065c:	eef0 2a47 	vmov.f32	s5, s14
 8020660:	e5e1      	b.n	8020226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020662:	fb08 f505 	mul.w	r5, r8, r5
 8020666:	fb09 5303 	mla	r3, r9, r3, r5
 802066a:	e661      	b.n	8020330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802066c:	4681      	mov	r9, r0
 802066e:	e688      	b.n	8020382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8020670:	f1c1 0210 	rsb	r2, r1, #16
 8020674:	4341      	muls	r1, r0
 8020676:	fb09 1902 	mla	r9, r9, r2, r1
 802067a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802067e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8020682:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020686:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802068a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802068e:	ea42 0909 	orr.w	r9, r2, r9
 8020692:	fa1f f289 	uxth.w	r2, r9
 8020696:	e71b      	b.n	80204d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8020698:	803a      	strh	r2, [r7, #0]
 802069a:	e75d      	b.n	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802069c:	f115 0e01 	adds.w	lr, r5, #1
 80206a0:	f53f af5a 	bmi.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80206a4:	4572      	cmp	r2, lr
 80206a6:	f6ff af57 	blt.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80206aa:	f110 0e01 	adds.w	lr, r0, #1
 80206ae:	f53f af53 	bmi.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80206b2:	4573      	cmp	r3, lr
 80206b4:	f6ff af50 	blt.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80206b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206ba:	9502      	str	r5, [sp, #8]
 80206bc:	b21b      	sxth	r3, r3
 80206be:	b212      	sxth	r2, r2
 80206c0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80206c4:	9301      	str	r3, [sp, #4]
 80206c6:	9200      	str	r2, [sp, #0]
 80206c8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80206cc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80206d0:	4639      	mov	r1, r7
 80206d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80206d4:	f7ff fc04 	bl	801fee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80206d8:	e73e      	b.n	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80206da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80206dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80206e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80206e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80206e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80206e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80206ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80206ee:	141f      	asrs	r7, r3, #16
 80206f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80206f2:	141b      	asrs	r3, r3, #16
 80206f4:	fb01 3707 	mla	r7, r1, r7, r3
 80206f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206fa:	fa1f fc82 	uxth.w	ip, r2
 80206fe:	eb03 0a07 	add.w	sl, r3, r7
 8020702:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020706:	f813 9007 	ldrb.w	r9, [r3, r7]
 802070a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802070e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020712:	b29b      	uxth	r3, r3
 8020714:	2d00      	cmp	r5, #0
 8020716:	f000 813d 	beq.w	8020994 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802071a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802071e:	940f      	str	r4, [sp, #60]	; 0x3c
 8020720:	eb0a 0b01 	add.w	fp, sl, r1
 8020724:	fa1f fa85 	uxth.w	sl, r5
 8020728:	fb0a fc0c 	mul.w	ip, sl, ip
 802072c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020730:	fa1f fa8a 	uxth.w	sl, sl
 8020734:	eba0 000c 	sub.w	r0, r0, ip
 8020738:	eba3 030a 	sub.w	r3, r3, sl
 802073c:	b280      	uxth	r0, r0
 802073e:	fb08 f000 	mul.w	r0, r8, r0
 8020742:	b29b      	uxth	r3, r3
 8020744:	fb09 0303 	mla	r3, r9, r3, r0
 8020748:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802074a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802074e:	9410      	str	r4, [sp, #64]	; 0x40
 8020750:	fb0a 3300 	mla	r3, sl, r0, r3
 8020754:	fb0c 3304 	mla	r3, ip, r4, r3
 8020758:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802075c:	2b00      	cmp	r3, #0
 802075e:	f000 810b 	beq.w	8020978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8020762:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020764:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020766:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802076a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802076e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8020772:	f000 8114 	beq.w	802099e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8020776:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802077a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802077e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020782:	fb09 f707 	mul.w	r7, r9, r7
 8020786:	fb0a fc0c 	mul.w	ip, sl, ip
 802078a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802078e:	f107 0b20 	add.w	fp, r7, #32
 8020792:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020796:	44cc      	add	ip, r9
 8020798:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802079c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80207a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80207a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80207a8:	ea4c 0909 	orr.w	r9, ip, r9
 80207ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80207b0:	8847      	ldrh	r7, [r0, #2]
 80207b2:	d019      	beq.n	80207e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80207b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80207b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80207bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80207c0:	fb08 f807 	mul.w	r8, r8, r7
 80207c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80207c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80207cc:	f108 0b20 	add.w	fp, r8, #32
 80207d0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80207d4:	44bc      	add	ip, r7
 80207d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80207da:	0a3f      	lsrs	r7, r7, #8
 80207dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80207e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80207e4:	ea4c 0707 	orr.w	r7, ip, r7
 80207e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80207ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80207f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80207f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80207f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80207fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020800:	ea4c 0909 	orr.w	r9, ip, r9
 8020804:	ea4a 0707 	orr.w	r7, sl, r7
 8020808:	2d00      	cmp	r5, #0
 802080a:	f000 80ca 	beq.w	80209a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802080e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8020812:	3901      	subs	r1, #1
 8020814:	0049      	lsls	r1, r1, #1
 8020816:	3102      	adds	r1, #2
 8020818:	eb00 0c01 	add.w	ip, r0, r1
 802081c:	5a41      	ldrh	r1, [r0, r1]
 802081e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020820:	28ff      	cmp	r0, #255	; 0xff
 8020822:	d019      	beq.n	8020858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8020824:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020826:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802082a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802082e:	fb04 fa01 	mul.w	sl, r4, r1
 8020832:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020836:	fb08 f800 	mul.w	r8, r8, r0
 802083a:	f10a 0020 	add.w	r0, sl, #32
 802083e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8020842:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020846:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802084a:	4441      	add	r1, r8
 802084c:	0a00      	lsrs	r0, r0, #8
 802084e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8020852:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020856:	4301      	orrs	r1, r0
 8020858:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802085a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802085e:	2cff      	cmp	r4, #255	; 0xff
 8020860:	d01a      	beq.n	8020898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8020862:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8020866:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802086a:	fb04 fa00 	mul.w	sl, r4, r0
 802086e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020872:	fb08 f80c 	mul.w	r8, r8, ip
 8020876:	f10a 0c20 	add.w	ip, sl, #32
 802087a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802087e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8020882:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020886:	4440      	add	r0, r8
 8020888:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802088c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8020890:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020894:	ea40 000c 	orr.w	r0, r0, ip
 8020898:	fb15 fc02 	smulbb	ip, r5, r2
 802089c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80208a0:	f1c5 0810 	rsb	r8, r5, #16
 80208a4:	eba8 0802 	sub.w	r8, r8, r2
 80208a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80208ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80208b0:	437a      	muls	r2, r7
 80208b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80208b6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80208ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80208be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80208c2:	fb09 2208 	mla	r2, r9, r8, r2
 80208c6:	ea4a 0101 	orr.w	r1, sl, r1
 80208ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80208ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80208d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80208d6:	fb05 2201 	mla	r2, r5, r1, r2
 80208da:	ea4b 0000 	orr.w	r0, fp, r0
 80208de:	fb0c 2200 	mla	r2, ip, r0, r2
 80208e2:	0d57      	lsrs	r7, r2, #21
 80208e4:	0952      	lsrs	r2, r2, #5
 80208e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80208ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80208ee:	433a      	orrs	r2, r7
 80208f0:	2bff      	cmp	r3, #255	; 0xff
 80208f2:	b292      	uxth	r2, r2
 80208f4:	d102      	bne.n	80208fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80208f6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80208f8:	29ff      	cmp	r1, #255	; 0xff
 80208fa:	d063      	beq.n	80209c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80208fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80208fe:	f8be 1000 	ldrh.w	r1, [lr]
 8020902:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020904:	4343      	muls	r3, r0
 8020906:	1c58      	adds	r0, r3, #1
 8020908:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802090c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8020910:	1208      	asrs	r0, r1, #8
 8020912:	b2db      	uxtb	r3, r3
 8020914:	1215      	asrs	r5, r2, #8
 8020916:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802091a:	fb10 f003 	smulbb	r0, r0, r3
 802091e:	10cf      	asrs	r7, r1, #3
 8020920:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020924:	00c9      	lsls	r1, r1, #3
 8020926:	fb05 0504 	mla	r5, r5, r4, r0
 802092a:	b2c9      	uxtb	r1, r1
 802092c:	10d0      	asrs	r0, r2, #3
 802092e:	00d2      	lsls	r2, r2, #3
 8020930:	fb11 f103 	smulbb	r1, r1, r3
 8020934:	b2d2      	uxtb	r2, r2
 8020936:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802093a:	fb02 1204 	mla	r2, r2, r4, r1
 802093e:	fb17 f703 	smulbb	r7, r7, r3
 8020942:	b2ad      	uxth	r5, r5
 8020944:	b292      	uxth	r2, r2
 8020946:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802094a:	fb00 7004 	mla	r0, r0, r4, r7
 802094e:	1c6b      	adds	r3, r5, #1
 8020950:	1c57      	adds	r7, r2, #1
 8020952:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020956:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802095a:	b280      	uxth	r0, r0
 802095c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020960:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020964:	433d      	orrs	r5, r7
 8020966:	1c47      	adds	r7, r0, #1
 8020968:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802096c:	097f      	lsrs	r7, r7, #5
 802096e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020972:	433d      	orrs	r5, r7
 8020974:	f8ae 5000 	strh.w	r5, [lr]
 8020978:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802097a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802097c:	4413      	add	r3, r2
 802097e:	9321      	str	r3, [sp, #132]	; 0x84
 8020980:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020982:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020984:	441a      	add	r2, r3
 8020986:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020988:	9222      	str	r2, [sp, #136]	; 0x88
 802098a:	3b01      	subs	r3, #1
 802098c:	f10e 0e02 	add.w	lr, lr, #2
 8020990:	9313      	str	r3, [sp, #76]	; 0x4c
 8020992:	e61c      	b.n	80205ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8020994:	fb08 f000 	mul.w	r0, r8, r0
 8020998:	fb09 0303 	mla	r3, r9, r3, r0
 802099c:	e6dc      	b.n	8020758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802099e:	46b9      	mov	r9, r7
 80209a0:	e704      	b.n	80207ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80209a2:	f1c2 0110 	rsb	r1, r2, #16
 80209a6:	437a      	muls	r2, r7
 80209a8:	fb09 2901 	mla	r9, r9, r1, r2
 80209ac:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80209b0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80209b4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80209b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80209bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80209c0:	4302      	orrs	r2, r0
 80209c2:	e795      	b.n	80208f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80209c4:	f8ae 2000 	strh.w	r2, [lr]
 80209c8:	e7d6      	b.n	8020978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80209ca:	b017      	add	sp, #92	; 0x5c
 80209cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80209d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209d4:	b085      	sub	sp, #20
 80209d6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80209da:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80209de:	9103      	str	r1, [sp, #12]
 80209e0:	fb00 7406 	mla	r4, r0, r6, r7
 80209e4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80209e8:	2800      	cmp	r0, #0
 80209ea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80209ee:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80209f2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80209f6:	9501      	str	r5, [sp, #4]
 80209f8:	eb02 0904 	add.w	r9, r2, r4
 80209fc:	f2c0 8141 	blt.w	8020c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020a00:	4583      	cmp	fp, r0
 8020a02:	f340 813e 	ble.w	8020c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020a06:	2f00      	cmp	r7, #0
 8020a08:	f2c0 8137 	blt.w	8020c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020a0c:	42be      	cmp	r6, r7
 8020a0e:	f340 8134 	ble.w	8020c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020a12:	f812 c004 	ldrb.w	ip, [r2, r4]
 8020a16:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8020a1a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020a1e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020a22:	4355      	muls	r5, r2
 8020a24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a28:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020a2c:	fb0c f203 	mul.w	r2, ip, r3
 8020a30:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020a34:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020a38:	441d      	add	r5, r3
 8020a3a:	f102 0320 	add.w	r3, r2, #32
 8020a3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020a42:	0a1b      	lsrs	r3, r3, #8
 8020a44:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020a48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a4c:	431c      	orrs	r4, r3
 8020a4e:	1c7b      	adds	r3, r7, #1
 8020a50:	f100 811c 	bmi.w	8020c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020a54:	429e      	cmp	r6, r3
 8020a56:	f340 8119 	ble.w	8020c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020a5a:	2900      	cmp	r1, #0
 8020a5c:	f000 8119 	beq.w	8020c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8020a60:	9a01      	ldr	r2, [sp, #4]
 8020a62:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020a66:	8855      	ldrh	r5, [r2, #2]
 8020a68:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020a6c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020a70:	fb08 f802 	mul.w	r8, r8, r2
 8020a74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a78:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020a7c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020a80:	435d      	muls	r5, r3
 8020a82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020a86:	44d0      	add	r8, sl
 8020a88:	f105 0a20 	add.w	sl, r5, #32
 8020a8c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020a90:	0a2d      	lsrs	r5, r5, #8
 8020a92:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020a96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a9a:	432a      	orrs	r2, r5
 8020a9c:	3001      	adds	r0, #1
 8020a9e:	f100 80fe 	bmi.w	8020c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020aa2:	4583      	cmp	fp, r0
 8020aa4:	f340 80fb 	ble.w	8020c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020aa8:	f1be 0f00 	cmp.w	lr, #0
 8020aac:	f000 80fc 	beq.w	8020ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8020ab0:	2f00      	cmp	r7, #0
 8020ab2:	f2c0 80f1 	blt.w	8020c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020ab6:	42be      	cmp	r6, r7
 8020ab8:	f340 80ee 	ble.w	8020c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020abc:	9801      	ldr	r0, [sp, #4]
 8020abe:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020ac2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020ac6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020aca:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020ace:	fb0a fa00 	mul.w	sl, sl, r0
 8020ad2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020ad6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020ada:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020ade:	fb05 f808 	mul.w	r8, r5, r8
 8020ae2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020ae6:	4482      	add	sl, r0
 8020ae8:	f108 0020 	add.w	r0, r8, #32
 8020aec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020af0:	0a00      	lsrs	r0, r0, #8
 8020af2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020af6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020afa:	ea4b 0b00 	orr.w	fp, fp, r0
 8020afe:	3701      	adds	r7, #1
 8020b00:	f100 80d7 	bmi.w	8020cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020b04:	42be      	cmp	r6, r7
 8020b06:	f340 80d4 	ble.w	8020cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020b0a:	2900      	cmp	r1, #0
 8020b0c:	f000 80d4 	beq.w	8020cb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8020b10:	3601      	adds	r6, #1
 8020b12:	9801      	ldr	r0, [sp, #4]
 8020b14:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020b18:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020b1c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020b20:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020b24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b28:	fb09 f906 	mul.w	r9, r9, r6
 8020b2c:	fb07 f800 	mul.w	r8, r7, r0
 8020b30:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020b34:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020b38:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020b3c:	44d1      	add	r9, sl
 8020b3e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020b42:	f108 0020 	add.w	r0, r8, #32
 8020b46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020b4a:	0a00      	lsrs	r0, r0, #8
 8020b4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b50:	4330      	orrs	r0, r6
 8020b52:	b28e      	uxth	r6, r1
 8020b54:	fa1f f98e 	uxth.w	r9, lr
 8020b58:	fb06 f809 	mul.w	r8, r6, r9
 8020b5c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020b60:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020b64:	0136      	lsls	r6, r6, #4
 8020b66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020b6a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020b6e:	9601      	str	r6, [sp, #4]
 8020b70:	ea4a 0404 	orr.w	r4, sl, r4
 8020b74:	fa1f f689 	uxth.w	r6, r9
 8020b78:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020b7c:	fb11 f90e 	smulbb	r9, r1, lr
 8020b80:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020b84:	9602      	str	r6, [sp, #8]
 8020b86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020b8a:	4626      	mov	r6, r4
 8020b8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b90:	f1ce 0410 	rsb	r4, lr, #16
 8020b94:	1a64      	subs	r4, r4, r1
 8020b96:	ea4a 0202 	orr.w	r2, sl, r2
 8020b9a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020b9e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020ba2:	434a      	muls	r2, r1
 8020ba4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020ba8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020bac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020bb0:	fb04 2406 	mla	r4, r4, r6, r2
 8020bb4:	ea4a 0000 	orr.w	r0, sl, r0
 8020bb8:	fb09 4200 	mla	r2, r9, r0, r4
 8020bbc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020bc0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020bc4:	9801      	ldr	r0, [sp, #4]
 8020bc6:	9903      	ldr	r1, [sp, #12]
 8020bc8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020bcc:	ea44 0b0b 	orr.w	fp, r4, fp
 8020bd0:	9c02      	ldr	r4, [sp, #8]
 8020bd2:	8809      	ldrh	r1, [r1, #0]
 8020bd4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8020bd8:	1b00      	subs	r0, r0, r4
 8020bda:	9c01      	ldr	r4, [sp, #4]
 8020bdc:	eba4 0608 	sub.w	r6, r4, r8
 8020be0:	b2b6      	uxth	r6, r6
 8020be2:	b280      	uxth	r0, r0
 8020be4:	4373      	muls	r3, r6
 8020be6:	fb0c 3300 	mla	r3, ip, r0, r3
 8020bea:	9802      	ldr	r0, [sp, #8]
 8020bec:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020bf0:	fb00 3505 	mla	r5, r0, r5, r3
 8020bf4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020bf8:	fb08 5707 	mla	r7, r8, r7, r5
 8020bfc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020c00:	120b      	asrs	r3, r1, #8
 8020c02:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020c06:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8020c0a:	b2ff      	uxtb	r7, r7
 8020c0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c10:	10c8      	asrs	r0, r1, #3
 8020c12:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020c16:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020c1a:	00c9      	lsls	r1, r1, #3
 8020c1c:	437b      	muls	r3, r7
 8020c1e:	ea42 0e0e 	orr.w	lr, r2, lr
 8020c22:	b2c9      	uxtb	r1, r1
 8020c24:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020c28:	fa1f f28e 	uxth.w	r2, lr
 8020c2c:	4378      	muls	r0, r7
 8020c2e:	434f      	muls	r7, r1
 8020c30:	1c59      	adds	r1, r3, #1
 8020c32:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020c36:	1213      	asrs	r3, r2, #8
 8020c38:	f023 0307 	bic.w	r3, r3, #7
 8020c3c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020c40:	1c41      	adds	r1, r0, #1
 8020c42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020c46:	10d1      	asrs	r1, r2, #3
 8020c48:	f021 0103 	bic.w	r1, r1, #3
 8020c4c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020c50:	021b      	lsls	r3, r3, #8
 8020c52:	00c9      	lsls	r1, r1, #3
 8020c54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020c58:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8020c5c:	430b      	orrs	r3, r1
 8020c5e:	1c79      	adds	r1, r7, #1
 8020c60:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8020c64:	00d2      	lsls	r2, r2, #3
 8020c66:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020c6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c6e:	431a      	orrs	r2, r3
 8020c70:	9b03      	ldr	r3, [sp, #12]
 8020c72:	801a      	strh	r2, [r3, #0]
 8020c74:	b005      	add	sp, #20
 8020c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c7a:	f04f 0c00 	mov.w	ip, #0
 8020c7e:	4664      	mov	r4, ip
 8020c80:	e6e5      	b.n	8020a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8020c82:	2300      	movs	r3, #0
 8020c84:	469c      	mov	ip, r3
 8020c86:	461a      	mov	r2, r3
 8020c88:	461c      	mov	r4, r3
 8020c8a:	e707      	b.n	8020a9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020c8c:	2300      	movs	r3, #0
 8020c8e:	461a      	mov	r2, r3
 8020c90:	e704      	b.n	8020a9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020c92:	460b      	mov	r3, r1
 8020c94:	460a      	mov	r2, r1
 8020c96:	e701      	b.n	8020a9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020c98:	2500      	movs	r5, #0
 8020c9a:	46ab      	mov	fp, r5
 8020c9c:	e72f      	b.n	8020afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8020c9e:	2700      	movs	r7, #0
 8020ca0:	463d      	mov	r5, r7
 8020ca2:	4638      	mov	r0, r7
 8020ca4:	46bb      	mov	fp, r7
 8020ca6:	e754      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020ca8:	4677      	mov	r7, lr
 8020caa:	4675      	mov	r5, lr
 8020cac:	4670      	mov	r0, lr
 8020cae:	46f3      	mov	fp, lr
 8020cb0:	e74f      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020cb2:	2700      	movs	r7, #0
 8020cb4:	4638      	mov	r0, r7
 8020cb6:	e74c      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020cb8:	460f      	mov	r7, r1
 8020cba:	4608      	mov	r0, r1
 8020cbc:	e749      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cc4:	b093      	sub	sp, #76	; 0x4c
 8020cc6:	9210      	str	r2, [sp, #64]	; 0x40
 8020cc8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020cca:	910e      	str	r1, [sp, #56]	; 0x38
 8020ccc:	9306      	str	r3, [sp, #24]
 8020cce:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020cd2:	9011      	str	r0, [sp, #68]	; 0x44
 8020cd4:	6850      	ldr	r0, [r2, #4]
 8020cd6:	6812      	ldr	r2, [r2, #0]
 8020cd8:	fb00 1303 	mla	r3, r0, r3, r1
 8020cdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ce0:	9307      	str	r3, [sp, #28]
 8020ce2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ce4:	681b      	ldr	r3, [r3, #0]
 8020ce6:	9308      	str	r3, [sp, #32]
 8020ce8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cea:	685b      	ldr	r3, [r3, #4]
 8020cec:	9309      	str	r3, [sp, #36]	; 0x24
 8020cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020cf0:	2b00      	cmp	r3, #0
 8020cf2:	dc03      	bgt.n	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020cf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020cf6:	2b00      	cmp	r3, #0
 8020cf8:	f340 83b4 	ble.w	8021464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020cfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d06:	1e48      	subs	r0, r1, #1
 8020d08:	1e55      	subs	r5, r2, #1
 8020d0a:	9b06      	ldr	r3, [sp, #24]
 8020d0c:	2b00      	cmp	r3, #0
 8020d0e:	f340 8163 	ble.w	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8020d12:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8020d14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020d16:	1436      	asrs	r6, r6, #16
 8020d18:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020d1c:	d406      	bmi.n	8020d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d1e:	4286      	cmp	r6, r0
 8020d20:	da04      	bge.n	8020d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d22:	2b00      	cmp	r3, #0
 8020d24:	db02      	blt.n	8020d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d26:	42ab      	cmp	r3, r5
 8020d28:	f2c0 8157 	blt.w	8020fda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8020d2c:	3601      	adds	r6, #1
 8020d2e:	f100 8144 	bmi.w	8020fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020d32:	42b1      	cmp	r1, r6
 8020d34:	f2c0 8141 	blt.w	8020fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020d38:	3301      	adds	r3, #1
 8020d3a:	f100 813e 	bmi.w	8020fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020d3e:	429a      	cmp	r2, r3
 8020d40:	f2c0 813b 	blt.w	8020fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020d44:	9b06      	ldr	r3, [sp, #24]
 8020d46:	9f07      	ldr	r7, [sp, #28]
 8020d48:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d4a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020d4e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020d50:	2b00      	cmp	r3, #0
 8020d52:	f340 8164 	ble.w	802101e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020d56:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020d58:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020d5a:	1418      	asrs	r0, r3, #16
 8020d5c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020d5e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020d62:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020d64:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020d68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d6a:	142d      	asrs	r5, r5, #16
 8020d6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020d70:	f100 81ee 	bmi.w	8021150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020d74:	f102 3eff 	add.w	lr, r2, #4294967295
 8020d78:	4575      	cmp	r5, lr
 8020d7a:	f280 81e9 	bge.w	8021150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020d7e:	2800      	cmp	r0, #0
 8020d80:	f2c0 81e6 	blt.w	8021150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020d84:	f103 3eff 	add.w	lr, r3, #4294967295
 8020d88:	4570      	cmp	r0, lr
 8020d8a:	f280 81e1 	bge.w	8021150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020d8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d90:	b212      	sxth	r2, r2
 8020d92:	fb00 5002 	mla	r0, r0, r2, r5
 8020d96:	fa1f fe81 	uxth.w	lr, r1
 8020d9a:	eb03 0a00 	add.w	sl, r3, r0
 8020d9e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020da2:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020da6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020daa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020dae:	b29b      	uxth	r3, r3
 8020db0:	f1bc 0f00 	cmp.w	ip, #0
 8020db4:	f000 8179 	beq.w	80210aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020db8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020dbc:	940a      	str	r4, [sp, #40]	; 0x28
 8020dbe:	eb0a 0b02 	add.w	fp, sl, r2
 8020dc2:	fa1f fa8c 	uxth.w	sl, ip
 8020dc6:	fb0a fe0e 	mul.w	lr, sl, lr
 8020dca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020dce:	fa1f fa8a 	uxth.w	sl, sl
 8020dd2:	eba5 050e 	sub.w	r5, r5, lr
 8020dd6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020dda:	940b      	str	r4, [sp, #44]	; 0x2c
 8020ddc:	eba3 030a 	sub.w	r3, r3, sl
 8020de0:	b2ad      	uxth	r5, r5
 8020de2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020de4:	b29b      	uxth	r3, r3
 8020de6:	fb08 f505 	mul.w	r5, r8, r5
 8020dea:	fb09 5303 	mla	r3, r9, r3, r5
 8020dee:	fb0a 3304 	mla	r3, sl, r4, r3
 8020df2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020df4:	fb0e 3304 	mla	r3, lr, r4, r3
 8020df8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020dfc:	2b00      	cmp	r3, #0
 8020dfe:	f000 80cf 	beq.w	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e02:	9c08      	ldr	r4, [sp, #32]
 8020e04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020e08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020e0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020e10:	f000 8150 	beq.w	80210b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020e14:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020e18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020e1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e20:	fb09 f000 	mul.w	r0, r9, r0
 8020e24:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020e2c:	f100 0b20 	add.w	fp, r0, #32
 8020e30:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020e34:	44ce      	add	lr, r9
 8020e36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020e3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020e3e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020e42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020e46:	ea4e 0909 	orr.w	r9, lr, r9
 8020e4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020e4e:	8868      	ldrh	r0, [r5, #2]
 8020e50:	d019      	beq.n	8020e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020e52:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020e56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020e5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e5e:	fb08 f800 	mul.w	r8, r8, r0
 8020e62:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020e6a:	f108 0b20 	add.w	fp, r8, #32
 8020e6e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020e72:	4486      	add	lr, r0
 8020e74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020e78:	0a00      	lsrs	r0, r0, #8
 8020e7a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020e7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e82:	ea4e 0000 	orr.w	r0, lr, r0
 8020e86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020e8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020e8e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020e92:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020e96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020e9e:	ea4e 0909 	orr.w	r9, lr, r9
 8020ea2:	ea4a 0000 	orr.w	r0, sl, r0
 8020ea6:	f1bc 0f00 	cmp.w	ip, #0
 8020eaa:	f000 8105 	beq.w	80210b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020eae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020eb2:	3a01      	subs	r2, #1
 8020eb4:	0052      	lsls	r2, r2, #1
 8020eb6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020eb8:	3202      	adds	r2, #2
 8020eba:	2cff      	cmp	r4, #255	; 0xff
 8020ebc:	eb05 0e02 	add.w	lr, r5, r2
 8020ec0:	5aaa      	ldrh	r2, [r5, r2]
 8020ec2:	d018      	beq.n	8020ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020ec4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020ec8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ecc:	fb04 fa02 	mul.w	sl, r4, r2
 8020ed0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020ed4:	fb08 f805 	mul.w	r8, r8, r5
 8020ed8:	f10a 0520 	add.w	r5, sl, #32
 8020edc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020ee0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020ee4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020ee8:	4442      	add	r2, r8
 8020eea:	0a2d      	lsrs	r5, r5, #8
 8020eec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020ef0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ef4:	432a      	orrs	r2, r5
 8020ef6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ef8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020efc:	2cff      	cmp	r4, #255	; 0xff
 8020efe:	d01a      	beq.n	8020f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020f00:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020f04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020f08:	fb04 fa05 	mul.w	sl, r4, r5
 8020f0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020f10:	fb08 f80e 	mul.w	r8, r8, lr
 8020f14:	f10a 0e20 	add.w	lr, sl, #32
 8020f18:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020f1c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020f20:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020f24:	4445      	add	r5, r8
 8020f26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f2a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020f2e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020f32:	ea45 050e 	orr.w	r5, r5, lr
 8020f36:	fb1c fe01 	smulbb	lr, ip, r1
 8020f3a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020f3e:	f1cc 0810 	rsb	r8, ip, #16
 8020f42:	eba8 0801 	sub.w	r8, r8, r1
 8020f46:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020f4a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020f4e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020f52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020f56:	4341      	muls	r1, r0
 8020f58:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f60:	ea4a 0202 	orr.w	r2, sl, r2
 8020f64:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020f68:	fb09 1108 	mla	r1, r9, r8, r1
 8020f6c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020f70:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020f74:	fb0c 1102 	mla	r1, ip, r2, r1
 8020f78:	ea4b 0505 	orr.w	r5, fp, r5
 8020f7c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020f80:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020f84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020f88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020f8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020f90:	ea42 0e0e 	orr.w	lr, r2, lr
 8020f94:	fa1f f28e 	uxth.w	r2, lr
 8020f98:	2bff      	cmp	r3, #255	; 0xff
 8020f9a:	f040 80a1 	bne.w	80210e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8020f9e:	803a      	strh	r2, [r7, #0]
 8020fa0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020fa2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8020fa4:	4413      	add	r3, r2
 8020fa6:	931d      	str	r3, [sp, #116]	; 0x74
 8020fa8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8020faa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020fac:	441a      	add	r2, r3
 8020fae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020fb0:	921e      	str	r2, [sp, #120]	; 0x78
 8020fb2:	3b01      	subs	r3, #1
 8020fb4:	3702      	adds	r7, #2
 8020fb6:	930f      	str	r3, [sp, #60]	; 0x3c
 8020fb8:	e6c9      	b.n	8020d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020fba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020fbc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020fbe:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8020fc0:	4433      	add	r3, r6
 8020fc2:	931d      	str	r3, [sp, #116]	; 0x74
 8020fc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020fc6:	441c      	add	r4, r3
 8020fc8:	9b06      	ldr	r3, [sp, #24]
 8020fca:	941e      	str	r4, [sp, #120]	; 0x78
 8020fcc:	3b01      	subs	r3, #1
 8020fce:	9306      	str	r3, [sp, #24]
 8020fd0:	9b07      	ldr	r3, [sp, #28]
 8020fd2:	3302      	adds	r3, #2
 8020fd4:	9307      	str	r3, [sp, #28]
 8020fd6:	e698      	b.n	8020d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020fd8:	d028      	beq.n	802102c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020fda:	9b06      	ldr	r3, [sp, #24]
 8020fdc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020fde:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020fe0:	3b01      	subs	r3, #1
 8020fe2:	fb00 5003 	mla	r0, r0, r3, r5
 8020fe6:	1400      	asrs	r0, r0, #16
 8020fe8:	f53f aeac 	bmi.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020fec:	3901      	subs	r1, #1
 8020fee:	4288      	cmp	r0, r1
 8020ff0:	f6bf aea8 	bge.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020ff4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020ff6:	981e      	ldr	r0, [sp, #120]	; 0x78
 8020ff8:	fb01 0303 	mla	r3, r1, r3, r0
 8020ffc:	141b      	asrs	r3, r3, #16
 8020ffe:	f53f aea1 	bmi.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021002:	3a01      	subs	r2, #1
 8021004:	4293      	cmp	r3, r2
 8021006:	f6bf ae9d 	bge.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802100a:	9b06      	ldr	r3, [sp, #24]
 802100c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021010:	930f      	str	r3, [sp, #60]	; 0x3c
 8021012:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021016:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021018:	2b00      	cmp	r3, #0
 802101a:	f300 80b6 	bgt.w	802118a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802101e:	9b06      	ldr	r3, [sp, #24]
 8021020:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021024:	9b07      	ldr	r3, [sp, #28]
 8021026:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802102a:	9307      	str	r3, [sp, #28]
 802102c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802102e:	2b00      	cmp	r3, #0
 8021030:	f340 8218 	ble.w	8021464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021034:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021038:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802103c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021040:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021042:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021046:	ee31 1a05 	vadd.f32	s2, s2, s10
 802104a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802104e:	eef0 6a62 	vmov.f32	s13, s5
 8021052:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021056:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802105a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802105e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8021062:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021066:	eef0 6a43 	vmov.f32	s13, s6
 802106a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802106e:	ee12 2a90 	vmov	r2, s5
 8021072:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021076:	fb92 f3f3 	sdiv	r3, r2, r3
 802107a:	ee13 2a10 	vmov	r2, s6
 802107e:	931f      	str	r3, [sp, #124]	; 0x7c
 8021080:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021082:	fb92 f3f3 	sdiv	r3, r2, r3
 8021086:	9320      	str	r3, [sp, #128]	; 0x80
 8021088:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802108a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802108c:	3b01      	subs	r3, #1
 802108e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021092:	930e      	str	r3, [sp, #56]	; 0x38
 8021094:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021096:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802109a:	bf08      	it	eq
 802109c:	4613      	moveq	r3, r2
 802109e:	9306      	str	r3, [sp, #24]
 80210a0:	eeb0 3a67 	vmov.f32	s6, s15
 80210a4:	eef0 2a47 	vmov.f32	s5, s14
 80210a8:	e621      	b.n	8020cee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80210aa:	fb08 f505 	mul.w	r5, r8, r5
 80210ae:	fb09 5303 	mla	r3, r9, r3, r5
 80210b2:	e6a1      	b.n	8020df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80210b4:	4681      	mov	r9, r0
 80210b6:	e6c8      	b.n	8020e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80210b8:	f1c1 0210 	rsb	r2, r1, #16
 80210bc:	4341      	muls	r1, r0
 80210be:	fb09 1902 	mla	r9, r9, r2, r1
 80210c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80210c6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80210ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80210ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80210d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80210d6:	ea42 0909 	orr.w	r9, r2, r9
 80210da:	fa1f f289 	uxth.w	r2, r9
 80210de:	e75b      	b.n	8020f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80210e0:	f8b7 c000 	ldrh.w	ip, [r7]
 80210e4:	43db      	mvns	r3, r3
 80210e6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80210ea:	fa5f fe83 	uxtb.w	lr, r3
 80210ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210f2:	fb00 f00e 	mul.w	r0, r0, lr
 80210f6:	1c41      	adds	r1, r0, #1
 80210f8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80210fc:	1211      	asrs	r1, r2, #8
 80210fe:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021102:	f021 0107 	bic.w	r1, r1, #7
 8021106:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802110a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802110e:	48d7      	ldr	r0, [pc, #860]	; (802146c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021110:	fb05 f50e 	mul.w	r5, r5, lr
 8021114:	b2c9      	uxtb	r1, r1
 8021116:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802111a:	1c69      	adds	r1, r5, #1
 802111c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021120:	10d1      	asrs	r1, r2, #3
 8021122:	f021 0103 	bic.w	r1, r1, #3
 8021126:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802112a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802112e:	b2db      	uxtb	r3, r3
 8021130:	00c9      	lsls	r1, r1, #3
 8021132:	fb03 f30e 	mul.w	r3, r3, lr
 8021136:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802113a:	4301      	orrs	r1, r0
 802113c:	1c58      	adds	r0, r3, #1
 802113e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021142:	00d2      	lsls	r2, r2, #3
 8021144:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021148:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802114c:	430a      	orrs	r2, r1
 802114e:	e726      	b.n	8020f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8021150:	f115 0e01 	adds.w	lr, r5, #1
 8021154:	f53f af24 	bmi.w	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021158:	4572      	cmp	r2, lr
 802115a:	f6ff af21 	blt.w	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802115e:	f110 0e01 	adds.w	lr, r0, #1
 8021162:	f53f af1d 	bmi.w	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021166:	4573      	cmp	r3, lr
 8021168:	f6ff af1a 	blt.w	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802116c:	b21b      	sxth	r3, r3
 802116e:	b212      	sxth	r2, r2
 8021170:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8021174:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021178:	9301      	str	r3, [sp, #4]
 802117a:	9200      	str	r2, [sp, #0]
 802117c:	4639      	mov	r1, r7
 802117e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8021182:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021184:	f7ff fc24 	bl	80209d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021188:	e70a      	b.n	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802118a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802118c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021190:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021192:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021196:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021198:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802119c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802119e:	141f      	asrs	r7, r3, #16
 80211a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80211a2:	141b      	asrs	r3, r3, #16
 80211a4:	fb01 3707 	mla	r7, r1, r7, r3
 80211a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211aa:	fa1f fc82 	uxth.w	ip, r2
 80211ae:	eb03 0a07 	add.w	sl, r3, r7
 80211b2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80211b6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80211ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80211be:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80211c2:	b29b      	uxth	r3, r3
 80211c4:	2d00      	cmp	r5, #0
 80211c6:	f000 80fe 	beq.w	80213c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80211ca:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80211ce:	940c      	str	r4, [sp, #48]	; 0x30
 80211d0:	eb0a 0b01 	add.w	fp, sl, r1
 80211d4:	fa1f fa85 	uxth.w	sl, r5
 80211d8:	fb0a fc0c 	mul.w	ip, sl, ip
 80211dc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80211e0:	fa1f fa8a 	uxth.w	sl, sl
 80211e4:	eba0 000c 	sub.w	r0, r0, ip
 80211e8:	eba3 030a 	sub.w	r3, r3, sl
 80211ec:	b280      	uxth	r0, r0
 80211ee:	fb08 f000 	mul.w	r0, r8, r0
 80211f2:	b29b      	uxth	r3, r3
 80211f4:	fb09 0303 	mla	r3, r9, r3, r0
 80211f8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80211fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80211fe:	940d      	str	r4, [sp, #52]	; 0x34
 8021200:	fb0a 3300 	mla	r3, sl, r0, r3
 8021204:	fb0c 3304 	mla	r3, ip, r4, r3
 8021208:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802120c:	2b00      	cmp	r3, #0
 802120e:	f000 80cc 	beq.w	80213aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021212:	9808      	ldr	r0, [sp, #32]
 8021214:	9c08      	ldr	r4, [sp, #32]
 8021216:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802121a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802121e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021222:	f000 80d5 	beq.w	80213d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021226:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802122a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802122e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021232:	fb09 f707 	mul.w	r7, r9, r7
 8021236:	fb0a fc0c 	mul.w	ip, sl, ip
 802123a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802123e:	f107 0b20 	add.w	fp, r7, #32
 8021242:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021246:	44cc      	add	ip, r9
 8021248:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802124c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021250:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021254:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021258:	ea4c 0909 	orr.w	r9, ip, r9
 802125c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021260:	8847      	ldrh	r7, [r0, #2]
 8021262:	d019      	beq.n	8021298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8021264:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021268:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802126c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021270:	fb08 f807 	mul.w	r8, r8, r7
 8021274:	fb0a fc0c 	mul.w	ip, sl, ip
 8021278:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802127c:	f108 0b20 	add.w	fp, r8, #32
 8021280:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021284:	44bc      	add	ip, r7
 8021286:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802128a:	0a3f      	lsrs	r7, r7, #8
 802128c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021290:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021294:	ea4c 0707 	orr.w	r7, ip, r7
 8021298:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802129c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80212a0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80212a4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80212a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80212ac:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80212b0:	ea4c 0909 	orr.w	r9, ip, r9
 80212b4:	ea4a 0707 	orr.w	r7, sl, r7
 80212b8:	2d00      	cmp	r5, #0
 80212ba:	f000 808b 	beq.w	80213d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80212be:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80212c2:	3901      	subs	r1, #1
 80212c4:	0049      	lsls	r1, r1, #1
 80212c6:	3102      	adds	r1, #2
 80212c8:	eb00 0c01 	add.w	ip, r0, r1
 80212cc:	5a41      	ldrh	r1, [r0, r1]
 80212ce:	980c      	ldr	r0, [sp, #48]	; 0x30
 80212d0:	28ff      	cmp	r0, #255	; 0xff
 80212d2:	d019      	beq.n	8021308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80212d4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80212d6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80212da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80212de:	fb04 fa01 	mul.w	sl, r4, r1
 80212e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80212e6:	fb08 f800 	mul.w	r8, r8, r0
 80212ea:	f10a 0020 	add.w	r0, sl, #32
 80212ee:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80212f2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80212f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80212fa:	4441      	add	r1, r8
 80212fc:	0a00      	lsrs	r0, r0, #8
 80212fe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021302:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021306:	4301      	orrs	r1, r0
 8021308:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802130a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802130e:	2cff      	cmp	r4, #255	; 0xff
 8021310:	d01a      	beq.n	8021348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8021312:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021316:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802131a:	fb04 fa00 	mul.w	sl, r4, r0
 802131e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021322:	fb08 f80c 	mul.w	r8, r8, ip
 8021326:	f10a 0c20 	add.w	ip, sl, #32
 802132a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802132e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021332:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021336:	4440      	add	r0, r8
 8021338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802133c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021340:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021344:	ea40 000c 	orr.w	r0, r0, ip
 8021348:	fb15 fc02 	smulbb	ip, r5, r2
 802134c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021350:	f1c5 0810 	rsb	r8, r5, #16
 8021354:	eba8 0802 	sub.w	r8, r8, r2
 8021358:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802135c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021360:	437a      	muls	r2, r7
 8021362:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021366:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802136a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802136e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021372:	fb09 2208 	mla	r2, r9, r8, r2
 8021376:	ea4a 0101 	orr.w	r1, sl, r1
 802137a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802137e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021382:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021386:	fb05 2201 	mla	r2, r5, r1, r2
 802138a:	ea4b 0000 	orr.w	r0, fp, r0
 802138e:	fb0c 2200 	mla	r2, ip, r0, r2
 8021392:	0d57      	lsrs	r7, r2, #21
 8021394:	0952      	lsrs	r2, r2, #5
 8021396:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802139a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802139e:	433a      	orrs	r2, r7
 80213a0:	2bff      	cmp	r3, #255	; 0xff
 80213a2:	b292      	uxth	r2, r2
 80213a4:	d127      	bne.n	80213f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80213a6:	f8ae 2000 	strh.w	r2, [lr]
 80213aa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80213ac:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80213ae:	4413      	add	r3, r2
 80213b0:	931d      	str	r3, [sp, #116]	; 0x74
 80213b2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80213b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213b6:	441a      	add	r2, r3
 80213b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80213ba:	921e      	str	r2, [sp, #120]	; 0x78
 80213bc:	3b01      	subs	r3, #1
 80213be:	f10e 0e02 	add.w	lr, lr, #2
 80213c2:	930f      	str	r3, [sp, #60]	; 0x3c
 80213c4:	e627      	b.n	8021016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80213c6:	fb08 f000 	mul.w	r0, r8, r0
 80213ca:	fb09 0303 	mla	r3, r9, r3, r0
 80213ce:	e71b      	b.n	8021208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80213d0:	46b9      	mov	r9, r7
 80213d2:	e743      	b.n	802125c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80213d4:	f1c2 0110 	rsb	r1, r2, #16
 80213d8:	437a      	muls	r2, r7
 80213da:	fb09 2901 	mla	r9, r9, r1, r2
 80213de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80213e2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80213e6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80213ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80213ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213f2:	4302      	orrs	r2, r0
 80213f4:	e7d4      	b.n	80213a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80213f6:	f8be 7000 	ldrh.w	r7, [lr]
 80213fa:	4c1c      	ldr	r4, [pc, #112]	; (802146c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80213fc:	43db      	mvns	r3, r3
 80213fe:	1238      	asrs	r0, r7, #8
 8021400:	fa5f fc83 	uxtb.w	ip, r3
 8021404:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021408:	10fd      	asrs	r5, r7, #3
 802140a:	fb00 f00c 	mul.w	r0, r0, ip
 802140e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021412:	fb05 f10c 	mul.w	r1, r5, ip
 8021416:	1c45      	adds	r5, r0, #1
 8021418:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802141c:	1215      	asrs	r5, r2, #8
 802141e:	f025 0507 	bic.w	r5, r5, #7
 8021422:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021426:	1c4d      	adds	r5, r1, #1
 8021428:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802142c:	10d1      	asrs	r1, r2, #3
 802142e:	f021 0103 	bic.w	r1, r1, #3
 8021432:	00fb      	lsls	r3, r7, #3
 8021434:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021438:	b2db      	uxtb	r3, r3
 802143a:	b2c0      	uxtb	r0, r0
 802143c:	00c9      	lsls	r1, r1, #3
 802143e:	fb03 f30c 	mul.w	r3, r3, ip
 8021442:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021446:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802144a:	4308      	orrs	r0, r1
 802144c:	1c59      	adds	r1, r3, #1
 802144e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021452:	00d2      	lsls	r2, r2, #3
 8021454:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021458:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802145c:	4318      	orrs	r0, r3
 802145e:	f8ae 0000 	strh.w	r0, [lr]
 8021462:	e7a2      	b.n	80213aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021464:	b013      	add	sp, #76	; 0x4c
 8021466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802146a:	bf00      	nop
 802146c:	fffff800 	.word	0xfffff800

08021470 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8021470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021474:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8021478:	fb05 4c03 	mla	ip, r5, r3, r4
 802147c:	2d00      	cmp	r5, #0
 802147e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8021482:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8021486:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802148a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802148e:	8808      	ldrh	r0, [r1, #0]
 8021490:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8021494:	f2c0 80a7 	blt.w	80215e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021498:	45aa      	cmp	sl, r5
 802149a:	f340 80a4 	ble.w	80215e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802149e:	2c00      	cmp	r4, #0
 80214a0:	f2c0 809f 	blt.w	80215e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80214a4:	42a3      	cmp	r3, r4
 80214a6:	f340 809c 	ble.w	80215e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80214aa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80214ae:	1c62      	adds	r2, r4, #1
 80214b0:	f100 809c 	bmi.w	80215ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80214b4:	4293      	cmp	r3, r2
 80214b6:	f340 8099 	ble.w	80215ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80214ba:	f1b9 0f00 	cmp.w	r9, #0
 80214be:	f000 8095 	beq.w	80215ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80214c2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80214c6:	3501      	adds	r5, #1
 80214c8:	f100 8094 	bmi.w	80215f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80214cc:	45aa      	cmp	sl, r5
 80214ce:	f340 8091 	ble.w	80215f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80214d2:	2f00      	cmp	r7, #0
 80214d4:	f000 808e 	beq.w	80215f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80214d8:	2c00      	cmp	r4, #0
 80214da:	f2c0 8089 	blt.w	80215f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80214de:	42a3      	cmp	r3, r4
 80214e0:	f340 8086 	ble.w	80215f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80214e4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80214e8:	3401      	adds	r4, #1
 80214ea:	f100 8086 	bmi.w	80215fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80214ee:	42a3      	cmp	r3, r4
 80214f0:	f340 8083 	ble.w	80215fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80214f4:	f1b9 0f00 	cmp.w	r9, #0
 80214f8:	d07f      	beq.n	80215fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80214fa:	3301      	adds	r3, #1
 80214fc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8021500:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8021504:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021508:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802150c:	fb19 fe07 	smulbb	lr, r9, r7
 8021510:	ea44 0808 	orr.w	r8, r4, r8
 8021514:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021518:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802151c:	f1c7 0210 	rsb	r2, r7, #16
 8021520:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021524:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021528:	ea44 0c0c 	orr.w	ip, r4, ip
 802152c:	eba2 0209 	sub.w	r2, r2, r9
 8021530:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8021534:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8021538:	fb04 f40c 	mul.w	r4, r4, ip
 802153c:	fb02 4808 	mla	r8, r2, r8, r4
 8021540:	041a      	lsls	r2, r3, #16
 8021542:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021546:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802154a:	4313      	orrs	r3, r2
 802154c:	042a      	lsls	r2, r5, #16
 802154e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021552:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021556:	fb0e 8303 	mla	r3, lr, r3, r8
 802155a:	432a      	orrs	r2, r5
 802155c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8021560:	fb07 3202 	mla	r2, r7, r2, r3
 8021564:	0d53      	lsrs	r3, r2, #21
 8021566:	0952      	lsrs	r2, r2, #5
 8021568:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802156c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021570:	431a      	orrs	r2, r3
 8021572:	b293      	uxth	r3, r2
 8021574:	b2b4      	uxth	r4, r6
 8021576:	1202      	asrs	r2, r0, #8
 8021578:	43f6      	mvns	r6, r6
 802157a:	b2f6      	uxtb	r6, r6
 802157c:	121d      	asrs	r5, r3, #8
 802157e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021582:	fb12 f206 	smulbb	r2, r2, r6
 8021586:	10c7      	asrs	r7, r0, #3
 8021588:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802158c:	00c0      	lsls	r0, r0, #3
 802158e:	fb05 2504 	mla	r5, r5, r4, r2
 8021592:	b2c0      	uxtb	r0, r0
 8021594:	10da      	asrs	r2, r3, #3
 8021596:	00db      	lsls	r3, r3, #3
 8021598:	b2db      	uxtb	r3, r3
 802159a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802159e:	fb10 f006 	smulbb	r0, r0, r6
 80215a2:	b2ad      	uxth	r5, r5
 80215a4:	fb03 0004 	mla	r0, r3, r4, r0
 80215a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80215ac:	fb17 f706 	smulbb	r7, r7, r6
 80215b0:	b280      	uxth	r0, r0
 80215b2:	1c6b      	adds	r3, r5, #1
 80215b4:	fb02 7204 	mla	r2, r2, r4, r7
 80215b8:	b292      	uxth	r2, r2
 80215ba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80215be:	1c43      	adds	r3, r0, #1
 80215c0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80215c4:	1c50      	adds	r0, r2, #1
 80215c6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80215ca:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80215ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80215d2:	0952      	lsrs	r2, r2, #5
 80215d4:	432b      	orrs	r3, r5
 80215d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80215da:	4313      	orrs	r3, r2
 80215dc:	800b      	strh	r3, [r1, #0]
 80215de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80215e2:	4680      	mov	r8, r0
 80215e4:	e763      	b.n	80214ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80215e6:	4684      	mov	ip, r0
 80215e8:	4680      	mov	r8, r0
 80215ea:	e76c      	b.n	80214c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80215ec:	4684      	mov	ip, r0
 80215ee:	e76a      	b.n	80214c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80215f0:	4605      	mov	r5, r0
 80215f2:	e779      	b.n	80214e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80215f4:	4603      	mov	r3, r0
 80215f6:	4605      	mov	r5, r0
 80215f8:	e782      	b.n	8021500 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80215fa:	4603      	mov	r3, r0
 80215fc:	e780      	b.n	8021500 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080215fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80215fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021602:	b093      	sub	sp, #76	; 0x4c
 8021604:	461d      	mov	r5, r3
 8021606:	9210      	str	r2, [sp, #64]	; 0x40
 8021608:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802160a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802160e:	920b      	str	r2, [sp, #44]	; 0x2c
 8021610:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8021614:	910a      	str	r1, [sp, #40]	; 0x28
 8021616:	6859      	ldr	r1, [r3, #4]
 8021618:	681b      	ldr	r3, [r3, #0]
 802161a:	9011      	str	r0, [sp, #68]	; 0x44
 802161c:	fb01 2707 	mla	r7, r1, r7, r2
 8021620:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8021624:	9307      	str	r3, [sp, #28]
 8021626:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021628:	681b      	ldr	r3, [r3, #0]
 802162a:	9309      	str	r3, [sp, #36]	; 0x24
 802162c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802162e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021632:	43db      	mvns	r3, r3
 8021634:	b2db      	uxtb	r3, r3
 8021636:	9308      	str	r3, [sp, #32]
 8021638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802163a:	2b00      	cmp	r3, #0
 802163c:	dc03      	bgt.n	8021646 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802163e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021640:	2b00      	cmp	r3, #0
 8021642:	f340 8203 	ble.w	8021a4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021646:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021648:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802164c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021650:	1e48      	subs	r0, r1, #1
 8021652:	f102 3cff 	add.w	ip, r2, #4294967295
 8021656:	2d00      	cmp	r5, #0
 8021658:	f340 80da 	ble.w	8021810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802165c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021660:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021664:	d406      	bmi.n	8021674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021666:	4586      	cmp	lr, r0
 8021668:	da04      	bge.n	8021674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802166a:	2b00      	cmp	r3, #0
 802166c:	db02      	blt.n	8021674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802166e:	4563      	cmp	r3, ip
 8021670:	f2c0 80cf 	blt.w	8021812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021674:	f11e 0e01 	adds.w	lr, lr, #1
 8021678:	f100 80c1 	bmi.w	80217fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802167c:	4571      	cmp	r1, lr
 802167e:	f2c0 80be 	blt.w	80217fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021682:	3301      	adds	r3, #1
 8021684:	f100 80bb 	bmi.w	80217fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021688:	429a      	cmp	r2, r3
 802168a:	f2c0 80b8 	blt.w	80217fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802168e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8021692:	46a9      	mov	r9, r5
 8021694:	f1b9 0f00 	cmp.w	r9, #0
 8021698:	f340 80d8 	ble.w	802184c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802169c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802169e:	1421      	asrs	r1, r4, #16
 80216a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80216a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80216a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80216ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80216b0:	f100 8111 	bmi.w	80218d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80216b4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80216b8:	4551      	cmp	r1, sl
 80216ba:	f280 810c 	bge.w	80218d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80216be:	2800      	cmp	r0, #0
 80216c0:	f2c0 8109 	blt.w	80218d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80216c4:	f103 3aff 	add.w	sl, r3, #4294967295
 80216c8:	4550      	cmp	r0, sl
 80216ca:	f280 8104 	bge.w	80218d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80216ce:	fa0f f38e 	sxth.w	r3, lr
 80216d2:	fb00 1103 	mla	r1, r0, r3, r1
 80216d6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80216d8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80216dc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80216e0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80216e4:	f1bc 0f00 	cmp.w	ip, #0
 80216e8:	d007      	beq.n	80216fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80216ea:	005b      	lsls	r3, r3, #1
 80216ec:	eb0a 0003 	add.w	r0, sl, r3
 80216f0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80216f4:	930c      	str	r3, [sp, #48]	; 0x30
 80216f6:	8843      	ldrh	r3, [r0, #2]
 80216f8:	930d      	str	r3, [sp, #52]	; 0x34
 80216fa:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80216fe:	fb12 f30c 	smulbb	r3, r2, ip
 8021702:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021706:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802170a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802170e:	10db      	asrs	r3, r3, #3
 8021710:	ea40 000e 	orr.w	r0, r0, lr
 8021714:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021718:	f1cc 0e10 	rsb	lr, ip, #16
 802171c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021720:	ebae 0e02 	sub.w	lr, lr, r2
 8021724:	ea4a 0101 	orr.w	r1, sl, r1
 8021728:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802172c:	4351      	muls	r1, r2
 802172e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021730:	9f08      	ldr	r7, [sp, #32]
 8021732:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021736:	fb0e 1e00 	mla	lr, lr, r0, r1
 802173a:	0410      	lsls	r0, r2, #16
 802173c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021740:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021744:	4310      	orrs	r0, r2
 8021746:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021748:	990c      	ldr	r1, [sp, #48]	; 0x30
 802174a:	0412      	lsls	r2, r2, #16
 802174c:	fb03 e000 	mla	r0, r3, r0, lr
 8021750:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021754:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021758:	ea42 020e 	orr.w	r2, r2, lr
 802175c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021760:	fb03 0302 	mla	r3, r3, r2, r0
 8021764:	0d5a      	lsrs	r2, r3, #21
 8021766:	095b      	lsrs	r3, r3, #5
 8021768:	f8b8 0000 	ldrh.w	r0, [r8]
 802176c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021770:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021774:	4313      	orrs	r3, r2
 8021776:	b29b      	uxth	r3, r3
 8021778:	1201      	asrs	r1, r0, #8
 802177a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802177e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021782:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021786:	fb11 f107 	smulbb	r1, r1, r7
 802178a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802178e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021792:	00c0      	lsls	r0, r0, #3
 8021794:	fb0c 1c02 	mla	ip, ip, r2, r1
 8021798:	b2c0      	uxtb	r0, r0
 802179a:	10d9      	asrs	r1, r3, #3
 802179c:	00db      	lsls	r3, r3, #3
 802179e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80217a2:	b2db      	uxtb	r3, r3
 80217a4:	fb10 f007 	smulbb	r0, r0, r7
 80217a8:	fa1f fc8c 	uxth.w	ip, ip
 80217ac:	fb03 0302 	mla	r3, r3, r2, r0
 80217b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80217b4:	fb1e fe07 	smulbb	lr, lr, r7
 80217b8:	fb01 e102 	mla	r1, r1, r2, lr
 80217bc:	b29a      	uxth	r2, r3
 80217be:	f10c 0301 	add.w	r3, ip, #1
 80217c2:	b289      	uxth	r1, r1
 80217c4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80217c8:	1c53      	adds	r3, r2, #1
 80217ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217ce:	1c4a      	adds	r2, r1, #1
 80217d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80217d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80217d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80217dc:	0949      	lsrs	r1, r1, #5
 80217de:	ea43 030c 	orr.w	r3, r3, ip
 80217e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80217e6:	430b      	orrs	r3, r1
 80217e8:	f8a8 3000 	strh.w	r3, [r8]
 80217ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80217ee:	441c      	add	r4, r3
 80217f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80217f2:	f108 0802 	add.w	r8, r8, #2
 80217f6:	441e      	add	r6, r3
 80217f8:	f109 39ff 	add.w	r9, r9, #4294967295
 80217fc:	e74a      	b.n	8021694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80217fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021800:	441c      	add	r4, r3
 8021802:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021804:	441e      	add	r6, r3
 8021806:	9b07      	ldr	r3, [sp, #28]
 8021808:	3302      	adds	r3, #2
 802180a:	3d01      	subs	r5, #1
 802180c:	9307      	str	r3, [sp, #28]
 802180e:	e722      	b.n	8021656 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021810:	d022      	beq.n	8021858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8021812:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021814:	1e6b      	subs	r3, r5, #1
 8021816:	fb00 4003 	mla	r0, r0, r3, r4
 802181a:	1400      	asrs	r0, r0, #16
 802181c:	f53f af37 	bmi.w	802168e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021820:	3901      	subs	r1, #1
 8021822:	4288      	cmp	r0, r1
 8021824:	f6bf af33 	bge.w	802168e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021828:	9920      	ldr	r1, [sp, #128]	; 0x80
 802182a:	fb01 6303 	mla	r3, r1, r3, r6
 802182e:	141b      	asrs	r3, r3, #16
 8021830:	f53f af2d 	bmi.w	802168e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021834:	3a01      	subs	r2, #1
 8021836:	4293      	cmp	r3, r2
 8021838:	f6bf af29 	bge.w	802168e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802183c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8021840:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8021844:	46a8      	mov	r8, r5
 8021846:	f1b8 0f00 	cmp.w	r8, #0
 802184a:	dc5e      	bgt.n	802190a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802184c:	9b07      	ldr	r3, [sp, #28]
 802184e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021852:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021856:	9307      	str	r3, [sp, #28]
 8021858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802185a:	2b00      	cmp	r3, #0
 802185c:	f340 80f6 	ble.w	8021a4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021860:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021864:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021868:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802186c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802186e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021872:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021876:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802187a:	eef0 6a62 	vmov.f32	s13, s5
 802187e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021886:	ee77 2a62 	vsub.f32	s5, s14, s5
 802188a:	ee16 4a90 	vmov	r4, s13
 802188e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021892:	eef0 6a43 	vmov.f32	s13, s6
 8021896:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802189a:	ee12 2a90 	vmov	r2, s5
 802189e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80218a6:	ee13 2a10 	vmov	r2, s6
 80218aa:	931f      	str	r3, [sp, #124]	; 0x7c
 80218ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80218b2:	9320      	str	r3, [sp, #128]	; 0x80
 80218b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80218b8:	3b01      	subs	r3, #1
 80218ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218be:	930a      	str	r3, [sp, #40]	; 0x28
 80218c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218c2:	ee16 6a90 	vmov	r6, s13
 80218c6:	bf14      	ite	ne
 80218c8:	461d      	movne	r5, r3
 80218ca:	4615      	moveq	r5, r2
 80218cc:	eeb0 3a67 	vmov.f32	s6, s15
 80218d0:	eef0 2a47 	vmov.f32	s5, s14
 80218d4:	e6b0      	b.n	8021638 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80218d6:	f111 0a01 	adds.w	sl, r1, #1
 80218da:	d487      	bmi.n	80217ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80218dc:	45d6      	cmp	lr, sl
 80218de:	db85      	blt.n	80217ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80218e0:	f110 0a01 	adds.w	sl, r0, #1
 80218e4:	d482      	bmi.n	80217ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80218e6:	4553      	cmp	r3, sl
 80218e8:	db80      	blt.n	80217ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80218ea:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80218ec:	9101      	str	r1, [sp, #4]
 80218ee:	b21b      	sxth	r3, r3
 80218f0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80218f4:	9300      	str	r3, [sp, #0]
 80218f6:	e9cd c704 	strd	ip, r7, [sp, #16]
 80218fa:	fa0f f38e 	sxth.w	r3, lr
 80218fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021900:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021902:	4641      	mov	r1, r8
 8021904:	f7ff fdb4 	bl	8021470 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8021908:	e770      	b.n	80217ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802190a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802190c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802190e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021912:	1430      	asrs	r0, r6, #16
 8021914:	1423      	asrs	r3, r4, #16
 8021916:	fb01 3000 	mla	r0, r1, r0, r3
 802191a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802191c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8021920:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8021924:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021928:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802192c:	8858      	ldrh	r0, [r3, #2]
 802192e:	f1be 0f00 	cmp.w	lr, #0
 8021932:	d00b      	beq.n	802194c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8021934:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021938:	3901      	subs	r1, #1
 802193a:	0049      	lsls	r1, r1, #1
 802193c:	3102      	adds	r1, #2
 802193e:	eb03 0b01 	add.w	fp, r3, r1
 8021942:	5a5b      	ldrh	r3, [r3, r1]
 8021944:	930e      	str	r3, [sp, #56]	; 0x38
 8021946:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802194a:	930f      	str	r3, [sp, #60]	; 0x3c
 802194c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8021950:	fb12 f30e 	smulbb	r3, r2, lr
 8021954:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021958:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802195c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8021960:	10db      	asrs	r3, r3, #3
 8021962:	ea41 010c 	orr.w	r1, r1, ip
 8021966:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802196a:	f1ce 0c10 	rsb	ip, lr, #16
 802196e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021972:	ebac 0c02 	sub.w	ip, ip, r2
 8021976:	ea4b 0000 	orr.w	r0, fp, r0
 802197a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802197e:	4350      	muls	r0, r2
 8021980:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021982:	9f08      	ldr	r7, [sp, #32]
 8021984:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021988:	fb0c 0c01 	mla	ip, ip, r1, r0
 802198c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021990:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8021994:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021996:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021998:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802199c:	0412      	lsls	r2, r2, #16
 802199e:	ea4b 0101 	orr.w	r1, fp, r1
 80219a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80219aa:	fb03 c101 	mla	r1, r3, r1, ip
 80219ae:	4302      	orrs	r2, r0
 80219b0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80219b4:	fb03 1202 	mla	r2, r3, r2, r1
 80219b8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80219bc:	0952      	lsrs	r2, r2, #5
 80219be:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80219c2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80219c6:	f8b9 2000 	ldrh.w	r2, [r9]
 80219ca:	ea4b 0303 	orr.w	r3, fp, r3
 80219ce:	b29b      	uxth	r3, r3
 80219d0:	1211      	asrs	r1, r2, #8
 80219d2:	1218      	asrs	r0, r3, #8
 80219d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80219d8:	fb11 f107 	smulbb	r1, r1, r7
 80219dc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80219e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80219e4:	00d2      	lsls	r2, r2, #3
 80219e6:	fb00 100a 	mla	r0, r0, sl, r1
 80219ea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80219ee:	10d9      	asrs	r1, r3, #3
 80219f0:	b2d2      	uxtb	r2, r2
 80219f2:	00db      	lsls	r3, r3, #3
 80219f4:	fb1c fc07 	smulbb	ip, ip, r7
 80219f8:	fb12 f207 	smulbb	r2, r2, r7
 80219fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a00:	b2db      	uxtb	r3, r3
 8021a02:	b280      	uxth	r0, r0
 8021a04:	fb01 c10a 	mla	r1, r1, sl, ip
 8021a08:	fb03 230a 	mla	r3, r3, sl, r2
 8021a0c:	b29b      	uxth	r3, r3
 8021a0e:	b289      	uxth	r1, r1
 8021a10:	1c42      	adds	r2, r0, #1
 8021a12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021a16:	f101 0c01 	add.w	ip, r1, #1
 8021a1a:	1c5a      	adds	r2, r3, #1
 8021a1c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021a20:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021a24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021a26:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021a2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021a2e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021a32:	4310      	orrs	r0, r2
 8021a34:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021a38:	441c      	add	r4, r3
 8021a3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021a3c:	ea40 000c 	orr.w	r0, r0, ip
 8021a40:	f829 0b02 	strh.w	r0, [r9], #2
 8021a44:	441e      	add	r6, r3
 8021a46:	f108 38ff 	add.w	r8, r8, #4294967295
 8021a4a:	e6fc      	b.n	8021846 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8021a4c:	b013      	add	sp, #76	; 0x4c
 8021a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8021a52:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021a56:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8021a5a:	fb0e 4703 	mla	r7, lr, r3, r4
 8021a5e:	f1be 0f00 	cmp.w	lr, #0
 8021a62:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8021a66:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8021a6a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8021a6e:	8808      	ldrh	r0, [r1, #0]
 8021a70:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8021a74:	db60      	blt.n	8021b38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021a76:	45f1      	cmp	r9, lr
 8021a78:	dd5e      	ble.n	8021b38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021a7a:	2c00      	cmp	r4, #0
 8021a7c:	db5a      	blt.n	8021b34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021a7e:	42a3      	cmp	r3, r4
 8021a80:	dd58      	ble.n	8021b34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021a82:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8021a86:	1c62      	adds	r2, r4, #1
 8021a88:	d459      	bmi.n	8021b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021a8a:	4293      	cmp	r3, r2
 8021a8c:	dd57      	ble.n	8021b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021a8e:	2d00      	cmp	r5, #0
 8021a90:	d055      	beq.n	8021b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021a92:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8021a96:	f11e 0e01 	adds.w	lr, lr, #1
 8021a9a:	d454      	bmi.n	8021b46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021a9c:	45f1      	cmp	r9, lr
 8021a9e:	dd52      	ble.n	8021b46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021aa0:	2e00      	cmp	r6, #0
 8021aa2:	d050      	beq.n	8021b46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021aa4:	2c00      	cmp	r4, #0
 8021aa6:	db4c      	blt.n	8021b42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021aa8:	42a3      	cmp	r3, r4
 8021aaa:	dd4a      	ble.n	8021b42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021aac:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8021ab0:	3401      	adds	r4, #1
 8021ab2:	d405      	bmi.n	8021ac0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021ab4:	42a3      	cmp	r3, r4
 8021ab6:	dd03      	ble.n	8021ac0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021ab8:	b115      	cbz	r5, 8021ac0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021aba:	3301      	adds	r3, #1
 8021abc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8021ac0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021ac4:	fb15 f406 	smulbb	r4, r5, r6
 8021ac8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021acc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021ad0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021ad4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021ad8:	ea43 0c0c 	orr.w	ip, r3, ip
 8021adc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021ae0:	f1c6 0310 	rsb	r3, r6, #16
 8021ae4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021ae8:	1b5b      	subs	r3, r3, r5
 8021aea:	ea4e 0707 	orr.w	r7, lr, r7
 8021aee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8021af2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021af6:	437d      	muls	r5, r7
 8021af8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021afc:	0403      	lsls	r3, r0, #16
 8021afe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b02:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b06:	4318      	orrs	r0, r3
 8021b08:	0413      	lsls	r3, r2, #16
 8021b0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b12:	4313      	orrs	r3, r2
 8021b14:	fb04 c000 	mla	r0, r4, r0, ip
 8021b18:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021b1c:	fb06 0003 	mla	r0, r6, r3, r0
 8021b20:	0d43      	lsrs	r3, r0, #21
 8021b22:	0940      	lsrs	r0, r0, #5
 8021b24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b28:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b2c:	4318      	orrs	r0, r3
 8021b2e:	8008      	strh	r0, [r1, #0]
 8021b30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021b34:	4684      	mov	ip, r0
 8021b36:	e7a6      	b.n	8021a86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8021b38:	4607      	mov	r7, r0
 8021b3a:	4684      	mov	ip, r0
 8021b3c:	e7ab      	b.n	8021a96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021b3e:	4607      	mov	r7, r0
 8021b40:	e7a9      	b.n	8021a96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021b42:	4602      	mov	r2, r0
 8021b44:	e7b4      	b.n	8021ab0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8021b46:	4602      	mov	r2, r0
 8021b48:	e7ba      	b.n	8021ac0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08021b4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b4e:	b08f      	sub	sp, #60	; 0x3c
 8021b50:	461d      	mov	r5, r3
 8021b52:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021b54:	920c      	str	r2, [sp, #48]	; 0x30
 8021b56:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8021b5a:	9107      	str	r1, [sp, #28]
 8021b5c:	6859      	ldr	r1, [r3, #4]
 8021b5e:	681b      	ldr	r3, [r3, #0]
 8021b60:	900d      	str	r0, [sp, #52]	; 0x34
 8021b62:	fb01 2707 	mla	r7, r1, r7, r2
 8021b66:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8021b6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b6c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8021b70:	f8d3 8000 	ldr.w	r8, [r3]
 8021b74:	9b07      	ldr	r3, [sp, #28]
 8021b76:	2b00      	cmp	r3, #0
 8021b78:	dc03      	bgt.n	8021b82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021b7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b7c:	2b00      	cmp	r3, #0
 8021b7e:	f340 8181 	ble.w	8021e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021b82:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021b8c:	1e48      	subs	r0, r1, #1
 8021b8e:	f102 3cff 	add.w	ip, r2, #4294967295
 8021b92:	2d00      	cmp	r5, #0
 8021b94:	f340 809b 	ble.w	8021cce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021b98:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021b9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021ba0:	d406      	bmi.n	8021bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021ba2:	4586      	cmp	lr, r0
 8021ba4:	da04      	bge.n	8021bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021ba6:	2b00      	cmp	r3, #0
 8021ba8:	db02      	blt.n	8021bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021baa:	4563      	cmp	r3, ip
 8021bac:	f2c0 8090 	blt.w	8021cd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021bb0:	f11e 0e01 	adds.w	lr, lr, #1
 8021bb4:	f100 8084 	bmi.w	8021cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021bb8:	4571      	cmp	r1, lr
 8021bba:	f2c0 8081 	blt.w	8021cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021bbe:	3301      	adds	r3, #1
 8021bc0:	d47e      	bmi.n	8021cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021bc2:	429a      	cmp	r2, r3
 8021bc4:	db7c      	blt.n	8021cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021bc6:	46aa      	mov	sl, r5
 8021bc8:	46b9      	mov	r9, r7
 8021bca:	f1ba 0f00 	cmp.w	sl, #0
 8021bce:	f340 8099 	ble.w	8021d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021bd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bd4:	1421      	asrs	r1, r4, #16
 8021bd6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021bda:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021bde:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021be2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021be6:	f100 80d0 	bmi.w	8021d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021bea:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021bee:	4559      	cmp	r1, fp
 8021bf0:	f280 80cb 	bge.w	8021d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021bf4:	2800      	cmp	r0, #0
 8021bf6:	f2c0 80c8 	blt.w	8021d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021bfa:	f103 3bff 	add.w	fp, r3, #4294967295
 8021bfe:	4558      	cmp	r0, fp
 8021c00:	f280 80c3 	bge.w	8021d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021c04:	fa0f fe8e 	sxth.w	lr, lr
 8021c08:	fb00 110e 	mla	r1, r0, lr, r1
 8021c0c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021c10:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8021c14:	8841      	ldrh	r1, [r0, #2]
 8021c16:	f1bc 0f00 	cmp.w	ip, #0
 8021c1a:	d00b      	beq.n	8021c34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021c1c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8021c20:	3b01      	subs	r3, #1
 8021c22:	005b      	lsls	r3, r3, #1
 8021c24:	3302      	adds	r3, #2
 8021c26:	eb00 0e03 	add.w	lr, r0, r3
 8021c2a:	5ac3      	ldrh	r3, [r0, r3]
 8021c2c:	9308      	str	r3, [sp, #32]
 8021c2e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8021c32:	9309      	str	r3, [sp, #36]	; 0x24
 8021c34:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8021c38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021c3c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021c40:	ea40 000b 	orr.w	r0, r0, fp
 8021c44:	fb12 f30c 	smulbb	r3, r2, ip
 8021c48:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021c4c:	10db      	asrs	r3, r3, #3
 8021c4e:	f1cc 0e10 	rsb	lr, ip, #16
 8021c52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021c56:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021c5a:	ebae 0e02 	sub.w	lr, lr, r2
 8021c5e:	ea4b 0101 	orr.w	r1, fp, r1
 8021c62:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021c66:	4351      	muls	r1, r2
 8021c68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021c6a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021c6e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021c72:	0410      	lsls	r0, r2, #16
 8021c74:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021c78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c7c:	4310      	orrs	r0, r2
 8021c7e:	9a08      	ldr	r2, [sp, #32]
 8021c80:	9908      	ldr	r1, [sp, #32]
 8021c82:	0412      	lsls	r2, r2, #16
 8021c84:	fb03 e000 	mla	r0, r3, r0, lr
 8021c88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021c8c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021c90:	ea42 020e 	orr.w	r2, r2, lr
 8021c94:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021c98:	fb03 0302 	mla	r3, r3, r2, r0
 8021c9c:	0d5a      	lsrs	r2, r3, #21
 8021c9e:	095b      	lsrs	r3, r3, #5
 8021ca0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ca4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021ca8:	4313      	orrs	r3, r2
 8021caa:	f8a9 3000 	strh.w	r3, [r9]
 8021cae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021cb0:	441c      	add	r4, r3
 8021cb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021cb4:	f109 0902 	add.w	r9, r9, #2
 8021cb8:	441e      	add	r6, r3
 8021cba:	f10a 3aff 	add.w	sl, sl, #4294967295
 8021cbe:	e784      	b.n	8021bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021cc0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021cc2:	441c      	add	r4, r3
 8021cc4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021cc6:	3d01      	subs	r5, #1
 8021cc8:	441e      	add	r6, r3
 8021cca:	3702      	adds	r7, #2
 8021ccc:	e761      	b.n	8021b92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021cce:	d01d      	beq.n	8021d0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021cd0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021cd2:	1e6b      	subs	r3, r5, #1
 8021cd4:	fb00 4003 	mla	r0, r0, r3, r4
 8021cd8:	1400      	asrs	r0, r0, #16
 8021cda:	f53f af74 	bmi.w	8021bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021cde:	3901      	subs	r1, #1
 8021ce0:	4288      	cmp	r0, r1
 8021ce2:	f6bf af70 	bge.w	8021bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021ce6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021ce8:	fb01 6303 	mla	r3, r1, r3, r6
 8021cec:	141b      	asrs	r3, r3, #16
 8021cee:	f53f af6a 	bmi.w	8021bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021cf2:	3a01      	subs	r2, #1
 8021cf4:	4293      	cmp	r3, r2
 8021cf6:	f6bf af66 	bge.w	8021bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021cfa:	46a9      	mov	r9, r5
 8021cfc:	46ba      	mov	sl, r7
 8021cfe:	f1b9 0f00 	cmp.w	r9, #0
 8021d02:	dc5a      	bgt.n	8021dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021d04:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021d08:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021d0c:	9b07      	ldr	r3, [sp, #28]
 8021d0e:	2b00      	cmp	r3, #0
 8021d10:	f340 80b8 	ble.w	8021e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021d14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d20:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d2e:	eef0 6a62 	vmov.f32	s13, s5
 8021d32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021d3e:	ee16 4a90 	vmov	r4, s13
 8021d42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021d46:	eef0 6a43 	vmov.f32	s13, s6
 8021d4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021d4e:	ee12 2a90 	vmov	r2, s5
 8021d52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021d56:	fb92 f3f3 	sdiv	r3, r2, r3
 8021d5a:	ee13 2a10 	vmov	r2, s6
 8021d5e:	931b      	str	r3, [sp, #108]	; 0x6c
 8021d60:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d62:	fb92 f3f3 	sdiv	r3, r2, r3
 8021d66:	931c      	str	r3, [sp, #112]	; 0x70
 8021d68:	9b07      	ldr	r3, [sp, #28]
 8021d6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021d6c:	3b01      	subs	r3, #1
 8021d6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d72:	9307      	str	r3, [sp, #28]
 8021d74:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d76:	ee16 6a90 	vmov	r6, s13
 8021d7a:	bf14      	ite	ne
 8021d7c:	461d      	movne	r5, r3
 8021d7e:	4615      	moveq	r5, r2
 8021d80:	eeb0 3a67 	vmov.f32	s6, s15
 8021d84:	eef0 2a47 	vmov.f32	s5, s14
 8021d88:	e6f4      	b.n	8021b74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8021d8a:	f111 0b01 	adds.w	fp, r1, #1
 8021d8e:	d48e      	bmi.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021d90:	45de      	cmp	lr, fp
 8021d92:	db8c      	blt.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021d94:	f110 0b01 	adds.w	fp, r0, #1
 8021d98:	d489      	bmi.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021d9a:	455b      	cmp	r3, fp
 8021d9c:	db87      	blt.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021d9e:	b21b      	sxth	r3, r3
 8021da0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021da4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021da8:	9300      	str	r3, [sp, #0]
 8021daa:	4642      	mov	r2, r8
 8021dac:	fa0f f38e 	sxth.w	r3, lr
 8021db0:	4649      	mov	r1, r9
 8021db2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021db4:	f7ff fe4d 	bl	8021a52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021db8:	e779      	b.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021dba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021dbc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021dc0:	1420      	asrs	r0, r4, #16
 8021dc2:	1431      	asrs	r1, r6, #16
 8021dc4:	fb03 0101 	mla	r1, r3, r1, r0
 8021dc8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021dcc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021dd0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021dd4:	8841      	ldrh	r1, [r0, #2]
 8021dd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021dda:	f1be 0f00 	cmp.w	lr, #0
 8021dde:	d00b      	beq.n	8021df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021de0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8021de4:	3b01      	subs	r3, #1
 8021de6:	005b      	lsls	r3, r3, #1
 8021de8:	3302      	adds	r3, #2
 8021dea:	eb00 0b03 	add.w	fp, r0, r3
 8021dee:	5ac3      	ldrh	r3, [r0, r3]
 8021df0:	930a      	str	r3, [sp, #40]	; 0x28
 8021df2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021df6:	930b      	str	r3, [sp, #44]	; 0x2c
 8021df8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021dfc:	fb12 f30e 	smulbb	r3, r2, lr
 8021e00:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021e04:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021e08:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e0c:	10db      	asrs	r3, r3, #3
 8021e0e:	ea40 000c 	orr.w	r0, r0, ip
 8021e12:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e16:	f1ce 0c10 	rsb	ip, lr, #16
 8021e1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e1e:	ebac 0c02 	sub.w	ip, ip, r2
 8021e22:	ea4b 0101 	orr.w	r1, fp, r1
 8021e26:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021e2a:	4351      	muls	r1, r2
 8021e2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021e2e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021e32:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021e36:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021e3a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8021e3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021e40:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021e42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e46:	0412      	lsls	r2, r2, #16
 8021e48:	ea4b 0000 	orr.w	r0, fp, r0
 8021e4c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021e50:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8021e54:	fb03 c000 	mla	r0, r3, r0, ip
 8021e58:	ea42 0b0b 	orr.w	fp, r2, fp
 8021e5c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021e60:	fb03 000b 	mla	r0, r3, fp, r0
 8021e64:	0d43      	lsrs	r3, r0, #21
 8021e66:	0940      	lsrs	r0, r0, #5
 8021e68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e6c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e70:	4318      	orrs	r0, r3
 8021e72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021e74:	f82a 0b02 	strh.w	r0, [sl], #2
 8021e78:	441c      	add	r4, r3
 8021e7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e7c:	f109 39ff 	add.w	r9, r9, #4294967295
 8021e80:	441e      	add	r6, r3
 8021e82:	e73c      	b.n	8021cfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021e84:	b00f      	add	sp, #60	; 0x3c
 8021e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021e8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e8e:	b085      	sub	sp, #20
 8021e90:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8021e94:	9102      	str	r1, [sp, #8]
 8021e96:	2c00      	cmp	r4, #0
 8021e98:	fb04 7103 	mla	r1, r4, r3, r7
 8021e9c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8021ea0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021ea4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021ea8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021eac:	f2c0 811b 	blt.w	80220e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021eb0:	45a6      	cmp	lr, r4
 8021eb2:	f340 8118 	ble.w	80220e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021eb6:	2f00      	cmp	r7, #0
 8021eb8:	f2c0 8113 	blt.w	80220e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021ebc:	42bb      	cmp	r3, r7
 8021ebe:	f340 8110 	ble.w	80220e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021ec2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021ec6:	1c7a      	adds	r2, r7, #1
 8021ec8:	f100 8110 	bmi.w	80220ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021ecc:	4293      	cmp	r3, r2
 8021ece:	f340 810d 	ble.w	80220ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021ed2:	2e00      	cmp	r6, #0
 8021ed4:	f000 810c 	beq.w	80220f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021ed8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021edc:	3401      	adds	r4, #1
 8021ede:	f100 810b 	bmi.w	80220f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021ee2:	45a6      	cmp	lr, r4
 8021ee4:	f340 8108 	ble.w	80220f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021ee8:	2800      	cmp	r0, #0
 8021eea:	f000 8108 	beq.w	80220fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8021eee:	2f00      	cmp	r7, #0
 8021ef0:	f2c0 8100 	blt.w	80220f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021ef4:	42bb      	cmp	r3, r7
 8021ef6:	f340 80fd 	ble.w	80220f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021efa:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021efe:	3701      	adds	r7, #1
 8021f00:	f100 8100 	bmi.w	8022104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021f04:	42bb      	cmp	r3, r7
 8021f06:	f340 80fd 	ble.w	8022104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021f0a:	2e00      	cmp	r6, #0
 8021f0c:	f000 80fc 	beq.w	8022108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8021f10:	3301      	adds	r3, #1
 8021f12:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021f16:	b2b6      	uxth	r6, r6
 8021f18:	b280      	uxth	r0, r0
 8021f1a:	fb00 fe06 	mul.w	lr, r0, r6
 8021f1e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021f22:	0136      	lsls	r6, r6, #4
 8021f24:	eba6 070e 	sub.w	r7, r6, lr
 8021f28:	b280      	uxth	r0, r0
 8021f2a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021f2e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021f32:	b2bf      	uxth	r7, r7
 8021f34:	1a1b      	subs	r3, r3, r0
 8021f36:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021f3a:	b29b      	uxth	r3, r3
 8021f3c:	fb0a f607 	mul.w	r6, sl, r7
 8021f40:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021f44:	fb0b 6603 	mla	r6, fp, r3, r6
 8021f48:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021f4c:	fb00 6609 	mla	r6, r0, r9, r6
 8021f50:	fb0e 6608 	mla	r6, lr, r8, r6
 8021f54:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021f58:	9600      	str	r6, [sp, #0]
 8021f5a:	2e00      	cmp	r6, #0
 8021f5c:	f000 80be 	beq.w	80220dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8021f60:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021f64:	fb0b fc0c 	mul.w	ip, fp, ip
 8021f68:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021f6c:	fb0b f505 	mul.w	r5, fp, r5
 8021f70:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021f74:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021f78:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021f7c:	44dc      	add	ip, fp
 8021f7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f82:	9501      	str	r5, [sp, #4]
 8021f84:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021f88:	9503      	str	r5, [sp, #12]
 8021f8a:	9d01      	ldr	r5, [sp, #4]
 8021f8c:	9e02      	ldr	r6, [sp, #8]
 8021f8e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021f92:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021f96:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021f9a:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f9e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021fa2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021fa6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021faa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021fae:	4465      	add	r5, ip
 8021fb0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021fb4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021fb8:	fb09 fc0c 	mul.w	ip, r9, ip
 8021fbc:	fb09 f904 	mul.w	r9, r9, r4
 8021fc0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021fc4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021fc8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021fcc:	fb08 f404 	mul.w	r4, r8, r4
 8021fd0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021fd4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021fd8:	fb08 f802 	mul.w	r8, r8, r2
 8021fdc:	fb0a fa01 	mul.w	sl, sl, r1
 8021fe0:	0a22      	lsrs	r2, r4, #8
 8021fe2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021fe6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021fea:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021fee:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021ff2:	4414      	add	r4, r2
 8021ff4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021ff8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021ffc:	0a2d      	lsrs	r5, r5, #8
 8021ffe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022002:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022006:	9a03      	ldr	r2, [sp, #12]
 8022008:	8836      	ldrh	r6, [r6, #0]
 802200a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802200e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022012:	437d      	muls	r5, r7
 8022014:	4461      	add	r1, ip
 8022016:	0a24      	lsrs	r4, r4, #8
 8022018:	fb02 5503 	mla	r5, r2, r3, r5
 802201c:	0a09      	lsrs	r1, r1, #8
 802201e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022022:	fb04 540e 	mla	r4, r4, lr, r5
 8022026:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802202a:	fb01 4100 	mla	r1, r1, r0, r4
 802202e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022032:	0a09      	lsrs	r1, r1, #8
 8022034:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022038:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802203c:	fb07 f70a 	mul.w	r7, r7, sl
 8022040:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022044:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022048:	fb03 7101 	mla	r1, r3, r1, r7
 802204c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022050:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022054:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022058:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802205c:	fb00 e101 	mla	r1, r0, r1, lr
 8022060:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022064:	9a00      	ldr	r2, [sp, #0]
 8022066:	b287      	uxth	r7, r0
 8022068:	437a      	muls	r2, r7
 802206a:	0a09      	lsrs	r1, r1, #8
 802206c:	1c53      	adds	r3, r2, #1
 802206e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022072:	4321      	orrs	r1, r4
 8022074:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022078:	1235      	asrs	r5, r6, #8
 802207a:	0c0a      	lsrs	r2, r1, #16
 802207c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022080:	b2db      	uxtb	r3, r3
 8022082:	fb12 f207 	smulbb	r2, r2, r7
 8022086:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802208a:	fb05 2503 	mla	r5, r5, r3, r2
 802208e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022092:	10f2      	asrs	r2, r6, #3
 8022094:	b2c8      	uxtb	r0, r1
 8022096:	00f6      	lsls	r6, r6, #3
 8022098:	fb14 f407 	smulbb	r4, r4, r7
 802209c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80220a0:	b2f6      	uxtb	r6, r6
 80220a2:	fb10 f007 	smulbb	r0, r0, r7
 80220a6:	fb02 4203 	mla	r2, r2, r3, r4
 80220aa:	b2ad      	uxth	r5, r5
 80220ac:	fb06 0303 	mla	r3, r6, r3, r0
 80220b0:	b299      	uxth	r1, r3
 80220b2:	b294      	uxth	r4, r2
 80220b4:	1c6b      	adds	r3, r5, #1
 80220b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80220ba:	1c62      	adds	r2, r4, #1
 80220bc:	1c4b      	adds	r3, r1, #1
 80220be:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80220c2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80220c6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80220ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80220ce:	0952      	lsrs	r2, r2, #5
 80220d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80220d4:	432b      	orrs	r3, r5
 80220d6:	4313      	orrs	r3, r2
 80220d8:	9a02      	ldr	r2, [sp, #8]
 80220da:	8013      	strh	r3, [r2, #0]
 80220dc:	b005      	add	sp, #20
 80220de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220e2:	2500      	movs	r5, #0
 80220e4:	e6ef      	b.n	8021ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80220e6:	2100      	movs	r1, #0
 80220e8:	460d      	mov	r5, r1
 80220ea:	e6f7      	b.n	8021edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80220ec:	2100      	movs	r1, #0
 80220ee:	e6f5      	b.n	8021edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80220f0:	4631      	mov	r1, r6
 80220f2:	e6f3      	b.n	8021edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80220f4:	2400      	movs	r4, #0
 80220f6:	e702      	b.n	8021efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80220f8:	2200      	movs	r2, #0
 80220fa:	4614      	mov	r4, r2
 80220fc:	e70b      	b.n	8021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80220fe:	4602      	mov	r2, r0
 8022100:	4604      	mov	r4, r0
 8022102:	e708      	b.n	8021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022104:	2200      	movs	r2, #0
 8022106:	e706      	b.n	8021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022108:	4632      	mov	r2, r6
 802210a:	e704      	b.n	8021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802210c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802210c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022110:	b09d      	sub	sp, #116	; 0x74
 8022112:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8022116:	9219      	str	r2, [sp, #100]	; 0x64
 8022118:	9307      	str	r3, [sp, #28]
 802211a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802211c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022120:	931a      	str	r3, [sp, #104]	; 0x68
 8022122:	9117      	str	r1, [sp, #92]	; 0x5c
 8022124:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022128:	901b      	str	r0, [sp, #108]	; 0x6c
 802212a:	6850      	ldr	r0, [r2, #4]
 802212c:	6812      	ldr	r2, [r2, #0]
 802212e:	fb00 1303 	mla	r3, r0, r3, r1
 8022132:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022136:	930a      	str	r3, [sp, #40]	; 0x28
 8022138:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802213a:	681b      	ldr	r3, [r3, #0]
 802213c:	9310      	str	r3, [sp, #64]	; 0x40
 802213e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8022142:	930b      	str	r3, [sp, #44]	; 0x2c
 8022144:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022146:	2b00      	cmp	r3, #0
 8022148:	dc03      	bgt.n	8022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802214a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802214c:	2b00      	cmp	r3, #0
 802214e:	f340 8375 	ble.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022152:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022154:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022158:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802215c:	1e48      	subs	r0, r1, #1
 802215e:	1e57      	subs	r7, r2, #1
 8022160:	9b07      	ldr	r3, [sp, #28]
 8022162:	2b00      	cmp	r3, #0
 8022164:	f340 818e 	ble.w	8022484 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022168:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802216c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022170:	d406      	bmi.n	8022180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022172:	4584      	cmp	ip, r0
 8022174:	da04      	bge.n	8022180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022176:	2b00      	cmp	r3, #0
 8022178:	db02      	blt.n	8022180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802217a:	42bb      	cmp	r3, r7
 802217c:	f2c0 8183 	blt.w	8022486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022180:	f11c 0c01 	adds.w	ip, ip, #1
 8022184:	f100 8173 	bmi.w	802246e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022188:	4561      	cmp	r1, ip
 802218a:	f2c0 8170 	blt.w	802246e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802218e:	3301      	adds	r3, #1
 8022190:	f100 816d 	bmi.w	802246e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022194:	429a      	cmp	r2, r3
 8022196:	f2c0 816a 	blt.w	802246e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802219a:	9b07      	ldr	r3, [sp, #28]
 802219c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802219e:	9318      	str	r3, [sp, #96]	; 0x60
 80221a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80221a2:	2b00      	cmp	r3, #0
 80221a4:	f340 818c 	ble.w	80224c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80221a8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80221aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80221ac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80221b0:	689b      	ldr	r3, [r3, #8]
 80221b2:	1422      	asrs	r2, r4, #16
 80221b4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80221b8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80221bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80221c0:	f100 81cd 	bmi.w	802255e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80221c4:	f103 38ff 	add.w	r8, r3, #4294967295
 80221c8:	4542      	cmp	r2, r8
 80221ca:	f280 81c8 	bge.w	802255e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80221ce:	f1bc 0f00 	cmp.w	ip, #0
 80221d2:	f2c0 81c4 	blt.w	802255e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80221d6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80221da:	45c4      	cmp	ip, r8
 80221dc:	f280 81bf 	bge.w	802255e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80221e0:	b21b      	sxth	r3, r3
 80221e2:	fb0c 2203 	mla	r2, ip, r3, r2
 80221e6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80221e8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80221ec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80221f0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80221f4:	2800      	cmp	r0, #0
 80221f6:	f000 81a9 	beq.w	802254c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80221fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80221fe:	950c      	str	r5, [sp, #48]	; 0x30
 8022200:	0e2d      	lsrs	r5, r5, #24
 8022202:	9513      	str	r5, [sp, #76]	; 0x4c
 8022204:	b181      	cbz	r1, 8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022206:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802220a:	3b01      	subs	r3, #1
 802220c:	009b      	lsls	r3, r3, #2
 802220e:	3304      	adds	r3, #4
 8022210:	eb08 0c03 	add.w	ip, r8, r3
 8022214:	f858 3003 	ldr.w	r3, [r8, r3]
 8022218:	9308      	str	r3, [sp, #32]
 802221a:	0e1b      	lsrs	r3, r3, #24
 802221c:	9311      	str	r3, [sp, #68]	; 0x44
 802221e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022222:	930d      	str	r3, [sp, #52]	; 0x34
 8022224:	0e1b      	lsrs	r3, r3, #24
 8022226:	9314      	str	r3, [sp, #80]	; 0x50
 8022228:	b280      	uxth	r0, r0
 802222a:	b289      	uxth	r1, r1
 802222c:	fb00 f901 	mul.w	r9, r0, r1
 8022230:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022234:	0100      	lsls	r0, r0, #4
 8022236:	eba0 0809 	sub.w	r8, r0, r9
 802223a:	b289      	uxth	r1, r1
 802223c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022240:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022242:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022244:	fa1f f888 	uxth.w	r8, r8
 8022248:	1a5b      	subs	r3, r3, r1
 802224a:	b29b      	uxth	r3, r3
 802224c:	fb08 f000 	mul.w	r0, r8, r0
 8022250:	fb03 000e 	mla	r0, r3, lr, r0
 8022254:	fb01 0005 	mla	r0, r1, r5, r0
 8022258:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802225a:	fb09 0005 	mla	r0, r9, r5, r0
 802225e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022262:	2800      	cmp	r0, #0
 8022264:	f000 80fa 	beq.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022268:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802226c:	d01b      	beq.n	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802226e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022272:	fb0e fa0a 	mul.w	sl, lr, sl
 8022276:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802227a:	fb0e fe02 	mul.w	lr, lr, r2
 802227e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022282:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022286:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802228a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802228e:	4452      	add	r2, sl
 8022290:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022294:	0a12      	lsrs	r2, r2, #8
 8022296:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802229a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802229e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80222a2:	ea42 020c 	orr.w	r2, r2, ip
 80222a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80222a8:	2dff      	cmp	r5, #255	; 0xff
 80222aa:	d021      	beq.n	80222f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80222ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80222ae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80222b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80222b4:	fb05 fb0b 	mul.w	fp, r5, fp
 80222b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80222ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80222be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80222c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80222c4:	fb05 fa0a 	mul.w	sl, r5, sl
 80222c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80222cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80222d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80222d4:	44de      	add	lr, fp
 80222d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80222da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80222de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80222e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80222ea:	ea4e 050a 	orr.w	r5, lr, sl
 80222ee:	950c      	str	r5, [sp, #48]	; 0x30
 80222f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80222f2:	2dff      	cmp	r5, #255	; 0xff
 80222f4:	d021      	beq.n	802233a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80222f6:	9d08      	ldr	r5, [sp, #32]
 80222f8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80222fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80222fe:	fb05 fb0b 	mul.w	fp, r5, fp
 8022302:	9d08      	ldr	r5, [sp, #32]
 8022304:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022308:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802230a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802230e:	fb05 fa0a 	mul.w	sl, r5, sl
 8022312:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022316:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802231a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802231e:	44de      	add	lr, fp
 8022320:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022324:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022328:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802232c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022330:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022334:	ea4e 050a 	orr.w	r5, lr, sl
 8022338:	9508      	str	r5, [sp, #32]
 802233a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802233c:	2dff      	cmp	r5, #255	; 0xff
 802233e:	d021      	beq.n	8022384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8022340:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022342:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022346:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022348:	fb05 fb0b 	mul.w	fp, r5, fp
 802234c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802234e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022352:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022354:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022358:	fb05 fa0a 	mul.w	sl, r5, sl
 802235c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022360:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022364:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022368:	44de      	add	lr, fp
 802236a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802236e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022372:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022376:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802237a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802237e:	ea4e 050a 	orr.w	r5, lr, sl
 8022382:	950d      	str	r5, [sp, #52]	; 0x34
 8022384:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022386:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802238a:	9d08      	ldr	r5, [sp, #32]
 802238c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022390:	fb08 fc0c 	mul.w	ip, r8, ip
 8022394:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022398:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802239c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802239e:	fb01 cc0e 	mla	ip, r1, lr, ip
 80223a2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80223a6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80223a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80223ac:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80223b0:	fb08 f80e 	mul.w	r8, r8, lr
 80223b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80223b8:	fb03 8202 	mla	r2, r3, r2, r8
 80223bc:	9b08      	ldr	r3, [sp, #32]
 80223be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80223c0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80223c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80223c6:	fb01 220a 	mla	r2, r1, sl, r2
 80223ca:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80223ce:	fb09 2901 	mla	r9, r9, r1, r2
 80223d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80223d4:	883b      	ldrh	r3, [r7, #0]
 80223d6:	4342      	muls	r2, r0
 80223d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223e0:	1c50      	adds	r0, r2, #1
 80223e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223e6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80223ea:	ea4c 0c09 	orr.w	ip, ip, r9
 80223ee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80223f2:	1219      	asrs	r1, r3, #8
 80223f4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80223f8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80223fc:	b2c0      	uxtb	r0, r0
 80223fe:	fb12 f205 	smulbb	r2, r2, r5
 8022402:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022406:	fb01 2100 	mla	r1, r1, r0, r2
 802240a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802240e:	10da      	asrs	r2, r3, #3
 8022410:	fa5f fc8c 	uxtb.w	ip, ip
 8022414:	00db      	lsls	r3, r3, #3
 8022416:	fb1c fc05 	smulbb	ip, ip, r5
 802241a:	b2db      	uxtb	r3, r3
 802241c:	b289      	uxth	r1, r1
 802241e:	fb03 c300 	mla	r3, r3, r0, ip
 8022422:	fa1f fc83 	uxth.w	ip, r3
 8022426:	1c4b      	adds	r3, r1, #1
 8022428:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802242c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022430:	fb1e fe05 	smulbb	lr, lr, r5
 8022434:	f10c 0301 	add.w	r3, ip, #1
 8022438:	fb02 e200 	mla	r2, r2, r0, lr
 802243c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8022440:	b292      	uxth	r2, r2
 8022442:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022446:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802244a:	430b      	orrs	r3, r1
 802244c:	1c51      	adds	r1, r2, #1
 802244e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022452:	0952      	lsrs	r2, r2, #5
 8022454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022458:	4313      	orrs	r3, r2
 802245a:	803b      	strh	r3, [r7, #0]
 802245c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802245e:	441c      	add	r4, r3
 8022460:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022462:	441e      	add	r6, r3
 8022464:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022466:	3b01      	subs	r3, #1
 8022468:	3702      	adds	r7, #2
 802246a:	9318      	str	r3, [sp, #96]	; 0x60
 802246c:	e698      	b.n	80221a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802246e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022470:	441c      	add	r4, r3
 8022472:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022474:	441e      	add	r6, r3
 8022476:	9b07      	ldr	r3, [sp, #28]
 8022478:	3b01      	subs	r3, #1
 802247a:	9307      	str	r3, [sp, #28]
 802247c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802247e:	3302      	adds	r3, #2
 8022480:	930a      	str	r3, [sp, #40]	; 0x28
 8022482:	e66d      	b.n	8022160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8022484:	d023      	beq.n	80224ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022486:	9b07      	ldr	r3, [sp, #28]
 8022488:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802248a:	3b01      	subs	r3, #1
 802248c:	fb00 4003 	mla	r0, r0, r3, r4
 8022490:	1400      	asrs	r0, r0, #16
 8022492:	f53f ae82 	bmi.w	802219a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022496:	3901      	subs	r1, #1
 8022498:	4288      	cmp	r0, r1
 802249a:	f6bf ae7e 	bge.w	802219a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802249e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80224a0:	fb01 6303 	mla	r3, r1, r3, r6
 80224a4:	141b      	asrs	r3, r3, #16
 80224a6:	f53f ae78 	bmi.w	802219a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80224aa:	3a01      	subs	r2, #1
 80224ac:	4293      	cmp	r3, r2
 80224ae:	f6bf ae74 	bge.w	802219a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80224b2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80224b6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80224ba:	f1bb 0f00 	cmp.w	fp, #0
 80224be:	dc6c      	bgt.n	802259a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80224c0:	9b07      	ldr	r3, [sp, #28]
 80224c2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80224c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80224c8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80224cc:	930a      	str	r3, [sp, #40]	; 0x28
 80224ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80224d0:	2b00      	cmp	r3, #0
 80224d2:	f340 81b3 	ble.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80224d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80224da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80224de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80224e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80224e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80224e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80224ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80224f0:	eef0 6a62 	vmov.f32	s13, s5
 80224f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80224f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80224fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022500:	ee16 4a90 	vmov	r4, s13
 8022504:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022508:	eef0 6a43 	vmov.f32	s13, s6
 802250c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022510:	ee12 2a90 	vmov	r2, s5
 8022514:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022518:	fb92 f3f3 	sdiv	r3, r2, r3
 802251c:	ee13 2a10 	vmov	r2, s6
 8022520:	9329      	str	r3, [sp, #164]	; 0xa4
 8022522:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022524:	fb92 f3f3 	sdiv	r3, r2, r3
 8022528:	932a      	str	r3, [sp, #168]	; 0xa8
 802252a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802252c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802252e:	3b01      	subs	r3, #1
 8022530:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022534:	9317      	str	r3, [sp, #92]	; 0x5c
 8022536:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022538:	bf08      	it	eq
 802253a:	4613      	moveq	r3, r2
 802253c:	ee16 6a90 	vmov	r6, s13
 8022540:	9307      	str	r3, [sp, #28]
 8022542:	eeb0 3a67 	vmov.f32	s6, s15
 8022546:	eef0 2a47 	vmov.f32	s5, s14
 802254a:	e5fb      	b.n	8022144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802254c:	2900      	cmp	r1, #0
 802254e:	f43f ae6b 	beq.w	8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022552:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022556:	9308      	str	r3, [sp, #32]
 8022558:	0e1b      	lsrs	r3, r3, #24
 802255a:	9311      	str	r3, [sp, #68]	; 0x44
 802255c:	e664      	b.n	8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802255e:	f112 0801 	adds.w	r8, r2, #1
 8022562:	f53f af7b 	bmi.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022566:	4543      	cmp	r3, r8
 8022568:	f6ff af78 	blt.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802256c:	f11c 0801 	adds.w	r8, ip, #1
 8022570:	f53f af74 	bmi.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022574:	45c6      	cmp	lr, r8
 8022576:	f6ff af71 	blt.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802257a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802257c:	9201      	str	r2, [sp, #4]
 802257e:	fa0f f28e 	sxth.w	r2, lr
 8022582:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8022586:	e9cd c002 	strd	ip, r0, [sp, #8]
 802258a:	9200      	str	r2, [sp, #0]
 802258c:	b21b      	sxth	r3, r3
 802258e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022590:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022592:	4639      	mov	r1, r7
 8022594:	f7ff fc79 	bl	8021e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022598:	e760      	b.n	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802259a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802259c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802259e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80225a2:	1427      	asrs	r7, r4, #16
 80225a4:	1433      	asrs	r3, r6, #16
 80225a6:	fb01 7303 	mla	r3, r1, r3, r7
 80225aa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80225ae:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80225b2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80225b6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80225ba:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80225be:	2a00      	cmp	r2, #0
 80225c0:	f000 8133 	beq.w	802282a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80225c4:	687d      	ldr	r5, [r7, #4]
 80225c6:	950e      	str	r5, [sp, #56]	; 0x38
 80225c8:	0e2d      	lsrs	r5, r5, #24
 80225ca:	9515      	str	r5, [sp, #84]	; 0x54
 80225cc:	b178      	cbz	r0, 80225ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80225ce:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80225d2:	3901      	subs	r1, #1
 80225d4:	0089      	lsls	r1, r1, #2
 80225d6:	3104      	adds	r1, #4
 80225d8:	eb07 0e01 	add.w	lr, r7, r1
 80225dc:	5879      	ldr	r1, [r7, r1]
 80225de:	9109      	str	r1, [sp, #36]	; 0x24
 80225e0:	0e09      	lsrs	r1, r1, #24
 80225e2:	9112      	str	r1, [sp, #72]	; 0x48
 80225e4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80225e8:	910f      	str	r1, [sp, #60]	; 0x3c
 80225ea:	0e09      	lsrs	r1, r1, #24
 80225ec:	9116      	str	r1, [sp, #88]	; 0x58
 80225ee:	b292      	uxth	r2, r2
 80225f0:	b280      	uxth	r0, r0
 80225f2:	fb02 f800 	mul.w	r8, r2, r0
 80225f6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80225fa:	0112      	lsls	r2, r2, #4
 80225fc:	eba2 0e08 	sub.w	lr, r2, r8
 8022600:	b280      	uxth	r0, r0
 8022602:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022606:	9915      	ldr	r1, [sp, #84]	; 0x54
 8022608:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802260a:	fa1f fe8e 	uxth.w	lr, lr
 802260e:	1a12      	subs	r2, r2, r0
 8022610:	b292      	uxth	r2, r2
 8022612:	fb0e f101 	mul.w	r1, lr, r1
 8022616:	fb02 110c 	mla	r1, r2, ip, r1
 802261a:	fb00 1105 	mla	r1, r0, r5, r1
 802261e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022620:	fb08 1105 	mla	r1, r8, r5, r1
 8022624:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022628:	2900      	cmp	r1, #0
 802262a:	f000 80f5 	beq.w	8022818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802262e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022632:	d019      	beq.n	8022668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8022634:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022638:	fb0c fa0a 	mul.w	sl, ip, sl
 802263c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022640:	fb0c fc03 	mul.w	ip, ip, r3
 8022644:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022648:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802264c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022650:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022654:	4453      	add	r3, sl
 8022656:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802265a:	0a1b      	lsrs	r3, r3, #8
 802265c:	0a3f      	lsrs	r7, r7, #8
 802265e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022662:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022666:	433b      	orrs	r3, r7
 8022668:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802266a:	2dff      	cmp	r5, #255	; 0xff
 802266c:	d020      	beq.n	80226b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802266e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022670:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022674:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022676:	436f      	muls	r7, r5
 8022678:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802267a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802267e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022680:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022684:	fb05 fa0a 	mul.w	sl, r5, sl
 8022688:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802268c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022690:	44bc      	add	ip, r7
 8022692:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022696:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802269a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802269e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226aa:	ea4c 050a 	orr.w	r5, ip, sl
 80226ae:	950e      	str	r5, [sp, #56]	; 0x38
 80226b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80226b2:	2dff      	cmp	r5, #255	; 0xff
 80226b4:	d020      	beq.n	80226f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80226b6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80226b8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80226bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80226be:	436f      	muls	r7, r5
 80226c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80226c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80226c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80226c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80226cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80226d0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80226d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226d8:	44bc      	add	ip, r7
 80226da:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80226de:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80226e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80226e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226f2:	ea4c 050a 	orr.w	r5, ip, sl
 80226f6:	9509      	str	r5, [sp, #36]	; 0x24
 80226f8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80226fa:	2dff      	cmp	r5, #255	; 0xff
 80226fc:	d020      	beq.n	8022740 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80226fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022700:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022704:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022706:	436f      	muls	r7, r5
 8022708:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802270a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802270e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022710:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022714:	fb05 fa0a 	mul.w	sl, r5, sl
 8022718:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802271c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022720:	44bc      	add	ip, r7
 8022722:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022726:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802272a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802272e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022736:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802273a:	ea4c 050a 	orr.w	r5, ip, sl
 802273e:	950f      	str	r5, [sp, #60]	; 0x3c
 8022740:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022742:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022746:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022748:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802274c:	fb0e f707 	mul.w	r7, lr, r7
 8022750:	fb02 770c 	mla	r7, r2, ip, r7
 8022754:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022758:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802275a:	fb00 770c 	mla	r7, r0, ip, r7
 802275e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022762:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022764:	fb08 770c 	mla	r7, r8, ip, r7
 8022768:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802276c:	fb0e fe0c 	mul.w	lr, lr, ip
 8022770:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022774:	fb02 e303 	mla	r3, r2, r3, lr
 8022778:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802277a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802277c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022780:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022782:	fb00 330a 	mla	r3, r0, sl, r3
 8022786:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802278a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802278e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022790:	f8b9 0000 	ldrh.w	r0, [r9]
 8022794:	4359      	muls	r1, r3
 8022796:	0a3f      	lsrs	r7, r7, #8
 8022798:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802279c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80227a0:	1c4b      	adds	r3, r1, #1
 80227a2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80227a6:	ea47 070c 	orr.w	r7, r7, ip
 80227aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80227ae:	1202      	asrs	r2, r0, #8
 80227b0:	0c3b      	lsrs	r3, r7, #16
 80227b2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80227b6:	b2c9      	uxtb	r1, r1
 80227b8:	fb13 f305 	smulbb	r3, r3, r5
 80227bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80227c0:	fb02 3201 	mla	r2, r2, r1, r3
 80227c4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80227c8:	10c3      	asrs	r3, r0, #3
 80227ca:	b2ff      	uxtb	r7, r7
 80227cc:	00c0      	lsls	r0, r0, #3
 80227ce:	b2c0      	uxtb	r0, r0
 80227d0:	fb17 f705 	smulbb	r7, r7, r5
 80227d4:	fb00 7001 	mla	r0, r0, r1, r7
 80227d8:	b292      	uxth	r2, r2
 80227da:	fb1c fc05 	smulbb	ip, ip, r5
 80227de:	b280      	uxth	r0, r0
 80227e0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80227e4:	fb03 c301 	mla	r3, r3, r1, ip
 80227e8:	1c51      	adds	r1, r2, #1
 80227ea:	f100 0c01 	add.w	ip, r0, #1
 80227ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80227f2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80227f6:	b29b      	uxth	r3, r3
 80227f8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80227fc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022800:	ea4c 0202 	orr.w	r2, ip, r2
 8022804:	f103 0c01 	add.w	ip, r3, #1
 8022808:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802280c:	095b      	lsrs	r3, r3, #5
 802280e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022812:	431a      	orrs	r2, r3
 8022814:	f8a9 2000 	strh.w	r2, [r9]
 8022818:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802281a:	441c      	add	r4, r3
 802281c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802281e:	f109 0902 	add.w	r9, r9, #2
 8022822:	441e      	add	r6, r3
 8022824:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022828:	e647      	b.n	80224ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802282a:	2800      	cmp	r0, #0
 802282c:	f43f aedf 	beq.w	80225ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022830:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8022834:	9109      	str	r1, [sp, #36]	; 0x24
 8022836:	0e09      	lsrs	r1, r1, #24
 8022838:	9112      	str	r1, [sp, #72]	; 0x48
 802283a:	e6d8      	b.n	80225ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802283c:	b01d      	add	sp, #116	; 0x74
 802283e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8022842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022846:	b085      	sub	sp, #20
 8022848:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802284c:	9102      	str	r1, [sp, #8]
 802284e:	2c00      	cmp	r4, #0
 8022850:	fb04 7103 	mla	r1, r4, r3, r7
 8022854:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022858:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802285c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022860:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022864:	f2c0 810c 	blt.w	8022a80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8022868:	45a6      	cmp	lr, r4
 802286a:	f340 8109 	ble.w	8022a80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802286e:	2f00      	cmp	r7, #0
 8022870:	f2c0 8104 	blt.w	8022a7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8022874:	42bb      	cmp	r3, r7
 8022876:	f340 8101 	ble.w	8022a7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802287a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802287e:	1c7a      	adds	r2, r7, #1
 8022880:	f100 8101 	bmi.w	8022a86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8022884:	4293      	cmp	r3, r2
 8022886:	f340 80fe 	ble.w	8022a86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802288a:	2e00      	cmp	r6, #0
 802288c:	f000 80fd 	beq.w	8022a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8022890:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022894:	3401      	adds	r4, #1
 8022896:	f100 80fc 	bmi.w	8022a92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802289a:	45a6      	cmp	lr, r4
 802289c:	f340 80f9 	ble.w	8022a92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80228a0:	2800      	cmp	r0, #0
 80228a2:	f000 80f9 	beq.w	8022a98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80228a6:	2f00      	cmp	r7, #0
 80228a8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80228ac:	f2c0 80ef 	blt.w	8022a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80228b0:	42bb      	cmp	r3, r7
 80228b2:	f340 80ec 	ble.w	8022a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80228b6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80228ba:	3701      	adds	r7, #1
 80228bc:	f100 80ef 	bmi.w	8022a9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80228c0:	42bb      	cmp	r3, r7
 80228c2:	f340 80ec 	ble.w	8022a9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80228c6:	2e00      	cmp	r6, #0
 80228c8:	f000 80eb 	beq.w	8022aa2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80228cc:	6852      	ldr	r2, [r2, #4]
 80228ce:	b2b6      	uxth	r6, r6
 80228d0:	b280      	uxth	r0, r0
 80228d2:	fb00 fe06 	mul.w	lr, r0, r6
 80228d6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80228da:	0136      	lsls	r6, r6, #4
 80228dc:	eba6 070e 	sub.w	r7, r6, lr
 80228e0:	b280      	uxth	r0, r0
 80228e2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80228e6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80228ea:	b2bf      	uxth	r7, r7
 80228ec:	1a1b      	subs	r3, r3, r0
 80228ee:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80228f2:	b29b      	uxth	r3, r3
 80228f4:	fb07 f60a 	mul.w	r6, r7, sl
 80228f8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80228fc:	fb0b 6603 	mla	r6, fp, r3, r6
 8022900:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022904:	fb00 6609 	mla	r6, r0, r9, r6
 8022908:	fb0e 6608 	mla	r6, lr, r8, r6
 802290c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022910:	9600      	str	r6, [sp, #0]
 8022912:	2e00      	cmp	r6, #0
 8022914:	f000 80af 	beq.w	8022a76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8022918:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802291c:	fb0b fc0c 	mul.w	ip, fp, ip
 8022920:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022924:	fb0b f505 	mul.w	r5, fp, r5
 8022928:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802292c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022930:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022934:	44dc      	add	ip, fp
 8022936:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802293a:	9501      	str	r5, [sp, #4]
 802293c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022940:	9503      	str	r5, [sp, #12]
 8022942:	9d01      	ldr	r5, [sp, #4]
 8022944:	9e02      	ldr	r6, [sp, #8]
 8022946:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802294a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802294e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022952:	fb0a fc0c 	mul.w	ip, sl, ip
 8022956:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802295a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802295e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022962:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022966:	4465      	add	r5, ip
 8022968:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802296c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022970:	fb09 fc0c 	mul.w	ip, r9, ip
 8022974:	fb09 f904 	mul.w	r9, r9, r4
 8022978:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802297c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022980:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022984:	fb08 f404 	mul.w	r4, r8, r4
 8022988:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802298c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022990:	fb08 f802 	mul.w	r8, r8, r2
 8022994:	fb0a fa01 	mul.w	sl, sl, r1
 8022998:	0a22      	lsrs	r2, r4, #8
 802299a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802299e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80229a2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80229a6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80229aa:	4414      	add	r4, r2
 80229ac:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80229b0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80229b4:	0a2d      	lsrs	r5, r5, #8
 80229b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80229ba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80229be:	9a03      	ldr	r2, [sp, #12]
 80229c0:	8836      	ldrh	r6, [r6, #0]
 80229c2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80229c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80229ca:	437d      	muls	r5, r7
 80229cc:	4461      	add	r1, ip
 80229ce:	0a24      	lsrs	r4, r4, #8
 80229d0:	fb02 5503 	mla	r5, r2, r3, r5
 80229d4:	0a09      	lsrs	r1, r1, #8
 80229d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80229da:	fb04 540e 	mla	r4, r4, lr, r5
 80229de:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80229e2:	fb01 4100 	mla	r1, r1, r0, r4
 80229e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80229ea:	0a09      	lsrs	r1, r1, #8
 80229ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80229f0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80229f4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80229f8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80229fc:	fb07 f70a 	mul.w	r7, r7, sl
 8022a00:	fb03 7101 	mla	r1, r3, r1, r7
 8022a04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a08:	9b00      	ldr	r3, [sp, #0]
 8022a0a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022a0e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022a12:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022a16:	fb00 e101 	mla	r1, r0, r1, lr
 8022a1a:	43da      	mvns	r2, r3
 8022a1c:	1233      	asrs	r3, r6, #8
 8022a1e:	b2d2      	uxtb	r2, r2
 8022a20:	10f0      	asrs	r0, r6, #3
 8022a22:	0a09      	lsrs	r1, r1, #8
 8022a24:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022a28:	00f6      	lsls	r6, r6, #3
 8022a2a:	4353      	muls	r3, r2
 8022a2c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022a30:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022a34:	b2f6      	uxtb	r6, r6
 8022a36:	4321      	orrs	r1, r4
 8022a38:	4350      	muls	r0, r2
 8022a3a:	4356      	muls	r6, r2
 8022a3c:	1c5a      	adds	r2, r3, #1
 8022a3e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022a42:	0c0b      	lsrs	r3, r1, #16
 8022a44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a48:	1c42      	adds	r2, r0, #1
 8022a4a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a4e:	0a0a      	lsrs	r2, r1, #8
 8022a50:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022a54:	021b      	lsls	r3, r3, #8
 8022a56:	00d2      	lsls	r2, r2, #3
 8022a58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a5c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022a60:	4313      	orrs	r3, r2
 8022a62:	1c72      	adds	r2, r6, #1
 8022a64:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8022a68:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8022a6c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022a70:	4319      	orrs	r1, r3
 8022a72:	9b02      	ldr	r3, [sp, #8]
 8022a74:	8019      	strh	r1, [r3, #0]
 8022a76:	b005      	add	sp, #20
 8022a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a7c:	2500      	movs	r5, #0
 8022a7e:	e6fe      	b.n	802287e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8022a80:	2100      	movs	r1, #0
 8022a82:	460d      	mov	r5, r1
 8022a84:	e706      	b.n	8022894 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022a86:	2100      	movs	r1, #0
 8022a88:	e704      	b.n	8022894 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022a8a:	4631      	mov	r1, r6
 8022a8c:	e702      	b.n	8022894 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022a8e:	2400      	movs	r4, #0
 8022a90:	e713      	b.n	80228ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8022a92:	2200      	movs	r2, #0
 8022a94:	4614      	mov	r4, r2
 8022a96:	e71a      	b.n	80228ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022a98:	4602      	mov	r2, r0
 8022a9a:	4604      	mov	r4, r0
 8022a9c:	e717      	b.n	80228ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022a9e:	2200      	movs	r2, #0
 8022aa0:	e715      	b.n	80228ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022aa2:	4632      	mov	r2, r6
 8022aa4:	e713      	b.n	80228ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08022aa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022aac:	b09b      	sub	sp, #108	; 0x6c
 8022aae:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022ab2:	9218      	str	r2, [sp, #96]	; 0x60
 8022ab4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022ab6:	9116      	str	r1, [sp, #88]	; 0x58
 8022ab8:	9307      	str	r3, [sp, #28]
 8022aba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022abe:	9019      	str	r0, [sp, #100]	; 0x64
 8022ac0:	6850      	ldr	r0, [r2, #4]
 8022ac2:	6812      	ldr	r2, [r2, #0]
 8022ac4:	fb00 1303 	mla	r3, r0, r3, r1
 8022ac8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022acc:	930a      	str	r3, [sp, #40]	; 0x28
 8022ace:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022ad0:	681b      	ldr	r3, [r3, #0]
 8022ad2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022ad4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022ad6:	2b00      	cmp	r3, #0
 8022ad8:	dc03      	bgt.n	8022ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022ada:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022adc:	2b00      	cmp	r3, #0
 8022ade:	f340 8386 	ble.w	80231ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022ae2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022ae4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ae8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022aec:	1e48      	subs	r0, r1, #1
 8022aee:	1e57      	subs	r7, r2, #1
 8022af0:	9b07      	ldr	r3, [sp, #28]
 8022af2:	2b00      	cmp	r3, #0
 8022af4:	f340 8166 	ble.w	8022dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8022af8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022afc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022b00:	d406      	bmi.n	8022b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b02:	4584      	cmp	ip, r0
 8022b04:	da04      	bge.n	8022b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b06:	2b00      	cmp	r3, #0
 8022b08:	db02      	blt.n	8022b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b0a:	42bb      	cmp	r3, r7
 8022b0c:	f2c0 815b 	blt.w	8022dc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022b10:	f11c 0c01 	adds.w	ip, ip, #1
 8022b14:	f100 814b 	bmi.w	8022dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b18:	4561      	cmp	r1, ip
 8022b1a:	f2c0 8148 	blt.w	8022dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b1e:	3301      	adds	r3, #1
 8022b20:	f100 8145 	bmi.w	8022dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b24:	429a      	cmp	r2, r3
 8022b26:	f2c0 8142 	blt.w	8022dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b2a:	9b07      	ldr	r3, [sp, #28]
 8022b2c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022b2e:	9317      	str	r3, [sp, #92]	; 0x5c
 8022b30:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022b32:	2b00      	cmp	r3, #0
 8022b34:	f340 8165 	ble.w	8022e02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022b38:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8022b3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022b3c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022b40:	689b      	ldr	r3, [r3, #8]
 8022b42:	1422      	asrs	r2, r4, #16
 8022b44:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022b48:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022b4c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022b50:	f100 81d5 	bmi.w	8022efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022b54:	f103 38ff 	add.w	r8, r3, #4294967295
 8022b58:	4542      	cmp	r2, r8
 8022b5a:	f280 81d0 	bge.w	8022efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022b5e:	f1bc 0f00 	cmp.w	ip, #0
 8022b62:	f2c0 81cc 	blt.w	8022efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022b66:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022b6a:	45c4      	cmp	ip, r8
 8022b6c:	f280 81c7 	bge.w	8022efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022b70:	b21b      	sxth	r3, r3
 8022b72:	fb0c 2203 	mla	r2, ip, r3, r2
 8022b76:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022b78:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022b7c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022b80:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022b84:	2900      	cmp	r1, #0
 8022b86:	f000 8182 	beq.w	8022e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022b8a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022b8e:	950b      	str	r5, [sp, #44]	; 0x2c
 8022b90:	0e2d      	lsrs	r5, r5, #24
 8022b92:	9512      	str	r5, [sp, #72]	; 0x48
 8022b94:	b180      	cbz	r0, 8022bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022b96:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022b9a:	3b01      	subs	r3, #1
 8022b9c:	009b      	lsls	r3, r3, #2
 8022b9e:	3304      	adds	r3, #4
 8022ba0:	eb08 0c03 	add.w	ip, r8, r3
 8022ba4:	f858 3003 	ldr.w	r3, [r8, r3]
 8022ba8:	9308      	str	r3, [sp, #32]
 8022baa:	0e1b      	lsrs	r3, r3, #24
 8022bac:	9310      	str	r3, [sp, #64]	; 0x40
 8022bae:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022bb2:	930c      	str	r3, [sp, #48]	; 0x30
 8022bb4:	0e1b      	lsrs	r3, r3, #24
 8022bb6:	9313      	str	r3, [sp, #76]	; 0x4c
 8022bb8:	b289      	uxth	r1, r1
 8022bba:	b280      	uxth	r0, r0
 8022bbc:	fb01 f900 	mul.w	r9, r1, r0
 8022bc0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022bc4:	0109      	lsls	r1, r1, #4
 8022bc6:	eba1 0809 	sub.w	r8, r1, r9
 8022bca:	b280      	uxth	r0, r0
 8022bcc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8022bd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022bd2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022bd4:	fa1f f888 	uxth.w	r8, r8
 8022bd8:	1a09      	subs	r1, r1, r0
 8022bda:	b289      	uxth	r1, r1
 8022bdc:	fb08 f303 	mul.w	r3, r8, r3
 8022be0:	fb01 330e 	mla	r3, r1, lr, r3
 8022be4:	fb00 3305 	mla	r3, r0, r5, r3
 8022be8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022bea:	fb09 3305 	mla	r3, r9, r5, r3
 8022bee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022bf2:	2b00      	cmp	r3, #0
 8022bf4:	f000 80d2 	beq.w	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bf8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022bfc:	d01b      	beq.n	8022c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8022bfe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022c02:	fb0e fa0a 	mul.w	sl, lr, sl
 8022c06:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022c0a:	fb0e fe02 	mul.w	lr, lr, r2
 8022c0e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022c12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022c16:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022c1a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022c1e:	4452      	add	r2, sl
 8022c20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022c24:	0a12      	lsrs	r2, r2, #8
 8022c26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022c2e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022c32:	ea42 020c 	orr.w	r2, r2, ip
 8022c36:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022c38:	2dff      	cmp	r5, #255	; 0xff
 8022c3a:	d021      	beq.n	8022c80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8022c3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022c3e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022c42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022c44:	fb05 fb0b 	mul.w	fp, r5, fp
 8022c48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022c4a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022c4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022c50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022c54:	fb05 fa0a 	mul.w	sl, r5, sl
 8022c58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022c5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022c60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022c64:	44de      	add	lr, fp
 8022c66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022c6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022c6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022c72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022c76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022c7a:	ea4e 050a 	orr.w	r5, lr, sl
 8022c7e:	950b      	str	r5, [sp, #44]	; 0x2c
 8022c80:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022c82:	2dff      	cmp	r5, #255	; 0xff
 8022c84:	d021      	beq.n	8022cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022c86:	9d08      	ldr	r5, [sp, #32]
 8022c88:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022c8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022c8e:	fb05 fb0b 	mul.w	fp, r5, fp
 8022c92:	9d08      	ldr	r5, [sp, #32]
 8022c94:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022c98:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022c9a:	fb05 fa0e 	mul.w	sl, r5, lr
 8022c9e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022ca2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022ca6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022caa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022cae:	44de      	add	lr, fp
 8022cb0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022cb4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022cb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022cbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022cc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022cc4:	ea4e 050a 	orr.w	r5, lr, sl
 8022cc8:	9508      	str	r5, [sp, #32]
 8022cca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022ccc:	2dff      	cmp	r5, #255	; 0xff
 8022cce:	d021      	beq.n	8022d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022cd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022cd2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022cd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022cd8:	fb05 fb0b 	mul.w	fp, r5, fp
 8022cdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022cde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022ce2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022ce4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022ce8:	fb05 fa0a 	mul.w	sl, r5, sl
 8022cec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022cf0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022cf4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022cf8:	44de      	add	lr, fp
 8022cfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022cfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d0e:	ea4e 050a 	orr.w	r5, lr, sl
 8022d12:	950c      	str	r5, [sp, #48]	; 0x30
 8022d14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d16:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022d1a:	9d08      	ldr	r5, [sp, #32]
 8022d1c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022d20:	fb08 fc0c 	mul.w	ip, r8, ip
 8022d24:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022d28:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022d2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d2e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022d32:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022d36:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d38:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022d3c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022d40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022d44:	fb08 f80e 	mul.w	r8, r8, lr
 8022d48:	fb01 8202 	mla	r2, r1, r2, r8
 8022d4c:	9908      	ldr	r1, [sp, #32]
 8022d4e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022d52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022d54:	fb00 220a 	mla	r2, r0, sl, r2
 8022d58:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8022d5c:	fb09 2900 	mla	r9, r9, r0, r2
 8022d60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022d68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d6c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022d70:	ea4c 0c09 	orr.w	ip, ip, r9
 8022d74:	2bff      	cmp	r3, #255	; 0xff
 8022d76:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022d7a:	f040 8091 	bne.w	8022ea0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022d7e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8022d82:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8022d86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d8a:	f022 0207 	bic.w	r2, r2, #7
 8022d8e:	431a      	orrs	r2, r3
 8022d90:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022d94:	ea4c 0c02 	orr.w	ip, ip, r2
 8022d98:	f8a7 c000 	strh.w	ip, [r7]
 8022d9c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022d9e:	441c      	add	r4, r3
 8022da0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022da2:	441e      	add	r6, r3
 8022da4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022da6:	3b01      	subs	r3, #1
 8022da8:	3702      	adds	r7, #2
 8022daa:	9317      	str	r3, [sp, #92]	; 0x5c
 8022dac:	e6c0      	b.n	8022b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022dae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022db0:	441c      	add	r4, r3
 8022db2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022db4:	441e      	add	r6, r3
 8022db6:	9b07      	ldr	r3, [sp, #28]
 8022db8:	3b01      	subs	r3, #1
 8022dba:	9307      	str	r3, [sp, #28]
 8022dbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022dbe:	3302      	adds	r3, #2
 8022dc0:	930a      	str	r3, [sp, #40]	; 0x28
 8022dc2:	e695      	b.n	8022af0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022dc4:	d024      	beq.n	8022e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022dc6:	9b07      	ldr	r3, [sp, #28]
 8022dc8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022dca:	3b01      	subs	r3, #1
 8022dcc:	fb00 4003 	mla	r0, r0, r3, r4
 8022dd0:	1400      	asrs	r0, r0, #16
 8022dd2:	f53f aeaa 	bmi.w	8022b2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022dd6:	3901      	subs	r1, #1
 8022dd8:	4288      	cmp	r0, r1
 8022dda:	f6bf aea6 	bge.w	8022b2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022dde:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022de0:	fb01 6303 	mla	r3, r1, r3, r6
 8022de4:	141b      	asrs	r3, r3, #16
 8022de6:	f53f aea0 	bmi.w	8022b2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022dea:	3a01      	subs	r2, #1
 8022dec:	4293      	cmp	r3, r2
 8022dee:	f6bf ae9c 	bge.w	8022b2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022df2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022df6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8022dfa:	f1bb 0f00 	cmp.w	fp, #0
 8022dfe:	f300 809a 	bgt.w	8022f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022e02:	9b07      	ldr	r3, [sp, #28]
 8022e04:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e0a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022e0e:	930a      	str	r3, [sp, #40]	; 0x28
 8022e10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022e12:	2b00      	cmp	r3, #0
 8022e14:	f340 81eb 	ble.w	80231ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022e18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022e20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022e24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e32:	eef0 6a62 	vmov.f32	s13, s5
 8022e36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e42:	ee16 4a90 	vmov	r4, s13
 8022e46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e4a:	eef0 6a43 	vmov.f32	s13, s6
 8022e4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e52:	ee12 2a90 	vmov	r2, s5
 8022e56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e5e:	ee13 2a10 	vmov	r2, s6
 8022e62:	9327      	str	r3, [sp, #156]	; 0x9c
 8022e64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e66:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e6a:	9328      	str	r3, [sp, #160]	; 0xa0
 8022e6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022e6e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022e70:	3b01      	subs	r3, #1
 8022e72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e76:	9316      	str	r3, [sp, #88]	; 0x58
 8022e78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e7a:	bf08      	it	eq
 8022e7c:	4613      	moveq	r3, r2
 8022e7e:	ee16 6a90 	vmov	r6, s13
 8022e82:	9307      	str	r3, [sp, #28]
 8022e84:	eeb0 3a67 	vmov.f32	s6, s15
 8022e88:	eef0 2a47 	vmov.f32	s5, s14
 8022e8c:	e622      	b.n	8022ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8022e8e:	2800      	cmp	r0, #0
 8022e90:	f43f ae92 	beq.w	8022bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022e94:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022e98:	9308      	str	r3, [sp, #32]
 8022e9a:	0e1b      	lsrs	r3, r3, #24
 8022e9c:	9310      	str	r3, [sp, #64]	; 0x40
 8022e9e:	e68b      	b.n	8022bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022ea0:	8839      	ldrh	r1, [r7, #0]
 8022ea2:	4dd4      	ldr	r5, [pc, #848]	; (80231f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022ea4:	43db      	mvns	r3, r3
 8022ea6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022eaa:	fa5f f883 	uxtb.w	r8, r3
 8022eae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8022eb2:	fb0e fe08 	mul.w	lr, lr, r8
 8022eb6:	10c8      	asrs	r0, r1, #3
 8022eb8:	00cb      	lsls	r3, r1, #3
 8022eba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ebe:	f10e 0101 	add.w	r1, lr, #1
 8022ec2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022ec6:	fb00 f008 	mul.w	r0, r0, r8
 8022eca:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8022ece:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8022ed2:	f100 0e01 	add.w	lr, r0, #1
 8022ed6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8022eda:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022ede:	b2db      	uxtb	r3, r3
 8022ee0:	b2c9      	uxtb	r1, r1
 8022ee2:	00d2      	lsls	r2, r2, #3
 8022ee4:	fb03 f308 	mul.w	r3, r3, r8
 8022ee8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8022eec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ef0:	430a      	orrs	r2, r1
 8022ef2:	1c59      	adds	r1, r3, #1
 8022ef4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022ef8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022efc:	e748      	b.n	8022d90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8022efe:	f112 0801 	adds.w	r8, r2, #1
 8022f02:	f53f af4b 	bmi.w	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f06:	4543      	cmp	r3, r8
 8022f08:	f6ff af48 	blt.w	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f0c:	f11c 0801 	adds.w	r8, ip, #1
 8022f10:	f53f af44 	bmi.w	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f14:	45c6      	cmp	lr, r8
 8022f16:	f6ff af41 	blt.w	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f1a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8022f1e:	fa0f f28e 	sxth.w	r2, lr
 8022f22:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8022f26:	9200      	str	r2, [sp, #0]
 8022f28:	b21b      	sxth	r3, r3
 8022f2a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022f2c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022f2e:	4639      	mov	r1, r7
 8022f30:	f7ff fc87 	bl	8022842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8022f34:	e732      	b.n	8022d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022f38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022f3a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8022f3e:	1421      	asrs	r1, r4, #16
 8022f40:	1433      	asrs	r3, r6, #16
 8022f42:	fb07 1303 	mla	r3, r7, r3, r1
 8022f46:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8022f48:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8022f4c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8022f50:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022f54:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022f58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022f5c:	2a00      	cmp	r2, #0
 8022f5e:	f000 8107 	beq.w	8023170 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8022f62:	684d      	ldr	r5, [r1, #4]
 8022f64:	950d      	str	r5, [sp, #52]	; 0x34
 8022f66:	0e2d      	lsrs	r5, r5, #24
 8022f68:	9514      	str	r5, [sp, #80]	; 0x50
 8022f6a:	b178      	cbz	r0, 8022f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022f6c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8022f70:	3f01      	subs	r7, #1
 8022f72:	00bf      	lsls	r7, r7, #2
 8022f74:	3704      	adds	r7, #4
 8022f76:	eb01 0e07 	add.w	lr, r1, r7
 8022f7a:	59c9      	ldr	r1, [r1, r7]
 8022f7c:	9109      	str	r1, [sp, #36]	; 0x24
 8022f7e:	0e09      	lsrs	r1, r1, #24
 8022f80:	9111      	str	r1, [sp, #68]	; 0x44
 8022f82:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022f86:	910e      	str	r1, [sp, #56]	; 0x38
 8022f88:	0e09      	lsrs	r1, r1, #24
 8022f8a:	9115      	str	r1, [sp, #84]	; 0x54
 8022f8c:	b292      	uxth	r2, r2
 8022f8e:	b280      	uxth	r0, r0
 8022f90:	fb02 f900 	mul.w	r9, r2, r0
 8022f94:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022f98:	0112      	lsls	r2, r2, #4
 8022f9a:	eba2 0e09 	sub.w	lr, r2, r9
 8022f9e:	b280      	uxth	r0, r0
 8022fa0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022fa4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022fa6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022fa8:	fa1f fe8e 	uxth.w	lr, lr
 8022fac:	1a09      	subs	r1, r1, r0
 8022fae:	b289      	uxth	r1, r1
 8022fb0:	fb0e f202 	mul.w	r2, lr, r2
 8022fb4:	fb01 220c 	mla	r2, r1, ip, r2
 8022fb8:	fb00 2205 	mla	r2, r0, r5, r2
 8022fbc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022fbe:	fb09 2205 	mla	r2, r9, r5, r2
 8022fc2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022fc6:	2a00      	cmp	r2, #0
 8022fc8:	f000 80c9 	beq.w	802315e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8022fcc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022fd0:	d019      	beq.n	8023006 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8022fd2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022fd6:	fb0c fa0a 	mul.w	sl, ip, sl
 8022fda:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022fde:	fb0c fc03 	mul.w	ip, ip, r3
 8022fe2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022fe6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022fea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022fee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022ff2:	4453      	add	r3, sl
 8022ff4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022ff8:	0a1b      	lsrs	r3, r3, #8
 8022ffa:	0a3f      	lsrs	r7, r7, #8
 8022ffc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023000:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023004:	433b      	orrs	r3, r7
 8023006:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023008:	2dff      	cmp	r5, #255	; 0xff
 802300a:	d020      	beq.n	802304e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802300c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802300e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023012:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023014:	436f      	muls	r7, r5
 8023016:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023018:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802301c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802301e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023022:	fb05 fa0a 	mul.w	sl, r5, sl
 8023026:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802302a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802302e:	44bc      	add	ip, r7
 8023030:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023034:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023038:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802303c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023040:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023044:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023048:	ea4c 050a 	orr.w	r5, ip, sl
 802304c:	950d      	str	r5, [sp, #52]	; 0x34
 802304e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023050:	2dff      	cmp	r5, #255	; 0xff
 8023052:	d020      	beq.n	8023096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8023054:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023056:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802305a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802305c:	436f      	muls	r7, r5
 802305e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023060:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023064:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023066:	fb05 fa0c 	mul.w	sl, r5, ip
 802306a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802306e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023072:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023076:	44bc      	add	ip, r7
 8023078:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802307c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023084:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023088:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802308c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023090:	ea4c 050a 	orr.w	r5, ip, sl
 8023094:	9509      	str	r5, [sp, #36]	; 0x24
 8023096:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023098:	2dff      	cmp	r5, #255	; 0xff
 802309a:	d020      	beq.n	80230de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802309c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802309e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80230a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80230a4:	436f      	muls	r7, r5
 80230a6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80230a8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80230ac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80230ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80230b2:	fb05 fa0a 	mul.w	sl, r5, sl
 80230b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80230ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80230be:	44bc      	add	ip, r7
 80230c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80230c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80230c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80230cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80230d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230d8:	ea4c 050a 	orr.w	r5, ip, sl
 80230dc:	950e      	str	r5, [sp, #56]	; 0x38
 80230de:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230e0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80230e4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80230e6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80230ea:	fb0e f707 	mul.w	r7, lr, r7
 80230ee:	fb01 770c 	mla	r7, r1, ip, r7
 80230f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80230f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80230f8:	fb00 770c 	mla	r7, r0, ip, r7
 80230fc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023100:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023102:	fb09 770c 	mla	r7, r9, ip, r7
 8023106:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802310a:	fb0e fe0c 	mul.w	lr, lr, ip
 802310e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023112:	fb01 e303 	mla	r3, r1, r3, lr
 8023116:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023118:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802311c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802311e:	fb00 330a 	mla	r3, r0, sl, r3
 8023122:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023126:	fb09 3c0c 	mla	ip, r9, ip, r3
 802312a:	0a3f      	lsrs	r7, r7, #8
 802312c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023130:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023134:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023138:	ea47 070c 	orr.w	r7, r7, ip
 802313c:	2aff      	cmp	r2, #255	; 0xff
 802313e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8023142:	d11e      	bne.n	8023182 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8023144:	097a      	lsrs	r2, r7, #5
 8023146:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802314a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802314e:	f023 0307 	bic.w	r3, r3, #7
 8023152:	4313      	orrs	r3, r2
 8023154:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023158:	431f      	orrs	r7, r3
 802315a:	f8a8 7000 	strh.w	r7, [r8]
 802315e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023160:	441c      	add	r4, r3
 8023162:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023164:	f108 0802 	add.w	r8, r8, #2
 8023168:	441e      	add	r6, r3
 802316a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802316e:	e644      	b.n	8022dfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8023170:	2800      	cmp	r0, #0
 8023172:	f43f af0b 	beq.w	8022f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023176:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802317a:	9109      	str	r1, [sp, #36]	; 0x24
 802317c:	0e09      	lsrs	r1, r1, #24
 802317e:	9111      	str	r1, [sp, #68]	; 0x44
 8023180:	e704      	b.n	8022f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023182:	f8b8 1000 	ldrh.w	r1, [r8]
 8023186:	43d2      	mvns	r2, r2
 8023188:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802318c:	fa5f fe82 	uxtb.w	lr, r2
 8023190:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023194:	fb0c fc0e 	mul.w	ip, ip, lr
 8023198:	10c8      	asrs	r0, r1, #3
 802319a:	00ca      	lsls	r2, r1, #3
 802319c:	f10c 0101 	add.w	r1, ip, #1
 80231a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80231a4:	0c39      	lsrs	r1, r7, #16
 80231a6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80231aa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80231ae:	4911      	ldr	r1, [pc, #68]	; (80231f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80231b0:	fb00 f00e 	mul.w	r0, r0, lr
 80231b4:	fa5f fc8c 	uxtb.w	ip, ip
 80231b8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80231bc:	b2d2      	uxtb	r2, r2
 80231be:	1c41      	adds	r1, r0, #1
 80231c0:	fb02 f20e 	mul.w	r2, r2, lr
 80231c4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80231c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80231cc:	1c51      	adds	r1, r2, #1
 80231ce:	00c0      	lsls	r0, r0, #3
 80231d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80231d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231d8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80231dc:	ea4c 0c00 	orr.w	ip, ip, r0
 80231e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80231e4:	ea47 0c0c 	orr.w	ip, r7, ip
 80231e8:	f8a8 c000 	strh.w	ip, [r8]
 80231ec:	e7b7      	b.n	802315e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80231ee:	b01b      	add	sp, #108	; 0x6c
 80231f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231f4:	fffff800 	.word	0xfffff800

080231f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80231f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80231fc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023200:	2d00      	cmp	r5, #0
 8023202:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023206:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802320a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802320e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8023212:	fb05 0e03 	mla	lr, r5, r3, r0
 8023216:	f2c0 808c 	blt.w	8023332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802321a:	45a9      	cmp	r9, r5
 802321c:	f340 8089 	ble.w	8023332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023220:	2800      	cmp	r0, #0
 8023222:	f2c0 8084 	blt.w	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023226:	4580      	cmp	r8, r0
 8023228:	f340 8081 	ble.w	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802322c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023230:	f01e 0f01 	tst.w	lr, #1
 8023234:	5d16      	ldrb	r6, [r2, r4]
 8023236:	bf0c      	ite	eq
 8023238:	f006 060f 	andeq.w	r6, r6, #15
 802323c:	1136      	asrne	r6, r6, #4
 802323e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023242:	b2f6      	uxtb	r6, r6
 8023244:	1c44      	adds	r4, r0, #1
 8023246:	d477      	bmi.n	8023338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023248:	45a0      	cmp	r8, r4
 802324a:	dd75      	ble.n	8023338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802324c:	2f00      	cmp	r7, #0
 802324e:	d075      	beq.n	802333c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8023250:	f10e 0a01 	add.w	sl, lr, #1
 8023254:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023258:	f01a 0f01 	tst.w	sl, #1
 802325c:	5d14      	ldrb	r4, [r2, r4]
 802325e:	bf0c      	ite	eq
 8023260:	f004 040f 	andeq.w	r4, r4, #15
 8023264:	1124      	asrne	r4, r4, #4
 8023266:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802326a:	b2e4      	uxtb	r4, r4
 802326c:	3501      	adds	r5, #1
 802326e:	d469      	bmi.n	8023344 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023270:	45a9      	cmp	r9, r5
 8023272:	dd67      	ble.n	8023344 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023274:	f1bc 0f00 	cmp.w	ip, #0
 8023278:	d067      	beq.n	802334a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802327a:	2800      	cmp	r0, #0
 802327c:	db60      	blt.n	8023340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802327e:	4580      	cmp	r8, r0
 8023280:	dd5e      	ble.n	8023340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8023282:	eb03 090e 	add.w	r9, r3, lr
 8023286:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802328a:	f019 0f01 	tst.w	r9, #1
 802328e:	5d55      	ldrb	r5, [r2, r5]
 8023290:	bf0c      	ite	eq
 8023292:	f005 050f 	andeq.w	r5, r5, #15
 8023296:	112d      	asrne	r5, r5, #4
 8023298:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802329c:	b2ed      	uxtb	r5, r5
 802329e:	3001      	adds	r0, #1
 80232a0:	d456      	bmi.n	8023350 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80232a2:	4580      	cmp	r8, r0
 80232a4:	dd54      	ble.n	8023350 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80232a6:	2f00      	cmp	r7, #0
 80232a8:	d054      	beq.n	8023354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80232aa:	3301      	adds	r3, #1
 80232ac:	449e      	add	lr, r3
 80232ae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80232b2:	f01e 0f01 	tst.w	lr, #1
 80232b6:	5cd0      	ldrb	r0, [r2, r3]
 80232b8:	bf0c      	ite	eq
 80232ba:	f000 000f 	andeq.w	r0, r0, #15
 80232be:	1100      	asrne	r0, r0, #4
 80232c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80232c4:	b2c3      	uxtb	r3, r0
 80232c6:	b2ba      	uxth	r2, r7
 80232c8:	fa1f fc8c 	uxth.w	ip, ip
 80232cc:	fb02 f00c 	mul.w	r0, r2, ip
 80232d0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80232d4:	0112      	lsls	r2, r2, #4
 80232d6:	fa1f fc8c 	uxth.w	ip, ip
 80232da:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80232de:	1a12      	subs	r2, r2, r0
 80232e0:	eba7 070c 	sub.w	r7, r7, ip
 80232e4:	b292      	uxth	r2, r2
 80232e6:	b2bf      	uxth	r7, r7
 80232e8:	4362      	muls	r2, r4
 80232ea:	fb06 2207 	mla	r2, r6, r7, r2
 80232ee:	fb0c 2505 	mla	r5, ip, r5, r2
 80232f2:	fb00 5303 	mla	r3, r0, r3, r5
 80232f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80232fa:	b1b3      	cbz	r3, 802332a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80232fc:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8023300:	435a      	muls	r2, r3
 8023302:	1c53      	adds	r3, r2, #1
 8023304:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023308:	4a2d      	ldr	r2, [pc, #180]	; (80233c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802330a:	121b      	asrs	r3, r3, #8
 802330c:	6812      	ldr	r2, [r2, #0]
 802330e:	2bff      	cmp	r3, #255	; 0xff
 8023310:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8023314:	d120      	bne.n	8023358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8023316:	4b2b      	ldr	r3, [pc, #172]	; (80233c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8023318:	0950      	lsrs	r0, r2, #5
 802331a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802331e:	4033      	ands	r3, r6
 8023320:	4318      	orrs	r0, r3
 8023322:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023326:	4302      	orrs	r2, r0
 8023328:	800a      	strh	r2, [r1, #0]
 802332a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802332e:	2600      	movs	r6, #0
 8023330:	e788      	b.n	8023244 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8023332:	2400      	movs	r4, #0
 8023334:	4626      	mov	r6, r4
 8023336:	e799      	b.n	802326c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023338:	2400      	movs	r4, #0
 802333a:	e797      	b.n	802326c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802333c:	463c      	mov	r4, r7
 802333e:	e795      	b.n	802326c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023340:	2500      	movs	r5, #0
 8023342:	e7ac      	b.n	802329e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8023344:	2300      	movs	r3, #0
 8023346:	461d      	mov	r5, r3
 8023348:	e7bd      	b.n	80232c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802334a:	4663      	mov	r3, ip
 802334c:	4665      	mov	r5, ip
 802334e:	e7ba      	b.n	80232c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023350:	2300      	movs	r3, #0
 8023352:	e7b8      	b.n	80232c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023354:	463b      	mov	r3, r7
 8023356:	e7b6      	b.n	80232c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023358:	880d      	ldrh	r5, [r1, #0]
 802335a:	b29f      	uxth	r7, r3
 802335c:	122c      	asrs	r4, r5, #8
 802335e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8023362:	43db      	mvns	r3, r3
 8023364:	b2db      	uxtb	r3, r3
 8023366:	fb10 f007 	smulbb	r0, r0, r7
 802336a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802336e:	fb04 0403 	mla	r4, r4, r3, r0
 8023372:	b2f6      	uxtb	r6, r6
 8023374:	10e8      	asrs	r0, r5, #3
 8023376:	b2d2      	uxtb	r2, r2
 8023378:	00ed      	lsls	r5, r5, #3
 802337a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802337e:	fb12 f207 	smulbb	r2, r2, r7
 8023382:	fb16 f607 	smulbb	r6, r6, r7
 8023386:	b2ed      	uxtb	r5, r5
 8023388:	b2a4      	uxth	r4, r4
 802338a:	fb00 6603 	mla	r6, r0, r3, r6
 802338e:	fb05 2303 	mla	r3, r5, r3, r2
 8023392:	b29a      	uxth	r2, r3
 8023394:	1c63      	adds	r3, r4, #1
 8023396:	b2b0      	uxth	r0, r6
 8023398:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802339c:	1c53      	adds	r3, r2, #1
 802339e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80233a2:	1c42      	adds	r2, r0, #1
 80233a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80233a8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80233ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80233b0:	0940      	lsrs	r0, r0, #5
 80233b2:	4323      	orrs	r3, r4
 80233b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80233b8:	4303      	orrs	r3, r0
 80233ba:	800b      	strh	r3, [r1, #0]
 80233bc:	e7b5      	b.n	802332a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80233be:	bf00      	nop
 80233c0:	20002c94 	.word	0x20002c94
 80233c4:	00fff800 	.word	0x00fff800

080233c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80233c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233cc:	b097      	sub	sp, #92	; 0x5c
 80233ce:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80233d2:	9214      	str	r2, [sp, #80]	; 0x50
 80233d4:	9309      	str	r3, [sp, #36]	; 0x24
 80233d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80233d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80233dc:	910d      	str	r1, [sp, #52]	; 0x34
 80233de:	930f      	str	r3, [sp, #60]	; 0x3c
 80233e0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80233e4:	9015      	str	r0, [sp, #84]	; 0x54
 80233e6:	6850      	ldr	r0, [r2, #4]
 80233e8:	6812      	ldr	r2, [r2, #0]
 80233ea:	fb00 1303 	mla	r3, r0, r3, r1
 80233ee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80233f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80233f4:	689b      	ldr	r3, [r3, #8]
 80233f6:	3301      	adds	r3, #1
 80233f8:	f023 0301 	bic.w	r3, r3, #1
 80233fc:	930a      	str	r3, [sp, #40]	; 0x28
 80233fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023400:	681f      	ldr	r7, [r3, #0]
 8023402:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023404:	2b00      	cmp	r3, #0
 8023406:	dc03      	bgt.n	8023410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023408:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802340a:	2b00      	cmp	r3, #0
 802340c:	f340 8287 	ble.w	802391e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8023410:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023416:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802341a:	1e48      	subs	r0, r1, #1
 802341c:	f102 3cff 	add.w	ip, r2, #4294967295
 8023420:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023422:	2b00      	cmp	r3, #0
 8023424:	f340 80c4 	ble.w	80235b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8023428:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802342c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023430:	d406      	bmi.n	8023440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023432:	4586      	cmp	lr, r0
 8023434:	da04      	bge.n	8023440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023436:	2b00      	cmp	r3, #0
 8023438:	db02      	blt.n	8023440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802343a:	4563      	cmp	r3, ip
 802343c:	f2c0 80b9 	blt.w	80235b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8023440:	f11e 0e01 	adds.w	lr, lr, #1
 8023444:	f100 80aa 	bmi.w	802359c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023448:	4571      	cmp	r1, lr
 802344a:	f2c0 80a7 	blt.w	802359c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802344e:	3301      	adds	r3, #1
 8023450:	f100 80a4 	bmi.w	802359c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023454:	429a      	cmp	r2, r3
 8023456:	f2c0 80a1 	blt.w	802359c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802345a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802345c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8023460:	930e      	str	r3, [sp, #56]	; 0x38
 8023462:	46c8      	mov	r8, r9
 8023464:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023466:	2b00      	cmp	r3, #0
 8023468:	f340 80c3 	ble.w	80235f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802346c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802346e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023472:	1423      	asrs	r3, r4, #16
 8023474:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023478:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802347c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023480:	f100 814d 	bmi.w	802371e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023484:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023488:	455b      	cmp	r3, fp
 802348a:	f280 8148 	bge.w	802371e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802348e:	2800      	cmp	r0, #0
 8023490:	f2c0 8145 	blt.w	802371e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023494:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023498:	4558      	cmp	r0, fp
 802349a:	f280 8140 	bge.w	802371e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802349e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80234a0:	fb00 3305 	mla	r3, r0, r5, r3
 80234a4:	0858      	lsrs	r0, r3, #1
 80234a6:	07dd      	lsls	r5, r3, #31
 80234a8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80234ac:	bf54      	ite	pl
 80234ae:	f00c 0c0f 	andpl.w	ip, ip, #15
 80234b2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80234b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80234ba:	fa5f fc8c 	uxtb.w	ip, ip
 80234be:	2a00      	cmp	r2, #0
 80234c0:	f000 80db 	beq.w	802367a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80234c4:	1c58      	adds	r0, r3, #1
 80234c6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80234ca:	07c0      	lsls	r0, r0, #31
 80234cc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80234d0:	bf54      	ite	pl
 80234d2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80234d6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80234da:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80234de:	fa5f f08e 	uxtb.w	r0, lr
 80234e2:	9010      	str	r0, [sp, #64]	; 0x40
 80234e4:	b1c9      	cbz	r1, 802351a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80234e6:	4453      	add	r3, sl
 80234e8:	0858      	lsrs	r0, r3, #1
 80234ea:	07dd      	lsls	r5, r3, #31
 80234ec:	5c38      	ldrb	r0, [r7, r0]
 80234ee:	bf54      	ite	pl
 80234f0:	f000 000f 	andpl.w	r0, r0, #15
 80234f4:	1100      	asrmi	r0, r0, #4
 80234f6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80234fa:	3301      	adds	r3, #1
 80234fc:	b2c0      	uxtb	r0, r0
 80234fe:	900b      	str	r0, [sp, #44]	; 0x2c
 8023500:	0858      	lsrs	r0, r3, #1
 8023502:	07dd      	lsls	r5, r3, #31
 8023504:	f817 e000 	ldrb.w	lr, [r7, r0]
 8023508:	bf54      	ite	pl
 802350a:	f00e 030f 	andpl.w	r3, lr, #15
 802350e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8023512:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023516:	b2db      	uxtb	r3, r3
 8023518:	9311      	str	r3, [sp, #68]	; 0x44
 802351a:	b292      	uxth	r2, r2
 802351c:	b289      	uxth	r1, r1
 802351e:	fb02 f301 	mul.w	r3, r2, r1
 8023522:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023526:	0112      	lsls	r2, r2, #4
 8023528:	b289      	uxth	r1, r1
 802352a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802352e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023530:	1ad2      	subs	r2, r2, r3
 8023532:	1a40      	subs	r0, r0, r1
 8023534:	b292      	uxth	r2, r2
 8023536:	436a      	muls	r2, r5
 8023538:	b280      	uxth	r0, r0
 802353a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802353e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023540:	fb01 c102 	mla	r1, r1, r2, ip
 8023544:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023546:	fb03 1302 	mla	r3, r3, r2, r1
 802354a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802354e:	b1db      	cbz	r3, 8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023550:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023552:	4353      	muls	r3, r2
 8023554:	1c5a      	adds	r2, r3, #1
 8023556:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802355a:	4ac6      	ldr	r2, [pc, #792]	; (8023874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802355c:	121b      	asrs	r3, r3, #8
 802355e:	6812      	ldr	r2, [r2, #0]
 8023560:	2bff      	cmp	r3, #255	; 0xff
 8023562:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8023566:	f040 8099 	bne.w	802369c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802356a:	0953      	lsrs	r3, r2, #5
 802356c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023570:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023574:	f02c 0c07 	bic.w	ip, ip, #7
 8023578:	ea43 0c0c 	orr.w	ip, r3, ip
 802357c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023580:	ea4c 0202 	orr.w	r2, ip, r2
 8023584:	f8a8 2000 	strh.w	r2, [r8]
 8023588:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802358a:	441c      	add	r4, r3
 802358c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802358e:	441e      	add	r6, r3
 8023590:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023592:	3b01      	subs	r3, #1
 8023594:	f108 0802 	add.w	r8, r8, #2
 8023598:	930e      	str	r3, [sp, #56]	; 0x38
 802359a:	e763      	b.n	8023464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802359c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802359e:	441c      	add	r4, r3
 80235a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80235a2:	441e      	add	r6, r3
 80235a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235a6:	3b01      	subs	r3, #1
 80235a8:	9309      	str	r3, [sp, #36]	; 0x24
 80235aa:	f109 0902 	add.w	r9, r9, #2
 80235ae:	e737      	b.n	8023420 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80235b0:	d024      	beq.n	80235fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80235b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235b4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80235b6:	3b01      	subs	r3, #1
 80235b8:	fb00 4003 	mla	r0, r0, r3, r4
 80235bc:	1400      	asrs	r0, r0, #16
 80235be:	f53f af4c 	bmi.w	802345a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235c2:	3901      	subs	r1, #1
 80235c4:	4288      	cmp	r0, r1
 80235c6:	f6bf af48 	bge.w	802345a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235ca:	9924      	ldr	r1, [sp, #144]	; 0x90
 80235cc:	fb01 6303 	mla	r3, r1, r3, r6
 80235d0:	141b      	asrs	r3, r3, #16
 80235d2:	f53f af42 	bmi.w	802345a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235d6:	3a01      	subs	r2, #1
 80235d8:	4293      	cmp	r3, r2
 80235da:	f6bf af3e 	bge.w	802345a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80235e2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80235e6:	930e      	str	r3, [sp, #56]	; 0x38
 80235e8:	46c8      	mov	r8, r9
 80235ea:	f1bb 0f00 	cmp.w	fp, #0
 80235ee:	f300 80b7 	bgt.w	8023760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80235f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235f4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80235f8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80235fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80235fe:	2b00      	cmp	r3, #0
 8023600:	f340 818d 	ble.w	802391e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8023604:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023608:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802360c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023610:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023612:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023616:	ee31 1a05 	vadd.f32	s2, s2, s10
 802361a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802361e:	eef0 6a62 	vmov.f32	s13, s5
 8023622:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023626:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802362a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802362e:	ee16 4a90 	vmov	r4, s13
 8023632:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023636:	eef0 6a43 	vmov.f32	s13, s6
 802363a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802363e:	ee12 2a90 	vmov	r2, s5
 8023642:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023646:	fb92 f3f3 	sdiv	r3, r2, r3
 802364a:	ee13 2a10 	vmov	r2, s6
 802364e:	9323      	str	r3, [sp, #140]	; 0x8c
 8023650:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023652:	fb92 f3f3 	sdiv	r3, r2, r3
 8023656:	9324      	str	r3, [sp, #144]	; 0x90
 8023658:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802365a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802365c:	3b01      	subs	r3, #1
 802365e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023662:	930d      	str	r3, [sp, #52]	; 0x34
 8023664:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023666:	bf08      	it	eq
 8023668:	4613      	moveq	r3, r2
 802366a:	ee16 6a90 	vmov	r6, s13
 802366e:	9309      	str	r3, [sp, #36]	; 0x24
 8023670:	eeb0 3a67 	vmov.f32	s6, s15
 8023674:	eef0 2a47 	vmov.f32	s5, s14
 8023678:	e6c3      	b.n	8023402 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802367a:	2900      	cmp	r1, #0
 802367c:	f43f af4d 	beq.w	802351a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023680:	eb0a 0003 	add.w	r0, sl, r3
 8023684:	0843      	lsrs	r3, r0, #1
 8023686:	07c0      	lsls	r0, r0, #31
 8023688:	5cfb      	ldrb	r3, [r7, r3]
 802368a:	bf54      	ite	pl
 802368c:	f003 030f 	andpl.w	r3, r3, #15
 8023690:	111b      	asrmi	r3, r3, #4
 8023692:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023696:	b2db      	uxtb	r3, r3
 8023698:	930b      	str	r3, [sp, #44]	; 0x2c
 802369a:	e73e      	b.n	802351a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802369c:	f8b8 e000 	ldrh.w	lr, [r8]
 80236a0:	fa1f fb83 	uxth.w	fp, r3
 80236a4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80236a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80236ac:	43db      	mvns	r3, r3
 80236ae:	b2db      	uxtb	r3, r3
 80236b0:	fb11 f10b 	smulbb	r1, r1, fp
 80236b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80236b8:	fb00 1003 	mla	r0, r0, r3, r1
 80236bc:	fa5f fc8c 	uxtb.w	ip, ip
 80236c0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80236c4:	b2d2      	uxtb	r2, r2
 80236c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80236ca:	b280      	uxth	r0, r0
 80236cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80236d0:	fb1c fc0b 	smulbb	ip, ip, fp
 80236d4:	fa5f fe8e 	uxtb.w	lr, lr
 80236d8:	fb12 fb0b 	smulbb	fp, r2, fp
 80236dc:	fb01 cc03 	mla	ip, r1, r3, ip
 80236e0:	fb0e bb03 	mla	fp, lr, r3, fp
 80236e4:	1c43      	adds	r3, r0, #1
 80236e6:	fa1f fc8c 	uxth.w	ip, ip
 80236ea:	fa1f fb8b 	uxth.w	fp, fp
 80236ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80236f2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80236f6:	f10c 0101 	add.w	r1, ip, #1
 80236fa:	f10b 0001 	add.w	r0, fp, #1
 80236fe:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023702:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023706:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802370a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802370e:	4318      	orrs	r0, r3
 8023710:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023714:	ea40 000c 	orr.w	r0, r0, ip
 8023718:	f8a8 0000 	strh.w	r0, [r8]
 802371c:	e734      	b.n	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802371e:	f113 0b01 	adds.w	fp, r3, #1
 8023722:	f53f af31 	bmi.w	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023726:	45dc      	cmp	ip, fp
 8023728:	f6ff af2e 	blt.w	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802372c:	f110 0b01 	adds.w	fp, r0, #1
 8023730:	f53f af2a 	bmi.w	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023734:	45de      	cmp	lr, fp
 8023736:	f6ff af27 	blt.w	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802373a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802373c:	9302      	str	r3, [sp, #8]
 802373e:	fa0f f38e 	sxth.w	r3, lr
 8023742:	9301      	str	r3, [sp, #4]
 8023744:	fa0f f38c 	sxth.w	r3, ip
 8023748:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802374c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8023750:	9300      	str	r3, [sp, #0]
 8023752:	463a      	mov	r2, r7
 8023754:	4653      	mov	r3, sl
 8023756:	4641      	mov	r1, r8
 8023758:	9815      	ldr	r0, [sp, #84]	; 0x54
 802375a:	f7ff fd4d 	bl	80231f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802375e:	e713      	b.n	8023588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023760:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023762:	1422      	asrs	r2, r4, #16
 8023764:	1433      	asrs	r3, r6, #16
 8023766:	fb05 2303 	mla	r3, r5, r3, r2
 802376a:	085a      	lsrs	r2, r3, #1
 802376c:	07dd      	lsls	r5, r3, #31
 802376e:	5cba      	ldrb	r2, [r7, r2]
 8023770:	bf54      	ite	pl
 8023772:	f002 020f 	andpl.w	r2, r2, #15
 8023776:	1112      	asrmi	r2, r2, #4
 8023778:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802377c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023780:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023784:	b2d2      	uxtb	r2, r2
 8023786:	2900      	cmp	r1, #0
 8023788:	d076      	beq.n	8023878 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802378a:	f103 0e01 	add.w	lr, r3, #1
 802378e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8023792:	f01e 0f01 	tst.w	lr, #1
 8023796:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802379a:	bf0c      	ite	eq
 802379c:	f00c 0c0f 	andeq.w	ip, ip, #15
 80237a0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80237a4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80237a8:	fa5f f58c 	uxtb.w	r5, ip
 80237ac:	9512      	str	r5, [sp, #72]	; 0x48
 80237ae:	b300      	cbz	r0, 80237f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80237b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80237b2:	442b      	add	r3, r5
 80237b4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80237b8:	07dd      	lsls	r5, r3, #31
 80237ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80237be:	bf54      	ite	pl
 80237c0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80237c4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80237c8:	3301      	adds	r3, #1
 80237ca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80237ce:	fa5f f58c 	uxtb.w	r5, ip
 80237d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80237d6:	950c      	str	r5, [sp, #48]	; 0x30
 80237d8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80237dc:	07dd      	lsls	r5, r3, #31
 80237de:	bf54      	ite	pl
 80237e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80237e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80237e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80237ec:	fa5f f38c 	uxtb.w	r3, ip
 80237f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80237f2:	b289      	uxth	r1, r1
 80237f4:	b280      	uxth	r0, r0
 80237f6:	fb01 f300 	mul.w	r3, r1, r0
 80237fa:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80237fe:	0109      	lsls	r1, r1, #4
 8023800:	b280      	uxth	r0, r0
 8023802:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8023806:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023808:	1ac9      	subs	r1, r1, r3
 802380a:	ebac 0c00 	sub.w	ip, ip, r0
 802380e:	b289      	uxth	r1, r1
 8023810:	4369      	muls	r1, r5
 8023812:	fa1f fc8c 	uxth.w	ip, ip
 8023816:	fb02 120c 	mla	r2, r2, ip, r1
 802381a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802381c:	fb00 2001 	mla	r0, r0, r1, r2
 8023820:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023822:	fb03 0302 	mla	r3, r3, r2, r0
 8023826:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802382a:	b1d3      	cbz	r3, 8023862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802382c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802382e:	4353      	muls	r3, r2
 8023830:	1c5a      	adds	r2, r3, #1
 8023832:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023836:	4a0f      	ldr	r2, [pc, #60]	; (8023874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023838:	121b      	asrs	r3, r3, #8
 802383a:	6812      	ldr	r2, [r2, #0]
 802383c:	2bff      	cmp	r3, #255	; 0xff
 802383e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8023842:	d12d      	bne.n	80238a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023844:	0953      	lsrs	r3, r2, #5
 8023846:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802384a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802384e:	f02c 0c07 	bic.w	ip, ip, #7
 8023852:	ea43 0c0c 	orr.w	ip, r3, ip
 8023856:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802385a:	ea4c 0202 	orr.w	r2, ip, r2
 802385e:	f8a8 2000 	strh.w	r2, [r8]
 8023862:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023864:	441c      	add	r4, r3
 8023866:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023868:	f108 0802 	add.w	r8, r8, #2
 802386c:	441e      	add	r6, r3
 802386e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023872:	e6ba      	b.n	80235ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023874:	20002c94 	.word	0x20002c94
 8023878:	2800      	cmp	r0, #0
 802387a:	d0ba      	beq.n	80237f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802387c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802387e:	442b      	add	r3, r5
 8023880:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023884:	07db      	lsls	r3, r3, #31
 8023886:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802388a:	bf54      	ite	pl
 802388c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023890:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023894:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023898:	fa5f f38c 	uxtb.w	r3, ip
 802389c:	930c      	str	r3, [sp, #48]	; 0x30
 802389e:	e7a8      	b.n	80237f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80238a0:	f8b8 e000 	ldrh.w	lr, [r8]
 80238a4:	fa1f fa83 	uxth.w	sl, r3
 80238a8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80238ac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80238b0:	43db      	mvns	r3, r3
 80238b2:	b2db      	uxtb	r3, r3
 80238b4:	fb11 f10a 	smulbb	r1, r1, sl
 80238b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80238bc:	fb00 1003 	mla	r0, r0, r3, r1
 80238c0:	b2d2      	uxtb	r2, r2
 80238c2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80238c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80238ca:	fa5f fe8e 	uxtb.w	lr, lr
 80238ce:	fb12 f20a 	smulbb	r2, r2, sl
 80238d2:	fb0e 2203 	mla	r2, lr, r3, r2
 80238d6:	fa5f fc8c 	uxtb.w	ip, ip
 80238da:	b280      	uxth	r0, r0
 80238dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80238e0:	b292      	uxth	r2, r2
 80238e2:	fb1c fc0a 	smulbb	ip, ip, sl
 80238e6:	fb01 cc03 	mla	ip, r1, r3, ip
 80238ea:	1c43      	adds	r3, r0, #1
 80238ec:	1c51      	adds	r1, r2, #1
 80238ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80238f2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80238f6:	fa1f fc8c 	uxth.w	ip, ip
 80238fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80238fe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023902:	4308      	orrs	r0, r1
 8023904:	f10c 0101 	add.w	r1, ip, #1
 8023908:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802390c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023910:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023914:	ea40 000c 	orr.w	r0, r0, ip
 8023918:	f8a8 0000 	strh.w	r0, [r8]
 802391c:	e7a1      	b.n	8023862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802391e:	b017      	add	sp, #92	; 0x5c
 8023920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023924 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8023924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023928:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802392c:	2d00      	cmp	r5, #0
 802392e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023932:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023936:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802393a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802393e:	fb05 0e03 	mla	lr, r5, r3, r0
 8023942:	f2c0 80b0 	blt.w	8023aa6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8023946:	45a9      	cmp	r9, r5
 8023948:	f340 80ad 	ble.w	8023aa6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802394c:	2800      	cmp	r0, #0
 802394e:	f2c0 80a8 	blt.w	8023aa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8023952:	4580      	cmp	r8, r0
 8023954:	f340 80a5 	ble.w	8023aa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8023958:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802395c:	f01e 0f01 	tst.w	lr, #1
 8023960:	5d16      	ldrb	r6, [r2, r4]
 8023962:	bf0c      	ite	eq
 8023964:	f006 060f 	andeq.w	r6, r6, #15
 8023968:	1136      	asrne	r6, r6, #4
 802396a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802396e:	b2f6      	uxtb	r6, r6
 8023970:	1c44      	adds	r4, r0, #1
 8023972:	f100 809b 	bmi.w	8023aac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8023976:	45a0      	cmp	r8, r4
 8023978:	f340 8098 	ble.w	8023aac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802397c:	2f00      	cmp	r7, #0
 802397e:	f000 8097 	beq.w	8023ab0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8023982:	f10e 0a01 	add.w	sl, lr, #1
 8023986:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802398a:	f01a 0f01 	tst.w	sl, #1
 802398e:	5d14      	ldrb	r4, [r2, r4]
 8023990:	bf0c      	ite	eq
 8023992:	f004 040f 	andeq.w	r4, r4, #15
 8023996:	1124      	asrne	r4, r4, #4
 8023998:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802399c:	b2e4      	uxtb	r4, r4
 802399e:	3501      	adds	r5, #1
 80239a0:	f100 808a 	bmi.w	8023ab8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80239a4:	45a9      	cmp	r9, r5
 80239a6:	f340 8087 	ble.w	8023ab8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80239aa:	f1bc 0f00 	cmp.w	ip, #0
 80239ae:	f000 8086 	beq.w	8023abe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80239b2:	2800      	cmp	r0, #0
 80239b4:	db7e      	blt.n	8023ab4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80239b6:	4580      	cmp	r8, r0
 80239b8:	dd7c      	ble.n	8023ab4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80239ba:	eb03 090e 	add.w	r9, r3, lr
 80239be:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80239c2:	f019 0f01 	tst.w	r9, #1
 80239c6:	5d55      	ldrb	r5, [r2, r5]
 80239c8:	bf0c      	ite	eq
 80239ca:	f005 050f 	andeq.w	r5, r5, #15
 80239ce:	112d      	asrne	r5, r5, #4
 80239d0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80239d4:	b2ed      	uxtb	r5, r5
 80239d6:	3001      	adds	r0, #1
 80239d8:	d474      	bmi.n	8023ac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80239da:	4580      	cmp	r8, r0
 80239dc:	dd72      	ble.n	8023ac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80239de:	2f00      	cmp	r7, #0
 80239e0:	d072      	beq.n	8023ac8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80239e2:	3301      	adds	r3, #1
 80239e4:	449e      	add	lr, r3
 80239e6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80239ea:	f01e 0f01 	tst.w	lr, #1
 80239ee:	5cd0      	ldrb	r0, [r2, r3]
 80239f0:	bf0c      	ite	eq
 80239f2:	f000 000f 	andeq.w	r0, r0, #15
 80239f6:	1100      	asrne	r0, r0, #4
 80239f8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80239fc:	b2c3      	uxtb	r3, r0
 80239fe:	b2ba      	uxth	r2, r7
 8023a00:	fa1f fc8c 	uxth.w	ip, ip
 8023a04:	fb02 f00c 	mul.w	r0, r2, ip
 8023a08:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8023a0c:	0112      	lsls	r2, r2, #4
 8023a0e:	fa1f fc8c 	uxth.w	ip, ip
 8023a12:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8023a16:	1a12      	subs	r2, r2, r0
 8023a18:	eba7 070c 	sub.w	r7, r7, ip
 8023a1c:	b292      	uxth	r2, r2
 8023a1e:	b2bf      	uxth	r7, r7
 8023a20:	4362      	muls	r2, r4
 8023a22:	fb06 2207 	mla	r2, r6, r7, r2
 8023a26:	fb0c 2505 	mla	r5, ip, r5, r2
 8023a2a:	fb00 5303 	mla	r3, r0, r3, r5
 8023a2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023a32:	b3a3      	cbz	r3, 8023a9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8023a34:	4a25      	ldr	r2, [pc, #148]	; (8023acc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8023a36:	880e      	ldrh	r6, [r1, #0]
 8023a38:	6815      	ldr	r5, [r2, #0]
 8023a3a:	1234      	asrs	r4, r6, #8
 8023a3c:	b29a      	uxth	r2, r3
 8023a3e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8023a42:	43db      	mvns	r3, r3
 8023a44:	b2db      	uxtb	r3, r3
 8023a46:	fb10 f002 	smulbb	r0, r0, r2
 8023a4a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023a4e:	fb04 0403 	mla	r4, r4, r3, r0
 8023a52:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8023a56:	10f0      	asrs	r0, r6, #3
 8023a58:	b2ed      	uxtb	r5, r5
 8023a5a:	00f6      	lsls	r6, r6, #3
 8023a5c:	fb17 f702 	smulbb	r7, r7, r2
 8023a60:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023a64:	fb15 f202 	smulbb	r2, r5, r2
 8023a68:	b2f6      	uxtb	r6, r6
 8023a6a:	b2a4      	uxth	r4, r4
 8023a6c:	fb00 7003 	mla	r0, r0, r3, r7
 8023a70:	fb06 2303 	mla	r3, r6, r3, r2
 8023a74:	b29a      	uxth	r2, r3
 8023a76:	1c63      	adds	r3, r4, #1
 8023a78:	b280      	uxth	r0, r0
 8023a7a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023a7e:	1c53      	adds	r3, r2, #1
 8023a80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a84:	1c42      	adds	r2, r0, #1
 8023a86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023a8a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023a8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a92:	0940      	lsrs	r0, r0, #5
 8023a94:	4323      	orrs	r3, r4
 8023a96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a9a:	4303      	orrs	r3, r0
 8023a9c:	800b      	strh	r3, [r1, #0]
 8023a9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023aa2:	2600      	movs	r6, #0
 8023aa4:	e764      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8023aa6:	2400      	movs	r4, #0
 8023aa8:	4626      	mov	r6, r4
 8023aaa:	e778      	b.n	802399e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023aac:	2400      	movs	r4, #0
 8023aae:	e776      	b.n	802399e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023ab0:	463c      	mov	r4, r7
 8023ab2:	e774      	b.n	802399e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023ab4:	2500      	movs	r5, #0
 8023ab6:	e78e      	b.n	80239d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8023ab8:	2300      	movs	r3, #0
 8023aba:	461d      	mov	r5, r3
 8023abc:	e79f      	b.n	80239fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023abe:	4663      	mov	r3, ip
 8023ac0:	4665      	mov	r5, ip
 8023ac2:	e79c      	b.n	80239fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023ac4:	2300      	movs	r3, #0
 8023ac6:	e79a      	b.n	80239fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023ac8:	463b      	mov	r3, r7
 8023aca:	e798      	b.n	80239fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023acc:	20002c94 	.word	0x20002c94

08023ad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ad4:	b093      	sub	sp, #76	; 0x4c
 8023ad6:	461d      	mov	r5, r3
 8023ad8:	920c      	str	r2, [sp, #48]	; 0x30
 8023ada:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023adc:	9107      	str	r1, [sp, #28]
 8023ade:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023ae2:	9011      	str	r0, [sp, #68]	; 0x44
 8023ae4:	6850      	ldr	r0, [r2, #4]
 8023ae6:	6812      	ldr	r2, [r2, #0]
 8023ae8:	fb00 1303 	mla	r3, r0, r3, r1
 8023aec:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023af0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023af2:	689b      	ldr	r3, [r3, #8]
 8023af4:	3301      	adds	r3, #1
 8023af6:	f023 0301 	bic.w	r3, r3, #1
 8023afa:	9306      	str	r3, [sp, #24]
 8023afc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023afe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023b02:	681f      	ldr	r7, [r3, #0]
 8023b04:	9b07      	ldr	r3, [sp, #28]
 8023b06:	2b00      	cmp	r3, #0
 8023b08:	dc03      	bgt.n	8023b12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8023b0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023b0c:	2b00      	cmp	r3, #0
 8023b0e:	f340 8267 	ble.w	8023fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023b12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b1c:	1e48      	subs	r0, r1, #1
 8023b1e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023b22:	2d00      	cmp	r5, #0
 8023b24:	f340 80b8 	ble.w	8023c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023b28:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023b2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023b30:	d406      	bmi.n	8023b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b32:	4586      	cmp	lr, r0
 8023b34:	da04      	bge.n	8023b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b36:	2b00      	cmp	r3, #0
 8023b38:	db02      	blt.n	8023b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b3a:	4563      	cmp	r3, ip
 8023b3c:	f2c0 80ad 	blt.w	8023c9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8023b40:	f11e 0e01 	adds.w	lr, lr, #1
 8023b44:	f100 80a0 	bmi.w	8023c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023b48:	4571      	cmp	r1, lr
 8023b4a:	f2c0 809d 	blt.w	8023c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023b4e:	3301      	adds	r3, #1
 8023b50:	f100 809a 	bmi.w	8023c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023b54:	429a      	cmp	r2, r3
 8023b56:	f2c0 8097 	blt.w	8023c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023b5a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8023b5e:	9509      	str	r5, [sp, #36]	; 0x24
 8023b60:	46c8      	mov	r8, r9
 8023b62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b64:	2b00      	cmp	r3, #0
 8023b66:	f340 80b6 	ble.w	8023cd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023b6a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8023b6e:	9308      	str	r3, [sp, #32]
 8023b70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b72:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023b76:	1423      	asrs	r3, r4, #16
 8023b78:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023b7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023b80:	f100 813e 	bmi.w	8023e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023b84:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023b88:	455b      	cmp	r3, fp
 8023b8a:	f280 8139 	bge.w	8023e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023b8e:	2800      	cmp	r0, #0
 8023b90:	f2c0 8136 	blt.w	8023e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023b94:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023b98:	4558      	cmp	r0, fp
 8023b9a:	f280 8131 	bge.w	8023e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023b9e:	9a06      	ldr	r2, [sp, #24]
 8023ba0:	fb00 3302 	mla	r3, r0, r2, r3
 8023ba4:	0858      	lsrs	r0, r3, #1
 8023ba6:	07da      	lsls	r2, r3, #31
 8023ba8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023bac:	9a08      	ldr	r2, [sp, #32]
 8023bae:	bf54      	ite	pl
 8023bb0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023bb4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023bb8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023bbc:	fa5f fc8c 	uxtb.w	ip, ip
 8023bc0:	2a00      	cmp	r2, #0
 8023bc2:	f000 80cb 	beq.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023bc6:	1c58      	adds	r0, r3, #1
 8023bc8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023bcc:	07c0      	lsls	r0, r0, #31
 8023bce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023bd2:	bf54      	ite	pl
 8023bd4:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023bd8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023bdc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023be0:	fa5f fe8e 	uxtb.w	lr, lr
 8023be4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8023be8:	b1b9      	cbz	r1, 8023c1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023bea:	4453      	add	r3, sl
 8023bec:	0858      	lsrs	r0, r3, #1
 8023bee:	07da      	lsls	r2, r3, #31
 8023bf0:	5c38      	ldrb	r0, [r7, r0]
 8023bf2:	bf54      	ite	pl
 8023bf4:	f000 000f 	andpl.w	r0, r0, #15
 8023bf8:	1100      	asrmi	r0, r0, #4
 8023bfa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023bfe:	b2c0      	uxtb	r0, r0
 8023c00:	900a      	str	r0, [sp, #40]	; 0x28
 8023c02:	1c58      	adds	r0, r3, #1
 8023c04:	0843      	lsrs	r3, r0, #1
 8023c06:	07c2      	lsls	r2, r0, #31
 8023c08:	5cfb      	ldrb	r3, [r7, r3]
 8023c0a:	bf54      	ite	pl
 8023c0c:	f003 030f 	andpl.w	r3, r3, #15
 8023c10:	111b      	asrmi	r3, r3, #4
 8023c12:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023c16:	b2db      	uxtb	r3, r3
 8023c18:	930e      	str	r3, [sp, #56]	; 0x38
 8023c1a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8023c1e:	b289      	uxth	r1, r1
 8023c20:	fb02 f301 	mul.w	r3, r2, r1
 8023c24:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023c28:	0112      	lsls	r2, r2, #4
 8023c2a:	b289      	uxth	r1, r1
 8023c2c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023c30:	1a40      	subs	r0, r0, r1
 8023c32:	fa1f fe80 	uxth.w	lr, r0
 8023c36:	1ad2      	subs	r2, r2, r3
 8023c38:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023c3a:	b292      	uxth	r2, r2
 8023c3c:	4342      	muls	r2, r0
 8023c3e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8023c42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023c44:	fb01 c102 	mla	r1, r1, r2, ip
 8023c48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023c4a:	fb03 1302 	mla	r3, r3, r2, r1
 8023c4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023c52:	2bff      	cmp	r3, #255	; 0xff
 8023c54:	f040 8093 	bne.w	8023d7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023c58:	4bbe      	ldr	r3, [pc, #760]	; (8023f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023c5a:	681a      	ldr	r2, [r3, #0]
 8023c5c:	4bbe      	ldr	r3, [pc, #760]	; (8023f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023c5e:	0951      	lsrs	r1, r2, #5
 8023c60:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023c64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c68:	430b      	orrs	r3, r1
 8023c6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023c6e:	4313      	orrs	r3, r2
 8023c70:	f8a8 3000 	strh.w	r3, [r8]
 8023c74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c76:	441c      	add	r4, r3
 8023c78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c7a:	441e      	add	r6, r3
 8023c7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c7e:	3b01      	subs	r3, #1
 8023c80:	f108 0802 	add.w	r8, r8, #2
 8023c84:	9309      	str	r3, [sp, #36]	; 0x24
 8023c86:	e76c      	b.n	8023b62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c8a:	441c      	add	r4, r3
 8023c8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c8e:	3d01      	subs	r5, #1
 8023c90:	441e      	add	r6, r3
 8023c92:	f109 0902 	add.w	r9, r9, #2
 8023c96:	e744      	b.n	8023b22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8023c98:	d021      	beq.n	8023cde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023c9a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023c9c:	1e6b      	subs	r3, r5, #1
 8023c9e:	fb00 4003 	mla	r0, r0, r3, r4
 8023ca2:	1400      	asrs	r0, r0, #16
 8023ca4:	f53f af59 	bmi.w	8023b5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023ca8:	3901      	subs	r1, #1
 8023caa:	4288      	cmp	r0, r1
 8023cac:	f6bf af55 	bge.w	8023b5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023cb0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023cb2:	fb01 6303 	mla	r3, r1, r3, r6
 8023cb6:	141b      	asrs	r3, r3, #16
 8023cb8:	f53f af4f 	bmi.w	8023b5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023cbc:	3a01      	subs	r2, #1
 8023cbe:	4293      	cmp	r3, r2
 8023cc0:	f6bf af4b 	bge.w	8023b5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023cc4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023cc8:	9308      	str	r3, [sp, #32]
 8023cca:	46a8      	mov	r8, r5
 8023ccc:	46ce      	mov	lr, r9
 8023cce:	f1b8 0f00 	cmp.w	r8, #0
 8023cd2:	f300 80b5 	bgt.w	8023e40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023cd6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023cda:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023cde:	9b07      	ldr	r3, [sp, #28]
 8023ce0:	2b00      	cmp	r3, #0
 8023ce2:	f340 817d 	ble.w	8023fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023ce6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023cea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023cee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023cf2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023cf4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023cf8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023cfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d00:	eef0 6a62 	vmov.f32	s13, s5
 8023d04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d10:	ee16 4a90 	vmov	r4, s13
 8023d14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d18:	eef0 6a43 	vmov.f32	s13, s6
 8023d1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d20:	ee12 2a90 	vmov	r2, s5
 8023d24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d28:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d2c:	ee13 2a10 	vmov	r2, s6
 8023d30:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d34:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d38:	9320      	str	r3, [sp, #128]	; 0x80
 8023d3a:	9b07      	ldr	r3, [sp, #28]
 8023d3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023d3e:	3b01      	subs	r3, #1
 8023d40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d44:	9307      	str	r3, [sp, #28]
 8023d46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d48:	ee16 6a90 	vmov	r6, s13
 8023d4c:	bf14      	ite	ne
 8023d4e:	461d      	movne	r5, r3
 8023d50:	4615      	moveq	r5, r2
 8023d52:	eeb0 3a67 	vmov.f32	s6, s15
 8023d56:	eef0 2a47 	vmov.f32	s5, s14
 8023d5a:	e6d3      	b.n	8023b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8023d5c:	2900      	cmp	r1, #0
 8023d5e:	f43f af5c 	beq.w	8023c1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023d62:	eb0a 0003 	add.w	r0, sl, r3
 8023d66:	0843      	lsrs	r3, r0, #1
 8023d68:	07c0      	lsls	r0, r0, #31
 8023d6a:	5cfb      	ldrb	r3, [r7, r3]
 8023d6c:	bf54      	ite	pl
 8023d6e:	f003 030f 	andpl.w	r3, r3, #15
 8023d72:	111b      	asrmi	r3, r3, #4
 8023d74:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023d78:	b2db      	uxtb	r3, r3
 8023d7a:	930a      	str	r3, [sp, #40]	; 0x28
 8023d7c:	e74d      	b.n	8023c1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023d7e:	2b00      	cmp	r3, #0
 8023d80:	f43f af78 	beq.w	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023d84:	4a73      	ldr	r2, [pc, #460]	; (8023f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023d86:	f8b8 c000 	ldrh.w	ip, [r8]
 8023d8a:	6810      	ldr	r0, [r2, #0]
 8023d8c:	fa1f fe83 	uxth.w	lr, r3
 8023d90:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023d94:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023d98:	43db      	mvns	r3, r3
 8023d9a:	b2db      	uxtb	r3, r3
 8023d9c:	fb12 f20e 	smulbb	r2, r2, lr
 8023da0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023da4:	fb01 2103 	mla	r1, r1, r3, r2
 8023da8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023dac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023db0:	b2c0      	uxtb	r0, r0
 8023db2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023db6:	fb1b fb0e 	smulbb	fp, fp, lr
 8023dba:	b289      	uxth	r1, r1
 8023dbc:	fb10 fe0e 	smulbb	lr, r0, lr
 8023dc0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023dc4:	fa5f fc8c 	uxtb.w	ip, ip
 8023dc8:	fb02 b203 	mla	r2, r2, r3, fp
 8023dcc:	1c48      	adds	r0, r1, #1
 8023dce:	fb0c e303 	mla	r3, ip, r3, lr
 8023dd2:	b292      	uxth	r2, r2
 8023dd4:	b29b      	uxth	r3, r3
 8023dd6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023dda:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8023dde:	f102 0b01 	add.w	fp, r2, #1
 8023de2:	1c59      	adds	r1, r3, #1
 8023de4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023de8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023dec:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023df0:	0952      	lsrs	r2, r2, #5
 8023df2:	4301      	orrs	r1, r0
 8023df4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023df8:	4311      	orrs	r1, r2
 8023dfa:	f8a8 1000 	strh.w	r1, [r8]
 8023dfe:	e739      	b.n	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e00:	f113 0b01 	adds.w	fp, r3, #1
 8023e04:	f53f af36 	bmi.w	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e08:	45dc      	cmp	ip, fp
 8023e0a:	f6ff af33 	blt.w	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e0e:	f110 0b01 	adds.w	fp, r0, #1
 8023e12:	f53f af2f 	bmi.w	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e16:	45de      	cmp	lr, fp
 8023e18:	f6ff af2c 	blt.w	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e1c:	9a08      	ldr	r2, [sp, #32]
 8023e1e:	9302      	str	r3, [sp, #8]
 8023e20:	fa0f f38e 	sxth.w	r3, lr
 8023e24:	9301      	str	r3, [sp, #4]
 8023e26:	fa0f f38c 	sxth.w	r3, ip
 8023e2a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023e2e:	9105      	str	r1, [sp, #20]
 8023e30:	9300      	str	r3, [sp, #0]
 8023e32:	463a      	mov	r2, r7
 8023e34:	4653      	mov	r3, sl
 8023e36:	4641      	mov	r1, r8
 8023e38:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023e3a:	f7ff fd73 	bl	8023924 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8023e3e:	e719      	b.n	8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e40:	9906      	ldr	r1, [sp, #24]
 8023e42:	1422      	asrs	r2, r4, #16
 8023e44:	1433      	asrs	r3, r6, #16
 8023e46:	fb01 2303 	mla	r3, r1, r3, r2
 8023e4a:	085a      	lsrs	r2, r3, #1
 8023e4c:	07d9      	lsls	r1, r3, #31
 8023e4e:	5cba      	ldrb	r2, [r7, r2]
 8023e50:	bf54      	ite	pl
 8023e52:	f002 020f 	andpl.w	r2, r2, #15
 8023e56:	1112      	asrmi	r2, r2, #4
 8023e58:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023e5c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023e60:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023e64:	b2d2      	uxtb	r2, r2
 8023e66:	2800      	cmp	r0, #0
 8023e68:	d062      	beq.n	8023f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8023e6a:	f103 0a01 	add.w	sl, r3, #1
 8023e6e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8023e72:	f01a 0f01 	tst.w	sl, #1
 8023e76:	5c79      	ldrb	r1, [r7, r1]
 8023e78:	bf0c      	ite	eq
 8023e7a:	f001 010f 	andeq.w	r1, r1, #15
 8023e7e:	1109      	asrne	r1, r1, #4
 8023e80:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023e84:	b2c9      	uxtb	r1, r1
 8023e86:	910f      	str	r1, [sp, #60]	; 0x3c
 8023e88:	f1bc 0f00 	cmp.w	ip, #0
 8023e8c:	d019      	beq.n	8023ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023e8e:	9908      	ldr	r1, [sp, #32]
 8023e90:	440b      	add	r3, r1
 8023e92:	0859      	lsrs	r1, r3, #1
 8023e94:	f013 0f01 	tst.w	r3, #1
 8023e98:	5c79      	ldrb	r1, [r7, r1]
 8023e9a:	bf0c      	ite	eq
 8023e9c:	f001 010f 	andeq.w	r1, r1, #15
 8023ea0:	1109      	asrne	r1, r1, #4
 8023ea2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023ea6:	b2c9      	uxtb	r1, r1
 8023ea8:	3301      	adds	r3, #1
 8023eaa:	910b      	str	r1, [sp, #44]	; 0x2c
 8023eac:	0859      	lsrs	r1, r3, #1
 8023eae:	07db      	lsls	r3, r3, #31
 8023eb0:	5c79      	ldrb	r1, [r7, r1]
 8023eb2:	bf54      	ite	pl
 8023eb4:	f001 010f 	andpl.w	r1, r1, #15
 8023eb8:	1109      	asrmi	r1, r1, #4
 8023eba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023ebe:	b2c9      	uxtb	r1, r1
 8023ec0:	9110      	str	r1, [sp, #64]	; 0x40
 8023ec2:	b280      	uxth	r0, r0
 8023ec4:	fa1f fc8c 	uxth.w	ip, ip
 8023ec8:	fb00 f30c 	mul.w	r3, r0, ip
 8023ecc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8023ed0:	0100      	lsls	r0, r0, #4
 8023ed2:	fa1f fc8c 	uxth.w	ip, ip
 8023ed6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8023eda:	eba1 010c 	sub.w	r1, r1, ip
 8023ede:	fa1f fa81 	uxth.w	sl, r1
 8023ee2:	1ac0      	subs	r0, r0, r3
 8023ee4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023ee6:	b280      	uxth	r0, r0
 8023ee8:	4348      	muls	r0, r1
 8023eea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023eec:	fb02 020a 	mla	r2, r2, sl, r0
 8023ef0:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023ef4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023ef6:	fb03 c302 	mla	r3, r3, r2, ip
 8023efa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023efe:	2bff      	cmp	r3, #255	; 0xff
 8023f00:	d12c      	bne.n	8023f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8023f02:	4b14      	ldr	r3, [pc, #80]	; (8023f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023f04:	681a      	ldr	r2, [r3, #0]
 8023f06:	4b14      	ldr	r3, [pc, #80]	; (8023f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023f08:	0951      	lsrs	r1, r2, #5
 8023f0a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023f0e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023f12:	430b      	orrs	r3, r1
 8023f14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023f18:	4313      	orrs	r3, r2
 8023f1a:	f8ae 3000 	strh.w	r3, [lr]
 8023f1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023f20:	441c      	add	r4, r3
 8023f22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f24:	f10e 0e02 	add.w	lr, lr, #2
 8023f28:	441e      	add	r6, r3
 8023f2a:	f108 38ff 	add.w	r8, r8, #4294967295
 8023f2e:	e6ce      	b.n	8023cce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8023f30:	f1bc 0f00 	cmp.w	ip, #0
 8023f34:	d0c5      	beq.n	8023ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023f36:	9908      	ldr	r1, [sp, #32]
 8023f38:	440b      	add	r3, r1
 8023f3a:	0859      	lsrs	r1, r3, #1
 8023f3c:	07db      	lsls	r3, r3, #31
 8023f3e:	5c79      	ldrb	r1, [r7, r1]
 8023f40:	bf54      	ite	pl
 8023f42:	f001 010f 	andpl.w	r1, r1, #15
 8023f46:	1109      	asrmi	r1, r1, #4
 8023f48:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023f4c:	b2c9      	uxtb	r1, r1
 8023f4e:	910b      	str	r1, [sp, #44]	; 0x2c
 8023f50:	e7b7      	b.n	8023ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023f52:	bf00      	nop
 8023f54:	20002c94 	.word	0x20002c94
 8023f58:	fffff800 	.word	0xfffff800
 8023f5c:	2b00      	cmp	r3, #0
 8023f5e:	d0de      	beq.n	8023f1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023f60:	4a21      	ldr	r2, [pc, #132]	; (8023fe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8023f62:	f8be c000 	ldrh.w	ip, [lr]
 8023f66:	6810      	ldr	r0, [r2, #0]
 8023f68:	fa1f fa83 	uxth.w	sl, r3
 8023f6c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023f70:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023f74:	43db      	mvns	r3, r3
 8023f76:	b2db      	uxtb	r3, r3
 8023f78:	fb12 f20a 	smulbb	r2, r2, sl
 8023f7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023f80:	fb01 2103 	mla	r1, r1, r3, r2
 8023f84:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023f88:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023f8c:	b2c0      	uxtb	r0, r0
 8023f8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023f92:	fa5f fc8c 	uxtb.w	ip, ip
 8023f96:	fb10 f00a 	smulbb	r0, r0, sl
 8023f9a:	fb0c 0003 	mla	r0, ip, r3, r0
 8023f9e:	b289      	uxth	r1, r1
 8023fa0:	fb1b fb0a 	smulbb	fp, fp, sl
 8023fa4:	b280      	uxth	r0, r0
 8023fa6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023faa:	fb02 b203 	mla	r2, r2, r3, fp
 8023fae:	1c4b      	adds	r3, r1, #1
 8023fb0:	f100 0b01 	add.w	fp, r0, #1
 8023fb4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023fb8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8023fbc:	b292      	uxth	r2, r2
 8023fbe:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8023fc2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023fc6:	ea4b 0101 	orr.w	r1, fp, r1
 8023fca:	f102 0b01 	add.w	fp, r2, #1
 8023fce:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023fd2:	0952      	lsrs	r2, r2, #5
 8023fd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fd8:	4311      	orrs	r1, r2
 8023fda:	f8ae 1000 	strh.w	r1, [lr]
 8023fde:	e79e      	b.n	8023f1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023fe0:	b013      	add	sp, #76	; 0x4c
 8023fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fe6:	bf00      	nop
 8023fe8:	20002c94 	.word	0x20002c94

08023fec <CRC_Lock>:
 8023fec:	b530      	push	{r4, r5, lr}
 8023fee:	4a20      	ldr	r2, [pc, #128]	; (8024070 <CRC_Lock+0x84>)
 8023ff0:	6813      	ldr	r3, [r2, #0]
 8023ff2:	f023 0301 	bic.w	r3, r3, #1
 8023ff6:	6013      	str	r3, [r2, #0]
 8023ff8:	4b1e      	ldr	r3, [pc, #120]	; (8024074 <CRC_Lock+0x88>)
 8023ffa:	681a      	ldr	r2, [r3, #0]
 8023ffc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8024000:	4022      	ands	r2, r4
 8024002:	f24c 2540 	movw	r5, #49728	; 0xc240
 8024006:	42aa      	cmp	r2, r5
 8024008:	d005      	beq.n	8024016 <CRC_Lock+0x2a>
 802400a:	681b      	ldr	r3, [r3, #0]
 802400c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8024010:	4023      	ands	r3, r4
 8024012:	4293      	cmp	r3, r2
 8024014:	d124      	bne.n	8024060 <CRC_Lock+0x74>
 8024016:	4b18      	ldr	r3, [pc, #96]	; (8024078 <CRC_Lock+0x8c>)
 8024018:	681b      	ldr	r3, [r3, #0]
 802401a:	bb0b      	cbnz	r3, 8024060 <CRC_Lock+0x74>
 802401c:	4b17      	ldr	r3, [pc, #92]	; (802407c <CRC_Lock+0x90>)
 802401e:	681a      	ldr	r2, [r3, #0]
 8024020:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8024024:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8024028:	d00d      	beq.n	8024046 <CRC_Lock+0x5a>
 802402a:	681a      	ldr	r2, [r3, #0]
 802402c:	f240 4483 	movw	r4, #1155	; 0x483
 8024030:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8024034:	42a2      	cmp	r2, r4
 8024036:	d006      	beq.n	8024046 <CRC_Lock+0x5a>
 8024038:	681b      	ldr	r3, [r3, #0]
 802403a:	f240 4285 	movw	r2, #1157	; 0x485
 802403e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8024042:	4293      	cmp	r3, r2
 8024044:	d10c      	bne.n	8024060 <CRC_Lock+0x74>
 8024046:	4b0e      	ldr	r3, [pc, #56]	; (8024080 <CRC_Lock+0x94>)
 8024048:	2201      	movs	r2, #1
 802404a:	601a      	str	r2, [r3, #0]
 802404c:	681a      	ldr	r2, [r3, #0]
 802404e:	2a00      	cmp	r2, #0
 8024050:	d1fc      	bne.n	802404c <CRC_Lock+0x60>
 8024052:	4b0c      	ldr	r3, [pc, #48]	; (8024084 <CRC_Lock+0x98>)
 8024054:	6018      	str	r0, [r3, #0]
 8024056:	6818      	ldr	r0, [r3, #0]
 8024058:	1a43      	subs	r3, r0, r1
 802405a:	4258      	negs	r0, r3
 802405c:	4158      	adcs	r0, r3
 802405e:	bd30      	pop	{r4, r5, pc}
 8024060:	4b09      	ldr	r3, [pc, #36]	; (8024088 <CRC_Lock+0x9c>)
 8024062:	2201      	movs	r2, #1
 8024064:	601a      	str	r2, [r3, #0]
 8024066:	681a      	ldr	r2, [r3, #0]
 8024068:	2a00      	cmp	r2, #0
 802406a:	d1fc      	bne.n	8024066 <CRC_Lock+0x7a>
 802406c:	4b07      	ldr	r3, [pc, #28]	; (802408c <CRC_Lock+0xa0>)
 802406e:	e7f1      	b.n	8024054 <CRC_Lock+0x68>
 8024070:	e0002000 	.word	0xe0002000
 8024074:	e000ed00 	.word	0xe000ed00
 8024078:	e0042000 	.word	0xe0042000
 802407c:	5c001000 	.word	0x5c001000
 8024080:	58024c08 	.word	0x58024c08
 8024084:	58024c00 	.word	0x58024c00
 8024088:	40023008 	.word	0x40023008
 802408c:	40023000 	.word	0x40023000

08024090 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8024090:	6101      	str	r1, [r0, #16]
 8024092:	4770      	bx	lr

08024094 <_ZN8touchgfx8Gestures4tickEv>:
 8024094:	7b83      	ldrb	r3, [r0, #14]
 8024096:	b14b      	cbz	r3, 80240ac <_ZN8touchgfx8Gestures4tickEv+0x18>
 8024098:	8903      	ldrh	r3, [r0, #8]
 802409a:	3301      	adds	r3, #1
 802409c:	b29b      	uxth	r3, r3
 802409e:	2b07      	cmp	r3, #7
 80240a0:	8103      	strh	r3, [r0, #8]
 80240a2:	bf81      	itttt	hi
 80240a4:	2300      	movhi	r3, #0
 80240a6:	8143      	strhhi	r3, [r0, #10]
 80240a8:	8183      	strhhi	r3, [r0, #12]
 80240aa:	7383      	strbhi	r3, [r0, #14]
 80240ac:	4770      	bx	lr
	...

080240b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80240b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80240b4:	4698      	mov	r8, r3
 80240b6:	8883      	ldrh	r3, [r0, #4]
 80240b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80240bc:	eba8 0303 	sub.w	r3, r8, r3
 80240c0:	b21b      	sxth	r3, r3
 80240c2:	4604      	mov	r4, r0
 80240c4:	2b00      	cmp	r3, #0
 80240c6:	4617      	mov	r7, r2
 80240c8:	4a18      	ldr	r2, [pc, #96]	; (802412c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80240ca:	9200      	str	r2, [sp, #0]
 80240cc:	bfb8      	it	lt
 80240ce:	425b      	neglt	r3, r3
 80240d0:	8aa2      	ldrh	r2, [r4, #20]
 80240d2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80240d6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80240da:	b21b      	sxth	r3, r3
 80240dc:	460e      	mov	r6, r1
 80240de:	4293      	cmp	r3, r2
 80240e0:	88c1      	ldrh	r1, [r0, #6]
 80240e2:	f8ad 1008 	strh.w	r1, [sp, #8]
 80240e6:	f04f 0000 	mov.w	r0, #0
 80240ea:	f88d 0004 	strb.w	r0, [sp, #4]
 80240ee:	f8ad 500c 	strh.w	r5, [sp, #12]
 80240f2:	dc07      	bgt.n	8024104 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80240f4:	1a69      	subs	r1, r5, r1
 80240f6:	b209      	sxth	r1, r1
 80240f8:	2900      	cmp	r1, #0
 80240fa:	bfb8      	it	lt
 80240fc:	4249      	neglt	r1, r1
 80240fe:	b209      	sxth	r1, r1
 8024100:	428a      	cmp	r2, r1
 8024102:	da10      	bge.n	8024126 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8024104:	6920      	ldr	r0, [r4, #16]
 8024106:	6803      	ldr	r3, [r0, #0]
 8024108:	4669      	mov	r1, sp
 802410a:	685b      	ldr	r3, [r3, #4]
 802410c:	4798      	blx	r3
 802410e:	eba8 0606 	sub.w	r6, r8, r6
 8024112:	2300      	movs	r3, #0
 8024114:	1bef      	subs	r7, r5, r7
 8024116:	2001      	movs	r0, #1
 8024118:	8123      	strh	r3, [r4, #8]
 802411a:	8166      	strh	r6, [r4, #10]
 802411c:	81a7      	strh	r7, [r4, #12]
 802411e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8024122:	80e5      	strh	r5, [r4, #6]
 8024124:	73a0      	strb	r0, [r4, #14]
 8024126:	b004      	add	sp, #16
 8024128:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802412c:	08028ad4 	.word	0x08028ad4

08024130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8024130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024132:	461e      	mov	r6, r3
 8024134:	1e4b      	subs	r3, r1, #1
 8024136:	2b01      	cmp	r3, #1
 8024138:	b085      	sub	sp, #20
 802413a:	4604      	mov	r4, r0
 802413c:	460d      	mov	r5, r1
 802413e:	4617      	mov	r7, r2
 8024140:	d84b      	bhi.n	80241da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8024142:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8024146:	1cd3      	adds	r3, r2, #3
 8024148:	b29b      	uxth	r3, r3
 802414a:	2b06      	cmp	r3, #6
 802414c:	d916      	bls.n	802417c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802414e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80241f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8024152:	f8cd c004 	str.w	ip, [sp, #4]
 8024156:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802415a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802415e:	6900      	ldr	r0, [r0, #16]
 8024160:	f8ad 100c 	strh.w	r1, [sp, #12]
 8024164:	f04f 0c00 	mov.w	ip, #0
 8024168:	f88d c008 	strb.w	ip, [sp, #8]
 802416c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8024170:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024174:	6803      	ldr	r3, [r0, #0]
 8024176:	a901      	add	r1, sp, #4
 8024178:	689b      	ldr	r3, [r3, #8]
 802417a:	4798      	blx	r3
 802417c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024180:	1cd3      	adds	r3, r2, #3
 8024182:	b29b      	uxth	r3, r3
 8024184:	2b06      	cmp	r3, #6
 8024186:	d916      	bls.n	80241b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024188:	f8df c064 	ldr.w	ip, [pc, #100]	; 80241f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802418c:	f8cd c004 	str.w	ip, [sp, #4]
 8024190:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024194:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8024198:	6920      	ldr	r0, [r4, #16]
 802419a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802419e:	f04f 0c01 	mov.w	ip, #1
 80241a2:	f88d c008 	strb.w	ip, [sp, #8]
 80241a6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80241aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80241ae:	6803      	ldr	r3, [r0, #0]
 80241b0:	a901      	add	r1, sp, #4
 80241b2:	689b      	ldr	r3, [r3, #8]
 80241b4:	4798      	blx	r3
 80241b6:	4b0d      	ldr	r3, [pc, #52]	; (80241ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80241b8:	9301      	str	r3, [sp, #4]
 80241ba:	6920      	ldr	r0, [r4, #16]
 80241bc:	f88d 5008 	strb.w	r5, [sp, #8]
 80241c0:	2300      	movs	r3, #0
 80241c2:	f8ad 700a 	strh.w	r7, [sp, #10]
 80241c6:	f8ad 600c 	strh.w	r6, [sp, #12]
 80241ca:	f8ad 300e 	strh.w	r3, [sp, #14]
 80241ce:	6803      	ldr	r3, [r0, #0]
 80241d0:	a901      	add	r1, sp, #4
 80241d2:	681b      	ldr	r3, [r3, #0]
 80241d4:	4798      	blx	r3
 80241d6:	b005      	add	sp, #20
 80241d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80241da:	2900      	cmp	r1, #0
 80241dc:	d1eb      	bne.n	80241b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80241de:	80a2      	strh	r2, [r4, #4]
 80241e0:	80c6      	strh	r6, [r0, #6]
 80241e2:	60a1      	str	r1, [r4, #8]
 80241e4:	81a1      	strh	r1, [r4, #12]
 80241e6:	73a1      	strb	r1, [r4, #14]
 80241e8:	e7e5      	b.n	80241b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80241ea:	bf00      	nop
 80241ec:	08028ac0 	.word	0x08028ac0
 80241f0:	08028ae8 	.word	0x08028ae8

080241f4 <__aeabi_atexit>:
 80241f4:	460b      	mov	r3, r1
 80241f6:	4601      	mov	r1, r0
 80241f8:	4618      	mov	r0, r3
 80241fa:	f000 be43 	b.w	8024e84 <__cxa_atexit>

080241fe <_ZdlPvj>:
 80241fe:	f000 b812 	b.w	8024226 <_ZdlPv>

08024202 <__cxa_guard_acquire>:
 8024202:	6803      	ldr	r3, [r0, #0]
 8024204:	07db      	lsls	r3, r3, #31
 8024206:	d406      	bmi.n	8024216 <__cxa_guard_acquire+0x14>
 8024208:	7843      	ldrb	r3, [r0, #1]
 802420a:	b103      	cbz	r3, 802420e <__cxa_guard_acquire+0xc>
 802420c:	deff      	udf	#255	; 0xff
 802420e:	2301      	movs	r3, #1
 8024210:	7043      	strb	r3, [r0, #1]
 8024212:	4618      	mov	r0, r3
 8024214:	4770      	bx	lr
 8024216:	2000      	movs	r0, #0
 8024218:	4770      	bx	lr

0802421a <__cxa_guard_release>:
 802421a:	2301      	movs	r3, #1
 802421c:	6003      	str	r3, [r0, #0]
 802421e:	4770      	bx	lr

08024220 <__cxa_pure_virtual>:
 8024220:	b508      	push	{r3, lr}
 8024222:	f000 f80f 	bl	8024244 <_ZSt9terminatev>

08024226 <_ZdlPv>:
 8024226:	f000 be7f 	b.w	8024f28 <free>

0802422a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802422a:	b508      	push	{r3, lr}
 802422c:	4780      	blx	r0
 802422e:	f000 fdfd 	bl	8024e2c <abort>
	...

08024234 <_ZSt13get_terminatev>:
 8024234:	4b02      	ldr	r3, [pc, #8]	; (8024240 <_ZSt13get_terminatev+0xc>)
 8024236:	6818      	ldr	r0, [r3, #0]
 8024238:	f3bf 8f5b 	dmb	ish
 802423c:	4770      	bx	lr
 802423e:	bf00      	nop
 8024240:	200001e8 	.word	0x200001e8

08024244 <_ZSt9terminatev>:
 8024244:	b508      	push	{r3, lr}
 8024246:	f7ff fff5 	bl	8024234 <_ZSt13get_terminatev>
 802424a:	f7ff ffee 	bl	802422a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08024250 <ceilf>:
 8024250:	ee10 3a10 	vmov	r3, s0
 8024254:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8024258:	3a7f      	subs	r2, #127	; 0x7f
 802425a:	2a16      	cmp	r2, #22
 802425c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8024260:	dc2a      	bgt.n	80242b8 <ceilf+0x68>
 8024262:	2a00      	cmp	r2, #0
 8024264:	da11      	bge.n	802428a <ceilf+0x3a>
 8024266:	eddf 7a19 	vldr	s15, [pc, #100]	; 80242cc <ceilf+0x7c>
 802426a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802426e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8024272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024276:	dd05      	ble.n	8024284 <ceilf+0x34>
 8024278:	2b00      	cmp	r3, #0
 802427a:	db23      	blt.n	80242c4 <ceilf+0x74>
 802427c:	2900      	cmp	r1, #0
 802427e:	bf18      	it	ne
 8024280:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8024284:	ee00 3a10 	vmov	s0, r3
 8024288:	4770      	bx	lr
 802428a:	4911      	ldr	r1, [pc, #68]	; (80242d0 <ceilf+0x80>)
 802428c:	4111      	asrs	r1, r2
 802428e:	420b      	tst	r3, r1
 8024290:	d0fa      	beq.n	8024288 <ceilf+0x38>
 8024292:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80242cc <ceilf+0x7c>
 8024296:	ee30 0a27 	vadd.f32	s0, s0, s15
 802429a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802429e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80242a2:	ddef      	ble.n	8024284 <ceilf+0x34>
 80242a4:	2b00      	cmp	r3, #0
 80242a6:	bfc2      	ittt	gt
 80242a8:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 80242ac:	fa40 f202 	asrgt.w	r2, r0, r2
 80242b0:	189b      	addgt	r3, r3, r2
 80242b2:	ea23 0301 	bic.w	r3, r3, r1
 80242b6:	e7e5      	b.n	8024284 <ceilf+0x34>
 80242b8:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80242bc:	d3e4      	bcc.n	8024288 <ceilf+0x38>
 80242be:	ee30 0a00 	vadd.f32	s0, s0, s0
 80242c2:	4770      	bx	lr
 80242c4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80242c8:	e7dc      	b.n	8024284 <ceilf+0x34>
 80242ca:	bf00      	nop
 80242cc:	7149f2ca 	.word	0x7149f2ca
 80242d0:	007fffff 	.word	0x007fffff

080242d4 <cosf>:
 80242d4:	ee10 3a10 	vmov	r3, s0
 80242d8:	b507      	push	{r0, r1, r2, lr}
 80242da:	4a1c      	ldr	r2, [pc, #112]	; (802434c <cosf+0x78>)
 80242dc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80242e0:	4293      	cmp	r3, r2
 80242e2:	dc04      	bgt.n	80242ee <cosf+0x1a>
 80242e4:	eddf 0a1a 	vldr	s1, [pc, #104]	; 8024350 <cosf+0x7c>
 80242e8:	f000 f9f4 	bl	80246d4 <__kernel_cosf>
 80242ec:	e004      	b.n	80242f8 <cosf+0x24>
 80242ee:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80242f2:	db04      	blt.n	80242fe <cosf+0x2a>
 80242f4:	ee30 0a40 	vsub.f32	s0, s0, s0
 80242f8:	b003      	add	sp, #12
 80242fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80242fe:	4668      	mov	r0, sp
 8024300:	f000 f8ac 	bl	802445c <__ieee754_rem_pio2f>
 8024304:	f000 0003 	and.w	r0, r0, #3
 8024308:	2801      	cmp	r0, #1
 802430a:	d007      	beq.n	802431c <cosf+0x48>
 802430c:	2802      	cmp	r0, #2
 802430e:	d00e      	beq.n	802432e <cosf+0x5a>
 8024310:	b9a0      	cbnz	r0, 802433c <cosf+0x68>
 8024312:	eddd 0a01 	vldr	s1, [sp, #4]
 8024316:	ed9d 0a00 	vldr	s0, [sp]
 802431a:	e7e5      	b.n	80242e8 <cosf+0x14>
 802431c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024320:	ed9d 0a00 	vldr	s0, [sp]
 8024324:	f000 fcc0 	bl	8024ca8 <__kernel_sinf>
 8024328:	eeb1 0a40 	vneg.f32	s0, s0
 802432c:	e7e4      	b.n	80242f8 <cosf+0x24>
 802432e:	eddd 0a01 	vldr	s1, [sp, #4]
 8024332:	ed9d 0a00 	vldr	s0, [sp]
 8024336:	f000 f9cd 	bl	80246d4 <__kernel_cosf>
 802433a:	e7f5      	b.n	8024328 <cosf+0x54>
 802433c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024340:	ed9d 0a00 	vldr	s0, [sp]
 8024344:	2001      	movs	r0, #1
 8024346:	f000 fcaf 	bl	8024ca8 <__kernel_sinf>
 802434a:	e7d5      	b.n	80242f8 <cosf+0x24>
 802434c:	3f490fd8 	.word	0x3f490fd8
 8024350:	00000000 	.word	0x00000000

08024354 <floorf>:
 8024354:	ee10 3a10 	vmov	r3, s0
 8024358:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802435c:	3a7f      	subs	r2, #127	; 0x7f
 802435e:	2a16      	cmp	r2, #22
 8024360:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8024364:	dc2a      	bgt.n	80243bc <floorf+0x68>
 8024366:	2a00      	cmp	r2, #0
 8024368:	da11      	bge.n	802438e <floorf+0x3a>
 802436a:	eddf 7a18 	vldr	s15, [pc, #96]	; 80243cc <floorf+0x78>
 802436e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024372:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8024376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802437a:	dd05      	ble.n	8024388 <floorf+0x34>
 802437c:	2b00      	cmp	r3, #0
 802437e:	da23      	bge.n	80243c8 <floorf+0x74>
 8024380:	4a13      	ldr	r2, [pc, #76]	; (80243d0 <floorf+0x7c>)
 8024382:	2900      	cmp	r1, #0
 8024384:	bf18      	it	ne
 8024386:	4613      	movne	r3, r2
 8024388:	ee00 3a10 	vmov	s0, r3
 802438c:	4770      	bx	lr
 802438e:	4911      	ldr	r1, [pc, #68]	; (80243d4 <floorf+0x80>)
 8024390:	4111      	asrs	r1, r2
 8024392:	420b      	tst	r3, r1
 8024394:	d0fa      	beq.n	802438c <floorf+0x38>
 8024396:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80243cc <floorf+0x78>
 802439a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802439e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80243a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80243a6:	ddef      	ble.n	8024388 <floorf+0x34>
 80243a8:	2b00      	cmp	r3, #0
 80243aa:	bfbe      	ittt	lt
 80243ac:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80243b0:	fa40 f202 	asrlt.w	r2, r0, r2
 80243b4:	189b      	addlt	r3, r3, r2
 80243b6:	ea23 0301 	bic.w	r3, r3, r1
 80243ba:	e7e5      	b.n	8024388 <floorf+0x34>
 80243bc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80243c0:	d3e4      	bcc.n	802438c <floorf+0x38>
 80243c2:	ee30 0a00 	vadd.f32	s0, s0, s0
 80243c6:	4770      	bx	lr
 80243c8:	2300      	movs	r3, #0
 80243ca:	e7dd      	b.n	8024388 <floorf+0x34>
 80243cc:	7149f2ca 	.word	0x7149f2ca
 80243d0:	bf800000 	.word	0xbf800000
 80243d4:	007fffff 	.word	0x007fffff

080243d8 <sinf>:
 80243d8:	ee10 3a10 	vmov	r3, s0
 80243dc:	b507      	push	{r0, r1, r2, lr}
 80243de:	4a1d      	ldr	r2, [pc, #116]	; (8024454 <sinf+0x7c>)
 80243e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80243e4:	4293      	cmp	r3, r2
 80243e6:	dc05      	bgt.n	80243f4 <sinf+0x1c>
 80243e8:	eddf 0a1b 	vldr	s1, [pc, #108]	; 8024458 <sinf+0x80>
 80243ec:	2000      	movs	r0, #0
 80243ee:	f000 fc5b 	bl	8024ca8 <__kernel_sinf>
 80243f2:	e004      	b.n	80243fe <sinf+0x26>
 80243f4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80243f8:	db04      	blt.n	8024404 <sinf+0x2c>
 80243fa:	ee30 0a40 	vsub.f32	s0, s0, s0
 80243fe:	b003      	add	sp, #12
 8024400:	f85d fb04 	ldr.w	pc, [sp], #4
 8024404:	4668      	mov	r0, sp
 8024406:	f000 f829 	bl	802445c <__ieee754_rem_pio2f>
 802440a:	f000 0003 	and.w	r0, r0, #3
 802440e:	2801      	cmp	r0, #1
 8024410:	d008      	beq.n	8024424 <sinf+0x4c>
 8024412:	2802      	cmp	r0, #2
 8024414:	d00d      	beq.n	8024432 <sinf+0x5a>
 8024416:	b9b0      	cbnz	r0, 8024446 <sinf+0x6e>
 8024418:	eddd 0a01 	vldr	s1, [sp, #4]
 802441c:	ed9d 0a00 	vldr	s0, [sp]
 8024420:	2001      	movs	r0, #1
 8024422:	e7e4      	b.n	80243ee <sinf+0x16>
 8024424:	eddd 0a01 	vldr	s1, [sp, #4]
 8024428:	ed9d 0a00 	vldr	s0, [sp]
 802442c:	f000 f952 	bl	80246d4 <__kernel_cosf>
 8024430:	e7e5      	b.n	80243fe <sinf+0x26>
 8024432:	eddd 0a01 	vldr	s1, [sp, #4]
 8024436:	ed9d 0a00 	vldr	s0, [sp]
 802443a:	2001      	movs	r0, #1
 802443c:	f000 fc34 	bl	8024ca8 <__kernel_sinf>
 8024440:	eeb1 0a40 	vneg.f32	s0, s0
 8024444:	e7db      	b.n	80243fe <sinf+0x26>
 8024446:	eddd 0a01 	vldr	s1, [sp, #4]
 802444a:	ed9d 0a00 	vldr	s0, [sp]
 802444e:	f000 f941 	bl	80246d4 <__kernel_cosf>
 8024452:	e7f5      	b.n	8024440 <sinf+0x68>
 8024454:	3f490fd8 	.word	0x3f490fd8
 8024458:	00000000 	.word	0x00000000

0802445c <__ieee754_rem_pio2f>:
 802445c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802445e:	ee10 6a10 	vmov	r6, s0
 8024462:	4b8e      	ldr	r3, [pc, #568]	; (802469c <__ieee754_rem_pio2f+0x240>)
 8024464:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8024468:	429d      	cmp	r5, r3
 802446a:	b087      	sub	sp, #28
 802446c:	eef0 7a40 	vmov.f32	s15, s0
 8024470:	4604      	mov	r4, r0
 8024472:	dc05      	bgt.n	8024480 <__ieee754_rem_pio2f+0x24>
 8024474:	2300      	movs	r3, #0
 8024476:	ed80 0a00 	vstr	s0, [r0]
 802447a:	6043      	str	r3, [r0, #4]
 802447c:	2000      	movs	r0, #0
 802447e:	e01a      	b.n	80244b6 <__ieee754_rem_pio2f+0x5a>
 8024480:	4b87      	ldr	r3, [pc, #540]	; (80246a0 <__ieee754_rem_pio2f+0x244>)
 8024482:	429d      	cmp	r5, r3
 8024484:	dc46      	bgt.n	8024514 <__ieee754_rem_pio2f+0xb8>
 8024486:	2e00      	cmp	r6, #0
 8024488:	ed9f 0a86 	vldr	s0, [pc, #536]	; 80246a4 <__ieee754_rem_pio2f+0x248>
 802448c:	4b86      	ldr	r3, [pc, #536]	; (80246a8 <__ieee754_rem_pio2f+0x24c>)
 802448e:	f025 050f 	bic.w	r5, r5, #15
 8024492:	dd1f      	ble.n	80244d4 <__ieee754_rem_pio2f+0x78>
 8024494:	429d      	cmp	r5, r3
 8024496:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802449a:	d00e      	beq.n	80244ba <__ieee754_rem_pio2f+0x5e>
 802449c:	ed9f 7a83 	vldr	s14, [pc, #524]	; 80246ac <__ieee754_rem_pio2f+0x250>
 80244a0:	ee37 0ac7 	vsub.f32	s0, s15, s14
 80244a4:	ee77 7ac0 	vsub.f32	s15, s15, s0
 80244a8:	ed80 0a00 	vstr	s0, [r0]
 80244ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80244b0:	2001      	movs	r0, #1
 80244b2:	edc4 7a01 	vstr	s15, [r4, #4]
 80244b6:	b007      	add	sp, #28
 80244b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80244ba:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 80246b0 <__ieee754_rem_pio2f+0x254>
 80244be:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 80246b4 <__ieee754_rem_pio2f+0x258>
 80244c2:	ee77 7ac0 	vsub.f32	s15, s15, s0
 80244c6:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80244ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80244ce:	edc0 6a00 	vstr	s13, [r0]
 80244d2:	e7eb      	b.n	80244ac <__ieee754_rem_pio2f+0x50>
 80244d4:	429d      	cmp	r5, r3
 80244d6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80244da:	d00e      	beq.n	80244fa <__ieee754_rem_pio2f+0x9e>
 80244dc:	ed9f 7a73 	vldr	s14, [pc, #460]	; 80246ac <__ieee754_rem_pio2f+0x250>
 80244e0:	ee37 0a87 	vadd.f32	s0, s15, s14
 80244e4:	ee77 7ac0 	vsub.f32	s15, s15, s0
 80244e8:	ed80 0a00 	vstr	s0, [r0]
 80244ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80244f0:	f04f 30ff 	mov.w	r0, #4294967295
 80244f4:	edc4 7a01 	vstr	s15, [r4, #4]
 80244f8:	e7dd      	b.n	80244b6 <__ieee754_rem_pio2f+0x5a>
 80244fa:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 80246b0 <__ieee754_rem_pio2f+0x254>
 80244fe:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 80246b4 <__ieee754_rem_pio2f+0x258>
 8024502:	ee77 7a80 	vadd.f32	s15, s15, s0
 8024506:	ee77 6a87 	vadd.f32	s13, s15, s14
 802450a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802450e:	edc0 6a00 	vstr	s13, [r0]
 8024512:	e7eb      	b.n	80244ec <__ieee754_rem_pio2f+0x90>
 8024514:	4b68      	ldr	r3, [pc, #416]	; (80246b8 <__ieee754_rem_pio2f+0x25c>)
 8024516:	429d      	cmp	r5, r3
 8024518:	dc72      	bgt.n	8024600 <__ieee754_rem_pio2f+0x1a4>
 802451a:	f000 fc0d 	bl	8024d38 <fabsf>
 802451e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 80246bc <__ieee754_rem_pio2f+0x260>
 8024522:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8024526:	eee0 7a07 	vfma.f32	s15, s0, s14
 802452a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802452e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024532:	ee17 0a90 	vmov	r0, s15
 8024536:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80246a4 <__ieee754_rem_pio2f+0x248>
 802453a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802453e:	281f      	cmp	r0, #31
 8024540:	eddf 7a5a 	vldr	s15, [pc, #360]	; 80246ac <__ieee754_rem_pio2f+0x250>
 8024544:	ee67 7a27 	vmul.f32	s15, s14, s15
 8024548:	eeb1 6a47 	vneg.f32	s12, s14
 802454c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8024550:	ee16 2a90 	vmov	r2, s13
 8024554:	dc1c      	bgt.n	8024590 <__ieee754_rem_pio2f+0x134>
 8024556:	495a      	ldr	r1, [pc, #360]	; (80246c0 <__ieee754_rem_pio2f+0x264>)
 8024558:	1e47      	subs	r7, r0, #1
 802455a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802455e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024562:	428b      	cmp	r3, r1
 8024564:	d014      	beq.n	8024590 <__ieee754_rem_pio2f+0x134>
 8024566:	6022      	str	r2, [r4, #0]
 8024568:	ed94 7a00 	vldr	s14, [r4]
 802456c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8024570:	2e00      	cmp	r6, #0
 8024572:	ee30 0a67 	vsub.f32	s0, s0, s15
 8024576:	ed84 0a01 	vstr	s0, [r4, #4]
 802457a:	da9c      	bge.n	80244b6 <__ieee754_rem_pio2f+0x5a>
 802457c:	eeb1 7a47 	vneg.f32	s14, s14
 8024580:	eeb1 0a40 	vneg.f32	s0, s0
 8024584:	ed84 7a00 	vstr	s14, [r4]
 8024588:	ed84 0a01 	vstr	s0, [r4, #4]
 802458c:	4240      	negs	r0, r0
 802458e:	e792      	b.n	80244b6 <__ieee754_rem_pio2f+0x5a>
 8024590:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8024594:	15eb      	asrs	r3, r5, #23
 8024596:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 802459a:	2d08      	cmp	r5, #8
 802459c:	dde3      	ble.n	8024566 <__ieee754_rem_pio2f+0x10a>
 802459e:	eddf 7a44 	vldr	s15, [pc, #272]	; 80246b0 <__ieee754_rem_pio2f+0x254>
 80245a2:	eef0 6a40 	vmov.f32	s13, s0
 80245a6:	eee6 6a27 	vfma.f32	s13, s12, s15
 80245aa:	ee30 0a66 	vsub.f32	s0, s0, s13
 80245ae:	eea6 0a27 	vfma.f32	s0, s12, s15
 80245b2:	eddf 7a40 	vldr	s15, [pc, #256]	; 80246b4 <__ieee754_rem_pio2f+0x258>
 80245b6:	ee97 0a27 	vfnms.f32	s0, s14, s15
 80245ba:	ee76 5ac0 	vsub.f32	s11, s13, s0
 80245be:	eef0 7a40 	vmov.f32	s15, s0
 80245c2:	ee15 2a90 	vmov	r2, s11
 80245c6:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80245ca:	1a5b      	subs	r3, r3, r1
 80245cc:	2b19      	cmp	r3, #25
 80245ce:	dc04      	bgt.n	80245da <__ieee754_rem_pio2f+0x17e>
 80245d0:	edc4 5a00 	vstr	s11, [r4]
 80245d4:	eeb0 0a66 	vmov.f32	s0, s13
 80245d8:	e7c6      	b.n	8024568 <__ieee754_rem_pio2f+0x10c>
 80245da:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80246c4 <__ieee754_rem_pio2f+0x268>
 80245de:	eeb0 0a66 	vmov.f32	s0, s13
 80245e2:	eea6 0a25 	vfma.f32	s0, s12, s11
 80245e6:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80245ea:	eddf 6a37 	vldr	s13, [pc, #220]	; 80246c8 <__ieee754_rem_pio2f+0x26c>
 80245ee:	eee6 7a25 	vfma.f32	s15, s12, s11
 80245f2:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80245f6:	ee30 7a67 	vsub.f32	s14, s0, s15
 80245fa:	ed84 7a00 	vstr	s14, [r4]
 80245fe:	e7b3      	b.n	8024568 <__ieee754_rem_pio2f+0x10c>
 8024600:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8024604:	db06      	blt.n	8024614 <__ieee754_rem_pio2f+0x1b8>
 8024606:	ee70 7a40 	vsub.f32	s15, s0, s0
 802460a:	edc0 7a01 	vstr	s15, [r0, #4]
 802460e:	edc0 7a00 	vstr	s15, [r0]
 8024612:	e733      	b.n	802447c <__ieee754_rem_pio2f+0x20>
 8024614:	15ea      	asrs	r2, r5, #23
 8024616:	3a86      	subs	r2, #134	; 0x86
 8024618:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802461c:	ee07 3a90 	vmov	s15, r3
 8024620:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8024624:	eddf 6a29 	vldr	s13, [pc, #164]	; 80246cc <__ieee754_rem_pio2f+0x270>
 8024628:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802462c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024630:	ed8d 7a03 	vstr	s14, [sp, #12]
 8024634:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8024638:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802463c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8024640:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024644:	ed8d 7a04 	vstr	s14, [sp, #16]
 8024648:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802464c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8024650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024654:	edcd 7a05 	vstr	s15, [sp, #20]
 8024658:	d11e      	bne.n	8024698 <__ieee754_rem_pio2f+0x23c>
 802465a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802465e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024662:	bf14      	ite	ne
 8024664:	2302      	movne	r3, #2
 8024666:	2301      	moveq	r3, #1
 8024668:	4919      	ldr	r1, [pc, #100]	; (80246d0 <__ieee754_rem_pio2f+0x274>)
 802466a:	9101      	str	r1, [sp, #4]
 802466c:	2102      	movs	r1, #2
 802466e:	9100      	str	r1, [sp, #0]
 8024670:	a803      	add	r0, sp, #12
 8024672:	4621      	mov	r1, r4
 8024674:	f000 f88e 	bl	8024794 <__kernel_rem_pio2f>
 8024678:	2e00      	cmp	r6, #0
 802467a:	f6bf af1c 	bge.w	80244b6 <__ieee754_rem_pio2f+0x5a>
 802467e:	edd4 7a00 	vldr	s15, [r4]
 8024682:	eef1 7a67 	vneg.f32	s15, s15
 8024686:	edc4 7a00 	vstr	s15, [r4]
 802468a:	edd4 7a01 	vldr	s15, [r4, #4]
 802468e:	eef1 7a67 	vneg.f32	s15, s15
 8024692:	edc4 7a01 	vstr	s15, [r4, #4]
 8024696:	e779      	b.n	802458c <__ieee754_rem_pio2f+0x130>
 8024698:	2303      	movs	r3, #3
 802469a:	e7e5      	b.n	8024668 <__ieee754_rem_pio2f+0x20c>
 802469c:	3f490fd8 	.word	0x3f490fd8
 80246a0:	4016cbe3 	.word	0x4016cbe3
 80246a4:	3fc90f80 	.word	0x3fc90f80
 80246a8:	3fc90fd0 	.word	0x3fc90fd0
 80246ac:	37354443 	.word	0x37354443
 80246b0:	37354400 	.word	0x37354400
 80246b4:	2e85a308 	.word	0x2e85a308
 80246b8:	43490f80 	.word	0x43490f80
 80246bc:	3f22f984 	.word	0x3f22f984
 80246c0:	08028db0 	.word	0x08028db0
 80246c4:	2e85a300 	.word	0x2e85a300
 80246c8:	248d3132 	.word	0x248d3132
 80246cc:	43800000 	.word	0x43800000
 80246d0:	08028e30 	.word	0x08028e30

080246d4 <__kernel_cosf>:
 80246d4:	ee10 3a10 	vmov	r3, s0
 80246d8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80246dc:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80246e0:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80246e4:	da05      	bge.n	80246f2 <__kernel_cosf+0x1e>
 80246e6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80246ea:	ee17 2a90 	vmov	r2, s15
 80246ee:	2a00      	cmp	r2, #0
 80246f0:	d03d      	beq.n	802476e <__kernel_cosf+0x9a>
 80246f2:	ee60 5a00 	vmul.f32	s11, s0, s0
 80246f6:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8024774 <__kernel_cosf+0xa0>
 80246fa:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8024778 <__kernel_cosf+0xa4>
 80246fe:	eddf 6a1f 	vldr	s13, [pc, #124]	; 802477c <__kernel_cosf+0xa8>
 8024702:	4a1f      	ldr	r2, [pc, #124]	; (8024780 <__kernel_cosf+0xac>)
 8024704:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8024708:	4293      	cmp	r3, r2
 802470a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8024784 <__kernel_cosf+0xb0>
 802470e:	eee7 7a25 	vfma.f32	s15, s14, s11
 8024712:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8024788 <__kernel_cosf+0xb4>
 8024716:	eea7 7aa5 	vfma.f32	s14, s15, s11
 802471a:	eddf 7a1c 	vldr	s15, [pc, #112]	; 802478c <__kernel_cosf+0xb8>
 802471e:	eee7 7a25 	vfma.f32	s15, s14, s11
 8024722:	eeb0 7a66 	vmov.f32	s14, s13
 8024726:	eea7 7aa5 	vfma.f32	s14, s15, s11
 802472a:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 802472e:	ee65 7aa6 	vmul.f32	s15, s11, s13
 8024732:	ee67 6a25 	vmul.f32	s13, s14, s11
 8024736:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 802473a:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802473e:	dc04      	bgt.n	802474a <__kernel_cosf+0x76>
 8024740:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8024744:	ee36 0a47 	vsub.f32	s0, s12, s14
 8024748:	4770      	bx	lr
 802474a:	4a11      	ldr	r2, [pc, #68]	; (8024790 <__kernel_cosf+0xbc>)
 802474c:	4293      	cmp	r3, r2
 802474e:	bfda      	itte	le
 8024750:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8024754:	ee06 3a90 	vmovle	s13, r3
 8024758:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 802475c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8024760:	ee36 0a66 	vsub.f32	s0, s12, s13
 8024764:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024768:	ee30 0a67 	vsub.f32	s0, s0, s15
 802476c:	4770      	bx	lr
 802476e:	eeb0 0a46 	vmov.f32	s0, s12
 8024772:	4770      	bx	lr
 8024774:	ad47d74e 	.word	0xad47d74e
 8024778:	310f74f6 	.word	0x310f74f6
 802477c:	3d2aaaab 	.word	0x3d2aaaab
 8024780:	3e999999 	.word	0x3e999999
 8024784:	b493f27c 	.word	0xb493f27c
 8024788:	37d00d01 	.word	0x37d00d01
 802478c:	bab60b61 	.word	0xbab60b61
 8024790:	3f480000 	.word	0x3f480000

08024794 <__kernel_rem_pio2f>:
 8024794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024798:	ed2d 8b04 	vpush	{d8-d9}
 802479c:	b0d7      	sub	sp, #348	; 0x15c
 802479e:	4616      	mov	r6, r2
 80247a0:	4698      	mov	r8, r3
 80247a2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80247a4:	4bbb      	ldr	r3, [pc, #748]	; (8024a94 <__kernel_rem_pio2f+0x300>)
 80247a6:	9001      	str	r0, [sp, #4]
 80247a8:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80247ac:	1d33      	adds	r3, r6, #4
 80247ae:	460d      	mov	r5, r1
 80247b0:	f108 39ff 	add.w	r9, r8, #4294967295
 80247b4:	db29      	blt.n	802480a <__kernel_rem_pio2f+0x76>
 80247b6:	1ef1      	subs	r1, r6, #3
 80247b8:	bf48      	it	mi
 80247ba:	1d31      	addmi	r1, r6, #4
 80247bc:	10c9      	asrs	r1, r1, #3
 80247be:	1c4c      	adds	r4, r1, #1
 80247c0:	00e3      	lsls	r3, r4, #3
 80247c2:	9302      	str	r3, [sp, #8]
 80247c4:	9b65      	ldr	r3, [sp, #404]	; 0x194
 80247c6:	ed9f 7ab7 	vldr	s14, [pc, #732]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 80247ca:	eba1 0009 	sub.w	r0, r1, r9
 80247ce:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
 80247d2:	eba6 04c4 	sub.w	r4, r6, r4, lsl #3
 80247d6:	eb07 0c09 	add.w	ip, r7, r9
 80247da:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 80247de:	2300      	movs	r3, #0
 80247e0:	4563      	cmp	r3, ip
 80247e2:	dd14      	ble.n	802480e <__kernel_rem_pio2f+0x7a>
 80247e4:	ab1a      	add	r3, sp, #104	; 0x68
 80247e6:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 80247ea:	46cc      	mov	ip, r9
 80247ec:	f50d 7a84 	add.w	sl, sp, #264	; 0x108
 80247f0:	f1c8 0b01 	rsb	fp, r8, #1
 80247f4:	eb0b 020c 	add.w	r2, fp, ip
 80247f8:	4297      	cmp	r7, r2
 80247fa:	db27      	blt.n	802484c <__kernel_rem_pio2f+0xb8>
 80247fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8024800:	eddf 7aa8 	vldr	s15, [pc, #672]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 8024804:	4618      	mov	r0, r3
 8024806:	2200      	movs	r2, #0
 8024808:	e016      	b.n	8024838 <__kernel_rem_pio2f+0xa4>
 802480a:	2100      	movs	r1, #0
 802480c:	e7d7      	b.n	80247be <__kernel_rem_pio2f+0x2a>
 802480e:	42d8      	cmn	r0, r3
 8024810:	bf5d      	ittte	pl
 8024812:	f85e 2023 	ldrpl.w	r2, [lr, r3, lsl #2]
 8024816:	ee07 2a90 	vmovpl	s15, r2
 802481a:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802481e:	eef0 7a47 	vmovmi.f32	s15, s14
 8024822:	ecea 7a01 	vstmia	sl!, {s15}
 8024826:	3301      	adds	r3, #1
 8024828:	e7da      	b.n	80247e0 <__kernel_rem_pio2f+0x4c>
 802482a:	ecfe 6a01 	vldmia	lr!, {s13}
 802482e:	ed90 7a00 	vldr	s14, [r0]
 8024832:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024836:	3201      	adds	r2, #1
 8024838:	454a      	cmp	r2, r9
 802483a:	f1a0 0004 	sub.w	r0, r0, #4
 802483e:	ddf4      	ble.n	802482a <__kernel_rem_pio2f+0x96>
 8024840:	ecea 7a01 	vstmia	sl!, {s15}
 8024844:	3304      	adds	r3, #4
 8024846:	f10c 0c01 	add.w	ip, ip, #1
 802484a:	e7d3      	b.n	80247f4 <__kernel_rem_pio2f+0x60>
 802484c:	ab06      	add	r3, sp, #24
 802484e:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 8024852:	9304      	str	r3, [sp, #16]
 8024854:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8024856:	eddf 8a92 	vldr	s17, [pc, #584]	; 8024aa0 <__kernel_rem_pio2f+0x30c>
 802485a:	ed9f 9a90 	vldr	s18, [pc, #576]	; 8024a9c <__kernel_rem_pio2f+0x308>
 802485e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8024862:	9303      	str	r3, [sp, #12]
 8024864:	46ba      	mov	sl, r7
 8024866:	ab56      	add	r3, sp, #344	; 0x158
 8024868:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 802486c:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 8024870:	ab06      	add	r3, sp, #24
 8024872:	4618      	mov	r0, r3
 8024874:	4652      	mov	r2, sl
 8024876:	2a00      	cmp	r2, #0
 8024878:	dc51      	bgt.n	802491e <__kernel_rem_pio2f+0x18a>
 802487a:	4620      	mov	r0, r4
 802487c:	9305      	str	r3, [sp, #20]
 802487e:	f000 fa63 	bl	8024d48 <scalbnf>
 8024882:	eeb0 8a40 	vmov.f32	s16, s0
 8024886:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802488a:	ee28 0a00 	vmul.f32	s0, s16, s0
 802488e:	f7ff fd61 	bl	8024354 <floorf>
 8024892:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8024896:	eea0 8a67 	vfms.f32	s16, s0, s15
 802489a:	2c00      	cmp	r4, #0
 802489c:	9b05      	ldr	r3, [sp, #20]
 802489e:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80248a2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80248a6:	edcd 7a00 	vstr	s15, [sp]
 80248aa:	ee38 8a40 	vsub.f32	s16, s16, s0
 80248ae:	dd4b      	ble.n	8024948 <__kernel_rem_pio2f+0x1b4>
 80248b0:	f10a 3cff 	add.w	ip, sl, #4294967295
 80248b4:	aa06      	add	r2, sp, #24
 80248b6:	f1c4 0e08 	rsb	lr, r4, #8
 80248ba:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80248be:	ee17 1a90 	vmov	r1, s15
 80248c2:	fa42 f00e 	asr.w	r0, r2, lr
 80248c6:	4401      	add	r1, r0
 80248c8:	9100      	str	r1, [sp, #0]
 80248ca:	fa00 f00e 	lsl.w	r0, r0, lr
 80248ce:	a906      	add	r1, sp, #24
 80248d0:	1a12      	subs	r2, r2, r0
 80248d2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80248d6:	f1c4 0007 	rsb	r0, r4, #7
 80248da:	fa42 fb00 	asr.w	fp, r2, r0
 80248de:	f1bb 0f00 	cmp.w	fp, #0
 80248e2:	dd43      	ble.n	802496c <__kernel_rem_pio2f+0x1d8>
 80248e4:	9a00      	ldr	r2, [sp, #0]
 80248e6:	f04f 0e00 	mov.w	lr, #0
 80248ea:	3201      	adds	r2, #1
 80248ec:	9200      	str	r2, [sp, #0]
 80248ee:	4670      	mov	r0, lr
 80248f0:	45f2      	cmp	sl, lr
 80248f2:	dc6c      	bgt.n	80249ce <__kernel_rem_pio2f+0x23a>
 80248f4:	2c00      	cmp	r4, #0
 80248f6:	dd04      	ble.n	8024902 <__kernel_rem_pio2f+0x16e>
 80248f8:	2c01      	cmp	r4, #1
 80248fa:	d079      	beq.n	80249f0 <__kernel_rem_pio2f+0x25c>
 80248fc:	2c02      	cmp	r4, #2
 80248fe:	f000 8082 	beq.w	8024a06 <__kernel_rem_pio2f+0x272>
 8024902:	f1bb 0f02 	cmp.w	fp, #2
 8024906:	d131      	bne.n	802496c <__kernel_rem_pio2f+0x1d8>
 8024908:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802490c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8024910:	b360      	cbz	r0, 802496c <__kernel_rem_pio2f+0x1d8>
 8024912:	4620      	mov	r0, r4
 8024914:	f000 fa18 	bl	8024d48 <scalbnf>
 8024918:	ee38 8a40 	vsub.f32	s16, s16, s0
 802491c:	e026      	b.n	802496c <__kernel_rem_pio2f+0x1d8>
 802491e:	ee60 7a28 	vmul.f32	s15, s0, s17
 8024922:	3a01      	subs	r2, #1
 8024924:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024928:	a942      	add	r1, sp, #264	; 0x108
 802492a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802492e:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 8024932:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8024936:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802493a:	eca0 0a01 	vstmia	r0!, {s0}
 802493e:	ed9c 0a00 	vldr	s0, [ip]
 8024942:	ee37 0a80 	vadd.f32	s0, s15, s0
 8024946:	e796      	b.n	8024876 <__kernel_rem_pio2f+0xe2>
 8024948:	d107      	bne.n	802495a <__kernel_rem_pio2f+0x1c6>
 802494a:	f10a 32ff 	add.w	r2, sl, #4294967295
 802494e:	a906      	add	r1, sp, #24
 8024950:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8024954:	ea4f 2b22 	mov.w	fp, r2, asr #8
 8024958:	e7c1      	b.n	80248de <__kernel_rem_pio2f+0x14a>
 802495a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802495e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8024962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024966:	da2f      	bge.n	80249c8 <__kernel_rem_pio2f+0x234>
 8024968:	f04f 0b00 	mov.w	fp, #0
 802496c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8024970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024974:	f040 8098 	bne.w	8024aa8 <__kernel_rem_pio2f+0x314>
 8024978:	f10a 33ff 	add.w	r3, sl, #4294967295
 802497c:	469c      	mov	ip, r3
 802497e:	2200      	movs	r2, #0
 8024980:	45bc      	cmp	ip, r7
 8024982:	da48      	bge.n	8024a16 <__kernel_rem_pio2f+0x282>
 8024984:	2a00      	cmp	r2, #0
 8024986:	d05f      	beq.n	8024a48 <__kernel_rem_pio2f+0x2b4>
 8024988:	aa06      	add	r2, sp, #24
 802498a:	3c08      	subs	r4, #8
 802498c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8024990:	2900      	cmp	r1, #0
 8024992:	d07d      	beq.n	8024a90 <__kernel_rem_pio2f+0x2fc>
 8024994:	4620      	mov	r0, r4
 8024996:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802499a:	9301      	str	r3, [sp, #4]
 802499c:	f000 f9d4 	bl	8024d48 <scalbnf>
 80249a0:	9b01      	ldr	r3, [sp, #4]
 80249a2:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8024aa0 <__kernel_rem_pio2f+0x30c>
 80249a6:	4619      	mov	r1, r3
 80249a8:	2900      	cmp	r1, #0
 80249aa:	f280 80af 	bge.w	8024b0c <__kernel_rem_pio2f+0x378>
 80249ae:	4618      	mov	r0, r3
 80249b0:	2400      	movs	r4, #0
 80249b2:	2800      	cmp	r0, #0
 80249b4:	f2c0 80d0 	blt.w	8024b58 <__kernel_rem_pio2f+0x3c4>
 80249b8:	a942      	add	r1, sp, #264	; 0x108
 80249ba:	eb01 0680 	add.w	r6, r1, r0, lsl #2
 80249be:	4a36      	ldr	r2, [pc, #216]	; (8024a98 <__kernel_rem_pio2f+0x304>)
 80249c0:	eddf 7a38 	vldr	s15, [pc, #224]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 80249c4:	2100      	movs	r1, #0
 80249c6:	e0bb      	b.n	8024b40 <__kernel_rem_pio2f+0x3ac>
 80249c8:	f04f 0b02 	mov.w	fp, #2
 80249cc:	e78a      	b.n	80248e4 <__kernel_rem_pio2f+0x150>
 80249ce:	681a      	ldr	r2, [r3, #0]
 80249d0:	b948      	cbnz	r0, 80249e6 <__kernel_rem_pio2f+0x252>
 80249d2:	b11a      	cbz	r2, 80249dc <__kernel_rem_pio2f+0x248>
 80249d4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249d8:	601a      	str	r2, [r3, #0]
 80249da:	2201      	movs	r2, #1
 80249dc:	f10e 0e01 	add.w	lr, lr, #1
 80249e0:	3304      	adds	r3, #4
 80249e2:	4610      	mov	r0, r2
 80249e4:	e784      	b.n	80248f0 <__kernel_rem_pio2f+0x15c>
 80249e6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80249ea:	601a      	str	r2, [r3, #0]
 80249ec:	4602      	mov	r2, r0
 80249ee:	e7f5      	b.n	80249dc <__kernel_rem_pio2f+0x248>
 80249f0:	f10a 3cff 	add.w	ip, sl, #4294967295
 80249f4:	ab06      	add	r3, sp, #24
 80249f6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80249fa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80249fe:	aa06      	add	r2, sp, #24
 8024a00:	f842 302c 	str.w	r3, [r2, ip, lsl #2]
 8024a04:	e77d      	b.n	8024902 <__kernel_rem_pio2f+0x16e>
 8024a06:	f10a 3cff 	add.w	ip, sl, #4294967295
 8024a0a:	ab06      	add	r3, sp, #24
 8024a0c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8024a10:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8024a14:	e7f3      	b.n	80249fe <__kernel_rem_pio2f+0x26a>
 8024a16:	a906      	add	r1, sp, #24
 8024a18:	f851 002c 	ldr.w	r0, [r1, ip, lsl #2]
 8024a1c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8024a20:	4302      	orrs	r2, r0
 8024a22:	e7ad      	b.n	8024980 <__kernel_rem_pio2f+0x1ec>
 8024a24:	3001      	adds	r0, #1
 8024a26:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8024a2a:	2a00      	cmp	r2, #0
 8024a2c:	d0fa      	beq.n	8024a24 <__kernel_rem_pio2f+0x290>
 8024a2e:	a91a      	add	r1, sp, #104	; 0x68
 8024a30:	eb0a 0208 	add.w	r2, sl, r8
 8024a34:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8024a38:	f10a 0301 	add.w	r3, sl, #1
 8024a3c:	eb0a 0100 	add.w	r1, sl, r0
 8024a40:	4299      	cmp	r1, r3
 8024a42:	da04      	bge.n	8024a4e <__kernel_rem_pio2f+0x2ba>
 8024a44:	468a      	mov	sl, r1
 8024a46:	e70e      	b.n	8024866 <__kernel_rem_pio2f+0xd2>
 8024a48:	9b04      	ldr	r3, [sp, #16]
 8024a4a:	2001      	movs	r0, #1
 8024a4c:	e7eb      	b.n	8024a26 <__kernel_rem_pio2f+0x292>
 8024a4e:	9803      	ldr	r0, [sp, #12]
 8024a50:	f8dd c004 	ldr.w	ip, [sp, #4]
 8024a54:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8024a58:	9000      	str	r0, [sp, #0]
 8024a5a:	ee07 0a90 	vmov	s15, r0
 8024a5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024a62:	2000      	movs	r0, #0
 8024a64:	ece2 7a01 	vstmia	r2!, {s15}
 8024a68:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 8024a6c:	4696      	mov	lr, r2
 8024a6e:	4548      	cmp	r0, r9
 8024a70:	dd06      	ble.n	8024a80 <__kernel_rem_pio2f+0x2ec>
 8024a72:	a842      	add	r0, sp, #264	; 0x108
 8024a74:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8024a78:	edc0 7a00 	vstr	s15, [r0]
 8024a7c:	3301      	adds	r3, #1
 8024a7e:	e7df      	b.n	8024a40 <__kernel_rem_pio2f+0x2ac>
 8024a80:	ecfc 6a01 	vldmia	ip!, {s13}
 8024a84:	ed3e 7a01 	vldmdb	lr!, {s14}
 8024a88:	3001      	adds	r0, #1
 8024a8a:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024a8e:	e7ee      	b.n	8024a6e <__kernel_rem_pio2f+0x2da>
 8024a90:	3b01      	subs	r3, #1
 8024a92:	e779      	b.n	8024988 <__kernel_rem_pio2f+0x1f4>
 8024a94:	08029174 	.word	0x08029174
 8024a98:	08029148 	.word	0x08029148
 8024a9c:	43800000 	.word	0x43800000
 8024aa0:	3b800000 	.word	0x3b800000
 8024aa4:	00000000 	.word	0x00000000
 8024aa8:	9b02      	ldr	r3, [sp, #8]
 8024aaa:	eeb0 0a48 	vmov.f32	s0, s16
 8024aae:	1b98      	subs	r0, r3, r6
 8024ab0:	f000 f94a 	bl	8024d48 <scalbnf>
 8024ab4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8024a9c <__kernel_rem_pio2f+0x308>
 8024ab8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8024abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024ac0:	db1b      	blt.n	8024afa <__kernel_rem_pio2f+0x366>
 8024ac2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8024aa0 <__kernel_rem_pio2f+0x30c>
 8024ac6:	ee60 7a27 	vmul.f32	s15, s0, s15
 8024aca:	aa06      	add	r2, sp, #24
 8024acc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024ad0:	a906      	add	r1, sp, #24
 8024ad2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024ad6:	3408      	adds	r4, #8
 8024ad8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8024adc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024ae0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024ae4:	ee10 3a10 	vmov	r3, s0
 8024ae8:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8024aec:	ee17 2a90 	vmov	r2, s15
 8024af0:	f10a 0301 	add.w	r3, sl, #1
 8024af4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8024af8:	e74c      	b.n	8024994 <__kernel_rem_pio2f+0x200>
 8024afa:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024afe:	aa06      	add	r2, sp, #24
 8024b00:	ee10 3a10 	vmov	r3, s0
 8024b04:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8024b08:	4653      	mov	r3, sl
 8024b0a:	e743      	b.n	8024994 <__kernel_rem_pio2f+0x200>
 8024b0c:	aa42      	add	r2, sp, #264	; 0x108
 8024b0e:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8024b12:	aa06      	add	r2, sp, #24
 8024b14:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8024b18:	9201      	str	r2, [sp, #4]
 8024b1a:	ee07 2a90 	vmov	s15, r2
 8024b1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024b22:	3901      	subs	r1, #1
 8024b24:	ee67 7a80 	vmul.f32	s15, s15, s0
 8024b28:	ee20 0a07 	vmul.f32	s0, s0, s14
 8024b2c:	edc0 7a00 	vstr	s15, [r0]
 8024b30:	e73a      	b.n	80249a8 <__kernel_rem_pio2f+0x214>
 8024b32:	ecf2 6a01 	vldmia	r2!, {s13}
 8024b36:	ecb6 7a01 	vldmia	r6!, {s14}
 8024b3a:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024b3e:	3101      	adds	r1, #1
 8024b40:	42b9      	cmp	r1, r7
 8024b42:	dc01      	bgt.n	8024b48 <__kernel_rem_pio2f+0x3b4>
 8024b44:	428c      	cmp	r4, r1
 8024b46:	daf4      	bge.n	8024b32 <__kernel_rem_pio2f+0x39e>
 8024b48:	aa56      	add	r2, sp, #344	; 0x158
 8024b4a:	eb02 0184 	add.w	r1, r2, r4, lsl #2
 8024b4e:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 8024b52:	3801      	subs	r0, #1
 8024b54:	3401      	adds	r4, #1
 8024b56:	e72c      	b.n	80249b2 <__kernel_rem_pio2f+0x21e>
 8024b58:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8024b5a:	2a02      	cmp	r2, #2
 8024b5c:	dc0a      	bgt.n	8024b74 <__kernel_rem_pio2f+0x3e0>
 8024b5e:	2a00      	cmp	r2, #0
 8024b60:	dc61      	bgt.n	8024c26 <__kernel_rem_pio2f+0x492>
 8024b62:	d03c      	beq.n	8024bde <__kernel_rem_pio2f+0x44a>
 8024b64:	9b00      	ldr	r3, [sp, #0]
 8024b66:	f003 0007 	and.w	r0, r3, #7
 8024b6a:	b057      	add	sp, #348	; 0x15c
 8024b6c:	ecbd 8b04 	vpop	{d8-d9}
 8024b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b74:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8024b76:	2a03      	cmp	r2, #3
 8024b78:	d1f4      	bne.n	8024b64 <__kernel_rem_pio2f+0x3d0>
 8024b7a:	aa2e      	add	r2, sp, #184	; 0xb8
 8024b7c:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8024b80:	4608      	mov	r0, r1
 8024b82:	461c      	mov	r4, r3
 8024b84:	2c00      	cmp	r4, #0
 8024b86:	f1a0 0004 	sub.w	r0, r0, #4
 8024b8a:	dc59      	bgt.n	8024c40 <__kernel_rem_pio2f+0x4ac>
 8024b8c:	4618      	mov	r0, r3
 8024b8e:	2801      	cmp	r0, #1
 8024b90:	f1a1 0104 	sub.w	r1, r1, #4
 8024b94:	dc64      	bgt.n	8024c60 <__kernel_rem_pio2f+0x4cc>
 8024b96:	ed5f 7a3d 	vldr	s15, [pc, #-244]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 8024b9a:	2b01      	cmp	r3, #1
 8024b9c:	dc70      	bgt.n	8024c80 <__kernel_rem_pio2f+0x4ec>
 8024b9e:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 8024ba2:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 8024ba6:	f1bb 0f00 	cmp.w	fp, #0
 8024baa:	d172      	bne.n	8024c92 <__kernel_rem_pio2f+0x4fe>
 8024bac:	edc5 6a00 	vstr	s13, [r5]
 8024bb0:	ed85 7a01 	vstr	s14, [r5, #4]
 8024bb4:	edc5 7a02 	vstr	s15, [r5, #8]
 8024bb8:	e7d4      	b.n	8024b64 <__kernel_rem_pio2f+0x3d0>
 8024bba:	aa2e      	add	r2, sp, #184	; 0xb8
 8024bbc:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8024bc0:	ed91 7a00 	vldr	s14, [r1]
 8024bc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024bc8:	3b01      	subs	r3, #1
 8024bca:	2b00      	cmp	r3, #0
 8024bcc:	daf5      	bge.n	8024bba <__kernel_rem_pio2f+0x426>
 8024bce:	f1bb 0f00 	cmp.w	fp, #0
 8024bd2:	d001      	beq.n	8024bd8 <__kernel_rem_pio2f+0x444>
 8024bd4:	eef1 7a67 	vneg.f32	s15, s15
 8024bd8:	edc5 7a00 	vstr	s15, [r5]
 8024bdc:	e7c2      	b.n	8024b64 <__kernel_rem_pio2f+0x3d0>
 8024bde:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 8024be2:	e7f2      	b.n	8024bca <__kernel_rem_pio2f+0x436>
 8024be4:	aa2e      	add	r2, sp, #184	; 0xb8
 8024be6:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8024bea:	edd0 7a00 	vldr	s15, [r0]
 8024bee:	ee37 7a27 	vadd.f32	s14, s14, s15
 8024bf2:	3901      	subs	r1, #1
 8024bf4:	2900      	cmp	r1, #0
 8024bf6:	daf5      	bge.n	8024be4 <__kernel_rem_pio2f+0x450>
 8024bf8:	f1bb 0f00 	cmp.w	fp, #0
 8024bfc:	d017      	beq.n	8024c2e <__kernel_rem_pio2f+0x49a>
 8024bfe:	eef1 7a47 	vneg.f32	s15, s14
 8024c02:	edc5 7a00 	vstr	s15, [r5]
 8024c06:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 8024c0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024c0e:	a82f      	add	r0, sp, #188	; 0xbc
 8024c10:	2101      	movs	r1, #1
 8024c12:	428b      	cmp	r3, r1
 8024c14:	da0e      	bge.n	8024c34 <__kernel_rem_pio2f+0x4a0>
 8024c16:	f1bb 0f00 	cmp.w	fp, #0
 8024c1a:	d001      	beq.n	8024c20 <__kernel_rem_pio2f+0x48c>
 8024c1c:	eef1 7a67 	vneg.f32	s15, s15
 8024c20:	edc5 7a01 	vstr	s15, [r5, #4]
 8024c24:	e79e      	b.n	8024b64 <__kernel_rem_pio2f+0x3d0>
 8024c26:	ed1f 7a61 	vldr	s14, [pc, #-388]	; 8024aa4 <__kernel_rem_pio2f+0x310>
 8024c2a:	4619      	mov	r1, r3
 8024c2c:	e7e2      	b.n	8024bf4 <__kernel_rem_pio2f+0x460>
 8024c2e:	eef0 7a47 	vmov.f32	s15, s14
 8024c32:	e7e6      	b.n	8024c02 <__kernel_rem_pio2f+0x46e>
 8024c34:	ecb0 7a01 	vldmia	r0!, {s14}
 8024c38:	3101      	adds	r1, #1
 8024c3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024c3e:	e7e8      	b.n	8024c12 <__kernel_rem_pio2f+0x47e>
 8024c40:	edd0 7a00 	vldr	s15, [r0]
 8024c44:	edd0 6a01 	vldr	s13, [r0, #4]
 8024c48:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024c4c:	3c01      	subs	r4, #1
 8024c4e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024c52:	ed80 7a00 	vstr	s14, [r0]
 8024c56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024c5a:	edc0 7a01 	vstr	s15, [r0, #4]
 8024c5e:	e791      	b.n	8024b84 <__kernel_rem_pio2f+0x3f0>
 8024c60:	edd1 7a00 	vldr	s15, [r1]
 8024c64:	edd1 6a01 	vldr	s13, [r1, #4]
 8024c68:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024c6c:	3801      	subs	r0, #1
 8024c6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024c72:	ed81 7a00 	vstr	s14, [r1]
 8024c76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024c7a:	edc1 7a01 	vstr	s15, [r1, #4]
 8024c7e:	e786      	b.n	8024b8e <__kernel_rem_pio2f+0x3fa>
 8024c80:	aa2e      	add	r2, sp, #184	; 0xb8
 8024c82:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8024c86:	ed91 7a00 	vldr	s14, [r1]
 8024c8a:	3b01      	subs	r3, #1
 8024c8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024c90:	e783      	b.n	8024b9a <__kernel_rem_pio2f+0x406>
 8024c92:	eef1 6a66 	vneg.f32	s13, s13
 8024c96:	eeb1 7a47 	vneg.f32	s14, s14
 8024c9a:	edc5 6a00 	vstr	s13, [r5]
 8024c9e:	ed85 7a01 	vstr	s14, [r5, #4]
 8024ca2:	eef1 7a67 	vneg.f32	s15, s15
 8024ca6:	e785      	b.n	8024bb4 <__kernel_rem_pio2f+0x420>

08024ca8 <__kernel_sinf>:
 8024ca8:	ee10 3a10 	vmov	r3, s0
 8024cac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8024cb0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8024cb4:	da04      	bge.n	8024cc0 <__kernel_sinf+0x18>
 8024cb6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8024cba:	ee17 3a90 	vmov	r3, s15
 8024cbe:	b35b      	cbz	r3, 8024d18 <__kernel_sinf+0x70>
 8024cc0:	ee20 7a00 	vmul.f32	s14, s0, s0
 8024cc4:	eddf 7a15 	vldr	s15, [pc, #84]	; 8024d1c <__kernel_sinf+0x74>
 8024cc8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8024d20 <__kernel_sinf+0x78>
 8024ccc:	eea7 6a27 	vfma.f32	s12, s14, s15
 8024cd0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8024d24 <__kernel_sinf+0x7c>
 8024cd4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024cd8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8024d28 <__kernel_sinf+0x80>
 8024cdc:	eea7 6a87 	vfma.f32	s12, s15, s14
 8024ce0:	eddf 7a12 	vldr	s15, [pc, #72]	; 8024d2c <__kernel_sinf+0x84>
 8024ce4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8024ce8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024cec:	b930      	cbnz	r0, 8024cfc <__kernel_sinf+0x54>
 8024cee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8024d30 <__kernel_sinf+0x88>
 8024cf2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8024cf6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8024cfa:	4770      	bx	lr
 8024cfc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8024d00:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8024d04:	eee0 7a86 	vfma.f32	s15, s1, s12
 8024d08:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8024d0c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8024d34 <__kernel_sinf+0x8c>
 8024d10:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8024d14:	ee30 0a60 	vsub.f32	s0, s0, s1
 8024d18:	4770      	bx	lr
 8024d1a:	bf00      	nop
 8024d1c:	2f2ec9d3 	.word	0x2f2ec9d3
 8024d20:	b2d72f34 	.word	0xb2d72f34
 8024d24:	3638ef1b 	.word	0x3638ef1b
 8024d28:	b9500d01 	.word	0xb9500d01
 8024d2c:	3c088889 	.word	0x3c088889
 8024d30:	be2aaaab 	.word	0xbe2aaaab
 8024d34:	3e2aaaab 	.word	0x3e2aaaab

08024d38 <fabsf>:
 8024d38:	ee10 3a10 	vmov	r3, s0
 8024d3c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8024d40:	ee00 3a10 	vmov	s0, r3
 8024d44:	4770      	bx	lr
	...

08024d48 <scalbnf>:
 8024d48:	ee10 3a10 	vmov	r3, s0
 8024d4c:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8024d50:	d025      	beq.n	8024d9e <scalbnf+0x56>
 8024d52:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8024d56:	d302      	bcc.n	8024d5e <scalbnf+0x16>
 8024d58:	ee30 0a00 	vadd.f32	s0, s0, s0
 8024d5c:	4770      	bx	lr
 8024d5e:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8024d62:	d122      	bne.n	8024daa <scalbnf+0x62>
 8024d64:	4b2a      	ldr	r3, [pc, #168]	; (8024e10 <scalbnf+0xc8>)
 8024d66:	eddf 7a2b 	vldr	s15, [pc, #172]	; 8024e14 <scalbnf+0xcc>
 8024d6a:	4298      	cmp	r0, r3
 8024d6c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8024d70:	db16      	blt.n	8024da0 <scalbnf+0x58>
 8024d72:	ee10 3a10 	vmov	r3, s0
 8024d76:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8024d7a:	3a19      	subs	r2, #25
 8024d7c:	4402      	add	r2, r0
 8024d7e:	2afe      	cmp	r2, #254	; 0xfe
 8024d80:	dd15      	ble.n	8024dae <scalbnf+0x66>
 8024d82:	ee10 3a10 	vmov	r3, s0
 8024d86:	eddf 7a24 	vldr	s15, [pc, #144]	; 8024e18 <scalbnf+0xd0>
 8024d8a:	eddf 6a24 	vldr	s13, [pc, #144]	; 8024e1c <scalbnf+0xd4>
 8024d8e:	2b00      	cmp	r3, #0
 8024d90:	eeb0 7a67 	vmov.f32	s14, s15
 8024d94:	bfb8      	it	lt
 8024d96:	eef0 7a66 	vmovlt.f32	s15, s13
 8024d9a:	ee27 0a27 	vmul.f32	s0, s14, s15
 8024d9e:	4770      	bx	lr
 8024da0:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8024e20 <scalbnf+0xd8>
 8024da4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8024da8:	4770      	bx	lr
 8024daa:	0dd2      	lsrs	r2, r2, #23
 8024dac:	e7e6      	b.n	8024d7c <scalbnf+0x34>
 8024dae:	2a00      	cmp	r2, #0
 8024db0:	dd06      	ble.n	8024dc0 <scalbnf+0x78>
 8024db2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024db6:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8024dba:	ee00 3a10 	vmov	s0, r3
 8024dbe:	4770      	bx	lr
 8024dc0:	f112 0f16 	cmn.w	r2, #22
 8024dc4:	da1a      	bge.n	8024dfc <scalbnf+0xb4>
 8024dc6:	f24c 3350 	movw	r3, #50000	; 0xc350
 8024dca:	4298      	cmp	r0, r3
 8024dcc:	ee10 3a10 	vmov	r3, s0
 8024dd0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8024dd4:	dd0a      	ble.n	8024dec <scalbnf+0xa4>
 8024dd6:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8024e18 <scalbnf+0xd0>
 8024dda:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8024e1c <scalbnf+0xd4>
 8024dde:	eef0 7a40 	vmov.f32	s15, s0
 8024de2:	2b00      	cmp	r3, #0
 8024de4:	bf18      	it	ne
 8024de6:	eeb0 0a47 	vmovne.f32	s0, s14
 8024dea:	e7db      	b.n	8024da4 <scalbnf+0x5c>
 8024dec:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8024e20 <scalbnf+0xd8>
 8024df0:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8024e24 <scalbnf+0xdc>
 8024df4:	eef0 7a40 	vmov.f32	s15, s0
 8024df8:	2b00      	cmp	r3, #0
 8024dfa:	e7f3      	b.n	8024de4 <scalbnf+0x9c>
 8024dfc:	3219      	adds	r2, #25
 8024dfe:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024e02:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8024e06:	eddf 7a08 	vldr	s15, [pc, #32]	; 8024e28 <scalbnf+0xe0>
 8024e0a:	ee07 3a10 	vmov	s14, r3
 8024e0e:	e7c4      	b.n	8024d9a <scalbnf+0x52>
 8024e10:	ffff3cb0 	.word	0xffff3cb0
 8024e14:	4c000000 	.word	0x4c000000
 8024e18:	7149f2ca 	.word	0x7149f2ca
 8024e1c:	f149f2ca 	.word	0xf149f2ca
 8024e20:	0da24260 	.word	0x0da24260
 8024e24:	8da24260 	.word	0x8da24260
 8024e28:	33000000 	.word	0x33000000

08024e2c <abort>:
 8024e2c:	b508      	push	{r3, lr}
 8024e2e:	2006      	movs	r0, #6
 8024e30:	f000 fcf6 	bl	8025820 <raise>
 8024e34:	2001      	movs	r0, #1
 8024e36:	f7db feaf 	bl	8000b98 <_exit>
	...

08024e3c <__assert_func>:
 8024e3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8024e3e:	4614      	mov	r4, r2
 8024e40:	461a      	mov	r2, r3
 8024e42:	4b09      	ldr	r3, [pc, #36]	; (8024e68 <__assert_func+0x2c>)
 8024e44:	681b      	ldr	r3, [r3, #0]
 8024e46:	4605      	mov	r5, r0
 8024e48:	68d8      	ldr	r0, [r3, #12]
 8024e4a:	b14c      	cbz	r4, 8024e60 <__assert_func+0x24>
 8024e4c:	4b07      	ldr	r3, [pc, #28]	; (8024e6c <__assert_func+0x30>)
 8024e4e:	9100      	str	r1, [sp, #0]
 8024e50:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8024e54:	4906      	ldr	r1, [pc, #24]	; (8024e70 <__assert_func+0x34>)
 8024e56:	462b      	mov	r3, r5
 8024e58:	f000 f828 	bl	8024eac <fiprintf>
 8024e5c:	f7ff ffe6 	bl	8024e2c <abort>
 8024e60:	4b04      	ldr	r3, [pc, #16]	; (8024e74 <__assert_func+0x38>)
 8024e62:	461c      	mov	r4, r3
 8024e64:	e7f3      	b.n	8024e4e <__assert_func+0x12>
 8024e66:	bf00      	nop
 8024e68:	200001ec 	.word	0x200001ec
 8024e6c:	08029180 	.word	0x08029180
 8024e70:	0802918d 	.word	0x0802918d
 8024e74:	080291bb 	.word	0x080291bb

08024e78 <atexit>:
 8024e78:	2300      	movs	r3, #0
 8024e7a:	4601      	mov	r1, r0
 8024e7c:	461a      	mov	r2, r3
 8024e7e:	4618      	mov	r0, r3
 8024e80:	f000 be38 	b.w	8025af4 <__register_exitproc>

08024e84 <__cxa_atexit>:
 8024e84:	b510      	push	{r4, lr}
 8024e86:	4c05      	ldr	r4, [pc, #20]	; (8024e9c <__cxa_atexit+0x18>)
 8024e88:	4613      	mov	r3, r2
 8024e8a:	b12c      	cbz	r4, 8024e98 <__cxa_atexit+0x14>
 8024e8c:	460a      	mov	r2, r1
 8024e8e:	4601      	mov	r1, r0
 8024e90:	2002      	movs	r0, #2
 8024e92:	f000 fe2f 	bl	8025af4 <__register_exitproc>
 8024e96:	bd10      	pop	{r4, pc}
 8024e98:	4620      	mov	r0, r4
 8024e9a:	e7fc      	b.n	8024e96 <__cxa_atexit+0x12>
 8024e9c:	08025af5 	.word	0x08025af5

08024ea0 <__errno>:
 8024ea0:	4b01      	ldr	r3, [pc, #4]	; (8024ea8 <__errno+0x8>)
 8024ea2:	6818      	ldr	r0, [r3, #0]
 8024ea4:	4770      	bx	lr
 8024ea6:	bf00      	nop
 8024ea8:	200001ec 	.word	0x200001ec

08024eac <fiprintf>:
 8024eac:	b40e      	push	{r1, r2, r3}
 8024eae:	b503      	push	{r0, r1, lr}
 8024eb0:	4601      	mov	r1, r0
 8024eb2:	ab03      	add	r3, sp, #12
 8024eb4:	4805      	ldr	r0, [pc, #20]	; (8024ecc <fiprintf+0x20>)
 8024eb6:	f853 2b04 	ldr.w	r2, [r3], #4
 8024eba:	6800      	ldr	r0, [r0, #0]
 8024ebc:	9301      	str	r3, [sp, #4]
 8024ebe:	f000 f925 	bl	802510c <_vfiprintf_r>
 8024ec2:	b002      	add	sp, #8
 8024ec4:	f85d eb04 	ldr.w	lr, [sp], #4
 8024ec8:	b003      	add	sp, #12
 8024eca:	4770      	bx	lr
 8024ecc:	200001ec 	.word	0x200001ec

08024ed0 <__libc_init_array>:
 8024ed0:	b570      	push	{r4, r5, r6, lr}
 8024ed2:	4d0d      	ldr	r5, [pc, #52]	; (8024f08 <__libc_init_array+0x38>)
 8024ed4:	4c0d      	ldr	r4, [pc, #52]	; (8024f0c <__libc_init_array+0x3c>)
 8024ed6:	1b64      	subs	r4, r4, r5
 8024ed8:	10a4      	asrs	r4, r4, #2
 8024eda:	2600      	movs	r6, #0
 8024edc:	42a6      	cmp	r6, r4
 8024ede:	d109      	bne.n	8024ef4 <__libc_init_array+0x24>
 8024ee0:	4d0b      	ldr	r5, [pc, #44]	; (8024f10 <__libc_init_array+0x40>)
 8024ee2:	4c0c      	ldr	r4, [pc, #48]	; (8024f14 <__libc_init_array+0x44>)
 8024ee4:	f001 f940 	bl	8026168 <_init>
 8024ee8:	1b64      	subs	r4, r4, r5
 8024eea:	10a4      	asrs	r4, r4, #2
 8024eec:	2600      	movs	r6, #0
 8024eee:	42a6      	cmp	r6, r4
 8024ef0:	d105      	bne.n	8024efe <__libc_init_array+0x2e>
 8024ef2:	bd70      	pop	{r4, r5, r6, pc}
 8024ef4:	f855 3b04 	ldr.w	r3, [r5], #4
 8024ef8:	4798      	blx	r3
 8024efa:	3601      	adds	r6, #1
 8024efc:	e7ee      	b.n	8024edc <__libc_init_array+0xc>
 8024efe:	f855 3b04 	ldr.w	r3, [r5], #4
 8024f02:	4798      	blx	r3
 8024f04:	3601      	adds	r6, #1
 8024f06:	e7f2      	b.n	8024eee <__libc_init_array+0x1e>
 8024f08:	0806fa94 	.word	0x0806fa94
 8024f0c:	0806fa94 	.word	0x0806fa94
 8024f10:	0806fa94 	.word	0x0806fa94
 8024f14:	0806faac 	.word	0x0806faac

08024f18 <malloc>:
 8024f18:	4b02      	ldr	r3, [pc, #8]	; (8024f24 <malloc+0xc>)
 8024f1a:	4601      	mov	r1, r0
 8024f1c:	6818      	ldr	r0, [r3, #0]
 8024f1e:	f000 b871 	b.w	8025004 <_malloc_r>
 8024f22:	bf00      	nop
 8024f24:	200001ec 	.word	0x200001ec

08024f28 <free>:
 8024f28:	4b02      	ldr	r3, [pc, #8]	; (8024f34 <free+0xc>)
 8024f2a:	4601      	mov	r1, r0
 8024f2c:	6818      	ldr	r0, [r3, #0]
 8024f2e:	f000 b819 	b.w	8024f64 <_free_r>
 8024f32:	bf00      	nop
 8024f34:	200001ec 	.word	0x200001ec

08024f38 <memcpy>:
 8024f38:	440a      	add	r2, r1
 8024f3a:	4291      	cmp	r1, r2
 8024f3c:	f100 33ff 	add.w	r3, r0, #4294967295
 8024f40:	d100      	bne.n	8024f44 <memcpy+0xc>
 8024f42:	4770      	bx	lr
 8024f44:	b510      	push	{r4, lr}
 8024f46:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024f4a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024f4e:	4291      	cmp	r1, r2
 8024f50:	d1f9      	bne.n	8024f46 <memcpy+0xe>
 8024f52:	bd10      	pop	{r4, pc}

08024f54 <memset>:
 8024f54:	4402      	add	r2, r0
 8024f56:	4603      	mov	r3, r0
 8024f58:	4293      	cmp	r3, r2
 8024f5a:	d100      	bne.n	8024f5e <memset+0xa>
 8024f5c:	4770      	bx	lr
 8024f5e:	f803 1b01 	strb.w	r1, [r3], #1
 8024f62:	e7f9      	b.n	8024f58 <memset+0x4>

08024f64 <_free_r>:
 8024f64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024f66:	2900      	cmp	r1, #0
 8024f68:	d048      	beq.n	8024ffc <_free_r+0x98>
 8024f6a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024f6e:	9001      	str	r0, [sp, #4]
 8024f70:	2b00      	cmp	r3, #0
 8024f72:	f1a1 0404 	sub.w	r4, r1, #4
 8024f76:	bfb8      	it	lt
 8024f78:	18e4      	addlt	r4, r4, r3
 8024f7a:	f001 f83d 	bl	8025ff8 <__malloc_lock>
 8024f7e:	4a20      	ldr	r2, [pc, #128]	; (8025000 <_free_r+0x9c>)
 8024f80:	9801      	ldr	r0, [sp, #4]
 8024f82:	6813      	ldr	r3, [r2, #0]
 8024f84:	4615      	mov	r5, r2
 8024f86:	b933      	cbnz	r3, 8024f96 <_free_r+0x32>
 8024f88:	6063      	str	r3, [r4, #4]
 8024f8a:	6014      	str	r4, [r2, #0]
 8024f8c:	b003      	add	sp, #12
 8024f8e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024f92:	f001 b837 	b.w	8026004 <__malloc_unlock>
 8024f96:	42a3      	cmp	r3, r4
 8024f98:	d90b      	bls.n	8024fb2 <_free_r+0x4e>
 8024f9a:	6821      	ldr	r1, [r4, #0]
 8024f9c:	1862      	adds	r2, r4, r1
 8024f9e:	4293      	cmp	r3, r2
 8024fa0:	bf04      	itt	eq
 8024fa2:	681a      	ldreq	r2, [r3, #0]
 8024fa4:	685b      	ldreq	r3, [r3, #4]
 8024fa6:	6063      	str	r3, [r4, #4]
 8024fa8:	bf04      	itt	eq
 8024faa:	1852      	addeq	r2, r2, r1
 8024fac:	6022      	streq	r2, [r4, #0]
 8024fae:	602c      	str	r4, [r5, #0]
 8024fb0:	e7ec      	b.n	8024f8c <_free_r+0x28>
 8024fb2:	461a      	mov	r2, r3
 8024fb4:	685b      	ldr	r3, [r3, #4]
 8024fb6:	b10b      	cbz	r3, 8024fbc <_free_r+0x58>
 8024fb8:	42a3      	cmp	r3, r4
 8024fba:	d9fa      	bls.n	8024fb2 <_free_r+0x4e>
 8024fbc:	6811      	ldr	r1, [r2, #0]
 8024fbe:	1855      	adds	r5, r2, r1
 8024fc0:	42a5      	cmp	r5, r4
 8024fc2:	d10b      	bne.n	8024fdc <_free_r+0x78>
 8024fc4:	6824      	ldr	r4, [r4, #0]
 8024fc6:	4421      	add	r1, r4
 8024fc8:	1854      	adds	r4, r2, r1
 8024fca:	42a3      	cmp	r3, r4
 8024fcc:	6011      	str	r1, [r2, #0]
 8024fce:	d1dd      	bne.n	8024f8c <_free_r+0x28>
 8024fd0:	681c      	ldr	r4, [r3, #0]
 8024fd2:	685b      	ldr	r3, [r3, #4]
 8024fd4:	6053      	str	r3, [r2, #4]
 8024fd6:	4421      	add	r1, r4
 8024fd8:	6011      	str	r1, [r2, #0]
 8024fda:	e7d7      	b.n	8024f8c <_free_r+0x28>
 8024fdc:	d902      	bls.n	8024fe4 <_free_r+0x80>
 8024fde:	230c      	movs	r3, #12
 8024fe0:	6003      	str	r3, [r0, #0]
 8024fe2:	e7d3      	b.n	8024f8c <_free_r+0x28>
 8024fe4:	6825      	ldr	r5, [r4, #0]
 8024fe6:	1961      	adds	r1, r4, r5
 8024fe8:	428b      	cmp	r3, r1
 8024fea:	bf04      	itt	eq
 8024fec:	6819      	ldreq	r1, [r3, #0]
 8024fee:	685b      	ldreq	r3, [r3, #4]
 8024ff0:	6063      	str	r3, [r4, #4]
 8024ff2:	bf04      	itt	eq
 8024ff4:	1949      	addeq	r1, r1, r5
 8024ff6:	6021      	streq	r1, [r4, #0]
 8024ff8:	6054      	str	r4, [r2, #4]
 8024ffa:	e7c7      	b.n	8024f8c <_free_r+0x28>
 8024ffc:	b003      	add	sp, #12
 8024ffe:	bd30      	pop	{r4, r5, pc}
 8025000:	20002d88 	.word	0x20002d88

08025004 <_malloc_r>:
 8025004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025006:	1ccd      	adds	r5, r1, #3
 8025008:	f025 0503 	bic.w	r5, r5, #3
 802500c:	3508      	adds	r5, #8
 802500e:	2d0c      	cmp	r5, #12
 8025010:	bf38      	it	cc
 8025012:	250c      	movcc	r5, #12
 8025014:	2d00      	cmp	r5, #0
 8025016:	4606      	mov	r6, r0
 8025018:	db01      	blt.n	802501e <_malloc_r+0x1a>
 802501a:	42a9      	cmp	r1, r5
 802501c:	d903      	bls.n	8025026 <_malloc_r+0x22>
 802501e:	230c      	movs	r3, #12
 8025020:	6033      	str	r3, [r6, #0]
 8025022:	2000      	movs	r0, #0
 8025024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025026:	f000 ffe7 	bl	8025ff8 <__malloc_lock>
 802502a:	4921      	ldr	r1, [pc, #132]	; (80250b0 <_malloc_r+0xac>)
 802502c:	680a      	ldr	r2, [r1, #0]
 802502e:	4614      	mov	r4, r2
 8025030:	b99c      	cbnz	r4, 802505a <_malloc_r+0x56>
 8025032:	4f20      	ldr	r7, [pc, #128]	; (80250b4 <_malloc_r+0xb0>)
 8025034:	683b      	ldr	r3, [r7, #0]
 8025036:	b923      	cbnz	r3, 8025042 <_malloc_r+0x3e>
 8025038:	4621      	mov	r1, r4
 802503a:	4630      	mov	r0, r6
 802503c:	f000 fbb8 	bl	80257b0 <_sbrk_r>
 8025040:	6038      	str	r0, [r7, #0]
 8025042:	4629      	mov	r1, r5
 8025044:	4630      	mov	r0, r6
 8025046:	f000 fbb3 	bl	80257b0 <_sbrk_r>
 802504a:	1c43      	adds	r3, r0, #1
 802504c:	d123      	bne.n	8025096 <_malloc_r+0x92>
 802504e:	230c      	movs	r3, #12
 8025050:	6033      	str	r3, [r6, #0]
 8025052:	4630      	mov	r0, r6
 8025054:	f000 ffd6 	bl	8026004 <__malloc_unlock>
 8025058:	e7e3      	b.n	8025022 <_malloc_r+0x1e>
 802505a:	6823      	ldr	r3, [r4, #0]
 802505c:	1b5b      	subs	r3, r3, r5
 802505e:	d417      	bmi.n	8025090 <_malloc_r+0x8c>
 8025060:	2b0b      	cmp	r3, #11
 8025062:	d903      	bls.n	802506c <_malloc_r+0x68>
 8025064:	6023      	str	r3, [r4, #0]
 8025066:	441c      	add	r4, r3
 8025068:	6025      	str	r5, [r4, #0]
 802506a:	e004      	b.n	8025076 <_malloc_r+0x72>
 802506c:	6863      	ldr	r3, [r4, #4]
 802506e:	42a2      	cmp	r2, r4
 8025070:	bf0c      	ite	eq
 8025072:	600b      	streq	r3, [r1, #0]
 8025074:	6053      	strne	r3, [r2, #4]
 8025076:	4630      	mov	r0, r6
 8025078:	f000 ffc4 	bl	8026004 <__malloc_unlock>
 802507c:	f104 000b 	add.w	r0, r4, #11
 8025080:	1d23      	adds	r3, r4, #4
 8025082:	f020 0007 	bic.w	r0, r0, #7
 8025086:	1ac2      	subs	r2, r0, r3
 8025088:	d0cc      	beq.n	8025024 <_malloc_r+0x20>
 802508a:	1a1b      	subs	r3, r3, r0
 802508c:	50a3      	str	r3, [r4, r2]
 802508e:	e7c9      	b.n	8025024 <_malloc_r+0x20>
 8025090:	4622      	mov	r2, r4
 8025092:	6864      	ldr	r4, [r4, #4]
 8025094:	e7cc      	b.n	8025030 <_malloc_r+0x2c>
 8025096:	1cc4      	adds	r4, r0, #3
 8025098:	f024 0403 	bic.w	r4, r4, #3
 802509c:	42a0      	cmp	r0, r4
 802509e:	d0e3      	beq.n	8025068 <_malloc_r+0x64>
 80250a0:	1a21      	subs	r1, r4, r0
 80250a2:	4630      	mov	r0, r6
 80250a4:	f000 fb84 	bl	80257b0 <_sbrk_r>
 80250a8:	3001      	adds	r0, #1
 80250aa:	d1dd      	bne.n	8025068 <_malloc_r+0x64>
 80250ac:	e7cf      	b.n	802504e <_malloc_r+0x4a>
 80250ae:	bf00      	nop
 80250b0:	20002d88 	.word	0x20002d88
 80250b4:	20002d8c 	.word	0x20002d8c

080250b8 <__sfputc_r>:
 80250b8:	6893      	ldr	r3, [r2, #8]
 80250ba:	3b01      	subs	r3, #1
 80250bc:	2b00      	cmp	r3, #0
 80250be:	b410      	push	{r4}
 80250c0:	6093      	str	r3, [r2, #8]
 80250c2:	da08      	bge.n	80250d6 <__sfputc_r+0x1e>
 80250c4:	6994      	ldr	r4, [r2, #24]
 80250c6:	42a3      	cmp	r3, r4
 80250c8:	db01      	blt.n	80250ce <__sfputc_r+0x16>
 80250ca:	290a      	cmp	r1, #10
 80250cc:	d103      	bne.n	80250d6 <__sfputc_r+0x1e>
 80250ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80250d2:	f000 bc4f 	b.w	8025974 <__swbuf_r>
 80250d6:	6813      	ldr	r3, [r2, #0]
 80250d8:	1c58      	adds	r0, r3, #1
 80250da:	6010      	str	r0, [r2, #0]
 80250dc:	7019      	strb	r1, [r3, #0]
 80250de:	4608      	mov	r0, r1
 80250e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80250e4:	4770      	bx	lr

080250e6 <__sfputs_r>:
 80250e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80250e8:	4606      	mov	r6, r0
 80250ea:	460f      	mov	r7, r1
 80250ec:	4614      	mov	r4, r2
 80250ee:	18d5      	adds	r5, r2, r3
 80250f0:	42ac      	cmp	r4, r5
 80250f2:	d101      	bne.n	80250f8 <__sfputs_r+0x12>
 80250f4:	2000      	movs	r0, #0
 80250f6:	e007      	b.n	8025108 <__sfputs_r+0x22>
 80250f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80250fc:	463a      	mov	r2, r7
 80250fe:	4630      	mov	r0, r6
 8025100:	f7ff ffda 	bl	80250b8 <__sfputc_r>
 8025104:	1c43      	adds	r3, r0, #1
 8025106:	d1f3      	bne.n	80250f0 <__sfputs_r+0xa>
 8025108:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802510c <_vfiprintf_r>:
 802510c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025110:	460d      	mov	r5, r1
 8025112:	b09d      	sub	sp, #116	; 0x74
 8025114:	4614      	mov	r4, r2
 8025116:	4698      	mov	r8, r3
 8025118:	4606      	mov	r6, r0
 802511a:	b118      	cbz	r0, 8025124 <_vfiprintf_r+0x18>
 802511c:	6983      	ldr	r3, [r0, #24]
 802511e:	b90b      	cbnz	r3, 8025124 <_vfiprintf_r+0x18>
 8025120:	f000 fe64 	bl	8025dec <__sinit>
 8025124:	4b89      	ldr	r3, [pc, #548]	; (802534c <_vfiprintf_r+0x240>)
 8025126:	429d      	cmp	r5, r3
 8025128:	d11b      	bne.n	8025162 <_vfiprintf_r+0x56>
 802512a:	6875      	ldr	r5, [r6, #4]
 802512c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802512e:	07d9      	lsls	r1, r3, #31
 8025130:	d405      	bmi.n	802513e <_vfiprintf_r+0x32>
 8025132:	89ab      	ldrh	r3, [r5, #12]
 8025134:	059a      	lsls	r2, r3, #22
 8025136:	d402      	bmi.n	802513e <_vfiprintf_r+0x32>
 8025138:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802513a:	f000 fef5 	bl	8025f28 <__retarget_lock_acquire_recursive>
 802513e:	89ab      	ldrh	r3, [r5, #12]
 8025140:	071b      	lsls	r3, r3, #28
 8025142:	d501      	bpl.n	8025148 <_vfiprintf_r+0x3c>
 8025144:	692b      	ldr	r3, [r5, #16]
 8025146:	b9eb      	cbnz	r3, 8025184 <_vfiprintf_r+0x78>
 8025148:	4629      	mov	r1, r5
 802514a:	4630      	mov	r0, r6
 802514c:	f000 fc64 	bl	8025a18 <__swsetup_r>
 8025150:	b1c0      	cbz	r0, 8025184 <_vfiprintf_r+0x78>
 8025152:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025154:	07dc      	lsls	r4, r3, #31
 8025156:	d50e      	bpl.n	8025176 <_vfiprintf_r+0x6a>
 8025158:	f04f 30ff 	mov.w	r0, #4294967295
 802515c:	b01d      	add	sp, #116	; 0x74
 802515e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025162:	4b7b      	ldr	r3, [pc, #492]	; (8025350 <_vfiprintf_r+0x244>)
 8025164:	429d      	cmp	r5, r3
 8025166:	d101      	bne.n	802516c <_vfiprintf_r+0x60>
 8025168:	68b5      	ldr	r5, [r6, #8]
 802516a:	e7df      	b.n	802512c <_vfiprintf_r+0x20>
 802516c:	4b79      	ldr	r3, [pc, #484]	; (8025354 <_vfiprintf_r+0x248>)
 802516e:	429d      	cmp	r5, r3
 8025170:	bf08      	it	eq
 8025172:	68f5      	ldreq	r5, [r6, #12]
 8025174:	e7da      	b.n	802512c <_vfiprintf_r+0x20>
 8025176:	89ab      	ldrh	r3, [r5, #12]
 8025178:	0598      	lsls	r0, r3, #22
 802517a:	d4ed      	bmi.n	8025158 <_vfiprintf_r+0x4c>
 802517c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802517e:	f000 fed5 	bl	8025f2c <__retarget_lock_release_recursive>
 8025182:	e7e9      	b.n	8025158 <_vfiprintf_r+0x4c>
 8025184:	2300      	movs	r3, #0
 8025186:	9309      	str	r3, [sp, #36]	; 0x24
 8025188:	2320      	movs	r3, #32
 802518a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802518e:	f8cd 800c 	str.w	r8, [sp, #12]
 8025192:	2330      	movs	r3, #48	; 0x30
 8025194:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8025358 <_vfiprintf_r+0x24c>
 8025198:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802519c:	f04f 0901 	mov.w	r9, #1
 80251a0:	4623      	mov	r3, r4
 80251a2:	469a      	mov	sl, r3
 80251a4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80251a8:	b10a      	cbz	r2, 80251ae <_vfiprintf_r+0xa2>
 80251aa:	2a25      	cmp	r2, #37	; 0x25
 80251ac:	d1f9      	bne.n	80251a2 <_vfiprintf_r+0x96>
 80251ae:	ebba 0b04 	subs.w	fp, sl, r4
 80251b2:	d00b      	beq.n	80251cc <_vfiprintf_r+0xc0>
 80251b4:	465b      	mov	r3, fp
 80251b6:	4622      	mov	r2, r4
 80251b8:	4629      	mov	r1, r5
 80251ba:	4630      	mov	r0, r6
 80251bc:	f7ff ff93 	bl	80250e6 <__sfputs_r>
 80251c0:	3001      	adds	r0, #1
 80251c2:	f000 80aa 	beq.w	802531a <_vfiprintf_r+0x20e>
 80251c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80251c8:	445a      	add	r2, fp
 80251ca:	9209      	str	r2, [sp, #36]	; 0x24
 80251cc:	f89a 3000 	ldrb.w	r3, [sl]
 80251d0:	2b00      	cmp	r3, #0
 80251d2:	f000 80a2 	beq.w	802531a <_vfiprintf_r+0x20e>
 80251d6:	2300      	movs	r3, #0
 80251d8:	f04f 32ff 	mov.w	r2, #4294967295
 80251dc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80251e0:	f10a 0a01 	add.w	sl, sl, #1
 80251e4:	9304      	str	r3, [sp, #16]
 80251e6:	9307      	str	r3, [sp, #28]
 80251e8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80251ec:	931a      	str	r3, [sp, #104]	; 0x68
 80251ee:	4654      	mov	r4, sl
 80251f0:	2205      	movs	r2, #5
 80251f2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80251f6:	4858      	ldr	r0, [pc, #352]	; (8025358 <_vfiprintf_r+0x24c>)
 80251f8:	f7da ffea 	bl	80001d0 <memchr>
 80251fc:	9a04      	ldr	r2, [sp, #16]
 80251fe:	b9d8      	cbnz	r0, 8025238 <_vfiprintf_r+0x12c>
 8025200:	06d1      	lsls	r1, r2, #27
 8025202:	bf44      	itt	mi
 8025204:	2320      	movmi	r3, #32
 8025206:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802520a:	0713      	lsls	r3, r2, #28
 802520c:	bf44      	itt	mi
 802520e:	232b      	movmi	r3, #43	; 0x2b
 8025210:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025214:	f89a 3000 	ldrb.w	r3, [sl]
 8025218:	2b2a      	cmp	r3, #42	; 0x2a
 802521a:	d015      	beq.n	8025248 <_vfiprintf_r+0x13c>
 802521c:	9a07      	ldr	r2, [sp, #28]
 802521e:	4654      	mov	r4, sl
 8025220:	2000      	movs	r0, #0
 8025222:	f04f 0c0a 	mov.w	ip, #10
 8025226:	4621      	mov	r1, r4
 8025228:	f811 3b01 	ldrb.w	r3, [r1], #1
 802522c:	3b30      	subs	r3, #48	; 0x30
 802522e:	2b09      	cmp	r3, #9
 8025230:	d94e      	bls.n	80252d0 <_vfiprintf_r+0x1c4>
 8025232:	b1b0      	cbz	r0, 8025262 <_vfiprintf_r+0x156>
 8025234:	9207      	str	r2, [sp, #28]
 8025236:	e014      	b.n	8025262 <_vfiprintf_r+0x156>
 8025238:	eba0 0308 	sub.w	r3, r0, r8
 802523c:	fa09 f303 	lsl.w	r3, r9, r3
 8025240:	4313      	orrs	r3, r2
 8025242:	9304      	str	r3, [sp, #16]
 8025244:	46a2      	mov	sl, r4
 8025246:	e7d2      	b.n	80251ee <_vfiprintf_r+0xe2>
 8025248:	9b03      	ldr	r3, [sp, #12]
 802524a:	1d19      	adds	r1, r3, #4
 802524c:	681b      	ldr	r3, [r3, #0]
 802524e:	9103      	str	r1, [sp, #12]
 8025250:	2b00      	cmp	r3, #0
 8025252:	bfbb      	ittet	lt
 8025254:	425b      	neglt	r3, r3
 8025256:	f042 0202 	orrlt.w	r2, r2, #2
 802525a:	9307      	strge	r3, [sp, #28]
 802525c:	9307      	strlt	r3, [sp, #28]
 802525e:	bfb8      	it	lt
 8025260:	9204      	strlt	r2, [sp, #16]
 8025262:	7823      	ldrb	r3, [r4, #0]
 8025264:	2b2e      	cmp	r3, #46	; 0x2e
 8025266:	d10c      	bne.n	8025282 <_vfiprintf_r+0x176>
 8025268:	7863      	ldrb	r3, [r4, #1]
 802526a:	2b2a      	cmp	r3, #42	; 0x2a
 802526c:	d135      	bne.n	80252da <_vfiprintf_r+0x1ce>
 802526e:	9b03      	ldr	r3, [sp, #12]
 8025270:	1d1a      	adds	r2, r3, #4
 8025272:	681b      	ldr	r3, [r3, #0]
 8025274:	9203      	str	r2, [sp, #12]
 8025276:	2b00      	cmp	r3, #0
 8025278:	bfb8      	it	lt
 802527a:	f04f 33ff 	movlt.w	r3, #4294967295
 802527e:	3402      	adds	r4, #2
 8025280:	9305      	str	r3, [sp, #20]
 8025282:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8025368 <_vfiprintf_r+0x25c>
 8025286:	7821      	ldrb	r1, [r4, #0]
 8025288:	2203      	movs	r2, #3
 802528a:	4650      	mov	r0, sl
 802528c:	f7da ffa0 	bl	80001d0 <memchr>
 8025290:	b140      	cbz	r0, 80252a4 <_vfiprintf_r+0x198>
 8025292:	2340      	movs	r3, #64	; 0x40
 8025294:	eba0 000a 	sub.w	r0, r0, sl
 8025298:	fa03 f000 	lsl.w	r0, r3, r0
 802529c:	9b04      	ldr	r3, [sp, #16]
 802529e:	4303      	orrs	r3, r0
 80252a0:	3401      	adds	r4, #1
 80252a2:	9304      	str	r3, [sp, #16]
 80252a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80252a8:	482c      	ldr	r0, [pc, #176]	; (802535c <_vfiprintf_r+0x250>)
 80252aa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80252ae:	2206      	movs	r2, #6
 80252b0:	f7da ff8e 	bl	80001d0 <memchr>
 80252b4:	2800      	cmp	r0, #0
 80252b6:	d03f      	beq.n	8025338 <_vfiprintf_r+0x22c>
 80252b8:	4b29      	ldr	r3, [pc, #164]	; (8025360 <_vfiprintf_r+0x254>)
 80252ba:	bb1b      	cbnz	r3, 8025304 <_vfiprintf_r+0x1f8>
 80252bc:	9b03      	ldr	r3, [sp, #12]
 80252be:	3307      	adds	r3, #7
 80252c0:	f023 0307 	bic.w	r3, r3, #7
 80252c4:	3308      	adds	r3, #8
 80252c6:	9303      	str	r3, [sp, #12]
 80252c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80252ca:	443b      	add	r3, r7
 80252cc:	9309      	str	r3, [sp, #36]	; 0x24
 80252ce:	e767      	b.n	80251a0 <_vfiprintf_r+0x94>
 80252d0:	fb0c 3202 	mla	r2, ip, r2, r3
 80252d4:	460c      	mov	r4, r1
 80252d6:	2001      	movs	r0, #1
 80252d8:	e7a5      	b.n	8025226 <_vfiprintf_r+0x11a>
 80252da:	2300      	movs	r3, #0
 80252dc:	3401      	adds	r4, #1
 80252de:	9305      	str	r3, [sp, #20]
 80252e0:	4619      	mov	r1, r3
 80252e2:	f04f 0c0a 	mov.w	ip, #10
 80252e6:	4620      	mov	r0, r4
 80252e8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80252ec:	3a30      	subs	r2, #48	; 0x30
 80252ee:	2a09      	cmp	r2, #9
 80252f0:	d903      	bls.n	80252fa <_vfiprintf_r+0x1ee>
 80252f2:	2b00      	cmp	r3, #0
 80252f4:	d0c5      	beq.n	8025282 <_vfiprintf_r+0x176>
 80252f6:	9105      	str	r1, [sp, #20]
 80252f8:	e7c3      	b.n	8025282 <_vfiprintf_r+0x176>
 80252fa:	fb0c 2101 	mla	r1, ip, r1, r2
 80252fe:	4604      	mov	r4, r0
 8025300:	2301      	movs	r3, #1
 8025302:	e7f0      	b.n	80252e6 <_vfiprintf_r+0x1da>
 8025304:	ab03      	add	r3, sp, #12
 8025306:	9300      	str	r3, [sp, #0]
 8025308:	462a      	mov	r2, r5
 802530a:	4b16      	ldr	r3, [pc, #88]	; (8025364 <_vfiprintf_r+0x258>)
 802530c:	a904      	add	r1, sp, #16
 802530e:	4630      	mov	r0, r6
 8025310:	f3af 8000 	nop.w
 8025314:	4607      	mov	r7, r0
 8025316:	1c78      	adds	r0, r7, #1
 8025318:	d1d6      	bne.n	80252c8 <_vfiprintf_r+0x1bc>
 802531a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802531c:	07d9      	lsls	r1, r3, #31
 802531e:	d405      	bmi.n	802532c <_vfiprintf_r+0x220>
 8025320:	89ab      	ldrh	r3, [r5, #12]
 8025322:	059a      	lsls	r2, r3, #22
 8025324:	d402      	bmi.n	802532c <_vfiprintf_r+0x220>
 8025326:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025328:	f000 fe00 	bl	8025f2c <__retarget_lock_release_recursive>
 802532c:	89ab      	ldrh	r3, [r5, #12]
 802532e:	065b      	lsls	r3, r3, #25
 8025330:	f53f af12 	bmi.w	8025158 <_vfiprintf_r+0x4c>
 8025334:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025336:	e711      	b.n	802515c <_vfiprintf_r+0x50>
 8025338:	ab03      	add	r3, sp, #12
 802533a:	9300      	str	r3, [sp, #0]
 802533c:	462a      	mov	r2, r5
 802533e:	4b09      	ldr	r3, [pc, #36]	; (8025364 <_vfiprintf_r+0x258>)
 8025340:	a904      	add	r1, sp, #16
 8025342:	4630      	mov	r0, r6
 8025344:	f000 f880 	bl	8025448 <_printf_i>
 8025348:	e7e4      	b.n	8025314 <_vfiprintf_r+0x208>
 802534a:	bf00      	nop
 802534c:	0802931c 	.word	0x0802931c
 8025350:	0802933c 	.word	0x0802933c
 8025354:	080292fc 	.word	0x080292fc
 8025358:	080291c0 	.word	0x080291c0
 802535c:	080291ca 	.word	0x080291ca
 8025360:	00000000 	.word	0x00000000
 8025364:	080250e7 	.word	0x080250e7
 8025368:	080291c6 	.word	0x080291c6

0802536c <_printf_common>:
 802536c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025370:	4616      	mov	r6, r2
 8025372:	4699      	mov	r9, r3
 8025374:	688a      	ldr	r2, [r1, #8]
 8025376:	690b      	ldr	r3, [r1, #16]
 8025378:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802537c:	4293      	cmp	r3, r2
 802537e:	bfb8      	it	lt
 8025380:	4613      	movlt	r3, r2
 8025382:	6033      	str	r3, [r6, #0]
 8025384:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8025388:	4607      	mov	r7, r0
 802538a:	460c      	mov	r4, r1
 802538c:	b10a      	cbz	r2, 8025392 <_printf_common+0x26>
 802538e:	3301      	adds	r3, #1
 8025390:	6033      	str	r3, [r6, #0]
 8025392:	6823      	ldr	r3, [r4, #0]
 8025394:	0699      	lsls	r1, r3, #26
 8025396:	bf42      	ittt	mi
 8025398:	6833      	ldrmi	r3, [r6, #0]
 802539a:	3302      	addmi	r3, #2
 802539c:	6033      	strmi	r3, [r6, #0]
 802539e:	6825      	ldr	r5, [r4, #0]
 80253a0:	f015 0506 	ands.w	r5, r5, #6
 80253a4:	d106      	bne.n	80253b4 <_printf_common+0x48>
 80253a6:	f104 0a19 	add.w	sl, r4, #25
 80253aa:	68e3      	ldr	r3, [r4, #12]
 80253ac:	6832      	ldr	r2, [r6, #0]
 80253ae:	1a9b      	subs	r3, r3, r2
 80253b0:	42ab      	cmp	r3, r5
 80253b2:	dc26      	bgt.n	8025402 <_printf_common+0x96>
 80253b4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80253b8:	1e13      	subs	r3, r2, #0
 80253ba:	6822      	ldr	r2, [r4, #0]
 80253bc:	bf18      	it	ne
 80253be:	2301      	movne	r3, #1
 80253c0:	0692      	lsls	r2, r2, #26
 80253c2:	d42b      	bmi.n	802541c <_printf_common+0xb0>
 80253c4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80253c8:	4649      	mov	r1, r9
 80253ca:	4638      	mov	r0, r7
 80253cc:	47c0      	blx	r8
 80253ce:	3001      	adds	r0, #1
 80253d0:	d01e      	beq.n	8025410 <_printf_common+0xa4>
 80253d2:	6823      	ldr	r3, [r4, #0]
 80253d4:	68e5      	ldr	r5, [r4, #12]
 80253d6:	6832      	ldr	r2, [r6, #0]
 80253d8:	f003 0306 	and.w	r3, r3, #6
 80253dc:	2b04      	cmp	r3, #4
 80253de:	bf08      	it	eq
 80253e0:	1aad      	subeq	r5, r5, r2
 80253e2:	68a3      	ldr	r3, [r4, #8]
 80253e4:	6922      	ldr	r2, [r4, #16]
 80253e6:	bf0c      	ite	eq
 80253e8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80253ec:	2500      	movne	r5, #0
 80253ee:	4293      	cmp	r3, r2
 80253f0:	bfc4      	itt	gt
 80253f2:	1a9b      	subgt	r3, r3, r2
 80253f4:	18ed      	addgt	r5, r5, r3
 80253f6:	2600      	movs	r6, #0
 80253f8:	341a      	adds	r4, #26
 80253fa:	42b5      	cmp	r5, r6
 80253fc:	d11a      	bne.n	8025434 <_printf_common+0xc8>
 80253fe:	2000      	movs	r0, #0
 8025400:	e008      	b.n	8025414 <_printf_common+0xa8>
 8025402:	2301      	movs	r3, #1
 8025404:	4652      	mov	r2, sl
 8025406:	4649      	mov	r1, r9
 8025408:	4638      	mov	r0, r7
 802540a:	47c0      	blx	r8
 802540c:	3001      	adds	r0, #1
 802540e:	d103      	bne.n	8025418 <_printf_common+0xac>
 8025410:	f04f 30ff 	mov.w	r0, #4294967295
 8025414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025418:	3501      	adds	r5, #1
 802541a:	e7c6      	b.n	80253aa <_printf_common+0x3e>
 802541c:	18e1      	adds	r1, r4, r3
 802541e:	1c5a      	adds	r2, r3, #1
 8025420:	2030      	movs	r0, #48	; 0x30
 8025422:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8025426:	4422      	add	r2, r4
 8025428:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802542c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025430:	3302      	adds	r3, #2
 8025432:	e7c7      	b.n	80253c4 <_printf_common+0x58>
 8025434:	2301      	movs	r3, #1
 8025436:	4622      	mov	r2, r4
 8025438:	4649      	mov	r1, r9
 802543a:	4638      	mov	r0, r7
 802543c:	47c0      	blx	r8
 802543e:	3001      	adds	r0, #1
 8025440:	d0e6      	beq.n	8025410 <_printf_common+0xa4>
 8025442:	3601      	adds	r6, #1
 8025444:	e7d9      	b.n	80253fa <_printf_common+0x8e>
	...

08025448 <_printf_i>:
 8025448:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802544c:	460c      	mov	r4, r1
 802544e:	4691      	mov	r9, r2
 8025450:	7e27      	ldrb	r7, [r4, #24]
 8025452:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025454:	2f78      	cmp	r7, #120	; 0x78
 8025456:	4680      	mov	r8, r0
 8025458:	469a      	mov	sl, r3
 802545a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802545e:	d807      	bhi.n	8025470 <_printf_i+0x28>
 8025460:	2f62      	cmp	r7, #98	; 0x62
 8025462:	d80a      	bhi.n	802547a <_printf_i+0x32>
 8025464:	2f00      	cmp	r7, #0
 8025466:	f000 80d8 	beq.w	802561a <_printf_i+0x1d2>
 802546a:	2f58      	cmp	r7, #88	; 0x58
 802546c:	f000 80a3 	beq.w	80255b6 <_printf_i+0x16e>
 8025470:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8025474:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8025478:	e03a      	b.n	80254f0 <_printf_i+0xa8>
 802547a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802547e:	2b15      	cmp	r3, #21
 8025480:	d8f6      	bhi.n	8025470 <_printf_i+0x28>
 8025482:	a001      	add	r0, pc, #4	; (adr r0, 8025488 <_printf_i+0x40>)
 8025484:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8025488:	080254e1 	.word	0x080254e1
 802548c:	080254f5 	.word	0x080254f5
 8025490:	08025471 	.word	0x08025471
 8025494:	08025471 	.word	0x08025471
 8025498:	08025471 	.word	0x08025471
 802549c:	08025471 	.word	0x08025471
 80254a0:	080254f5 	.word	0x080254f5
 80254a4:	08025471 	.word	0x08025471
 80254a8:	08025471 	.word	0x08025471
 80254ac:	08025471 	.word	0x08025471
 80254b0:	08025471 	.word	0x08025471
 80254b4:	08025601 	.word	0x08025601
 80254b8:	08025525 	.word	0x08025525
 80254bc:	080255e3 	.word	0x080255e3
 80254c0:	08025471 	.word	0x08025471
 80254c4:	08025471 	.word	0x08025471
 80254c8:	08025623 	.word	0x08025623
 80254cc:	08025471 	.word	0x08025471
 80254d0:	08025525 	.word	0x08025525
 80254d4:	08025471 	.word	0x08025471
 80254d8:	08025471 	.word	0x08025471
 80254dc:	080255eb 	.word	0x080255eb
 80254e0:	680b      	ldr	r3, [r1, #0]
 80254e2:	1d1a      	adds	r2, r3, #4
 80254e4:	681b      	ldr	r3, [r3, #0]
 80254e6:	600a      	str	r2, [r1, #0]
 80254e8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80254ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80254f0:	2301      	movs	r3, #1
 80254f2:	e0a3      	b.n	802563c <_printf_i+0x1f4>
 80254f4:	6825      	ldr	r5, [r4, #0]
 80254f6:	6808      	ldr	r0, [r1, #0]
 80254f8:	062e      	lsls	r6, r5, #24
 80254fa:	f100 0304 	add.w	r3, r0, #4
 80254fe:	d50a      	bpl.n	8025516 <_printf_i+0xce>
 8025500:	6805      	ldr	r5, [r0, #0]
 8025502:	600b      	str	r3, [r1, #0]
 8025504:	2d00      	cmp	r5, #0
 8025506:	da03      	bge.n	8025510 <_printf_i+0xc8>
 8025508:	232d      	movs	r3, #45	; 0x2d
 802550a:	426d      	negs	r5, r5
 802550c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025510:	485e      	ldr	r0, [pc, #376]	; (802568c <_printf_i+0x244>)
 8025512:	230a      	movs	r3, #10
 8025514:	e019      	b.n	802554a <_printf_i+0x102>
 8025516:	f015 0f40 	tst.w	r5, #64	; 0x40
 802551a:	6805      	ldr	r5, [r0, #0]
 802551c:	600b      	str	r3, [r1, #0]
 802551e:	bf18      	it	ne
 8025520:	b22d      	sxthne	r5, r5
 8025522:	e7ef      	b.n	8025504 <_printf_i+0xbc>
 8025524:	680b      	ldr	r3, [r1, #0]
 8025526:	6825      	ldr	r5, [r4, #0]
 8025528:	1d18      	adds	r0, r3, #4
 802552a:	6008      	str	r0, [r1, #0]
 802552c:	0628      	lsls	r0, r5, #24
 802552e:	d501      	bpl.n	8025534 <_printf_i+0xec>
 8025530:	681d      	ldr	r5, [r3, #0]
 8025532:	e002      	b.n	802553a <_printf_i+0xf2>
 8025534:	0669      	lsls	r1, r5, #25
 8025536:	d5fb      	bpl.n	8025530 <_printf_i+0xe8>
 8025538:	881d      	ldrh	r5, [r3, #0]
 802553a:	4854      	ldr	r0, [pc, #336]	; (802568c <_printf_i+0x244>)
 802553c:	2f6f      	cmp	r7, #111	; 0x6f
 802553e:	bf0c      	ite	eq
 8025540:	2308      	moveq	r3, #8
 8025542:	230a      	movne	r3, #10
 8025544:	2100      	movs	r1, #0
 8025546:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802554a:	6866      	ldr	r6, [r4, #4]
 802554c:	60a6      	str	r6, [r4, #8]
 802554e:	2e00      	cmp	r6, #0
 8025550:	bfa2      	ittt	ge
 8025552:	6821      	ldrge	r1, [r4, #0]
 8025554:	f021 0104 	bicge.w	r1, r1, #4
 8025558:	6021      	strge	r1, [r4, #0]
 802555a:	b90d      	cbnz	r5, 8025560 <_printf_i+0x118>
 802555c:	2e00      	cmp	r6, #0
 802555e:	d04d      	beq.n	80255fc <_printf_i+0x1b4>
 8025560:	4616      	mov	r6, r2
 8025562:	fbb5 f1f3 	udiv	r1, r5, r3
 8025566:	fb03 5711 	mls	r7, r3, r1, r5
 802556a:	5dc7      	ldrb	r7, [r0, r7]
 802556c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8025570:	462f      	mov	r7, r5
 8025572:	42bb      	cmp	r3, r7
 8025574:	460d      	mov	r5, r1
 8025576:	d9f4      	bls.n	8025562 <_printf_i+0x11a>
 8025578:	2b08      	cmp	r3, #8
 802557a:	d10b      	bne.n	8025594 <_printf_i+0x14c>
 802557c:	6823      	ldr	r3, [r4, #0]
 802557e:	07df      	lsls	r7, r3, #31
 8025580:	d508      	bpl.n	8025594 <_printf_i+0x14c>
 8025582:	6923      	ldr	r3, [r4, #16]
 8025584:	6861      	ldr	r1, [r4, #4]
 8025586:	4299      	cmp	r1, r3
 8025588:	bfde      	ittt	le
 802558a:	2330      	movle	r3, #48	; 0x30
 802558c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8025590:	f106 36ff 	addle.w	r6, r6, #4294967295
 8025594:	1b92      	subs	r2, r2, r6
 8025596:	6122      	str	r2, [r4, #16]
 8025598:	f8cd a000 	str.w	sl, [sp]
 802559c:	464b      	mov	r3, r9
 802559e:	aa03      	add	r2, sp, #12
 80255a0:	4621      	mov	r1, r4
 80255a2:	4640      	mov	r0, r8
 80255a4:	f7ff fee2 	bl	802536c <_printf_common>
 80255a8:	3001      	adds	r0, #1
 80255aa:	d14c      	bne.n	8025646 <_printf_i+0x1fe>
 80255ac:	f04f 30ff 	mov.w	r0, #4294967295
 80255b0:	b004      	add	sp, #16
 80255b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80255b6:	4835      	ldr	r0, [pc, #212]	; (802568c <_printf_i+0x244>)
 80255b8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80255bc:	6823      	ldr	r3, [r4, #0]
 80255be:	680e      	ldr	r6, [r1, #0]
 80255c0:	061f      	lsls	r7, r3, #24
 80255c2:	f856 5b04 	ldr.w	r5, [r6], #4
 80255c6:	600e      	str	r6, [r1, #0]
 80255c8:	d514      	bpl.n	80255f4 <_printf_i+0x1ac>
 80255ca:	07d9      	lsls	r1, r3, #31
 80255cc:	bf44      	itt	mi
 80255ce:	f043 0320 	orrmi.w	r3, r3, #32
 80255d2:	6023      	strmi	r3, [r4, #0]
 80255d4:	b91d      	cbnz	r5, 80255de <_printf_i+0x196>
 80255d6:	6823      	ldr	r3, [r4, #0]
 80255d8:	f023 0320 	bic.w	r3, r3, #32
 80255dc:	6023      	str	r3, [r4, #0]
 80255de:	2310      	movs	r3, #16
 80255e0:	e7b0      	b.n	8025544 <_printf_i+0xfc>
 80255e2:	6823      	ldr	r3, [r4, #0]
 80255e4:	f043 0320 	orr.w	r3, r3, #32
 80255e8:	6023      	str	r3, [r4, #0]
 80255ea:	2378      	movs	r3, #120	; 0x78
 80255ec:	4828      	ldr	r0, [pc, #160]	; (8025690 <_printf_i+0x248>)
 80255ee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80255f2:	e7e3      	b.n	80255bc <_printf_i+0x174>
 80255f4:	065e      	lsls	r6, r3, #25
 80255f6:	bf48      	it	mi
 80255f8:	b2ad      	uxthmi	r5, r5
 80255fa:	e7e6      	b.n	80255ca <_printf_i+0x182>
 80255fc:	4616      	mov	r6, r2
 80255fe:	e7bb      	b.n	8025578 <_printf_i+0x130>
 8025600:	680b      	ldr	r3, [r1, #0]
 8025602:	6826      	ldr	r6, [r4, #0]
 8025604:	6960      	ldr	r0, [r4, #20]
 8025606:	1d1d      	adds	r5, r3, #4
 8025608:	600d      	str	r5, [r1, #0]
 802560a:	0635      	lsls	r5, r6, #24
 802560c:	681b      	ldr	r3, [r3, #0]
 802560e:	d501      	bpl.n	8025614 <_printf_i+0x1cc>
 8025610:	6018      	str	r0, [r3, #0]
 8025612:	e002      	b.n	802561a <_printf_i+0x1d2>
 8025614:	0671      	lsls	r1, r6, #25
 8025616:	d5fb      	bpl.n	8025610 <_printf_i+0x1c8>
 8025618:	8018      	strh	r0, [r3, #0]
 802561a:	2300      	movs	r3, #0
 802561c:	6123      	str	r3, [r4, #16]
 802561e:	4616      	mov	r6, r2
 8025620:	e7ba      	b.n	8025598 <_printf_i+0x150>
 8025622:	680b      	ldr	r3, [r1, #0]
 8025624:	1d1a      	adds	r2, r3, #4
 8025626:	600a      	str	r2, [r1, #0]
 8025628:	681e      	ldr	r6, [r3, #0]
 802562a:	6862      	ldr	r2, [r4, #4]
 802562c:	2100      	movs	r1, #0
 802562e:	4630      	mov	r0, r6
 8025630:	f7da fdce 	bl	80001d0 <memchr>
 8025634:	b108      	cbz	r0, 802563a <_printf_i+0x1f2>
 8025636:	1b80      	subs	r0, r0, r6
 8025638:	6060      	str	r0, [r4, #4]
 802563a:	6863      	ldr	r3, [r4, #4]
 802563c:	6123      	str	r3, [r4, #16]
 802563e:	2300      	movs	r3, #0
 8025640:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025644:	e7a8      	b.n	8025598 <_printf_i+0x150>
 8025646:	6923      	ldr	r3, [r4, #16]
 8025648:	4632      	mov	r2, r6
 802564a:	4649      	mov	r1, r9
 802564c:	4640      	mov	r0, r8
 802564e:	47d0      	blx	sl
 8025650:	3001      	adds	r0, #1
 8025652:	d0ab      	beq.n	80255ac <_printf_i+0x164>
 8025654:	6823      	ldr	r3, [r4, #0]
 8025656:	079b      	lsls	r3, r3, #30
 8025658:	d413      	bmi.n	8025682 <_printf_i+0x23a>
 802565a:	68e0      	ldr	r0, [r4, #12]
 802565c:	9b03      	ldr	r3, [sp, #12]
 802565e:	4298      	cmp	r0, r3
 8025660:	bfb8      	it	lt
 8025662:	4618      	movlt	r0, r3
 8025664:	e7a4      	b.n	80255b0 <_printf_i+0x168>
 8025666:	2301      	movs	r3, #1
 8025668:	4632      	mov	r2, r6
 802566a:	4649      	mov	r1, r9
 802566c:	4640      	mov	r0, r8
 802566e:	47d0      	blx	sl
 8025670:	3001      	adds	r0, #1
 8025672:	d09b      	beq.n	80255ac <_printf_i+0x164>
 8025674:	3501      	adds	r5, #1
 8025676:	68e3      	ldr	r3, [r4, #12]
 8025678:	9903      	ldr	r1, [sp, #12]
 802567a:	1a5b      	subs	r3, r3, r1
 802567c:	42ab      	cmp	r3, r5
 802567e:	dcf2      	bgt.n	8025666 <_printf_i+0x21e>
 8025680:	e7eb      	b.n	802565a <_printf_i+0x212>
 8025682:	2500      	movs	r5, #0
 8025684:	f104 0619 	add.w	r6, r4, #25
 8025688:	e7f5      	b.n	8025676 <_printf_i+0x22e>
 802568a:	bf00      	nop
 802568c:	080291d1 	.word	0x080291d1
 8025690:	080291e2 	.word	0x080291e2

08025694 <iprintf>:
 8025694:	b40f      	push	{r0, r1, r2, r3}
 8025696:	4b0a      	ldr	r3, [pc, #40]	; (80256c0 <iprintf+0x2c>)
 8025698:	b513      	push	{r0, r1, r4, lr}
 802569a:	681c      	ldr	r4, [r3, #0]
 802569c:	b124      	cbz	r4, 80256a8 <iprintf+0x14>
 802569e:	69a3      	ldr	r3, [r4, #24]
 80256a0:	b913      	cbnz	r3, 80256a8 <iprintf+0x14>
 80256a2:	4620      	mov	r0, r4
 80256a4:	f000 fba2 	bl	8025dec <__sinit>
 80256a8:	ab05      	add	r3, sp, #20
 80256aa:	9a04      	ldr	r2, [sp, #16]
 80256ac:	68a1      	ldr	r1, [r4, #8]
 80256ae:	9301      	str	r3, [sp, #4]
 80256b0:	4620      	mov	r0, r4
 80256b2:	f7ff fd2b 	bl	802510c <_vfiprintf_r>
 80256b6:	b002      	add	sp, #8
 80256b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80256bc:	b004      	add	sp, #16
 80256be:	4770      	bx	lr
 80256c0:	200001ec 	.word	0x200001ec

080256c4 <_puts_r>:
 80256c4:	b570      	push	{r4, r5, r6, lr}
 80256c6:	460e      	mov	r6, r1
 80256c8:	4605      	mov	r5, r0
 80256ca:	b118      	cbz	r0, 80256d4 <_puts_r+0x10>
 80256cc:	6983      	ldr	r3, [r0, #24]
 80256ce:	b90b      	cbnz	r3, 80256d4 <_puts_r+0x10>
 80256d0:	f000 fb8c 	bl	8025dec <__sinit>
 80256d4:	69ab      	ldr	r3, [r5, #24]
 80256d6:	68ac      	ldr	r4, [r5, #8]
 80256d8:	b913      	cbnz	r3, 80256e0 <_puts_r+0x1c>
 80256da:	4628      	mov	r0, r5
 80256dc:	f000 fb86 	bl	8025dec <__sinit>
 80256e0:	4b2c      	ldr	r3, [pc, #176]	; (8025794 <_puts_r+0xd0>)
 80256e2:	429c      	cmp	r4, r3
 80256e4:	d120      	bne.n	8025728 <_puts_r+0x64>
 80256e6:	686c      	ldr	r4, [r5, #4]
 80256e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80256ea:	07db      	lsls	r3, r3, #31
 80256ec:	d405      	bmi.n	80256fa <_puts_r+0x36>
 80256ee:	89a3      	ldrh	r3, [r4, #12]
 80256f0:	0598      	lsls	r0, r3, #22
 80256f2:	d402      	bmi.n	80256fa <_puts_r+0x36>
 80256f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80256f6:	f000 fc17 	bl	8025f28 <__retarget_lock_acquire_recursive>
 80256fa:	89a3      	ldrh	r3, [r4, #12]
 80256fc:	0719      	lsls	r1, r3, #28
 80256fe:	d51d      	bpl.n	802573c <_puts_r+0x78>
 8025700:	6923      	ldr	r3, [r4, #16]
 8025702:	b1db      	cbz	r3, 802573c <_puts_r+0x78>
 8025704:	3e01      	subs	r6, #1
 8025706:	68a3      	ldr	r3, [r4, #8]
 8025708:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802570c:	3b01      	subs	r3, #1
 802570e:	60a3      	str	r3, [r4, #8]
 8025710:	bb39      	cbnz	r1, 8025762 <_puts_r+0x9e>
 8025712:	2b00      	cmp	r3, #0
 8025714:	da38      	bge.n	8025788 <_puts_r+0xc4>
 8025716:	4622      	mov	r2, r4
 8025718:	210a      	movs	r1, #10
 802571a:	4628      	mov	r0, r5
 802571c:	f000 f92a 	bl	8025974 <__swbuf_r>
 8025720:	3001      	adds	r0, #1
 8025722:	d011      	beq.n	8025748 <_puts_r+0x84>
 8025724:	250a      	movs	r5, #10
 8025726:	e011      	b.n	802574c <_puts_r+0x88>
 8025728:	4b1b      	ldr	r3, [pc, #108]	; (8025798 <_puts_r+0xd4>)
 802572a:	429c      	cmp	r4, r3
 802572c:	d101      	bne.n	8025732 <_puts_r+0x6e>
 802572e:	68ac      	ldr	r4, [r5, #8]
 8025730:	e7da      	b.n	80256e8 <_puts_r+0x24>
 8025732:	4b1a      	ldr	r3, [pc, #104]	; (802579c <_puts_r+0xd8>)
 8025734:	429c      	cmp	r4, r3
 8025736:	bf08      	it	eq
 8025738:	68ec      	ldreq	r4, [r5, #12]
 802573a:	e7d5      	b.n	80256e8 <_puts_r+0x24>
 802573c:	4621      	mov	r1, r4
 802573e:	4628      	mov	r0, r5
 8025740:	f000 f96a 	bl	8025a18 <__swsetup_r>
 8025744:	2800      	cmp	r0, #0
 8025746:	d0dd      	beq.n	8025704 <_puts_r+0x40>
 8025748:	f04f 35ff 	mov.w	r5, #4294967295
 802574c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802574e:	07da      	lsls	r2, r3, #31
 8025750:	d405      	bmi.n	802575e <_puts_r+0x9a>
 8025752:	89a3      	ldrh	r3, [r4, #12]
 8025754:	059b      	lsls	r3, r3, #22
 8025756:	d402      	bmi.n	802575e <_puts_r+0x9a>
 8025758:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802575a:	f000 fbe7 	bl	8025f2c <__retarget_lock_release_recursive>
 802575e:	4628      	mov	r0, r5
 8025760:	bd70      	pop	{r4, r5, r6, pc}
 8025762:	2b00      	cmp	r3, #0
 8025764:	da04      	bge.n	8025770 <_puts_r+0xac>
 8025766:	69a2      	ldr	r2, [r4, #24]
 8025768:	429a      	cmp	r2, r3
 802576a:	dc06      	bgt.n	802577a <_puts_r+0xb6>
 802576c:	290a      	cmp	r1, #10
 802576e:	d004      	beq.n	802577a <_puts_r+0xb6>
 8025770:	6823      	ldr	r3, [r4, #0]
 8025772:	1c5a      	adds	r2, r3, #1
 8025774:	6022      	str	r2, [r4, #0]
 8025776:	7019      	strb	r1, [r3, #0]
 8025778:	e7c5      	b.n	8025706 <_puts_r+0x42>
 802577a:	4622      	mov	r2, r4
 802577c:	4628      	mov	r0, r5
 802577e:	f000 f8f9 	bl	8025974 <__swbuf_r>
 8025782:	3001      	adds	r0, #1
 8025784:	d1bf      	bne.n	8025706 <_puts_r+0x42>
 8025786:	e7df      	b.n	8025748 <_puts_r+0x84>
 8025788:	6823      	ldr	r3, [r4, #0]
 802578a:	250a      	movs	r5, #10
 802578c:	1c5a      	adds	r2, r3, #1
 802578e:	6022      	str	r2, [r4, #0]
 8025790:	701d      	strb	r5, [r3, #0]
 8025792:	e7db      	b.n	802574c <_puts_r+0x88>
 8025794:	0802931c 	.word	0x0802931c
 8025798:	0802933c 	.word	0x0802933c
 802579c:	080292fc 	.word	0x080292fc

080257a0 <puts>:
 80257a0:	4b02      	ldr	r3, [pc, #8]	; (80257ac <puts+0xc>)
 80257a2:	4601      	mov	r1, r0
 80257a4:	6818      	ldr	r0, [r3, #0]
 80257a6:	f7ff bf8d 	b.w	80256c4 <_puts_r>
 80257aa:	bf00      	nop
 80257ac:	200001ec 	.word	0x200001ec

080257b0 <_sbrk_r>:
 80257b0:	b538      	push	{r3, r4, r5, lr}
 80257b2:	4d06      	ldr	r5, [pc, #24]	; (80257cc <_sbrk_r+0x1c>)
 80257b4:	2300      	movs	r3, #0
 80257b6:	4604      	mov	r4, r0
 80257b8:	4608      	mov	r0, r1
 80257ba:	602b      	str	r3, [r5, #0]
 80257bc:	f7db fa20 	bl	8000c00 <_sbrk>
 80257c0:	1c43      	adds	r3, r0, #1
 80257c2:	d102      	bne.n	80257ca <_sbrk_r+0x1a>
 80257c4:	682b      	ldr	r3, [r5, #0]
 80257c6:	b103      	cbz	r3, 80257ca <_sbrk_r+0x1a>
 80257c8:	6023      	str	r3, [r4, #0]
 80257ca:	bd38      	pop	{r3, r4, r5, pc}
 80257cc:	20013fd4 	.word	0x20013fd4

080257d0 <_raise_r>:
 80257d0:	291f      	cmp	r1, #31
 80257d2:	b538      	push	{r3, r4, r5, lr}
 80257d4:	4604      	mov	r4, r0
 80257d6:	460d      	mov	r5, r1
 80257d8:	d904      	bls.n	80257e4 <_raise_r+0x14>
 80257da:	2316      	movs	r3, #22
 80257dc:	6003      	str	r3, [r0, #0]
 80257de:	f04f 30ff 	mov.w	r0, #4294967295
 80257e2:	bd38      	pop	{r3, r4, r5, pc}
 80257e4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80257e6:	b112      	cbz	r2, 80257ee <_raise_r+0x1e>
 80257e8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80257ec:	b94b      	cbnz	r3, 8025802 <_raise_r+0x32>
 80257ee:	4620      	mov	r0, r4
 80257f0:	f000 f830 	bl	8025854 <_getpid_r>
 80257f4:	462a      	mov	r2, r5
 80257f6:	4601      	mov	r1, r0
 80257f8:	4620      	mov	r0, r4
 80257fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80257fe:	f000 b817 	b.w	8025830 <_kill_r>
 8025802:	2b01      	cmp	r3, #1
 8025804:	d00a      	beq.n	802581c <_raise_r+0x4c>
 8025806:	1c59      	adds	r1, r3, #1
 8025808:	d103      	bne.n	8025812 <_raise_r+0x42>
 802580a:	2316      	movs	r3, #22
 802580c:	6003      	str	r3, [r0, #0]
 802580e:	2001      	movs	r0, #1
 8025810:	e7e7      	b.n	80257e2 <_raise_r+0x12>
 8025812:	2400      	movs	r4, #0
 8025814:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8025818:	4628      	mov	r0, r5
 802581a:	4798      	blx	r3
 802581c:	2000      	movs	r0, #0
 802581e:	e7e0      	b.n	80257e2 <_raise_r+0x12>

08025820 <raise>:
 8025820:	4b02      	ldr	r3, [pc, #8]	; (802582c <raise+0xc>)
 8025822:	4601      	mov	r1, r0
 8025824:	6818      	ldr	r0, [r3, #0]
 8025826:	f7ff bfd3 	b.w	80257d0 <_raise_r>
 802582a:	bf00      	nop
 802582c:	200001ec 	.word	0x200001ec

08025830 <_kill_r>:
 8025830:	b538      	push	{r3, r4, r5, lr}
 8025832:	4d07      	ldr	r5, [pc, #28]	; (8025850 <_kill_r+0x20>)
 8025834:	2300      	movs	r3, #0
 8025836:	4604      	mov	r4, r0
 8025838:	4608      	mov	r0, r1
 802583a:	4611      	mov	r1, r2
 802583c:	602b      	str	r3, [r5, #0]
 802583e:	f7db f9a3 	bl	8000b88 <_kill>
 8025842:	1c43      	adds	r3, r0, #1
 8025844:	d102      	bne.n	802584c <_kill_r+0x1c>
 8025846:	682b      	ldr	r3, [r5, #0]
 8025848:	b103      	cbz	r3, 802584c <_kill_r+0x1c>
 802584a:	6023      	str	r3, [r4, #0]
 802584c:	bd38      	pop	{r3, r4, r5, pc}
 802584e:	bf00      	nop
 8025850:	20013fd4 	.word	0x20013fd4

08025854 <_getpid_r>:
 8025854:	f7db b996 	b.w	8000b84 <_getpid>

08025858 <_strtol_l.isra.0>:
 8025858:	2b01      	cmp	r3, #1
 802585a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802585e:	d001      	beq.n	8025864 <_strtol_l.isra.0+0xc>
 8025860:	2b24      	cmp	r3, #36	; 0x24
 8025862:	d906      	bls.n	8025872 <_strtol_l.isra.0+0x1a>
 8025864:	f7ff fb1c 	bl	8024ea0 <__errno>
 8025868:	2316      	movs	r3, #22
 802586a:	6003      	str	r3, [r0, #0]
 802586c:	2000      	movs	r0, #0
 802586e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025872:	4f3a      	ldr	r7, [pc, #232]	; (802595c <_strtol_l.isra.0+0x104>)
 8025874:	468e      	mov	lr, r1
 8025876:	4676      	mov	r6, lr
 8025878:	f81e 4b01 	ldrb.w	r4, [lr], #1
 802587c:	5de5      	ldrb	r5, [r4, r7]
 802587e:	f015 0508 	ands.w	r5, r5, #8
 8025882:	d1f8      	bne.n	8025876 <_strtol_l.isra.0+0x1e>
 8025884:	2c2d      	cmp	r4, #45	; 0x2d
 8025886:	d134      	bne.n	80258f2 <_strtol_l.isra.0+0x9a>
 8025888:	f89e 4000 	ldrb.w	r4, [lr]
 802588c:	f04f 0801 	mov.w	r8, #1
 8025890:	f106 0e02 	add.w	lr, r6, #2
 8025894:	2b00      	cmp	r3, #0
 8025896:	d05c      	beq.n	8025952 <_strtol_l.isra.0+0xfa>
 8025898:	2b10      	cmp	r3, #16
 802589a:	d10c      	bne.n	80258b6 <_strtol_l.isra.0+0x5e>
 802589c:	2c30      	cmp	r4, #48	; 0x30
 802589e:	d10a      	bne.n	80258b6 <_strtol_l.isra.0+0x5e>
 80258a0:	f89e 4000 	ldrb.w	r4, [lr]
 80258a4:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80258a8:	2c58      	cmp	r4, #88	; 0x58
 80258aa:	d14d      	bne.n	8025948 <_strtol_l.isra.0+0xf0>
 80258ac:	f89e 4001 	ldrb.w	r4, [lr, #1]
 80258b0:	2310      	movs	r3, #16
 80258b2:	f10e 0e02 	add.w	lr, lr, #2
 80258b6:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 80258ba:	f10c 3cff 	add.w	ip, ip, #4294967295
 80258be:	2600      	movs	r6, #0
 80258c0:	fbbc f9f3 	udiv	r9, ip, r3
 80258c4:	4635      	mov	r5, r6
 80258c6:	fb03 ca19 	mls	sl, r3, r9, ip
 80258ca:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 80258ce:	2f09      	cmp	r7, #9
 80258d0:	d818      	bhi.n	8025904 <_strtol_l.isra.0+0xac>
 80258d2:	463c      	mov	r4, r7
 80258d4:	42a3      	cmp	r3, r4
 80258d6:	dd24      	ble.n	8025922 <_strtol_l.isra.0+0xca>
 80258d8:	2e00      	cmp	r6, #0
 80258da:	db1f      	blt.n	802591c <_strtol_l.isra.0+0xc4>
 80258dc:	45a9      	cmp	r9, r5
 80258de:	d31d      	bcc.n	802591c <_strtol_l.isra.0+0xc4>
 80258e0:	d101      	bne.n	80258e6 <_strtol_l.isra.0+0x8e>
 80258e2:	45a2      	cmp	sl, r4
 80258e4:	db1a      	blt.n	802591c <_strtol_l.isra.0+0xc4>
 80258e6:	fb05 4503 	mla	r5, r5, r3, r4
 80258ea:	2601      	movs	r6, #1
 80258ec:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80258f0:	e7eb      	b.n	80258ca <_strtol_l.isra.0+0x72>
 80258f2:	2c2b      	cmp	r4, #43	; 0x2b
 80258f4:	bf08      	it	eq
 80258f6:	f89e 4000 	ldrbeq.w	r4, [lr]
 80258fa:	46a8      	mov	r8, r5
 80258fc:	bf08      	it	eq
 80258fe:	f106 0e02 	addeq.w	lr, r6, #2
 8025902:	e7c7      	b.n	8025894 <_strtol_l.isra.0+0x3c>
 8025904:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8025908:	2f19      	cmp	r7, #25
 802590a:	d801      	bhi.n	8025910 <_strtol_l.isra.0+0xb8>
 802590c:	3c37      	subs	r4, #55	; 0x37
 802590e:	e7e1      	b.n	80258d4 <_strtol_l.isra.0+0x7c>
 8025910:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 8025914:	2f19      	cmp	r7, #25
 8025916:	d804      	bhi.n	8025922 <_strtol_l.isra.0+0xca>
 8025918:	3c57      	subs	r4, #87	; 0x57
 802591a:	e7db      	b.n	80258d4 <_strtol_l.isra.0+0x7c>
 802591c:	f04f 36ff 	mov.w	r6, #4294967295
 8025920:	e7e4      	b.n	80258ec <_strtol_l.isra.0+0x94>
 8025922:	2e00      	cmp	r6, #0
 8025924:	da05      	bge.n	8025932 <_strtol_l.isra.0+0xda>
 8025926:	2322      	movs	r3, #34	; 0x22
 8025928:	6003      	str	r3, [r0, #0]
 802592a:	4665      	mov	r5, ip
 802592c:	b942      	cbnz	r2, 8025940 <_strtol_l.isra.0+0xe8>
 802592e:	4628      	mov	r0, r5
 8025930:	e79d      	b.n	802586e <_strtol_l.isra.0+0x16>
 8025932:	f1b8 0f00 	cmp.w	r8, #0
 8025936:	d000      	beq.n	802593a <_strtol_l.isra.0+0xe2>
 8025938:	426d      	negs	r5, r5
 802593a:	2a00      	cmp	r2, #0
 802593c:	d0f7      	beq.n	802592e <_strtol_l.isra.0+0xd6>
 802593e:	b10e      	cbz	r6, 8025944 <_strtol_l.isra.0+0xec>
 8025940:	f10e 31ff 	add.w	r1, lr, #4294967295
 8025944:	6011      	str	r1, [r2, #0]
 8025946:	e7f2      	b.n	802592e <_strtol_l.isra.0+0xd6>
 8025948:	2430      	movs	r4, #48	; 0x30
 802594a:	2b00      	cmp	r3, #0
 802594c:	d1b3      	bne.n	80258b6 <_strtol_l.isra.0+0x5e>
 802594e:	2308      	movs	r3, #8
 8025950:	e7b1      	b.n	80258b6 <_strtol_l.isra.0+0x5e>
 8025952:	2c30      	cmp	r4, #48	; 0x30
 8025954:	d0a4      	beq.n	80258a0 <_strtol_l.isra.0+0x48>
 8025956:	230a      	movs	r3, #10
 8025958:	e7ad      	b.n	80258b6 <_strtol_l.isra.0+0x5e>
 802595a:	bf00      	nop
 802595c:	080291f9 	.word	0x080291f9

08025960 <strtol>:
 8025960:	4613      	mov	r3, r2
 8025962:	460a      	mov	r2, r1
 8025964:	4601      	mov	r1, r0
 8025966:	4802      	ldr	r0, [pc, #8]	; (8025970 <strtol+0x10>)
 8025968:	6800      	ldr	r0, [r0, #0]
 802596a:	f7ff bf75 	b.w	8025858 <_strtol_l.isra.0>
 802596e:	bf00      	nop
 8025970:	200001ec 	.word	0x200001ec

08025974 <__swbuf_r>:
 8025974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025976:	460e      	mov	r6, r1
 8025978:	4614      	mov	r4, r2
 802597a:	4605      	mov	r5, r0
 802597c:	b118      	cbz	r0, 8025986 <__swbuf_r+0x12>
 802597e:	6983      	ldr	r3, [r0, #24]
 8025980:	b90b      	cbnz	r3, 8025986 <__swbuf_r+0x12>
 8025982:	f000 fa33 	bl	8025dec <__sinit>
 8025986:	4b21      	ldr	r3, [pc, #132]	; (8025a0c <__swbuf_r+0x98>)
 8025988:	429c      	cmp	r4, r3
 802598a:	d12b      	bne.n	80259e4 <__swbuf_r+0x70>
 802598c:	686c      	ldr	r4, [r5, #4]
 802598e:	69a3      	ldr	r3, [r4, #24]
 8025990:	60a3      	str	r3, [r4, #8]
 8025992:	89a3      	ldrh	r3, [r4, #12]
 8025994:	071a      	lsls	r2, r3, #28
 8025996:	d52f      	bpl.n	80259f8 <__swbuf_r+0x84>
 8025998:	6923      	ldr	r3, [r4, #16]
 802599a:	b36b      	cbz	r3, 80259f8 <__swbuf_r+0x84>
 802599c:	6923      	ldr	r3, [r4, #16]
 802599e:	6820      	ldr	r0, [r4, #0]
 80259a0:	1ac0      	subs	r0, r0, r3
 80259a2:	6963      	ldr	r3, [r4, #20]
 80259a4:	b2f6      	uxtb	r6, r6
 80259a6:	4283      	cmp	r3, r0
 80259a8:	4637      	mov	r7, r6
 80259aa:	dc04      	bgt.n	80259b6 <__swbuf_r+0x42>
 80259ac:	4621      	mov	r1, r4
 80259ae:	4628      	mov	r0, r5
 80259b0:	f000 f988 	bl	8025cc4 <_fflush_r>
 80259b4:	bb30      	cbnz	r0, 8025a04 <__swbuf_r+0x90>
 80259b6:	68a3      	ldr	r3, [r4, #8]
 80259b8:	3b01      	subs	r3, #1
 80259ba:	60a3      	str	r3, [r4, #8]
 80259bc:	6823      	ldr	r3, [r4, #0]
 80259be:	1c5a      	adds	r2, r3, #1
 80259c0:	6022      	str	r2, [r4, #0]
 80259c2:	701e      	strb	r6, [r3, #0]
 80259c4:	6963      	ldr	r3, [r4, #20]
 80259c6:	3001      	adds	r0, #1
 80259c8:	4283      	cmp	r3, r0
 80259ca:	d004      	beq.n	80259d6 <__swbuf_r+0x62>
 80259cc:	89a3      	ldrh	r3, [r4, #12]
 80259ce:	07db      	lsls	r3, r3, #31
 80259d0:	d506      	bpl.n	80259e0 <__swbuf_r+0x6c>
 80259d2:	2e0a      	cmp	r6, #10
 80259d4:	d104      	bne.n	80259e0 <__swbuf_r+0x6c>
 80259d6:	4621      	mov	r1, r4
 80259d8:	4628      	mov	r0, r5
 80259da:	f000 f973 	bl	8025cc4 <_fflush_r>
 80259de:	b988      	cbnz	r0, 8025a04 <__swbuf_r+0x90>
 80259e0:	4638      	mov	r0, r7
 80259e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80259e4:	4b0a      	ldr	r3, [pc, #40]	; (8025a10 <__swbuf_r+0x9c>)
 80259e6:	429c      	cmp	r4, r3
 80259e8:	d101      	bne.n	80259ee <__swbuf_r+0x7a>
 80259ea:	68ac      	ldr	r4, [r5, #8]
 80259ec:	e7cf      	b.n	802598e <__swbuf_r+0x1a>
 80259ee:	4b09      	ldr	r3, [pc, #36]	; (8025a14 <__swbuf_r+0xa0>)
 80259f0:	429c      	cmp	r4, r3
 80259f2:	bf08      	it	eq
 80259f4:	68ec      	ldreq	r4, [r5, #12]
 80259f6:	e7ca      	b.n	802598e <__swbuf_r+0x1a>
 80259f8:	4621      	mov	r1, r4
 80259fa:	4628      	mov	r0, r5
 80259fc:	f000 f80c 	bl	8025a18 <__swsetup_r>
 8025a00:	2800      	cmp	r0, #0
 8025a02:	d0cb      	beq.n	802599c <__swbuf_r+0x28>
 8025a04:	f04f 37ff 	mov.w	r7, #4294967295
 8025a08:	e7ea      	b.n	80259e0 <__swbuf_r+0x6c>
 8025a0a:	bf00      	nop
 8025a0c:	0802931c 	.word	0x0802931c
 8025a10:	0802933c 	.word	0x0802933c
 8025a14:	080292fc 	.word	0x080292fc

08025a18 <__swsetup_r>:
 8025a18:	4b32      	ldr	r3, [pc, #200]	; (8025ae4 <__swsetup_r+0xcc>)
 8025a1a:	b570      	push	{r4, r5, r6, lr}
 8025a1c:	681d      	ldr	r5, [r3, #0]
 8025a1e:	4606      	mov	r6, r0
 8025a20:	460c      	mov	r4, r1
 8025a22:	b125      	cbz	r5, 8025a2e <__swsetup_r+0x16>
 8025a24:	69ab      	ldr	r3, [r5, #24]
 8025a26:	b913      	cbnz	r3, 8025a2e <__swsetup_r+0x16>
 8025a28:	4628      	mov	r0, r5
 8025a2a:	f000 f9df 	bl	8025dec <__sinit>
 8025a2e:	4b2e      	ldr	r3, [pc, #184]	; (8025ae8 <__swsetup_r+0xd0>)
 8025a30:	429c      	cmp	r4, r3
 8025a32:	d10f      	bne.n	8025a54 <__swsetup_r+0x3c>
 8025a34:	686c      	ldr	r4, [r5, #4]
 8025a36:	89a3      	ldrh	r3, [r4, #12]
 8025a38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025a3c:	0719      	lsls	r1, r3, #28
 8025a3e:	d42c      	bmi.n	8025a9a <__swsetup_r+0x82>
 8025a40:	06dd      	lsls	r5, r3, #27
 8025a42:	d411      	bmi.n	8025a68 <__swsetup_r+0x50>
 8025a44:	2309      	movs	r3, #9
 8025a46:	6033      	str	r3, [r6, #0]
 8025a48:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8025a4c:	81a3      	strh	r3, [r4, #12]
 8025a4e:	f04f 30ff 	mov.w	r0, #4294967295
 8025a52:	e03e      	b.n	8025ad2 <__swsetup_r+0xba>
 8025a54:	4b25      	ldr	r3, [pc, #148]	; (8025aec <__swsetup_r+0xd4>)
 8025a56:	429c      	cmp	r4, r3
 8025a58:	d101      	bne.n	8025a5e <__swsetup_r+0x46>
 8025a5a:	68ac      	ldr	r4, [r5, #8]
 8025a5c:	e7eb      	b.n	8025a36 <__swsetup_r+0x1e>
 8025a5e:	4b24      	ldr	r3, [pc, #144]	; (8025af0 <__swsetup_r+0xd8>)
 8025a60:	429c      	cmp	r4, r3
 8025a62:	bf08      	it	eq
 8025a64:	68ec      	ldreq	r4, [r5, #12]
 8025a66:	e7e6      	b.n	8025a36 <__swsetup_r+0x1e>
 8025a68:	0758      	lsls	r0, r3, #29
 8025a6a:	d512      	bpl.n	8025a92 <__swsetup_r+0x7a>
 8025a6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025a6e:	b141      	cbz	r1, 8025a82 <__swsetup_r+0x6a>
 8025a70:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025a74:	4299      	cmp	r1, r3
 8025a76:	d002      	beq.n	8025a7e <__swsetup_r+0x66>
 8025a78:	4630      	mov	r0, r6
 8025a7a:	f7ff fa73 	bl	8024f64 <_free_r>
 8025a7e:	2300      	movs	r3, #0
 8025a80:	6363      	str	r3, [r4, #52]	; 0x34
 8025a82:	89a3      	ldrh	r3, [r4, #12]
 8025a84:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8025a88:	81a3      	strh	r3, [r4, #12]
 8025a8a:	2300      	movs	r3, #0
 8025a8c:	6063      	str	r3, [r4, #4]
 8025a8e:	6923      	ldr	r3, [r4, #16]
 8025a90:	6023      	str	r3, [r4, #0]
 8025a92:	89a3      	ldrh	r3, [r4, #12]
 8025a94:	f043 0308 	orr.w	r3, r3, #8
 8025a98:	81a3      	strh	r3, [r4, #12]
 8025a9a:	6923      	ldr	r3, [r4, #16]
 8025a9c:	b94b      	cbnz	r3, 8025ab2 <__swsetup_r+0x9a>
 8025a9e:	89a3      	ldrh	r3, [r4, #12]
 8025aa0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8025aa4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8025aa8:	d003      	beq.n	8025ab2 <__swsetup_r+0x9a>
 8025aaa:	4621      	mov	r1, r4
 8025aac:	4630      	mov	r0, r6
 8025aae:	f000 fa63 	bl	8025f78 <__smakebuf_r>
 8025ab2:	89a0      	ldrh	r0, [r4, #12]
 8025ab4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025ab8:	f010 0301 	ands.w	r3, r0, #1
 8025abc:	d00a      	beq.n	8025ad4 <__swsetup_r+0xbc>
 8025abe:	2300      	movs	r3, #0
 8025ac0:	60a3      	str	r3, [r4, #8]
 8025ac2:	6963      	ldr	r3, [r4, #20]
 8025ac4:	425b      	negs	r3, r3
 8025ac6:	61a3      	str	r3, [r4, #24]
 8025ac8:	6923      	ldr	r3, [r4, #16]
 8025aca:	b943      	cbnz	r3, 8025ade <__swsetup_r+0xc6>
 8025acc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8025ad0:	d1ba      	bne.n	8025a48 <__swsetup_r+0x30>
 8025ad2:	bd70      	pop	{r4, r5, r6, pc}
 8025ad4:	0781      	lsls	r1, r0, #30
 8025ad6:	bf58      	it	pl
 8025ad8:	6963      	ldrpl	r3, [r4, #20]
 8025ada:	60a3      	str	r3, [r4, #8]
 8025adc:	e7f4      	b.n	8025ac8 <__swsetup_r+0xb0>
 8025ade:	2000      	movs	r0, #0
 8025ae0:	e7f7      	b.n	8025ad2 <__swsetup_r+0xba>
 8025ae2:	bf00      	nop
 8025ae4:	200001ec 	.word	0x200001ec
 8025ae8:	0802931c 	.word	0x0802931c
 8025aec:	0802933c 	.word	0x0802933c
 8025af0:	080292fc 	.word	0x080292fc

08025af4 <__register_exitproc>:
 8025af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025af8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8025bb4 <__register_exitproc+0xc0>
 8025afc:	4606      	mov	r6, r0
 8025afe:	f8d8 0000 	ldr.w	r0, [r8]
 8025b02:	461f      	mov	r7, r3
 8025b04:	460d      	mov	r5, r1
 8025b06:	4691      	mov	r9, r2
 8025b08:	f000 fa0e 	bl	8025f28 <__retarget_lock_acquire_recursive>
 8025b0c:	4b25      	ldr	r3, [pc, #148]	; (8025ba4 <__register_exitproc+0xb0>)
 8025b0e:	681c      	ldr	r4, [r3, #0]
 8025b10:	b934      	cbnz	r4, 8025b20 <__register_exitproc+0x2c>
 8025b12:	4c25      	ldr	r4, [pc, #148]	; (8025ba8 <__register_exitproc+0xb4>)
 8025b14:	601c      	str	r4, [r3, #0]
 8025b16:	4b25      	ldr	r3, [pc, #148]	; (8025bac <__register_exitproc+0xb8>)
 8025b18:	b113      	cbz	r3, 8025b20 <__register_exitproc+0x2c>
 8025b1a:	681b      	ldr	r3, [r3, #0]
 8025b1c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8025b20:	6863      	ldr	r3, [r4, #4]
 8025b22:	2b1f      	cmp	r3, #31
 8025b24:	dd07      	ble.n	8025b36 <__register_exitproc+0x42>
 8025b26:	f8d8 0000 	ldr.w	r0, [r8]
 8025b2a:	f000 f9ff 	bl	8025f2c <__retarget_lock_release_recursive>
 8025b2e:	f04f 30ff 	mov.w	r0, #4294967295
 8025b32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025b36:	b34e      	cbz	r6, 8025b8c <__register_exitproc+0x98>
 8025b38:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8025b3c:	b988      	cbnz	r0, 8025b62 <__register_exitproc+0x6e>
 8025b3e:	4b1c      	ldr	r3, [pc, #112]	; (8025bb0 <__register_exitproc+0xbc>)
 8025b40:	b923      	cbnz	r3, 8025b4c <__register_exitproc+0x58>
 8025b42:	f8d8 0000 	ldr.w	r0, [r8]
 8025b46:	f000 f9f0 	bl	8025f2a <__retarget_lock_release>
 8025b4a:	e7f0      	b.n	8025b2e <__register_exitproc+0x3a>
 8025b4c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8025b50:	f7ff f9e2 	bl	8024f18 <malloc>
 8025b54:	2800      	cmp	r0, #0
 8025b56:	d0f4      	beq.n	8025b42 <__register_exitproc+0x4e>
 8025b58:	2300      	movs	r3, #0
 8025b5a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8025b5e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8025b62:	6863      	ldr	r3, [r4, #4]
 8025b64:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025b68:	2201      	movs	r2, #1
 8025b6a:	409a      	lsls	r2, r3
 8025b6c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025b70:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8025b74:	4313      	orrs	r3, r2
 8025b76:	2e02      	cmp	r6, #2
 8025b78:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8025b7c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8025b80:	bf02      	ittt	eq
 8025b82:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8025b86:	431a      	orreq	r2, r3
 8025b88:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8025b8c:	6863      	ldr	r3, [r4, #4]
 8025b8e:	f8d8 0000 	ldr.w	r0, [r8]
 8025b92:	1c5a      	adds	r2, r3, #1
 8025b94:	3302      	adds	r3, #2
 8025b96:	6062      	str	r2, [r4, #4]
 8025b98:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8025b9c:	f000 f9c6 	bl	8025f2c <__retarget_lock_release_recursive>
 8025ba0:	2000      	movs	r0, #0
 8025ba2:	e7c6      	b.n	8025b32 <__register_exitproc+0x3e>
 8025ba4:	20002f24 	.word	0x20002f24
 8025ba8:	20002e98 	.word	0x20002e98
 8025bac:	080291f4 	.word	0x080291f4
 8025bb0:	08024f19 	.word	0x08024f19
 8025bb4:	20000250 	.word	0x20000250

08025bb8 <__sflush_r>:
 8025bb8:	898a      	ldrh	r2, [r1, #12]
 8025bba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025bbe:	4605      	mov	r5, r0
 8025bc0:	0710      	lsls	r0, r2, #28
 8025bc2:	460c      	mov	r4, r1
 8025bc4:	d458      	bmi.n	8025c78 <__sflush_r+0xc0>
 8025bc6:	684b      	ldr	r3, [r1, #4]
 8025bc8:	2b00      	cmp	r3, #0
 8025bca:	dc05      	bgt.n	8025bd8 <__sflush_r+0x20>
 8025bcc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8025bce:	2b00      	cmp	r3, #0
 8025bd0:	dc02      	bgt.n	8025bd8 <__sflush_r+0x20>
 8025bd2:	2000      	movs	r0, #0
 8025bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025bd8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025bda:	2e00      	cmp	r6, #0
 8025bdc:	d0f9      	beq.n	8025bd2 <__sflush_r+0x1a>
 8025bde:	2300      	movs	r3, #0
 8025be0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8025be4:	682f      	ldr	r7, [r5, #0]
 8025be6:	602b      	str	r3, [r5, #0]
 8025be8:	d032      	beq.n	8025c50 <__sflush_r+0x98>
 8025bea:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8025bec:	89a3      	ldrh	r3, [r4, #12]
 8025bee:	075a      	lsls	r2, r3, #29
 8025bf0:	d505      	bpl.n	8025bfe <__sflush_r+0x46>
 8025bf2:	6863      	ldr	r3, [r4, #4]
 8025bf4:	1ac0      	subs	r0, r0, r3
 8025bf6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025bf8:	b10b      	cbz	r3, 8025bfe <__sflush_r+0x46>
 8025bfa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025bfc:	1ac0      	subs	r0, r0, r3
 8025bfe:	2300      	movs	r3, #0
 8025c00:	4602      	mov	r2, r0
 8025c02:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025c04:	6a21      	ldr	r1, [r4, #32]
 8025c06:	4628      	mov	r0, r5
 8025c08:	47b0      	blx	r6
 8025c0a:	1c43      	adds	r3, r0, #1
 8025c0c:	89a3      	ldrh	r3, [r4, #12]
 8025c0e:	d106      	bne.n	8025c1e <__sflush_r+0x66>
 8025c10:	6829      	ldr	r1, [r5, #0]
 8025c12:	291d      	cmp	r1, #29
 8025c14:	d82c      	bhi.n	8025c70 <__sflush_r+0xb8>
 8025c16:	4a2a      	ldr	r2, [pc, #168]	; (8025cc0 <__sflush_r+0x108>)
 8025c18:	40ca      	lsrs	r2, r1
 8025c1a:	07d6      	lsls	r6, r2, #31
 8025c1c:	d528      	bpl.n	8025c70 <__sflush_r+0xb8>
 8025c1e:	2200      	movs	r2, #0
 8025c20:	6062      	str	r2, [r4, #4]
 8025c22:	04d9      	lsls	r1, r3, #19
 8025c24:	6922      	ldr	r2, [r4, #16]
 8025c26:	6022      	str	r2, [r4, #0]
 8025c28:	d504      	bpl.n	8025c34 <__sflush_r+0x7c>
 8025c2a:	1c42      	adds	r2, r0, #1
 8025c2c:	d101      	bne.n	8025c32 <__sflush_r+0x7a>
 8025c2e:	682b      	ldr	r3, [r5, #0]
 8025c30:	b903      	cbnz	r3, 8025c34 <__sflush_r+0x7c>
 8025c32:	6560      	str	r0, [r4, #84]	; 0x54
 8025c34:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025c36:	602f      	str	r7, [r5, #0]
 8025c38:	2900      	cmp	r1, #0
 8025c3a:	d0ca      	beq.n	8025bd2 <__sflush_r+0x1a>
 8025c3c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025c40:	4299      	cmp	r1, r3
 8025c42:	d002      	beq.n	8025c4a <__sflush_r+0x92>
 8025c44:	4628      	mov	r0, r5
 8025c46:	f7ff f98d 	bl	8024f64 <_free_r>
 8025c4a:	2000      	movs	r0, #0
 8025c4c:	6360      	str	r0, [r4, #52]	; 0x34
 8025c4e:	e7c1      	b.n	8025bd4 <__sflush_r+0x1c>
 8025c50:	6a21      	ldr	r1, [r4, #32]
 8025c52:	2301      	movs	r3, #1
 8025c54:	4628      	mov	r0, r5
 8025c56:	47b0      	blx	r6
 8025c58:	1c41      	adds	r1, r0, #1
 8025c5a:	d1c7      	bne.n	8025bec <__sflush_r+0x34>
 8025c5c:	682b      	ldr	r3, [r5, #0]
 8025c5e:	2b00      	cmp	r3, #0
 8025c60:	d0c4      	beq.n	8025bec <__sflush_r+0x34>
 8025c62:	2b1d      	cmp	r3, #29
 8025c64:	d001      	beq.n	8025c6a <__sflush_r+0xb2>
 8025c66:	2b16      	cmp	r3, #22
 8025c68:	d101      	bne.n	8025c6e <__sflush_r+0xb6>
 8025c6a:	602f      	str	r7, [r5, #0]
 8025c6c:	e7b1      	b.n	8025bd2 <__sflush_r+0x1a>
 8025c6e:	89a3      	ldrh	r3, [r4, #12]
 8025c70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025c74:	81a3      	strh	r3, [r4, #12]
 8025c76:	e7ad      	b.n	8025bd4 <__sflush_r+0x1c>
 8025c78:	690f      	ldr	r7, [r1, #16]
 8025c7a:	2f00      	cmp	r7, #0
 8025c7c:	d0a9      	beq.n	8025bd2 <__sflush_r+0x1a>
 8025c7e:	0793      	lsls	r3, r2, #30
 8025c80:	680e      	ldr	r6, [r1, #0]
 8025c82:	bf08      	it	eq
 8025c84:	694b      	ldreq	r3, [r1, #20]
 8025c86:	600f      	str	r7, [r1, #0]
 8025c88:	bf18      	it	ne
 8025c8a:	2300      	movne	r3, #0
 8025c8c:	eba6 0807 	sub.w	r8, r6, r7
 8025c90:	608b      	str	r3, [r1, #8]
 8025c92:	f1b8 0f00 	cmp.w	r8, #0
 8025c96:	dd9c      	ble.n	8025bd2 <__sflush_r+0x1a>
 8025c98:	6a21      	ldr	r1, [r4, #32]
 8025c9a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8025c9c:	4643      	mov	r3, r8
 8025c9e:	463a      	mov	r2, r7
 8025ca0:	4628      	mov	r0, r5
 8025ca2:	47b0      	blx	r6
 8025ca4:	2800      	cmp	r0, #0
 8025ca6:	dc06      	bgt.n	8025cb6 <__sflush_r+0xfe>
 8025ca8:	89a3      	ldrh	r3, [r4, #12]
 8025caa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025cae:	81a3      	strh	r3, [r4, #12]
 8025cb0:	f04f 30ff 	mov.w	r0, #4294967295
 8025cb4:	e78e      	b.n	8025bd4 <__sflush_r+0x1c>
 8025cb6:	4407      	add	r7, r0
 8025cb8:	eba8 0800 	sub.w	r8, r8, r0
 8025cbc:	e7e9      	b.n	8025c92 <__sflush_r+0xda>
 8025cbe:	bf00      	nop
 8025cc0:	20400001 	.word	0x20400001

08025cc4 <_fflush_r>:
 8025cc4:	b538      	push	{r3, r4, r5, lr}
 8025cc6:	690b      	ldr	r3, [r1, #16]
 8025cc8:	4605      	mov	r5, r0
 8025cca:	460c      	mov	r4, r1
 8025ccc:	b913      	cbnz	r3, 8025cd4 <_fflush_r+0x10>
 8025cce:	2500      	movs	r5, #0
 8025cd0:	4628      	mov	r0, r5
 8025cd2:	bd38      	pop	{r3, r4, r5, pc}
 8025cd4:	b118      	cbz	r0, 8025cde <_fflush_r+0x1a>
 8025cd6:	6983      	ldr	r3, [r0, #24]
 8025cd8:	b90b      	cbnz	r3, 8025cde <_fflush_r+0x1a>
 8025cda:	f000 f887 	bl	8025dec <__sinit>
 8025cde:	4b14      	ldr	r3, [pc, #80]	; (8025d30 <_fflush_r+0x6c>)
 8025ce0:	429c      	cmp	r4, r3
 8025ce2:	d11b      	bne.n	8025d1c <_fflush_r+0x58>
 8025ce4:	686c      	ldr	r4, [r5, #4]
 8025ce6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025cea:	2b00      	cmp	r3, #0
 8025cec:	d0ef      	beq.n	8025cce <_fflush_r+0xa>
 8025cee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8025cf0:	07d0      	lsls	r0, r2, #31
 8025cf2:	d404      	bmi.n	8025cfe <_fflush_r+0x3a>
 8025cf4:	0599      	lsls	r1, r3, #22
 8025cf6:	d402      	bmi.n	8025cfe <_fflush_r+0x3a>
 8025cf8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025cfa:	f000 f915 	bl	8025f28 <__retarget_lock_acquire_recursive>
 8025cfe:	4628      	mov	r0, r5
 8025d00:	4621      	mov	r1, r4
 8025d02:	f7ff ff59 	bl	8025bb8 <__sflush_r>
 8025d06:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025d08:	07da      	lsls	r2, r3, #31
 8025d0a:	4605      	mov	r5, r0
 8025d0c:	d4e0      	bmi.n	8025cd0 <_fflush_r+0xc>
 8025d0e:	89a3      	ldrh	r3, [r4, #12]
 8025d10:	059b      	lsls	r3, r3, #22
 8025d12:	d4dd      	bmi.n	8025cd0 <_fflush_r+0xc>
 8025d14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025d16:	f000 f909 	bl	8025f2c <__retarget_lock_release_recursive>
 8025d1a:	e7d9      	b.n	8025cd0 <_fflush_r+0xc>
 8025d1c:	4b05      	ldr	r3, [pc, #20]	; (8025d34 <_fflush_r+0x70>)
 8025d1e:	429c      	cmp	r4, r3
 8025d20:	d101      	bne.n	8025d26 <_fflush_r+0x62>
 8025d22:	68ac      	ldr	r4, [r5, #8]
 8025d24:	e7df      	b.n	8025ce6 <_fflush_r+0x22>
 8025d26:	4b04      	ldr	r3, [pc, #16]	; (8025d38 <_fflush_r+0x74>)
 8025d28:	429c      	cmp	r4, r3
 8025d2a:	bf08      	it	eq
 8025d2c:	68ec      	ldreq	r4, [r5, #12]
 8025d2e:	e7da      	b.n	8025ce6 <_fflush_r+0x22>
 8025d30:	0802931c 	.word	0x0802931c
 8025d34:	0802933c 	.word	0x0802933c
 8025d38:	080292fc 	.word	0x080292fc

08025d3c <std>:
 8025d3c:	2300      	movs	r3, #0
 8025d3e:	b510      	push	{r4, lr}
 8025d40:	4604      	mov	r4, r0
 8025d42:	e9c0 3300 	strd	r3, r3, [r0]
 8025d46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025d4a:	6083      	str	r3, [r0, #8]
 8025d4c:	8181      	strh	r1, [r0, #12]
 8025d4e:	6643      	str	r3, [r0, #100]	; 0x64
 8025d50:	81c2      	strh	r2, [r0, #14]
 8025d52:	6183      	str	r3, [r0, #24]
 8025d54:	4619      	mov	r1, r3
 8025d56:	2208      	movs	r2, #8
 8025d58:	305c      	adds	r0, #92	; 0x5c
 8025d5a:	f7ff f8fb 	bl	8024f54 <memset>
 8025d5e:	4b05      	ldr	r3, [pc, #20]	; (8025d74 <std+0x38>)
 8025d60:	6263      	str	r3, [r4, #36]	; 0x24
 8025d62:	4b05      	ldr	r3, [pc, #20]	; (8025d78 <std+0x3c>)
 8025d64:	62a3      	str	r3, [r4, #40]	; 0x28
 8025d66:	4b05      	ldr	r3, [pc, #20]	; (8025d7c <std+0x40>)
 8025d68:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025d6a:	4b05      	ldr	r3, [pc, #20]	; (8025d80 <std+0x44>)
 8025d6c:	6224      	str	r4, [r4, #32]
 8025d6e:	6323      	str	r3, [r4, #48]	; 0x30
 8025d70:	bd10      	pop	{r4, pc}
 8025d72:	bf00      	nop
 8025d74:	08026011 	.word	0x08026011
 8025d78:	08026033 	.word	0x08026033
 8025d7c:	0802606b 	.word	0x0802606b
 8025d80:	0802608f 	.word	0x0802608f

08025d84 <_cleanup_r>:
 8025d84:	4901      	ldr	r1, [pc, #4]	; (8025d8c <_cleanup_r+0x8>)
 8025d86:	f000 b8af 	b.w	8025ee8 <_fwalk_reent>
 8025d8a:	bf00      	nop
 8025d8c:	08025cc5 	.word	0x08025cc5

08025d90 <__sfmoreglue>:
 8025d90:	b570      	push	{r4, r5, r6, lr}
 8025d92:	1e4a      	subs	r2, r1, #1
 8025d94:	2568      	movs	r5, #104	; 0x68
 8025d96:	4355      	muls	r5, r2
 8025d98:	460e      	mov	r6, r1
 8025d9a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8025d9e:	f7ff f931 	bl	8025004 <_malloc_r>
 8025da2:	4604      	mov	r4, r0
 8025da4:	b140      	cbz	r0, 8025db8 <__sfmoreglue+0x28>
 8025da6:	2100      	movs	r1, #0
 8025da8:	e9c0 1600 	strd	r1, r6, [r0]
 8025dac:	300c      	adds	r0, #12
 8025dae:	60a0      	str	r0, [r4, #8]
 8025db0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8025db4:	f7ff f8ce 	bl	8024f54 <memset>
 8025db8:	4620      	mov	r0, r4
 8025dba:	bd70      	pop	{r4, r5, r6, pc}

08025dbc <__sfp_lock_acquire>:
 8025dbc:	4801      	ldr	r0, [pc, #4]	; (8025dc4 <__sfp_lock_acquire+0x8>)
 8025dbe:	f000 b8b3 	b.w	8025f28 <__retarget_lock_acquire_recursive>
 8025dc2:	bf00      	nop
 8025dc4:	20013fd0 	.word	0x20013fd0

08025dc8 <__sfp_lock_release>:
 8025dc8:	4801      	ldr	r0, [pc, #4]	; (8025dd0 <__sfp_lock_release+0x8>)
 8025dca:	f000 b8af 	b.w	8025f2c <__retarget_lock_release_recursive>
 8025dce:	bf00      	nop
 8025dd0:	20013fd0 	.word	0x20013fd0

08025dd4 <__sinit_lock_acquire>:
 8025dd4:	4801      	ldr	r0, [pc, #4]	; (8025ddc <__sinit_lock_acquire+0x8>)
 8025dd6:	f000 b8a7 	b.w	8025f28 <__retarget_lock_acquire_recursive>
 8025dda:	bf00      	nop
 8025ddc:	20013fcb 	.word	0x20013fcb

08025de0 <__sinit_lock_release>:
 8025de0:	4801      	ldr	r0, [pc, #4]	; (8025de8 <__sinit_lock_release+0x8>)
 8025de2:	f000 b8a3 	b.w	8025f2c <__retarget_lock_release_recursive>
 8025de6:	bf00      	nop
 8025de8:	20013fcb 	.word	0x20013fcb

08025dec <__sinit>:
 8025dec:	b510      	push	{r4, lr}
 8025dee:	4604      	mov	r4, r0
 8025df0:	f7ff fff0 	bl	8025dd4 <__sinit_lock_acquire>
 8025df4:	69a3      	ldr	r3, [r4, #24]
 8025df6:	b11b      	cbz	r3, 8025e00 <__sinit+0x14>
 8025df8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025dfc:	f7ff bff0 	b.w	8025de0 <__sinit_lock_release>
 8025e00:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8025e04:	6523      	str	r3, [r4, #80]	; 0x50
 8025e06:	4b13      	ldr	r3, [pc, #76]	; (8025e54 <__sinit+0x68>)
 8025e08:	4a13      	ldr	r2, [pc, #76]	; (8025e58 <__sinit+0x6c>)
 8025e0a:	681b      	ldr	r3, [r3, #0]
 8025e0c:	62a2      	str	r2, [r4, #40]	; 0x28
 8025e0e:	42a3      	cmp	r3, r4
 8025e10:	bf04      	itt	eq
 8025e12:	2301      	moveq	r3, #1
 8025e14:	61a3      	streq	r3, [r4, #24]
 8025e16:	4620      	mov	r0, r4
 8025e18:	f000 f820 	bl	8025e5c <__sfp>
 8025e1c:	6060      	str	r0, [r4, #4]
 8025e1e:	4620      	mov	r0, r4
 8025e20:	f000 f81c 	bl	8025e5c <__sfp>
 8025e24:	60a0      	str	r0, [r4, #8]
 8025e26:	4620      	mov	r0, r4
 8025e28:	f000 f818 	bl	8025e5c <__sfp>
 8025e2c:	2200      	movs	r2, #0
 8025e2e:	60e0      	str	r0, [r4, #12]
 8025e30:	2104      	movs	r1, #4
 8025e32:	6860      	ldr	r0, [r4, #4]
 8025e34:	f7ff ff82 	bl	8025d3c <std>
 8025e38:	68a0      	ldr	r0, [r4, #8]
 8025e3a:	2201      	movs	r2, #1
 8025e3c:	2109      	movs	r1, #9
 8025e3e:	f7ff ff7d 	bl	8025d3c <std>
 8025e42:	68e0      	ldr	r0, [r4, #12]
 8025e44:	2202      	movs	r2, #2
 8025e46:	2112      	movs	r1, #18
 8025e48:	f7ff ff78 	bl	8025d3c <std>
 8025e4c:	2301      	movs	r3, #1
 8025e4e:	61a3      	str	r3, [r4, #24]
 8025e50:	e7d2      	b.n	8025df8 <__sinit+0xc>
 8025e52:	bf00      	nop
 8025e54:	080291bc 	.word	0x080291bc
 8025e58:	08025d85 	.word	0x08025d85

08025e5c <__sfp>:
 8025e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025e5e:	4607      	mov	r7, r0
 8025e60:	f7ff ffac 	bl	8025dbc <__sfp_lock_acquire>
 8025e64:	4b1e      	ldr	r3, [pc, #120]	; (8025ee0 <__sfp+0x84>)
 8025e66:	681e      	ldr	r6, [r3, #0]
 8025e68:	69b3      	ldr	r3, [r6, #24]
 8025e6a:	b913      	cbnz	r3, 8025e72 <__sfp+0x16>
 8025e6c:	4630      	mov	r0, r6
 8025e6e:	f7ff ffbd 	bl	8025dec <__sinit>
 8025e72:	3648      	adds	r6, #72	; 0x48
 8025e74:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8025e78:	3b01      	subs	r3, #1
 8025e7a:	d503      	bpl.n	8025e84 <__sfp+0x28>
 8025e7c:	6833      	ldr	r3, [r6, #0]
 8025e7e:	b30b      	cbz	r3, 8025ec4 <__sfp+0x68>
 8025e80:	6836      	ldr	r6, [r6, #0]
 8025e82:	e7f7      	b.n	8025e74 <__sfp+0x18>
 8025e84:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8025e88:	b9d5      	cbnz	r5, 8025ec0 <__sfp+0x64>
 8025e8a:	4b16      	ldr	r3, [pc, #88]	; (8025ee4 <__sfp+0x88>)
 8025e8c:	60e3      	str	r3, [r4, #12]
 8025e8e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8025e92:	6665      	str	r5, [r4, #100]	; 0x64
 8025e94:	f000 f847 	bl	8025f26 <__retarget_lock_init_recursive>
 8025e98:	f7ff ff96 	bl	8025dc8 <__sfp_lock_release>
 8025e9c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8025ea0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8025ea4:	6025      	str	r5, [r4, #0]
 8025ea6:	61a5      	str	r5, [r4, #24]
 8025ea8:	2208      	movs	r2, #8
 8025eaa:	4629      	mov	r1, r5
 8025eac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8025eb0:	f7ff f850 	bl	8024f54 <memset>
 8025eb4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8025eb8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8025ebc:	4620      	mov	r0, r4
 8025ebe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025ec0:	3468      	adds	r4, #104	; 0x68
 8025ec2:	e7d9      	b.n	8025e78 <__sfp+0x1c>
 8025ec4:	2104      	movs	r1, #4
 8025ec6:	4638      	mov	r0, r7
 8025ec8:	f7ff ff62 	bl	8025d90 <__sfmoreglue>
 8025ecc:	4604      	mov	r4, r0
 8025ece:	6030      	str	r0, [r6, #0]
 8025ed0:	2800      	cmp	r0, #0
 8025ed2:	d1d5      	bne.n	8025e80 <__sfp+0x24>
 8025ed4:	f7ff ff78 	bl	8025dc8 <__sfp_lock_release>
 8025ed8:	230c      	movs	r3, #12
 8025eda:	603b      	str	r3, [r7, #0]
 8025edc:	e7ee      	b.n	8025ebc <__sfp+0x60>
 8025ede:	bf00      	nop
 8025ee0:	080291bc 	.word	0x080291bc
 8025ee4:	ffff0001 	.word	0xffff0001

08025ee8 <_fwalk_reent>:
 8025ee8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025eec:	4606      	mov	r6, r0
 8025eee:	4688      	mov	r8, r1
 8025ef0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8025ef4:	2700      	movs	r7, #0
 8025ef6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025efa:	f1b9 0901 	subs.w	r9, r9, #1
 8025efe:	d505      	bpl.n	8025f0c <_fwalk_reent+0x24>
 8025f00:	6824      	ldr	r4, [r4, #0]
 8025f02:	2c00      	cmp	r4, #0
 8025f04:	d1f7      	bne.n	8025ef6 <_fwalk_reent+0xe>
 8025f06:	4638      	mov	r0, r7
 8025f08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f0c:	89ab      	ldrh	r3, [r5, #12]
 8025f0e:	2b01      	cmp	r3, #1
 8025f10:	d907      	bls.n	8025f22 <_fwalk_reent+0x3a>
 8025f12:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025f16:	3301      	adds	r3, #1
 8025f18:	d003      	beq.n	8025f22 <_fwalk_reent+0x3a>
 8025f1a:	4629      	mov	r1, r5
 8025f1c:	4630      	mov	r0, r6
 8025f1e:	47c0      	blx	r8
 8025f20:	4307      	orrs	r7, r0
 8025f22:	3568      	adds	r5, #104	; 0x68
 8025f24:	e7e9      	b.n	8025efa <_fwalk_reent+0x12>

08025f26 <__retarget_lock_init_recursive>:
 8025f26:	4770      	bx	lr

08025f28 <__retarget_lock_acquire_recursive>:
 8025f28:	4770      	bx	lr

08025f2a <__retarget_lock_release>:
 8025f2a:	4770      	bx	lr

08025f2c <__retarget_lock_release_recursive>:
 8025f2c:	4770      	bx	lr

08025f2e <__swhatbuf_r>:
 8025f2e:	b570      	push	{r4, r5, r6, lr}
 8025f30:	460e      	mov	r6, r1
 8025f32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f36:	2900      	cmp	r1, #0
 8025f38:	b096      	sub	sp, #88	; 0x58
 8025f3a:	4614      	mov	r4, r2
 8025f3c:	461d      	mov	r5, r3
 8025f3e:	da07      	bge.n	8025f50 <__swhatbuf_r+0x22>
 8025f40:	2300      	movs	r3, #0
 8025f42:	602b      	str	r3, [r5, #0]
 8025f44:	89b3      	ldrh	r3, [r6, #12]
 8025f46:	061a      	lsls	r2, r3, #24
 8025f48:	d410      	bmi.n	8025f6c <__swhatbuf_r+0x3e>
 8025f4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8025f4e:	e00e      	b.n	8025f6e <__swhatbuf_r+0x40>
 8025f50:	466a      	mov	r2, sp
 8025f52:	f000 f8c3 	bl	80260dc <_fstat_r>
 8025f56:	2800      	cmp	r0, #0
 8025f58:	dbf2      	blt.n	8025f40 <__swhatbuf_r+0x12>
 8025f5a:	9a01      	ldr	r2, [sp, #4]
 8025f5c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8025f60:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8025f64:	425a      	negs	r2, r3
 8025f66:	415a      	adcs	r2, r3
 8025f68:	602a      	str	r2, [r5, #0]
 8025f6a:	e7ee      	b.n	8025f4a <__swhatbuf_r+0x1c>
 8025f6c:	2340      	movs	r3, #64	; 0x40
 8025f6e:	2000      	movs	r0, #0
 8025f70:	6023      	str	r3, [r4, #0]
 8025f72:	b016      	add	sp, #88	; 0x58
 8025f74:	bd70      	pop	{r4, r5, r6, pc}
	...

08025f78 <__smakebuf_r>:
 8025f78:	898b      	ldrh	r3, [r1, #12]
 8025f7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8025f7c:	079d      	lsls	r5, r3, #30
 8025f7e:	4606      	mov	r6, r0
 8025f80:	460c      	mov	r4, r1
 8025f82:	d507      	bpl.n	8025f94 <__smakebuf_r+0x1c>
 8025f84:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8025f88:	6023      	str	r3, [r4, #0]
 8025f8a:	6123      	str	r3, [r4, #16]
 8025f8c:	2301      	movs	r3, #1
 8025f8e:	6163      	str	r3, [r4, #20]
 8025f90:	b002      	add	sp, #8
 8025f92:	bd70      	pop	{r4, r5, r6, pc}
 8025f94:	ab01      	add	r3, sp, #4
 8025f96:	466a      	mov	r2, sp
 8025f98:	f7ff ffc9 	bl	8025f2e <__swhatbuf_r>
 8025f9c:	9900      	ldr	r1, [sp, #0]
 8025f9e:	4605      	mov	r5, r0
 8025fa0:	4630      	mov	r0, r6
 8025fa2:	f7ff f82f 	bl	8025004 <_malloc_r>
 8025fa6:	b948      	cbnz	r0, 8025fbc <__smakebuf_r+0x44>
 8025fa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025fac:	059a      	lsls	r2, r3, #22
 8025fae:	d4ef      	bmi.n	8025f90 <__smakebuf_r+0x18>
 8025fb0:	f023 0303 	bic.w	r3, r3, #3
 8025fb4:	f043 0302 	orr.w	r3, r3, #2
 8025fb8:	81a3      	strh	r3, [r4, #12]
 8025fba:	e7e3      	b.n	8025f84 <__smakebuf_r+0xc>
 8025fbc:	4b0d      	ldr	r3, [pc, #52]	; (8025ff4 <__smakebuf_r+0x7c>)
 8025fbe:	62b3      	str	r3, [r6, #40]	; 0x28
 8025fc0:	89a3      	ldrh	r3, [r4, #12]
 8025fc2:	6020      	str	r0, [r4, #0]
 8025fc4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8025fc8:	81a3      	strh	r3, [r4, #12]
 8025fca:	9b00      	ldr	r3, [sp, #0]
 8025fcc:	6163      	str	r3, [r4, #20]
 8025fce:	9b01      	ldr	r3, [sp, #4]
 8025fd0:	6120      	str	r0, [r4, #16]
 8025fd2:	b15b      	cbz	r3, 8025fec <__smakebuf_r+0x74>
 8025fd4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025fd8:	4630      	mov	r0, r6
 8025fda:	f000 f891 	bl	8026100 <_isatty_r>
 8025fde:	b128      	cbz	r0, 8025fec <__smakebuf_r+0x74>
 8025fe0:	89a3      	ldrh	r3, [r4, #12]
 8025fe2:	f023 0303 	bic.w	r3, r3, #3
 8025fe6:	f043 0301 	orr.w	r3, r3, #1
 8025fea:	81a3      	strh	r3, [r4, #12]
 8025fec:	89a0      	ldrh	r0, [r4, #12]
 8025fee:	4305      	orrs	r5, r0
 8025ff0:	81a5      	strh	r5, [r4, #12]
 8025ff2:	e7cd      	b.n	8025f90 <__smakebuf_r+0x18>
 8025ff4:	08025d85 	.word	0x08025d85

08025ff8 <__malloc_lock>:
 8025ff8:	4801      	ldr	r0, [pc, #4]	; (8026000 <__malloc_lock+0x8>)
 8025ffa:	f7ff bf95 	b.w	8025f28 <__retarget_lock_acquire_recursive>
 8025ffe:	bf00      	nop
 8026000:	20013fcc 	.word	0x20013fcc

08026004 <__malloc_unlock>:
 8026004:	4801      	ldr	r0, [pc, #4]	; (802600c <__malloc_unlock+0x8>)
 8026006:	f7ff bf91 	b.w	8025f2c <__retarget_lock_release_recursive>
 802600a:	bf00      	nop
 802600c:	20013fcc 	.word	0x20013fcc

08026010 <__sread>:
 8026010:	b510      	push	{r4, lr}
 8026012:	460c      	mov	r4, r1
 8026014:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026018:	f000 f894 	bl	8026144 <_read_r>
 802601c:	2800      	cmp	r0, #0
 802601e:	bfab      	itete	ge
 8026020:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8026022:	89a3      	ldrhlt	r3, [r4, #12]
 8026024:	181b      	addge	r3, r3, r0
 8026026:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802602a:	bfac      	ite	ge
 802602c:	6563      	strge	r3, [r4, #84]	; 0x54
 802602e:	81a3      	strhlt	r3, [r4, #12]
 8026030:	bd10      	pop	{r4, pc}

08026032 <__swrite>:
 8026032:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026036:	461f      	mov	r7, r3
 8026038:	898b      	ldrh	r3, [r1, #12]
 802603a:	05db      	lsls	r3, r3, #23
 802603c:	4605      	mov	r5, r0
 802603e:	460c      	mov	r4, r1
 8026040:	4616      	mov	r6, r2
 8026042:	d505      	bpl.n	8026050 <__swrite+0x1e>
 8026044:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026048:	2302      	movs	r3, #2
 802604a:	2200      	movs	r2, #0
 802604c:	f000 f868 	bl	8026120 <_lseek_r>
 8026050:	89a3      	ldrh	r3, [r4, #12]
 8026052:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026056:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802605a:	81a3      	strh	r3, [r4, #12]
 802605c:	4632      	mov	r2, r6
 802605e:	463b      	mov	r3, r7
 8026060:	4628      	mov	r0, r5
 8026062:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8026066:	f000 b817 	b.w	8026098 <_write_r>

0802606a <__sseek>:
 802606a:	b510      	push	{r4, lr}
 802606c:	460c      	mov	r4, r1
 802606e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026072:	f000 f855 	bl	8026120 <_lseek_r>
 8026076:	1c43      	adds	r3, r0, #1
 8026078:	89a3      	ldrh	r3, [r4, #12]
 802607a:	bf15      	itete	ne
 802607c:	6560      	strne	r0, [r4, #84]	; 0x54
 802607e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8026082:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8026086:	81a3      	strheq	r3, [r4, #12]
 8026088:	bf18      	it	ne
 802608a:	81a3      	strhne	r3, [r4, #12]
 802608c:	bd10      	pop	{r4, pc}

0802608e <__sclose>:
 802608e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026092:	f000 b813 	b.w	80260bc <_close_r>
	...

08026098 <_write_r>:
 8026098:	b538      	push	{r3, r4, r5, lr}
 802609a:	4d07      	ldr	r5, [pc, #28]	; (80260b8 <_write_r+0x20>)
 802609c:	4604      	mov	r4, r0
 802609e:	4608      	mov	r0, r1
 80260a0:	4611      	mov	r1, r2
 80260a2:	2200      	movs	r2, #0
 80260a4:	602a      	str	r2, [r5, #0]
 80260a6:	461a      	mov	r2, r3
 80260a8:	f7da fd8a 	bl	8000bc0 <_write>
 80260ac:	1c43      	adds	r3, r0, #1
 80260ae:	d102      	bne.n	80260b6 <_write_r+0x1e>
 80260b0:	682b      	ldr	r3, [r5, #0]
 80260b2:	b103      	cbz	r3, 80260b6 <_write_r+0x1e>
 80260b4:	6023      	str	r3, [r4, #0]
 80260b6:	bd38      	pop	{r3, r4, r5, pc}
 80260b8:	20013fd4 	.word	0x20013fd4

080260bc <_close_r>:
 80260bc:	b538      	push	{r3, r4, r5, lr}
 80260be:	4d06      	ldr	r5, [pc, #24]	; (80260d8 <_close_r+0x1c>)
 80260c0:	2300      	movs	r3, #0
 80260c2:	4604      	mov	r4, r0
 80260c4:	4608      	mov	r0, r1
 80260c6:	602b      	str	r3, [r5, #0]
 80260c8:	f7da fd8c 	bl	8000be4 <_close>
 80260cc:	1c43      	adds	r3, r0, #1
 80260ce:	d102      	bne.n	80260d6 <_close_r+0x1a>
 80260d0:	682b      	ldr	r3, [r5, #0]
 80260d2:	b103      	cbz	r3, 80260d6 <_close_r+0x1a>
 80260d4:	6023      	str	r3, [r4, #0]
 80260d6:	bd38      	pop	{r3, r4, r5, pc}
 80260d8:	20013fd4 	.word	0x20013fd4

080260dc <_fstat_r>:
 80260dc:	b538      	push	{r3, r4, r5, lr}
 80260de:	4d07      	ldr	r5, [pc, #28]	; (80260fc <_fstat_r+0x20>)
 80260e0:	2300      	movs	r3, #0
 80260e2:	4604      	mov	r4, r0
 80260e4:	4608      	mov	r0, r1
 80260e6:	4611      	mov	r1, r2
 80260e8:	602b      	str	r3, [r5, #0]
 80260ea:	f7da fd7f 	bl	8000bec <_fstat>
 80260ee:	1c43      	adds	r3, r0, #1
 80260f0:	d102      	bne.n	80260f8 <_fstat_r+0x1c>
 80260f2:	682b      	ldr	r3, [r5, #0]
 80260f4:	b103      	cbz	r3, 80260f8 <_fstat_r+0x1c>
 80260f6:	6023      	str	r3, [r4, #0]
 80260f8:	bd38      	pop	{r3, r4, r5, pc}
 80260fa:	bf00      	nop
 80260fc:	20013fd4 	.word	0x20013fd4

08026100 <_isatty_r>:
 8026100:	b538      	push	{r3, r4, r5, lr}
 8026102:	4d06      	ldr	r5, [pc, #24]	; (802611c <_isatty_r+0x1c>)
 8026104:	2300      	movs	r3, #0
 8026106:	4604      	mov	r4, r0
 8026108:	4608      	mov	r0, r1
 802610a:	602b      	str	r3, [r5, #0]
 802610c:	f7da fd74 	bl	8000bf8 <_isatty>
 8026110:	1c43      	adds	r3, r0, #1
 8026112:	d102      	bne.n	802611a <_isatty_r+0x1a>
 8026114:	682b      	ldr	r3, [r5, #0]
 8026116:	b103      	cbz	r3, 802611a <_isatty_r+0x1a>
 8026118:	6023      	str	r3, [r4, #0]
 802611a:	bd38      	pop	{r3, r4, r5, pc}
 802611c:	20013fd4 	.word	0x20013fd4

08026120 <_lseek_r>:
 8026120:	b538      	push	{r3, r4, r5, lr}
 8026122:	4d07      	ldr	r5, [pc, #28]	; (8026140 <_lseek_r+0x20>)
 8026124:	4604      	mov	r4, r0
 8026126:	4608      	mov	r0, r1
 8026128:	4611      	mov	r1, r2
 802612a:	2200      	movs	r2, #0
 802612c:	602a      	str	r2, [r5, #0]
 802612e:	461a      	mov	r2, r3
 8026130:	f7da fd64 	bl	8000bfc <_lseek>
 8026134:	1c43      	adds	r3, r0, #1
 8026136:	d102      	bne.n	802613e <_lseek_r+0x1e>
 8026138:	682b      	ldr	r3, [r5, #0]
 802613a:	b103      	cbz	r3, 802613e <_lseek_r+0x1e>
 802613c:	6023      	str	r3, [r4, #0]
 802613e:	bd38      	pop	{r3, r4, r5, pc}
 8026140:	20013fd4 	.word	0x20013fd4

08026144 <_read_r>:
 8026144:	b538      	push	{r3, r4, r5, lr}
 8026146:	4d07      	ldr	r5, [pc, #28]	; (8026164 <_read_r+0x20>)
 8026148:	4604      	mov	r4, r0
 802614a:	4608      	mov	r0, r1
 802614c:	4611      	mov	r1, r2
 802614e:	2200      	movs	r2, #0
 8026150:	602a      	str	r2, [r5, #0]
 8026152:	461a      	mov	r2, r3
 8026154:	f7da fd26 	bl	8000ba4 <_read>
 8026158:	1c43      	adds	r3, r0, #1
 802615a:	d102      	bne.n	8026162 <_read_r+0x1e>
 802615c:	682b      	ldr	r3, [r5, #0]
 802615e:	b103      	cbz	r3, 8026162 <_read_r+0x1e>
 8026160:	6023      	str	r3, [r4, #0]
 8026162:	bd38      	pop	{r3, r4, r5, pc}
 8026164:	20013fd4 	.word	0x20013fd4

08026168 <_init>:
 8026168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802616a:	bf00      	nop
 802616c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802616e:	bc08      	pop	{r3}
 8026170:	469e      	mov	lr, r3
 8026172:	4770      	bx	lr

08026174 <_fini>:
 8026174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026176:	bf00      	nop
 8026178:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802617a:	bc08      	pop	{r3}
 802617c:	469e      	mov	lr, r3
 802617e:	4770      	bx	lr
