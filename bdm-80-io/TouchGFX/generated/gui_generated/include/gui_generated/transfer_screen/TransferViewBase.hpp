/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TRANSFERVIEWBASE_HPP
#define TRANSFERVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/transfer_screen/TransferPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/AnimationTextureMapper.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class TransferViewBase : public touchgfx::View<TransferPresenter>
{
public:
    TransferViewBase();
    virtual ~TransferViewBase() {}
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void slider_callback(int value)
    {
        // Override and implement this function in Transfer
    }

    virtual void slider_release_callback(int value)
    {
        // Override and implement this function in Transfer
    }

    virtual void demo_callback()
    {
        // Override and implement this function in Transfer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::ButtonWithLabel bf;
    touchgfx::ButtonWithLabel be;
    touchgfx::ButtonWithLabel bd;
    touchgfx::ButtonWithLabel bc;
    touchgfx::ButtonWithLabel bb;
    touchgfx::ButtonWithLabel ba;
    touchgfx::ButtonWithLabel b9;
    touchgfx::ButtonWithLabel b8;
    touchgfx::ButtonWithLabel b7;
    touchgfx::ButtonWithLabel b6;
    touchgfx::ButtonWithLabel b5;
    touchgfx::ButtonWithLabel b4;
    touchgfx::ButtonWithLabel b3;
    touchgfx::ButtonWithLabel b2;
    touchgfx::ButtonWithLabel b1;
    touchgfx::ClickListener< touchgfx::ButtonWithLabel > b0;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1_1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1_1_1_1_1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1_1_1_1_1_1_1_1;
    touchgfx::Button button1;
    touchgfx::ToggleButton toggleButton1_1;
    touchgfx::TextArea textArea1;
    touchgfx::Box box2;
    touchgfx::AnimationTextureMapper textureMapper1;
    touchgfx::TextArea textArea2;
    touchgfx::BoxProgress boxProgress1;

private:

    /*
     * Delay Variable Declarations
     */
    static const uint16_t WAIT_DURATION = 9;
    uint16_t waitCounter;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TransferViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TRANSFERVIEWBASE_HPP
